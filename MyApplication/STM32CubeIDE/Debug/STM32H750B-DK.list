
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00029200  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003444  900294a0  900294a0  0002d4a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000024  9002c8e4  9002c8e4  000308e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002c908  9002c908  000e465c  2**0
                  CONTENTS
  6 .ARM          00000008  9002c908  9002c908  00030908  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002c910  9002c910  000e465c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002c910  9002c910  00030910  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002c928  9002c928  00030928  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  9002c930  00031000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_ScratchbufferA 00000100  24000180  9002ca98  00031180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferB 00000100  24000280  9002cb98  00031280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00022274  24000380  9002cc98  00031380  2**3
                  ALLOC
 14 ._user_heap_stack 00002004  240225f4  9002cc98  000315f4  2**0
                  ALLOC
 15 .ARM.attributes 0000002e  00000000  00000000  000e465c  2**0
                  CONTENTS, READONLY
 16 FontFlashSection 000012b4  90200000  90200000  00032000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TextFlashSection 00000028  902012b4  902012b4  000332b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 ExtFlashSection 000b1380  902012dc  902012dc  000332dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000e5000  2**2
                  ALLOC
 20 .debug_line   000706ad  00000000  00000000  000e468a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  00154d37  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   000d97f3  00000000  00000000  00154d9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 0001775e  00000000  00000000  0022e58e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 000035f8  00000000  00000000  00245cf0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    0019fba1  00000000  00000000  002492e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 00006535  00000000  00000000  003e8e89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  000492cc  00000000  00000000  003ef3be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  0043868a  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000a620  00000000  00000000  0043874c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 0003004f  00000000  00000000  00442d6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000380 	.word	0x24000380
900002bc:	00000000 	.word	0x00000000
900002c0:	90029488 	.word	0x90029488

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24000384 	.word	0x24000384
900002dc:	90029488 	.word	0x90029488

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b99d 	b.w	90000a54 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f835 	bl	90000798 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f828 	bl	90000798 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f817 	bl	90000798 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f809 	bl	90000798 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__udivmoddi4>:
90000798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000079c:	9d08      	ldr	r5, [sp, #32]
9000079e:	460c      	mov	r4, r1
900007a0:	2b00      	cmp	r3, #0
900007a2:	d14e      	bne.n	90000842 <__udivmoddi4+0xaa>
900007a4:	4694      	mov	ip, r2
900007a6:	458c      	cmp	ip, r1
900007a8:	4686      	mov	lr, r0
900007aa:	fab2 f282 	clz	r2, r2
900007ae:	d962      	bls.n	90000876 <__udivmoddi4+0xde>
900007b0:	b14a      	cbz	r2, 900007c6 <__udivmoddi4+0x2e>
900007b2:	f1c2 0320 	rsb	r3, r2, #32
900007b6:	4091      	lsls	r1, r2
900007b8:	fa20 f303 	lsr.w	r3, r0, r3
900007bc:	fa0c fc02 	lsl.w	ip, ip, r2
900007c0:	4319      	orrs	r1, r3
900007c2:	fa00 fe02 	lsl.w	lr, r0, r2
900007c6:	ea4f 471c 	mov.w	r7, ip, lsr #16
900007ca:	fa1f f68c 	uxth.w	r6, ip
900007ce:	fbb1 f4f7 	udiv	r4, r1, r7
900007d2:	ea4f 431e 	mov.w	r3, lr, lsr #16
900007d6:	fb07 1114 	mls	r1, r7, r4, r1
900007da:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900007de:	fb04 f106 	mul.w	r1, r4, r6
900007e2:	4299      	cmp	r1, r3
900007e4:	d90a      	bls.n	900007fc <__udivmoddi4+0x64>
900007e6:	eb1c 0303 	adds.w	r3, ip, r3
900007ea:	f104 30ff 	add.w	r0, r4, #4294967295
900007ee:	f080 8112 	bcs.w	90000a16 <__udivmoddi4+0x27e>
900007f2:	4299      	cmp	r1, r3
900007f4:	f240 810f 	bls.w	90000a16 <__udivmoddi4+0x27e>
900007f8:	3c02      	subs	r4, #2
900007fa:	4463      	add	r3, ip
900007fc:	1a59      	subs	r1, r3, r1
900007fe:	fa1f f38e 	uxth.w	r3, lr
90000802:	fbb1 f0f7 	udiv	r0, r1, r7
90000806:	fb07 1110 	mls	r1, r7, r0, r1
9000080a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000080e:	fb00 f606 	mul.w	r6, r0, r6
90000812:	429e      	cmp	r6, r3
90000814:	d90a      	bls.n	9000082c <__udivmoddi4+0x94>
90000816:	eb1c 0303 	adds.w	r3, ip, r3
9000081a:	f100 31ff 	add.w	r1, r0, #4294967295
9000081e:	f080 80fc 	bcs.w	90000a1a <__udivmoddi4+0x282>
90000822:	429e      	cmp	r6, r3
90000824:	f240 80f9 	bls.w	90000a1a <__udivmoddi4+0x282>
90000828:	4463      	add	r3, ip
9000082a:	3802      	subs	r0, #2
9000082c:	1b9b      	subs	r3, r3, r6
9000082e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
90000832:	2100      	movs	r1, #0
90000834:	b11d      	cbz	r5, 9000083e <__udivmoddi4+0xa6>
90000836:	40d3      	lsrs	r3, r2
90000838:	2200      	movs	r2, #0
9000083a:	e9c5 3200 	strd	r3, r2, [r5]
9000083e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000842:	428b      	cmp	r3, r1
90000844:	d905      	bls.n	90000852 <__udivmoddi4+0xba>
90000846:	b10d      	cbz	r5, 9000084c <__udivmoddi4+0xb4>
90000848:	e9c5 0100 	strd	r0, r1, [r5]
9000084c:	2100      	movs	r1, #0
9000084e:	4608      	mov	r0, r1
90000850:	e7f5      	b.n	9000083e <__udivmoddi4+0xa6>
90000852:	fab3 f183 	clz	r1, r3
90000856:	2900      	cmp	r1, #0
90000858:	d146      	bne.n	900008e8 <__udivmoddi4+0x150>
9000085a:	42a3      	cmp	r3, r4
9000085c:	d302      	bcc.n	90000864 <__udivmoddi4+0xcc>
9000085e:	4290      	cmp	r0, r2
90000860:	f0c0 80f0 	bcc.w	90000a44 <__udivmoddi4+0x2ac>
90000864:	1a86      	subs	r6, r0, r2
90000866:	eb64 0303 	sbc.w	r3, r4, r3
9000086a:	2001      	movs	r0, #1
9000086c:	2d00      	cmp	r5, #0
9000086e:	d0e6      	beq.n	9000083e <__udivmoddi4+0xa6>
90000870:	e9c5 6300 	strd	r6, r3, [r5]
90000874:	e7e3      	b.n	9000083e <__udivmoddi4+0xa6>
90000876:	2a00      	cmp	r2, #0
90000878:	f040 8090 	bne.w	9000099c <__udivmoddi4+0x204>
9000087c:	eba1 040c 	sub.w	r4, r1, ip
90000880:	ea4f 481c 	mov.w	r8, ip, lsr #16
90000884:	fa1f f78c 	uxth.w	r7, ip
90000888:	2101      	movs	r1, #1
9000088a:	fbb4 f6f8 	udiv	r6, r4, r8
9000088e:	ea4f 431e 	mov.w	r3, lr, lsr #16
90000892:	fb08 4416 	mls	r4, r8, r6, r4
90000896:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
9000089a:	fb07 f006 	mul.w	r0, r7, r6
9000089e:	4298      	cmp	r0, r3
900008a0:	d908      	bls.n	900008b4 <__udivmoddi4+0x11c>
900008a2:	eb1c 0303 	adds.w	r3, ip, r3
900008a6:	f106 34ff 	add.w	r4, r6, #4294967295
900008aa:	d202      	bcs.n	900008b2 <__udivmoddi4+0x11a>
900008ac:	4298      	cmp	r0, r3
900008ae:	f200 80cd 	bhi.w	90000a4c <__udivmoddi4+0x2b4>
900008b2:	4626      	mov	r6, r4
900008b4:	1a1c      	subs	r4, r3, r0
900008b6:	fa1f f38e 	uxth.w	r3, lr
900008ba:	fbb4 f0f8 	udiv	r0, r4, r8
900008be:	fb08 4410 	mls	r4, r8, r0, r4
900008c2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008c6:	fb00 f707 	mul.w	r7, r0, r7
900008ca:	429f      	cmp	r7, r3
900008cc:	d908      	bls.n	900008e0 <__udivmoddi4+0x148>
900008ce:	eb1c 0303 	adds.w	r3, ip, r3
900008d2:	f100 34ff 	add.w	r4, r0, #4294967295
900008d6:	d202      	bcs.n	900008de <__udivmoddi4+0x146>
900008d8:	429f      	cmp	r7, r3
900008da:	f200 80b0 	bhi.w	90000a3e <__udivmoddi4+0x2a6>
900008de:	4620      	mov	r0, r4
900008e0:	1bdb      	subs	r3, r3, r7
900008e2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
900008e6:	e7a5      	b.n	90000834 <__udivmoddi4+0x9c>
900008e8:	f1c1 0620 	rsb	r6, r1, #32
900008ec:	408b      	lsls	r3, r1
900008ee:	fa22 f706 	lsr.w	r7, r2, r6
900008f2:	431f      	orrs	r7, r3
900008f4:	fa20 fc06 	lsr.w	ip, r0, r6
900008f8:	fa04 f301 	lsl.w	r3, r4, r1
900008fc:	ea43 030c 	orr.w	r3, r3, ip
90000900:	40f4      	lsrs	r4, r6
90000902:	fa00 f801 	lsl.w	r8, r0, r1
90000906:	0c38      	lsrs	r0, r7, #16
90000908:	ea4f 4913 	mov.w	r9, r3, lsr #16
9000090c:	fbb4 fef0 	udiv	lr, r4, r0
90000910:	fa1f fc87 	uxth.w	ip, r7
90000914:	fb00 441e 	mls	r4, r0, lr, r4
90000918:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
9000091c:	fb0e f90c 	mul.w	r9, lr, ip
90000920:	45a1      	cmp	r9, r4
90000922:	fa02 f201 	lsl.w	r2, r2, r1
90000926:	d90a      	bls.n	9000093e <__udivmoddi4+0x1a6>
90000928:	193c      	adds	r4, r7, r4
9000092a:	f10e 3aff 	add.w	sl, lr, #4294967295
9000092e:	f080 8084 	bcs.w	90000a3a <__udivmoddi4+0x2a2>
90000932:	45a1      	cmp	r9, r4
90000934:	f240 8081 	bls.w	90000a3a <__udivmoddi4+0x2a2>
90000938:	f1ae 0e02 	sub.w	lr, lr, #2
9000093c:	443c      	add	r4, r7
9000093e:	eba4 0409 	sub.w	r4, r4, r9
90000942:	fa1f f983 	uxth.w	r9, r3
90000946:	fbb4 f3f0 	udiv	r3, r4, r0
9000094a:	fb00 4413 	mls	r4, r0, r3, r4
9000094e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
90000952:	fb03 fc0c 	mul.w	ip, r3, ip
90000956:	45a4      	cmp	ip, r4
90000958:	d907      	bls.n	9000096a <__udivmoddi4+0x1d2>
9000095a:	193c      	adds	r4, r7, r4
9000095c:	f103 30ff 	add.w	r0, r3, #4294967295
90000960:	d267      	bcs.n	90000a32 <__udivmoddi4+0x29a>
90000962:	45a4      	cmp	ip, r4
90000964:	d965      	bls.n	90000a32 <__udivmoddi4+0x29a>
90000966:	3b02      	subs	r3, #2
90000968:	443c      	add	r4, r7
9000096a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
9000096e:	fba0 9302 	umull	r9, r3, r0, r2
90000972:	eba4 040c 	sub.w	r4, r4, ip
90000976:	429c      	cmp	r4, r3
90000978:	46ce      	mov	lr, r9
9000097a:	469c      	mov	ip, r3
9000097c:	d351      	bcc.n	90000a22 <__udivmoddi4+0x28a>
9000097e:	d04e      	beq.n	90000a1e <__udivmoddi4+0x286>
90000980:	b155      	cbz	r5, 90000998 <__udivmoddi4+0x200>
90000982:	ebb8 030e 	subs.w	r3, r8, lr
90000986:	eb64 040c 	sbc.w	r4, r4, ip
9000098a:	fa04 f606 	lsl.w	r6, r4, r6
9000098e:	40cb      	lsrs	r3, r1
90000990:	431e      	orrs	r6, r3
90000992:	40cc      	lsrs	r4, r1
90000994:	e9c5 6400 	strd	r6, r4, [r5]
90000998:	2100      	movs	r1, #0
9000099a:	e750      	b.n	9000083e <__udivmoddi4+0xa6>
9000099c:	f1c2 0320 	rsb	r3, r2, #32
900009a0:	fa20 f103 	lsr.w	r1, r0, r3
900009a4:	fa0c fc02 	lsl.w	ip, ip, r2
900009a8:	fa24 f303 	lsr.w	r3, r4, r3
900009ac:	4094      	lsls	r4, r2
900009ae:	430c      	orrs	r4, r1
900009b0:	ea4f 481c 	mov.w	r8, ip, lsr #16
900009b4:	fa00 fe02 	lsl.w	lr, r0, r2
900009b8:	fa1f f78c 	uxth.w	r7, ip
900009bc:	fbb3 f0f8 	udiv	r0, r3, r8
900009c0:	fb08 3110 	mls	r1, r8, r0, r3
900009c4:	0c23      	lsrs	r3, r4, #16
900009c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900009ca:	fb00 f107 	mul.w	r1, r0, r7
900009ce:	4299      	cmp	r1, r3
900009d0:	d908      	bls.n	900009e4 <__udivmoddi4+0x24c>
900009d2:	eb1c 0303 	adds.w	r3, ip, r3
900009d6:	f100 36ff 	add.w	r6, r0, #4294967295
900009da:	d22c      	bcs.n	90000a36 <__udivmoddi4+0x29e>
900009dc:	4299      	cmp	r1, r3
900009de:	d92a      	bls.n	90000a36 <__udivmoddi4+0x29e>
900009e0:	3802      	subs	r0, #2
900009e2:	4463      	add	r3, ip
900009e4:	1a5b      	subs	r3, r3, r1
900009e6:	b2a4      	uxth	r4, r4
900009e8:	fbb3 f1f8 	udiv	r1, r3, r8
900009ec:	fb08 3311 	mls	r3, r8, r1, r3
900009f0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
900009f4:	fb01 f307 	mul.w	r3, r1, r7
900009f8:	42a3      	cmp	r3, r4
900009fa:	d908      	bls.n	90000a0e <__udivmoddi4+0x276>
900009fc:	eb1c 0404 	adds.w	r4, ip, r4
90000a00:	f101 36ff 	add.w	r6, r1, #4294967295
90000a04:	d213      	bcs.n	90000a2e <__udivmoddi4+0x296>
90000a06:	42a3      	cmp	r3, r4
90000a08:	d911      	bls.n	90000a2e <__udivmoddi4+0x296>
90000a0a:	3902      	subs	r1, #2
90000a0c:	4464      	add	r4, ip
90000a0e:	1ae4      	subs	r4, r4, r3
90000a10:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
90000a14:	e739      	b.n	9000088a <__udivmoddi4+0xf2>
90000a16:	4604      	mov	r4, r0
90000a18:	e6f0      	b.n	900007fc <__udivmoddi4+0x64>
90000a1a:	4608      	mov	r0, r1
90000a1c:	e706      	b.n	9000082c <__udivmoddi4+0x94>
90000a1e:	45c8      	cmp	r8, r9
90000a20:	d2ae      	bcs.n	90000980 <__udivmoddi4+0x1e8>
90000a22:	ebb9 0e02 	subs.w	lr, r9, r2
90000a26:	eb63 0c07 	sbc.w	ip, r3, r7
90000a2a:	3801      	subs	r0, #1
90000a2c:	e7a8      	b.n	90000980 <__udivmoddi4+0x1e8>
90000a2e:	4631      	mov	r1, r6
90000a30:	e7ed      	b.n	90000a0e <__udivmoddi4+0x276>
90000a32:	4603      	mov	r3, r0
90000a34:	e799      	b.n	9000096a <__udivmoddi4+0x1d2>
90000a36:	4630      	mov	r0, r6
90000a38:	e7d4      	b.n	900009e4 <__udivmoddi4+0x24c>
90000a3a:	46d6      	mov	lr, sl
90000a3c:	e77f      	b.n	9000093e <__udivmoddi4+0x1a6>
90000a3e:	4463      	add	r3, ip
90000a40:	3802      	subs	r0, #2
90000a42:	e74d      	b.n	900008e0 <__udivmoddi4+0x148>
90000a44:	4606      	mov	r6, r0
90000a46:	4623      	mov	r3, r4
90000a48:	4608      	mov	r0, r1
90000a4a:	e70f      	b.n	9000086c <__udivmoddi4+0xd4>
90000a4c:	3e02      	subs	r6, #2
90000a4e:	4463      	add	r3, ip
90000a50:	e730      	b.n	900008b4 <__udivmoddi4+0x11c>
90000a52:	bf00      	nop

90000a54 <__aeabi_idiv0>:
90000a54:	4770      	bx	lr
90000a56:	bf00      	nop

90000a58 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000a58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000a90 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000a5c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000a5e:	e003      	b.n	90000a68 <LoopCopyDataInit>

90000a60 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000a60:	4b0c      	ldr	r3, [pc, #48]	@ (90000a94 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000a62:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000a64:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000a66:	3104      	adds	r1, #4

90000a68 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000a68:	480b      	ldr	r0, [pc, #44]	@ (90000a98 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000a6a:	4b0c      	ldr	r3, [pc, #48]	@ (90000a9c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000a6c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000a6e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000a70:	d3f6      	bcc.n	90000a60 <CopyDataInit>
  ldr  r2, =_sbss
90000a72:	4a0b      	ldr	r2, [pc, #44]	@ (90000aa0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000a74:	e002      	b.n	90000a7c <LoopFillZerobss>

90000a76 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000a76:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000a78:	f842 3b04 	str.w	r3, [r2], #4

90000a7c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000a7c:	4b09      	ldr	r3, [pc, #36]	@ (90000aa4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000a7e:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000a80:	d3f9      	bcc.n	90000a76 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000a82:	f006 fabd 	bl	90007000 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000a86:	f028 f823 	bl	90028ad0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000a8a:	f002 fecd 	bl	90003828 <main>
  bx  lr    
90000a8e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000a90:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000a94:	9002c930 	.word	0x9002c930
  ldr  r0, =_sdata
90000a98:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000a9c:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000aa0:	24000380 	.word	0x24000380
  ldr  r3, = _ebss
90000aa4:	240225f4 	.word	0x240225f4

90000aa8 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000aa8:	e7fe      	b.n	90000aa8 <ADC3_IRQHandler>
	...

90000aac <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000aac:	4770      	bx	lr
90000aae:	bf00      	nop

90000ab0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000ab0:	4770      	bx	lr
90000ab2:	bf00      	nop

90000ab4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000ab4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000ab6:	f002 f919 	bl	90002cec <touchgfx_components_init>
    touchgfx_init();
}
90000aba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000abe:	f002 b897 	b.w	90002bf0 <touchgfx_init>
90000ac2:	bf00      	nop

90000ac4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000ac4:	f002 b914 	b.w	90002cf0 <touchgfx_taskEntry>

90000ac8 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000ac8:	6840      	ldr	r0, [r0, #4]
    }
90000aca:	4770      	bx	lr

90000acc <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000acc:	6041      	str	r1, [r0, #4]
    }
90000ace:	4770      	bx	lr

90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad0:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ad4:	4b08      	ldr	r3, [pc, #32]	@ (90000af8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000ad6:	4a09      	ldr	r2, [pc, #36]	@ (90000afc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad8:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000adc:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000ae0:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ae4:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000ae8:	430a      	orrs	r2, r1
90000aea:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000aee:	681a      	ldr	r2, [r3, #0]
90000af0:	f042 0201 	orr.w	r2, r2, #1
90000af4:	601a      	str	r2, [r3, #0]
}
90000af6:	4770      	bx	lr
90000af8:	e0001000 	.word	0xe0001000
90000afc:	c5acce55 	.word	0xc5acce55

90000b00 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b00:	1a52      	subs	r2, r2, r1
90000b02:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b06:	fbb2 f0f3 	udiv	r0, r2, r3
90000b0a:	4770      	bx	lr

90000b0c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b0c:	4b01      	ldr	r3, [pc, #4]	@ (90000b14 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b0e:	6858      	ldr	r0, [r3, #4]
}
90000b10:	4770      	bx	lr
90000b12:	bf00      	nop
90000b14:	e0001000 	.word	0xe0001000

90000b18 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b1c:	b510      	push	{r4, lr}
90000b1e:	4604      	mov	r4, r0
90000b20:	210c      	movs	r1, #12
90000b22:	f027 f8b1 	bl	90027c88 <_ZdlPvj>
90000b26:	4620      	mov	r0, r4
90000b28:	bd10      	pop	{r4, pc}
90000b2a:	bf00      	nop

90000b2c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b2c:	6803      	ldr	r3, [r0, #0]
90000b2e:	4a0c      	ldr	r2, [pc, #48]	@ (90000b60 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b30:	691b      	ldr	r3, [r3, #16]
{
90000b32:	b510      	push	{r4, lr}
90000b34:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000b36:	b149      	cbz	r1, 90000b4c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b38:	4293      	cmp	r3, r2
90000b3a:	d10d      	bne.n	90000b58 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000b3c:	4b09      	ldr	r3, [pc, #36]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b3e:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b40:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000b42:	6863      	ldr	r3, [r4, #4]
90000b44:	1a9b      	subs	r3, r3, r2
90000b46:	4403      	add	r3, r0
90000b48:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000b4a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000b4c:	4293      	cmp	r3, r2
90000b4e:	d105      	bne.n	90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000b50:	4b04      	ldr	r3, [pc, #16]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b52:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000b54:	60a0      	str	r0, [r4, #8]
}
90000b56:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b58:	4798      	blx	r3
90000b5a:	e7f1      	b.n	90000b40 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000b5c:	4798      	blx	r3
90000b5e:	e7f9      	b.n	90000b54 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000b60:	90000b0d 	.word	0x90000b0d
90000b64:	e0001000 	.word	0xe0001000

90000b68 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000b68:	4770      	bx	lr
90000b6a:	bf00      	nop
90000b6c:	0000      	movs	r0, r0
	...

90000b70 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000b70:	b500      	push	{lr}
90000b72:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000b74:	2208      	movs	r2, #8
90000b76:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000b78:	2000      	movs	r0, #0
90000b7a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000b7c:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000b98 <_ZN20STM32TouchController4initEv+0x28>
90000b80:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000b84:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000b88:	f006 f94c 	bl	90006e24 <BSP_TS_Init>
}
90000b8c:	b005      	add	sp, #20
90000b8e:	f85d fb04 	ldr.w	pc, [sp], #4
90000b92:	bf00      	nop
90000b94:	f3af 8000 	nop.w
90000b98:	000001e0 	.word	0x000001e0
90000b9c:	00000110 	.word	0x00000110

90000ba0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000ba0:	b530      	push	{r4, r5, lr}
90000ba2:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000ba4:	2000      	movs	r0, #0
{
90000ba6:	460d      	mov	r5, r1
90000ba8:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000baa:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000bac:	9001      	str	r0, [sp, #4]
90000bae:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000bb2:	f006 f9c5 	bl	90006f40 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000bb6:	9801      	ldr	r0, [sp, #4]
90000bb8:	b120      	cbz	r0, 90000bc4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000bba:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000bbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000bc0:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000bc2:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000bc4:	b005      	add	sp, #20
90000bc6:	bd30      	pop	{r4, r5, pc}

90000bc8 <_ZN20STM32TouchControllerD0Ev>:
90000bc8:	b510      	push	{r4, lr}
90000bca:	4604      	mov	r4, r0
90000bcc:	2104      	movs	r1, #4
90000bce:	f027 f85b 	bl	90027c88 <_ZdlPvj>
90000bd2:	4620      	mov	r0, r4
90000bd4:	bd10      	pop	{r4, pc}
90000bd6:	bf00      	nop

90000bd8 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
90000bd8:	b508      	push	{r3, lr}
    for (int id = 0; id <= 4; id++)
90000bda:	2300      	movs	r3, #0
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
90000bdc:	2b03      	cmp	r3, #3
90000bde:	d82b      	bhi.n	90000c38 <_ZN8touchgfx4GPIO4initEv+0x60>
90000be0:	e8df f003 	tbb	[pc, r3]
90000be4:	020c1620 	.word	0x020c1620
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000be8:	2140      	movs	r1, #64	@ 0x40
90000bea:	4814      	ldr	r0, [pc, #80]	@ (90000c3c <_ZN8touchgfx4GPIO4initEv+0x64>)
90000bec:	f006 ff12 	bl	90007a14 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000bf0:	2801      	cmp	r0, #1
90000bf2:	d101      	bne.n	90000bf8 <_ZN8touchgfx4GPIO4initEv+0x20>
            GPIO_InvertedLevels[id] = 1;
90000bf4:	4b12      	ldr	r3, [pc, #72]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000bf6:	60d8      	str	r0, [r3, #12]
    for (int id = 0; id <= 4; id++)
90000bf8:	2304      	movs	r3, #4
90000bfa:	e7ef      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000bfc:	2140      	movs	r1, #64	@ 0x40
90000bfe:	4811      	ldr	r0, [pc, #68]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c00:	f006 ff08 	bl	90007a14 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c04:	2801      	cmp	r0, #1
90000c06:	d101      	bne.n	90000c0c <_ZN8touchgfx4GPIO4initEv+0x34>
            GPIO_InvertedLevels[id] = 1;
90000c08:	4b0d      	ldr	r3, [pc, #52]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c0a:	6098      	str	r0, [r3, #8]
    for (int id = 0; id <= 4; id++)
90000c0c:	2303      	movs	r3, #3
90000c0e:	e7e5      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c10:	2180      	movs	r1, #128	@ 0x80
90000c12:	480c      	ldr	r0, [pc, #48]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c14:	f006 fefe 	bl	90007a14 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c18:	2801      	cmp	r0, #1
90000c1a:	d101      	bne.n	90000c20 <_ZN8touchgfx4GPIO4initEv+0x48>
            GPIO_InvertedLevels[id] = 1;
90000c1c:	4b08      	ldr	r3, [pc, #32]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c1e:	6058      	str	r0, [r3, #4]
    for (int id = 0; id <= 4; id++)
90000c20:	2302      	movs	r3, #2
90000c22:	e7db      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c24:	2108      	movs	r1, #8
90000c26:	4808      	ldr	r0, [pc, #32]	@ (90000c48 <_ZN8touchgfx4GPIO4initEv+0x70>)
90000c28:	f006 fef4 	bl	90007a14 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c2c:	2801      	cmp	r0, #1
90000c2e:	d101      	bne.n	90000c34 <_ZN8touchgfx4GPIO4initEv+0x5c>
            GPIO_InvertedLevels[id] = 1;
90000c30:	4b03      	ldr	r3, [pc, #12]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c32:	6018      	str	r0, [r3, #0]
    for (int id = 0; id <= 4; id++)
90000c34:	2301      	movs	r3, #1
90000c36:	e7d1      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
}
90000c38:	bd08      	pop	{r3, pc}
90000c3a:	bf00      	nop
90000c3c:	58020000 	.word	0x58020000
90000c40:	2400039c 	.word	0x2400039c
90000c44:	58020400 	.word	0x58020400
90000c48:	58021800 	.word	0x58021800

90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c4c:	2803      	cmp	r0, #3
90000c4e:	d827      	bhi.n	90000ca0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c50:	e8df f000 	tbb	[pc, r0]
90000c54:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000c58:	4b12      	ldr	r3, [pc, #72]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c5a:	2140      	movs	r1, #64	@ 0x40
90000c5c:	4812      	ldr	r0, [pc, #72]	@ (90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000c5e:	68da      	ldr	r2, [r3, #12]
90000c60:	fab2 f282 	clz	r2, r2
90000c64:	0952      	lsrs	r2, r2, #5
90000c66:	f006 bedb 	b.w	90007a20 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000c6a:	4b0e      	ldr	r3, [pc, #56]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c6c:	2140      	movs	r1, #64	@ 0x40
90000c6e:	480f      	ldr	r0, [pc, #60]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c70:	689a      	ldr	r2, [r3, #8]
90000c72:	fab2 f282 	clz	r2, r2
90000c76:	0952      	lsrs	r2, r2, #5
90000c78:	f006 bed2 	b.w	90007a20 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000c7c:	4b09      	ldr	r3, [pc, #36]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c7e:	2180      	movs	r1, #128	@ 0x80
90000c80:	480a      	ldr	r0, [pc, #40]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c82:	685a      	ldr	r2, [r3, #4]
90000c84:	fab2 f282 	clz	r2, r2
90000c88:	0952      	lsrs	r2, r2, #5
90000c8a:	f006 bec9 	b.w	90007a20 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000c8e:	4b05      	ldr	r3, [pc, #20]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c90:	2108      	movs	r1, #8
90000c92:	4807      	ldr	r0, [pc, #28]	@ (90000cb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000c94:	681a      	ldr	r2, [r3, #0]
90000c96:	fab2 f282 	clz	r2, r2
90000c9a:	0952      	lsrs	r2, r2, #5
90000c9c:	f006 bec0 	b.w	90007a20 <HAL_GPIO_WritePin>
}
90000ca0:	4770      	bx	lr
90000ca2:	bf00      	nop
90000ca4:	2400039c 	.word	0x2400039c
90000ca8:	58020000 	.word	0x58020000
90000cac:	58020400 	.word	0x58020400
90000cb0:	58021800 	.word	0x58021800

90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cb4:	2803      	cmp	r0, #3
90000cb6:	d827      	bhi.n	90000d08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000cb8:	e8df f000 	tbb	[pc, r0]
90000cbc:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cc0:	4b12      	ldr	r3, [pc, #72]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cc2:	2140      	movs	r1, #64	@ 0x40
90000cc4:	4812      	ldr	r0, [pc, #72]	@ (90000d10 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000cc6:	68da      	ldr	r2, [r3, #12]
90000cc8:	3a00      	subs	r2, #0
90000cca:	bf18      	it	ne
90000ccc:	2201      	movne	r2, #1
90000cce:	f006 bea7 	b.w	90007a20 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000cd2:	4b0e      	ldr	r3, [pc, #56]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cd4:	2140      	movs	r1, #64	@ 0x40
90000cd6:	480f      	ldr	r0, [pc, #60]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cd8:	689a      	ldr	r2, [r3, #8]
90000cda:	3a00      	subs	r2, #0
90000cdc:	bf18      	it	ne
90000cde:	2201      	movne	r2, #1
90000ce0:	f006 be9e 	b.w	90007a20 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000ce4:	4b09      	ldr	r3, [pc, #36]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000ce6:	2180      	movs	r1, #128	@ 0x80
90000ce8:	480a      	ldr	r0, [pc, #40]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cea:	685a      	ldr	r2, [r3, #4]
90000cec:	3a00      	subs	r2, #0
90000cee:	bf18      	it	ne
90000cf0:	2201      	movne	r2, #1
90000cf2:	f006 be95 	b.w	90007a20 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000cf6:	4b05      	ldr	r3, [pc, #20]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cf8:	2108      	movs	r1, #8
90000cfa:	4807      	ldr	r0, [pc, #28]	@ (90000d18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000cfc:	681a      	ldr	r2, [r3, #0]
90000cfe:	3a00      	subs	r2, #0
90000d00:	bf18      	it	ne
90000d02:	2201      	movne	r2, #1
90000d04:	f006 be8c 	b.w	90007a20 <HAL_GPIO_WritePin>
}
90000d08:	4770      	bx	lr
90000d0a:	bf00      	nop
90000d0c:	2400039c 	.word	0x2400039c
90000d10:	58020000 	.word	0x58020000
90000d14:	58020400 	.word	0x58020400
90000d18:	58021800 	.word	0x58021800

90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d1c:	2803      	cmp	r0, #3
90000d1e:	d813      	bhi.n	90000d48 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d20:	e8df f000 	tbb	[pc, r0]
90000d24:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d28:	2140      	movs	r1, #64	@ 0x40
90000d2a:	4808      	ldr	r0, [pc, #32]	@ (90000d4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d2c:	f006 be7c 	b.w	90007a28 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d30:	2140      	movs	r1, #64	@ 0x40
90000d32:	4807      	ldr	r0, [pc, #28]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d34:	f006 be78 	b.w	90007a28 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d38:	2180      	movs	r1, #128	@ 0x80
90000d3a:	4805      	ldr	r0, [pc, #20]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d3c:	f006 be74 	b.w	90007a28 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d40:	2108      	movs	r1, #8
90000d42:	4804      	ldr	r0, [pc, #16]	@ (90000d54 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d44:	f006 be70 	b.w	90007a28 <HAL_GPIO_TogglePin>
}
90000d48:	4770      	bx	lr
90000d4a:	bf00      	nop
90000d4c:	58020000 	.word	0x58020000
90000d50:	58020400 	.word	0x58020400
90000d54:	58021800 	.word	0x58021800

90000d58 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d58:	2000      	movs	r0, #0
90000d5a:	4770      	bx	lr

90000d5c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d5c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d5e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d62:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d66:	4770      	bx	lr

90000d68 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d68:	2000      	movs	r0, #0
90000d6a:	4770      	bx	lr

90000d6c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d6c:	1e0a      	subs	r2, r1, #0
90000d6e:	4b03      	ldr	r3, [pc, #12]	@ (90000d7c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d70:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d72:	bf18      	it	ne
90000d74:	2201      	movne	r2, #1
90000d76:	701a      	strb	r2, [r3, #0]
    }
90000d78:	4770      	bx	lr
90000d7a:	bf00      	nop
90000d7c:	240218b3 	.word	0x240218b3

90000d80 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d80:	2000      	movs	r0, #0
90000d82:	4770      	bx	lr

90000d84 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d84:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d86:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d88:	b103      	cbz	r3, 90000d8c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d8a:	4718      	bx	r3
        }
    }
90000d8c:	4770      	bx	lr
90000d8e:	bf00      	nop

90000d90 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000d90:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000d94:	4770      	bx	lr
90000d96:	bf00      	nop

90000d98 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000d98:	4770      	bx	lr
90000d9a:	bf00      	nop

90000d9c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000d9c:	b510      	push	{r4, lr}
90000d9e:	4604      	mov	r4, r0
        swapFrameBuffers();
90000da0:	f00f fdec 	bl	9001097c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000da4:	6823      	ldr	r3, [r4, #0]
90000da6:	4620      	mov	r0, r4
90000da8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
90000dac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000db0:	4718      	bx	r3
90000db2:	bf00      	nop

90000db4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000db4:	f002 b8b2 	b.w	90002f1c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000db8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000db8:	f002 b8b6 	b.w	90002f28 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dbc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dbc:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dbe:	f002 f951 	bl	90003064 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000dc2:	4812      	ldr	r0, [pc, #72]	@ (90000e0c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000dc4:	2300      	movs	r3, #0
90000dc6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dca:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dce:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dd2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000dd6:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dda:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000dde:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de2:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000de6:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de8:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000dec:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dee:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000df2:	1c5a      	adds	r2, r3, #1
90000df4:	d1f8      	bne.n	90000de8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000df6:	f1ac 0c20 	sub.w	ip, ip, #32
90000dfa:	f11c 0f20 	cmn.w	ip, #32
90000dfe:	d1f0      	bne.n	90000de2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e00:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e04:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e08:	bd10      	pop	{r4, pc}
90000e0a:	bf00      	nop
90000e0c:	e000ed00 	.word	0xe000ed00

90000e10 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e10:	f002 b860 	b.w	90002ed4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e14 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e14:	f002 b9a8 	b.w	90003168 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e18 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e18:	f002 b992 	b.w	90003140 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e1c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e1c:	f002 b864 	b.w	90002ee8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e20:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e22:	4b09      	ldr	r3, [pc, #36]	@ (90000e48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e24:	881b      	ldrh	r3, [r3, #0]
90000e26:	428b      	cmp	r3, r1
90000e28:	d808      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e2a:	4b08      	ldr	r3, [pc, #32]	@ (90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e2c:	881b      	ldrh	r3, [r3, #0]
90000e2e:	4293      	cmp	r3, r2
90000e30:	d804      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e32:	4807      	ldr	r0, [pc, #28]	@ (90000e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e34:	4b07      	ldr	r3, [pc, #28]	@ (90000e54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e36:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e38:	801a      	strh	r2, [r3, #0]
    }
90000e3a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e3c:	4b06      	ldr	r3, [pc, #24]	@ (90000e58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e3e:	219e      	movs	r1, #158	@ 0x9e
90000e40:	4a06      	ldr	r2, [pc, #24]	@ (90000e5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e42:	4807      	ldr	r0, [pc, #28]	@ (90000e60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e44:	f027 fa98 	bl	90028378 <__assert_func>
90000e48:	240218a8 	.word	0x240218a8
90000e4c:	240218aa 	.word	0x240218aa
90000e50:	240218ae 	.word	0x240218ae
90000e54:	240218b0 	.word	0x240218b0
90000e58:	90029520 	.word	0x90029520
90000e5c:	90029584 	.word	0x90029584
90000e60:	900295c8 	.word	0x900295c8

90000e64 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e64:	f00f b914 	b.w	90010090 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e68 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e68:	f00e bfe7 	b.w	9000fe3a <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e6c <_ZN11TouchGFXHALD0Ev>:
90000e6c:	b510      	push	{r4, lr}
90000e6e:	4604      	mov	r4, r0
90000e70:	2188      	movs	r1, #136	@ 0x88
90000e72:	f026 ff09 	bl	90027c88 <_ZdlPvj>
90000e76:	4620      	mov	r0, r4
90000e78:	bd10      	pop	{r4, pc}
90000e7a:	bf00      	nop

90000e7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000e7c:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e80:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
90000e84:	4b0b      	ldr	r3, [pc, #44]	@ (90000eb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e86:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e88:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e8a:	d00b      	beq.n	90000ea4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e8c:	b94a      	cbnz	r2, 90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e8e:	4a0a      	ldr	r2, [pc, #40]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90000e90:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e94:	4909      	ldr	r1, [pc, #36]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e96:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90000e98:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e9c:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000e9e:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ea0:	8013      	strh	r3, [r2, #0]
        }
    }
90000ea2:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000ea4:	2a00      	cmp	r2, #0
90000ea6:	d0fc      	beq.n	90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ea8:	4a03      	ldr	r2, [pc, #12]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000eaa:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eae:	4903      	ldr	r1, [pc, #12]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000eb0:	e7f1      	b.n	90000e96 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000eb2:	bf00      	nop
90000eb4:	240218ac 	.word	0x240218ac
90000eb8:	240218aa 	.word	0x240218aa
90000ebc:	240218a8 	.word	0x240218a8

90000ec0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ec0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ec2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000ec6:	b118      	cbz	r0, 90000ed0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000ec8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000eca:	6803      	ldr	r3, [r0, #0]
90000ecc:	681b      	ldr	r3, [r3, #0]
90000ece:	4718      	bx	r3
    }
90000ed0:	4770      	bx	lr
90000ed2:	bf00      	nop

90000ed4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000ed4:	6840      	ldr	r0, [r0, #4]
90000ed6:	4a04      	ldr	r2, [pc, #16]	@ (90000ee8 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000ed8:	6803      	ldr	r3, [r0, #0]
90000eda:	699b      	ldr	r3, [r3, #24]
90000edc:	4293      	cmp	r3, r2
90000ede:	d101      	bne.n	90000ee4 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ee0:	2000      	movs	r0, #0
90000ee2:	4770      	bx	lr
        return dma.getDMAType();
90000ee4:	4718      	bx	r3
90000ee6:	bf00      	nop
90000ee8:	90000d59 	.word	0x90000d59

90000eec <_ZN11TouchGFXHAL10initializeEv>:
{
90000eec:	b538      	push	{r3, r4, r5, lr}
90000eee:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000ef0:	f002 fabc 	bl	9000346c <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000ef4:	4a0b      	ldr	r2, [pc, #44]	@ (90000f24 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000ef6:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000ef8:	490b      	ldr	r1, [pc, #44]	@ (90000f28 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000efa:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90000efe:	4293      	cmp	r3, r2
90000f00:	d10d      	bne.n	90000f1e <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f02:	4b0a      	ldr	r3, [pc, #40]	@ (90000f2c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f04:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f06:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f08:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f0a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
90000f0e:	4628      	mov	r0, r5
90000f10:	f7ff fdde 	bl	90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f14:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f16:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f18:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f1c:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f1e:	4620      	mov	r0, r4
90000f20:	4798      	blx	r3
90000f22:	e7f2      	b.n	90000f0a <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f24:	90000d6d 	.word	0x90000d6d
90000f28:	d0000000 	.word	0xd0000000
90000f2c:	240218b3 	.word	0x240218b3

90000f30 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f30:	b1a9      	cbz	r1, 90000f5e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f32:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f34:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f36:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f38:	bf18      	it	ne
90000f3a:	2201      	movne	r2, #1
90000f3c:	490c      	ldr	r1, [pc, #48]	@ (90000f70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f3e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f40:	6802      	ldr	r2, [r0, #0]
90000f42:	490c      	ldr	r1, [pc, #48]	@ (90000f74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f44:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
90000f48:	428a      	cmp	r2, r1
90000f4a:	d106      	bne.n	90000f5a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f4c:	1e19      	subs	r1, r3, #0
90000f4e:	4a0a      	ldr	r2, [pc, #40]	@ (90000f78 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f50:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f52:	bf18      	it	ne
90000f54:	2101      	movne	r1, #1
90000f56:	7011      	strb	r1, [r2, #0]
90000f58:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f5a:	4619      	mov	r1, r3
90000f5c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f5e:	4b07      	ldr	r3, [pc, #28]	@ (90000f7c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f60:	f240 21d2 	movw	r1, #722	@ 0x2d2
90000f64:	4a06      	ldr	r2, [pc, #24]	@ (90000f80 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f66:	4807      	ldr	r0, [pc, #28]	@ (90000f84 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f68:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f6a:	f027 fa05 	bl	90028378 <__assert_func>
90000f6e:	bf00      	nop
90000f70:	240218b2 	.word	0x240218b2
90000f74:	90000d6d 	.word	0x90000d6d
90000f78:	240218b3 	.word	0x240218b3
90000f7c:	90029610 	.word	0x90029610
90000f80:	90029648 	.word	0x90029648
90000f84:	900295c8 	.word	0x900295c8

90000f88 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f88:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f8a:	6803      	ldr	r3, [r0, #0]
{
90000f8c:	4604      	mov	r4, r0
90000f8e:	4d14      	ldr	r5, [pc, #80]	@ (90000fe0 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000f90:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90000f94:	4798      	blx	r3
    enableInterrupts();
90000f96:	6823      	ldr	r3, [r4, #0]
90000f98:	4620      	mov	r0, r4
90000f9a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90000f9c:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000f9e:	f001 f9ed 	bl	9000237c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fa2:	6823      	ldr	r3, [r4, #0]
90000fa4:	4620      	mov	r0, r4
90000fa6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fa8:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000faa:	2201      	movs	r2, #1
90000fac:	2180      	movs	r1, #128	@ 0x80
90000fae:	480d      	ldr	r0, [pc, #52]	@ (90000fe4 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000fb0:	f006 fd36 	bl	90007a20 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fb4:	2201      	movs	r2, #1
90000fb6:	480c      	ldr	r0, [pc, #48]	@ (90000fe8 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000fb8:	4611      	mov	r1, r2
90000fba:	f006 fd31 	bl	90007a20 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fbe:	f001 f9dd 	bl	9000237c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fc2:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fc4:	4620      	mov	r0, r4
90000fc6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fc8:	42ab      	cmp	r3, r5
90000fca:	d107      	bne.n	90000fdc <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90000fcc:	f00f fcd6 	bl	9001097c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fd0:	6823      	ldr	r3, [r4, #0]
90000fd2:	4620      	mov	r0, r4
90000fd4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90000fd8:	4798      	blx	r3
    }
90000fda:	e7f0      	b.n	90000fbe <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fdc:	4798      	blx	r3
90000fde:	e7ee      	b.n	90000fbe <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fe0:	90000d9d 	.word	0x90000d9d
90000fe4:	58020c00 	.word	0x58020c00
90000fe8:	58022800 	.word	0x58022800

90000fec <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90000fec:	4601      	mov	r1, r0
    {
90000fee:	b508      	push	{r3, lr}
        return instance;
90000ff0:	4b05      	ldr	r3, [pc, #20]	@ (90001008 <IdleTaskHook+0x1c>)
90000ff2:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90000ff4:	b121      	cbz	r1, 90001000 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90000ff6:	2101      	movs	r1, #1
90000ff8:	f00f fcda 	bl	900109b0 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000ffc:	2001      	movs	r0, #1
90000ffe:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001000:	f00f fcd6 	bl	900109b0 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001004:	2001      	movs	r0, #1
90001006:	bd08      	pop	{r3, pc}
90001008:	240218b4 	.word	0x240218b4

9000100c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000100c:	6940      	ldr	r0, [r0, #20]
9000100e:	4770      	bx	lr

90001010 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001010:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001014:	4770      	bx	lr
90001016:	bf00      	nop

90001018 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001018:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000101a:	b10b      	cbz	r3, 90001020 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000101c:	2001      	movs	r0, #1
}
9000101e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001020:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001022:	3800      	subs	r0, #0
90001024:	bf18      	it	ne
90001026:	2001      	movne	r0, #1
90001028:	4770      	bx	lr
9000102a:	bf00      	nop

9000102c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000102c:	6880      	ldr	r0, [r0, #8]
9000102e:	4770      	bx	lr

90001030 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001030:	4770      	bx	lr
90001032:	bf00      	nop

90001034 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001034:	3004      	adds	r0, #4
{
90001036:	468c      	mov	ip, r1
    *data = videoInfo;
90001038:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000103a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000103e:	4770      	bx	lr

90001040 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001040:	4770      	bx	lr
90001042:	bf00      	nop

90001044 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001044:	b508      	push	{r3, lr}
    assert(0);
90001046:	4a03      	ldr	r2, [pc, #12]	@ (90001054 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001048:	f240 11f3 	movw	r1, #499	@ 0x1f3
9000104c:	4b02      	ldr	r3, [pc, #8]	@ (90001058 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000104e:	4803      	ldr	r0, [pc, #12]	@ (9000105c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001050:	f027 f992 	bl	90028378 <__assert_func>
90001054:	90029774 	.word	0x90029774
90001058:	90029770 	.word	0x90029770
9000105c:	900297d0 	.word	0x900297d0

90001060 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001060:	b510      	push	{r4, lr}
90001062:	4604      	mov	r4, r0
90001064:	2148      	movs	r1, #72	@ 0x48
90001066:	f026 fe0f 	bl	90027c88 <_ZdlPvj>
9000106a:	4620      	mov	r0, r4
9000106c:	bd10      	pop	{r4, pc}
9000106e:	bf00      	nop

90001070 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001072:	6803      	ldr	r3, [r0, #0]
90001074:	2901      	cmp	r1, #1
90001076:	4d30      	ldr	r5, [pc, #192]	@ (90001138 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
90001078:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000107a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000107c:	bf38      	it	cc
9000107e:	2101      	movcc	r1, #1
90001080:	42ab      	cmp	r3, r5
90001082:	460e      	mov	r6, r1
90001084:	d13f      	bne.n	90001106 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
90001086:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001088:	42a9      	cmp	r1, r5
9000108a:	d947      	bls.n	9000111c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
9000108c:	1e6b      	subs	r3, r5, #1
9000108e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90001090:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90001092:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90001096:	b338      	cbz	r0, 900010e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
90001098:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000109a:	2b0f      	cmp	r3, #15
9000109c:	d940      	bls.n	90001120 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
9000109e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010a0:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010a4:	68db      	ldr	r3, [r3, #12]
900010a6:	4631      	mov	r1, r6
900010a8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010aa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010ac:	2210      	movs	r2, #16
900010ae:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010b0:	6803      	ldr	r3, [r0, #0]
900010b2:	691b      	ldr	r3, [r3, #16]
900010b4:	4798      	blx	r3
900010b6:	b198      	cbz	r0, 900010e0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010b8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ba:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010bc:	b1a3      	cbz	r3, 900010e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010be:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010c0:	7a93      	ldrb	r3, [r2, #10]
900010c2:	7a51      	ldrb	r1, [r2, #9]
900010c4:	041b      	lsls	r3, r3, #16
900010c6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010ca:	7a11      	ldrb	r1, [r2, #8]
900010cc:	7ad2      	ldrb	r2, [r2, #11]
900010ce:	430b      	orrs	r3, r1
900010d0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010d4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010d6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010d8:	3a04      	subs	r2, #4
900010da:	441a      	add	r2, r3
900010dc:	61a2      	str	r2, [r4, #24]
}
900010de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010e0:	230d      	movs	r3, #13
900010e2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010e6:	e7e7      	b.n	900010b8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e8:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900010ec:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900010ee:	18ca      	adds	r2, r1, r3
        val |= d[0];
900010f0:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
900010f2:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
900010f4:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900010f6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900010f8:	041b      	lsls	r3, r3, #16
900010fa:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900010fe:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001100:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001104:	e7e6      	b.n	900010d4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90001106:	4798      	blx	r3
90001108:	4286      	cmp	r6, r0
9000110a:	d907      	bls.n	9000111c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
9000110c:	6823      	ldr	r3, [r4, #0]
9000110e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001110:	42ab      	cmp	r3, r5
90001112:	d00e      	beq.n	90001132 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001114:	4620      	mov	r0, r4
90001116:	4798      	blx	r3
90001118:	4605      	mov	r5, r0
9000111a:	e7b7      	b.n	9000108c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
9000111c:	4635      	mov	r5, r6
9000111e:	e7b5      	b.n	9000108c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001120:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001122:	4b06      	ldr	r3, [pc, #24]	@ (9000113c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001124:	4a06      	ldr	r2, [pc, #24]	@ (90001140 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001126:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001128:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000112c:	4805      	ldr	r0, [pc, #20]	@ (90001144 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000112e:	f027 f923 	bl	90028378 <__assert_func>
    return videoInfo.number_of_frames;
90001132:	68a5      	ldr	r5, [r4, #8]
90001134:	e7aa      	b.n	9000108c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001136:	bf00      	nop
90001138:	9000102d 	.word	0x9000102d
9000113c:	90029828 	.word	0x90029828
90001140:	9002983c 	.word	0x9002983c
90001144:	900297d0 	.word	0x900297d0

90001148 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001148:	6943      	ldr	r3, [r0, #20]
{
9000114a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000114e:	2b00      	cmp	r3, #0
90001150:	f000 80c1 	beq.w	900012d6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001154:	4605      	mov	r5, r0
    if (reader != 0)
90001156:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001158:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000115a:	2800      	cmp	r0, #0
9000115c:	f000 80a1 	beq.w	900012a2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001160:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001162:	2b07      	cmp	r3, #7
90001164:	f240 80ac 	bls.w	900012c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001168:	6803      	ldr	r3, [r0, #0]
9000116a:	4621      	mov	r1, r4
9000116c:	68db      	ldr	r3, [r3, #12]
9000116e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001170:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001172:	2208      	movs	r2, #8
90001174:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001176:	6803      	ldr	r3, [r0, #0]
90001178:	691b      	ldr	r3, [r3, #16]
9000117a:	4798      	blx	r3
9000117c:	2800      	cmp	r0, #0
9000117e:	f000 808c 	beq.w	9000129a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001182:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001184:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001186:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90001188:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000118a:	2800      	cmp	r0, #0
9000118c:	f000 808b 	beq.w	900012a6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
90001190:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001192:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
90001194:	18a1      	adds	r1, r4, r2
90001196:	5ca2      	ldrb	r2, [r4, r2]
90001198:	788c      	ldrb	r4, [r1, #2]
9000119a:	784e      	ldrb	r6, [r1, #1]
9000119c:	0424      	lsls	r4, r4, #16
9000119e:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011a2:	4314      	orrs	r4, r2
900011a4:	78ca      	ldrb	r2, [r1, #3]
900011a6:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011aa:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011ac:	f243 0630 	movw	r6, #12336	@ 0x3030
900011b0:	e03a      	b.n	90001228 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011b2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011b4:	2b07      	cmp	r3, #7
900011b6:	f240 8083 	bls.w	900012c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ba:	6803      	ldr	r3, [r0, #0]
900011bc:	4621      	mov	r1, r4
900011be:	68db      	ldr	r3, [r3, #12]
900011c0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011c2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011c4:	2208      	movs	r2, #8
900011c6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011c8:	6803      	ldr	r3, [r0, #0]
900011ca:	691b      	ldr	r3, [r3, #16]
900011cc:	4798      	blx	r3
900011ce:	b908      	cbnz	r0, 900011d4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011d0:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011d4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011d6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011d8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011da:	2800      	cmp	r0, #0
900011dc:	d079      	beq.n	900012d2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011de:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011e0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011e2:	18ca      	adds	r2, r1, r3
900011e4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011e6:	7994      	ldrb	r4, [r2, #6]
900011e8:	f892 a005 	ldrb.w	sl, [r2, #5]
900011ec:	0424      	lsls	r4, r4, #16
900011ee:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011f2:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011f6:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
900011fa:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011fc:	f892 8003 	ldrb.w	r8, [r2, #3]
90001200:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001204:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001208:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000120c:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001210:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001214:	f246 3164 	movw	r1, #25444	@ 0x6364
90001218:	42b3      	cmp	r3, r6
9000121a:	bf08      	it	eq
9000121c:	428a      	cmpeq	r2, r1
9000121e:	bf0c      	ite	eq
90001220:	2301      	moveq	r3, #1
90001222:	2300      	movne	r3, #0
90001224:	d036      	beq.n	90001294 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001226:	69ab      	ldr	r3, [r5, #24]
90001228:	441c      	add	r4, r3
9000122a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000122c:	f104 0208 	add.w	r2, r4, #8
90001230:	429a      	cmp	r2, r3
90001232:	d22a      	bcs.n	9000128a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001234:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001236:	3409      	adds	r4, #9
        frameNumber++;
90001238:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000123a:	f024 0401 	bic.w	r4, r4, #1
9000123e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001242:	2800      	cmp	r0, #0
90001244:	d1b5      	bne.n	900011b2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001246:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001248:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000124a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000124e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001252:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001254:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001258:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000125c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001260:	188c      	adds	r4, r1, r2
        val |= d[0];
90001262:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001264:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001266:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000126a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000126e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001272:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90001276:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000127a:	0424      	lsls	r4, r4, #16
9000127c:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001280:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001284:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
90001288:	e7c4      	b.n	90001214 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000128a:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000128c:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000128e:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90001290:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90001294:	4618      	mov	r0, r3
90001296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000129a:	230d      	movs	r3, #13
9000129c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012a0:	e76f      	b.n	90001182 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012a2:	1d22      	adds	r2, r4, #4
900012a4:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012a6:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012a8:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012aa:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012ac:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012ae:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012b0:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012b2:	0424      	lsls	r4, r4, #16
900012b4:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012b8:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ba:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012be:	e774      	b.n	900011aa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012c0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012c2:	4b08      	ldr	r3, [pc, #32]	@ (900012e4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012c4:	4a08      	ldr	r2, [pc, #32]	@ (900012e8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012c6:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012c8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012cc:	4807      	ldr	r0, [pc, #28]	@ (900012ec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012ce:	f027 f853 	bl	90028378 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
900012d2:	461c      	mov	r4, r3
900012d4:	e7b7      	b.n	90001246 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012d6:	4b06      	ldr	r3, [pc, #24]	@ (900012f0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012d8:	21f5      	movs	r1, #245	@ 0xf5
900012da:	4a06      	ldr	r2, [pc, #24]	@ (900012f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012dc:	4803      	ldr	r0, [pc, #12]	@ (900012ec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012de:	f027 f84b 	bl	90028378 <__assert_func>
900012e2:	bf00      	nop
900012e4:	90029828 	.word	0x90029828
900012e8:	9002983c 	.word	0x9002983c
900012ec:	900297d0 	.word	0x900297d0
900012f0:	90029880 	.word	0x90029880
900012f4:	900298cc 	.word	0x900298cc

900012f8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012f8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900012fa:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012fc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900012fe:	4b0e      	ldr	r3, [pc, #56]	@ (90001338 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001300:	2001      	movs	r0, #1
90001302:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001304:	63e2      	str	r2, [r4, #60]	@ 0x3c
90001306:	6023      	str	r3, [r4, #0]
90001308:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000130c:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001310:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001314:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001318:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000131c:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001320:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001324:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001328:	f00b fa7c 	bl	9000c824 <osSemaphoreNew>
9000132c:	4b03      	ldr	r3, [pc, #12]	@ (9000133c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000132e:	4602      	mov	r2, r0
}
90001330:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001332:	601a      	str	r2, [r3, #0]
}
90001334:	bd10      	pop	{r4, pc}
90001336:	bf00      	nop
90001338:	90029a24 	.word	0x90029a24
9000133c:	240003f4 	.word	0x240003f4

90001340 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001340:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001344:	2100      	movs	r1, #0
    if (reader != 0)
90001346:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001348:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000134a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000134c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001350:	2e00      	cmp	r6, #0
90001352:	f000 81b3 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001356:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001358:	2b47      	cmp	r3, #71	@ 0x47
9000135a:	f240 8270 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000135e:	6833      	ldr	r3, [r6, #0]
90001360:	4630      	mov	r0, r6
90001362:	68db      	ldr	r3, [r3, #12]
90001364:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001366:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001368:	2248      	movs	r2, #72	@ 0x48
9000136a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000136c:	6803      	ldr	r3, [r0, #0]
9000136e:	691b      	ldr	r3, [r3, #16]
90001370:	4798      	blx	r3
90001372:	2800      	cmp	r0, #0
90001374:	f000 80b7 	beq.w	900014e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90001378:	2300      	movs	r3, #0
    if (reader != 0)
9000137a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000137c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000137e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001380:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001382:	2e00      	cmp	r6, #0
90001384:	f000 819b 	beq.w	900016be <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001388:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000138c:	2204      	movs	r2, #4
9000138e:	49c3      	ldr	r1, [pc, #780]	@ (9000169c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001390:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
90001394:	4620      	mov	r0, r4
90001396:	f027 fa93 	bl	900288c0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000139a:	2800      	cmp	r0, #0
9000139c:	f040 825f 	bne.w	9000185e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013a0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013a4:	2204      	movs	r2, #4
900013a6:	49be      	ldr	r1, [pc, #760]	@ (900016a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013a8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013aa:	4448      	add	r0, r9
900013ac:	f027 fa88 	bl	900288c0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013b0:	2800      	cmp	r0, #0
900013b2:	f040 8268 	bne.w	90001886 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013b6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ba:	2204      	movs	r2, #4
900013bc:	49b9      	ldr	r1, [pc, #740]	@ (900016a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013be:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013c2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013c6:	f027 fa7b 	bl	900288c0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013ca:	4680      	mov	r8, r0
900013cc:	2800      	cmp	r0, #0
900013ce:	f040 8250 	bne.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013d2:	7ca3      	ldrb	r3, [r4, #18]
900013d4:	7c62      	ldrb	r2, [r4, #17]
900013d6:	041b      	lsls	r3, r3, #16
900013d8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013dc:	7c22      	ldrb	r2, [r4, #16]
900013de:	4313      	orrs	r3, r2
900013e0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013e2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013e6:	f000 8233 	beq.w	90001850 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013ea:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900013ee:	2204      	movs	r2, #4
900013f0:	49ad      	ldr	r1, [pc, #692]	@ (900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
900013f2:	4448      	add	r0, r9
900013f4:	f027 fa64 	bl	900288c0 <strncmp>
    if (compare(offset, "hdrl", 4))
900013f8:	2800      	cmp	r0, #0
900013fa:	d078      	beq.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900013fc:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013fe:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001402:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001406:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001408:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000140a:	2204      	movs	r2, #4
9000140c:	49a7      	ldr	r1, [pc, #668]	@ (900016ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000140e:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001410:	f027 fa56 	bl	900288c0 <strncmp>
    if (compare(offset, "avih", 4))
90001414:	2800      	cmp	r0, #0
90001416:	f000 80e6 	beq.w	900015e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000141a:	2307      	movs	r3, #7
9000141c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001420:	f1ba 0f00 	cmp.w	sl, #0
90001424:	f000 8190 	beq.w	90001748 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001428:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000142a:	2b0b      	cmp	r3, #11
9000142c:	f240 8207 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001430:	f8da 3000 	ldr.w	r3, [sl]
90001434:	4621      	mov	r1, r4
90001436:	4650      	mov	r0, sl
90001438:	68db      	ldr	r3, [r3, #12]
9000143a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000143c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000143e:	220c      	movs	r2, #12
90001440:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001442:	6803      	ldr	r3, [r0, #0]
90001444:	691b      	ldr	r3, [r3, #16]
90001446:	4798      	blx	r3
90001448:	2800      	cmp	r0, #0
9000144a:	f000 8121 	beq.w	90001690 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000144e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001452:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001454:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001456:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000145a:	f04f 090d 	mov.w	r9, #13
9000145e:	e003      	b.n	90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001460:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001464:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001466:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001468:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000146c:	2e00      	cmp	r6, #0
9000146e:	d052      	beq.n	90001516 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001470:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001472:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001474:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001476:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001478:	1afb      	subs	r3, r7, r3
9000147a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000147c:	f027 fa20 	bl	900288c0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001480:	2800      	cmp	r0, #0
90001482:	d051      	beq.n	90001528 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001484:	f1ba 0f00 	cmp.w	sl, #0
90001488:	f040 80a8 	bne.w	900015dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
9000148c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000148e:	42a3      	cmp	r3, r4
90001490:	d94d      	bls.n	9000152e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001492:	3404      	adds	r4, #4
    if (reader != 0)
90001494:	b386      	cbz	r6, 900014f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
90001496:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
90001498:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000149c:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
9000149e:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014a0:	eb01 0204 	add.w	r2, r1, r4
900014a4:	5d09      	ldrb	r1, [r1, r4]
900014a6:	7894      	ldrb	r4, [r2, #2]
900014a8:	7850      	ldrb	r0, [r2, #1]
900014aa:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014ae:	78d2      	ldrb	r2, [r2, #3]
900014b0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014b4:	ea44 0401 	orr.w	r4, r4, r1
900014b8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014bc:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014be:	f240 81be 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014c2:	6833      	ldr	r3, [r6, #0]
900014c4:	4621      	mov	r1, r4
900014c6:	4630      	mov	r0, r6
900014c8:	68db      	ldr	r3, [r3, #12]
900014ca:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014cc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014ce:	220c      	movs	r2, #12
900014d0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014d2:	6803      	ldr	r3, [r0, #0]
900014d4:	691b      	ldr	r3, [r3, #16]
900014d6:	4798      	blx	r3
900014d8:	2800      	cmp	r0, #0
900014da:	d1c1      	bne.n	90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014dc:	f04f 0a0d 	mov.w	sl, #13
900014e0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014e4:	e7be      	b.n	90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014e6:	230d      	movs	r3, #13
900014e8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900014ec:	e744      	b.n	90001378 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900014ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014f2:	f04f 0801 	mov.w	r8, #1
900014f6:	e786      	b.n	90001406 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
900014f8:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
900014fa:	1913      	adds	r3, r2, r4
        val |= d[0];
900014fc:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
900014fe:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001500:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001502:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001504:	0424      	lsls	r4, r4, #16
90001506:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000150a:	4314      	orrs	r4, r2
        val |= d[3] << 24;
9000150c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001510:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001512:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001516:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001518:	2204      	movs	r2, #4
9000151a:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
9000151c:	2600      	movs	r6, #0
9000151e:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001520:	f027 f9ce 	bl	900288c0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001524:	2800      	cmp	r0, #0
90001526:	d1ad      	bne.n	90001484 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001528:	f1ba 0f00 	cmp.w	sl, #0
9000152c:	d156      	bne.n	900015dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000152e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001532:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001534:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001536:	2e00      	cmp	r6, #0
90001538:	f000 8118 	beq.w	9000176c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000153c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000153e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001540:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001544:	f104 0e02 	add.w	lr, r4, #2
90001548:	f104 0c01 	add.w	ip, r4, #1
9000154c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001550:	1ce0      	adds	r0, r4, #3
90001552:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001556:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001558:	f811 900c 	ldrb.w	r9, [r1, ip]
9000155c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001560:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001564:	ea43 0308 	orr.w	r3, r3, r8
90001568:	f811 8000 	ldrb.w	r8, [r1, r0]
9000156c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001570:	443b      	add	r3, r7
90001572:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001574:	f811 300e 	ldrb.w	r3, [r1, lr]
90001578:	f811 e00c 	ldrb.w	lr, [r1, ip]
9000157c:	f811 c004 	ldrb.w	ip, [r1, r4]
90001580:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001584:	5c09      	ldrb	r1, [r1, r0]
90001586:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000158a:	ea44 040c 	orr.w	r4, r4, ip
9000158e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001592:	443c      	add	r4, r7
        if (length > aviBufferLength)
90001594:	f240 8153 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001598:	6833      	ldr	r3, [r6, #0]
9000159a:	4621      	mov	r1, r4
9000159c:	4630      	mov	r0, r6
9000159e:	68db      	ldr	r3, [r3, #12]
900015a0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015a2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015a4:	2204      	movs	r2, #4
900015a6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015a8:	6803      	ldr	r3, [r0, #0]
900015aa:	691b      	ldr	r3, [r3, #16]
900015ac:	4798      	blx	r3
900015ae:	2800      	cmp	r0, #0
900015b0:	f000 80cd 	beq.w	9000174e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015b4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015b6:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015b8:	2b00      	cmp	r3, #0
900015ba:	f000 816e 	beq.w	9000189a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015be:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015c0:	2204      	movs	r2, #4
900015c2:	493b      	ldr	r1, [pc, #236]	@ (900016b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015c4:	f027 f97c 	bl	900288c0 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015c8:	2800      	cmp	r0, #0
900015ca:	f040 80ca 	bne.w	90001762 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015ce:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015d0:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015d2:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015d4:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015d6:	622b      	str	r3, [r5, #32]
}
900015d8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015dc:	230a      	movs	r3, #10
900015de:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015e2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015e6:	f1b8 0f00 	cmp.w	r8, #0
900015ea:	f43f af19 	beq.w	90001420 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900015ee:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
900015f2:	f1ba 0f00 	cmp.w	sl, #0
900015f6:	f000 80d4 	beq.w	900017a2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900015fa:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900015fc:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001600:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001602:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001604:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001608:	f812 8001 	ldrb.w	r8, [r2, r1]
9000160c:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001610:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001614:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001618:	4438      	add	r0, r7
9000161a:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000161c:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001620:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001622:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001626:	041b      	lsls	r3, r3, #16
90001628:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000162c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001630:	ea43 0308 	orr.w	r3, r3, r8
90001634:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001638:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000163a:	fbac c303 	umull	ip, r3, ip, r3
9000163e:	099b      	lsrs	r3, r3, #6
90001640:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001642:	78bb      	ldrb	r3, [r7, #2]
90001644:	f897 e001 	ldrb.w	lr, [r7, #1]
90001648:	041b      	lsls	r3, r3, #16
9000164a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000164e:	78ff      	ldrb	r7, [r7, #3]
90001650:	1850      	adds	r0, r2, r1
90001652:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001656:	ea43 030c 	orr.w	r3, r3, ip
9000165a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000165e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001660:	7883      	ldrb	r3, [r0, #2]
90001662:	7847      	ldrb	r7, [r0, #1]
90001664:	041b      	lsls	r3, r3, #16
90001666:	5c51      	ldrb	r1, [r2, r1]
90001668:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000166c:	430b      	orrs	r3, r1
9000166e:	78c1      	ldrb	r1, [r0, #3]
90001670:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001674:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90001676:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001678:	788b      	ldrb	r3, [r1, #2]
9000167a:	7848      	ldrb	r0, [r1, #1]
9000167c:	041b      	lsls	r3, r3, #16
9000167e:	5d92      	ldrb	r2, [r2, r6]
90001680:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001684:	4313      	orrs	r3, r2
90001686:	78ca      	ldrb	r2, [r1, #3]
90001688:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000168c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000168e:	e6cb      	b.n	90001428 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
90001690:	230d      	movs	r3, #13
90001692:	469a      	mov	sl, r3
90001694:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001698:	e6db      	b.n	90001452 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
9000169a:	bf00      	nop
9000169c:	90029900 	.word	0x90029900
900016a0:	900299b8 	.word	0x900299b8
900016a4:	900299b0 	.word	0x900299b0
900016a8:	90029984 	.word	0x90029984
900016ac:	90029998 	.word	0x90029998
900016b0:	900299a8 	.word	0x900299a8
900016b4:	900299a0 	.word	0x900299a0
900016b8:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016bc:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016be:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016c2:	2204      	movs	r2, #4
900016c4:	4976      	ldr	r1, [pc, #472]	@ (900018a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016c6:	eb09 0007 	add.w	r0, r9, r7
900016ca:	f027 f8f9 	bl	900288c0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016ce:	2800      	cmp	r0, #0
900016d0:	f040 80c5 	bne.w	9000185e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016d4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016d8:	2204      	movs	r2, #4
900016da:	4972      	ldr	r1, [pc, #456]	@ (900018a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016dc:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016de:	4448      	add	r0, r9
900016e0:	f027 f8ee 	bl	900288c0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016e4:	2800      	cmp	r0, #0
900016e6:	f040 80ce 	bne.w	90001886 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016ea:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900016ee:	2204      	movs	r2, #4
900016f0:	496d      	ldr	r1, [pc, #436]	@ (900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016f2:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900016f6:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900016fa:	f027 f8e1 	bl	900288c0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900016fe:	4680      	mov	r8, r0
90001700:	2800      	cmp	r0, #0
90001702:	f040 80b6 	bne.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001706:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000170a:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
9000170e:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001712:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001714:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001716:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001718:	0424      	lsls	r4, r4, #16
9000171a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000171e:	4314      	orrs	r4, r2
    assert(aviListSize);
90001720:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001724:	f000 8094 	beq.w	90001850 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001728:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000172c:	2204      	movs	r2, #4
9000172e:	495f      	ldr	r1, [pc, #380]	@ (900018ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001730:	4448      	add	r0, r9
90001732:	f027 f8c5 	bl	900288c0 <strncmp>
    if (compare(offset, "hdrl", 4))
90001736:	b970      	cbnz	r0, 90001756 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001738:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000173c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001740:	4448      	add	r0, r9
90001742:	f04f 0a00 	mov.w	sl, #0
90001746:	e65f      	b.n	90001408 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001748:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000174c:	e683      	b.n	90001456 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000174e:	230d      	movs	r3, #13
90001750:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001754:	e72e      	b.n	900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001756:	2306      	movs	r3, #6
    offset += 4;
90001758:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000175c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001760:	e7ee      	b.n	90001740 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001762:	230b      	movs	r3, #11
90001764:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001768:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000176c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000176e:	1902      	adds	r2, r0, r4
        val |= d[0];
90001770:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001772:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001774:	7893      	ldrb	r3, [r2, #2]
90001776:	041b      	lsls	r3, r3, #16
90001778:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000177c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000177e:	78d1      	ldrb	r1, [r2, #3]
90001780:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001784:	443b      	add	r3, r7
90001786:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
90001788:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000178a:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
9000178c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000178e:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001790:	0424      	lsls	r4, r4, #16
90001792:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90001796:	430c      	orrs	r4, r1
        val |= d[3] << 24;
90001798:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
9000179c:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
9000179e:	4420      	add	r0, r4
900017a0:	e70e      	b.n	900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017a2:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017a4:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017a8:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017ac:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017b0:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017b4:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017b8:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017bc:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017be:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017c2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017c6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017ca:	041b      	lsls	r3, r3, #16
900017cc:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017d0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017d4:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017d8:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017dc:	fbae e303 	umull	lr, r3, lr, r3
900017e0:	099b      	lsrs	r3, r3, #6
900017e2:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017e4:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017e8:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
900017ec:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900017ee:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900017f0:	041b      	lsls	r3, r3, #16
900017f2:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
900017f6:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
900017fa:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
900017fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001802:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001804:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001806:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000180a:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
9000180e:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001812:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
90001816:	041b      	lsls	r3, r3, #16
90001818:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
9000181c:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001820:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001824:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001826:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001828:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000182a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000182c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000182e:	041b      	lsls	r3, r3, #16
90001830:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001834:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001836:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000183a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000183c:	e60b      	b.n	90001456 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000183e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001840:	4b1b      	ldr	r3, [pc, #108]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001842:	4a1c      	ldr	r2, [pc, #112]	@ (900018b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001844:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001846:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000184a:	481b      	ldr	r0, [pc, #108]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000184c:	f026 fd94 	bl	90028378 <__assert_func>
    assert(aviListSize);
90001850:	4b1a      	ldr	r3, [pc, #104]	@ (900018bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001852:	f44f 71a9 	mov.w	r1, #338	@ 0x152
90001856:	4a1a      	ldr	r2, [pc, #104]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001858:	4817      	ldr	r0, [pc, #92]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000185a:	f026 fd8d 	bl	90028378 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000185e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001860:	4b18      	ldr	r3, [pc, #96]	@ (900018c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001862:	4a17      	ldr	r2, [pc, #92]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001864:	f240 113d 	movw	r1, #317	@ 0x13d
        lastError = AVI_ERROR_NOT_RIFF;
90001868:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000186c:	4812      	ldr	r0, [pc, #72]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000186e:	f026 fd83 	bl	90028378 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001872:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001874:	4b14      	ldr	r3, [pc, #80]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
90001876:	4a12      	ldr	r2, [pc, #72]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001878:	f44f 71a6 	mov.w	r1, #332	@ 0x14c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000187c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001880:	480d      	ldr	r0, [pc, #52]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001882:	f026 fd79 	bl	90028378 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001886:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001888:	4b10      	ldr	r3, [pc, #64]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000188a:	4a0d      	ldr	r2, [pc, #52]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000188c:	f240 1145 	movw	r1, #325	@ 0x145
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001890:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
90001894:	4808      	ldr	r0, [pc, #32]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001896:	f026 fd6f 	bl	90028378 <__assert_func>
        src = (const char*)movieData + offset;
9000189a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000189c:	4420      	add	r0, r4
9000189e:	e68f      	b.n	900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018a0:	90029900 	.word	0x90029900
900018a4:	900299b8 	.word	0x900299b8
900018a8:	900299b0 	.word	0x900299b0
900018ac:	90029984 	.word	0x90029984
900018b0:	90029828 	.word	0x90029828
900018b4:	9002983c 	.word	0x9002983c
900018b8:	900297d0 	.word	0x900297d0
900018bc:	9002998c 	.word	0x9002998c
900018c0:	90029924 	.word	0x90029924
900018c4:	90029908 	.word	0x90029908
900018c8:	9002996c 	.word	0x9002996c
900018cc:	90029954 	.word	0x90029954
900018d0:	10624dd3 	.word	0x10624dd3

900018d4 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018d4:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018d6:	2400      	movs	r4, #0
    movieLength = length;
900018d8:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018dc:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018de:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018e2:	f7ff bd2d 	b.w	90001340 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018e6:	bf00      	nop

900018e8 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018e8:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018ea:	680b      	ldr	r3, [r1, #0]
{
900018ec:	4604      	mov	r4, r0
    movieData = 0;
900018ee:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900018f0:	4608      	mov	r0, r1
900018f2:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900018f4:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
900018f8:	4798      	blx	r3
900018fa:	4603      	mov	r3, r0
    readVideoHeader();
900018fc:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900018fe:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001904:	f7ff bd1c 	b.w	90001340 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001908 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001908:	b5f0      	push	{r4, r5, r6, r7, lr}
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
9000190a:	2400      	movs	r4, #0
9000190c:	4d20      	ldr	r5, [pc, #128]	@ (90001990 <JPEG_Decode_DMA+0x88>)
    {
9000190e:	461e      	mov	r6, r3
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
90001910:	4b20      	ldr	r3, [pc, #128]	@ (90001994 <JPEG_Decode_DMA+0x8c>)
        JPEG_output_is_paused = 0;
90001912:	602c      	str	r4, [r5, #0]
    {
90001914:	b083      	sub	sp, #12
        JPEG_OUT_Read_BufferIndex = 0;
90001916:	4d20      	ldr	r5, [pc, #128]	@ (90001998 <JPEG_Decode_DMA+0x90>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001918:	4f20      	ldr	r7, [pc, #128]	@ (9000199c <JPEG_Decode_DMA+0x94>)
        JPEG_OUT_Read_BufferIndex = 0;
9000191a:	602c      	str	r4, [r5, #0]
        MCU_BlockIndex = 0;
9000191c:	4d20      	ldr	r5, [pc, #128]	@ (900019a0 <JPEG_Decode_DMA+0x98>)
        JPEG_OUT_Write_BufferIndex = 0;
9000191e:	601c      	str	r4, [r3, #0]
        MCU_BlockIndex = 0;
90001920:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001922:	4d20      	ldr	r5, [pc, #128]	@ (900019a4 <JPEG_Decode_DMA+0x9c>)
90001924:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001926:	68fd      	ldr	r5, [r7, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001928:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000192a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000192e:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001930:	ebb7 0c04 	subs.w	ip, r7, r4
        FrameBufferAddress = output;
90001934:	4f1c      	ldr	r7, [pc, #112]	@ (900019a8 <JPEG_Decode_DMA+0xa0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001936:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000193a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000193e:	bf18      	it	ne
90001940:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001944:	9500      	str	r5, [sp, #0]
        FrameBufferAddress = output;
90001946:	603e      	str	r6, [r7, #0]
        JPEG_InputImageIndex = 0;
90001948:	4e18      	ldr	r6, [pc, #96]	@ (900019ac <JPEG_Decode_DMA+0xa4>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000194a:	4d19      	ldr	r5, [pc, #100]	@ (900019b0 <JPEG_Decode_DMA+0xa8>)
        JPEG_InputImageIndex = 0;
9000194c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000194e:	4e19      	ldr	r6, [pc, #100]	@ (900019b4 <JPEG_Decode_DMA+0xac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001950:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001954:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageAddress = (uint32_t)input;
90001958:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000195a:	4e17      	ldr	r6, [pc, #92]	@ (900019b8 <JPEG_Decode_DMA+0xb0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000195c:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000195e:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001960:	2201      	movs	r2, #1
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001962:	702c      	strb	r4, [r5, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001964:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001966:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
9000196a:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000196c:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000196e:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001970:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
90001972:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001974:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001978:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
9000197c:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
90001980:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001984:	f007 fa32 	bl	90008dec <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001988:	4620      	mov	r0, r4
9000198a:	b003      	add	sp, #12
9000198c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000198e:	bf00      	nop
90001990:	24006010 	.word	0x24006010
90001994:	24006004 	.word	0x24006004
90001998:	240003f0 	.word	0x240003f0
9000199c:	240003ac 	.word	0x240003ac
900019a0:	240003f8 	.word	0x240003f8
900019a4:	24006000 	.word	0x24006000
900019a8:	24006024 	.word	0x24006024
900019ac:	24006020 	.word	0x24006020
900019b0:	24000004 	.word	0x24000004
900019b4:	24006018 	.word	0x24006018
900019b8:	2400601c 	.word	0x2400601c

900019bc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019c0:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019c2:	2402      	movs	r4, #2
900019c4:	483d      	ldr	r0, [pc, #244]	@ (90001abc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x100>)
900019c6:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019c8:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019ca:	0725      	lsls	r5, r4, #28
900019cc:	d002      	beq.n	900019d4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019ce:	f024 040f 	bic.w	r4, r4, #15
900019d2:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019d4:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019d6:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019d8:	4d39      	ldr	r5, [pc, #228]	@ (90001ac0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019da:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019dc:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019e0:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>
900019e4:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019e6:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019e8:	4f36      	ldr	r7, [pc, #216]	@ (90001ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019ea:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019ee:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 90001ae0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>
900019f2:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 90001ae4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019f6:	bf18      	it	ne
900019f8:	f1c4 0410 	rsbne	r4, r4, #16
900019fc:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
900019fe:	4832      	ldr	r0, [pc, #200]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a00:	f7ff ff82 	bl	90001908 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a04:	4c31      	ldr	r4, [pc, #196]	@ (90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a06:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a08:	4e31      	ldr	r6, [pc, #196]	@ (90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a0a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a0c:	f8da 3000 	ldr.w	r3, [sl]
90001a10:	b10b      	cbz	r3, 90001a16 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5a>
90001a12:	6833      	ldr	r3, [r6, #0]
90001a14:	bb6b      	cbnz	r3, 90001a72 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a16:	6828      	ldr	r0, [r5, #0]
90001a18:	7a03      	ldrb	r3, [r0, #8]
90001a1a:	b93b      	cbnz	r3, 90001a2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
90001a1c:	4b2d      	ldr	r3, [pc, #180]	@ (90001ad4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a1e:	681b      	ldr	r3, [r3, #0]
90001a20:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a24:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a28:	2b01      	cmp	r3, #1
90001a2a:	d03b      	beq.n	90001aa4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe8>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a2c:	683b      	ldr	r3, [r7, #0]
90001a2e:	2b01      	cmp	r3, #1
90001a30:	d00d      	beq.n	90001a4e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x92>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a32:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a34:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a36:	6823      	ldr	r3, [r4, #0]
90001a38:	2b02      	cmp	r3, #2
90001a3a:	d024      	beq.n	90001a86 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xca>
        } while (JpegProcessing_End != 1);
90001a3c:	6823      	ldr	r3, [r4, #0]
90001a3e:	2b01      	cmp	r3, #1
90001a40:	d1e4      	bne.n	90001a0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a42:	2300      	movs	r3, #0
90001a44:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a48:	6033      	str	r3, [r6, #0]
}
90001a4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a4e:	f8d9 3000 	ldr.w	r3, [r9]
90001a52:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a56:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a5a:	2b00      	cmp	r3, #0
90001a5c:	d1e9      	bne.n	90001a32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
90001a5e:	f8da 3000 	ldr.w	r3, [sl]
90001a62:	2b00      	cmp	r3, #0
90001a64:	d1e5      	bne.n	90001a32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a66:	2102      	movs	r1, #2
90001a68:	4817      	ldr	r0, [pc, #92]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_output_is_paused = 0;
90001a6a:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a6c:	f007 fb6e 	bl	9000914c <HAL_JPEG_Resume>
90001a70:	e7df      	b.n	90001a32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a72:	4815      	ldr	r0, [pc, #84]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a74:	f008 f928 	bl	90009cc8 <HAL_JPEG_GetState>
90001a78:	2804      	cmp	r0, #4
90001a7a:	d01a      	beq.n	90001ab2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf6>
        return 1;
90001a7c:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a7e:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a80:	6823      	ldr	r3, [r4, #0]
90001a82:	2b02      	cmp	r3, #2
90001a84:	d1da      	bne.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x80>
                SEM_WAIT(semDecodingDone);
90001a86:	4b14      	ldr	r3, [pc, #80]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a88:	f04f 31ff 	mov.w	r1, #4294967295
90001a8c:	6818      	ldr	r0, [r3, #0]
90001a8e:	f00a ff15 	bl	9000c8bc <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001a92:	6823      	ldr	r3, [r4, #0]
90001a94:	2b01      	cmp	r3, #1
90001a96:	d1b9      	bne.n	90001a0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a98:	2300      	movs	r3, #0
90001a9a:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a9e:	6033      	str	r3, [r6, #0]
}
90001aa0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001aa4:	6833      	ldr	r3, [r6, #0]
90001aa6:	2b00      	cmp	r3, #0
90001aa8:	d1c0      	bne.n	90001a2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
        DMA2D_reference->start();
90001aaa:	6803      	ldr	r3, [r0, #0]
90001aac:	691b      	ldr	r3, [r3, #16]
90001aae:	4798      	blx	r3
90001ab0:	e7bc      	b.n	90001a2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
            HAL_JPEG_Abort(hjpeg);
90001ab2:	4805      	ldr	r0, [pc, #20]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001ab4:	f007 fa18 	bl	90008ee8 <HAL_JPEG_Abort>
90001ab8:	e7e0      	b.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90001aba:	bf00      	nop
90001abc:	240003ac 	.word	0x240003ac
90001ac0:	24006008 	.word	0x24006008
90001ac4:	24006010 	.word	0x24006010
90001ac8:	24007620 	.word	0x24007620
90001acc:	2400600c 	.word	0x2400600c
90001ad0:	240003ec 	.word	0x240003ec
90001ad4:	240003f0 	.word	0x240003f0
90001ad8:	240003f4 	.word	0x240003f4
90001adc:	24006014 	.word	0x24006014
90001ae0:	24006004 	.word	0x24006004
90001ae4:	24000004 	.word	0x24000004

90001ae8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001ae8:	6943      	ldr	r3, [r0, #20]
{
90001aea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001aee:	2b00      	cmp	r3, #0
90001af0:	f000 80ad 	beq.w	90001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001af4:	4604      	mov	r4, r0
    if (reader != 0)
90001af6:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001af8:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001afa:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001afc:	2800      	cmp	r0, #0
90001afe:	d05f      	beq.n	90001bc0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b00:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b02:	2b07      	cmp	r3, #7
90001b04:	f240 80a9 	bls.w	90001c5a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b08:	6803      	ldr	r3, [r0, #0]
90001b0a:	4629      	mov	r1, r5
90001b0c:	68db      	ldr	r3, [r3, #12]
90001b0e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b10:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b12:	2208      	movs	r2, #8
90001b14:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b16:	6803      	ldr	r3, [r0, #0]
90001b18:	691b      	ldr	r3, [r3, #16]
90001b1a:	4798      	blx	r3
90001b1c:	2800      	cmp	r0, #0
90001b1e:	d04a      	beq.n	90001bb6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b20:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b22:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b24:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b28:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b2a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d046      	beq.n	90001bbe <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b30:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b32:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b36:	1b52      	subs	r2, r2, r5
90001b38:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b3a:	eb03 070c 	add.w	r7, r3, ip
90001b3e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b42:	eb03 0805 	add.w	r8, r3, r5
90001b46:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b4a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b4e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b52:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b56:	78bd      	ldrb	r5, [r7, #2]
90001b58:	78ff      	ldrb	r7, [r7, #3]
90001b5a:	042d      	lsls	r5, r5, #16
90001b5c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b60:	ea45 050e 	orr.w	r5, r5, lr
90001b64:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b68:	189f      	adds	r7, r3, r2
90001b6a:	5c9b      	ldrb	r3, [r3, r2]
90001b6c:	787a      	ldrb	r2, [r7, #1]
90001b6e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b72:	eb01 0e05 	add.w	lr, r1, r5
90001b76:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b78:	f10e 0208 	add.w	r2, lr, #8
90001b7c:	429a      	cmp	r2, r3
90001b7e:	d213      	bcs.n	90001ba8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b80:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b84:	459c      	cmp	ip, r3
90001b86:	d138      	bne.n	90001bfa <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b88:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b8c:	429f      	cmp	r7, r3
90001b8e:	d134      	bne.n	90001bfa <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b90:	2d00      	cmp	r5, #0
90001b92:	d136      	bne.n	90001c02 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b94:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b96:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b98:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b9c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b9e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001ba0:	d002      	beq.n	90001ba8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001ba2:	2001      	movs	r0, #1
}
90001ba4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001ba8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001baa:	6a23      	ldr	r3, [r4, #32]
90001bac:	2000      	movs	r0, #0
        frameNumber = 1;
90001bae:	6162      	str	r2, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
90001bb0:	61a3      	str	r3, [r4, #24]
}
90001bb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001bb6:	230d      	movs	r3, #13
90001bb8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bbc:	e7b0      	b.n	90001b20 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001bbe:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bc0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bc2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bc4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bc6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bc8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bca:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bce:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001bd0:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001bd2:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001bd4:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001bd8:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bda:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bdc:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bde:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001be2:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001be6:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001be8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bea:	042d      	lsls	r5, r5, #16
90001bec:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001bf0:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001bf2:	2000      	movs	r0, #0
90001bf4:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001bf8:	e7bb      	b.n	90001b72 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001bfa:	2d00      	cmp	r5, #0
90001bfc:	bf18      	it	ne
90001bfe:	4672      	movne	r2, lr
90001c00:	e7c8      	b.n	90001b94 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c02:	f101 0708 	add.w	r7, r1, #8
90001c06:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c08:	b1f0      	cbz	r0, 90001c48 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c0a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c0c:	429d      	cmp	r5, r3
90001c0e:	d824      	bhi.n	90001c5a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c10:	6803      	ldr	r3, [r0, #0]
90001c12:	4639      	mov	r1, r7
90001c14:	68db      	ldr	r3, [r3, #12]
90001c16:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c18:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c1a:	462a      	mov	r2, r5
90001c1c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c1e:	6803      	ldr	r3, [r0, #0]
90001c20:	691b      	ldr	r3, [r3, #16]
90001c22:	4798      	blx	r3
90001c24:	b910      	cbnz	r0, 90001c2c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c26:	230d      	movs	r3, #13
90001c28:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c2e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c30:	b126      	cbz	r6, 90001c3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c32:	4633      	mov	r3, r6
90001c34:	462a      	mov	r2, r5
90001c36:	4620      	mov	r0, r4
90001c38:	f7ff fec0 	bl	900019bc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c3c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c40:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c42:	442a      	add	r2, r5
            frameNumber++;
90001c44:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c46:	e7a5      	b.n	90001b94 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c48:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c4a:	4439      	add	r1, r7
90001c4c:	e7f0      	b.n	90001c30 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c4e:	4b07      	ldr	r3, [pc, #28]	@ (90001c6c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c50:	21c1      	movs	r1, #193	@ 0xc1
90001c52:	4a07      	ldr	r2, [pc, #28]	@ (90001c70 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c54:	4807      	ldr	r0, [pc, #28]	@ (90001c74 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c56:	f026 fb8f 	bl	90028378 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c5a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c5c:	4b06      	ldr	r3, [pc, #24]	@ (90001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c5e:	4a07      	ldr	r2, [pc, #28]	@ (90001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c60:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c62:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c66:	4803      	ldr	r0, [pc, #12]	@ (90001c74 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c68:	f026 fb86 	bl	90028378 <__assert_func>
90001c6c:	90029880 	.word	0x90029880
90001c70:	900299c0 	.word	0x900299c0
90001c74:	900297d0 	.word	0x900297d0
90001c78:	90029828 	.word	0x90029828
90001c7c:	9002983c 	.word	0x9002983c

90001c80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c84:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c86:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c8a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c8c:	460e      	mov	r6, r1
90001c8e:	4690      	mov	r8, r2
90001c90:	461f      	mov	r7, r3
    if (reader != 0)
90001c92:	2800      	cmp	r0, #0
90001c94:	f000 80f5 	beq.w	90001e82 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        if (length > aviBufferLength)
90001c98:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c9a:	2b07      	cmp	r3, #7
90001c9c:	f240 8106 	bls.w	90001eac <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001ca0:	6803      	ldr	r3, [r0, #0]
90001ca2:	4649      	mov	r1, r9
90001ca4:	68db      	ldr	r3, [r3, #12]
90001ca6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001ca8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001caa:	2208      	movs	r2, #8
90001cac:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cae:	6803      	ldr	r3, [r0, #0]
90001cb0:	691b      	ldr	r3, [r3, #16]
90001cb2:	4798      	blx	r3
90001cb4:	2800      	cmp	r0, #0
90001cb6:	f000 80af 	beq.w	90001e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cba:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001cbc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cbe:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cc0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cc4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cc8:	2800      	cmp	r0, #0
90001cca:	f000 80f8 	beq.w	90001ebe <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23e>
        const uint32_t index = offset - aviBufferStartOffset;
90001cce:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cd2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001cd4:	1899      	adds	r1, r3, r2
90001cd6:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001cd8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cda:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cde:	f891 c001 	ldrb.w	ip, [r1, #1]
90001ce2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001ce6:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cea:	ea49 0902 	orr.w	r9, r9, r2
90001cee:	78ca      	ldrb	r2, [r1, #3]
90001cf0:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001cf4:	454b      	cmp	r3, r9
90001cf6:	f0c0 80d9 	bcc.w	90001eac <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001cfa:	6803      	ldr	r3, [r0, #0]
90001cfc:	4629      	mov	r1, r5
90001cfe:	68db      	ldr	r3, [r3, #12]
90001d00:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d02:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d04:	464a      	mov	r2, r9
90001d06:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d08:	6803      	ldr	r3, [r0, #0]
90001d0a:	691b      	ldr	r3, [r3, #16]
90001d0c:	4798      	blx	r3
90001d0e:	2800      	cmp	r0, #0
90001d10:	d07e      	beq.n	90001e10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x190>
        return aviBuffer;
90001d12:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d14:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d16:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d1a:	2302      	movs	r3, #2
90001d1c:	4869      	ldr	r0, [pc, #420]	@ (90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d1e:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d22:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d24:	d16f      	bne.n	90001e06 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x186>
90001d26:	4662      	mov	r2, ip
90001d28:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d2a:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d2c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d2e:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d30:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d34:	60c3      	str	r3, [r0, #12]
90001d36:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d38:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d3c:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d3e:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d40:	6143      	str	r3, [r0, #20]
90001d42:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d44:	f003 030f 	and.w	r3, r3, #15
90001d48:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d4a:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d4c:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d4e:	b236      	sxth	r6, r6
90001d50:	bf28      	it	cs
90001d52:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d54:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d58:	f002 020f 	and.w	r2, r2, #15
90001d5c:	f8df a194 	ldr.w	sl, [pc, #404]	@ 90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d60:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d64:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d66:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d68:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d6a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d6c:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d70:	f8df 9184 	ldr.w	r9, [pc, #388]	@ 90001ef8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d74:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d76:	eba3 030c 	sub.w	r3, r3, ip
90001d7a:	62c3      	str	r3, [r0, #44]	@ 0x2c
90001d7c:	6923      	ldr	r3, [r4, #16]
90001d7e:	429e      	cmp	r6, r3
90001d80:	bf28      	it	cs
90001d82:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d84:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d88:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d8c:	bf18      	it	ne
90001d8e:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d92:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d94:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d98:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d9a:	6385      	str	r5, [r0, #56]	@ 0x38
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d9c:	4643      	mov	r3, r8
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d9e:	bf18      	it	ne
90001da0:	f1c6 0610 	rsbne	r6, r6, #16
    DMA2D_reference = dma;
90001da4:	4d48      	ldr	r5, [pc, #288]	@ (90001ec8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x248>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001da6:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001daa:	63c6      	str	r6, [r0, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dac:	4847      	ldr	r0, [pc, #284]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001dae:	f7ff fdab 	bl	90001908 <JPEG_Decode_DMA>
    FrameBufferWidth = framebuffer_width;
90001db2:	4b47      	ldr	r3, [pc, #284]	@ (90001ed0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    DMA2D_reference = dma;
90001db4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
    FrameBufferWidth = framebuffer_width;
90001db6:	601f      	str	r7, [r3, #0]
90001db8:	4e46      	ldr	r6, [pc, #280]	@ (90001ed4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
90001dba:	4c47      	ldr	r4, [pc, #284]	@ (90001ed8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dbc:	4f47      	ldr	r7, [pc, #284]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
    DMA2D_reference = dma;
90001dbe:	602a      	str	r2, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001dc0:	f8da 3000 	ldr.w	r3, [sl]
90001dc4:	b113      	cbz	r3, 90001dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x14c>
90001dc6:	6833      	ldr	r3, [r6, #0]
90001dc8:	2b00      	cmp	r3, #0
90001dca:	d13b      	bne.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001dcc:	6828      	ldr	r0, [r5, #0]
90001dce:	7a03      	ldrb	r3, [r0, #8]
90001dd0:	b93b      	cbnz	r3, 90001de2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
90001dd2:	4b43      	ldr	r3, [pc, #268]	@ (90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001dd4:	681b      	ldr	r3, [r3, #0]
90001dd6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001dda:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001dde:	2b01      	cmp	r3, #1
90001de0:	d044      	beq.n	90001e6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001de2:	683b      	ldr	r3, [r7, #0]
90001de4:	2b01      	cmp	r3, #1
90001de6:	d01b      	beq.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    return 2;
90001de8:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001dea:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001dec:	6823      	ldr	r3, [r4, #0]
90001dee:	2b02      	cmp	r3, #2
90001df0:	d032      	beq.n	90001e58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
    } while (JpegProcessing_End != 1);
90001df2:	6823      	ldr	r3, [r4, #0]
90001df4:	2b01      	cmp	r3, #1
90001df6:	d1e3      	bne.n	90001dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    Jpeg_HWDecodingEnd = 0;
90001df8:	2300      	movs	r3, #0
}
90001dfa:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001dfc:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e00:	6033      	str	r3, [r6, #0]
}
90001e02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e06:	f02c 030f 	bic.w	r3, ip, #15
90001e0a:	3310      	adds	r3, #16
90001e0c:	461a      	mov	r2, r3
90001e0e:	e78c      	b.n	90001d2a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xaa>
            lastError = AVI_ERROR_EOF_REACHED;
90001e10:	230d      	movs	r3, #13
90001e12:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e16:	e77c      	b.n	90001d12 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x92>
90001e18:	230d      	movs	r3, #13
90001e1a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e1e:	e74c      	b.n	90001cba <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e20:	f8d9 3000 	ldr.w	r3, [r9]
90001e24:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e28:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e2c:	2b00      	cmp	r3, #0
90001e2e:	d1db      	bne.n	90001de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
90001e30:	f8da 3000 	ldr.w	r3, [sl]
90001e34:	2b00      	cmp	r3, #0
90001e36:	d1d7      	bne.n	90001de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e38:	2102      	movs	r1, #2
90001e3a:	4824      	ldr	r0, [pc, #144]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
        JPEG_output_is_paused = 0;
90001e3c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e3e:	f007 f985 	bl	9000914c <HAL_JPEG_Resume>
90001e42:	e7d1      	b.n	90001de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e44:	4821      	ldr	r0, [pc, #132]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e46:	f007 ff3f 	bl	90009cc8 <HAL_JPEG_GetState>
90001e4a:	2804      	cmp	r0, #4
90001e4c:	d015      	beq.n	90001e7a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fa>
        return 1;
90001e4e:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e50:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e52:	6823      	ldr	r3, [r4, #0]
90001e54:	2b02      	cmp	r3, #2
90001e56:	d1cc      	bne.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x172>
            SEM_WAIT(semDecodingDone);
90001e58:	4b22      	ldr	r3, [pc, #136]	@ (90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
90001e5a:	f04f 31ff 	mov.w	r1, #4294967295
90001e5e:	6818      	ldr	r0, [r3, #0]
90001e60:	f00a fd2c 	bl	9000c8bc <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e64:	6823      	ldr	r3, [r4, #0]
90001e66:	2b01      	cmp	r3, #1
90001e68:	d1aa      	bne.n	90001dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
90001e6a:	e7c5      	b.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x178>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e6c:	6833      	ldr	r3, [r6, #0]
90001e6e:	2b00      	cmp	r3, #0
90001e70:	d1b7      	bne.n	90001de2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
        DMA2D_reference->start();
90001e72:	6803      	ldr	r3, [r0, #0]
90001e74:	691b      	ldr	r3, [r3, #16]
90001e76:	4798      	blx	r3
90001e78:	e7b3      	b.n	90001de2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
            HAL_JPEG_Abort(hjpeg);
90001e7a:	4814      	ldr	r0, [pc, #80]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e7c:	f007 f834 	bl	90008ee8 <HAL_JPEG_Abort>
90001e80:	e7e5      	b.n	90001e4e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ce>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e82:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e86:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001e88:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001e8c:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001e8e:	4401      	add	r1, r0
        val |= d[0];
90001e90:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001e92:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001e94:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001e98:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001e9a:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001e9e:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001ea2:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001ea6:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001eaa:	e734      	b.n	90001d16 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x96>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001eac:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001eae:	4b0e      	ldr	r3, [pc, #56]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001eb0:	4a0e      	ldr	r2, [pc, #56]	@ (90001eec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001eb2:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001eb4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001eb8:	480d      	ldr	r0, [pc, #52]	@ (90001ef0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eba:	f026 fa5d 	bl	90028378 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ebe:	4691      	mov	r9, r2
90001ec0:	e7e1      	b.n	90001e86 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x206>
90001ec2:	bf00      	nop
90001ec4:	240003ac 	.word	0x240003ac
90001ec8:	24006008 	.word	0x24006008
90001ecc:	24007620 	.word	0x24007620
90001ed0:	24005ffc 	.word	0x24005ffc
90001ed4:	240003ec 	.word	0x240003ec
90001ed8:	2400600c 	.word	0x2400600c
90001edc:	24006010 	.word	0x24006010
90001ee0:	240003f0 	.word	0x240003f0
90001ee4:	240003f4 	.word	0x240003f4
90001ee8:	90029828 	.word	0x90029828
90001eec:	9002983c 	.word	0x9002983c
90001ef0:	900297d0 	.word	0x900297d0
90001ef4:	24006014 	.word	0x24006014
90001ef8:	24006004 	.word	0x24006004
90001efc:	24000004 	.word	0x24000004

90001f00 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f00:	684b      	ldr	r3, [r1, #4]
90001f02:	2b01      	cmp	r3, #1
90001f04:	d015      	beq.n	90001f32 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f06:	2b02      	cmp	r3, #2
90001f08:	d00b      	beq.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f0a:	b94b      	cbnz	r3, 90001f20 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f0c:	68cb      	ldr	r3, [r1, #12]
90001f0e:	0758      	lsls	r0, r3, #29
90001f10:	d11e      	bne.n	90001f50 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f12:	688b      	ldr	r3, [r1, #8]
90001f14:	075a      	lsls	r2, r3, #29
90001f16:	d003      	beq.n	90001f20 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f18:	f023 0307 	bic.w	r3, r3, #7
90001f1c:	3308      	adds	r3, #8
90001f1e:	608b      	str	r3, [r1, #8]
    }
90001f20:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f22:	68cb      	ldr	r3, [r1, #12]
90001f24:	071a      	lsls	r2, r3, #28
90001f26:	d0f4      	beq.n	90001f12 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f28:	f023 030f 	bic.w	r3, r3, #15
90001f2c:	3310      	adds	r3, #16
90001f2e:	60cb      	str	r3, [r1, #12]
90001f30:	e7ef      	b.n	90001f12 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f32:	68cb      	ldr	r3, [r1, #12]
90001f34:	071a      	lsls	r2, r3, #28
90001f36:	d003      	beq.n	90001f40 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f38:	f023 030f 	bic.w	r3, r3, #15
90001f3c:	3310      	adds	r3, #16
90001f3e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f40:	688b      	ldr	r3, [r1, #8]
90001f42:	0718      	lsls	r0, r3, #28
90001f44:	d0ec      	beq.n	90001f20 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f46:	f023 030f 	bic.w	r3, r3, #15
90001f4a:	3310      	adds	r3, #16
90001f4c:	608b      	str	r3, [r1, #8]
90001f4e:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f50:	f023 0307 	bic.w	r3, r3, #7
90001f54:	3308      	adds	r3, #8
90001f56:	60cb      	str	r3, [r1, #12]
90001f58:	e7db      	b.n	90001f12 <HAL_JPEG_InfoReadyCallback+0x12>
90001f5a:	bf00      	nop

90001f5c <HAL_JPEG_GetDataCallback>:
    {
90001f5c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f5e:	4c0c      	ldr	r4, [pc, #48]	@ (90001f90 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f60:	4a0c      	ldr	r2, [pc, #48]	@ (90001f94 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f62:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f64:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f66:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f68:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f6a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f6c:	d302      	bcc.n	90001f74 <HAL_JPEG_GetDataCallback+0x18>
    }
90001f6e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f72:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f74:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f76:	4b08      	ldr	r3, [pc, #32]	@ (90001f98 <HAL_JPEG_GetDataCallback+0x3c>)
90001f78:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f7a:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f7e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f80:	bf28      	it	cs
90001f82:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001f86:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f8a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f8c:	f006 bfa4 	b.w	90008ed8 <HAL_JPEG_ConfigInputBuffer>
90001f90:	24006020 	.word	0x24006020
90001f94:	2400601c 	.word	0x2400601c
90001f98:	24006018 	.word	0x24006018

90001f9c <HAL_JPEG_DataReadyCallback>:
    {
90001f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fa0:	4e4a      	ldr	r6, [pc, #296]	@ (900020cc <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fa2:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fa4:	4f4a      	ldr	r7, [pc, #296]	@ (900020d0 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fa6:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fa8:	4d4a      	ldr	r5, [pc, #296]	@ (900020d4 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001faa:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fac:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fae:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fb2:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb4:	4b48      	ldr	r3, [pc, #288]	@ (900020d8 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb6:	4c49      	ldr	r4, [pc, #292]	@ (900020dc <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb8:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fba:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fbc:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc4:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fc8:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fca:	4d45      	ldr	r5, [pc, #276]	@ (900020e0 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fcc:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fce:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fd2:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001fd6:	697b      	ldr	r3, [r7, #20]
90001fd8:	428b      	cmp	r3, r1
90001fda:	d260      	bcs.n	9000209e <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fdc:	6821      	ldr	r1, [r4, #0]
90001fde:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fe0:	6823      	ldr	r3, [r4, #0]
90001fe2:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fe4:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fe8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fec:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001ff0:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff2:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001ff6:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001ffa:	6823      	ldr	r3, [r4, #0]
90001ffc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002000:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002004:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002006:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002008:	b12b      	cbz	r3, 90002016 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000200a:	6823      	ldr	r3, [r4, #0]
9000200c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002010:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002014:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002016:	6832      	ldr	r2, [r6, #0]
90002018:	69bb      	ldr	r3, [r7, #24]
9000201a:	4293      	cmp	r3, r2
9000201c:	d922      	bls.n	90002064 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000201e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002020:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002022:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002026:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002028:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000202c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000202e:	2200      	movs	r2, #0
90002030:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002032:	6823      	ldr	r3, [r4, #0]
90002034:	2b01      	cmp	r3, #1
90002036:	d900      	bls.n	9000203a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002038:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000203a:	6823      	ldr	r3, [r4, #0]
9000203c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002040:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002044:	2b00      	cmp	r3, #0
90002046:	d138      	bne.n	900020ba <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002048:	6823      	ldr	r3, [r4, #0]
9000204a:	4640      	mov	r0, r8
9000204c:	68fa      	ldr	r2, [r7, #12]
9000204e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002052:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002056:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000205a:	01d2      	lsls	r2, r2, #7
9000205c:	6859      	ldr	r1, [r3, #4]
9000205e:	f006 ff3f 	bl	90008ee0 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
90002062:	69bb      	ldr	r3, [r7, #24]
90002064:	6832      	ldr	r2, [r6, #0]
90002066:	429a      	cmp	r2, r3
90002068:	d20b      	bcs.n	90002082 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
9000206a:	4b1e      	ldr	r3, [pc, #120]	@ (900020e4 <HAL_JPEG_DataReadyCallback+0x148>)
9000206c:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
9000206e:	7a1b      	ldrb	r3, [r3, #8]
90002070:	b10b      	cbz	r3, 90002076 <HAL_JPEG_DataReadyCallback+0xda>
    }
90002072:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
90002076:	4b1c      	ldr	r3, [pc, #112]	@ (900020e8 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002078:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
9000207c:	6818      	ldr	r0, [r3, #0]
9000207e:	f00a bc4f 	b.w	9000c920 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002082:	6823      	ldr	r3, [r4, #0]
90002084:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
90002086:	4919      	ldr	r1, [pc, #100]	@ (900020ec <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002088:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000208a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
9000208e:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002090:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002092:	eb05 0583 	add.w	r5, r5, r3, lsl #2
90002096:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002098:	f006 fee6 	bl	90008e68 <HAL_JPEG_Pause>
9000209c:	e7e5      	b.n	9000206a <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000209e:	6823      	ldr	r3, [r4, #0]
900020a0:	68fa      	ldr	r2, [r7, #12]
900020a2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020aa:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020ae:	01d2      	lsls	r2, r2, #7
900020b0:	6859      	ldr	r1, [r3, #4]
    }
900020b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020b6:	f006 bf13 	b.w	90008ee0 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020ba:	2102      	movs	r1, #2
900020bc:	4640      	mov	r0, r8
900020be:	f006 fed3 	bl	90008e68 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020c2:	4b0b      	ldr	r3, [pc, #44]	@ (900020f0 <HAL_JPEG_DataReadyCallback+0x154>)
900020c4:	2201      	movs	r2, #1
900020c6:	601a      	str	r2, [r3, #0]
900020c8:	e7be      	b.n	90002048 <HAL_JPEG_DataReadyCallback+0xac>
900020ca:	bf00      	nop
900020cc:	24006000 	.word	0x24006000
900020d0:	240003ac 	.word	0x240003ac
900020d4:	24006024 	.word	0x24006024
900020d8:	24005ffc 	.word	0x24005ffc
900020dc:	24006004 	.word	0x24006004
900020e0:	24000004 	.word	0x24000004
900020e4:	24006008 	.word	0x24006008
900020e8:	240003f4 	.word	0x240003f4
900020ec:	24006014 	.word	0x24006014
900020f0:	24006010 	.word	0x24006010

900020f4 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900020f4:	b672      	cpsid	i
        while (1)
900020f6:	e7fe      	b.n	900020f6 <HAL_JPEG_ErrorCallback+0x2>

900020f8 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900020f8:	4b01      	ldr	r3, [pc, #4]	@ (90002100 <HAL_JPEG_DecodeCpltCallback+0x8>)
900020fa:	2201      	movs	r2, #1
900020fc:	601a      	str	r2, [r3, #0]
    }
900020fe:	4770      	bx	lr
90002100:	24006014 	.word	0x24006014

90002104 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002104:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002106:	4f1e      	ldr	r7, [pc, #120]	@ (90002180 <DMA2D_CopyBuffer+0x7c>)
90002108:	6903      	ldr	r3, [r0, #16]
9000210a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000210c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000210e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002112:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002114:	4e1b      	ldr	r6, [pc, #108]	@ (90002184 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002116:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000211a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000211e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002122:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002126:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002128:	bf18      	it	ne
9000212a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000212e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002130:	6939      	ldr	r1, [r7, #16]
90002132:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002136:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000213a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000213e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002140:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002142:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002144:	7e81      	ldrb	r1, [r0, #26]
90002146:	b1b9      	cbz	r1, 90002178 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002148:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
9000214a:	f1c1 0110 	rsb	r1, r1, #16
9000214e:	4321      	orrs	r1, r4
90002150:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002152:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002154:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002158:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000215c:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000215e:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002162:	4809      	ldr	r0, [pc, #36]	@ (90002188 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002164:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002166:	4b07      	ldr	r3, [pc, #28]	@ (90002184 <DMA2D_CopyBuffer+0x80>)
90002168:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
9000216a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000216c:	4a07      	ldr	r2, [pc, #28]	@ (9000218c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
9000216e:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002170:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002172:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002174:	6018      	str	r0, [r3, #0]
}
90002176:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002178:	f044 0410 	orr.w	r4, r4, #16
9000217c:	6474      	str	r4, [r6, #68]	@ 0x44
9000217e:	e7e8      	b.n	90002152 <DMA2D_CopyBuffer+0x4e>
90002180:	240003ac 	.word	0x240003ac
90002184:	52001000 	.word	0x52001000
90002188:	00012301 	.word	0x00012301
9000218c:	ff09000b 	.word	0xff09000b

90002190 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002190:	6902      	ldr	r2, [r0, #16]
{
90002192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002196:	4605      	mov	r5, r0
90002198:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000219a:	2a00      	cmp	r2, #0
9000219c:	d165      	bne.n	9000226a <DMA2D_CropBuffer+0xda>
9000219e:	4b35      	ldr	r3, [pc, #212]	@ (90002274 <DMA2D_CropBuffer+0xe4>)
900021a0:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021a4:	f1cc 0010 	rsb	r0, ip, #16
900021a8:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021aa:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021ac:	3901      	subs	r1, #1
900021ae:	428a      	cmp	r2, r1
900021b0:	d102      	bne.n	900021b8 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021b2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021b4:	1a41      	subs	r1, r0, r1
900021b6:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021b8:	7e6e      	ldrb	r6, [r5, #25]
900021ba:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021bc:	2e00      	cmp	r6, #0
900021be:	d051      	beq.n	90002264 <DMA2D_CropBuffer+0xd4>
900021c0:	f1c7 0110 	rsb	r1, r7, #16
900021c4:	46b8      	mov	r8, r7
900021c6:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021c8:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021cc:	f1be 0f00 	cmp.w	lr, #0
900021d0:	d002      	beq.n	900021d8 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021d2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021d4:	1b09      	subs	r1, r1, r4
900021d6:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021d8:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021de:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021e2:	4413      	add	r3, r2
    job.MCU_drawn++;
900021e4:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
900021e6:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
900021ea:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021ec:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
900021f0:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021f4:	0052      	lsls	r2, r2, #1
900021f6:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021fa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021fe:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002202:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002204:	b107      	cbz	r7, 90002208 <DMA2D_CropBuffer+0x78>
90002206:	b90e      	cbnz	r6, 9000220c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002208:	2300      	movs	r3, #0
9000220a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000220c:	4b1a      	ldr	r3, [pc, #104]	@ (90002278 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000220e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002210:	4f1a      	ldr	r7, [pc, #104]	@ (9000227c <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002212:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002214:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002216:	4a1a      	ldr	r2, [pc, #104]	@ (90002280 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002218:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000221a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000221e:	6810      	ldr	r0, [r2, #0]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002220:	2201      	movs	r2, #1
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002222:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002224:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002228:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000222c:	9302      	str	r3, [sp, #8]
    DMA2D_reference->addToQueue(blitOp);
9000222e:	6803      	ldr	r3, [r0, #0]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002230:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002234:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002236:	9201      	str	r2, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002238:	685b      	ldr	r3, [r3, #4]
9000223a:	9604      	str	r6, [sp, #16]
9000223c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000223e:	4b11      	ldr	r3, [pc, #68]	@ (90002284 <DMA2D_CropBuffer+0xf4>)
90002240:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002242:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002244:	4810      	ldr	r0, [pc, #64]	@ (90002288 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002246:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002248:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000224c:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000224e:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002250:	490e      	ldr	r1, [pc, #56]	@ (9000228c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
90002252:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002254:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002256:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002258:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000225a:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000225c:	6019      	str	r1, [r3, #0]
}
9000225e:	b00a      	add	sp, #40	@ 0x28
90002260:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90002264:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002266:	46b0      	mov	r8, r6
90002268:	e7ae      	b.n	900021c8 <DMA2D_CropBuffer+0x38>
9000226a:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000226c:	f04f 0c00 	mov.w	ip, #0
90002270:	4b00      	ldr	r3, [pc, #0]	@ (90002274 <DMA2D_CropBuffer+0xe4>)
90002272:	e79a      	b.n	900021aa <DMA2D_CropBuffer+0x1a>
90002274:	240003ac 	.word	0x240003ac
90002278:	01e00010 	.word	0x01e00010
9000227c:	240003fc 	.word	0x240003fc
90002280:	24006008 	.word	0x24006008
90002284:	52001000 	.word	0x52001000
90002288:	ff09000b 	.word	0xff09000b
9000228c:	00012301 	.word	0x00012301

90002290 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
90002290:	4b0d      	ldr	r3, [pc, #52]	@ (900022c8 <DMA2D_ExternalJobCompleted+0x38>)
90002292:	6902      	ldr	r2, [r0, #16]
90002294:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90002296:	429a      	cmp	r2, r3
90002298:	d000      	beq.n	9000229c <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
9000229a:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
9000229c:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
9000229e:	4b0b      	ldr	r3, [pc, #44]	@ (900022cc <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022a0:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022a2:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022a4:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022a6:	3101      	adds	r1, #1
        job.DoCropping = false;
900022a8:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022aa:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022ac:	6819      	ldr	r1, [r3, #0]
900022ae:	2901      	cmp	r1, #1
900022b0:	d900      	bls.n	900022b4 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022b2:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022b4:	7e83      	ldrb	r3, [r0, #26]
900022b6:	b113      	cbz	r3, 900022be <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022b8:	4b05      	ldr	r3, [pc, #20]	@ (900022d0 <DMA2D_ExternalJobCompleted+0x40>)
900022ba:	2201      	movs	r2, #1
900022bc:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022be:	4b05      	ldr	r3, [pc, #20]	@ (900022d4 <DMA2D_ExternalJobCompleted+0x44>)
900022c0:	6818      	ldr	r0, [r3, #0]
900022c2:	f00a bb2d 	b.w	9000c920 <osSemaphoreRelease>
900022c6:	bf00      	nop
900022c8:	240003ac 	.word	0x240003ac
900022cc:	240003f0 	.word	0x240003f0
900022d0:	240003ec 	.word	0x240003ec
900022d4:	240003f4 	.word	0x240003f4

900022d8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022d8:	2101      	movs	r1, #1
900022da:	2200      	movs	r2, #0
{
900022dc:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022de:	4608      	mov	r0, r1
900022e0:	f00a faa0 	bl	9000c824 <osSemaphoreNew>
900022e4:	4b0b      	ldr	r3, [pc, #44]	@ (90002314 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900022e6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022e8:	b140      	cbz	r0, 900022fc <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900022ea:	2200      	movs	r2, #0
900022ec:	2104      	movs	r1, #4
900022ee:	2001      	movs	r0, #1
900022f0:	f00a fb40 	bl	9000c974 <osMessageQueueNew>
900022f4:	4b08      	ldr	r3, [pc, #32]	@ (90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
900022f6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900022f8:	b130      	cbz	r0, 90002308 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
900022fa:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022fc:	4b07      	ldr	r3, [pc, #28]	@ (9000231c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
900022fe:	2128      	movs	r1, #40	@ 0x28
90002300:	4a07      	ldr	r2, [pc, #28]	@ (90002320 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002302:	4808      	ldr	r0, [pc, #32]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002304:	f026 f838 	bl	90028378 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002308:	4b07      	ldr	r3, [pc, #28]	@ (90002328 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000230a:	212c      	movs	r1, #44	@ 0x2c
9000230c:	4a04      	ldr	r2, [pc, #16]	@ (90002320 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000230e:	4805      	ldr	r0, [pc, #20]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002310:	f026 f832 	bl	90028378 <__assert_func>
90002314:	2400602c 	.word	0x2400602c
90002318:	24006028 	.word	0x24006028
9000231c:	90029a60 	.word	0x90029a60
90002320:	90029aac 	.word	0x90029aac
90002324:	90029adc 	.word	0x90029adc
90002328:	90029b28 	.word	0x90029b28

9000232c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000232c:	4b02      	ldr	r3, [pc, #8]	@ (90002338 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000232e:	f04f 31ff 	mov.w	r1, #4294967295
90002332:	6818      	ldr	r0, [r3, #0]
90002334:	f00a bac2 	b.w	9000c8bc <osSemaphoreAcquire>
90002338:	2400602c 	.word	0x2400602c

9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000233c:	4b01      	ldr	r3, [pc, #4]	@ (90002344 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000233e:	6818      	ldr	r0, [r3, #0]
90002340:	f00a baee 	b.w	9000c920 <osSemaphoreRelease>
90002344:	2400602c 	.word	0x2400602c

90002348 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002348:	4b02      	ldr	r3, [pc, #8]	@ (90002354 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
9000234a:	2100      	movs	r1, #0
9000234c:	6818      	ldr	r0, [r3, #0]
9000234e:	f00a bab5 	b.w	9000c8bc <osSemaphoreAcquire>
90002352:	bf00      	nop
90002354:	2400602c 	.word	0x2400602c

90002358 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002358:	4b01      	ldr	r3, [pc, #4]	@ (90002360 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
9000235a:	6818      	ldr	r0, [r3, #0]
9000235c:	f00a bae0 	b.w	9000c920 <osSemaphoreRelease>
90002360:	2400602c 	.word	0x2400602c

90002364 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002364:	4803      	ldr	r0, [pc, #12]	@ (90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002366:	2300      	movs	r3, #0
90002368:	4903      	ldr	r1, [pc, #12]	@ (90002378 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
9000236a:	461a      	mov	r2, r3
9000236c:	6800      	ldr	r0, [r0, #0]
9000236e:	f00a bb3d 	b.w	9000c9ec <osMessageQueuePut>
90002372:	bf00      	nop
90002374:	24006028 	.word	0x24006028
90002378:	2400003c 	.word	0x2400003c

9000237c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
9000237c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000237e:	2300      	movs	r3, #0
{
90002380:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002382:	4c07      	ldr	r4, [pc, #28]	@ (900023a0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90002384:	461a      	mov	r2, r3
90002386:	a901      	add	r1, sp, #4
90002388:	6820      	ldr	r0, [r4, #0]
9000238a:	f00a fb6b 	bl	9000ca64 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
9000238e:	f04f 33ff 	mov.w	r3, #4294967295
90002392:	2200      	movs	r2, #0
90002394:	a901      	add	r1, sp, #4
90002396:	6820      	ldr	r0, [r4, #0]
90002398:	f00a fb64 	bl	9000ca64 <osMessageQueueGet>
}
9000239c:	b002      	add	sp, #8
9000239e:	bd10      	pop	{r4, pc}
900023a0:	24006028 	.word	0x24006028

900023a4 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023a4:	6803      	ldr	r3, [r0, #0]
900023a6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023a8:	4718      	bx	r3
900023aa:	bf00      	nop

900023ac <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023ac:	2001      	movs	r0, #1
900023ae:	4770      	bx	lr

900023b0 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
900023b0:	e7fe      	b.n	900023b0 <DMA2D_XferErrorCallback>
900023b2:	bf00      	nop

900023b4 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023b4:	4905      	ldr	r1, [pc, #20]	@ (900023cc <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023b6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023ba:	4b05      	ldr	r3, [pc, #20]	@ (900023d0 <_ZN8STM32DMAD1Ev+0x1c>)
900023bc:	6001      	str	r1, [r0, #0]
900023be:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023c6:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023ca:	4770      	bx	lr
900023cc:	90029cd0 	.word	0x90029cd0
900023d0:	e000e100 	.word	0xe000e100

900023d4 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023d4:	4b11      	ldr	r3, [pc, #68]	@ (9000241c <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023d6:	4912      	ldr	r1, [pc, #72]	@ (90002420 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023d8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023dc:	4811      	ldr	r0, [pc, #68]	@ (90002424 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023de:	f042 0210 	orr.w	r2, r2, #16
{
900023e2:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023e4:	4c10      	ldr	r4, [pc, #64]	@ (90002428 <_ZN8STM32DMA10initializeEv+0x54>)
{
900023e6:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023e8:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023ec:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900023f0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900023f4:	f002 0210 	and.w	r2, r2, #16
900023f8:	9201      	str	r2, [sp, #4]
900023fa:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
900023fc:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
900023fe:	f042 0210 	orr.w	r2, r2, #16
90002402:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002404:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002406:	f022 0210 	bic.w	r2, r2, #16
9000240a:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000240c:	4b07      	ldr	r3, [pc, #28]	@ (9000242c <_ZN8STM32DMA10initializeEv+0x58>)
9000240e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002412:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002414:	b003      	add	sp, #12
90002416:	f85d 4b04 	ldr.w	r4, [sp], #4
9000241a:	4770      	bx	lr
9000241c:	58024400 	.word	0x58024400
90002420:	24007678 	.word	0x24007678
90002424:	900023b1 	.word	0x900023b1
90002428:	900027fd 	.word	0x900027fd
9000242c:	e000e100 	.word	0xe000e100

90002430 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002430:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002434:	4770      	bx	lr
90002436:	bf00      	nop

90002438 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002438:	4909      	ldr	r1, [pc, #36]	@ (90002460 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000243a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000243e:	4b09      	ldr	r3, [pc, #36]	@ (90002464 <_ZN8STM32DMAD0Ev+0x2c>)
90002440:	b510      	push	{r4, lr}
90002442:	6001      	str	r1, [r0, #0]
90002444:	4604      	mov	r4, r0
90002446:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000244a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000244e:	f3bf 8f6f 	isb	sy
}
90002452:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002456:	f025 fc17 	bl	90027c88 <_ZdlPvj>
9000245a:	4620      	mov	r0, r4
9000245c:	bd10      	pop	{r4, pc}
9000245e:	bf00      	nop
90002460:	90029cd0 	.word	0x90029cd0
90002464:	e000e100 	.word	0xe000e100

90002468 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002468:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
9000246c:	b510      	push	{r4, lr}
9000246e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90002470:	b963      	cbnz	r3, 9000248c <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
90002472:	6803      	ldr	r3, [r0, #0]
90002474:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002476:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002478:	4924      	ldr	r1, [pc, #144]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
9000247a:	4a25      	ldr	r2, [pc, #148]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
9000247c:	680b      	ldr	r3, [r1, #0]
9000247e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002482:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002486:	2b01      	cmp	r3, #1
90002488:	d015      	beq.n	900024b6 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
9000248a:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
9000248c:	7a03      	ldrb	r3, [r0, #8]
9000248e:	2b00      	cmp	r3, #0
90002490:	d12b      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
90002492:	6860      	ldr	r0, [r4, #4]
90002494:	6803      	ldr	r3, [r0, #0]
90002496:	681b      	ldr	r3, [r3, #0]
90002498:	4798      	blx	r3
9000249a:	4603      	mov	r3, r0
9000249c:	2800      	cmp	r0, #0
9000249e:	d1f4      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024a0:	7a62      	ldrb	r2, [r4, #9]
900024a2:	2a00      	cmp	r2, #0
900024a4:	d0f1      	beq.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024a6:	6822      	ldr	r2, [r4, #0]
900024a8:	4620      	mov	r0, r4
                started_by_external_job = false;
900024aa:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024ae:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024b4:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024b6:	4817      	ldr	r0, [pc, #92]	@ (90002514 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024b8:	6800      	ldr	r0, [r0, #0]
900024ba:	2800      	cmp	r0, #0
900024bc:	d1e5      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024be:	7a20      	ldrb	r0, [r4, #8]
900024c0:	2800      	cmp	r0, #0
900024c2:	d1e2      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024c4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024c6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024ca:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024ce:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024d0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024d4:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024d6:	6808      	ldr	r0, [r1, #0]
900024d8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024dc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024e0:	b17b      	cbz	r3, 90002502 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024e6:	f7ff be53 	b.w	90002190 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ea:	4b08      	ldr	r3, [pc, #32]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
900024ec:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ee:	4808      	ldr	r0, [pc, #32]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024f0:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900024f2:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024f4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024f8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900024fc:	f7ff fec8 	bl	90002290 <DMA2D_ExternalJobCompleted>
90002500:	e7c7      	b.n	90002492 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002502:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002506:	f7ff bdfd 	b.w	90002104 <DMA2D_CopyBuffer>
9000250a:	bf00      	nop
9000250c:	240003f0 	.word	0x240003f0
90002510:	24000004 	.word	0x24000004
90002514:	240003ec 	.word	0x240003ec

90002518 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002518:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000251a:	7f8b      	ldrb	r3, [r1, #30]
9000251c:	2b0a      	cmp	r3, #10
9000251e:	d83d      	bhi.n	9000259c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002520:	e8df f003 	tbb	[pc, r3]
90002524:	3c2a063a 	.word	0x3c2a063a
90002528:	063c3c3c 	.word	0x063c3c3c
9000252c:	0606      	.short	0x0606
9000252e:	06          	.byte	0x06
9000252f:	00          	.byte	0x00
90002530:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002532:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002536:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002538:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000253a:	4b1b      	ldr	r3, [pc, #108]	@ (900025a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000253c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002540:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002542:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002546:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002548:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000254a:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000254c:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000254e:	680e      	ldr	r6, [r1, #0]
        return color;
90002550:	68c8      	ldr	r0, [r1, #12]
90002552:	2e08      	cmp	r6, #8
90002554:	d012      	beq.n	9000257c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002556:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002558:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000255a:	0941      	lsrs	r1, r0, #5
9000255c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002560:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002564:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002566:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
9000256a:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000256c:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
9000256e:	490f      	ldr	r1, [pc, #60]	@ (900025ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002570:	4302      	orrs	r2, r0
90002572:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90002574:	6019      	str	r1, [r3, #0]
    }
}
90002576:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002578:	2400      	movs	r4, #0
9000257a:	e7da      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002580:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002582:	4a0b      	ldr	r2, [pc, #44]	@ (900025b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
90002584:	7f09      	ldrb	r1, [r1, #28]
90002586:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
9000258a:	490a      	ldr	r1, [pc, #40]	@ (900025b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000258c:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000258e:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002590:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002592:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
90002594:	6019      	str	r1, [r3, #0]
}
90002596:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002598:	2402      	movs	r4, #2
9000259a:	e7ca      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
9000259c:	4b06      	ldr	r3, [pc, #24]	@ (900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
9000259e:	2191      	movs	r1, #145	@ 0x91
900025a0:	4a06      	ldr	r2, [pc, #24]	@ (900025bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025a2:	4807      	ldr	r0, [pc, #28]	@ (900025c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025a4:	f025 fee8 	bl	90028378 <__assert_func>
900025a8:	52001000 	.word	0x52001000
900025ac:	00032301 	.word	0x00032301
900025b0:	00010009 	.word	0x00010009
900025b4:	00022301 	.word	0x00022301
900025b8:	90029b6c 	.word	0x90029b6c
900025bc:	90029b88 	.word	0x90029b88
900025c0:	90029bd4 	.word	0x90029bd4

900025c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025c6:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025ca:	f1be 0f0b 	cmp.w	lr, #11
900025ce:	f200 80ac 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025d2:	e8df f00e 	tbb	[pc, lr]
900025d6:	605b      	.short	0x605b
900025d8:	aaaaaa46 	.word	0xaaaaaa46
900025dc:	060606aa 	.word	0x060606aa
900025e0:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025e2:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900025e4:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900025e8:	f1bc 0f0b 	cmp.w	ip, #11
900025ec:	f200 809d 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025f0:	e8df f00c 	tbb	[pc, ip]
900025f4:	9b0d494e 	.word	0x9b0d494e
900025f8:	069b9b9b 	.word	0x069b9b9b
900025fc:	06060606 	.word	0x06060606
    switch (format)
90002600:	f1bc 0f0b 	cmp.w	ip, #11
90002604:	f000 8097 	beq.w	90002736 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        dma2dColorMode = DMA2D_INPUT_L8;
90002608:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000260a:	2701      	movs	r7, #1
9000260c:	e001      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000260e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002610:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002612:	8a8b      	ldrh	r3, [r1, #20]
90002614:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002616:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002618:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000261a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000261c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000261e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002622:	4b4b      	ldr	r3, [pc, #300]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002624:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002626:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002628:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000262a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000262c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000262e:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002630:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002632:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002634:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002636:	680a      	ldr	r2, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002638:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000263a:	2a80      	cmp	r2, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000263c:	ea4f 6007 	mov.w	r0, r7, lsl #24
    switch (blitOp.operation)
90002640:	d02e      	beq.n	900026a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xdc>
90002642:	d810      	bhi.n	90002666 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002644:	2a20      	cmp	r2, #32
90002646:	d028      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
90002648:	2a40      	cmp	r2, #64	@ 0x40
9000264a:	d026      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
9000264c:	2a04      	cmp	r2, #4
9000264e:	d15a      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002650:	4330      	orrs	r0, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002652:	4a40      	ldr	r2, [pc, #256]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002654:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
90002658:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000265a:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000265c:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000265e:	601a      	str	r2, [r3, #0]
}
90002660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002662:	2600      	movs	r6, #0
90002664:	e7be      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
90002666:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000266a:	d059      	beq.n	90002720 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
9000266c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90002670:	d149      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002672:	4a39      	ldr	r2, [pc, #228]	@ (90002758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002674:	4302      	orrs	r2, r0
90002676:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002678:	4a36      	ldr	r2, [pc, #216]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000267a:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000267c:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000267e:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002680:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002682:	601a      	str	r2, [r3, #0]
}
90002684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90002686:	2401      	movs	r4, #1
90002688:	4627      	mov	r7, r4
9000268a:	e7c2      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
9000268c:	2602      	movs	r6, #2
9000268e:	e7a9      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
90002690:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002692:	4627      	mov	r7, r4
90002694:	e7bd      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90002696:	2601      	movs	r6, #1
90002698:	e7a4      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269a:	4330      	orrs	r0, r6
9000269c:	4b2c      	ldr	r3, [pc, #176]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000269e:	e7d8      	b.n	90002652 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026a0:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a2:	4330      	orrs	r0, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026a4:	1d11      	adds	r1, r2, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026aa:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
900026ac:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ae:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026b0:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026b2:	615d      	str	r5, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026b4:	b9b1      	cbnz	r1, 900026e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026b6:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900026b8:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ba:	69d8      	ldr	r0, [r3, #28]
900026bc:	4a27      	ldr	r2, [pc, #156]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026be:	3901      	subs	r1, #1
900026c0:	4002      	ands	r2, r0
900026c2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026c6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026c8:	4a21      	ldr	r2, [pc, #132]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026ca:	69d3      	ldr	r3, [r2, #28]
900026cc:	f043 0320 	orr.w	r3, r3, #32
900026d0:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900026d2:	69d3      	ldr	r3, [r2, #28]
900026d4:	069b      	lsls	r3, r3, #26
900026d6:	d4fc      	bmi.n	900026d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900026d8:	2310      	movs	r3, #16
900026da:	6093      	str	r3, [r2, #8]
            if (blend)
900026dc:	b317      	cbz	r7, 90002724 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026de:	4b1d      	ldr	r3, [pc, #116]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026e0:	6013      	str	r3, [r2, #0]
}
900026e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900026e4:	2901      	cmp	r1, #1
900026e6:	d12c      	bne.n	90002742 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17e>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026e8:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
900026ea:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ec:	69d8      	ldr	r0, [r3, #28]
900026ee:	4a1b      	ldr	r2, [pc, #108]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026f0:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
900026f4:	bf18      	it	ne
900026f6:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f8:	4002      	ands	r2, r0
900026fa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026fe:	f042 0210 	orr.w	r2, r2, #16
90002702:	61da      	str	r2, [r3, #28]
                break;
90002704:	e7e0      	b.n	900026c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
        if (blitOp.srcFormat != blitOp.dstFormat)
90002706:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002708:	ea46 0600 	orr.w	r6, r6, r0
9000270c:	4b10      	ldr	r3, [pc, #64]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000270e:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002712:	bf14      	ite	ne
90002714:	4a12      	ldrne	r2, [pc, #72]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002716:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000271a:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000271c:	601a      	str	r2, [r3, #0]
}
9000271e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002720:	4a10      	ldr	r2, [pc, #64]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002722:	e7a7      	b.n	90002674 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002724:	4b0e      	ldr	r3, [pc, #56]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002726:	6013      	str	r3, [r2, #0]
}
90002728:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000272a:	4b0f      	ldr	r3, [pc, #60]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000272c:	2170      	movs	r1, #112	@ 0x70
9000272e:	4a0f      	ldr	r2, [pc, #60]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002730:	480f      	ldr	r0, [pc, #60]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002732:	f025 fe21 	bl	90028378 <__assert_func>
        assert(0 && "Unsupported Format!");
90002736:	4b0c      	ldr	r3, [pc, #48]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002738:	2191      	movs	r1, #145	@ 0x91
9000273a:	4a0e      	ldr	r2, [pc, #56]	@ (90002774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000273c:	480c      	ldr	r0, [pc, #48]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000273e:	f025 fe1b 	bl	90028378 <__assert_func>
                assert(0 && "Unsupported format");
90002742:	4b0d      	ldr	r3, [pc, #52]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002744:	f240 111b 	movw	r1, #283	@ 0x11b
90002748:	4a0c      	ldr	r2, [pc, #48]	@ (9000277c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000274a:	4809      	ldr	r0, [pc, #36]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000274c:	f025 fe14 	bl	90028378 <__assert_func>
90002750:	52001000 	.word	0x52001000
90002754:	00022301 	.word	0x00022301
90002758:	00020009 	.word	0x00020009
9000275c:	ffff00ef 	.word	0xffff00ef
90002760:	00012301 	.word	0x00012301
90002764:	0002000a 	.word	0x0002000a
90002768:	90029b6c 	.word	0x90029b6c
9000276c:	90029c20 	.word	0x90029c20
90002770:	90029bd4 	.word	0x90029bd4
90002774:	90029b88 	.word	0x90029b88
90002778:	90029c6c 	.word	0x90029c6c
9000277c:	90029c88 	.word	0x90029c88

90002780 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002780:	b510      	push	{r4, lr}
90002782:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002784:	6840      	ldr	r0, [r0, #4]
90002786:	6803      	ldr	r3, [r0, #0]
90002788:	681b      	ldr	r3, [r3, #0]
9000278a:	4798      	blx	r3
9000278c:	b958      	cbnz	r0, 900027a6 <_ZN8STM32DMA5startEv+0x26>
9000278e:	7a63      	ldrb	r3, [r4, #9]
90002790:	b14b      	cbz	r3, 900027a6 <_ZN8STM32DMA5startEv+0x26>
90002792:	7a23      	ldrb	r3, [r4, #8]
90002794:	bb3b      	cbnz	r3, 900027e6 <_ZN8STM32DMA5startEv+0x66>
            execute();
90002796:	6822      	ldr	r2, [r4, #0]
90002798:	4620      	mov	r0, r4
            started_by_external_job = false;
9000279a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
9000279e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027a4:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027a6:	4913      	ldr	r1, [pc, #76]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027a8:	4a13      	ldr	r2, [pc, #76]	@ (900027f8 <_ZN8STM32DMA5startEv+0x78>)
900027aa:	680b      	ldr	r3, [r1, #0]
900027ac:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027b0:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027b4:	2b01      	cmp	r3, #1
900027b6:	d000      	beq.n	900027ba <_ZN8STM32DMA5startEv+0x3a>
    }
900027b8:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ba:	7a20      	ldrb	r0, [r4, #8]
900027bc:	2800      	cmp	r0, #0
900027be:	d1fb      	bne.n	900027b8 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c0:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027c2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027ca:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027cc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027d0:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027d2:	6808      	ldr	r0, [r1, #0]
900027d4:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027d8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027dc:	b133      	cbz	r3, 900027ec <_ZN8STM32DMA5startEv+0x6c>
    }
900027de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027e2:	f7ff bcd5 	b.w	90002190 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027e6:	4b03      	ldr	r3, [pc, #12]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027e8:	681b      	ldr	r3, [r3, #0]
    }
900027ea:	bd10      	pop	{r4, pc}
900027ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027f0:	f7ff bc88 	b.w	90002104 <DMA2D_CopyBuffer>
900027f4:	240003f0 	.word	0x240003f0
900027f8:	24000004 	.word	0x24000004

900027fc <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
900027fc:	4b2c      	ldr	r3, [pc, #176]	@ (900028b0 <DMA2D_XferCpltCallback+0xb4>)
900027fe:	492d      	ldr	r1, [pc, #180]	@ (900028b4 <DMA2D_XferCpltCallback+0xb8>)
90002800:	681b      	ldr	r3, [r3, #0]
    {
90002802:	b510      	push	{r4, lr}
90002804:	685c      	ldr	r4, [r3, #4]
90002806:	6823      	ldr	r3, [r4, #0]
90002808:	695a      	ldr	r2, [r3, #20]
9000280a:	428a      	cmp	r2, r1
9000280c:	d122      	bne.n	90002854 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000280e:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
90002812:	b192      	cbz	r2, 9000283a <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002814:	7a23      	ldrb	r3, [r4, #8]
90002816:	2b00      	cmp	r3, #0
90002818:	d13a      	bne.n	90002890 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
9000281a:	6860      	ldr	r0, [r4, #4]
9000281c:	6803      	ldr	r3, [r0, #0]
9000281e:	681b      	ldr	r3, [r3, #0]
90002820:	4798      	blx	r3
90002822:	4603      	mov	r3, r0
90002824:	b9a8      	cbnz	r0, 90002852 <DMA2D_XferCpltCallback+0x56>
90002826:	7a62      	ldrb	r2, [r4, #9]
90002828:	b19a      	cbz	r2, 90002852 <DMA2D_XferCpltCallback+0x56>
                execute();
9000282a:	6822      	ldr	r2, [r4, #0]
9000282c:	4620      	mov	r0, r4
                started_by_external_job = false;
9000282e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002832:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002838:	4718      	bx	r3
            executeCompleted();
9000283a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000283c:	4620      	mov	r0, r4
9000283e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002840:	491d      	ldr	r1, [pc, #116]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
90002842:	4a1e      	ldr	r2, [pc, #120]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002844:	680b      	ldr	r3, [r1, #0]
90002846:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000284a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000284e:	2b01      	cmp	r3, #1
90002850:	d004      	beq.n	9000285c <DMA2D_XferCpltCallback+0x60>
90002852:	bd10      	pop	{r4, pc}
90002854:	4620      	mov	r0, r4
90002856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000285a:	4710      	bx	r2
9000285c:	4818      	ldr	r0, [pc, #96]	@ (900028c0 <DMA2D_XferCpltCallback+0xc4>)
9000285e:	6800      	ldr	r0, [r0, #0]
90002860:	2800      	cmp	r0, #0
90002862:	d1f6      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
90002864:	7a20      	ldrb	r0, [r4, #8]
90002866:	2800      	cmp	r0, #0
90002868:	d1f3      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000286a:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
9000286c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002870:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002874:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002876:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000287a:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000287c:	6808      	ldr	r0, [r1, #0]
9000287e:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002882:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002886:	b17b      	cbz	r3, 900028a8 <DMA2D_XferCpltCallback+0xac>
90002888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000288c:	f7ff bc80 	b.w	90002190 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002890:	4b09      	ldr	r3, [pc, #36]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
90002892:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002894:	4809      	ldr	r0, [pc, #36]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002896:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002898:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000289a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000289e:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028a2:	f7ff fcf5 	bl	90002290 <DMA2D_ExternalJobCompleted>
900028a6:	e7b8      	b.n	9000281a <DMA2D_XferCpltCallback+0x1e>
900028a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ac:	f7ff bc2a 	b.w	90002104 <DMA2D_CopyBuffer>
900028b0:	240218b4 	.word	0x240218b4
900028b4:	90002469 	.word	0x90002469
900028b8:	240003f0 	.word	0x240003f0
900028bc:	24000004 	.word	0x24000004
900028c0:	240003ec 	.word	0x240003ec

900028c4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028c4:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028c6:	4b0c      	ldr	r3, [pc, #48]	@ (900028f8 <_ZN8STM32DMAC1Ev+0x34>)
STM32DMA::STM32DMA()
900028c8:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028ca:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028cc:	2500      	movs	r5, #0
900028ce:	300c      	adds	r0, #12
900028d0:	2260      	movs	r2, #96	@ 0x60
900028d2:	7235      	strb	r5, [r6, #8]
900028d4:	7275      	strb	r5, [r6, #9]
900028d6:	6070      	str	r0, [r6, #4]
900028d8:	f844 3b20 	str.w	r3, [r4], #32
900028dc:	4621      	mov	r1, r4
900028de:	f00e f9ab 	bl	90010c38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028e2:	4621      	mov	r1, r4
900028e4:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
900028e8:	60cd      	str	r5, [r1, #12]
900028ea:	3124      	adds	r1, #36	@ 0x24
900028ec:	4299      	cmp	r1, r3
900028ee:	d1fb      	bne.n	900028e8 <_ZN8STM32DMAC1Ev+0x24>
}
900028f0:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028f2:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
900028f6:	bd70      	pop	{r4, r5, r6, pc}
900028f8:	90029cd0 	.word	0x90029cd0

900028fc <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900028fc:	4a03      	ldr	r2, [pc, #12]	@ (9000290c <_ZN8touchgfx5paint8tearDownEv+0x10>)
900028fe:	6813      	ldr	r3, [r2, #0]
90002900:	07db      	lsls	r3, r3, #31
90002902:	d4fc      	bmi.n	900028fe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002904:	2323      	movs	r3, #35	@ 0x23
90002906:	6093      	str	r3, [r2, #8]
}
90002908:	4770      	bx	lr
9000290a:	bf00      	nop
9000290c:	52001000 	.word	0x52001000

90002910 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This funciton is used when decompressing RGB images to flush
    // the currently decoded pixels in the cache to allow the DMA2D
    // to blend the pixels correcly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002910:	4a0b      	ldr	r2, [pc, #44]	@ (90002940 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
90002912:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002914:	03db      	lsls	r3, r3, #15
90002916:	d501      	bpl.n	9000291c <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002918:	2900      	cmp	r1, #0
9000291a:	dc00      	bgt.n	9000291e <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
9000291c:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
9000291e:	f000 031f 	and.w	r3, r0, #31
90002922:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002924:	f3bf 8f4f 	dsb	sy
90002928:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9000292a:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
9000292e:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002930:	1a0b      	subs	r3, r1, r0
90002932:	2b00      	cmp	r3, #0
90002934:	dcf9      	bgt.n	9000292a <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
90002936:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000293a:	f3bf 8f6f 	isb	sy
9000293e:	4770      	bx	lr
90002940:	e000ed00 	.word	0xe000ed00

90002944 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002944:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002946:	4c11      	ldr	r4, [pc, #68]	@ (9000298c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002948:	6825      	ldr	r5, [r4, #0]
9000294a:	07ed      	lsls	r5, r5, #31
9000294c:	d4fc      	bmi.n	90002948 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000294e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002950:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90002952:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002954:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002956:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000295a:	f04f 0502 	mov.w	r5, #2
9000295e:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002960:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002962:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002964:	d00b      	beq.n	9000297e <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002966:	490a      	ldr	r1, [pc, #40]	@ (90002990 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002968:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000296a:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000296e:	4909      	ldr	r1, [pc, #36]	@ (90002994 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002970:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90002972:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90002974:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90002976:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002978:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
9000297a:	bc30      	pop	{r4, r5}
9000297c:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000297e:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002980:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002982:	4b05      	ldr	r3, [pc, #20]	@ (90002998 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002984:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002986:	6023      	str	r3, [r4, #0]
}
90002988:	bc30      	pop	{r4, r5}
9000298a:	4770      	bx	lr
9000298c:	52001000 	.word	0x52001000
90002990:	00010009 	.word	0x00010009
90002994:	00020001 	.word	0x00020001
90002998:	00030001 	.word	0x00030001

9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
9000299c:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000299e:	4c10      	ldr	r4, [pc, #64]	@ (900029e0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029a0:	6825      	ldr	r5, [r4, #0]
900029a2:	07ed      	lsls	r5, r5, #31
900029a4:	d4fc      	bmi.n	900029a0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029a6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029a8:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900029aa:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029ac:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029ae:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029b2:	f04f 0502 	mov.w	r5, #2
900029b6:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029b8:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029ba:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029bc:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029be:	d009      	beq.n	900029d4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c0:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029c2:	4a08      	ldr	r2, [pc, #32]	@ (900029e4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c4:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900029c8:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029ca:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029cc:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029ce:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
900029d0:	bc30      	pop	{r4, r5}
900029d2:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d4:	4a04      	ldr	r2, [pc, #16]	@ (900029e8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029d6:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d8:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029da:	6023      	str	r3, [r4, #0]
}
900029dc:	bc30      	pop	{r4, r5}
900029de:	4770      	bx	lr
900029e0:	52001000 	.word	0x52001000
900029e4:	00020001 	.word	0x00020001
900029e8:	ff020002 	.word	0xff020002

900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
900029ec:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029ee:	4c0c      	ldr	r4, [pc, #48]	@ (90002a20 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
900029f0:	6825      	ldr	r5, [r4, #0]
900029f2:	07ed      	lsls	r5, r5, #31
900029f4:	d4fc      	bmi.n	900029f0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029f6:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029f8:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029fa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029fc:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029fe:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a02:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a06:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a08:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a0a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a0c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a0e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a10:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a12:	4b04      	ldr	r3, [pc, #16]	@ (90002a24 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a14:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a16:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a18:	6023      	str	r3, [r4, #0]
}
90002a1a:	bc70      	pop	{r4, r5, r6}
90002a1c:	4770      	bx	lr
90002a1e:	bf00      	nop
90002a20:	52001000 	.word	0x52001000
90002a24:	00020001 	.word	0x00020001

90002a28 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a28:	2001      	movs	r0, #1
90002a2a:	4770      	bx	lr

90002a2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a2c:	2040      	movs	r0, #64	@ 0x40
90002a2e:	4770      	bx	lr

90002a30 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a30:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002a34:	3008      	adds	r0, #8
90002a36:	4770      	bx	lr

90002a38 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a38:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002a3c:	3008      	adds	r0, #8
90002a3e:	4770      	bx	lr

90002a40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI12PoolTempViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a40:	2001      	movs	r0, #1
90002a42:	4770      	bx	lr

90002a44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12PoolTempViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a44:	f44f 700d 	mov.w	r0, #564	@ 0x234
90002a48:	4770      	bx	lr
90002a4a:	bf00      	nop

90002a4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI12PoolTempViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a4c:	f44f 730d 	mov.w	r3, #564	@ 0x234
90002a50:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a54:	3008      	adds	r0, #8
90002a56:	4770      	bx	lr

90002a58 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI12PoolTempViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a58:	f44f 730d 	mov.w	r3, #564	@ 0x234
90002a5c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a60:	3008      	adds	r0, #8
90002a62:	4770      	bx	lr

90002a64 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17PoolTempPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a64:	2001      	movs	r0, #1
90002a66:	4770      	bx	lr

90002a68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PoolTempPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a68:	2010      	movs	r0, #16
90002a6a:	4770      	bx	lr

90002a6c <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PoolTempPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a6c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a70:	3008      	adds	r0, #8
90002a72:	4770      	bx	lr

90002a74 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17PoolTempPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a74:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a78:	3008      	adds	r0, #8
90002a7a:	4770      	bx	lr

90002a7c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
90002a7c:	4608      	mov	r0, r1
90002a7e:	f002 b9d7 	b.w	90004e30 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
90002a82:	bf00      	nop

90002a84 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002a84:	4b03      	ldr	r3, [pc, #12]	@ (90002a94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90002a86:	b510      	push	{r4, lr}
90002a88:	4604      	mov	r4, r0
90002a8a:	6003      	str	r3, [r0, #0]
90002a8c:	f00c fc49 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a90:	4620      	mov	r0, r4
90002a92:	bd10      	pop	{r4, pc}
90002a94:	90029d88 	.word	0x90029d88

90002a98 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90002a98:	4b05      	ldr	r3, [pc, #20]	@ (90002ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90002a9a:	b510      	push	{r4, lr}
90002a9c:	4604      	mov	r4, r0
90002a9e:	6003      	str	r3, [r0, #0]
90002aa0:	f00c fc3f 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002aa4:	2148      	movs	r1, #72	@ 0x48
90002aa6:	4620      	mov	r0, r4
90002aa8:	f025 f8ee 	bl	90027c88 <_ZdlPvj>
90002aac:	4620      	mov	r0, r4
90002aae:	bd10      	pop	{r4, pc}
90002ab0:	90029d88 	.word	0x90029d88

90002ab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12PoolTempViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ab4:	4b03      	ldr	r3, [pc, #12]	@ (90002ac4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12PoolTempViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ab6:	b510      	push	{r4, lr}
90002ab8:	4604      	mov	r4, r0
90002aba:	6003      	str	r3, [r0, #0]
90002abc:	f00c fc31 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ac0:	4620      	mov	r0, r4
90002ac2:	bd10      	pop	{r4, pc}
90002ac4:	90029d54 	.word	0x90029d54

90002ac8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12PoolTempViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ac8:	4b06      	ldr	r3, [pc, #24]	@ (90002ae4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12PoolTempViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002aca:	b510      	push	{r4, lr}
90002acc:	4604      	mov	r4, r0
90002ace:	6003      	str	r3, [r0, #0]
90002ad0:	f00c fc27 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ad4:	f44f 710f 	mov.w	r1, #572	@ 0x23c
90002ad8:	4620      	mov	r0, r4
90002ada:	f025 f8d5 	bl	90027c88 <_ZdlPvj>
90002ade:	4620      	mov	r0, r4
90002ae0:	bd10      	pop	{r4, pc}
90002ae2:	bf00      	nop
90002ae4:	90029d54 	.word	0x90029d54

90002ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PoolTempPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ae8:	4b03      	ldr	r3, [pc, #12]	@ (90002af8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PoolTempPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002aea:	b510      	push	{r4, lr}
90002aec:	4604      	mov	r4, r0
90002aee:	6003      	str	r3, [r0, #0]
90002af0:	f00c fc17 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002af4:	4620      	mov	r0, r4
90002af6:	bd10      	pop	{r4, pc}
90002af8:	90029d20 	.word	0x90029d20

90002afc <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PoolTempPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002afc:	4b05      	ldr	r3, [pc, #20]	@ (90002b14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PoolTempPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002afe:	b510      	push	{r4, lr}
90002b00:	4604      	mov	r4, r0
90002b02:	6003      	str	r3, [r0, #0]
90002b04:	f00c fc0d 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b08:	2118      	movs	r1, #24
90002b0a:	4620      	mov	r0, r4
90002b0c:	f025 f8bc 	bl	90027c88 <_ZdlPvj>
90002b10:	4620      	mov	r0, r4
90002b12:	bd10      	pop	{r4, pc}
90002b14:	90029d20 	.word	0x90029d20

90002b18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b18:	b510      	push	{r4, lr}
90002b1a:	4a0c      	ldr	r2, [pc, #48]	@ (90002b4c <_ZN12FrontendHeapD1Ev+0x34>)
90002b1c:	4604      	mov	r4, r0
90002b1e:	4b0c      	ldr	r3, [pc, #48]	@ (90002b50 <_ZN12FrontendHeapD1Ev+0x38>)
90002b20:	f500 701a 	add.w	r0, r0, #616	@ 0x268
90002b24:	6022      	str	r2, [r4, #0]
90002b26:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
90002b2a:	f00c fbfa 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b2e:	4620      	mov	r0, r4
90002b30:	4b08      	ldr	r3, [pc, #32]	@ (90002b54 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b32:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b36:	f00c fbf4 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b3a:	4620      	mov	r0, r4
90002b3c:	4b06      	ldr	r3, [pc, #24]	@ (90002b58 <_ZN12FrontendHeapD1Ev+0x40>)
90002b3e:	f840 3f14 	str.w	r3, [r0, #20]!
90002b42:	f00c fbee 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b46:	4620      	mov	r0, r4
90002b48:	bd10      	pop	{r4, pc}
90002b4a:	bf00      	nop
90002b4c:	90029dbc 	.word	0x90029dbc
90002b50:	90029d88 	.word	0x90029d88
90002b54:	90029d54 	.word	0x90029d54
90002b58:	90029d20 	.word	0x90029d20

90002b5c <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b5c:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b5e:	4c0c      	ldr	r4, [pc, #48]	@ (90002b90 <__tcf_0+0x34>)
90002b60:	4a0c      	ldr	r2, [pc, #48]	@ (90002b94 <__tcf_0+0x38>)
90002b62:	4b0d      	ldr	r3, [pc, #52]	@ (90002b98 <__tcf_0+0x3c>)
90002b64:	f504 701a 	add.w	r0, r4, #616	@ 0x268
90002b68:	6022      	str	r2, [r4, #0]
90002b6a:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
90002b6e:	f00c fbd8 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b72:	4620      	mov	r0, r4
90002b74:	4b09      	ldr	r3, [pc, #36]	@ (90002b9c <__tcf_0+0x40>)
90002b76:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b7a:	f00c fbd2 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b7e:	4620      	mov	r0, r4
90002b80:	4b07      	ldr	r3, [pc, #28]	@ (90002ba0 <__tcf_0+0x44>)
        static FrontendHeap instance;
90002b82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002b86:	f840 3f14 	str.w	r3, [r0, #20]!
90002b8a:	f00c bbca 	b.w	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b8e:	bf00      	nop
90002b90:	24006f10 	.word	0x24006f10
90002b94:	90029dbc 	.word	0x90029dbc
90002b98:	90029d88 	.word	0x90029d88
90002b9c:	90029d54 	.word	0x90029d54
90002ba0:	90029d20 	.word	0x90029d20

90002ba4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002ba4:	b510      	push	{r4, lr}
90002ba6:	4a0e      	ldr	r2, [pc, #56]	@ (90002be0 <_ZN12FrontendHeapD0Ev+0x3c>)
90002ba8:	4604      	mov	r4, r0
90002baa:	4b0e      	ldr	r3, [pc, #56]	@ (90002be4 <_ZN12FrontendHeapD0Ev+0x40>)
90002bac:	f500 701a 	add.w	r0, r0, #616	@ 0x268
90002bb0:	6022      	str	r2, [r4, #0]
90002bb2:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
90002bb6:	f00c fbb4 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bba:	4620      	mov	r0, r4
90002bbc:	4b0a      	ldr	r3, [pc, #40]	@ (90002be8 <_ZN12FrontendHeapD0Ev+0x44>)
90002bbe:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bc2:	f00c fbae 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bc6:	4b09      	ldr	r3, [pc, #36]	@ (90002bec <_ZN12FrontendHeapD0Ev+0x48>)
90002bc8:	4620      	mov	r0, r4
90002bca:	f840 3f14 	str.w	r3, [r0, #20]!
90002bce:	f00c fba8 	bl	9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bd2:	4620      	mov	r0, r4
90002bd4:	f44f 6183 	mov.w	r1, #1048	@ 0x418
90002bd8:	f025 f856 	bl	90027c88 <_ZdlPvj>
90002bdc:	4620      	mov	r0, r4
90002bde:	bd10      	pop	{r4, pc}
90002be0:	90029dbc 	.word	0x90029dbc
90002be4:	90029d88 	.word	0x90029d88
90002be8:	90029d54 	.word	0x90029d54
90002bec:	90029d20 	.word	0x90029d20

90002bf0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002bf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002bf4:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002bf6:	2400      	movs	r4, #0
90002bf8:	f001 fbc6 	bl	90004388 <_ZN14BitmapDatabase11getInstanceEv>
90002bfc:	4605      	mov	r5, r0
90002bfe:	f001 fbc7 	bl	90004390 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c02:	4623      	mov	r3, r4
90002c04:	4601      	mov	r1, r0
90002c06:	4622      	mov	r2, r4
90002c08:	4628      	mov	r0, r5
90002c0a:	9400      	str	r4, [sp, #0]
90002c0c:	f015 ffd2 	bl	90018bb4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c10:	4b29      	ldr	r3, [pc, #164]	@ (90002cb8 <touchgfx_init+0xc8>)
90002c12:	4a2a      	ldr	r2, [pc, #168]	@ (90002cbc <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c14:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c16:	4c2a      	ldr	r4, [pc, #168]	@ (90002cc0 <touchgfx_init+0xd0>)
90002c18:	601a      	str	r2, [r3, #0]
90002c1a:	f002 ff55 	bl	90005ac8 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c1e:	4b29      	ldr	r3, [pc, #164]	@ (90002cc4 <touchgfx_init+0xd4>)
90002c20:	4a29      	ldr	r2, [pc, #164]	@ (90002cc8 <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c22:	482a      	ldr	r0, [pc, #168]	@ (90002ccc <touchgfx_init+0xdc>)
90002c24:	609a      	str	r2, [r3, #8]
90002c26:	f015 ff2d 	bl	90018a84 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c2a:	6823      	ldr	r3, [r4, #0]
90002c2c:	f3bf 8f5b 	dmb	ish
90002c30:	07db      	lsls	r3, r3, #31
90002c32:	d505      	bpl.n	90002c40 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c34:	4826      	ldr	r0, [pc, #152]	@ (90002cd0 <touchgfx_init+0xe0>)
}
90002c36:	b002      	add	sp, #8
90002c38:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c3c:	f7fe b956 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002c40:	4620      	mov	r0, r4
90002c42:	f025 f823 	bl	90027c8c <__cxa_guard_acquire>
90002c46:	2800      	cmp	r0, #0
90002c48:	d0f4      	beq.n	90002c34 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c4a:	4d22      	ldr	r5, [pc, #136]	@ (90002cd4 <touchgfx_init+0xe4>)
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
90002c4c:	4b22      	ldr	r3, [pc, #136]	@ (90002cd8 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002c4e:	f505 762c 	add.w	r6, r5, #688	@ 0x2b0
        : presenterStorage(pres),
90002c52:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002c56:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002c5a:	f505 771a 	add.w	r7, r5, #616	@ 0x268
90002c5e:	602b      	str	r3, [r5, #0]
90002c60:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002c62:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002c64:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002c68:	f00c fb5c 	bl	9000f324 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c6c:	4b1b      	ldr	r3, [pc, #108]	@ (90002cdc <touchgfx_init+0xec>)
90002c6e:	4640      	mov	r0, r8
90002c70:	616b      	str	r3, [r5, #20]
90002c72:	f00c fb57 	bl	9000f324 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c76:	4b1a      	ldr	r3, [pc, #104]	@ (90002ce0 <touchgfx_init+0xf0>)
90002c78:	4638      	mov	r0, r7
90002c7a:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002c7c:	f00c fb52 	bl	9000f324 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c80:	4b18      	ldr	r3, [pc, #96]	@ (90002ce4 <touchgfx_init+0xf4>)
90002c82:	462a      	mov	r2, r5
90002c84:	f205 410c 	addw	r1, r5, #1036	@ 0x40c
90002c88:	4630      	mov	r0, r6
90002c8a:	f8c5 3268 	str.w	r3, [r5, #616]	@ 0x268
90002c8e:	f002 ff9b 	bl	90005bc8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002c92:	f205 400c 	addw	r0, r5, #1036	@ 0x40c
90002c96:	f003 f839 	bl	90005d0c <_ZN5ModelC1Ev>
90002c9a:	4630      	mov	r0, r6
90002c9c:	f002 f8c8 	bl	90004e30 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
90002ca0:	4811      	ldr	r0, [pc, #68]	@ (90002ce8 <touchgfx_init+0xf8>)
90002ca2:	f025 fb87 	bl	900283b4 <atexit>
90002ca6:	4620      	mov	r0, r4
90002ca8:	f024 fffc 	bl	90027ca4 <__cxa_guard_release>
90002cac:	4808      	ldr	r0, [pc, #32]	@ (90002cd0 <touchgfx_init+0xe0>)
}
90002cae:	b002      	add	sp, #8
90002cb0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002cb4:	f7fe b91a 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002cb8:	24021918 	.word	0x24021918
90002cbc:	240060b8 	.word	0x240060b8
90002cc0:	24006f0c 	.word	0x24006f0c
90002cc4:	240060d8 	.word	0x240060d8
90002cc8:	240060bc 	.word	0x240060bc
90002ccc:	24000040 	.word	0x24000040
90002cd0:	24006030 	.word	0x24006030
90002cd4:	24006f10 	.word	0x24006f10
90002cd8:	90029dbc 	.word	0x90029dbc
90002cdc:	90029d20 	.word	0x90029d20
90002ce0:	90029d54 	.word	0x90029d54
90002ce4:	90029d88 	.word	0x90029d88
90002ce8:	90002b5d 	.word	0x90002b5d

90002cec <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002cec:	4770      	bx	lr
90002cee:	bf00      	nop

90002cf0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002cf0:	4801      	ldr	r0, [pc, #4]	@ (90002cf8 <touchgfx_taskEntry+0x8>)
90002cf2:	f7fe b949 	b.w	90000f88 <_ZN11TouchGFXHAL9taskEntryEv>
90002cf6:	bf00      	nop
90002cf8:	24006030 	.word	0x24006030

90002cfc <_GLOBAL__sub_I_touchgfx_init>:
}
90002cfc:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002cfe:	4e27      	ldr	r6, [pc, #156]	@ (90002d9c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
{
public:

    STM32TouchController() {}
90002d00:	4b27      	ldr	r3, [pc, #156]	@ (90002da0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002d02:	4c28      	ldr	r4, [pc, #160]	@ (90002da4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90002d04:	4630      	mov	r0, r6
static LCD16bpp display;
90002d06:	4d28      	ldr	r5, [pc, #160]	@ (90002da8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002d08:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d0a:	f7ff fddb 	bl	900028c4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d0e:	4628      	mov	r0, r5
90002d10:	f01b f860 	bl	9001ddd4 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d14:	4825      	ldr	r0, [pc, #148]	@ (90002dac <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d16:	f013 fc25 	bl	90016564 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d1a:	4b25      	ldr	r3, [pc, #148]	@ (90002db0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          mcuInstrumentation(0),
90002d1c:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d1e:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d22:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d26:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d28:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d2a:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d2c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d30:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d32:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d34:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d38:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d3c:	4c1d      	ldr	r4, [pc, #116]	@ (90002db4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d3e:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d40:	4c1d      	ldr	r4, [pc, #116]	@ (90002db8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d42:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d44:	4c1d      	ldr	r4, [pc, #116]	@ (90002dbc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002d46:	8020      	strh	r0, [r4, #0]
90002d48:	4c1d      	ldr	r4, [pc, #116]	@ (90002dc0 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d4a:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d4c:	4c1d      	ldr	r4, [pc, #116]	@ (90002dc4 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d4e:	481e      	ldr	r0, [pc, #120]	@ (90002dc8 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d50:	8021      	strh	r1, [r4, #0]
90002d52:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d54:	4c1d      	ldr	r4, [pc, #116]	@ (90002dcc <_GLOBAL__sub_I_touchgfx_init+0xd0>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d56:	491e      	ldr	r1, [pc, #120]	@ (90002dd0 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d58:	481e      	ldr	r0, [pc, #120]	@ (90002dd4 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
          lcdRef(display),
90002d5a:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d5e:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002d62:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d66:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002d68:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002d6c:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002d70:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002d74:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002d78:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002d7c:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002d80:	7022      	strb	r2, [r4, #0]
90002d82:	6019      	str	r1, [r3, #0]
90002d84:	4914      	ldr	r1, [pc, #80]	@ (90002dd8 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
        : cc_consumed(0),
90002d86:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002d8a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          cc_in(0)
90002d8e:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
90002d92:	67d9      	str	r1, [r3, #124]	@ 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d94:	e9c3 201d 	strd	r2, r0, [r3, #116]	@ 0x74
}
90002d98:	bd70      	pop	{r4, r5, r6, pc}
90002d9a:	bf00      	nop
90002d9c:	24006164 	.word	0x24006164
90002da0:	90029510 	.word	0x90029510
90002da4:	24006f08 	.word	0x24006f08
90002da8:	240060d8 	.word	0x240060d8
90002dac:	240060bc 	.word	0x240060bc
90002db0:	24006030 	.word	0x24006030
90002db4:	01000001 	.word	0x01000001
90002db8:	240218b4 	.word	0x240218b4
90002dbc:	240218a8 	.word	0x240218a8
90002dc0:	240218ae 	.word	0x240218ae
90002dc4:	240218aa 	.word	0x240218aa
90002dc8:	240218b0 	.word	0x240218b0
90002dcc:	240218ac 	.word	0x240218ac
90002dd0:	900296a0 	.word	0x900296a0
90002dd4:	01010000 	.word	0x01010000
90002dd8:	900294e8 	.word	0x900294e8

90002ddc <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002ddc:	4801      	ldr	r0, [pc, #4]	@ (90002de4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002dde:	f7ff bae9 	b.w	900023b4 <_ZN8STM32DMAD1Ev>
90002de2:	bf00      	nop
90002de4:	24006164 	.word	0x24006164

90002de8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002de8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002dec:	b112      	cbz	r2, 90002df4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002dee:	6803      	ldr	r3, [r0, #0]
90002df0:	695b      	ldr	r3, [r3, #20]
90002df2:	4718      	bx	r3
        }
    }
90002df4:	4770      	bx	lr
90002df6:	bf00      	nop

90002df8 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002df8:	2000      	movs	r0, #0
90002dfa:	4770      	bx	lr

90002dfc <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002dfc:	8081      	strh	r1, [r0, #4]
    }
90002dfe:	4770      	bx	lr

90002e00 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e00:	80c1      	strh	r1, [r0, #6]
    }
90002e02:	4770      	bx	lr

90002e04 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e04:	8101      	strh	r1, [r0, #8]
    }
90002e06:	4770      	bx	lr

90002e08 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e08:	8141      	strh	r1, [r0, #10]
    }
90002e0a:	4770      	bx	lr

90002e0c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e0c:	4770      	bx	lr
90002e0e:	bf00      	nop

90002e10 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e10:	4770      	bx	lr
90002e12:	bf00      	nop

90002e14 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e14:	4770      	bx	lr
90002e16:	bf00      	nop

90002e18 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e18:	4770      	bx	lr
90002e1a:	bf00      	nop

90002e1c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e1c:	4770      	bx	lr
90002e1e:	bf00      	nop

90002e20 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e20:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e24:	6803      	ldr	r3, [r0, #0]
90002e26:	eba2 020c 	sub.w	r2, r2, ip
90002e2a:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e2e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e30:	eba1 010c 	sub.w	r1, r1, ip
90002e34:	b212      	sxth	r2, r2
90002e36:	b209      	sxth	r1, r1
90002e38:	4718      	bx	r3
90002e3a:	bf00      	nop

90002e3c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e3c:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e3e:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e42:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e46:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e4a:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002e4e:	6010      	str	r0, [r2, #0]
    }
90002e50:	4770      	bx	lr
90002e52:	bf00      	nop

90002e54 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002e54:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e58:	b11a      	cbz	r2, 90002e62 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002e5a:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002e5e:	b102      	cbz	r2, 90002e62 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002e60:	6018      	str	r0, [r3, #0]
        }
    }
90002e62:	4770      	bx	lr

90002e64 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002e64:	2000      	movs	r0, #0
90002e66:	4770      	bx	lr

90002e68 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002e68:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002e6a:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002e6c:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002e6e:	809a      	strh	r2, [r3, #4]
    }
90002e70:	4770      	bx	lr
90002e72:	bf00      	nop

90002e74 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002e74:	4770      	bx	lr
90002e76:	bf00      	nop

90002e78 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002e78:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002e7c:	4770      	bx	lr
90002e7e:	bf00      	nop

90002e80 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002e80:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002e84:	4770      	bx	lr
90002e86:	bf00      	nop

90002e88 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002e88:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002e8c:	688a      	ldr	r2, [r1, #8]
90002e8e:	f8c0 c000 	str.w	ip, [r0]
90002e92:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002e98:	2200      	movs	r2, #0
90002e9a:	6002      	str	r2, [r0, #0]
90002e9c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002e9e:	4770      	bx	lr

90002ea0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002ea0:	2000      	movs	r0, #0
90002ea2:	4770      	bx	lr

90002ea4 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002ea4:	7701      	strb	r1, [r0, #28]
    }
90002ea6:	4770      	bx	lr

90002ea8 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002ea8:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002eac:	4770      	bx	lr
90002eae:	bf00      	nop

90002eb0 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002eb0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002eb4:	4770      	bx	lr
90002eb6:	bf00      	nop

90002eb8 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002eb8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002ebc:	4770      	bx	lr
90002ebe:	bf00      	nop

90002ec0 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002ec0:	2001      	movs	r0, #1
90002ec2:	4770      	bx	lr

90002ec4 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002ec4:	3098      	adds	r0, #152	@ 0x98
90002ec6:	4770      	bx	lr

90002ec8 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002ec8:	308c      	adds	r0, #140	@ 0x8c
90002eca:	4770      	bx	lr

90002ecc <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002ecc:	3084      	adds	r0, #132	@ 0x84
90002ece:	4770      	bx	lr

90002ed0 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002ed0:	4770      	bx	lr
90002ed2:	bf00      	nop

90002ed4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002ed4:	4b03      	ldr	r3, [pc, #12]	@ (90002ee4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002ed6:	2290      	movs	r2, #144	@ 0x90
90002ed8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002edc:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002ee0:	4770      	bx	lr
90002ee2:	bf00      	nop
90002ee4:	e000e100 	.word	0xe000e100

90002ee8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002ee8:	4a09      	ldr	r2, [pc, #36]	@ (90002f10 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002eea:	490a      	ldr	r1, [pc, #40]	@ (90002f14 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002eec:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002eee:	480a      	ldr	r0, [pc, #40]	@ (90002f18 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002ef0:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002ef4:	3b01      	subs	r3, #1
90002ef6:	b29b      	uxth	r3, r3
90002ef8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002efa:	6911      	ldr	r1, [r2, #16]
90002efc:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f00:	3901      	subs	r1, #1
90002f02:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f04:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f06:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f08:	f043 0301 	orr.w	r3, r3, #1
90002f0c:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f0e:	4770      	bx	lr
90002f10:	50001000 	.word	0x50001000
90002f14:	2400732a 	.word	0x2400732a
90002f18:	24007328 	.word	0x24007328

90002f1c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f1c:	4b01      	ldr	r3, [pc, #4]	@ (90002f24 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f1e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f22:	4770      	bx	lr
90002f24:	50001000 	.word	0x50001000

90002f28 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f28:	4b02      	ldr	r3, [pc, #8]	@ (90002f34 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f2a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f2c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f30:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f32:	4770      	bx	lr
90002f34:	50001000 	.word	0x50001000

90002f38 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f38:	4770      	bx	lr
90002f3a:	bf00      	nop

90002f3c <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f3c:	4770      	bx	lr
90002f3e:	bf00      	nop

90002f40 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f40:	4770      	bx	lr
90002f42:	bf00      	nop

90002f44 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f44:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f48:	2300      	movs	r3, #0
90002f4a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002f4e:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002f52:	4770      	bx	lr

90002f54 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002f54:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002f58:	4770      	bx	lr
90002f5a:	bf00      	nop

90002f5c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f5c:	b510      	push	{r4, lr}
90002f5e:	4604      	mov	r4, r0
90002f60:	2130      	movs	r1, #48	@ 0x30
90002f62:	f024 fe91 	bl	90027c88 <_ZdlPvj>
90002f66:	4620      	mov	r0, r4
90002f68:	bd10      	pop	{r4, pc}
90002f6a:	bf00      	nop

90002f6c <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
90002f6c:	b510      	push	{r4, lr}
90002f6e:	4604      	mov	r4, r0
90002f70:	212c      	movs	r1, #44	@ 0x2c
90002f72:	f024 fe89 	bl	90027c88 <_ZdlPvj>
90002f76:	4620      	mov	r0, r4
90002f78:	bd10      	pop	{r4, pc}
90002f7a:	bf00      	nop

90002f7c <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f7c:	b510      	push	{r4, lr}
90002f7e:	4604      	mov	r4, r0
90002f80:	21bc      	movs	r1, #188	@ 0xbc
90002f82:	f024 fe81 	bl	90027c88 <_ZdlPvj>
90002f86:	4620      	mov	r0, r4
90002f88:	bd10      	pop	{r4, pc}
90002f8a:	bf00      	nop

90002f8c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002f8c:	b911      	cbnz	r1, 90002f94 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002f8e:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002f92:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002f94:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002f96:	4a03      	ldr	r2, [pc, #12]	@ (90002fa4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002f98:	f44f 7191 	mov.w	r1, #290	@ 0x122
90002f9c:	4b02      	ldr	r3, [pc, #8]	@ (90002fa8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002f9e:	4803      	ldr	r0, [pc, #12]	@ (90002fac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002fa0:	f025 f9ea 	bl	90028378 <__assert_func>
90002fa4:	90029ddc 	.word	0x90029ddc
90002fa8:	90029dc8 	.word	0x90029dc8
90002fac:	90029ef8 	.word	0x90029ef8

90002fb0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002fb0:	b921      	cbnz	r1, 90002fbc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002fb2:	6840      	ldr	r0, [r0, #4]
90002fb4:	4611      	mov	r1, r2
90002fb6:	6803      	ldr	r3, [r0, #0]
90002fb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002fba:	4718      	bx	r3
        assert(handle < no_streams);
90002fbc:	4b03      	ldr	r3, [pc, #12]	@ (90002fcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002fbe:	f44f 718e 	mov.w	r1, #284	@ 0x11c
90002fc2:	4a03      	ldr	r2, [pc, #12]	@ (90002fd0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002fc4:	4803      	ldr	r0, [pc, #12]	@ (90002fd4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002fc6:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002fc8:	f025 f9d6 	bl	90028378 <__assert_func>
90002fcc:	90029dc8 	.word	0x90029dc8
90002fd0:	90029f40 	.word	0x90029f40
90002fd4:	90029ef8 	.word	0x90029ef8

90002fd8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002fd8:	b909      	cbnz	r1, 90002fde <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002fda:	68c0      	ldr	r0, [r0, #12]
90002fdc:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002fde:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fe0:	4a03      	ldr	r2, [pc, #12]	@ (90002ff0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002fe2:	f44f 718a 	mov.w	r1, #276	@ 0x114
90002fe6:	4b03      	ldr	r3, [pc, #12]	@ (90002ff4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002fe8:	4803      	ldr	r0, [pc, #12]	@ (90002ff8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90002fea:	f025 f9c5 	bl	90028378 <__assert_func>
90002fee:	bf00      	nop
90002ff0:	9002a080 	.word	0x9002a080
90002ff4:	90029dc8 	.word	0x90029dc8
90002ff8:	90029ef8 	.word	0x90029ef8

90002ffc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90002ffc:	b921      	cbnz	r1, 90003008 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90002ffe:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003000:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90003002:	e9c0 3205 	strd	r3, r2, [r0, #20]
90003006:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003008:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000300a:	4a03      	ldr	r2, [pc, #12]	@ (90003018 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
9000300c:	2140      	movs	r1, #64	@ 0x40
9000300e:	4b03      	ldr	r3, [pc, #12]	@ (9000301c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003010:	4803      	ldr	r0, [pc, #12]	@ (90003020 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90003012:	f025 f9b1 	bl	90028378 <__assert_func>
90003016:	bf00      	nop
90003018:	9002a1c8 	.word	0x9002a1c8
9000301c:	90029dc8 	.word	0x90029dc8
90003020:	90029ef8 	.word	0x90029ef8

90003024 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90003024:	b508      	push	{r3, lr}
90003026:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90003028:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
9000302c:	b940      	cbnz	r0, 90003040 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
9000302e:	2201      	movs	r2, #1
90003030:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90003034:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
90003038:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
9000303c:	6308      	str	r0, [r1, #48]	@ 0x30
    }
9000303e:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003040:	4b03      	ldr	r3, [pc, #12]	@ (90003050 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90003042:	f240 116b 	movw	r1, #363	@ 0x16b
90003046:	4a03      	ldr	r2, [pc, #12]	@ (90003054 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
90003048:	4803      	ldr	r0, [pc, #12]	@ (90003058 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
9000304a:	f025 f995 	bl	90028378 <__assert_func>
9000304e:	bf00      	nop
90003050:	9002a314 	.word	0x9002a314
90003054:	9002a344 	.word	0x9002a344
90003058:	90029ef8 	.word	0x90029ef8

9000305c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
9000305c:	f00c bf2a 	b.w	9000feb4 <_ZN8touchgfx3HAL10beginFrameEv>

90003060 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
90003060:	f00c bf34 	b.w	9000fecc <_ZN8touchgfx3HAL8endFrameEv>

90003064 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90003064:	f00c beef 	b.w	9000fe46 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90003068 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90003068:	f00d b851 	b.w	9001010e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

9000306c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
9000306c:	4814      	ldr	r0, [pc, #80]	@ (900030c0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
9000306e:	6943      	ldr	r3, [r0, #20]
90003070:	03d9      	lsls	r1, r3, #15
90003072:	d523      	bpl.n	900030bc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003074:	2300      	movs	r3, #0
{
90003076:	b510      	push	{r4, lr}
90003078:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
9000307c:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003080:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003084:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003088:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000308c:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90003090:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003094:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003098:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000309a:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000309e:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030a0:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030a4:	1c5a      	adds	r2, r3, #1
900030a6:	d1f8      	bne.n	9000309a <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030a8:	f1ac 0c20 	sub.w	ip, ip, #32
900030ac:	f11c 0f20 	cmn.w	ip, #32
900030b0:	d1f0      	bne.n	90003094 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900030b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030b6:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900030ba:	bd10      	pop	{r4, pc}
900030bc:	4770      	bx	lr
900030be:	bf00      	nop
900030c0:	e000ed00 	.word	0xe000ed00

900030c4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900030c4:	b5f0      	push	{r4, r5, r6, r7, lr}
900030c6:	b083      	sub	sp, #12
        assert(handle < no_streams);
900030c8:	bb49      	cbnz	r1, 9000311e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5a>
900030ca:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
900030cc:	6840      	ldr	r0, [r0, #4]
900030ce:	461d      	mov	r5, r3
900030d0:	4616      	mov	r6, r2
900030d2:	6803      	ldr	r3, [r0, #0]
900030d4:	691b      	ldr	r3, [r3, #16]
900030d6:	4798      	blx	r3
900030d8:	b908      	cbnz	r0, 900030de <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
900030da:	b003      	add	sp, #12
900030dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
900030de:	4f13      	ldr	r7, [pc, #76]	@ (9000312c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
900030e0:	2101      	movs	r1, #1
900030e2:	6838      	ldr	r0, [r7, #0]
900030e4:	f00d fcac 	bl	90010a40 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
900030e8:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
900030ea:	4605      	mov	r5, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
900030ec:	4668      	mov	r0, sp
900030ee:	f013 fa1f 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
900030f2:	4b0f      	ldr	r3, [pc, #60]	@ (90003130 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
900030f4:	6860      	ldr	r0, [r4, #4]
900030f6:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
900030f8:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
900030fc:	881b      	ldrh	r3, [r3, #0]
900030fe:	f9bd 2000 	ldrsh.w	r2, [sp]
90003102:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003106:	6804      	ldr	r4, [r0, #0]
90003108:	eb05 0242 	add.w	r2, r5, r2, lsl #1
9000310c:	69e4      	ldr	r4, [r4, #28]
9000310e:	47a0      	blx	r4
90003110:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003112:	6803      	ldr	r3, [r0, #0]
90003114:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
90003116:	b003      	add	sp, #12
90003118:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
9000311c:	4718      	bx	r3
        assert(handle < no_streams);
9000311e:	4b05      	ldr	r3, [pc, #20]	@ (90003134 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
90003120:	21e9      	movs	r1, #233	@ 0xe9
90003122:	4a05      	ldr	r2, [pc, #20]	@ (90003138 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
90003124:	4805      	ldr	r0, [pc, #20]	@ (9000313c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
90003126:	f025 f927 	bl	90028378 <__assert_func>
9000312a:	bf00      	nop
9000312c:	240218b4 	.word	0x240218b4
90003130:	240218ae 	.word	0x240218ae
90003134:	90029dc8 	.word	0x90029dc8
90003138:	9002a45c 	.word	0x9002a45c
9000313c:	90029ef8 	.word	0x90029ef8

90003140 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003140:	4b08      	ldr	r3, [pc, #32]	@ (90003164 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90003142:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90003146:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000314a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000314e:	f3bf 8f6f 	isb	sy
90003152:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90003156:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000315a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000315e:	f3bf 8f6f 	isb	sy
}
90003162:	4770      	bx	lr
90003164:	e000e100 	.word	0xe000e100

90003168 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003168:	4b03      	ldr	r3, [pc, #12]	@ (90003178 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
9000316a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000316e:	609a      	str	r2, [r3, #8]
90003170:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90003174:	609a      	str	r2, [r3, #8]
}
90003176:	4770      	bx	lr
90003178:	e000e100 	.word	0xe000e100

9000317c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
9000317c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
90003180:	2900      	cmp	r1, #0
90003182:	f040 8096 	bne.w	900032b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
90003186:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9000318a:	4604      	mov	r4, r0
9000318c:	b933      	cbnz	r3, 9000319c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
9000318e:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
90003192:	b91b      	cbnz	r3, 9000319c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
90003194:	2501      	movs	r5, #1
    }
90003196:	4628      	mov	r0, r5
90003198:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
9000319c:	4b48      	ldr	r3, [pc, #288]	@ (900032c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
9000319e:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031a0:	6921      	ldr	r1, [r4, #16]
900031a2:	681b      	ldr	r3, [r3, #0]
900031a4:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900031a8:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031ac:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900031ae:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031b2:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900031b4:	b979      	cbnz	r1, 900031d6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031b6:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
900031b8:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031ba:	6961      	ldr	r1, [r4, #20]
900031bc:	fb01 f303 	mul.w	r3, r1, r3
900031c0:	69a1      	ldr	r1, [r4, #24]
900031c2:	fb01 f202 	mul.w	r2, r1, r2
900031c6:	4293      	cmp	r3, r2
900031c8:	d824      	bhi.n	90003214 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
900031ca:	2300      	movs	r3, #0
    }
900031cc:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
900031ce:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
900031d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
900031d6:	6813      	ldr	r3, [r2, #0]
900031d8:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
900031da:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
900031dc:	695b      	ldr	r3, [r3, #20]
900031de:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
900031e0:	69e1      	ldr	r1, [r4, #28]
900031e2:	bb21      	cbnz	r1, 9000322e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
900031e4:	6a23      	ldr	r3, [r4, #32]
900031e6:	2b00      	cmp	r3, #0
900031e8:	d142      	bne.n	90003270 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
900031ea:	4f36      	ldr	r7, [pc, #216]	@ (900032c4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
900031ec:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
900031f0:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
900031f2:	2d00      	cmp	r5, #0
900031f4:	d02c      	beq.n	90003250 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
900031f6:	699b      	ldr	r3, [r3, #24]
900031f8:	4630      	mov	r0, r6
900031fa:	4798      	blx	r3
900031fc:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
900031fe:	6833      	ldr	r3, [r6, #0]
90003200:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003202:	42bb      	cmp	r3, r7
90003204:	d145      	bne.n	90003292 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
90003206:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003208:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
9000320a:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
9000320c:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000320e:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003210:	60a2      	str	r2, [r4, #8]
90003212:	e7d2      	b.n	900031ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
90003214:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003218:	b138      	cbz	r0, 9000322a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000321a:	1a9b      	subs	r3, r3, r2
9000321c:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003220:	4299      	cmp	r1, r3
                    stream.skip_frames--;
90003222:	bf98      	it	ls
90003224:	f102 32ff 	addls.w	r2, r2, #4294967295
90003228:	6222      	str	r2, [r4, #32]
            return true;
9000322a:	2301      	movs	r3, #1
9000322c:	e7ce      	b.n	900031cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
9000322e:	6833      	ldr	r3, [r6, #0]
90003230:	4630      	mov	r0, r6
90003232:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90003234:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
90003236:	6833      	ldr	r3, [r6, #0]
90003238:	69e5      	ldr	r5, [r4, #28]
9000323a:	4630      	mov	r0, r6
9000323c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000323e:	4798      	blx	r3
90003240:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
90003242:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
90003244:	bf28      	it	cs
90003246:	2500      	movcs	r5, #0
90003248:	4f1e      	ldr	r7, [pc, #120]	@ (900032c4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
9000324a:	bf38      	it	cc
9000324c:	2501      	movcc	r5, #1
9000324e:	e7d6      	b.n	900031fe <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003250:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003252:	42ba      	cmp	r2, r7
90003254:	d124      	bne.n	900032a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
90003256:	f8d6 8014 	ldr.w	r8, [r6, #20]
9000325a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000325c:	4630      	mov	r0, r6
9000325e:	4798      	blx	r3
90003260:	4580      	cmp	r8, r0
90003262:	d219      	bcs.n	90003298 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
90003264:	6833      	ldr	r3, [r6, #0]
90003266:	4630      	mov	r0, r6
90003268:	699b      	ldr	r3, [r3, #24]
9000326a:	4798      	blx	r3
9000326c:	4605      	mov	r5, r0
9000326e:	e7c6      	b.n	900031fe <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
90003270:	6832      	ldr	r2, [r6, #0]
90003272:	4f14      	ldr	r7, [pc, #80]	@ (900032c4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003274:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
90003278:	42ba      	cmp	r2, r7
9000327a:	d116      	bne.n	900032aa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
9000327c:	6970      	ldr	r0, [r6, #20]
9000327e:	18c1      	adds	r1, r0, r3
90003280:	4630      	mov	r0, r6
90003282:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
90003284:	6a22      	ldr	r2, [r4, #32]
90003286:	68a3      	ldr	r3, [r4, #8]
90003288:	4413      	add	r3, r2
                        stream.skip_frames = 0;
9000328a:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
9000328c:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
9000328e:	6222      	str	r2, [r4, #32]
90003290:	e7ac      	b.n	900031ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003292:	4630      	mov	r0, r6
90003294:	4798      	blx	r3
90003296:	e7b7      	b.n	90003208 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
90003298:	2300      	movs	r3, #0
9000329a:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
9000329e:	e7ae      	b.n	900031fe <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032a0:	4630      	mov	r0, r6
900032a2:	4790      	blx	r2
900032a4:	6833      	ldr	r3, [r6, #0]
900032a6:	4680      	mov	r8, r0
900032a8:	e7d7      	b.n	9000325a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032aa:	4630      	mov	r0, r6
900032ac:	4790      	blx	r2
900032ae:	6a23      	ldr	r3, [r4, #32]
900032b0:	e7e5      	b.n	9000327e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900032b2:	4b05      	ldr	r3, [pc, #20]	@ (900032c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900032b4:	21a9      	movs	r1, #169	@ 0xa9
900032b6:	4a05      	ldr	r2, [pc, #20]	@ (900032cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
900032b8:	4805      	ldr	r0, [pc, #20]	@ (900032d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
900032ba:	f025 f85d 	bl	90028378 <__assert_func>
900032be:	bf00      	nop
900032c0:	240218b4 	.word	0x240218b4
900032c4:	9000100d 	.word	0x9000100d
900032c8:	90029dc8 	.word	0x90029dc8
900032cc:	9002a5a4 	.word	0x9002a5a4
900032d0:	90029ef8 	.word	0x90029ef8

900032d4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900032d4:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900032d6:	bb11      	cbnz	r1, 9000331e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
900032d8:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
900032da:	6840      	ldr	r0, [r0, #4]
900032dc:	4611      	mov	r1, r2
900032de:	461a      	mov	r2, r3
900032e0:	6803      	ldr	r3, [r0, #0]
900032e2:	689b      	ldr	r3, [r3, #8]
900032e4:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032e6:	6860      	ldr	r0, [r4, #4]
900032e8:	4a10      	ldr	r2, [pc, #64]	@ (9000332c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
900032ea:	6803      	ldr	r3, [r0, #0]
900032ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900032ee:	4293      	cmp	r3, r2
900032f0:	d10c      	bne.n	9000330c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
900032f2:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900032f4:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900032f6:	2300      	movs	r3, #0
900032f8:	4a0d      	ldr	r2, [pc, #52]	@ (90003330 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
900032fa:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032fc:	60e0      	str	r0, [r4, #12]
900032fe:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003300:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003304:	d104      	bne.n	90003310 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
90003306:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
9000330a:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000330c:	4798      	blx	r3
9000330e:	e7f1      	b.n	900032f4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003310:	4620      	mov	r0, r4
90003312:	46ac      	mov	ip, r5
90003314:	2201      	movs	r2, #1
90003316:	4619      	mov	r1, r3
    }
90003318:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
9000331c:	4760      	bx	ip
        assert(handle < no_streams);
9000331e:	4b05      	ldr	r3, [pc, #20]	@ (90003334 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003320:	214e      	movs	r1, #78	@ 0x4e
90003322:	4a05      	ldr	r2, [pc, #20]	@ (90003338 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
90003324:	4805      	ldr	r0, [pc, #20]	@ (9000333c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
90003326:	f025 f827 	bl	90028378 <__assert_func>
9000332a:	bf00      	nop
9000332c:	9000100d 	.word	0x9000100d
90003330:	900033a9 	.word	0x900033a9
90003334:	90029dc8 	.word	0x90029dc8
90003338:	9002a6d8 	.word	0x9002a6d8
9000333c:	90029ef8 	.word	0x90029ef8

90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003340:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003342:	bb09      	cbnz	r1, 90003388 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
90003344:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
90003346:	6840      	ldr	r0, [r0, #4]
90003348:	4611      	mov	r1, r2
9000334a:	6803      	ldr	r3, [r0, #0]
9000334c:	68db      	ldr	r3, [r3, #12]
9000334e:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003350:	6860      	ldr	r0, [r4, #4]
90003352:	4a10      	ldr	r2, [pc, #64]	@ (90003394 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
90003354:	6803      	ldr	r3, [r0, #0]
90003356:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003358:	4293      	cmp	r3, r2
9000335a:	d10c      	bne.n	90003376 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
9000335c:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
9000335e:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003360:	2300      	movs	r3, #0
90003362:	4a0d      	ldr	r2, [pc, #52]	@ (90003398 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
90003364:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003366:	60e0      	str	r0, [r4, #12]
90003368:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
9000336a:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
9000336e:	d104      	bne.n	9000337a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
90003370:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003374:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003376:	4798      	blx	r3
90003378:	e7f1      	b.n	9000335e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
9000337a:	4620      	mov	r0, r4
9000337c:	46ac      	mov	ip, r5
9000337e:	2201      	movs	r2, #1
90003380:	4619      	mov	r1, r3
    }
90003382:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003386:	4760      	bx	ip
        assert(handle < no_streams);
90003388:	4b04      	ldr	r3, [pc, #16]	@ (9000339c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
9000338a:	215e      	movs	r1, #94	@ 0x5e
9000338c:	4a04      	ldr	r2, [pc, #16]	@ (900033a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
9000338e:	4805      	ldr	r0, [pc, #20]	@ (900033a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
90003390:	f024 fff2 	bl	90028378 <__assert_func>
90003394:	9000100d 	.word	0x9000100d
90003398:	900033a9 	.word	0x900033a9
9000339c:	90029dc8 	.word	0x90029dc8
900033a0:	9002a844 	.word	0x9002a844
900033a4:	90029ef8 	.word	0x90029ef8

900033a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033a8:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033aa:	2900      	cmp	r1, #0
900033ac:	d14f      	bne.n	9000344e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900033ae:	4604      	mov	r4, r0
        switch (cmd)
900033b0:	2a05      	cmp	r2, #5
900033b2:	d80b      	bhi.n	900033cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033b4:	e8df f002 	tbb	[pc, r2]
900033b8:	3c373311 	.word	0x3c373311
900033bc:	0b03      	.short	0x0b03
            stream.isPlaying = false;
900033be:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
900033c0:	2201      	movs	r2, #1
            stream.isPlaying = false;
900033c2:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
900033c6:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
900033c8:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
900033ca:	6103      	str	r3, [r0, #16]
    }
900033cc:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
900033ce:	3b00      	subs	r3, #0
900033d0:	bf18      	it	ne
900033d2:	2301      	movne	r3, #1
900033d4:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
900033d8:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
900033da:	6840      	ldr	r0, [r0, #4]
900033dc:	6803      	ldr	r3, [r0, #0]
900033de:	691b      	ldr	r3, [r3, #16]
900033e0:	4798      	blx	r3
900033e2:	2800      	cmp	r0, #0
900033e4:	d0f2      	beq.n	900033cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
900033e6:	2300      	movs	r3, #0
                stream.isPlaying = true;
900033e8:	2101      	movs	r1, #1
                if (!stream.repeat)
900033ea:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
900033ee:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
900033f2:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
900033f4:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
900033f6:	2a00      	cmp	r2, #0
900033f8:	d1e8      	bne.n	900033cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033fa:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033fc:	4917      	ldr	r1, [pc, #92]	@ (9000345c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
900033fe:	6823      	ldr	r3, [r4, #0]
90003400:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003402:	428a      	cmp	r2, r1
90003404:	d11e      	bne.n	90003444 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
90003406:	6965      	ldr	r5, [r4, #20]
90003408:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000340a:	4620      	mov	r0, r4
9000340c:	4798      	blx	r3
9000340e:	4285      	cmp	r5, r0
90003410:	d1dc      	bne.n	900033cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
90003412:	6823      	ldr	r3, [r4, #0]
90003414:	4620      	mov	r0, r4
90003416:	699b      	ldr	r3, [r3, #24]
    }
90003418:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
9000341c:	4718      	bx	r3
            stream.isPlaying = false;
9000341e:	2300      	movs	r3, #0
90003420:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
90003424:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
90003426:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003428:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
9000342a:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
9000342c:	6102      	str	r2, [r0, #16]
    }
9000342e:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003430:	2101      	movs	r1, #1
            stream.frameCount = 0;
90003432:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003434:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
90003436:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
9000343a:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
9000343e:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003440:	6102      	str	r2, [r0, #16]
    }
90003442:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003444:	4620      	mov	r0, r4
90003446:	4790      	blx	r2
90003448:	6823      	ldr	r3, [r4, #0]
9000344a:	4605      	mov	r5, r0
9000344c:	e7dc      	b.n	90003408 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
9000344e:	4b04      	ldr	r3, [pc, #16]	@ (90003460 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003450:	216e      	movs	r1, #110	@ 0x6e
90003452:	4a04      	ldr	r2, [pc, #16]	@ (90003464 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
90003454:	4804      	ldr	r0, [pc, #16]	@ (90003468 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
90003456:	f024 ff8f 	bl	90028378 <__assert_func>
9000345a:	bf00      	nop
9000345c:	9000100d 	.word	0x9000100d
90003460:	90029dc8 	.word	0x90029dc8
90003464:	9002a97c 	.word	0x9002a97c
90003468:	90029ef8 	.word	0x90029ef8

9000346c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
9000346c:	b538      	push	{r3, r4, r5, lr}
9000346e:	4604      	mov	r4, r0
    HAL::initialize();
90003470:	f00c fd39 	bl	9000fee6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90003474:	6823      	ldr	r3, [r4, #0]
90003476:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
90003478:	f011 ff46 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
9000347c:	4601      	mov	r1, r0
9000347e:	4620      	mov	r0, r4
90003480:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003482:	6823      	ldr	r3, [r4, #0]
90003484:	4a13      	ldr	r2, [pc, #76]	@ (900034d4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
90003486:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
9000348a:	4295      	cmp	r5, r2
9000348c:	d116      	bne.n	900034bc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000348e:	4a12      	ldr	r2, [pc, #72]	@ (900034d8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90003490:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90003492:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90003496:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000349a:	4810      	ldr	r0, [pc, #64]	@ (900034dc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000349c:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034a0:	4a0f      	ldr	r2, [pc, #60]	@ (900034e0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034a2:	7005      	strb	r5, [r0, #0]
900034a4:	4293      	cmp	r3, r2
900034a6:	d110      	bne.n	900034ca <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034a8:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034aa:	4a0e      	ldr	r2, [pc, #56]	@ (900034e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034ac:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034ae:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900034b0:	4b0d      	ldr	r3, [pc, #52]	@ (900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900034b2:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900034b4:	4a0d      	ldr	r2, [pc, #52]	@ (900034ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900034b6:	6459      	str	r1, [r3, #68]	@ 0x44
900034b8:	6053      	str	r3, [r2, #4]
}
900034ba:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034bc:	4a0c      	ldr	r2, [pc, #48]	@ (900034f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
900034be:	2300      	movs	r3, #0
900034c0:	4620      	mov	r0, r4
900034c2:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
900034c6:	47a8      	blx	r5
900034c8:	e7f2      	b.n	900034b0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900034ca:	2100      	movs	r1, #0
900034cc:	4620      	mov	r0, r4
900034ce:	4798      	blx	r3
900034d0:	e7ee      	b.n	900034b0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900034d2:	bf00      	nop
900034d4:	90000f31 	.word	0x90000f31
900034d8:	d003fc00 	.word	0xd003fc00
900034dc:	240218b2 	.word	0x240218b2
900034e0:	90000d6d 	.word	0x90000d6d
900034e4:	240218b3 	.word	0x240218b3
900034e8:	2400741c 	.word	0x2400741c
900034ec:	240073ec 	.word	0x240073ec
900034f0:	d007f800 	.word	0xd007f800

900034f4 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
900034f4:	4842      	ldr	r0, [pc, #264]	@ (90003600 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
{
900034f6:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
900034f8:	6804      	ldr	r4, [r0, #0]
900034fa:	f3bf 8f5b 	dmb	ish
900034fe:	f014 0401 	ands.w	r4, r4, #1
90003502:	d001      	beq.n	90003508 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
90003504:	483f      	ldr	r0, [pc, #252]	@ (90003604 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
90003506:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003508:	f024 fbc0 	bl	90027c8c <__cxa_guard_acquire>
9000350c:	2800      	cmp	r0, #0
9000350e:	d0f9      	beq.n	90003504 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003510:	4d3c      	ldr	r5, [pc, #240]	@ (90003604 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
90003512:	4b3d      	ldr	r3, [pc, #244]	@ (90003608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003514:	4e3d      	ldr	r6, [pc, #244]	@ (9000360c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
90003516:	f105 0034 	add.w	r0, r5, #52	@ 0x34
9000351a:	612c      	str	r4, [r5, #16]
9000351c:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003520:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
90003524:	e9c5 3400 	strd	r3, r4, [r5]
90003528:	e9c5 4402 	strd	r4, r4, [r5, #8]
9000352c:	f013 fa79 	bl	90016a22 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003530:	f105 0058 	add.w	r0, r5, #88	@ 0x58
90003534:	f00e ff7e 	bl	90012434 <_ZN8touchgfx12CanvasWidgetC1Ev>
90003538:	4935      	ldr	r1, [pc, #212]	@ (90003610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
9000353a:	4a36      	ldr	r2, [pc, #216]	@ (90003614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
9000353c:	6833      	ldr	r3, [r6, #0]
9000353e:	65a9      	str	r1, [r5, #88]	@ 0x58
90003540:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90003544:	4934      	ldr	r1, [pc, #208]	@ (90003618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
90003546:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
9000354a:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
9000354e:	6029      	str	r1, [r5, #0]
90003550:	b192      	cbz	r2, 90003578 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
90003552:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90003554:	2800      	cmp	r0, #0
90003556:	d03f      	beq.n	900035d8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe4>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90003558:	6803      	ldr	r3, [r0, #0]
9000355a:	4c30      	ldr	r4, [pc, #192]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
9000355c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000355e:	42a2      	cmp	r2, r4
90003560:	d017      	beq.n	90003592 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003562:	4790      	blx	r2
        return auxiliaryLCD;
90003564:	6833      	ldr	r3, [r6, #0]
90003566:	fab0 f680 	clz	r6, r0
9000356a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000356c:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
9000356e:	2800      	cmp	r0, #0
90003570:	d03e      	beq.n	900035f0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfc>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003572:	6803      	ldr	r3, [r0, #0]
90003574:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003576:	e00a      	b.n	9000358e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
90003578:	6898      	ldr	r0, [r3, #8]
9000357a:	4c28      	ldr	r4, [pc, #160]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
9000357c:	6802      	ldr	r2, [r0, #0]
9000357e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90003580:	42a2      	cmp	r2, r4
90003582:	d1ee      	bne.n	90003562 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
90003584:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90003586:	b120      	cbz	r0, 90003592 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
90003588:	6803      	ldr	r3, [r0, #0]
9000358a:	2601      	movs	r6, #1
9000358c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000358e:	42a3      	cmp	r3, r4
90003590:	d129      	bne.n	900035e6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf2>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90003592:	4923      	ldr	r1, [pc, #140]	@ (90003620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90003594:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
90003596:	2300      	movs	r3, #0
        : AbstractPainter(),
90003598:	2464      	movs	r4, #100	@ 0x64
9000359a:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : widgetWidth(0)
9000359e:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035a2:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035a6:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900035aa:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900035ae:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900035b2:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
        : AbstractPainter(),
900035b6:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
900035ba:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
900035be:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
900035c2:	4a18      	ldr	r2, [pc, #96]	@ (90003624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
900035c4:	4818      	ldr	r0, [pc, #96]	@ (90003628 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
900035c6:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
900035ca:	f024 fef3 	bl	900283b4 <atexit>
900035ce:	480c      	ldr	r0, [pc, #48]	@ (90003600 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
900035d0:	f024 fb68 	bl	90027ca4 <__cxa_guard_release>
}
900035d4:	480b      	ldr	r0, [pc, #44]	@ (90003604 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
900035d6:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900035d8:	6898      	ldr	r0, [r3, #8]
900035da:	4c10      	ldr	r4, [pc, #64]	@ (9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035dc:	6803      	ldr	r3, [r0, #0]
900035de:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035e0:	42a2      	cmp	r2, r4
900035e2:	d0d6      	beq.n	90003592 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035e4:	e7bd      	b.n	90003562 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035e6:	4798      	blx	r3
900035e8:	2800      	cmp	r0, #0
900035ea:	bf08      	it	eq
900035ec:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900035f0:	2e00      	cmp	r6, #0
900035f2:	d1ce      	bne.n	90003592 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035f4:	4b0d      	ldr	r3, [pc, #52]	@ (9000362c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
900035f6:	212c      	movs	r1, #44	@ 0x2c
900035f8:	4a0d      	ldr	r2, [pc, #52]	@ (90003630 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
900035fa:	480e      	ldr	r0, [pc, #56]	@ (90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
900035fc:	f024 febc 	bl	90028378 <__assert_func>
90003600:	2400732c 	.word	0x2400732c
90003604:	24007330 	.word	0x24007330
90003608:	9002bf4c 	.word	0x9002bf4c
9000360c:	240218b4 	.word	0x240218b4
90003610:	9002ac08 	.word	0x9002ac08
90003614:	9002abe8 	.word	0x9002abe8
90003618:	9002ac80 	.word	0x9002ac80
9000361c:	90002ea1 	.word	0x90002ea1
90003620:	9002bf00 	.word	0x9002bf00
90003624:	9002bee0 	.word	0x9002bee0
90003628:	90002ed1 	.word	0x90002ed1
9000362c:	9002aae0 	.word	0x9002aae0
90003630:	9002ab40 	.word	0x9002ab40
90003634:	9002ab7c 	.word	0x9002ab7c

90003638 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003638:	b510      	push	{r4, lr}
        return instance;
9000363a:	4c14      	ldr	r4, [pc, #80]	@ (9000368c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
9000363c:	6823      	ldr	r3, [r4, #0]
9000363e:	b323      	cbz	r3, 9000368a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003640:	4b13      	ldr	r3, [pc, #76]	@ (90003690 <HAL_LTDC_LineEventCallback+0x58>)
90003642:	4a14      	ldr	r2, [pc, #80]	@ (90003694 <HAL_LTDC_LineEventCallback+0x5c>)
90003644:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90003646:	8811      	ldrh	r1, [r2, #0]
90003648:	428b      	cmp	r3, r1
9000364a:	d00a      	beq.n	90003662 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
9000364c:	f006 fce8 	bl	9000a020 <HAL_LTDC_ProgramLineEvent>
90003650:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90003652:	6803      	ldr	r3, [r0, #0]
90003654:	6a1b      	ldr	r3, [r3, #32]
90003656:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90003658:	2000      	movs	r0, #0
        }
    }
9000365a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000365e:	f7fd bb29 	b.w	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90003662:	4b0d      	ldr	r3, [pc, #52]	@ (90003698 <HAL_LTDC_LineEventCallback+0x60>)
90003664:	8819      	ldrh	r1, [r3, #0]
90003666:	f006 fcdb 	bl	9000a020 <HAL_LTDC_ProgramLineEvent>
        return instance;
9000366a:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
9000366c:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
90003670:	3301      	adds	r3, #1
90003672:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            OSWrappers::signalVSync();
90003676:	f7fe fe75 	bl	90002364 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
9000367a:	6820      	ldr	r0, [r4, #0]
9000367c:	f00d f97e 	bl	9001097c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90003680:	2000      	movs	r0, #0
    }
90003682:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90003686:	f7fd bae1 	b.w	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
9000368a:	bd10      	pop	{r4, pc}
9000368c:	240218b4 	.word	0x240218b4
90003690:	50001000 	.word	0x50001000
90003694:	2400732a 	.word	0x2400732a
90003698:	24007328 	.word	0x24007328

9000369c <_GLOBAL__sub_I_mjpegdecoder1>:
}
9000369c:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
9000369e:	480b      	ldr	r0, [pc, #44]	@ (900036cc <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900036a0:	f7fd fe2a 	bl	900012f8 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900036a4:	4c0a      	ldr	r4, [pc, #40]	@ (900036d0 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900036a6:	4b0b      	ldr	r3, [pc, #44]	@ (900036d4 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900036a8:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036aa:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900036ae:	2101      	movs	r1, #1
900036b0:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036b2:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
900036b4:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
900036b8:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
900036bc:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
900036be:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
900036c2:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
900036c6:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
900036ca:	bd10      	pop	{r4, pc}
900036cc:	2400741c 	.word	0x2400741c
900036d0:	9002accc 	.word	0x9002accc
900036d4:	240073ec 	.word	0x240073ec

900036d8 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
900036d8:	4901      	ldr	r1, [pc, #4]	@ (900036e0 <vApplicationIdleHook+0x8>)
900036da:	2000      	movs	r0, #0
900036dc:	f00b b97e 	b.w	9000e9dc <vTaskSetApplicationTaskTag>
900036e0:	90000fed 	.word	0x90000fed

900036e4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
900036e4:	b580      	push	{r7, lr}
900036e6:	4e0e      	ldr	r6, [pc, #56]	@ (90003720 <StartDefaultTask+0x3c>)
900036e8:	4f0e      	ldr	r7, [pc, #56]	@ (90003724 <StartDefaultTask+0x40>)
    	HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
900036ea:	4c0f      	ldr	r4, [pc, #60]	@ (90003728 <StartDefaultTask+0x44>)
    if(state) {
900036ec:	7833      	ldrb	r3, [r6, #0]
		HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_RESET);
900036ee:	2200      	movs	r2, #0
900036f0:	2104      	movs	r1, #4
900036f2:	4620      	mov	r0, r4
    highTime = totalTime - (brightness); // Map Value inversely to a range of 0 to 255
900036f4:	683d      	ldr	r5, [r7, #0]
    if(state) {
900036f6:	b173      	cbz	r3, 90003716 <StartDefaultTask+0x32>
		HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_RESET);
900036f8:	f004 f992 	bl	90007a20 <HAL_GPIO_WritePin>
		osDelay(highTime);
900036fc:	f1c5 00ff 	rsb	r0, r5, #255	@ 0xff
90003700:	f009 f882 	bl	9000c808 <osDelay>
		HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
90003704:	4620      	mov	r0, r4
90003706:	2201      	movs	r2, #1
90003708:	2104      	movs	r1, #4
9000370a:	f004 f989 	bl	90007a20 <HAL_GPIO_WritePin>
		osDelay(lowTime);
9000370e:	4628      	mov	r0, r5
90003710:	f009 f87a 	bl	9000c808 <osDelay>
90003714:	e7ea      	b.n	900036ec <StartDefaultTask+0x8>
    	HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_SET);
90003716:	2201      	movs	r2, #1
90003718:	2104      	movs	r1, #4
9000371a:	f004 f981 	bl	90007a20 <HAL_GPIO_WritePin>
}
9000371e:	e7e5      	b.n	900036ec <StartDefaultTask+0x8>
90003720:	24007808 	.word	0x24007808
90003724:	2400780c 	.word	0x2400780c
90003728:	58022400 	.word	0x58022400

9000372c <SystemClock_Config>:
{
9000372c:	b570      	push	{r4, r5, r6, lr}
9000372e:	b0a0      	sub	sp, #128	@ 0x80
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003730:	224c      	movs	r2, #76	@ 0x4c
90003732:	2100      	movs	r1, #0
90003734:	a80c      	add	r0, sp, #48	@ 0x30
90003736:	f025 f8bb 	bl	900288b0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
9000373a:	2220      	movs	r2, #32
9000373c:	2100      	movs	r1, #0
9000373e:	a804      	add	r0, sp, #16
90003740:	f025 f8b6 	bl	900288b0 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003744:	2002      	movs	r0, #2
90003746:	f006 fed5 	bl	9000a4f4 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
9000374a:	4b34      	ldr	r3, [pc, #208]	@ (9000381c <SystemClock_Config+0xf0>)
9000374c:	2100      	movs	r1, #0
9000374e:	4a34      	ldr	r2, [pc, #208]	@ (90003820 <SystemClock_Config+0xf4>)
90003750:	9101      	str	r1, [sp, #4]
90003752:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003754:	f021 0101 	bic.w	r1, r1, #1
90003758:	62d9      	str	r1, [r3, #44]	@ 0x2c
9000375a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000375c:	f003 0301 	and.w	r3, r3, #1
90003760:	9301      	str	r3, [sp, #4]
90003762:	6993      	ldr	r3, [r2, #24]
90003764:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
90003768:	6193      	str	r3, [r2, #24]
9000376a:	6993      	ldr	r3, [r2, #24]
9000376c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
90003770:	9301      	str	r3, [sp, #4]
90003772:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003774:	6993      	ldr	r3, [r2, #24]
90003776:	0498      	lsls	r0, r3, #18
90003778:	d5fc      	bpl.n	90003774 <SystemClock_Config+0x48>
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000377a:	4b2a      	ldr	r3, [pc, #168]	@ (90003824 <SystemClock_Config+0xf8>)
9000377c:	f8d3 10f4 	ldr.w	r1, [r3, #244]	@ 0xf4
90003780:	f041 0102 	orr.w	r1, r1, #2
90003784:	f8c3 10f4 	str.w	r1, [r3, #244]	@ 0xf4
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003788:	2100      	movs	r1, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000378a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
9000378e:	f003 0302 	and.w	r3, r3, #2
90003792:	9302      	str	r3, [sp, #8]
90003794:	9b02      	ldr	r3, [sp, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003796:	9103      	str	r1, [sp, #12]
90003798:	6991      	ldr	r1, [r2, #24]
9000379a:	4b20      	ldr	r3, [pc, #128]	@ (9000381c <SystemClock_Config+0xf0>)
9000379c:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
900037a0:	6191      	str	r1, [r2, #24]
900037a2:	6992      	ldr	r2, [r2, #24]
900037a4:	f402 4240 	and.w	r2, r2, #49152	@ 0xc000
900037a8:	9203      	str	r2, [sp, #12]
900037aa:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900037ac:	4a1c      	ldr	r2, [pc, #112]	@ (90003820 <SystemClock_Config+0xf4>)
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
900037ae:	f041 0101 	orr.w	r1, r1, #1
900037b2:	62d9      	str	r1, [r3, #44]	@ 0x2c
900037b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900037b6:	f003 0301 	and.w	r3, r3, #1
900037ba:	9303      	str	r3, [sp, #12]
900037bc:	9b03      	ldr	r3, [sp, #12]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900037be:	6993      	ldr	r3, [r2, #24]
900037c0:	0499      	lsls	r1, r3, #18
900037c2:	d5fc      	bpl.n	900037be <SystemClock_Config+0x92>
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
900037c4:	2302      	movs	r3, #2
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900037c6:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
900037ca:	2001      	movs	r0, #1
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
900037cc:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLQ = 4;
900037ce:	2604      	movs	r6, #4
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
900037d0:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLN = 192;
900037d2:	2205      	movs	r2, #5
  RCC_OscInitStruct.PLL.PLLP = 2;
900037d4:	9319      	str	r3, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLR = 2;
900037d6:	931b      	str	r3, [sp, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLQ = 4;
900037d8:	961a      	str	r6, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
900037da:	941e      	str	r4, [sp, #120]	@ 0x78
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
900037dc:	e9cd 3315 	strd	r3, r3, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLN = 192;
900037e0:	23c0      	movs	r3, #192	@ 0xc0
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900037e2:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
900037e6:	a80c      	add	r0, sp, #48	@ 0x30
  RCC_OscInitStruct.PLL.PLLN = 192;
900037e8:	e9cd 2317 	strd	r2, r3, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
900037ec:	e9cd 541c 	strd	r5, r4, [sp, #112]	@ 0x70
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
900037f0:	f006 ff16 	bl	9000a620 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
900037f4:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
900037f6:	223f      	movs	r2, #63	@ 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
900037f8:	4631      	mov	r1, r6
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
900037fa:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
900037fc:	a804      	add	r0, sp, #16
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
900037fe:	9204      	str	r2, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003800:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90003802:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90003804:	9406      	str	r4, [sp, #24]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003806:	9205      	str	r2, [sp, #20]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003808:	e9cd 5307 	strd	r5, r3, [sp, #28]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
9000380c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003810:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003812:	f007 fa85 	bl	9000ad20 <HAL_RCC_ClockConfig>
}
90003816:	b020      	add	sp, #128	@ 0x80
90003818:	bd70      	pop	{r4, r5, r6, pc}
9000381a:	bf00      	nop
9000381c:	58000400 	.word	0x58000400
90003820:	58024800 	.word	0x58024800
90003824:	58024400 	.word	0x58024400

90003828 <main>:
{
90003828:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
9000382a:	2400      	movs	r4, #0
{
9000382c:	b098      	sub	sp, #96	@ 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
9000382e:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003830:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003832:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003834:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90003838:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_MPU_Disable();
9000383c:	f003 fcd8 	bl	900071f0 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003840:	f04f 5310 	mov.w	r3, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003844:	49d4      	ldr	r1, [pc, #848]	@ (90003b98 <main+0x370>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003846:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90003848:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
9000384a:	4bd4      	ldr	r3, [pc, #848]	@ (90003b9c <main+0x374>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
9000384c:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003850:	e9cd 130d 	strd	r1, r3, [sp, #52]	@ 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003854:	f003 fcea 	bl	9000722c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003858:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000385c:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
9000385e:	f88d 4037 	strb.w	r4, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90003862:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003864:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003868:	f88d 502d 	strb.w	r5, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
9000386c:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003870:	f003 fcdc 	bl	9000722c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003874:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003876:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003878:	f8ad 6037 	strh.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
9000387c:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90003880:	231a      	movs	r3, #26
90003882:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003886:	f240 1301 	movw	r3, #257	@ 0x101
9000388a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000388e:	f003 fccd 	bl	9000722c <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003892:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003896:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003898:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
9000389c:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
9000389e:	f8ad 3037 	strh.w	r3, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
900038a2:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
900038a6:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
900038aa:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
900038ac:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038b0:	f003 fcbc 	bl	9000722c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900038b4:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038b6:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900038b8:	f88d 6037 	strb.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900038bc:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900038c0:	f88d 402d 	strb.w	r4, [sp, #45]	@ 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900038c4:	f88d 503a 	strb.w	r5, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038c8:	f003 fcb0 	bl	9000722c <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
900038cc:	4620      	mov	r0, r4
900038ce:	f003 fc9d 	bl	9000720c <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
900038d2:	4ab3      	ldr	r2, [pc, #716]	@ (90003ba0 <main+0x378>)
900038d4:	6953      	ldr	r3, [r2, #20]
900038d6:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
900038da:	d111      	bne.n	90003900 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
900038dc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900038e0:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
900038e4:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
900038e8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900038ec:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
900038f0:	6953      	ldr	r3, [r2, #20]
900038f2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
900038f6:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
900038f8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900038fc:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003900:	48a7      	ldr	r0, [pc, #668]	@ (90003ba0 <main+0x378>)
90003902:	6943      	ldr	r3, [r0, #20]
90003904:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003908:	d124      	bne.n	90003954 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000390a:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
9000390e:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003912:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003916:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000391a:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000391e:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003922:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003924:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003928:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000392a:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000392e:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003930:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003934:	1c5a      	adds	r2, r3, #1
90003936:	d1f8      	bne.n	9000392a <main+0x102>
    } while(sets-- != 0U);
90003938:	3c20      	subs	r4, #32
9000393a:	f114 0f20 	cmn.w	r4, #32
9000393e:	d1f1      	bne.n	90003924 <main+0xfc>
90003940:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003944:	6943      	ldr	r3, [r0, #20]
90003946:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000394a:	6143      	str	r3, [r0, #20]
9000394c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003950:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003954:	f003 fb96 	bl	90007084 <HAL_Init>
  SystemClock_Config();
90003958:	f7ff fee8 	bl	9000372c <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
9000395c:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000395e:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003960:	4d90      	ldr	r5, [pc, #576]	@ (90003ba4 <main+0x37c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003962:	21c0      	movs	r1, #192	@ 0xc0
90003964:	4890      	ldr	r0, [pc, #576]	@ (90003ba8 <main+0x380>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003966:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003968:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000396a:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000396c:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003970:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003972:	f04f 0940 	mov.w	r9, #64	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003976:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000397a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
9000397e:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003982:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003986:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
9000398a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000398e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003992:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003996:	9301      	str	r3, [sp, #4]
90003998:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
9000399a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000399e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
900039a2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039a6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039aa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
900039ae:	9302      	str	r3, [sp, #8]
900039b0:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
900039b2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039b6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
900039ba:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039be:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039c2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900039c6:	9303      	str	r3, [sp, #12]
900039c8:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900039ca:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039ce:	f043 0310 	orr.w	r3, r3, #16
900039d2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039d6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039da:	f003 0310 	and.w	r3, r3, #16
900039de:	9304      	str	r3, [sp, #16]
900039e0:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
900039e2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039e6:	f043 0302 	orr.w	r3, r3, #2
900039ea:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039ee:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039f2:	f003 0302 	and.w	r3, r3, #2
900039f6:	9305      	str	r3, [sp, #20]
900039f8:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
900039fa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039fe:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003a02:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a06:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a0a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003a0e:	9306      	str	r3, [sp, #24]
90003a10:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003a12:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a16:	f043 0308 	orr.w	r3, r3, #8
90003a1a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a1e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a22:	f003 0308 	and.w	r3, r3, #8
90003a26:	9307      	str	r3, [sp, #28]
90003a28:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003a2a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a2e:	f043 0320 	orr.w	r3, r3, #32
90003a32:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a36:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a3a:	f003 0320 	and.w	r3, r3, #32
90003a3e:	9308      	str	r3, [sp, #32]
90003a40:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003a42:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a46:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003a4a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a4e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a52:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003a56:	9309      	str	r3, [sp, #36]	@ 0x24
90003a58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003a5a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a5e:	f043 0301 	orr.w	r3, r3, #1
90003a62:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a66:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a6a:	f003 0301 	and.w	r3, r3, #1
90003a6e:	930a      	str	r3, [sp, #40]	@ 0x28
90003a70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003a72:	f003 ffd5 	bl	90007a20 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003a76:	4622      	mov	r2, r4
90003a78:	2180      	movs	r1, #128	@ 0x80
90003a7a:	484c      	ldr	r0, [pc, #304]	@ (90003bac <main+0x384>)
90003a7c:	f003 ffd0 	bl	90007a20 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003a80:	4622      	mov	r2, r4
90003a82:	2108      	movs	r1, #8
90003a84:	484a      	ldr	r0, [pc, #296]	@ (90003bb0 <main+0x388>)
90003a86:	f003 ffcb 	bl	90007a20 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003a8a:	2201      	movs	r2, #1
90003a8c:	4849      	ldr	r0, [pc, #292]	@ (90003bb4 <main+0x38c>)
90003a8e:	4611      	mov	r1, r2
90003a90:	f003 ffc6 	bl	90007a20 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003a94:	4622      	mov	r2, r4
90003a96:	2140      	movs	r1, #64	@ 0x40
90003a98:	4847      	ldr	r0, [pc, #284]	@ (90003bb8 <main+0x390>)
90003a9a:	f003 ffc1 	bl	90007a20 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_RESET);
90003a9e:	4622      	mov	r2, r4
90003aa0:	2104      	movs	r1, #4
90003aa2:	4846      	ldr	r0, [pc, #280]	@ (90003bbc <main+0x394>)
90003aa4:	f003 ffbc 	bl	90007a20 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90003aa8:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003aaa:	a90b      	add	r1, sp, #44	@ 0x2c
90003aac:	483e      	ldr	r0, [pc, #248]	@ (90003ba8 <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003aae:	e9cd 360b 	strd	r3, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003ab2:	e9cd 480d 	strd	r4, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003ab6:	f003 fda1 	bl	900075fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003aba:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003abc:	a90b      	add	r1, sp, #44	@ 0x2c
90003abe:	483b      	ldr	r0, [pc, #236]	@ (90003bac <main+0x384>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003ac0:	930b      	str	r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003ac2:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003ac4:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003ac8:	f003 fd98 	bl	900075fc <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003acc:	a90b      	add	r1, sp, #44	@ 0x2c
90003ace:	4838      	ldr	r0, [pc, #224]	@ (90003bb0 <main+0x388>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003ad0:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003ad4:	970b      	str	r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003ad6:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003ada:	f003 fd8f 	bl	900075fc <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003ade:	a90b      	add	r1, sp, #44	@ 0x2c
90003ae0:	4834      	ldr	r0, [pc, #208]	@ (90003bb4 <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003ae2:	e9cd 660b 	strd	r6, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003ae6:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003aea:	f003 fd87 	bl	900075fc <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003aee:	a90b      	add	r1, sp, #44	@ 0x2c
90003af0:	4831      	ldr	r0, [pc, #196]	@ (90003bb8 <main+0x390>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003af2:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = GPIO_PIN_2;
90003af6:	f04f 0804 	mov.w	r8, #4
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003afa:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003afe:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003b02:	f003 fd7b 	bl	900075fc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003b06:	a90b      	add	r1, sp, #44	@ 0x2c
90003b08:	482c      	ldr	r0, [pc, #176]	@ (90003bbc <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003b0a:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003b0e:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003b12:	f003 fd73 	bl	900075fc <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b16:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b1a:	4622      	mov	r2, r4
90003b1c:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b1e:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b20:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b22:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003b26:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003b2a:	4d25      	ldr	r5, [pc, #148]	@ (90003bc0 <main+0x398>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b2c:	4033      	ands	r3, r6
90003b2e:	9300      	str	r3, [sp, #0]
90003b30:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b32:	f003 fb01 	bl	90007138 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003b36:	207a      	movs	r0, #122	@ 0x7a
90003b38:	f003 fb3a 	bl	900071b0 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003b3c:	2234      	movs	r2, #52	@ 0x34
90003b3e:	4621      	mov	r1, r4
90003b40:	a80b      	add	r0, sp, #44	@ 0x2c
90003b42:	f024 feb5 	bl	900288b0 <memset>
  hltdc.Instance = LTDC;
90003b46:	4b1f      	ldr	r3, [pc, #124]	@ (90003bc4 <main+0x39c>)
  hltdc.Init.AccumulatedVBP = 11;
90003b48:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.VerticalSync = 8;
90003b4a:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90003b4c:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003b4e:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003b50:	f240 270a 	movw	r7, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003b54:	f44f 7c04 	mov.w	ip, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003b58:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003b5a:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003b5c:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003b5e:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003b62:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003b66:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003b6a:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003b6c:	e9c5 7309 	strd	r7, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003b70:	f240 131d 	movw	r3, #285	@ 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003b74:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90003b76:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003b7a:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003b7e:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003b82:	f006 f8a5 	bl	90009cd0 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003b86:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003b8a:	4622      	mov	r2, r4
90003b8c:	a90b      	add	r1, sp, #44	@ 0x2c
  pLayerCfg.WindowX1 = 480;
90003b8e:	930c      	str	r3, [sp, #48]	@ 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003b90:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003b92:	9315      	str	r3, [sp, #84]	@ 0x54
90003b94:	e018      	b.n	90003bc8 <main+0x3a0>
90003b96:	bf00      	nop
90003b98:	03000012 	.word	0x03000012
90003b9c:	01010001 	.word	0x01010001
90003ba0:	e000ed00 	.word	0xe000ed00
90003ba4:	58024400 	.word	0x58024400
90003ba8:	58020400 	.word	0x58020400
90003bac:	58020c00 	.word	0x58020c00
90003bb0:	58021800 	.word	0x58021800
90003bb4:	58022800 	.word	0x58022800
90003bb8:	58020000 	.word	0x58020000
90003bbc:	58022400 	.word	0x58022400
90003bc0:	240074a0 	.word	0x240074a0
90003bc4:	50001000 	.word	0x50001000
  pLayerCfg.WindowY1 = 272;
90003bc8:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90003bcc:	4d3c      	ldr	r5, [pc, #240]	@ (90003cc0 <main+0x498>)
  pLayerCfg.WindowY1 = 272;
90003bce:	930e      	str	r3, [sp, #56]	@ 0x38
  pLayerCfg.ImageHeight = 272;
90003bd0:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Alpha = 255;
90003bd2:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003bd4:	940b      	str	r4, [sp, #44]	@ 0x2c
  pLayerCfg.Alpha = 255;
90003bd6:	9310      	str	r3, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003bd8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  pLayerCfg.WindowY0 = 0;
90003bdc:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003bde:	9312      	str	r3, [sp, #72]	@ 0x48
  pLayerCfg.Alpha0 = 0;
90003be0:	9411      	str	r4, [sp, #68]	@ 0x44
  pLayerCfg.FBStartAdress = 0;
90003be2:	9414      	str	r4, [sp, #80]	@ 0x50
  pLayerCfg.Backcolor.Blue = 0;
90003be4:	f8ad 405c 	strh.w	r4, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
90003be8:	f88d 405e 	strb.w	r4, [sp, #94]	@ 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003bec:	970f      	str	r7, [sp, #60]	@ 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003bee:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003bf2:	f006 f941 	bl	90009e78 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003bf6:	4b33      	ldr	r3, [pc, #204]	@ (90003cc4 <main+0x49c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003bf8:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003bfa:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003bfc:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003bfe:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003c00:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003c04:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003c08:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003c0c:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003c10:	f003 fbb2 	bl	90007378 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003c14:	4631      	mov	r1, r6
90003c16:	4628      	mov	r0, r5
90003c18:	f003 fc86 	bl	90007528 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c1c:	482a      	ldr	r0, [pc, #168]	@ (90003cc8 <main+0x4a0>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003c1e:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003c22:	a90b      	add	r1, sp, #44	@ 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90003c24:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90003c28:	970b      	str	r7, [sp, #44]	@ 0x2c
  SdramTiming.SelfRefreshTime = 4;
90003c2a:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003c2e:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003c32:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003c36:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003c38:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003c3c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90003c40:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003c42:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
90003c46:	6243      	str	r3, [r0, #36]	@ 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90003c48:	2307      	movs	r3, #7
90003c4a:	930c      	str	r3, [sp, #48]	@ 0x30
  SdramTiming.RowCycleDelay = 7;
90003c4c:	930e      	str	r3, [sp, #56]	@ 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c4e:	4b1f      	ldr	r3, [pc, #124]	@ (90003ccc <main+0x4a4>)
90003c50:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003c52:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90003c54:	e9cd 7710 	strd	r7, r7, [sp, #64]	@ 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003c58:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003c5a:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003c5e:	f008 fa83 	bl	9000c168 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90003c62:	4620      	mov	r0, r4
90003c64:	f002 ffaa 	bl	90006bbc <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003c68:	4620      	mov	r0, r4
90003c6a:	f002 fff1 	bl	90006c50 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003c6e:	f7fc ff1d 	bl	90000aac <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003c72:	4b17      	ldr	r3, [pc, #92]	@ (90003cd0 <main+0x4a8>)
90003c74:	4817      	ldr	r0, [pc, #92]	@ (90003cd4 <main+0x4ac>)
90003c76:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003c78:	f004 ff86 	bl	90008b88 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003c7c:	4b16      	ldr	r3, [pc, #88]	@ (90003cd8 <main+0x4b0>)
90003c7e:	4817      	ldr	r0, [pc, #92]	@ (90003cdc <main+0x4b4>)
90003c80:	6003      	str	r3, [r0, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003c82:	8084      	strh	r4, [r0, #4]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003c84:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003c86:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003c8a:	f003 faff 	bl	9000728c <HAL_CRC_Init>
  MX_TouchGFX_Init();
90003c8e:	f7fc ff11 	bl	90000ab4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90003c92:	f7fc ff0d 	bl	90000ab0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003c96:	f008 fd49 	bl	9000c72c <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003c9a:	4a11      	ldr	r2, [pc, #68]	@ (90003ce0 <main+0x4b8>)
90003c9c:	4621      	mov	r1, r4
90003c9e:	4811      	ldr	r0, [pc, #68]	@ (90003ce4 <main+0x4bc>)
90003ca0:	f008 fd70 	bl	9000c784 <osThreadNew>
90003ca4:	4b10      	ldr	r3, [pc, #64]	@ (90003ce8 <main+0x4c0>)
90003ca6:	4605      	mov	r5, r0
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003ca8:	4a10      	ldr	r2, [pc, #64]	@ (90003cec <main+0x4c4>)
90003caa:	4621      	mov	r1, r4
90003cac:	4810      	ldr	r0, [pc, #64]	@ (90003cf0 <main+0x4c8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003cae:	601d      	str	r5, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003cb0:	f008 fd68 	bl	9000c784 <osThreadNew>
90003cb4:	4b0f      	ldr	r3, [pc, #60]	@ (90003cf4 <main+0x4cc>)
90003cb6:	6018      	str	r0, [r3, #0]
  osKernelStart();
90003cb8:	f008 fd4a 	bl	9000c750 <osKernelStart>
  while (1)
90003cbc:	e7fe      	b.n	90003cbc <main+0x494>
90003cbe:	bf00      	nop
90003cc0:	24007678 	.word	0x24007678
90003cc4:	52001000 	.word	0x52001000
90003cc8:	2400746c 	.word	0x2400746c
90003ccc:	52004140 	.word	0x52004140
90003cd0:	52003000 	.word	0x52003000
90003cd4:	24007620 	.word	0x24007620
90003cd8:	58024c00 	.word	0x58024c00
90003cdc:	240076e0 	.word	0x240076e0
90003ce0:	9002ad3c 	.word	0x9002ad3c
90003ce4:	900036e5 	.word	0x900036e5
90003ce8:	24007468 	.word	0x24007468
90003cec:	9002ad18 	.word	0x9002ad18
90003cf0:	90000ac5 	.word	0x90000ac5
90003cf4:	24007464 	.word	0x24007464

90003cf8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90003cf8:	4b03      	ldr	r3, [pc, #12]	@ (90003d08 <HAL_TIM_PeriodElapsedCallback+0x10>)
90003cfa:	6802      	ldr	r2, [r0, #0]
90003cfc:	429a      	cmp	r2, r3
90003cfe:	d000      	beq.n	90003d02 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90003d00:	4770      	bx	lr
    HAL_IncTick();
90003d02:	f003 b9ef 	b.w	900070e4 <HAL_IncTick>
90003d06:	bf00      	nop
90003d08:	40001000 	.word	0x40001000

90003d0c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90003d0c:	4770      	bx	lr
90003d0e:	bf00      	nop

90003d10 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003d10:	4b0b      	ldr	r3, [pc, #44]	@ (90003d40 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003d12:	2200      	movs	r2, #0
90003d14:	210f      	movs	r1, #15
90003d16:	f06f 0001 	mvn.w	r0, #1
{
90003d1a:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003d1c:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90003d20:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003d22:	f044 0402 	orr.w	r4, r4, #2
90003d26:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90003d2a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90003d2e:	f003 0302 	and.w	r3, r3, #2
90003d32:	9301      	str	r3, [sp, #4]
90003d34:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90003d36:	b003      	add	sp, #12
90003d38:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003d3c:	f003 b9fc 	b.w	90007138 <HAL_NVIC_SetPriority>
90003d40:	58024400 	.word	0x58024400

90003d44 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90003d44:	4b0a      	ldr	r3, [pc, #40]	@ (90003d70 <HAL_CRC_MspInit+0x2c>)
90003d46:	6802      	ldr	r2, [r0, #0]
90003d48:	429a      	cmp	r2, r3
90003d4a:	d000      	beq.n	90003d4e <HAL_CRC_MspInit+0xa>
90003d4c:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90003d4e:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
90003d52:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90003d54:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003d58:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90003d5c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003d60:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90003d64:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90003d68:	9301      	str	r3, [sp, #4]
90003d6a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
90003d6c:	b002      	add	sp, #8
90003d6e:	4770      	bx	lr
90003d70:	58024c00 	.word	0x58024c00

90003d74 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90003d74:	4b0f      	ldr	r3, [pc, #60]	@ (90003db4 <HAL_DMA2D_MspInit+0x40>)
90003d76:	6802      	ldr	r2, [r0, #0]
90003d78:	429a      	cmp	r2, r3
90003d7a:	d000      	beq.n	90003d7e <HAL_DMA2D_MspInit+0xa>
90003d7c:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003d7e:	4b0e      	ldr	r3, [pc, #56]	@ (90003db8 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003d80:	205a      	movs	r0, #90	@ 0x5a
90003d82:	2200      	movs	r2, #0
90003d84:	2105      	movs	r1, #5
{
90003d86:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003d88:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90003d8c:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003d8e:	f044 0410 	orr.w	r4, r4, #16
90003d92:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
90003d96:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90003d9a:	f003 0310 	and.w	r3, r3, #16
90003d9e:	9301      	str	r3, [sp, #4]
90003da0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003da2:	f003 f9c9 	bl	90007138 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003da6:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
90003da8:	b002      	add	sp, #8
90003daa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003dae:	f003 b9ff 	b.w	900071b0 <HAL_NVIC_EnableIRQ>
90003db2:	bf00      	nop
90003db4:	52001000 	.word	0x52001000
90003db8:	58024400 	.word	0x58024400

90003dbc <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003dbc:	4b3f      	ldr	r3, [pc, #252]	@ (90003ebc <HAL_JPEG_MspInit+0x100>)
90003dbe:	6802      	ldr	r2, [r0, #0]
90003dc0:	429a      	cmp	r2, r3
90003dc2:	d000      	beq.n	90003dc6 <HAL_JPEG_MspInit+0xa>
90003dc4:	4770      	bx	lr
{
90003dc6:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003dc8:	4b3d      	ldr	r3, [pc, #244]	@ (90003ec0 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003dca:	2211      	movs	r2, #17
90003dcc:	4e3d      	ldr	r6, [pc, #244]	@ (90003ec4 <HAL_JPEG_MspInit+0x108>)
{
90003dce:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003dd0:	4d3d      	ldr	r5, [pc, #244]	@ (90003ec8 <HAL_JPEG_MspInit+0x10c>)
90003dd2:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003dd4:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003dd6:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003dd8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003ddc:	493b      	ldr	r1, [pc, #236]	@ (90003ecc <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003dde:	f042 0220 	orr.w	r2, r2, #32
90003de2:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003de6:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003de8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003dec:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003dee:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003df2:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003df4:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003df6:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003df8:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003dfa:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003dfc:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003e00:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90003e04:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003e06:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003e08:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90003e0c:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003e10:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003e12:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90003e16:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90003e1a:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003e1e:	2313      	movs	r3, #19
90003e20:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003e22:	2302      	movs	r3, #2
90003e24:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003e26:	f006 f91d 	bl	9000a064 <HAL_MDMA_Init>
90003e2a:	2800      	cmp	r0, #0
90003e2c:	d13a      	bne.n	90003ea4 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90003e2e:	2200      	movs	r2, #0
90003e30:	4824      	ldr	r0, [pc, #144]	@ (90003ec4 <HAL_JPEG_MspInit+0x108>)
90003e32:	4611      	mov	r1, r2
90003e34:	f006 f9b4 	bl	9000a1a0 <HAL_MDMA_ConfigPostRequestMask>
90003e38:	2800      	cmp	r0, #0
90003e3a:	d13c      	bne.n	90003eb6 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003e3c:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003e3e:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003e40:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003e42:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003e44:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003e46:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003e48:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003e4c:	4920      	ldr	r1, [pc, #128]	@ (90003ed0 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003e4e:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003e50:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
90003e52:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003e54:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003e56:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90003e5a:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003e5e:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003e60:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003e62:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003e66:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003e68:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003e6c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003e70:	4815      	ldr	r0, [pc, #84]	@ (90003ec8 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003e72:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003e74:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003e76:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003e78:	f006 f8f4 	bl	9000a064 <HAL_MDMA_Init>
90003e7c:	b9c0      	cbnz	r0, 90003eb0 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90003e7e:	2200      	movs	r2, #0
90003e80:	4811      	ldr	r0, [pc, #68]	@ (90003ec8 <HAL_JPEG_MspInit+0x10c>)
90003e82:	4611      	mov	r1, r2
90003e84:	f006 f98c 	bl	9000a1a0 <HAL_MDMA_ConfigPostRequestMask>
90003e88:	b978      	cbnz	r0, 90003eaa <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003e8a:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003e8c:	2079      	movs	r0, #121	@ 0x79
90003e8e:	2200      	movs	r2, #0
90003e90:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003e92:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003e94:	f003 f950 	bl	90007138 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003e98:	2079      	movs	r0, #121	@ 0x79

  /* USER CODE END JPEG_MspInit 1 */

  }

}
90003e9a:	b002      	add	sp, #8
90003e9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003ea0:	f003 b986 	b.w	900071b0 <HAL_NVIC_EnableIRQ>
      Error_Handler();
90003ea4:	f7ff ff32 	bl	90003d0c <Error_Handler>
90003ea8:	e7c1      	b.n	90003e2e <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90003eaa:	f7ff ff2f 	bl	90003d0c <Error_Handler>
90003eae:	e7ec      	b.n	90003e8a <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90003eb0:	f7ff ff2c 	bl	90003d0c <Error_Handler>
90003eb4:	e7e3      	b.n	90003e7e <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
90003eb6:	f7ff ff29 	bl	90003d0c <Error_Handler>
90003eba:	e7bf      	b.n	90003e3c <HAL_JPEG_MspInit+0x80>
90003ebc:	52003000 	.word	0x52003000
90003ec0:	58024400 	.word	0x58024400
90003ec4:	240075b4 	.word	0x240075b4
90003ec8:	24007548 	.word	0x24007548
90003ecc:	52000200 	.word	0x52000200
90003ed0:	520001c0 	.word	0x520001c0

90003ed4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90003ed4:	b570      	push	{r4, r5, r6, lr}
90003ed6:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003ed8:	2100      	movs	r1, #0
{
90003eda:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003edc:	22c0      	movs	r2, #192	@ 0xc0
90003ede:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003ee0:	9109      	str	r1, [sp, #36]	@ 0x24
90003ee2:	e9cd 1105 	strd	r1, r1, [sp, #20]
90003ee6:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003eea:	f024 fce1 	bl	900288b0 <memset>
  if(hltdc->Instance==LTDC)
90003eee:	4b4a      	ldr	r3, [pc, #296]	@ (90004018 <HAL_LTDC_MspInit+0x144>)
90003ef0:	6822      	ldr	r2, [r4, #0]
90003ef2:	429a      	cmp	r2, r3
90003ef4:	d001      	beq.n	90003efa <HAL_LTDC_MspInit+0x26>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
90003ef6:	b03a      	add	sp, #232	@ 0xe8
90003ef8:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003efa:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003efc:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003efe:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
90003f02:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003f04:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003f06:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003f08:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90003f0a:	225d      	movs	r2, #93	@ 0x5d
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90003f0c:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90003f0e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003f12:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003f14:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003f16:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90003f1a:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003f1e:	f007 f9c9 	bl	9000b2b4 <HAL_RCCEx_PeriphCLKConfig>
90003f22:	2800      	cmp	r0, #0
90003f24:	d174      	bne.n	90004010 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90003f26:	4b3d      	ldr	r3, [pc, #244]	@ (9000401c <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003f28:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003f2a:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003f2c:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90003f2e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003f32:	a905      	add	r1, sp, #20
90003f34:	483a      	ldr	r0, [pc, #232]	@ (90004020 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003f36:	f042 0208 	orr.w	r2, r2, #8
90003f3a:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
90003f3e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
90003f42:	f002 0208 	and.w	r2, r2, #8
90003f46:	9200      	str	r2, [sp, #0]
90003f48:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90003f4a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003f4e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
90003f52:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003f56:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003f5a:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
90003f5e:	9201      	str	r2, [sp, #4]
90003f60:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
90003f62:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003f66:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90003f6a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003f6e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003f72:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90003f76:	9202      	str	r2, [sp, #8]
90003f78:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90003f7a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003f7e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90003f82:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003f86:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003f8a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90003f8e:	9203      	str	r2, [sp, #12]
90003f90:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003f92:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003f96:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90003f9a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003f9e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003fa2:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003fa4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003fa8:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003faa:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003fac:	23fc      	movs	r3, #252	@ 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003fae:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003fb0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003fb2:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003fb6:	f003 fb21 	bl	900075fc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003fba:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003fbe:	a905      	add	r1, sp, #20
90003fc0:	4818      	ldr	r0, [pc, #96]	@ (90004024 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003fc2:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003fc4:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003fc8:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003fcc:	f003 fb16 	bl	900075fc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003fd0:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003fd4:	a905      	add	r1, sp, #20
90003fd6:	4814      	ldr	r0, [pc, #80]	@ (90004028 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003fd8:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003fda:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003fde:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003fe2:	f003 fb0b 	bl	900075fc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003fe6:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003fea:	a905      	add	r1, sp, #20
90003fec:	480f      	ldr	r0, [pc, #60]	@ (9000402c <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003fee:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003ff0:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003ff4:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003ff8:	f003 fb00 	bl	900075fc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90003ffc:	462a      	mov	r2, r5
90003ffe:	2105      	movs	r1, #5
90004000:	2058      	movs	r0, #88	@ 0x58
90004002:	f003 f899 	bl	90007138 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90004006:	2058      	movs	r0, #88	@ 0x58
90004008:	f003 f8d2 	bl	900071b0 <HAL_NVIC_EnableIRQ>
}
9000400c:	b03a      	add	sp, #232	@ 0xe8
9000400e:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004010:	f7ff fe7c 	bl	90003d0c <Error_Handler>
90004014:	e787      	b.n	90003f26 <HAL_LTDC_MspInit+0x52>
90004016:	bf00      	nop
90004018:	50001000 	.word	0x50001000
9000401c:	58024400 	.word	0x58024400
90004020:	58022800 	.word	0x58022800
90004024:	58022000 	.word	0x58022000
90004028:	58022400 	.word	0x58022400
9000402c:	58021c00 	.word	0x58021c00

90004030 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90004030:	4836      	ldr	r0, [pc, #216]	@ (9000410c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90004032:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90004034:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90004036:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90004038:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000403a:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000403e:	e9cd 3304 	strd	r3, r3, [sp, #16]
90004042:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90004044:	b109      	cbz	r1, 9000404a <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90004046:	b038      	add	sp, #224	@ 0xe0
90004048:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000404a:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000404c:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
9000404e:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004050:	a80a      	add	r0, sp, #40	@ 0x28
90004052:	f024 fc2d 	bl	900288b0 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90004056:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000405a:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000405c:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000405e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004062:	f007 f927 	bl	9000b2b4 <HAL_RCCEx_PeriphCLKConfig>
90004066:	2800      	cmp	r0, #0
90004068:	d14c      	bne.n	90004104 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
9000406a:	4b29      	ldr	r3, [pc, #164]	@ (90004110 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000406c:	f64f 7083 	movw	r0, #65411	@ 0xff83
90004070:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004072:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90004074:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004078:	2600      	movs	r6, #0
9000407a:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
9000407c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90004080:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90004084:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004088:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
9000408a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000408e:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
90004092:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004094:	a902      	add	r1, sp, #8
90004096:	481f      	ldr	r0, [pc, #124]	@ (90004114 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90004098:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000409a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
9000409e:	f003 faad 	bl	900075fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900040a2:	f248 1233 	movw	r2, #33075	@ 0x8133
900040a6:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900040a8:	a902      	add	r1, sp, #8
900040aa:	481b      	ldr	r0, [pc, #108]	@ (90004118 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900040ac:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900040ae:	e9cd 2302 	strd	r2, r3, [sp, #8]
900040b2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900040b6:	f003 faa1 	bl	900075fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900040ba:	f24c 7203 	movw	r2, #50947	@ 0xc703
900040be:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900040c0:	a902      	add	r1, sp, #8
900040c2:	4816      	ldr	r0, [pc, #88]	@ (9000411c <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900040c4:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900040c6:	e9cd 2302 	strd	r2, r3, [sp, #8]
900040ca:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900040ce:	f003 fa95 	bl	900075fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900040d2:	f64f 023f 	movw	r2, #63551	@ 0xf83f
900040d6:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900040d8:	a902      	add	r1, sp, #8
900040da:	4811      	ldr	r0, [pc, #68]	@ (90004120 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900040dc:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900040de:	e9cd 2302 	strd	r2, r3, [sp, #8]
900040e2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900040e6:	f003 fa89 	bl	900075fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900040ea:	22e0      	movs	r2, #224	@ 0xe0
900040ec:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900040ee:	a902      	add	r1, sp, #8
900040f0:	480c      	ldr	r0, [pc, #48]	@ (90004124 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900040f2:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900040f4:	e9cd 6704 	strd	r6, r7, [sp, #16]
900040f8:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900040fc:	f003 fa7e 	bl	900075fc <HAL_GPIO_Init>
}
90004100:	b038      	add	sp, #224	@ 0xe0
90004102:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90004104:	f7ff fe02 	bl	90003d0c <Error_Handler>
90004108:	e7af      	b.n	9000406a <HAL_SDRAM_MspInit+0x3a>
9000410a:	bf00      	nop
9000410c:	24007708 	.word	0x24007708
90004110:	58024400 	.word	0x58024400
90004114:	58021000 	.word	0x58021000
90004118:	58021800 	.word	0x58021800
9000411c:	58020c00 	.word	0x58020c00
90004120:	58021400 	.word	0x58021400
90004124:	58021c00 	.word	0x58021c00

90004128 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90004128:	4b13      	ldr	r3, [pc, #76]	@ (90004178 <HAL_SDRAM_MspDeInit+0x50>)
9000412a:	681a      	ldr	r2, [r3, #0]
9000412c:	b102      	cbz	r2, 90004130 <HAL_SDRAM_MspDeInit+0x8>
9000412e:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90004130:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90004132:	4a12      	ldr	r2, [pc, #72]	@ (9000417c <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90004134:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004136:	f64f 7183 	movw	r1, #65411	@ 0xff83
9000413a:	4811      	ldr	r0, [pc, #68]	@ (90004180 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
9000413c:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000413e:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
90004142:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90004146:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000414a:	f003 fb99 	bl	90007880 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000414e:	f248 1133 	movw	r1, #33075	@ 0x8133
90004152:	480c      	ldr	r0, [pc, #48]	@ (90004184 <HAL_SDRAM_MspDeInit+0x5c>)
90004154:	f003 fb94 	bl	90007880 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90004158:	f24c 7103 	movw	r1, #50947	@ 0xc703
9000415c:	480a      	ldr	r0, [pc, #40]	@ (90004188 <HAL_SDRAM_MspDeInit+0x60>)
9000415e:	f003 fb8f 	bl	90007880 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004162:	f64f 013f 	movw	r1, #63551	@ 0xf83f
90004166:	4809      	ldr	r0, [pc, #36]	@ (9000418c <HAL_SDRAM_MspDeInit+0x64>)
90004168:	f003 fb8a 	bl	90007880 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
9000416c:	21e0      	movs	r1, #224	@ 0xe0
9000416e:	4808      	ldr	r0, [pc, #32]	@ (90004190 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90004170:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004174:	f003 bb84 	b.w	90007880 <HAL_GPIO_DeInit>
90004178:	24007704 	.word	0x24007704
9000417c:	58024400 	.word	0x58024400
90004180:	58021000 	.word	0x58021000
90004184:	58021800 	.word	0x58021800
90004188:	58020c00 	.word	0x58020c00
9000418c:	58021400 	.word	0x58021400
90004190:	58021c00 	.word	0x58021c00

90004194 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90004194:	280f      	cmp	r0, #15
90004196:	d901      	bls.n	9000419c <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
90004198:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
9000419a:	4770      	bx	lr
{
9000419c:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
9000419e:	4601      	mov	r1, r0
{
900041a0:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900041a2:	2200      	movs	r2, #0
900041a4:	4604      	mov	r4, r0
900041a6:	2036      	movs	r0, #54	@ 0x36
900041a8:	f002 ffc6 	bl	90007138 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900041ac:	2036      	movs	r0, #54	@ 0x36
900041ae:	f002 ffff 	bl	900071b0 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900041b2:	4b1b      	ldr	r3, [pc, #108]	@ (90004220 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
900041b4:	4a1b      	ldr	r2, [pc, #108]	@ (90004224 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900041b6:	4669      	mov	r1, sp
900041b8:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
900041ba:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
900041bc:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
900041c0:	f042 0210 	orr.w	r2, r2, #16
900041c4:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
900041c8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
900041cc:	f003 0310 	and.w	r3, r3, #16
900041d0:	9301      	str	r3, [sp, #4]
900041d2:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900041d4:	f006 ff5e 	bl	9000b094 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
900041d8:	9b07      	ldr	r3, [sp, #28]
900041da:	b9c3      	cbnz	r3, 9000420e <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
900041dc:	f006 feca 	bl	9000af74 <HAL_RCC_GetPCLK1Freq>
900041e0:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900041e2:	4911      	ldr	r1, [pc, #68]	@ (90004228 <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
900041e4:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
900041e6:	4c11      	ldr	r4, [pc, #68]	@ (9000422c <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900041e8:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
900041ec:	4d10      	ldr	r5, [pc, #64]	@ (90004230 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900041ee:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900041f2:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900041f4:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
900041f6:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
900041f8:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900041fa:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900041fc:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004200:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004202:	f008 f823 	bl	9000c24c <HAL_TIM_Base_Init>
90004206:	b130      	cbz	r0, 90004216 <HAL_InitTick+0x82>
    return HAL_ERROR;
90004208:	2001      	movs	r0, #1
}
9000420a:	b00b      	add	sp, #44	@ 0x2c
9000420c:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
9000420e:	f006 feb1 	bl	9000af74 <HAL_RCC_GetPCLK1Freq>
90004212:	0043      	lsls	r3, r0, #1
90004214:	e7e5      	b.n	900041e2 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
90004216:	4620      	mov	r0, r4
90004218:	f008 f8be 	bl	9000c398 <HAL_TIM_Base_Start_IT>
9000421c:	e7f5      	b.n	9000420a <HAL_InitTick+0x76>
9000421e:	bf00      	nop
90004220:	58024400 	.word	0x58024400
90004224:	24000080 	.word	0x24000080
90004228:	431bde83 	.word	0x431bde83
9000422c:	2400770c 	.word	0x2400770c
90004230:	40001000 	.word	0x40001000

90004234 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90004234:	4770      	bx	lr
90004236:	bf00      	nop

90004238 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90004238:	e7fe      	b.n	90004238 <HardFault_Handler>
9000423a:	bf00      	nop

9000423c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
9000423c:	e7fe      	b.n	9000423c <MemManage_Handler>
9000423e:	bf00      	nop

90004240 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90004240:	e7fe      	b.n	90004240 <BusFault_Handler>
90004242:	bf00      	nop

90004244 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90004244:	e7fe      	b.n	90004244 <UsageFault_Handler>
90004246:	bf00      	nop

90004248 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
90004248:	4770      	bx	lr
9000424a:	bf00      	nop

9000424c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
9000424c:	4801      	ldr	r0, [pc, #4]	@ (90004254 <TIM6_DAC_IRQHandler+0x8>)
9000424e:	f008 b8fd 	b.w	9000c44c <HAL_TIM_IRQHandler>
90004252:	bf00      	nop
90004254:	2400770c 	.word	0x2400770c

90004258 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90004258:	4801      	ldr	r0, [pc, #4]	@ (90004260 <LTDC_IRQHandler+0x8>)
9000425a:	f005 bdab 	b.w	90009db4 <HAL_LTDC_IRQHandler>
9000425e:	bf00      	nop
90004260:	240074a0 	.word	0x240074a0

90004264 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90004264:	4801      	ldr	r0, [pc, #4]	@ (9000426c <DMA2D_IRQHandler+0x8>)
90004266:	f003 b8cb 	b.w	90007400 <HAL_DMA2D_IRQHandler>
9000426a:	bf00      	nop
9000426c:	24007678 	.word	0x24007678

90004270 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004270:	4801      	ldr	r0, [pc, #4]	@ (90004278 <JPEG_IRQHandler+0x8>)
90004272:	f005 bc8d 	b.w	90009b90 <HAL_JPEG_IRQHandler>
90004276:	bf00      	nop
90004278:	24007620 	.word	0x24007620

9000427c <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
9000427c:	4804      	ldr	r0, [pc, #16]	@ (90004290 <MDMA_IRQHandler+0x14>)
{
9000427e:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004280:	f006 f87a 	bl	9000a378 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004284:	4803      	ldr	r0, [pc, #12]	@ (90004294 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
90004286:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000428a:	f006 b875 	b.w	9000a378 <HAL_MDMA_IRQHandler>
9000428e:	bf00      	nop
90004290:	24007548 	.word	0x24007548
90004294:	240075b4 	.word	0x240075b4

90004298 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90004298:	2001      	movs	r0, #1
9000429a:	4770      	bx	lr

9000429c <_kill>:

int _kill(int pid, int sig)
{
9000429c:	b508      	push	{r3, lr}
	errno = EINVAL;
9000429e:	f024 fc11 	bl	90028ac4 <__errno>
900042a2:	2216      	movs	r2, #22
900042a4:	4603      	mov	r3, r0
	return -1;
}
900042a6:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900042aa:	601a      	str	r2, [r3, #0]
}
900042ac:	bd08      	pop	{r3, pc}
900042ae:	bf00      	nop

900042b0 <_exit>:

void _exit (int status)
{
900042b0:	b508      	push	{r3, lr}
	errno = EINVAL;
900042b2:	f024 fc07 	bl	90028ac4 <__errno>
900042b6:	2316      	movs	r3, #22
900042b8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900042ba:	e7fe      	b.n	900042ba <_exit+0xa>

900042bc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
900042bc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900042be:	1e16      	subs	r6, r2, #0
900042c0:	dd07      	ble.n	900042d2 <_read+0x16>
900042c2:	460c      	mov	r4, r1
900042c4:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
900042c6:	f3af 8000 	nop.w
900042ca:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
900042ce:	42a5      	cmp	r5, r4
900042d0:	d1f9      	bne.n	900042c6 <_read+0xa>
	}

return len;
}
900042d2:	4630      	mov	r0, r6
900042d4:	bd70      	pop	{r4, r5, r6, pc}
900042d6:	bf00      	nop

900042d8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
900042d8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900042da:	1e16      	subs	r6, r2, #0
900042dc:	dd07      	ble.n	900042ee <_write+0x16>
900042de:	460c      	mov	r4, r1
900042e0:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
900042e2:	f814 0b01 	ldrb.w	r0, [r4], #1
900042e6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
900042ea:	42ac      	cmp	r4, r5
900042ec:	d1f9      	bne.n	900042e2 <_write+0xa>
	}
	return len;
}
900042ee:	4630      	mov	r0, r6
900042f0:	bd70      	pop	{r4, r5, r6, pc}
900042f2:	bf00      	nop

900042f4 <_close>:

int _close(int file)
{
	return -1;
}
900042f4:	f04f 30ff 	mov.w	r0, #4294967295
900042f8:	4770      	bx	lr
900042fa:	bf00      	nop

900042fc <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
900042fc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004300:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90004302:	604b      	str	r3, [r1, #4]
}
90004304:	4770      	bx	lr
90004306:	bf00      	nop

90004308 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90004308:	2001      	movs	r0, #1
9000430a:	4770      	bx	lr

9000430c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
9000430c:	2000      	movs	r0, #0
9000430e:	4770      	bx	lr

90004310 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90004310:	4a0c      	ldr	r2, [pc, #48]	@ (90004344 <_sbrk+0x34>)
{
90004312:	b508      	push	{r3, lr}
90004314:	4603      	mov	r3, r0
	if (heap_end == 0)
90004316:	6810      	ldr	r0, [r2, #0]
90004318:	b128      	cbz	r0, 90004326 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
9000431a:	4403      	add	r3, r0
9000431c:	4669      	mov	r1, sp
9000431e:	428b      	cmp	r3, r1
90004320:	d808      	bhi.n	90004334 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
90004322:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
90004324:	bd08      	pop	{r3, pc}
		heap_end = &end;
90004326:	4908      	ldr	r1, [pc, #32]	@ (90004348 <_sbrk+0x38>)
90004328:	4608      	mov	r0, r1
9000432a:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
9000432c:	4669      	mov	r1, sp
9000432e:	4403      	add	r3, r0
90004330:	428b      	cmp	r3, r1
90004332:	d9f6      	bls.n	90004322 <_sbrk+0x12>
		errno = ENOMEM;
90004334:	f024 fbc6 	bl	90028ac4 <__errno>
90004338:	220c      	movs	r2, #12
9000433a:	4603      	mov	r3, r0
		return (caddr_t) -1;
9000433c:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
90004340:	601a      	str	r2, [r3, #0]
}
90004342:	bd08      	pop	{r3, pc}
90004344:	24007758 	.word	0x24007758
90004348:	240225f8 	.word	0x240225f8

9000434c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_45_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
9000434c:	4770      	bx	lr
9000434e:	bf00      	nop

90004350 <_ZN23ApplicationFontProviderD0Ev>:
90004350:	b510      	push	{r4, lr}
90004352:	4604      	mov	r4, r0
90004354:	2104      	movs	r1, #4
90004356:	f023 fc97 	bl	90027c88 <_ZdlPvj>
9000435a:	4620      	mov	r0, r4
9000435c:	bd10      	pop	{r4, pc}
9000435e:	bf00      	nop

90004360 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90004360:	2901      	cmp	r1, #1
{
90004362:	b508      	push	{r3, lr}
    switch (typography)
90004364:	d004      	beq.n	90004370 <_ZN23ApplicationFontProvider7getFontEt+0x10>
90004366:	2902      	cmp	r1, #2
90004368:	d00a      	beq.n	90004380 <_ZN23ApplicationFontProvider7getFontEt+0x20>
9000436a:	b129      	cbz	r1, 90004378 <_ZN23ApplicationFontProvider7getFontEt+0x18>
9000436c:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
9000436e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004370:	f001 fbf8 	bl	90005b64 <_ZN17TypedTextDatabase8getFontsEv>
90004374:	6840      	ldr	r0, [r0, #4]
}
90004376:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90004378:	f001 fbf4 	bl	90005b64 <_ZN17TypedTextDatabase8getFontsEv>
9000437c:	6800      	ldr	r0, [r0, #0]
}
9000437e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004380:	f001 fbf0 	bl	90005b64 <_ZN17TypedTextDatabase8getFontsEv>
90004384:	6880      	ldr	r0, [r0, #8]
}
90004386:	bd08      	pop	{r3, pc}

90004388 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004388:	4800      	ldr	r0, [pc, #0]	@ (9000438c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
9000438a:	4770      	bx	lr
9000438c:	9002ad74 	.word	0x9002ad74

90004390 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004390:	200d      	movs	r0, #13
90004392:	4770      	bx	lr

90004394 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90004394:	b169      	cbz	r1, 900043b2 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004396:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004398:	b530      	push	{r4, r5, lr}
9000439a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
9000439c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000439e:	6895      	ldr	r5, [r2, #8]
900043a0:	f10d 0303 	add.w	r3, sp, #3
900043a4:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900043a6:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900043a8:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900043ac:	47a8      	blx	r5
        return glyph;
    }
900043ae:	b003      	add	sp, #12
900043b0:	bd30      	pop	{r4, r5, pc}
            return 0;
900043b2:	4608      	mov	r0, r1
    }
900043b4:	4770      	bx	lr
900043b6:	bf00      	nop

900043b8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900043b8:	89c0      	ldrh	r0, [r0, #14]
900043ba:	4770      	bx	lr

900043bc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900043bc:	8a00      	ldrh	r0, [r0, #16]
900043be:	4770      	bx	lr

900043c0 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900043c0:	88c0      	ldrh	r0, [r0, #6]
900043c2:	4770      	bx	lr

900043c4 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900043c4:	8880      	ldrh	r0, [r0, #4]
900043c6:	4770      	bx	lr

900043c8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900043c8:	7a80      	ldrb	r0, [r0, #10]
    }
900043ca:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
900043ce:	4770      	bx	lr

900043d0 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
900043d0:	7a80      	ldrb	r0, [r0, #10]
    }
900043d2:	09c0      	lsrs	r0, r0, #7
900043d4:	4770      	bx	lr
900043d6:	bf00      	nop

900043d8 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
900043d8:	2000      	movs	r0, #0
900043da:	4770      	bx	lr

900043dc <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
900043dc:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 900043e4 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
900043e0:	4770      	bx	lr
900043e2:	bf00      	nop
900043e4:	00000000 	.word	0x00000000

900043e8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900043e8:	4770      	bx	lr
900043ea:	bf00      	nop

900043ec <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900043ec:	b510      	push	{r4, lr}
900043ee:	4604      	mov	r4, r0
    }
900043f0:	2108      	movs	r1, #8
900043f2:	f023 fc49 	bl	90027c88 <_ZdlPvj>
900043f6:	4620      	mov	r0, r4
900043f8:	bd10      	pop	{r4, pc}
900043fa:	bf00      	nop

900043fc <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900043fc:	4770      	bx	lr
900043fe:	bf00      	nop

90004400 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004400:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004404:	6808      	ldr	r0, [r1, #0]
90004406:	6849      	ldr	r1, [r1, #4]
90004408:	c303      	stmia	r3!, {r0, r1}
    }
9000440a:	4770      	bx	lr

9000440c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
9000440c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000440e:	4770      	bx	lr

90004410 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90004410:	4770      	bx	lr
90004412:	bf00      	nop

90004414 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004414:	4770      	bx	lr
90004416:	bf00      	nop

90004418 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004418:	6041      	str	r1, [r0, #4]
    }
9000441a:	4770      	bx	lr

9000441c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
9000441c:	4770      	bx	lr
9000441e:	bf00      	nop

90004420 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004420:	4905      	ldr	r1, [pc, #20]	@ (90004438 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90004422:	2200      	movs	r2, #0
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90004424:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004428:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
9000442c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004430:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoMainScreenNoTransition();
    }
90004434:	4770      	bx	lr
90004436:	bf00      	nop
90004438:	90004785 	.word	0x90004785

9000443c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
9000443c:	2301      	movs	r3, #1
9000443e:	7203      	strb	r3, [r0, #8]
    }
90004440:	4770      	bx	lr
90004442:	bf00      	nop

90004444 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
90004444:	4770      	bx	lr
90004446:	bf00      	nop

90004448 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
90004448:	4770      	bx	lr
9000444a:	bf00      	nop

9000444c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
9000444c:	4770      	bx	lr
9000444e:	bf00      	nop

90004450 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90004450:	4770      	bx	lr
90004452:	bf00      	nop

90004454 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004454:	1d01      	adds	r1, r0, #4
90004456:	c90e      	ldmia	r1, {r1, r2, r3}
90004458:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000445c:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004460:	07db      	lsls	r3, r3, #31
90004462:	d502      	bpl.n	9000446a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004464:	f851 300c 	ldr.w	r3, [r1, ip]
90004468:	589a      	ldr	r2, [r3, r2]
9000446a:	4710      	bx	r2

9000446c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
9000446c:	6843      	ldr	r3, [r0, #4]
9000446e:	b13b      	cbz	r3, 90004480 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004470:	6883      	ldr	r3, [r0, #8]
90004472:	b10b      	cbz	r3, 90004478 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004474:	2001      	movs	r0, #1
    }
90004476:	4770      	bx	lr
90004478:	68c0      	ldr	r0, [r0, #12]
9000447a:	f000 0001 	and.w	r0, r0, #1
9000447e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004480:	4618      	mov	r0, r3
90004482:	4770      	bx	lr

90004484 <_ZN8touchgfx12NoTransitionD0Ev>:
90004484:	b510      	push	{r4, lr}
90004486:	4604      	mov	r4, r0
90004488:	210c      	movs	r1, #12
9000448a:	f023 fbfd 	bl	90027c88 <_ZdlPvj>
9000448e:	4620      	mov	r0, r4
90004490:	bd10      	pop	{r4, pc}
90004492:	bf00      	nop

90004494 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004494:	b510      	push	{r4, lr}
90004496:	4604      	mov	r4, r0
90004498:	2110      	movs	r1, #16
9000449a:	f023 fbf5 	bl	90027c88 <_ZdlPvj>
9000449e:	4620      	mov	r0, r4
900044a0:	bd10      	pop	{r4, pc}
900044a2:	bf00      	nop

900044a4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900044a4:	b510      	push	{r4, lr}
900044a6:	4604      	mov	r4, r0
900044a8:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900044ac:	f023 fbec 	bl	90027c88 <_ZdlPvj>
900044b0:	4620      	mov	r0, r4
900044b2:	bd10      	pop	{r4, pc}

900044b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
900044b4:	b510      	push	{r4, lr}
900044b6:	4604      	mov	r4, r0
900044b8:	2140      	movs	r1, #64	@ 0x40
900044ba:	f023 fbe5 	bl	90027c88 <_ZdlPvj>
900044be:	4620      	mov	r0, r4
900044c0:	bd10      	pop	{r4, pc}
900044c2:	bf00      	nop

900044c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
900044c4:	b510      	push	{r4, lr}
900044c6:	4604      	mov	r4, r0
900044c8:	2140      	movs	r1, #64	@ 0x40
900044ca:	f023 fbdd 	bl	90027c88 <_ZdlPvj>
900044ce:	4620      	mov	r0, r4
900044d0:	bd10      	pop	{r4, pc}
900044d2:	bf00      	nop

900044d4 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
900044d4:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
900044d6:	f010 ff17 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
900044da:	6803      	ldr	r3, [r0, #0]
    }
900044dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
900044e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900044e2:	4718      	bx	r3

900044e4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
900044e4:	4b05      	ldr	r3, [pc, #20]	@ (900044fc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
900044e6:	781b      	ldrb	r3, [r3, #0]
900044e8:	b13b      	cbz	r3, 900044fa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
900044ea:	6843      	ldr	r3, [r0, #4]
900044ec:	b12b      	cbz	r3, 900044fa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
900044ee:	681a      	ldr	r2, [r3, #0]
900044f0:	f100 010c 	add.w	r1, r0, #12
900044f4:	4618      	mov	r0, r3
900044f6:	6e53      	ldr	r3, [r2, #100]	@ 0x64
900044f8:	4718      	bx	r3
        }
    }
900044fa:	4770      	bx	lr
900044fc:	240218b3 	.word	0x240218b3

90004500 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90004500:	4b05      	ldr	r3, [pc, #20]	@ (90004518 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
90004502:	781b      	ldrb	r3, [r3, #0]
90004504:	b13b      	cbz	r3, 90004516 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
90004506:	6843      	ldr	r3, [r0, #4]
90004508:	b12b      	cbz	r3, 90004516 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
9000450a:	681a      	ldr	r2, [r3, #0]
9000450c:	f100 010c 	add.w	r1, r0, #12
90004510:	4618      	mov	r0, r3
90004512:	6e53      	ldr	r3, [r2, #100]	@ 0x64
90004514:	4718      	bx	r3
    }
90004516:	4770      	bx	lr
90004518:	240218b3 	.word	0x240218b3

9000451c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
9000451c:	b570      	push	{r4, r5, r6, lr}
9000451e:	4605      	mov	r5, r0
        animationCounter++;
90004520:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
90004524:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90004526:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
        animationCounter++;
9000452a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
9000452c:	4298      	cmp	r0, r3
        animationCounter++;
9000452e:	f885 0039 	strb.w	r0, [r5, #57]	@ 0x39
        if (animationCounter > animationSteps)
90004532:	d905      	bls.n	90004540 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
90004534:	2201      	movs	r2, #1
            animationCounter = 0;
90004536:	2300      	movs	r3, #0
            done = true;
90004538:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
9000453a:	f885 3039 	strb.w	r3, [r5, #57]	@ 0x39
    }
9000453e:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90004540:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	@ 0x3a
90004544:	2100      	movs	r1, #0
90004546:	f012 ffa3 	bl	90017490 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000454a:	07c2      	lsls	r2, r0, #31
9000454c:	b283      	uxth	r3, r0
9000454e:	d506      	bpl.n	9000455e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x42>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90004550:	2800      	cmp	r0, #0
90004552:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90004556:	bfc8      	it	gt
90004558:	2201      	movgt	r2, #1
9000455a:	4413      	add	r3, r2
9000455c:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
9000455e:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90004560:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90004562:	6802      	ldr	r2, [r0, #0]
90004564:	4912      	ldr	r1, [pc, #72]	@ (900045b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90004566:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90004568:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
9000456a:	87ab      	strh	r3, [r5, #60]	@ 0x3c
9000456c:	428a      	cmp	r2, r1
9000456e:	d11b      	bne.n	900045a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x8c>
        return firstChild;
90004570:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004572:	b164      	cbz	r4, 9000458e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x72>
90004574:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
90004576:	4e0f      	ldr	r6, [pc, #60]	@ (900045b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90004578:	6823      	ldr	r3, [r4, #0]
9000457a:	88a1      	ldrh	r1, [r4, #4]
9000457c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000457e:	4411      	add	r1, r2
90004580:	42b3      	cmp	r3, r6
90004582:	b209      	sxth	r1, r1
        rect.x = x;
90004584:	d109      	bne.n	9000459a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x7e>
90004586:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004588:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000458a:	2c00      	cmp	r4, #0
9000458c:	d1f4      	bne.n	90004578 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5c>
        screenContainer->invalidate();
9000458e:	6868      	ldr	r0, [r5, #4]
90004590:	6803      	ldr	r3, [r0, #0]
    }
90004592:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90004596:	695b      	ldr	r3, [r3, #20]
90004598:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
9000459a:	4620      	mov	r0, r4
9000459c:	4798      	blx	r3
9000459e:	69a4      	ldr	r4, [r4, #24]
        while (d)
900045a0:	2c00      	cmp	r4, #0
900045a2:	d0f4      	beq.n	9000458e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x72>
900045a4:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
900045a6:	e7e7      	b.n	90004578 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5c>
        Drawable* d = screenContainer->getFirstChild();
900045a8:	4790      	blx	r2
900045aa:	4604      	mov	r4, r0
900045ac:	e7e1      	b.n	90004572 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x56>
900045ae:	bf00      	nop
900045b0:	9000440d 	.word	0x9000440d
900045b4:	90002dfd 	.word	0x90002dfd

900045b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
900045b8:	b570      	push	{r4, r5, r6, lr}
900045ba:	4605      	mov	r5, r0
        animationCounter++;
900045bc:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
900045c0:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900045c2:	f895 3038 	ldrb.w	r3, [r5, #56]	@ 0x38
        animationCounter++;
900045c6:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900045c8:	4298      	cmp	r0, r3
        animationCounter++;
900045ca:	f885 0039 	strb.w	r0, [r5, #57]	@ 0x39
        if (animationCounter > animationSteps)
900045ce:	d905      	bls.n	900045dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
900045d0:	2201      	movs	r2, #1
            animationCounter = 0;
900045d2:	2300      	movs	r3, #0
            done = true;
900045d4:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900045d6:	f885 3039 	strb.w	r3, [r5, #57]	@ 0x39
    }
900045da:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
900045dc:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	@ 0x3a
900045e0:	2100      	movs	r1, #0
900045e2:	f012 ff55 	bl	90017490 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
900045e6:	07c2      	lsls	r2, r0, #31
900045e8:	b283      	uxth	r3, r0
900045ea:	d506      	bpl.n	900045fa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x42>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900045ec:	2800      	cmp	r0, #0
900045ee:	f64f 72ff 	movw	r2, #65535	@ 0xffff
900045f2:	bfc8      	it	gt
900045f4:	2201      	movgt	r2, #1
900045f6:	4413      	add	r3, r2
900045f8:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
900045fa:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
900045fc:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
900045fe:	6802      	ldr	r2, [r0, #0]
90004600:	4912      	ldr	r1, [pc, #72]	@ (9000464c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90004602:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90004604:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
90004606:	87ab      	strh	r3, [r5, #60]	@ 0x3c
90004608:	428a      	cmp	r2, r1
9000460a:	d11b      	bne.n	90004644 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8c>
9000460c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
9000460e:	b164      	cbz	r4, 9000462a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x72>
90004610:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
90004612:	4e0f      	ldr	r6, [pc, #60]	@ (90004650 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90004614:	6823      	ldr	r3, [r4, #0]
90004616:	88a1      	ldrh	r1, [r4, #4]
90004618:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000461a:	4411      	add	r1, r2
9000461c:	42b3      	cmp	r3, r6
9000461e:	b209      	sxth	r1, r1
        rect.x = x;
90004620:	d109      	bne.n	90004636 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7e>
90004622:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004624:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004626:	2c00      	cmp	r4, #0
90004628:	d1f4      	bne.n	90004614 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5c>
        screenContainer->invalidate();
9000462a:	6868      	ldr	r0, [r5, #4]
9000462c:	6803      	ldr	r3, [r0, #0]
    }
9000462e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90004632:	695b      	ldr	r3, [r3, #20]
90004634:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90004636:	4620      	mov	r0, r4
90004638:	4798      	blx	r3
9000463a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000463c:	2c00      	cmp	r4, #0
9000463e:	d0f4      	beq.n	9000462a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x72>
90004640:	8faa      	ldrh	r2, [r5, #60]	@ 0x3c
90004642:	e7e7      	b.n	90004614 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5c>
        Drawable* d = screenContainer->getFirstChild();
90004644:	4790      	blx	r2
90004646:	4604      	mov	r4, r0
90004648:	e7e1      	b.n	9000460e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x56>
9000464a:	bf00      	nop
9000464c:	9000440d 	.word	0x9000440d
90004650:	90002dfd 	.word	0x90002dfd

90004654 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90004654:	7a03      	ldrb	r3, [r0, #8]
90004656:	bb2b      	cbnz	r3, 900046a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x50>
90004658:	4a14      	ldr	r2, [pc, #80]	@ (900046ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x58>)
    virtual void init()
9000465a:	b570      	push	{r4, r5, r6, lr}
9000465c:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
9000465e:	6840      	ldr	r0, [r0, #4]
90004660:	6803      	ldr	r3, [r0, #0]
90004662:	69db      	ldr	r3, [r3, #28]
90004664:	4293      	cmp	r3, r2
90004666:	d11e      	bne.n	900046a6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x52>
90004668:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
9000466a:	b164      	cbz	r4, 90004686 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
9000466c:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
9000466e:	4e10      	ldr	r6, [pc, #64]	@ (900046b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90004670:	6823      	ldr	r3, [r4, #0]
90004672:	88a1      	ldrh	r1, [r4, #4]
90004674:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004676:	1a89      	subs	r1, r1, r2
90004678:	42b3      	cmp	r3, r6
9000467a:	b209      	sxth	r1, r1
        rect.x = x;
9000467c:	d10b      	bne.n	90004696 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x42>
9000467e:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004680:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004682:	2c00      	cmp	r4, #0
90004684:	d1f4      	bne.n	90004670 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
90004686:	6868      	ldr	r0, [r5, #4]
90004688:	f105 010c 	add.w	r1, r5, #12
9000468c:	6803      	ldr	r3, [r0, #0]
    }
9000468e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90004692:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90004694:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90004696:	4620      	mov	r0, r4
90004698:	4798      	blx	r3
9000469a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000469c:	2c00      	cmp	r4, #0
9000469e:	d0f2      	beq.n	90004686 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
900046a0:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
900046a2:	e7e5      	b.n	90004670 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
900046a4:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
900046a6:	4798      	blx	r3
900046a8:	4604      	mov	r4, r0
900046aa:	e7de      	b.n	9000466a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x16>
900046ac:	9000440d 	.word	0x9000440d
900046b0:	90002dfd 	.word	0x90002dfd

900046b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
        if (done)
900046b4:	7a03      	ldrb	r3, [r0, #8]
900046b6:	bb2b      	cbnz	r3, 90004704 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
900046b8:	4a14      	ldr	r2, [pc, #80]	@ (9000470c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
900046ba:	b570      	push	{r4, r5, r6, lr}
900046bc:	4605      	mov	r5, r0
        Drawable* d = screenContainer->getFirstChild();
900046be:	6840      	ldr	r0, [r0, #4]
900046c0:	6803      	ldr	r3, [r0, #0]
900046c2:	69db      	ldr	r3, [r3, #28]
900046c4:	4293      	cmp	r3, r2
900046c6:	d11e      	bne.n	90004706 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
900046c8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
900046ca:	b164      	cbz	r4, 900046e6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
900046cc:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
900046ce:	4e10      	ldr	r6, [pc, #64]	@ (90004710 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
                d->setX(d->getX() - targetValue);
900046d0:	6823      	ldr	r3, [r4, #0]
900046d2:	88a1      	ldrh	r1, [r4, #4]
900046d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900046d6:	1a89      	subs	r1, r1, r2
900046d8:	42b3      	cmp	r3, r6
900046da:	b209      	sxth	r1, r1
        rect.x = x;
900046dc:	d10b      	bne.n	900046f6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
900046de:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
900046e0:	69a4      	ldr	r4, [r4, #24]
        while (d)
900046e2:	2c00      	cmp	r4, #0
900046e4:	d1f4      	bne.n	900046d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
        screenContainer->add(snapshot);
900046e6:	6868      	ldr	r0, [r5, #4]
900046e8:	f105 010c 	add.w	r1, r5, #12
900046ec:	6803      	ldr	r3, [r0, #0]
    }
900046ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
900046f2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
900046f4:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
900046f6:	4620      	mov	r0, r4
900046f8:	4798      	blx	r3
900046fa:	69a4      	ldr	r4, [r4, #24]
        while (d)
900046fc:	2c00      	cmp	r4, #0
900046fe:	d0f2      	beq.n	900046e6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90004700:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004702:	e7e5      	b.n	900046d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
90004704:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90004706:	4798      	blx	r3
90004708:	4604      	mov	r4, r0
9000470a:	e7de      	b.n	900046ca <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
9000470c:	9000440d 	.word	0x9000440d
90004710:	90002dfd 	.word	0x90002dfd

90004714 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
90004714:	b570      	push	{r4, r5, r6, lr}
90004716:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004718:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
9000471c:	b1b8      	cbz	r0, 9000474e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
9000471e:	6802      	ldr	r2, [r0, #0]
90004720:	4916      	ldr	r1, [pc, #88]	@ (9000477c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
90004722:	68d3      	ldr	r3, [r2, #12]
90004724:	428b      	cmp	r3, r1
90004726:	d11f      	bne.n	90004768 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
90004728:	6843      	ldr	r3, [r0, #4]
9000472a:	b183      	cbz	r3, 9000474e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
9000472c:	6881      	ldr	r1, [r0, #8]
9000472e:	b179      	cbz	r1, 90004750 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
        {
            pendingScreenTransitionCallback->execute();
90004730:	6892      	ldr	r2, [r2, #8]
90004732:	4b13      	ldr	r3, [pc, #76]	@ (90004780 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004734:	429a      	cmp	r2, r3
90004736:	d11e      	bne.n	90004776 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004738:	68c2      	ldr	r2, [r0, #12]
9000473a:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
9000473e:	eb03 0062 	add.w	r0, r3, r2, asr #1
90004742:	07d3      	lsls	r3, r2, #31
90004744:	d40d      	bmi.n	90004762 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
90004746:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
90004748:	2300      	movs	r3, #0
9000474a:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
9000474e:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
90004750:	68c5      	ldr	r5, [r0, #12]
90004752:	07ee      	lsls	r6, r5, #31
90004754:	d5fb      	bpl.n	9000474e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004756:	6892      	ldr	r2, [r2, #8]
90004758:	4e09      	ldr	r6, [pc, #36]	@ (90004780 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
9000475a:	42b2      	cmp	r2, r6
9000475c:	d10b      	bne.n	90004776 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
9000475e:	eb03 0065 	add.w	r0, r3, r5, asr #1
90004762:	6803      	ldr	r3, [r0, #0]
90004764:	5859      	ldr	r1, [r3, r1]
90004766:	e7ee      	b.n	90004746 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004768:	4798      	blx	r3
9000476a:	2800      	cmp	r0, #0
9000476c:	d0ef      	beq.n	9000474e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
9000476e:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90004772:	6802      	ldr	r2, [r0, #0]
90004774:	e7dc      	b.n	90004730 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90004776:	4790      	blx	r2
90004778:	e7e6      	b.n	90004748 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
9000477a:	bf00      	nop
9000477c:	9000446d 	.word	0x9000446d
90004780:	90004455 	.word	0x90004455

90004784 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
90004784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004788:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
9000478c:	4607      	mov	r7, r0
9000478e:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004790:	68b0      	ldr	r0, [r6, #8]
90004792:	6803      	ldr	r3, [r0, #0]
90004794:	6a1b      	ldr	r3, [r3, #32]
90004796:	4798      	blx	r3
90004798:	f5b0 7fb6 	cmp.w	r0, #364	@ 0x16c
9000479c:	f0c0 80a3 	bcc.w	900048e6 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x162>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900047a0:	6870      	ldr	r0, [r6, #4]
900047a2:	6803      	ldr	r3, [r0, #0]
900047a4:	6a1b      	ldr	r3, [r3, #32]
900047a6:	4798      	blx	r3
900047a8:	280f      	cmp	r0, #15
900047aa:	f240 8096 	bls.w	900048da <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x156>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900047ae:	68f0      	ldr	r0, [r6, #12]
900047b0:	6803      	ldr	r3, [r0, #0]
900047b2:	6a1b      	ldr	r3, [r3, #32]
900047b4:	4798      	blx	r3
900047b6:	280b      	cmp	r0, #11
900047b8:	f240 8089 	bls.w	900048ce <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x14a>
    if (*currentTrans)
900047bc:	f8df 9154 	ldr.w	r9, [pc, #340]	@ 90004914 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x190>
    Application::getInstance()->clearAllTimerWidgets();
900047c0:	f010 fda2 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
900047c4:	3004      	adds	r0, #4
900047c6:	f010 fdc4 	bl	90015352 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900047ca:	f8d9 0000 	ldr.w	r0, [r9]
900047ce:	b140      	cbz	r0, 900047e2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
900047d0:	6803      	ldr	r3, [r0, #0]
900047d2:	68db      	ldr	r3, [r3, #12]
900047d4:	4798      	blx	r3
    if (*currentTrans)
900047d6:	f8d9 0000 	ldr.w	r0, [r9]
900047da:	b110      	cbz	r0, 900047e2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
900047dc:	6803      	ldr	r3, [r0, #0]
900047de:	681b      	ldr	r3, [r3, #0]
900047e0:	4798      	blx	r3
    if (*currentScreen)
900047e2:	f8df 8134 	ldr.w	r8, [pc, #308]	@ 90004918 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x194>
900047e6:	f8d8 0000 	ldr.w	r0, [r8]
900047ea:	2800      	cmp	r0, #0
900047ec:	d061      	beq.n	900048b2 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x12e>
        (*currentScreen)->tearDownScreen();
900047ee:	6803      	ldr	r3, [r0, #0]
900047f0:	695b      	ldr	r3, [r3, #20]
900047f2:	4798      	blx	r3
    if (*currentPresenter)
900047f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900047f8:	2800      	cmp	r0, #0
900047fa:	d055      	beq.n	900048a8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x124>
        (*currentPresenter)->deactivate();
900047fc:	6803      	ldr	r3, [r0, #0]
900047fe:	685b      	ldr	r3, [r3, #4]
90004800:	4798      	blx	r3
    if (*currentScreen)
90004802:	f8d8 0000 	ldr.w	r0, [r8]
90004806:	b110      	cbz	r0, 9000480e <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90004808:	6803      	ldr	r3, [r0, #0]
9000480a:	681b      	ldr	r3, [r3, #0]
9000480c:	4798      	blx	r3
    if (*currentPresenter)
9000480e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004812:	b110      	cbz	r0, 9000481a <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90004814:	6803      	ldr	r3, [r0, #0]
90004816:	689b      	ldr	r3, [r3, #8]
90004818:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
9000481a:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
9000481c:	2100      	movs	r1, #0
9000481e:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004820:	468b      	mov	fp, r1
90004822:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004824:	4798      	blx	r3
90004826:	4b33      	ldr	r3, [pc, #204]	@ (900048f4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x170>)
90004828:	4604      	mov	r4, r0
9000482a:	f8c0 b004 	str.w	fp, [r0, #4]
9000482e:	f880 b008 	strb.w	fp, [r0, #8]
90004832:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004834:	68b0      	ldr	r0, [r6, #8]
90004836:	6023      	str	r3, [r4, #0]
90004838:	6803      	ldr	r3, [r0, #0]
9000483a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000483c:	4798      	blx	r3
9000483e:	4605      	mov	r5, r0
90004840:	f001 fa46 	bl	90005cd0 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004844:	6870      	ldr	r0, [r6, #4]
90004846:	4659      	mov	r1, fp
90004848:	6803      	ldr	r3, [r0, #0]
9000484a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000484c:	4798      	blx	r3
9000484e:	4606      	mov	r6, r0
90004850:	4629      	mov	r1, r5
90004852:	f001 f9e1 	bl	90005c18 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90004856:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004858:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
9000485c:	4628      	mov	r0, r5
    *currentTrans = newTransition;
9000485e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004862:	f8c8 5000 	str.w	r5, [r8]
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004866:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
9000486a:	682b      	ldr	r3, [r5, #0]
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
    {
        model = m;
9000486c:	f8c6 a008 	str.w	sl, [r6, #8]
90004870:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004872:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004874:	4798      	blx	r3
    newPresenter->activate();
90004876:	6833      	ldr	r3, [r6, #0]
90004878:	4630      	mov	r0, r6
9000487a:	681b      	ldr	r3, [r3, #0]
9000487c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
9000487e:	4621      	mov	r1, r4
90004880:	4628      	mov	r0, r5
90004882:	f012 fdff 	bl	90017484 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004886:	6823      	ldr	r3, [r4, #0]
90004888:	491b      	ldr	r1, [pc, #108]	@ (900048f8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x174>)
9000488a:	691a      	ldr	r2, [r3, #16]
9000488c:	428a      	cmp	r2, r1
9000488e:	d11a      	bne.n	900048c6 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x142>
    newTransition->invalidate();
90004890:	695b      	ldr	r3, [r3, #20]
90004892:	4a1a      	ldr	r2, [pc, #104]	@ (900048fc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x178>)
90004894:	4293      	cmp	r3, r2
90004896:	d111      	bne.n	900048bc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x138>
        Application::getInstance()->invalidate();
90004898:	f010 fd36 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
9000489c:	6803      	ldr	r3, [r0, #0]
9000489e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
900048a0:	b001      	add	sp, #4
900048a2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900048a6:	4718      	bx	r3
    if (*currentScreen)
900048a8:	f8d8 0000 	ldr.w	r0, [r8]
900048ac:	2800      	cmp	r0, #0
900048ae:	d1ab      	bne.n	90004808 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x84>
900048b0:	e7b3      	b.n	9000481a <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
900048b2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900048b6:	2800      	cmp	r0, #0
900048b8:	d1a0      	bne.n	900047fc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x78>
900048ba:	e7ae      	b.n	9000481a <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x96>
    newTransition->invalidate();
900048bc:	4620      	mov	r0, r4
900048be:	b001      	add	sp, #4
900048c0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900048c4:	4718      	bx	r3
    newTransition->init();
900048c6:	4620      	mov	r0, r4
900048c8:	4790      	blx	r2
    newTransition->invalidate();
900048ca:	6823      	ldr	r3, [r4, #0]
900048cc:	e7e0      	b.n	90004890 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x10c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900048ce:	4b0c      	ldr	r3, [pc, #48]	@ (90004900 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x17c>)
900048d0:	21a5      	movs	r1, #165	@ 0xa5
900048d2:	4a0c      	ldr	r2, [pc, #48]	@ (90004904 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x180>)
900048d4:	480c      	ldr	r0, [pc, #48]	@ (90004908 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x184>)
900048d6:	f023 fd4f 	bl	90028378 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900048da:	4b0c      	ldr	r3, [pc, #48]	@ (9000490c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x188>)
900048dc:	21a4      	movs	r1, #164	@ 0xa4
900048de:	4a09      	ldr	r2, [pc, #36]	@ (90004904 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x180>)
900048e0:	4809      	ldr	r0, [pc, #36]	@ (90004908 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x184>)
900048e2:	f023 fd49 	bl	90028378 <__assert_func>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900048e6:	4b0a      	ldr	r3, [pc, #40]	@ (90004910 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x18c>)
900048e8:	21a3      	movs	r1, #163	@ 0xa3
900048ea:	4a06      	ldr	r2, [pc, #24]	@ (90004904 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x180>)
900048ec:	4806      	ldr	r0, [pc, #24]	@ (90004908 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x184>)
900048ee:	f023 fd43 	bl	90028378 <__assert_func>
900048f2:	bf00      	nop
900048f4:	9002b3b0 	.word	0x9002b3b0
900048f8:	90004415 	.word	0x90004415
900048fc:	900044d5 	.word	0x900044d5
90004900:	9002b0d0 	.word	0x9002b0d0
90004904:	9002af18 	.word	0x9002af18
90004908:	9002afe4 	.word	0x9002afe4
9000490c:	9002b02c 	.word	0x9002b02c
90004910:	9002ae88 	.word	0x9002ae88
90004914:	240218fc 	.word	0x240218fc
90004918:	240218f8 	.word	0x240218f8

9000491c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMainScreenSlideTransitionWestImpl()
{
9000491c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004920:	e9d0 7b55 	ldrd	r7, fp, [r0, #340]	@ 0x154
{
90004924:	4680      	mov	r8, r0
90004926:	b081      	sub	sp, #4
90004928:	68b8      	ldr	r0, [r7, #8]
9000492a:	6803      	ldr	r3, [r0, #0]
9000492c:	6a1b      	ldr	r3, [r3, #32]
9000492e:	4798      	blx	r3
90004930:	f5b0 7fb6 	cmp.w	r0, #364	@ 0x16c
90004934:	f0c0 80db 	bcc.w	90004aee <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1d2>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004938:	6878      	ldr	r0, [r7, #4]
9000493a:	6803      	ldr	r3, [r0, #0]
9000493c:	6a1b      	ldr	r3, [r3, #32]
9000493e:	4798      	blx	r3
90004940:	280f      	cmp	r0, #15
90004942:	f240 80e0 	bls.w	90004b06 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1ea>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004946:	68f8      	ldr	r0, [r7, #12]
90004948:	6803      	ldr	r3, [r0, #0]
9000494a:	6a1b      	ldr	r3, [r3, #32]
9000494c:	4798      	blx	r3
9000494e:	283f      	cmp	r0, #63	@ 0x3f
90004950:	f240 80d3 	bls.w	90004afa <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1de>
    if (*currentTrans)
90004954:	f8df a1f0 	ldr.w	sl, [pc, #496]	@ 90004b48 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x22c>
    Application::getInstance()->clearAllTimerWidgets();
90004958:	f010 fcd6 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
9000495c:	3004      	adds	r0, #4
9000495e:	f010 fcf8 	bl	90015352 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004962:	f8da 0000 	ldr.w	r0, [sl]
90004966:	b140      	cbz	r0, 9000497a <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->tearDown();
90004968:	6803      	ldr	r3, [r0, #0]
9000496a:	68db      	ldr	r3, [r3, #12]
9000496c:	4798      	blx	r3
    if (*currentTrans)
9000496e:	f8da 0000 	ldr.w	r0, [sl]
90004972:	b110      	cbz	r0, 9000497a <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->~Transition();
90004974:	6803      	ldr	r3, [r0, #0]
90004976:	681b      	ldr	r3, [r3, #0]
90004978:	4798      	blx	r3
    if (*currentScreen)
9000497a:	f8df 91d0 	ldr.w	r9, [pc, #464]	@ 90004b4c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x230>
9000497e:	f8d9 0000 	ldr.w	r0, [r9]
90004982:	2800      	cmp	r0, #0
90004984:	f000 80a1 	beq.w	90004aca <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1ae>
        (*currentScreen)->tearDownScreen();
90004988:	6803      	ldr	r3, [r0, #0]
9000498a:	695b      	ldr	r3, [r3, #20]
9000498c:	4798      	blx	r3
    if (*currentPresenter)
9000498e:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004992:	2800      	cmp	r0, #0
90004994:	d07e      	beq.n	90004a94 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x178>
        (*currentPresenter)->deactivate();
90004996:	6803      	ldr	r3, [r0, #0]
90004998:	685b      	ldr	r3, [r3, #4]
9000499a:	4798      	blx	r3
    if (*currentScreen)
9000499c:	f8d9 0000 	ldr.w	r0, [r9]
900049a0:	b110      	cbz	r0, 900049a8 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x8c>
        (*currentScreen)->~Screen();
900049a2:	6803      	ldr	r3, [r0, #0]
900049a4:	681b      	ldr	r3, [r3, #0]
900049a6:	4798      	blx	r3
    if (*currentPresenter)
900049a8:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
900049ac:	b110      	cbz	r0, 900049b4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x98>
        (*currentPresenter)->~Presenter();
900049ae:	6803      	ldr	r3, [r0, #0]
900049b0:	689b      	ldr	r3, [r3, #8]
900049b2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900049b4:	68f8      	ldr	r0, [r7, #12]
900049b6:	2100      	movs	r1, #0
900049b8:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
900049ba:	460c      	mov	r4, r1
900049bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049be:	4798      	blx	r3
          relativeValue(0)
900049c0:	4b54      	ldr	r3, [pc, #336]	@ (90004b14 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1f8>)
900049c2:	4606      	mov	r6, r0
900049c4:	4605      	mov	r5, r0
900049c6:	6044      	str	r4, [r0, #4]
900049c8:	7204      	strb	r4, [r0, #8]
900049ca:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
900049ce:	4630      	mov	r0, r6
900049d0:	f00d fe1a 	bl	90012608 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
900049d4:	4b50      	ldr	r3, [pc, #320]	@ (90004b18 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1fc>)
          animationSteps(transitionSteps),
900049d6:	2214      	movs	r2, #20
          relativeValue(0)
900049d8:	87ac      	strh	r4, [r5, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
900049da:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
900049dc:	872a      	strh	r2, [r5, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
900049de:	2b00      	cmp	r3, #0
900049e0:	d164      	bne.n	90004aac <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x190>
            done = true;
900049e2:	2301      	movs	r3, #1
900049e4:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900049e6:	68b8      	ldr	r0, [r7, #8]
900049e8:	2100      	movs	r1, #0
900049ea:	6803      	ldr	r3, [r0, #0]
900049ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049ee:	4798      	blx	r3
900049f0:	4604      	mov	r4, r0
900049f2:	f001 f96d 	bl	90005cd0 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900049f6:	6878      	ldr	r0, [r7, #4]
900049f8:	2100      	movs	r1, #0
900049fa:	6803      	ldr	r3, [r0, #0]
900049fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049fe:	4798      	blx	r3
90004a00:	4607      	mov	r7, r0
90004a02:	4621      	mov	r1, r4
90004a04:	f001 f908 	bl	90005c18 <_ZN13MainPresenterC1ER8MainView>
    model->bind(newPresenter);
90004a08:	1d3a      	adds	r2, r7, #4
    newScreen->setupScreen();
90004a0a:	6823      	ldr	r3, [r4, #0]
90004a0c:	4620      	mov	r0, r4
    *currentPresenter = newPresenter;
90004a0e:	f8c8 713c 	str.w	r7, [r8, #316]	@ 0x13c
    newScreen->setupScreen();
90004a12:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
90004a14:	f8ca 5000 	str.w	r5, [sl]
    *currentScreen = newScreen;
90004a18:	f8c9 4000 	str.w	r4, [r9]
90004a1c:	f8cb 2000 	str.w	r2, [fp]
90004a20:	f8c7 b008 	str.w	fp, [r7, #8]
90004a24:	63e7      	str	r7, [r4, #60]	@ 0x3c
    newScreen->setupScreen();
90004a26:	4798      	blx	r3
    newPresenter->activate();
90004a28:	683b      	ldr	r3, [r7, #0]
90004a2a:	4638      	mov	r0, r7
90004a2c:	681b      	ldr	r3, [r3, #0]
90004a2e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004a30:	4629      	mov	r1, r5
90004a32:	4620      	mov	r0, r4
90004a34:	f012 fd26 	bl	90017484 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004a38:	682b      	ldr	r3, [r5, #0]
90004a3a:	4938      	ldr	r1, [pc, #224]	@ (90004b1c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x200>)
90004a3c:	691a      	ldr	r2, [r3, #16]
90004a3e:	428a      	cmp	r2, r1
90004a40:	d151      	bne.n	90004ae6 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1ca>
        if (done)
90004a42:	7a2a      	ldrb	r2, [r5, #8]
90004a44:	b9d2      	cbnz	r2, 90004a7c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x160>
        Drawable* d = screenContainer->getFirstChild();
90004a46:	6868      	ldr	r0, [r5, #4]
90004a48:	4a35      	ldr	r2, [pc, #212]	@ (90004b20 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x204>)
90004a4a:	6803      	ldr	r3, [r0, #0]
90004a4c:	69db      	ldr	r3, [r3, #28]
90004a4e:	4293      	cmp	r3, r2
90004a50:	d141      	bne.n	90004ad6 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1ba>
90004a52:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004a54:	b164      	cbz	r4, 90004a70 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x154>
90004a56:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004a58:	4f32      	ldr	r7, [pc, #200]	@ (90004b24 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x208>)
                d->setX(d->getX() - targetValue);
90004a5a:	6823      	ldr	r3, [r4, #0]
90004a5c:	88a1      	ldrh	r1, [r4, #4]
90004a5e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004a60:	1a89      	subs	r1, r1, r2
90004a62:	42bb      	cmp	r3, r7
90004a64:	b209      	sxth	r1, r1
90004a66:	d11a      	bne.n	90004a9e <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x182>
        rect.x = x;
90004a68:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004a6a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004a6c:	2c00      	cmp	r4, #0
90004a6e:	d1f4      	bne.n	90004a5a <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x13e>
        screenContainer->add(snapshot);
90004a70:	6868      	ldr	r0, [r5, #4]
90004a72:	4631      	mov	r1, r6
90004a74:	6803      	ldr	r3, [r0, #0]
90004a76:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90004a78:	4798      	blx	r3
    newTransition->invalidate();
90004a7a:	682b      	ldr	r3, [r5, #0]
90004a7c:	695b      	ldr	r3, [r3, #20]
90004a7e:	4a2a      	ldr	r2, [pc, #168]	@ (90004b28 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x20c>)
90004a80:	4293      	cmp	r3, r2
90004a82:	d12b      	bne.n	90004adc <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x1c0>
        Application::getInstance()->invalidate();
90004a84:	f010 fc40 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
90004a88:	6803      	ldr	r3, [r0, #0]
90004a8a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004a8c:	b001      	add	sp, #4
90004a8e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004a92:	4718      	bx	r3
    if (*currentScreen)
90004a94:	f8d9 0000 	ldr.w	r0, [r9]
90004a98:	2800      	cmp	r0, #0
90004a9a:	d182      	bne.n	900049a2 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x86>
90004a9c:	e78a      	b.n	900049b4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x98>
                d->setX(d->getX() - targetValue);
90004a9e:	4620      	mov	r0, r4
90004aa0:	4798      	blx	r3
90004aa2:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004aa4:	2c00      	cmp	r4, #0
90004aa6:	d0e3      	beq.n	90004a70 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x154>
90004aa8:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004aaa:	e7d6      	b.n	90004a5a <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x13e>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004aac:	4b1f      	ldr	r3, [pc, #124]	@ (90004b2c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x210>)
        snapshot.makeSnapshot();
90004aae:	4630      	mov	r0, r6
        rect.x = x;
90004ab0:	612c      	str	r4, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004ab2:	f9b3 3000 	ldrsh.w	r3, [r3]
90004ab6:	4c1e      	ldr	r4, [pc, #120]	@ (90004b30 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x214>)
        rect.height = height;
90004ab8:	82eb      	strh	r3, [r5, #22]
90004aba:	f9b4 3000 	ldrsh.w	r3, [r4]
        rect.width = width;
90004abe:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90004ac0:	f00d fd1e 	bl	90012500 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
90004ac4:	8823      	ldrh	r3, [r4, #0]
90004ac6:	876b      	strh	r3, [r5, #58]	@ 0x3a
            break;
90004ac8:	e78d      	b.n	900049e6 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0xca>
    if (*currentPresenter)
90004aca:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004ace:	2800      	cmp	r0, #0
90004ad0:	f47f af61 	bne.w	90004996 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x7a>
90004ad4:	e76e      	b.n	900049b4 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x98>
        Drawable* d = screenContainer->getFirstChild();
90004ad6:	4798      	blx	r3
90004ad8:	4604      	mov	r4, r0
90004ada:	e7bb      	b.n	90004a54 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x138>
    newTransition->invalidate();
90004adc:	4628      	mov	r0, r5
90004ade:	b001      	add	sp, #4
90004ae0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004ae4:	4718      	bx	r3
    newTransition->init();
90004ae6:	4628      	mov	r0, r5
90004ae8:	4790      	blx	r2
    newTransition->invalidate();
90004aea:	682b      	ldr	r3, [r5, #0]
90004aec:	e7c6      	b.n	90004a7c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x160>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004aee:	4b11      	ldr	r3, [pc, #68]	@ (90004b34 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x218>)
90004af0:	21a3      	movs	r1, #163	@ 0xa3
90004af2:	4a11      	ldr	r2, [pc, #68]	@ (90004b38 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x21c>)
90004af4:	4811      	ldr	r0, [pc, #68]	@ (90004b3c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x220>)
90004af6:	f023 fc3f 	bl	90028378 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004afa:	4b11      	ldr	r3, [pc, #68]	@ (90004b40 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x224>)
90004afc:	21a5      	movs	r1, #165	@ 0xa5
90004afe:	4a0e      	ldr	r2, [pc, #56]	@ (90004b38 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x21c>)
90004b00:	480e      	ldr	r0, [pc, #56]	@ (90004b3c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x220>)
90004b02:	f023 fc39 	bl	90028378 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004b06:	4b0f      	ldr	r3, [pc, #60]	@ (90004b44 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x228>)
90004b08:	21a4      	movs	r1, #164	@ 0xa4
90004b0a:	4a0b      	ldr	r2, [pc, #44]	@ (90004b38 <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x21c>)
90004b0c:	480b      	ldr	r0, [pc, #44]	@ (90004b3c <_ZN23FrontendApplicationBase37gotoMainScreenSlideTransitionWestImplEv+0x220>)
90004b0e:	f023 fc33 	bl	90028378 <__assert_func>
90004b12:	bf00      	nop
90004b14:	9002b3f8 	.word	0x9002b3f8
90004b18:	240218b3 	.word	0x240218b3
90004b1c:	90004655 	.word	0x90004655
90004b20:	9000440d 	.word	0x9000440d
90004b24:	90002dfd 	.word	0x90002dfd
90004b28:	900044d5 	.word	0x900044d5
90004b2c:	240218aa 	.word	0x240218aa
90004b30:	240218a8 	.word	0x240218a8
90004b34:	9002ae88 	.word	0x9002ae88
90004b38:	9002b174 	.word	0x9002b174
90004b3c:	9002afe4 	.word	0x9002afe4
90004b40:	9002b0d0 	.word	0x9002b0d0
90004b44:	9002b02c 	.word	0x9002b02c
90004b48:	240218fc 	.word	0x240218fc
90004b4c:	240218f8 	.word	0x240218f8

90004b50 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoPoolTempScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoPoolTempScreenSlideTransitionEastImpl()
{
90004b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<PoolTempView, PoolTempPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004b54:	e9d0 7b55 	ldrd	r7, fp, [r0, #340]	@ 0x154
{
90004b58:	4680      	mov	r8, r0
90004b5a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004b5c:	68b8      	ldr	r0, [r7, #8]
90004b5e:	6803      	ldr	r3, [r0, #0]
90004b60:	6a1b      	ldr	r3, [r3, #32]
90004b62:	4798      	blx	r3
90004b64:	f5b0 7f0d 	cmp.w	r0, #564	@ 0x234
90004b68:	f0c0 80dc 	bcc.w	90004d24 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x1d4>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004b6c:	6878      	ldr	r0, [r7, #4]
90004b6e:	6803      	ldr	r3, [r0, #0]
90004b70:	6a1b      	ldr	r3, [r3, #32]
90004b72:	4798      	blx	r3
90004b74:	280f      	cmp	r0, #15
90004b76:	f240 80e1 	bls.w	90004d3c <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x1ec>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004b7a:	68f8      	ldr	r0, [r7, #12]
90004b7c:	6803      	ldr	r3, [r0, #0]
90004b7e:	6a1b      	ldr	r3, [r3, #32]
90004b80:	4798      	blx	r3
90004b82:	283f      	cmp	r0, #63	@ 0x3f
90004b84:	f240 80d4 	bls.w	90004d30 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x1e0>
    if (*currentTrans)
90004b88:	f8df a1f0 	ldr.w	sl, [pc, #496]	@ 90004d7c <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x22c>
    Application::getInstance()->clearAllTimerWidgets();
90004b8c:	f010 fbbc 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
90004b90:	3004      	adds	r0, #4
90004b92:	f010 fbde 	bl	90015352 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004b96:	f8da 0000 	ldr.w	r0, [sl]
90004b9a:	b140      	cbz	r0, 90004bae <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x5e>
        (*currentTrans)->tearDown();
90004b9c:	6803      	ldr	r3, [r0, #0]
90004b9e:	68db      	ldr	r3, [r3, #12]
90004ba0:	4798      	blx	r3
    if (*currentTrans)
90004ba2:	f8da 0000 	ldr.w	r0, [sl]
90004ba6:	b110      	cbz	r0, 90004bae <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x5e>
        (*currentTrans)->~Transition();
90004ba8:	6803      	ldr	r3, [r0, #0]
90004baa:	681b      	ldr	r3, [r3, #0]
90004bac:	4798      	blx	r3
    if (*currentScreen)
90004bae:	f8df 91d0 	ldr.w	r9, [pc, #464]	@ 90004d80 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x230>
90004bb2:	f8d9 0000 	ldr.w	r0, [r9]
90004bb6:	2800      	cmp	r0, #0
90004bb8:	f000 80a2 	beq.w	90004d00 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x1b0>
        (*currentScreen)->tearDownScreen();
90004bbc:	6803      	ldr	r3, [r0, #0]
90004bbe:	695b      	ldr	r3, [r3, #20]
90004bc0:	4798      	blx	r3
    if (*currentPresenter)
90004bc2:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004bc6:	2800      	cmp	r0, #0
90004bc8:	d07e      	beq.n	90004cc8 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x178>
        (*currentPresenter)->deactivate();
90004bca:	6803      	ldr	r3, [r0, #0]
90004bcc:	685b      	ldr	r3, [r3, #4]
90004bce:	4798      	blx	r3
    if (*currentScreen)
90004bd0:	f8d9 0000 	ldr.w	r0, [r9]
90004bd4:	b110      	cbz	r0, 90004bdc <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x8c>
        (*currentScreen)->~Screen();
90004bd6:	6803      	ldr	r3, [r0, #0]
90004bd8:	681b      	ldr	r3, [r3, #0]
90004bda:	4798      	blx	r3
    if (*currentPresenter)
90004bdc:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004be0:	b110      	cbz	r0, 90004be8 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x98>
        (*currentPresenter)->~Presenter();
90004be2:	6803      	ldr	r3, [r0, #0]
90004be4:	689b      	ldr	r3, [r3, #8]
90004be6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004be8:	68f8      	ldr	r0, [r7, #12]
90004bea:	2100      	movs	r1, #0
90004bec:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004bee:	460c      	mov	r4, r1
90004bf0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004bf2:	4798      	blx	r3
          relativeValue(0)
90004bf4:	4b54      	ldr	r3, [pc, #336]	@ (90004d48 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x1f8>)
90004bf6:	4606      	mov	r6, r0
90004bf8:	4605      	mov	r5, r0
90004bfa:	6044      	str	r4, [r0, #4]
90004bfc:	7204      	strb	r4, [r0, #8]
90004bfe:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90004c02:	4630      	mov	r0, r6
90004c04:	f00d fd00 	bl	90012608 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90004c08:	4b50      	ldr	r3, [pc, #320]	@ (90004d4c <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x1fc>)
          animationSteps(transitionSteps),
90004c0a:	2214      	movs	r2, #20
          relativeValue(0)
90004c0c:	87ac      	strh	r4, [r5, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90004c0e:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90004c10:	872a      	strh	r2, [r5, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90004c12:	2b00      	cmp	r3, #0
90004c14:	d164      	bne.n	90004ce0 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x190>
            done = true;
90004c16:	2301      	movs	r3, #1
90004c18:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004c1a:	68b8      	ldr	r0, [r7, #8]
90004c1c:	2100      	movs	r1, #0
90004c1e:	6803      	ldr	r3, [r0, #0]
90004c20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004c22:	4798      	blx	r3
90004c24:	4604      	mov	r4, r0
90004c26:	f001 f8c9 	bl	90005dbc <_ZN12PoolTempViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004c2a:	6878      	ldr	r0, [r7, #4]
90004c2c:	2100      	movs	r1, #0
90004c2e:	6803      	ldr	r3, [r0, #0]
90004c30:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004c32:	4798      	blx	r3
90004c34:	4607      	mov	r7, r0
90004c36:	4621      	mov	r1, r4
90004c38:	f001 f896 	bl	90005d68 <_ZN17PoolTempPresenterC1ER12PoolTempView>
    model->bind(newPresenter);
90004c3c:	1d3a      	adds	r2, r7, #4
    newScreen->setupScreen();
90004c3e:	6823      	ldr	r3, [r4, #0]
90004c40:	4620      	mov	r0, r4
    *currentPresenter = newPresenter;
90004c42:	f8c8 713c 	str.w	r7, [r8, #316]	@ 0x13c
    newScreen->setupScreen();
90004c46:	68db      	ldr	r3, [r3, #12]
    *currentTrans = newTransition;
90004c48:	f8ca 5000 	str.w	r5, [sl]
    *currentScreen = newScreen;
90004c4c:	f8c9 4000 	str.w	r4, [r9]
90004c50:	f8cb 2000 	str.w	r2, [fp]
90004c54:	f8c7 b008 	str.w	fp, [r7, #8]
90004c58:	63e7      	str	r7, [r4, #60]	@ 0x3c
    newScreen->setupScreen();
90004c5a:	4798      	blx	r3
    newPresenter->activate();
90004c5c:	683b      	ldr	r3, [r7, #0]
90004c5e:	4638      	mov	r0, r7
90004c60:	681b      	ldr	r3, [r3, #0]
90004c62:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004c64:	4629      	mov	r1, r5
90004c66:	4620      	mov	r0, r4
90004c68:	f012 fc0c 	bl	90017484 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004c6c:	682b      	ldr	r3, [r5, #0]
90004c6e:	4938      	ldr	r1, [pc, #224]	@ (90004d50 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x200>)
90004c70:	691a      	ldr	r2, [r3, #16]
90004c72:	428a      	cmp	r2, r1
90004c74:	d152      	bne.n	90004d1c <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x1cc>
        if (done)
90004c76:	7a2a      	ldrb	r2, [r5, #8]
90004c78:	b9d2      	cbnz	r2, 90004cb0 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x160>
        Drawable* d = screenContainer->getFirstChild();
90004c7a:	6868      	ldr	r0, [r5, #4]
90004c7c:	4a35      	ldr	r2, [pc, #212]	@ (90004d54 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x204>)
90004c7e:	6803      	ldr	r3, [r0, #0]
90004c80:	69db      	ldr	r3, [r3, #28]
90004c82:	4293      	cmp	r3, r2
90004c84:	d142      	bne.n	90004d0c <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x1bc>
90004c86:	6a84      	ldr	r4, [r0, #40]	@ 0x28
        while (d)
90004c88:	b164      	cbz	r4, 90004ca4 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x154>
90004c8a:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004c8c:	4f32      	ldr	r7, [pc, #200]	@ (90004d58 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x208>)
                d->setX(d->getX() - targetValue);
90004c8e:	6823      	ldr	r3, [r4, #0]
90004c90:	88a1      	ldrh	r1, [r4, #4]
90004c92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004c94:	1a89      	subs	r1, r1, r2
90004c96:	42bb      	cmp	r3, r7
90004c98:	b209      	sxth	r1, r1
90004c9a:	d11a      	bne.n	90004cd2 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x182>
        rect.x = x;
90004c9c:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004c9e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004ca0:	2c00      	cmp	r4, #0
90004ca2:	d1f4      	bne.n	90004c8e <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x13e>
        screenContainer->add(snapshot);
90004ca4:	6868      	ldr	r0, [r5, #4]
90004ca6:	4631      	mov	r1, r6
90004ca8:	6803      	ldr	r3, [r0, #0]
90004caa:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90004cac:	4798      	blx	r3
    newTransition->invalidate();
90004cae:	682b      	ldr	r3, [r5, #0]
90004cb0:	695b      	ldr	r3, [r3, #20]
90004cb2:	4a2a      	ldr	r2, [pc, #168]	@ (90004d5c <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x20c>)
90004cb4:	4293      	cmp	r3, r2
90004cb6:	d12c      	bne.n	90004d12 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x1c2>
        Application::getInstance()->invalidate();
90004cb8:	f010 fb26 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
90004cbc:	6803      	ldr	r3, [r0, #0]
90004cbe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004cc0:	b001      	add	sp, #4
90004cc2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004cc6:	4718      	bx	r3
    if (*currentScreen)
90004cc8:	f8d9 0000 	ldr.w	r0, [r9]
90004ccc:	2800      	cmp	r0, #0
90004cce:	d182      	bne.n	90004bd6 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x86>
90004cd0:	e78a      	b.n	90004be8 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x98>
                d->setX(d->getX() - targetValue);
90004cd2:	4620      	mov	r0, r4
90004cd4:	4798      	blx	r3
90004cd6:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004cd8:	2c00      	cmp	r4, #0
90004cda:	d0e3      	beq.n	90004ca4 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x154>
90004cdc:	8f6a      	ldrh	r2, [r5, #58]	@ 0x3a
90004cde:	e7d6      	b.n	90004c8e <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x13e>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004ce0:	4b1f      	ldr	r3, [pc, #124]	@ (90004d60 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x210>)
        snapshot.makeSnapshot();
90004ce2:	4630      	mov	r0, r6
        rect.x = x;
90004ce4:	612c      	str	r4, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004ce6:	f9b3 3000 	ldrsh.w	r3, [r3]
90004cea:	4c1e      	ldr	r4, [pc, #120]	@ (90004d64 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x214>)
        rect.height = height;
90004cec:	82eb      	strh	r3, [r5, #22]
90004cee:	f9b4 3000 	ldrsh.w	r3, [r4]
        rect.width = width;
90004cf2:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90004cf4:	f00d fc04 	bl	90012500 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
90004cf8:	8823      	ldrh	r3, [r4, #0]
90004cfa:	425b      	negs	r3, r3
90004cfc:	876b      	strh	r3, [r5, #58]	@ 0x3a
            break;
90004cfe:	e78c      	b.n	90004c1a <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0xca>
    if (*currentPresenter)
90004d00:	f8d8 013c 	ldr.w	r0, [r8, #316]	@ 0x13c
90004d04:	2800      	cmp	r0, #0
90004d06:	f47f af60 	bne.w	90004bca <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x7a>
90004d0a:	e76d      	b.n	90004be8 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x98>
        Drawable* d = screenContainer->getFirstChild();
90004d0c:	4798      	blx	r3
90004d0e:	4604      	mov	r4, r0
90004d10:	e7ba      	b.n	90004c88 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x138>
    newTransition->invalidate();
90004d12:	4628      	mov	r0, r5
90004d14:	b001      	add	sp, #4
90004d16:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d1a:	4718      	bx	r3
    newTransition->init();
90004d1c:	4628      	mov	r0, r5
90004d1e:	4790      	blx	r2
    newTransition->invalidate();
90004d20:	682b      	ldr	r3, [r5, #0]
90004d22:	e7c5      	b.n	90004cb0 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x160>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004d24:	4b10      	ldr	r3, [pc, #64]	@ (90004d68 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x218>)
90004d26:	21a3      	movs	r1, #163	@ 0xa3
90004d28:	4a10      	ldr	r2, [pc, #64]	@ (90004d6c <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x21c>)
90004d2a:	4811      	ldr	r0, [pc, #68]	@ (90004d70 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x220>)
90004d2c:	f023 fb24 	bl	90028378 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004d30:	4b10      	ldr	r3, [pc, #64]	@ (90004d74 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x224>)
90004d32:	21a5      	movs	r1, #165	@ 0xa5
90004d34:	4a0d      	ldr	r2, [pc, #52]	@ (90004d6c <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x21c>)
90004d36:	480e      	ldr	r0, [pc, #56]	@ (90004d70 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x220>)
90004d38:	f023 fb1e 	bl	90028378 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004d3c:	4b0e      	ldr	r3, [pc, #56]	@ (90004d78 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x228>)
90004d3e:	21a4      	movs	r1, #164	@ 0xa4
90004d40:	4a0a      	ldr	r2, [pc, #40]	@ (90004d6c <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x21c>)
90004d42:	480b      	ldr	r0, [pc, #44]	@ (90004d70 <_ZN23FrontendApplicationBase41gotoPoolTempScreenSlideTransitionEastImplEv+0x220>)
90004d44:	f023 fb18 	bl	90028378 <__assert_func>
90004d48:	9002b3d4 	.word	0x9002b3d4
90004d4c:	240218b3 	.word	0x240218b3
90004d50:	900046b5 	.word	0x900046b5
90004d54:	9000440d 	.word	0x9000440d
90004d58:	90002dfd 	.word	0x90002dfd
90004d5c:	900044d5 	.word	0x900044d5
90004d60:	240218aa 	.word	0x240218aa
90004d64:	240218a8 	.word	0x240218a8
90004d68:	9002ae88 	.word	0x9002ae88
90004d6c:	9002b254 	.word	0x9002b254
90004d70:	9002afe4 	.word	0x9002afe4
90004d74:	9002b0d0 	.word	0x9002b0d0
90004d78:	9002b02c 	.word	0x9002b02c
90004d7c:	240218fc 	.word	0x240218fc
90004d80:	240218f8 	.word	0x240218f8

90004d84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004d84:	b570      	push	{r4, r5, r6, lr}
90004d86:	4604      	mov	r4, r0
90004d88:	4615      	mov	r5, r2
90004d8a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004d8c:	f010 fb82 	bl	90015494 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004d90:	4a22      	ldr	r2, [pc, #136]	@ (90004e1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90004d92:	2300      	movs	r3, #0
      frontendHeap(heap),
90004d94:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
90004d98:	6014      	str	r4, [r2, #0]
        return instance;
90004d9a:	4d21      	ldr	r5, [pc, #132]	@ (90004e20 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90004d9c:	4a21      	ldr	r2, [pc, #132]	@ (90004e24 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90004d9e:	6828      	ldr	r0, [r5, #0]
90004da0:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90004da2:	4a21      	ldr	r2, [pc, #132]	@ (90004e28 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90004da4:	4921      	ldr	r1, [pc, #132]	@ (90004e2c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
90004da6:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
90004daa:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90004dae:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90004db2:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
90004db6:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004dba:	6802      	ldr	r2, [r0, #0]
90004dbc:	6892      	ldr	r2, [r2, #8]
90004dbe:	428a      	cmp	r2, r1
90004dc0:	d129      	bne.n	90004e16 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90004dc2:	f44f 7380 	mov.w	r3, #256	@ 0x100
90004dc6:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
90004dca:	2000      	movs	r0, #0
90004dcc:	f000 fe7c 	bl	90005ac8 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004dd0:	682b      	ldr	r3, [r5, #0]
90004dd2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004dd6:	b1e2      	cbz	r2, 90004e12 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
90004dd8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004dda:	b1d0      	cbz	r0, 90004e12 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004ddc:	f01a fe4d 	bl	9001fa7a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90004de0:	682b      	ldr	r3, [r5, #0]
90004de2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004de6:	b192      	cbz	r2, 90004e0e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
90004de8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004dea:	b180      	cbz	r0, 90004e0e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004dec:	f01a fec0 	bl	9001fb70 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90004df0:	682b      	ldr	r3, [r5, #0]
90004df2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004df6:	b12a      	cbz	r2, 90004e04 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
90004df8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004dfa:	b118      	cbz	r0, 90004e04 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004dfc:	f01a fec4 	bl	9001fb88 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004e00:	4620      	mov	r0, r4
90004e02:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90004e04:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004e06:	f01a febf 	bl	9001fb88 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004e0a:	4620      	mov	r0, r4
90004e0c:	bd70      	pop	{r4, r5, r6, pc}
90004e0e:	6898      	ldr	r0, [r3, #8]
90004e10:	e7ec      	b.n	90004dec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90004e12:	6898      	ldr	r0, [r3, #8]
90004e14:	e7e2      	b.n	90004ddc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004e16:	4619      	mov	r1, r3
90004e18:	4790      	blx	r2
90004e1a:	e7d6      	b.n	90004dca <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90004e1c:	24021908 	.word	0x24021908
90004e20:	240218b4 	.word	0x240218b4
90004e24:	9002b35c 	.word	0x9002b35c
90004e28:	9002b344 	.word	0x9002b344
90004e2c:	90000d5d 	.word	0x90000d5d

90004e30 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004e30:	4905      	ldr	r1, [pc, #20]	@ (90004e48 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x18>)
90004e32:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004e34:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004e38:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004e3c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004e40:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004e44:	4770      	bx	lr
90004e46:	bf00      	nop
90004e48:	90004785 	.word	0x90004785

90004e4c <_ZN23FrontendApplicationBase33gotoMainScreenSlideTransitionWestEv>:
90004e4c:	4905      	ldr	r1, [pc, #20]	@ (90004e64 <_ZN23FrontendApplicationBase33gotoMainScreenSlideTransitionWestEv+0x18>)
90004e4e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004e50:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004e54:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004e58:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004e5c:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004e60:	4770      	bx	lr
90004e62:	bf00      	nop
90004e64:	9000491d 	.word	0x9000491d

90004e68 <_ZN23FrontendApplicationBase37gotoPoolTempScreenSlideTransitionEastEv>:
90004e68:	4905      	ldr	r1, [pc, #20]	@ (90004e80 <_ZN23FrontendApplicationBase37gotoPoolTempScreenSlideTransitionEastEv+0x18>)
90004e6a:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004e6c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004e70:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004e74:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004e78:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004e7c:	4770      	bx	lr
90004e7e:	bf00      	nop
90004e80:	90004b51 	.word	0x90004b51

90004e84 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004e84:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90004e86:	4770      	bx	lr

90004e88 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90004e88:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90004e8a:	4770      	bx	lr

90004e8c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004e8c:	4770      	bx	lr
90004e8e:	bf00      	nop

90004e90 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004e90:	888b      	ldrh	r3, [r1, #4]
90004e92:	69c0      	ldr	r0, [r0, #28]
90004e94:	0adb      	lsrs	r3, r3, #11
90004e96:	680a      	ldr	r2, [r1, #0]
90004e98:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004e9c:	4410      	add	r0, r2
90004e9e:	4770      	bx	lr

90004ea0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004ea0:	b1fa      	cbz	r2, 90004ee2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90004ea2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004ea4:	7b14      	ldrb	r4, [r2, #12]
90004ea6:	b1d4      	cbz	r4, 90004ede <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004ea8:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004eac:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004eb0:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004eb4:	6a03      	ldr	r3, [r0, #32]
90004eb6:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90004eba:	ea4e 0202 	orr.w	r2, lr, r2
90004ebe:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004ec2:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90004ec6:	e004      	b.n	90004ed2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90004ec8:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004ecc:	d807      	bhi.n	90004ede <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004ece:	4283      	cmp	r3, r0
90004ed0:	d005      	beq.n	90004ede <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90004ed2:	881a      	ldrh	r2, [r3, #0]
90004ed4:	428a      	cmp	r2, r1
90004ed6:	d1f7      	bne.n	90004ec8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90004ed8:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
90004edc:	bd10      	pop	{r4, pc}
        return 0;
90004ede:	2000      	movs	r0, #0
}
90004ee0:	bd10      	pop	{r4, pc}
        return 0;
90004ee2:	4610      	mov	r0, r2
}
90004ee4:	4770      	bx	lr
90004ee6:	bf00      	nop

90004ee8 <_ZN8touchgfx13GeneratedFontD0Ev>:
90004ee8:	b510      	push	{r4, lr}
90004eea:	4604      	mov	r4, r0
90004eec:	212c      	movs	r1, #44	@ 0x2c
90004eee:	f022 fecb 	bl	90027c88 <_ZdlPvj>
90004ef2:	4620      	mov	r0, r4
90004ef4:	bd10      	pop	{r4, pc}
90004ef6:	bf00      	nop

90004ef8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004ef8:	b530      	push	{r4, r5, lr}
90004efa:	b08b      	sub	sp, #44	@ 0x2c
90004efc:	4604      	mov	r4, r0
90004efe:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90004f02:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f04:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90004f08:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f0a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
90004f0e:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f10:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90004f14:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f16:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
90004f1a:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f1c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90004f20:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f22:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90004f26:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f28:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90004f2c:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f2e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
90004f32:	9508      	str	r5, [sp, #32]
90004f34:	f011 fe32 	bl	90016b9c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90004f38:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
90004f3a:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90004f3c:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90004f3e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90004f40:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004f42:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90004f44:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90004f46:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90004f48:	62a3      	str	r3, [r4, #40]	@ 0x28
90004f4a:	4b02      	ldr	r3, [pc, #8]	@ (90004f54 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90004f4c:	6023      	str	r3, [r4, #0]
}
90004f4e:	b00b      	add	sp, #44	@ 0x2c
90004f50:	bd30      	pop	{r4, r5, pc}
90004f52:	bf00      	nop
90004f54:	9002b41c 	.word	0x9002b41c

90004f58 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004f58:	4770      	bx	lr
90004f5a:	bf00      	nop

90004f5c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004f5c:	4770      	bx	lr
90004f5e:	bf00      	nop

90004f60 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004f60:	4770      	bx	lr
90004f62:	bf00      	nop

90004f64 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004f64:	4770      	bx	lr
90004f66:	bf00      	nop

90004f68 <_ZN12MainViewBase15updatePoolLightEv>:
     * Virtual Action Handlers
     */
    virtual void updatePoolLight()
    {
        // Override and implement this function in Main
    }
90004f68:	4770      	bx	lr
90004f6a:	bf00      	nop

90004f6c <_ZN12MainViewBaseD1Ev>:
}

MainViewBase::~MainViewBase()
{

}
90004f6c:	4770      	bx	lr
90004f6e:	bf00      	nop

90004f70 <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{

}
90004f70:	4770      	bx	lr
90004f72:	bf00      	nop

90004f74 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004f74:	4770      	bx	lr
90004f76:	bf00      	nop

90004f78 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004f78:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004f7a:	68c3      	ldr	r3, [r0, #12]
90004f7c:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90004f80:	f013 0f01 	tst.w	r3, #1
90004f84:	eb04 0063 	add.w	r0, r4, r3, asr #1
90004f88:	d004      	beq.n	90004f94 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90004f8a:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004f8e:	f854 300c 	ldr.w	r3, [r4, ip]
90004f92:	589a      	ldr	r2, [r3, r2]
    }
90004f94:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004f98:	4710      	bx	r2
90004f9a:	bf00      	nop

90004f9c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004f9c:	6843      	ldr	r3, [r0, #4]
90004f9e:	b13b      	cbz	r3, 90004fb0 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004fa0:	6883      	ldr	r3, [r0, #8]
90004fa2:	b10b      	cbz	r3, 90004fa8 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004fa4:	2001      	movs	r0, #1
    }
90004fa6:	4770      	bx	lr
90004fa8:	68c0      	ldr	r0, [r0, #12]
90004faa:	f000 0001 	and.w	r0, r0, #1
90004fae:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004fb0:	4618      	mov	r0, r3
90004fb2:	4770      	bx	lr

90004fb4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004fb4:	b510      	push	{r4, lr}
90004fb6:	4604      	mov	r4, r0
90004fb8:	2110      	movs	r1, #16
90004fba:	f022 fe65 	bl	90027c88 <_ZdlPvj>
90004fbe:	4620      	mov	r0, r4
90004fc0:	bd10      	pop	{r4, pc}
90004fc2:	bf00      	nop

90004fc4 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
90004fc4:	b510      	push	{r4, lr}
90004fc6:	4604      	mov	r4, r0
}
90004fc8:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
90004fcc:	f022 fe5c 	bl	90027c88 <_ZdlPvj>
90004fd0:	4620      	mov	r0, r4
90004fd2:	bd10      	pop	{r4, pc}

90004fd4 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonAdjust)
90004fd4:	f100 03d0 	add.w	r3, r0, #208	@ 0xd0
90004fd8:	4299      	cmp	r1, r3
{
90004fda:	b570      	push	{r4, r5, r6, lr}
90004fdc:	4604      	mov	r4, r0
90004fde:	460d      	mov	r5, r1
    if (&src == &buttonAdjust)
90004fe0:	d017      	beq.n	90005012 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e>
        //AdjustClicked
        //When buttonAdjust clicked change screen to PoolTemp
        //Go to PoolTemp with screen transition towards East
        application().gotoPoolTempScreenSlideTransitionEast();
    }
    if (&src == &onOffButton)
90004fe2:	f104 0398 	add.w	r3, r4, #152	@ 0x98
90004fe6:	429d      	cmp	r5, r3
90004fe8:	d000      	beq.n	90004fec <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
        //ChangePoolLight
        //When onOffButton clicked call virtual function
        //Call updatePoolLight
        updatePoolLight();
    }
}
90004fea:	bd70      	pop	{r4, r5, r6, pc}
        bulbYellow.setVisible(!bulbYellow.isVisible());
90004fec:	f894 3155 	ldrb.w	r3, [r4, #341]	@ 0x155
        bulbYellow.invalidate();
90004ff0:	f504 7098 	add.w	r0, r4, #304	@ 0x130
        bulbYellow.setVisible(!bulbYellow.isVisible());
90004ff4:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
90004ff8:	f884 3155 	strb.w	r3, [r4, #341]	@ 0x155
        bulbYellow.invalidate();
90004ffc:	f011 f9fd 	bl	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
        updatePoolLight();
90005000:	6823      	ldr	r3, [r4, #0]
90005002:	4a06      	ldr	r2, [pc, #24]	@ (9000501c <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x48>)
90005004:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005006:	4293      	cmp	r3, r2
90005008:	d0ef      	beq.n	90004fea <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
9000500a:	4620      	mov	r0, r4
}
9000500c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        updatePoolLight();
90005010:	4718      	bx	r3

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005012:	f010 f979 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoPoolTempScreenSlideTransitionEast();
90005016:	f7ff ff27 	bl	90004e68 <_ZN23FrontendApplicationBase37gotoPoolTempScreenSlideTransitionEastEv>
9000501a:	e7e2      	b.n	90004fe2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
9000501c:	90004f69 	.word	0x90004f69

90005020 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
90005020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005024:	b083      	sub	sp, #12
90005026:	4604      	mov	r4, r0
        : presenter(0)
90005028:	f012 f880 	bl	9001712c <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
9000502c:	4a82      	ldr	r2, [pc, #520]	@ (90005238 <_ZN12MainViewBaseC1Ev+0x218>)
9000502e:	2500      	movs	r5, #0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90005030:	f64f 76ff 	movw	r6, #65535	@ 0xffff
          touchable(false),
90005034:	f44f 7b80 	mov.w	fp, #256	@ 0x100
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90005038:	27ff      	movs	r7, #255	@ 0xff
9000503a:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
9000503e:	4b7f      	ldr	r3, [pc, #508]	@ (9000523c <_ZN12MainViewBaseC1Ev+0x21c>)
90005040:	6022      	str	r2, [r4, #0]
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
    {
        Image::setBitmap(bmp);
90005042:	a901      	add	r1, sp, #4
        : Widget(), bitmap(bmp), alpha(255)
90005044:	4a7e      	ldr	r2, [pc, #504]	@ (90005240 <_ZN12MainViewBaseC1Ev+0x220>)
        Image::setBitmap(bmp);
90005046:	4650      	mov	r0, sl
90005048:	6423      	str	r3, [r4, #64]	@ 0x40
9000504a:	f504 7982 	add.w	r9, r4, #260	@ 0x104
9000504e:	f884 7066 	strb.w	r7, [r4, #102]	@ 0x66
90005052:	f504 7898 	add.w	r8, r4, #304	@ 0x130
        : Widget(), bitmap(bmp), alpha(255)
90005056:	f8a4 6092 	strh.w	r6, [r4, #146]	@ 0x92
9000505a:	f884 6094 	strb.w	r6, [r4, #148]	@ 0x94
9000505e:	66e2      	str	r2, [r4, #108]	@ 0x6c
90005060:	63e5      	str	r5, [r4, #60]	@ 0x3c
90005062:	6465      	str	r5, [r4, #68]	@ 0x44
          cachedAbsX(0),
90005064:	6625      	str	r5, [r4, #96]	@ 0x60
          touchable(false),
90005066:	f8a4 b064 	strh.w	fp, [r4, #100]	@ 0x64
        : color(col)
9000506a:	66a5      	str	r5, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
9000506c:	6725      	str	r5, [r4, #112]	@ 0x70
          cachedAbsX(0),
9000506e:	f8c4 508c 	str.w	r5, [r4, #140]	@ 0x8c
          touchable(false),
90005072:	f8a4 b090 	strh.w	fp, [r4, #144]	@ 0x90
90005076:	f8ad 6004 	strh.w	r6, [sp, #4]
9000507a:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
9000507e:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
90005082:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
90005086:	e9c4 551d 	strd	r5, r5, [r4, #116]	@ 0x74
          parent(0),
9000508a:	e9c4 551f 	strd	r5, r5, [r4, #124]	@ 0x7c
          nextDrawChainElement(0),
9000508e:	e9c4 5521 	strd	r5, r5, [r4, #132]	@ 0x84
        Image::setBitmap(bmp);
90005092:	f00d fd4e 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005096:	f04f 33ff 	mov.w	r3, #4294967295
        : Widget(), bitmap(bmp), alpha(255)
9000509a:	4a69      	ldr	r2, [pc, #420]	@ (90005240 <_ZN12MainViewBaseC1Ev+0x220>)
        Image::setBitmap(bmp);
9000509c:	a901      	add	r1, sp, #4
9000509e:	f8c4 30c6 	str.w	r3, [r4, #198]	@ 0xc6
900050a2:	4648      	mov	r0, r9
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
900050a4:	f884 30ca 	strb.w	r3, [r4, #202]	@ 0xca
900050a8:	f8a4 30cc 	strh.w	r3, [r4, #204]	@ 0xcc
900050ac:	f8c4 30fe 	str.w	r3, [r4, #254]	@ 0xfe
        touchable = touch;
900050b0:	f240 1301 	movw	r3, #257	@ 0x101
900050b4:	f884 7102 	strb.w	r7, [r4, #258]	@ 0x102
900050b8:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
900050bc:	f8a4 30f4 	strh.w	r3, [r4, #244]	@ 0xf4
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
900050c0:	4b60      	ldr	r3, [pc, #384]	@ (90005244 <_ZN12MainViewBaseC1Ev+0x224>)
900050c2:	f8ad 6004 	strh.w	r6, [sp, #4]
900050c6:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
900050ca:	4b5f      	ldr	r3, [pc, #380]	@ (90005248 <_ZN12MainViewBaseC1Ev+0x228>)
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
900050cc:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
900050d0:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
900050d4:	f884 50c4 	strb.w	r5, [r4, #196]	@ 0xc4
900050d8:	f8c4 50f8 	str.w	r5, [r4, #248]	@ 0xf8
900050dc:	f884 50fc 	strb.w	r5, [r4, #252]	@ 0xfc
900050e0:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
900050e4:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
900050e8:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
900050ec:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
900050f0:	e9c4 5535 	strd	r5, r5, [r4, #212]	@ 0xd4
900050f4:	e9c4 5537 	strd	r5, r5, [r4, #220]	@ 0xdc
          nextSibling(0),
900050f8:	e9c4 5539 	strd	r5, r5, [r4, #228]	@ 0xe4
          cachedAbsX(0),
900050fc:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
90005100:	e9c4 5542 	strd	r5, r5, [r4, #264]	@ 0x108
90005104:	e9c4 5544 	strd	r5, r5, [r4, #272]	@ 0x110
        : Widget(), bitmap(bmp), alpha(255)
90005108:	f8c4 2104 	str.w	r2, [r4, #260]	@ 0x104
9000510c:	f8a4 612a 	strh.w	r6, [r4, #298]	@ 0x12a
90005110:	f884 712c 	strb.w	r7, [r4, #300]	@ 0x12c
          touchable(false),
90005114:	f8a4 b128 	strh.w	fp, [r4, #296]	@ 0x128
          nextSibling(0),
90005118:	e9c4 5546 	strd	r5, r5, [r4, #280]	@ 0x118
          cachedAbsX(0),
9000511c:	e9c4 5548 	strd	r5, r5, [r4, #288]	@ 0x120
        Image::setBitmap(bmp);
90005120:	f00d fd07 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), bitmap(bmp), alpha(255)
90005124:	4a46      	ldr	r2, [pc, #280]	@ (90005240 <_ZN12MainViewBaseC1Ev+0x220>)
        Image::setBitmap(bmp);
90005126:	a901      	add	r1, sp, #4
90005128:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
9000512a:	f8c4 2130 	str.w	r2, [r4, #304]	@ 0x130
9000512e:	f884 7158 	strb.w	r7, [r4, #344]	@ 0x158
    onOffButton.setXY(97, 136);
90005132:	f104 0798 	add.w	r7, r4, #152	@ 0x98
90005136:	f8a4 6156 	strh.w	r6, [r4, #342]	@ 0x156
          touchable(false),
9000513a:	f8a4 b154 	strh.w	fp, [r4, #340]	@ 0x154
9000513e:	f8ad 6004 	strh.w	r6, [sp, #4]
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90005142:	1d26      	adds	r6, r4, #4
90005144:	e9c4 554d 	strd	r5, r5, [r4, #308]	@ 0x134
90005148:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
          nextSibling(0),
9000514c:	e9c4 5551 	strd	r5, r5, [r4, #324]	@ 0x144
          cachedAbsX(0),
90005150:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
        Image::setBitmap(bmp);
90005154:	f00d fced 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
90005158:	4b3c      	ldr	r3, [pc, #240]	@ (9000524c <_ZN12MainViewBaseC1Ev+0x22c>)
9000515a:	f104 0140 	add.w	r1, r4, #64	@ 0x40
9000515e:	4630      	mov	r0, r6
90005160:	f8c4 315c 	str.w	r3, [r4, #348]	@ 0x15c
90005164:	4b3a      	ldr	r3, [pc, #232]	@ (90005250 <_ZN12MainViewBaseC1Ev+0x230>)
90005166:	f8c4 4160 	str.w	r4, [r4, #352]	@ 0x160
9000516a:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
        rect.x = x;
9000516e:	4b39      	ldr	r3, [pc, #228]	@ (90005254 <_ZN12MainViewBaseC1Ev+0x234>)
90005170:	f8c4 5168 	str.w	r5, [r4, #360]	@ 0x168
90005174:	64a3      	str	r3, [r4, #72]	@ 0x48
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90005176:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
9000517a:	6465      	str	r5, [r4, #68]	@ 0x44
9000517c:	66a3      	str	r3, [r4, #104]	@ 0x68
9000517e:	f00a f8e3 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005182:	2307      	movs	r3, #7
    background.setBitmap(touchgfx::Bitmap(BITMAP_MAIN_BACKGROUND_ID));
90005184:	a901      	add	r1, sp, #4
90005186:	4650      	mov	r0, sl
90005188:	6725      	str	r5, [r4, #112]	@ 0x70
9000518a:	f8ad 3004 	strh.w	r3, [sp, #4]
9000518e:	f00d fcd0 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005192:	4651      	mov	r1, sl
90005194:	4630      	mov	r0, r6
90005196:	f00a f8d7 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000519a:	2306      	movs	r3, #6
    onOffButton.setAction(buttonCallback);
9000519c:	f504 7aae 	add.w	sl, r4, #348	@ 0x15c
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
900051a0:	aa01      	add	r2, sp, #4
        originalPressed = bitmapPressed;
900051a2:	f8a4 30cc 	strh.w	r3, [r4, #204]	@ 0xcc
        Button::setBitmaps(bitmapReleased, bitmapPressed);
900051a6:	4669      	mov	r1, sp
900051a8:	f8ad 3004 	strh.w	r3, [sp, #4]
900051ac:	4638      	mov	r0, r7
900051ae:	4b2a      	ldr	r3, [pc, #168]	@ (90005258 <_ZN12MainViewBaseC1Ev+0x238>)
900051b0:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
900051b4:	2305      	movs	r3, #5
900051b6:	f8ad 3000 	strh.w	r3, [sp]
900051ba:	f00d fb9c 	bl	900128f6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
900051be:	4639      	mov	r1, r7
900051c0:	4630      	mov	r0, r6
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900051c2:	f8c4 a0c0 	str.w	sl, [r4, #192]	@ 0xc0
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
900051c6:	f104 07d0 	add.w	r7, r4, #208	@ 0xd0
900051ca:	f00a f8bd 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051ce:	4b23      	ldr	r3, [pc, #140]	@ (9000525c <_ZN12MainViewBaseC1Ev+0x23c>)
    buttonAdjust.setBitmaps(touchgfx::Bitmap(BITMAP_ADJUST_BUTTON_ID), touchgfx::Bitmap(BITMAP_ADJUST_BUTTON_PRESSED_ID));
900051d0:	aa01      	add	r2, sp, #4
900051d2:	4669      	mov	r1, sp
900051d4:	f8c4 30d4 	str.w	r3, [r4, #212]	@ 0xd4
900051d8:	2301      	movs	r3, #1
900051da:	4638      	mov	r0, r7
900051dc:	f8ad 5000 	strh.w	r5, [sp]
900051e0:	f8ad 3004 	strh.w	r3, [sp, #4]
900051e4:	f00d fb87 	bl	900128f6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
900051e8:	4639      	mov	r1, r7
900051ea:	4630      	mov	r0, r6
900051ec:	4f1c      	ldr	r7, [pc, #112]	@ (90005260 <_ZN12MainViewBaseC1Ev+0x240>)
900051ee:	f8c4 a0f8 	str.w	sl, [r4, #248]	@ 0xf8
900051f2:	f00a f8a9 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051f6:	230b      	movs	r3, #11
    bulpWhite.setBitmap(touchgfx::Bitmap(BITMAP_PEARE_HVID_ID));
900051f8:	a901      	add	r1, sp, #4
900051fa:	4648      	mov	r0, r9
900051fc:	f8c4 7108 	str.w	r7, [r4, #264]	@ 0x108
90005200:	f8ad 3004 	strh.w	r3, [sp, #4]
90005204:	f00d fc95 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005208:	4649      	mov	r1, r9
9000520a:	4630      	mov	r0, r6
9000520c:	f00a f89c 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005210:	230a      	movs	r3, #10
    bulbYellow.setBitmap(touchgfx::Bitmap(BITMAP_PEARE_GUL_ID));
90005212:	a901      	add	r1, sp, #4
90005214:	4640      	mov	r0, r8
90005216:	f8c4 7134 	str.w	r7, [r4, #308]	@ 0x134
9000521a:	f8ad 3004 	strh.w	r3, [sp, #4]
9000521e:	f00d fc88 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005222:	4630      	mov	r0, r6
90005224:	4641      	mov	r1, r8
        visible = vis;
90005226:	f884 5155 	strb.w	r5, [r4, #341]	@ 0x155
9000522a:	f00a f88d 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
9000522e:	4620      	mov	r0, r4
90005230:	b003      	add	sp, #12
90005232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005236:	bf00      	nop
90005238:	9002b49c 	.word	0x9002b49c
9000523c:	9002c0f4 	.word	0x9002c0f4
90005240:	9002c1d0 	.word	0x9002c1d0
90005244:	9002c010 	.word	0x9002c010
90005248:	9002c15c 	.word	0x9002c15c
9000524c:	9002b484 	.word	0x9002b484
90005250:	90004fd5 	.word	0x90004fd5
90005254:	011001e0 	.word	0x011001e0
90005258:	00880061 	.word	0x00880061
9000525c:	00850159 	.word	0x00850159
90005260:	0075001b 	.word	0x0075001b

90005264 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90005264:	b530      	push	{r4, r5, lr}
90005266:	b085      	sub	sp, #20
90005268:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
9000526a:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
9000526c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000526e:	466d      	mov	r5, sp
90005270:	4601      	mov	r1, r0
        rect.width = width;
90005272:	8102      	strh	r2, [r0, #8]
90005274:	343c      	adds	r4, #60	@ 0x3c
90005276:	4628      	mov	r0, r5
90005278:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9000527c:	4798      	blx	r3
9000527e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005282:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005286:	b005      	add	sp, #20
90005288:	bd30      	pop	{r4, r5, pc}
9000528a:	bf00      	nop

9000528c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
9000528c:	b530      	push	{r4, r5, lr}
9000528e:	b085      	sub	sp, #20
90005290:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90005292:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90005294:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90005296:	466d      	mov	r5, sp
90005298:	4601      	mov	r1, r0
        rect.height = height;
9000529a:	8142      	strh	r2, [r0, #10]
9000529c:	343c      	adds	r4, #60	@ 0x3c
9000529e:	4628      	mov	r0, r5
900052a0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900052a4:	4798      	blx	r3
900052a6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900052aa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900052ae:	b005      	add	sp, #20
900052b0:	bd30      	pop	{r4, r5, pc}
900052b2:	bf00      	nop

900052b4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
900052b4:	2200      	movs	r2, #0
900052b6:	6002      	str	r2, [r0, #0]
900052b8:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
900052ba:	4770      	bx	lr

900052bc <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900052bc:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
900052c0:	4770      	bx	lr
900052c2:	bf00      	nop

900052c4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
900052c4:	2000      	movs	r0, #0
900052c6:	4770      	bx	lr

900052c8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
900052c8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900052cc:	b112      	cbz	r2, 900052d4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
900052ce:	6803      	ldr	r3, [r0, #0]
900052d0:	695b      	ldr	r3, [r3, #20]
900052d2:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
900052d4:	4770      	bx	lr
900052d6:	bf00      	nop

900052d8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900052d8:	2200      	movs	r2, #0
900052da:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
900052de:	6082      	str	r2, [r0, #8]
900052e0:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900052e4:	4770      	bx	lr
900052e6:	bf00      	nop

900052e8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900052e8:	6c80      	ldr	r0, [r0, #72]	@ 0x48
900052ea:	4770      	bx	lr

900052ec <_ZN16PoolTempViewBase11sliderMovedEi>:
     * Virtual Action Handlers
     */
    virtual void sliderMoved(int value)
    {
        // Override and implement this function in PoolTemp
    }
900052ec:	4770      	bx	lr
900052ee:	bf00      	nop

900052f0 <_ZN16PoolTempViewBaseD1Ev>:
}

PoolTempViewBase::~PoolTempViewBase()
{

}
900052f0:	4770      	bx	lr
900052f2:	bf00      	nop

900052f4 <_ZN16PoolTempViewBase11setupScreenEv>:

void PoolTempViewBase::setupScreen()
{

}
900052f4:	4770      	bx	lr
900052f6:	bf00      	nop

900052f8 <_ZN8touchgfx8CallbackI16PoolTempViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
900052f8:	4770      	bx	lr
900052fa:	bf00      	nop

900052fc <_ZN8touchgfx8CallbackI16PoolTempViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900052fc:	4770      	bx	lr
900052fe:	bf00      	nop

90005300 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90005300:	4770      	bx	lr
90005302:	bf00      	nop

90005304 <_ZN8touchgfx8CallbackI16PoolTempViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
90005304:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
90005306:	68c3      	ldr	r3, [r0, #12]
90005308:	e9d0 5401 	ldrd	r5, r4, [r0, #4]
9000530c:	f013 0f01 	tst.w	r3, #1
90005310:	eb05 0063 	add.w	r0, r5, r3, asr #1
90005314:	d004      	beq.n	90005320 <_ZN8touchgfx8CallbackI16PoolTempViewBaseRKNS_6SliderEivE7executeES4_i+0x1c>
90005316:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000531a:	f855 300c 	ldr.w	r3, [r5, ip]
9000531e:	591c      	ldr	r4, [r3, r4]
90005320:	4623      	mov	r3, r4
    }
90005322:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1, t2);
90005324:	4718      	bx	r3
90005326:	bf00      	nop

90005328 <_ZNK8touchgfx8CallbackI16PoolTempViewBaseRKNS_6SliderEivE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005328:	6843      	ldr	r3, [r0, #4]
9000532a:	b13b      	cbz	r3, 9000533c <_ZNK8touchgfx8CallbackI16PoolTempViewBaseRKNS_6SliderEivE7isValidEv+0x14>
9000532c:	6883      	ldr	r3, [r0, #8]
9000532e:	b10b      	cbz	r3, 90005334 <_ZNK8touchgfx8CallbackI16PoolTempViewBaseRKNS_6SliderEivE7isValidEv+0xc>
90005330:	2001      	movs	r0, #1
    }
90005332:	4770      	bx	lr
90005334:	68c0      	ldr	r0, [r0, #12]
90005336:	f000 0001 	and.w	r0, r0, #1
9000533a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000533c:	4618      	mov	r0, r3
9000533e:	4770      	bx	lr

90005340 <_ZN8touchgfx8CallbackI16PoolTempViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005340:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005342:	68c3      	ldr	r3, [r0, #12]
90005344:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90005348:	f013 0f01 	tst.w	r3, #1
9000534c:	eb04 0063 	add.w	r0, r4, r3, asr #1
90005350:	d004      	beq.n	9000535c <_ZN8touchgfx8CallbackI16PoolTempViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90005352:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005356:	f854 300c 	ldr.w	r3, [r4, ip]
9000535a:	589a      	ldr	r2, [r3, r2]
    }
9000535c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005360:	4710      	bx	r2
90005362:	bf00      	nop

90005364 <_ZNK8touchgfx8CallbackI16PoolTempViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005364:	6843      	ldr	r3, [r0, #4]
90005366:	b13b      	cbz	r3, 90005378 <_ZNK8touchgfx8CallbackI16PoolTempViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90005368:	6883      	ldr	r3, [r0, #8]
9000536a:	b10b      	cbz	r3, 90005370 <_ZNK8touchgfx8CallbackI16PoolTempViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
9000536c:	2001      	movs	r0, #1
    }
9000536e:	4770      	bx	lr
90005370:	68c0      	ldr	r0, [r0, #12]
90005372:	f000 0001 	and.w	r0, r0, #1
90005376:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005378:	4618      	mov	r0, r3
9000537a:	4770      	bx	lr

9000537c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
9000537c:	b510      	push	{r4, lr}
9000537e:	4604      	mov	r4, r0
90005380:	214c      	movs	r1, #76	@ 0x4c
90005382:	f022 fc81 	bl	90027c88 <_ZdlPvj>
90005386:	4620      	mov	r0, r4
90005388:	bd10      	pop	{r4, pc}
9000538a:	bf00      	nop

9000538c <_ZN8touchgfx8CallbackI16PoolTempViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000538c:	b510      	push	{r4, lr}
9000538e:	4604      	mov	r4, r0
90005390:	2110      	movs	r1, #16
90005392:	f022 fc79 	bl	90027c88 <_ZdlPvj>
90005396:	4620      	mov	r0, r4
90005398:	bd10      	pop	{r4, pc}
9000539a:	bf00      	nop

9000539c <_ZN8touchgfx8CallbackI16PoolTempViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
9000539c:	b510      	push	{r4, lr}
9000539e:	4604      	mov	r4, r0
900053a0:	2110      	movs	r1, #16
900053a2:	f022 fc71 	bl	90027c88 <_ZdlPvj>
900053a6:	4620      	mov	r0, r4
900053a8:	bd10      	pop	{r4, pc}
900053aa:	bf00      	nop

900053ac <_ZN16PoolTempViewBaseD0Ev>:
PoolTempViewBase::~PoolTempViewBase()
900053ac:	b510      	push	{r4, lr}
900053ae:	4604      	mov	r4, r0
}
900053b0:	f44f 710d 	mov.w	r1, #564	@ 0x234
900053b4:	f022 fc68 	bl	90027c88 <_ZdlPvj>
900053b8:	4620      	mov	r0, r4
900053ba:	bd10      	pop	{r4, pc}

900053bc <_ZN16PoolTempViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void PoolTempViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonOK)
900053bc:	3098      	adds	r0, #152	@ 0x98
900053be:	4288      	cmp	r0, r1
900053c0:	d000      	beq.n	900053c4 <_ZN16PoolTempViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8>
900053c2:	4770      	bx	lr
{
900053c4:	b508      	push	{r3, lr}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900053c6:	f00f ff9f 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
        //OkClicked
        //When buttonOK clicked change screen to Main
        //Go to Main with screen transition towards West
        application().gotoMainScreenSlideTransitionWest();
    }
}
900053ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenSlideTransitionWest();
900053ce:	f7ff bd3d 	b.w	90004e4c <_ZN23FrontendApplicationBase33gotoMainScreenSlideTransitionWestEv>
900053d2:	bf00      	nop

900053d4 <_ZN16PoolTempViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:

void PoolTempViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider)
900053d4:	f100 0ccc 	add.w	ip, r0, #204	@ 0xcc
900053d8:	458c      	cmp	ip, r1
900053da:	d000      	beq.n	900053de <_ZN16PoolTempViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0xa>
        //SliderChanged
        //When slider value changed call virtual function
        //Call sliderMoved
        sliderMoved(value);
    }
}
900053dc:	4770      	bx	lr
        sliderMoved(value);
900053de:	6803      	ldr	r3, [r0, #0]
900053e0:	4902      	ldr	r1, [pc, #8]	@ (900053ec <_ZN16PoolTempViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x18>)
900053e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900053e4:	428b      	cmp	r3, r1
900053e6:	d0f9      	beq.n	900053dc <_ZN16PoolTempViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x8>
900053e8:	4611      	mov	r1, r2
900053ea:	4718      	bx	r3
900053ec:	900052ed 	.word	0x900052ed

900053f0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900053f0:	4b1b      	ldr	r3, [pc, #108]	@ (90005460 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900053f2:	6802      	ldr	r2, [r0, #0]
900053f4:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
900053f6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900053f8:	6b55      	ldr	r5, [r2, #52]	@ 0x34
900053fa:	b323      	cbz	r3, 90005446 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
900053fc:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
900053fe:	4919      	ldr	r1, [pc, #100]	@ (90005464 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90005400:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90005402:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005404:	8809      	ldrh	r1, [r1, #0]
90005406:	4291      	cmp	r1, r2
90005408:	d923      	bls.n	90005452 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
9000540a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9000540e:	4b16      	ldr	r3, [pc, #88]	@ (90005468 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90005410:	681b      	ldr	r3, [r3, #0]
90005412:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90005416:	4a15      	ldr	r2, [pc, #84]	@ (9000546c <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90005418:	6803      	ldr	r3, [r0, #0]
9000541a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000541c:	4293      	cmp	r3, r2
9000541e:	d107      	bne.n	90005430 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90005420:	88c0      	ldrh	r0, [r0, #6]
90005422:	4b13      	ldr	r3, [pc, #76]	@ (90005470 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90005424:	1a31      	subs	r1, r6, r0
90005426:	429d      	cmp	r5, r3
90005428:	b209      	sxth	r1, r1
9000542a:	d107      	bne.n	9000543c <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
9000542c:	80e1      	strh	r1, [r4, #6]
    }
9000542e:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005430:	4798      	blx	r3
90005432:	4b0f      	ldr	r3, [pc, #60]	@ (90005470 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90005434:	1a31      	subs	r1, r6, r0
90005436:	429d      	cmp	r5, r3
90005438:	b209      	sxth	r1, r1
9000543a:	d0f7      	beq.n	9000542c <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
9000543c:	4620      	mov	r0, r4
9000543e:	462b      	mov	r3, r5
    }
90005440:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005444:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005446:	4b0b      	ldr	r3, [pc, #44]	@ (90005474 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90005448:	216c      	movs	r1, #108	@ 0x6c
9000544a:	4a0b      	ldr	r2, [pc, #44]	@ (90005478 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
9000544c:	480b      	ldr	r0, [pc, #44]	@ (9000547c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
9000544e:	f022 ff93 	bl	90028378 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005452:	4b0b      	ldr	r3, [pc, #44]	@ (90005480 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90005454:	216d      	movs	r1, #109	@ 0x6d
90005456:	4a08      	ldr	r2, [pc, #32]	@ (90005478 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90005458:	4808      	ldr	r0, [pc, #32]	@ (9000547c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
9000545a:	f022 ff8d 	bl	90028378 <__assert_func>
9000545e:	bf00      	nop
90005460:	2402190c 	.word	0x2402190c
90005464:	24021910 	.word	0x24021910
90005468:	24021914 	.word	0x24021914
9000546c:	900043c1 	.word	0x900043c1
90005470:	90002e01 	.word	0x90002e01
90005474:	9002b4cc 	.word	0x9002b4cc
90005478:	9002b510 	.word	0x9002b510
9000547c:	9002b54c 	.word	0x9002b54c
90005480:	9002b594 	.word	0x9002b594

90005484 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90005484:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90005486:	b570      	push	{r4, r5, r6, lr}
90005488:	4614      	mov	r4, r2
9000548a:	4e23      	ldr	r6, [pc, #140]	@ (90005518 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
9000548c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
9000548e:	4605      	mov	r5, r0
90005490:	42b2      	cmp	r2, r6
90005492:	d122      	bne.n	900054da <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
90005494:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
90005496:	80a9      	strh	r1, [r5, #4]
90005498:	4920      	ldr	r1, [pc, #128]	@ (9000551c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
9000549a:	428a      	cmp	r2, r1
9000549c:	d123      	bne.n	900054e6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000549e:	4a20      	ldr	r2, [pc, #128]	@ (90005520 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900054a0:	b2a4      	uxth	r4, r4
900054a2:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
900054a4:	6813      	ldr	r3, [r2, #0]
900054a6:	2b00      	cmp	r3, #0
900054a8:	d02f      	beq.n	9000550a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
900054aa:	491e      	ldr	r1, [pc, #120]	@ (90005524 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
900054ac:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900054ae:	8809      	ldrh	r1, [r1, #0]
900054b0:	4291      	cmp	r1, r2
900054b2:	d924      	bls.n	900054fe <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
900054b4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900054b8:	4b1b      	ldr	r3, [pc, #108]	@ (90005528 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
900054ba:	681b      	ldr	r3, [r3, #0]
900054bc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900054c0:	4a1a      	ldr	r2, [pc, #104]	@ (9000552c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
900054c2:	6803      	ldr	r3, [r0, #0]
900054c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900054c6:	4293      	cmp	r3, r2
900054c8:	d117      	bne.n	900054fa <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
900054ca:	88c0      	ldrh	r0, [r0, #6]
900054cc:	4b18      	ldr	r3, [pc, #96]	@ (90005530 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
900054ce:	1a24      	subs	r4, r4, r0
900054d0:	429e      	cmp	r6, r3
900054d2:	b221      	sxth	r1, r4
900054d4:	d10c      	bne.n	900054f0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
900054d6:	80e9      	strh	r1, [r5, #6]
    }
900054d8:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
900054da:	4790      	blx	r2
        setBaselineY(baselineY);
900054dc:	682b      	ldr	r3, [r5, #0]
900054de:	490f      	ldr	r1, [pc, #60]	@ (9000551c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
900054e0:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
900054e2:	428a      	cmp	r2, r1
900054e4:	d0db      	beq.n	9000549e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
900054e6:	4621      	mov	r1, r4
900054e8:	4628      	mov	r0, r5
    }
900054ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
900054ee:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
900054f0:	4628      	mov	r0, r5
900054f2:	4633      	mov	r3, r6
    }
900054f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900054f8:	4718      	bx	r3
900054fa:	4798      	blx	r3
900054fc:	e7e6      	b.n	900054cc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900054fe:	4b0d      	ldr	r3, [pc, #52]	@ (90005534 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90005500:	216d      	movs	r1, #109	@ 0x6d
90005502:	4a0d      	ldr	r2, [pc, #52]	@ (90005538 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005504:	480d      	ldr	r0, [pc, #52]	@ (9000553c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005506:	f022 ff37 	bl	90028378 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000550a:	4b0d      	ldr	r3, [pc, #52]	@ (90005540 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000550c:	216c      	movs	r1, #108	@ 0x6c
9000550e:	4a0a      	ldr	r2, [pc, #40]	@ (90005538 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005510:	480a      	ldr	r0, [pc, #40]	@ (9000553c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005512:	f022 ff31 	bl	90028378 <__assert_func>
90005516:	bf00      	nop
90005518:	90002dfd 	.word	0x90002dfd
9000551c:	900053f1 	.word	0x900053f1
90005520:	2402190c 	.word	0x2402190c
90005524:	24021910 	.word	0x24021910
90005528:	24021914 	.word	0x24021914
9000552c:	900043c1 	.word	0x900043c1
90005530:	90002e01 	.word	0x90002e01
90005534:	9002b594 	.word	0x9002b594
90005538:	9002b510 	.word	0x9002b510
9000553c:	9002b54c 	.word	0x9002b54c
90005540:	9002b4cc 	.word	0x9002b4cc

90005544 <_ZN16PoolTempViewBaseC1Ev>:
PoolTempViewBase::PoolTempViewBase() :
90005544:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005548:	b08a      	sub	sp, #40	@ 0x28
9000554a:	4604      	mov	r4, r0
9000554c:	f011 fdee 	bl	9001712c <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
90005550:	4ba9      	ldr	r3, [pc, #676]	@ (900057f8 <_ZN16PoolTempViewBaseC1Ev+0x2b4>)
90005552:	2500      	movs	r5, #0
    sliderValueChangedCallback(this, &PoolTempViewBase::sliderValueChangedCallbackHandler)
90005554:	4aa9      	ldr	r2, [pc, #676]	@ (900057fc <_ZN16PoolTempViewBaseC1Ev+0x2b8>)
90005556:	6423      	str	r3, [r4, #64]	@ 0x40
90005558:	f64f 73ff 	movw	r3, #65535	@ 0xffff
          touchable(false),
9000555c:	f44f 7880 	mov.w	r8, #256	@ 0x100
90005560:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
90005564:	f04f 0aff 	mov.w	sl, #255	@ 0xff
        : Widget(), bitmap(bmp), alpha(255)
90005568:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
9000556c:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
        Image::setBitmap(bmp);
90005570:	a908      	add	r1, sp, #32
90005572:	f8ad 3020 	strh.w	r3, [sp, #32]
90005576:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
90005578:	4ba1      	ldr	r3, [pc, #644]	@ (90005800 <_ZN16PoolTempViewBaseC1Ev+0x2bc>)
9000557a:	f104 06cc 	add.w	r6, r4, #204	@ 0xcc
9000557e:	6022      	str	r2, [r4, #0]
90005580:	f04f 37ff 	mov.w	r7, #4294967295
90005584:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : x(0), y(0), width(0), height(0)
90005586:	6465      	str	r5, [r4, #68]	@ 0x44
          cachedAbsX(0),
90005588:	6625      	str	r5, [r4, #96]	@ 0x60
          touchable(false),
9000558a:	f8a4 8064 	strh.w	r8, [r4, #100]	@ 0x64
        : color(col)
9000558e:	66a5      	str	r5, [r4, #104]	@ 0x68
90005590:	f884 a066 	strb.w	sl, [r4, #102]	@ 0x66
90005594:	f8a4 8090 	strh.w	r8, [r4, #144]	@ 0x90
90005598:	66e3      	str	r3, [r4, #108]	@ 0x6c
        : x(0), y(0), width(0), height(0)
9000559a:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
9000559e:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
900055a2:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
900055a6:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
900055aa:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
900055ae:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
900055b2:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
        Image::setBitmap(bmp);
900055b6:	f00d fabc 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        touchable = touch;
900055ba:	f240 1301 	movw	r3, #257	@ 0x101
        : Widget(), action(), pressed(false)
900055be:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
900055c2:	4630      	mov	r0, r6
900055c4:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
900055c8:	4b8e      	ldr	r3, [pc, #568]	@ (90005804 <_ZN16PoolTempViewBaseC1Ev+0x2c0>)
900055ca:	f884 50c4 	strb.w	r5, [r4, #196]	@ 0xc4
900055ce:	f8c4 70c6 	str.w	r7, [r4, #198]	@ 0xc6
900055d2:	f884 70ca 	strb.w	r7, [r4, #202]	@ 0xca
900055d6:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
900055da:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
900055de:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
900055e2:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
900055e6:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
900055ea:	f00a fb8d 	bl	9000fd08 <_ZN8touchgfx6SliderC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
900055ee:	4b86      	ldr	r3, [pc, #536]	@ (90005808 <_ZN16PoolTempViewBaseC1Ev+0x2c4>)
          touchable(false),
900055f0:	f8a4 81e4 	strh.w	r8, [r4, #484]	@ 0x1e4
900055f4:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900055f8:	f8c4 31c0 	str.w	r3, [r4, #448]	@ 0x1c0
        : pobject(pObject), pmemfun(pmemfun_1)
900055fc:	4b83      	ldr	r3, [pc, #524]	@ (9000580c <_ZN16PoolTempViewBaseC1Ev+0x2c8>)
        : typedTextId(id)
900055fe:	f8a4 71ec 	strh.w	r7, [r4, #492]	@ 0x1ec
90005602:	f8c4 3214 	str.w	r3, [r4, #532]	@ 0x214
90005606:	4b82      	ldr	r3, [pc, #520]	@ (90005810 <_ZN16PoolTempViewBaseC1Ev+0x2cc>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005608:	f8c4 7200 	str.w	r7, [r4, #512]	@ 0x200
9000560c:	1d27      	adds	r7, r4, #4
9000560e:	f8c4 321c 	str.w	r3, [r4, #540]	@ 0x21c
        : pobject(pObject), pmemfun(pmemfun_2)
90005612:	4b80      	ldr	r3, [pc, #512]	@ (90005814 <_ZN16PoolTempViewBaseC1Ev+0x2d0>)
90005614:	4638      	mov	r0, r7
90005616:	f8df 8220 	ldr.w	r8, [pc, #544]	@ 90005838 <_ZN16PoolTempViewBaseC1Ev+0x2f4>
9000561a:	f8c4 3224 	str.w	r3, [r4, #548]	@ 0x224
9000561e:	4b7e      	ldr	r3, [pc, #504]	@ (90005818 <_ZN16PoolTempViewBaseC1Ev+0x2d4>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005620:	f8c4 a1f6 	str.w	sl, [r4, #502]	@ 0x1f6
90005624:	f04f 0a0c 	mov.w	sl, #12
90005628:	f8c4 322c 	str.w	r3, [r4, #556]	@ 0x22c
        rect.x = x;
9000562c:	4b7b      	ldr	r3, [pc, #492]	@ (9000581c <_ZN16PoolTempViewBaseC1Ev+0x2d8>)
        : color(col)
9000562e:	f8c4 51f0 	str.w	r5, [r4, #496]	@ 0x1f0
90005632:	64a3      	str	r3, [r4, #72]	@ 0x48
        color = newColor;
90005634:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90005638:	f8a4 51f4 	strh.w	r5, [r4, #500]	@ 0x1f4
9000563c:	66a3      	str	r3, [r4, #104]	@ 0x68
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000563e:	f8c4 51fc 	str.w	r5, [r4, #508]	@ 0x1fc
        : pobject(pObject), pmemfun(pmemfun_1)
90005642:	f8c4 5220 	str.w	r5, [r4, #544]	@ 0x220
        : pobject(pObject), pmemfun(pmemfun_2)
90005646:	f8c4 5230 	str.w	r5, [r4, #560]	@ 0x230
9000564a:	6465      	str	r5, [r4, #68]	@ 0x44
        : pobject(pObject), pmemfun(pmemfun_1)
9000564c:	f8c4 4218 	str.w	r4, [r4, #536]	@ 0x218
        : pobject(pObject), pmemfun(pmemfun_2)
90005650:	f8c4 4228 	str.w	r4, [r4, #552]	@ 0x228
90005654:	f8c4 81e8 	str.w	r8, [r4, #488]	@ 0x1e8
        : x(0), y(0), width(0), height(0)
90005658:	e9c4 5571 	strd	r5, r5, [r4, #452]	@ 0x1c4
9000565c:	e9c4 5573 	strd	r5, r5, [r4, #460]	@ 0x1cc
          nextSibling(0),
90005660:	e9c4 5575 	strd	r5, r5, [r4, #468]	@ 0x1d4
          cachedAbsX(0),
90005664:	e9c4 5577 	strd	r5, r5, [r4, #476]	@ 0x1dc
90005668:	e9c4 5581 	strd	r5, r5, [r4, #516]	@ 0x204
9000566c:	f009 fe6c 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setBitmap(touchgfx::Bitmap(BITMAP_SETTINGS_BACKGROUND_ID));
90005670:	4648      	mov	r0, r9
90005672:	a908      	add	r1, sp, #32
        rect.x = x;
90005674:	6725      	str	r5, [r4, #112]	@ 0x70
90005676:	f8ad a020 	strh.w	sl, [sp, #32]
9000567a:	f00d fa5a 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000567e:	4649      	mov	r1, r9
90005680:	4638      	mov	r0, r7
90005682:	f009 fe61 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005686:	4b66      	ldr	r3, [pc, #408]	@ (90005820 <_ZN16PoolTempViewBaseC1Ev+0x2dc>)
    sliderValueChangedCallback(this, &PoolTempViewBase::sliderValueChangedCallbackHandler)
90005688:	f104 0998 	add.w	r9, r4, #152	@ 0x98
    buttonOK.setBitmaps(touchgfx::Bitmap(BITMAP_OK_BUTTON_ID), touchgfx::Bitmap(BITMAP_OK_BUTTON_PRESSED_ID));
9000568c:	aa08      	add	r2, sp, #32
9000568e:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90005692:	2308      	movs	r3, #8
90005694:	4648      	mov	r0, r9
90005696:	a907      	add	r1, sp, #28
90005698:	f8ad 301c 	strh.w	r3, [sp, #28]
9000569c:	2309      	movs	r3, #9
9000569e:	f8ad 3020 	strh.w	r3, [sp, #32]
900056a2:	f00d f928 	bl	900128f6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    buttonOK.setAction(buttonCallback);
900056a6:	f504 7305 	add.w	r3, r4, #532	@ 0x214
900056aa:	4649      	mov	r1, r9
900056ac:	4638      	mov	r0, r7
900056ae:	f04f 0902 	mov.w	r9, #2
        action = &callback;
900056b2:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
900056b6:	f009 fe47 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900056ba:	4b5a      	ldr	r3, [pc, #360]	@ (90005824 <_ZN16PoolTempViewBaseC1Ev+0x2e0>)
    slider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER_ROUND_NOB_ID));
900056bc:	aa07      	add	r2, sp, #28
900056be:	a906      	add	r1, sp, #24
900056c0:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
900056c4:	2303      	movs	r3, #3
900056c6:	4630      	mov	r0, r6
900056c8:	f8ad 9020 	strh.w	r9, [sp, #32]
900056cc:	f8ad 3018 	strh.w	r3, [sp, #24]
900056d0:	2304      	movs	r3, #4
900056d2:	f8ad 301c 	strh.w	r3, [sp, #28]
900056d6:	ab08      	add	r3, sp, #32
900056d8:	f00a fb70 	bl	9000fdbc <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    slider.setupHorizontalSlider(2, 19, 2, 0, 309);
900056dc:	f240 1335 	movw	r3, #309	@ 0x135
900056e0:	4649      	mov	r1, r9
900056e2:	2213      	movs	r2, #19
900056e4:	4630      	mov	r0, r6
900056e6:	9500      	str	r5, [sp, #0]
900056e8:	9301      	str	r3, [sp, #4]
900056ea:	464b      	mov	r3, r9
900056ec:	f00a fa6d 	bl	9000fbca <_ZN8touchgfx6Slider21setupHorizontalSliderEsssss>
    slider.setValueRange(12, 28);
900056f0:	221c      	movs	r2, #28
900056f2:	4651      	mov	r1, sl
900056f4:	4630      	mov	r0, r6
900056f6:	f00a f8f4 	bl	9000f8e2 <_ZN8touchgfx6Slider13setValueRangeEss>
    slider.setValue(18);
900056fa:	2112      	movs	r1, #18
900056fc:	4630      	mov	r0, r6
    tempText.setPosition(381, 117, 115, 46);
900056fe:	f504 75e0 	add.w	r5, r4, #448	@ 0x1c0
    slider.setValue(18);
90005702:	f00a f8b6 	bl	9000f872 <_ZN8touchgfx6Slider8setValueEs>
    slider.setNewValueCallback(sliderValueChangedCallback);
90005706:	f504 7309 	add.w	r3, r4, #548	@ 0x224
9000570a:	4631      	mov	r1, r6
9000570c:	4638      	mov	r0, r7
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
9000570e:	f8c4 31bc 	str.w	r3, [r4, #444]	@ 0x1bc
90005712:	f009 fe19 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005716:	4a44      	ldr	r2, [pc, #272]	@ (90005828 <_ZN16PoolTempViewBaseC1Ev+0x2e4>)
        setX(x);
90005718:	f8d4 31c0 	ldr.w	r3, [r4, #448]	@ 0x1c0
        setY(y);
9000571c:	4943      	ldr	r1, [pc, #268]	@ (9000582c <_ZN16PoolTempViewBaseC1Ev+0x2e8>)
        rect.x = x;
9000571e:	f8c4 21c4 	str.w	r2, [r4, #452]	@ 0x1c4
        setWidth(width);
90005722:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90005724:	428a      	cmp	r2, r1
90005726:	d14d      	bne.n	900057c4 <_ZN16PoolTempViewBaseC1Ev+0x280>
        rect.width = width;
90005728:	2273      	movs	r2, #115	@ 0x73
        boundingArea = calculateBoundingArea();
9000572a:	ae02      	add	r6, sp, #8
9000572c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005730:	4629      	mov	r1, r5
90005732:	4630      	mov	r0, r6
90005734:	f8a4 21c8 	strh.w	r2, [r4, #456]	@ 0x1c8
90005738:	4798      	blx	r3
9000573a:	f504 73fe 	add.w	r3, r4, #508	@ 0x1fc
9000573e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90005742:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90005746:	f8d4 31c0 	ldr.w	r3, [r4, #448]	@ 0x1c0
9000574a:	4939      	ldr	r1, [pc, #228]	@ (90005830 <_ZN16PoolTempViewBaseC1Ev+0x2ec>)
9000574c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000574e:	428a      	cmp	r2, r1
90005750:	d141      	bne.n	900057d6 <_ZN16PoolTempViewBaseC1Ev+0x292>
        rect.height = height;
90005752:	222e      	movs	r2, #46	@ 0x2e
        boundingArea = calculateBoundingArea();
90005754:	ae02      	add	r6, sp, #8
90005756:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9000575a:	4629      	mov	r1, r5
9000575c:	4630      	mov	r0, r6
9000575e:	f8a4 21ca 	strh.w	r2, [r4, #458]	@ 0x1ca
90005762:	4798      	blx	r3
90005764:	f105 033c 	add.w	r3, r5, #60	@ 0x3c
90005768:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000576c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90005770:	f8d4 31c0 	ldr.w	r3, [r4, #448]	@ 0x1c0
        color = newColor;
90005774:	f04f 32ff 	mov.w	r2, #4294967295
90005778:	492e      	ldr	r1, [pc, #184]	@ (90005834 <_ZN16PoolTempViewBaseC1Ev+0x2f0>)
        boundingArea = calculateBoundingArea();
9000577a:	f8d3 6084 	ldr.w	r6, [r3, #132]	@ 0x84
        linespace = space;
9000577e:	2300      	movs	r3, #0
        color = newColor;
90005780:	f8c4 21f0 	str.w	r2, [r4, #496]	@ 0x1f0
        linespace = space;
90005784:	428e      	cmp	r6, r1
90005786:	f8a4 31f4 	strh.w	r3, [r4, #500]	@ 0x1f4
        boundingArea = calculateBoundingArea();
9000578a:	d128      	bne.n	900057de <_ZN16PoolTempViewBaseC1Ev+0x29a>
9000578c:	f8c4 3204 	str.w	r3, [r4, #516]	@ 0x204
90005790:	e9c4 327f 	strd	r3, r2, [r4, #508]	@ 0x1fc
90005794:	2301      	movs	r3, #1
    tempText.setTypedText(touchgfx::TypedText(T_TEXTID2));
90005796:	a908      	add	r1, sp, #32
90005798:	4628      	mov	r0, r5
9000579a:	f8cd 8020 	str.w	r8, [sp, #32]
9000579e:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
    tempTextBuffer[0] = 0;
900057a2:	2300      	movs	r3, #0
900057a4:	f8a4 320c 	strh.w	r3, [r4, #524]	@ 0x20c
    tempText.setWildcard(tempTextBuffer);
900057a8:	f504 7303 	add.w	r3, r4, #524	@ 0x20c
        wc1 = value;
900057ac:	f8c4 3208 	str.w	r3, [r4, #520]	@ 0x208
    tempText.setTypedText(touchgfx::TypedText(T_TEXTID2));
900057b0:	f00d f846 	bl	90012840 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900057b4:	4638      	mov	r0, r7
900057b6:	4629      	mov	r1, r5
900057b8:	f009 fdc6 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900057bc:	4620      	mov	r0, r4
900057be:	b00a      	add	sp, #40	@ 0x28
900057c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        setWidth(width);
900057c4:	2173      	movs	r1, #115	@ 0x73
900057c6:	4628      	mov	r0, r5
900057c8:	4790      	blx	r2
        setHeight(height);
900057ca:	f8d4 31c0 	ldr.w	r3, [r4, #448]	@ 0x1c0
900057ce:	4918      	ldr	r1, [pc, #96]	@ (90005830 <_ZN16PoolTempViewBaseC1Ev+0x2ec>)
900057d0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
900057d2:	428a      	cmp	r2, r1
900057d4:	d0bd      	beq.n	90005752 <_ZN16PoolTempViewBaseC1Ev+0x20e>
900057d6:	212e      	movs	r1, #46	@ 0x2e
900057d8:	4628      	mov	r0, r5
900057da:	4790      	blx	r2
900057dc:	e7c8      	b.n	90005770 <_ZN16PoolTempViewBaseC1Ev+0x22c>
900057de:	f10d 0908 	add.w	r9, sp, #8
900057e2:	4629      	mov	r1, r5
900057e4:	4648      	mov	r0, r9
900057e6:	47b0      	blx	r6
900057e8:	f105 033c 	add.w	r3, r5, #60	@ 0x3c
900057ec:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
900057f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900057f4:	e7ce      	b.n	90005794 <_ZN16PoolTempViewBaseC1Ev+0x250>
900057f6:	bf00      	nop
900057f8:	9002c0f4 	.word	0x9002c0f4
900057fc:	9002b69c 	.word	0x9002b69c
90005800:	9002c1d0 	.word	0x9002c1d0
90005804:	9002c15c 	.word	0x9002c15c
90005808:	9002b5dc 	.word	0x9002b5dc
9000580c:	9002b66c 	.word	0x9002b66c
90005810:	900053bd 	.word	0x900053bd
90005814:	9002b684 	.word	0x9002b684
90005818:	900053d5 	.word	0x900053d5
9000581c:	011001e0 	.word	0x011001e0
90005820:	00cf00b4 	.word	0x00cf00b4
90005824:	0079000b 	.word	0x0079000b
90005828:	0075017d 	.word	0x0075017d
9000582c:	90005265 	.word	0x90005265
90005830:	9000528d 	.word	0x9000528d
90005834:	900052d9 	.word	0x900052d9
90005838:	9002ae80 	.word	0x9002ae80

9000583c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 0, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 0, 0, 0, 0);
9000583c:	4770      	bx	lr
9000583e:	bf00      	nop

90005840 <_Z23getFont_verdana_10_4bppv>:
{
90005840:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 0, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 0, 0, 0, 0);
90005842:	4d18      	ldr	r5, [pc, #96]	@ (900058a4 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90005844:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 0, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 0, 0, 0, 0);
90005846:	682c      	ldr	r4, [r5, #0]
90005848:	f3bf 8f5b 	dmb	ish
9000584c:	f014 0401 	ands.w	r4, r4, #1
90005850:	d002      	beq.n	90005858 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90005852:	4815      	ldr	r0, [pc, #84]	@ (900058a8 <_Z23getFont_verdana_10_4bppv+0x68>)
90005854:	b00f      	add	sp, #60	@ 0x3c
90005856:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 0, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 0, 0, 0, 0);
90005858:	4628      	mov	r0, r5
9000585a:	f022 fa17 	bl	90027c8c <__cxa_guard_acquire>
9000585e:	2800      	cmp	r0, #0
90005860:	d0f7      	beq.n	90005852 <_Z23getFont_verdana_10_4bppv+0x12>
90005862:	4912      	ldr	r1, [pc, #72]	@ (900058ac <_Z23getFont_verdana_10_4bppv+0x6c>)
90005864:	230a      	movs	r3, #10
90005866:	4a12      	ldr	r2, [pc, #72]	@ (900058b0 <_Z23getFont_verdana_10_4bppv+0x70>)
90005868:	9300      	str	r3, [sp, #0]
9000586a:	480f      	ldr	r0, [pc, #60]	@ (900058a8 <_Z23getFont_verdana_10_4bppv+0x68>)
9000586c:	e9cd 2107 	strd	r2, r1, [sp, #28]
90005870:	2101      	movs	r1, #1
90005872:	2204      	movs	r2, #4
90005874:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005878:	e9cd 2103 	strd	r2, r1, [sp, #12]
9000587c:	e9cd 4409 	strd	r4, r4, [sp, #36]	@ 0x24
90005880:	4622      	mov	r2, r4
90005882:	490c      	ldr	r1, [pc, #48]	@ (900058b4 <_Z23getFont_verdana_10_4bppv+0x74>)
90005884:	e9cd 4405 	strd	r4, r4, [sp, #20]
90005888:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000588c:	f7ff fb34 	bl	90004ef8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005890:	4809      	ldr	r0, [pc, #36]	@ (900058b8 <_Z23getFont_verdana_10_4bppv+0x78>)
90005892:	f022 fd8f 	bl	900283b4 <atexit>
90005896:	4628      	mov	r0, r5
90005898:	f022 fa04 	bl	90027ca4 <__cxa_guard_release>
}
9000589c:	4802      	ldr	r0, [pc, #8]	@ (900058a8 <_Z23getFont_verdana_10_4bppv+0x68>)
9000589e:	b00f      	add	sp, #60	@ 0x3c
900058a0:	bd30      	pop	{r4, r5, pc}
900058a2:	bf00      	nop
900058a4:	2400775c 	.word	0x2400775c
900058a8:	24007760 	.word	0x24007760
900058ac:	9002c8e4 	.word	0x9002c8e4
900058b0:	9002c8fc 	.word	0x9002c8fc
900058b4:	902011a4 	.word	0x902011a4
900058b8:	9000583d 	.word	0x9000583d

900058bc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 7, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
900058bc:	4770      	bx	lr
900058be:	bf00      	nop

900058c0 <_Z23getFont_verdana_20_4bppv>:
{
900058c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 7, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
900058c2:	4d18      	ldr	r5, [pc, #96]	@ (90005924 <_Z23getFont_verdana_20_4bppv+0x64>)
{
900058c4:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 7, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
900058c6:	682c      	ldr	r4, [r5, #0]
900058c8:	f3bf 8f5b 	dmb	ish
900058cc:	f014 0401 	ands.w	r4, r4, #1
900058d0:	d002      	beq.n	900058d8 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
900058d2:	4815      	ldr	r0, [pc, #84]	@ (90005928 <_Z23getFont_verdana_20_4bppv+0x68>)
900058d4:	b00f      	add	sp, #60	@ 0x3c
900058d6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 7, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 0, 0, 0, 0);
900058d8:	4628      	mov	r0, r5
900058da:	f022 f9d7 	bl	90027c8c <__cxa_guard_acquire>
900058de:	2800      	cmp	r0, #0
900058e0:	d0f7      	beq.n	900058d2 <_Z23getFont_verdana_20_4bppv+0x12>
900058e2:	4912      	ldr	r1, [pc, #72]	@ (9000592c <_Z23getFont_verdana_20_4bppv+0x6c>)
900058e4:	2314      	movs	r3, #20
900058e6:	2201      	movs	r2, #1
900058e8:	4811      	ldr	r0, [pc, #68]	@ (90005930 <_Z23getFont_verdana_20_4bppv+0x70>)
900058ea:	9108      	str	r1, [sp, #32]
900058ec:	2104      	movs	r1, #4
900058ee:	9300      	str	r3, [sp, #0]
900058f0:	9204      	str	r2, [sp, #16]
900058f2:	9007      	str	r0, [sp, #28]
900058f4:	9103      	str	r1, [sp, #12]
900058f6:	480c      	ldr	r0, [pc, #48]	@ (90005928 <_Z23getFont_verdana_20_4bppv+0x68>)
900058f8:	490e      	ldr	r1, [pc, #56]	@ (90005934 <_Z23getFont_verdana_20_4bppv+0x74>)
900058fa:	e9cd 4205 	strd	r4, r2, [sp, #20]
900058fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005902:	2207      	movs	r2, #7
90005904:	e9cd 4409 	strd	r4, r4, [sp, #36]	@ 0x24
90005908:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000590c:	f7ff faf4 	bl	90004ef8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005910:	4809      	ldr	r0, [pc, #36]	@ (90005938 <_Z23getFont_verdana_20_4bppv+0x78>)
90005912:	f022 fd4f 	bl	900283b4 <atexit>
90005916:	4628      	mov	r0, r5
90005918:	f022 f9c4 	bl	90027ca4 <__cxa_guard_release>
}
9000591c:	4802      	ldr	r0, [pc, #8]	@ (90005928 <_Z23getFont_verdana_20_4bppv+0x68>)
9000591e:	b00f      	add	sp, #60	@ 0x3c
90005920:	bd30      	pop	{r4, r5, pc}
90005922:	bf00      	nop
90005924:	2400778c 	.word	0x2400778c
90005928:	24007790 	.word	0x24007790
9000592c:	9002c8e8 	.word	0x9002c8e8
90005930:	9002c900 	.word	0x9002c900
90005934:	902011b4 	.word	0x902011b4
90005938:	900058bd 	.word	0x900058bd

9000593c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_45_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_45_4bpp();

touchgfx::GeneratedFont& getFont_verdana_45_4bpp()
{
    static touchgfx::GeneratedFont verdana_45_4bpp(glyphs_verdana_45_4bpp, 11, 46, 45, 0, 0, 4, 1, 0, 0, unicodes_verdana_45_4bpp, kerning_verdana_45_4bpp, 0, 0, 0, 0);
9000593c:	4770      	bx	lr
9000593e:	bf00      	nop

90005940 <_Z23getFont_verdana_45_4bppv>:
{
90005940:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_45_4bpp(glyphs_verdana_45_4bpp, 11, 46, 45, 0, 0, 4, 1, 0, 0, unicodes_verdana_45_4bpp, kerning_verdana_45_4bpp, 0, 0, 0, 0);
90005942:	4d18      	ldr	r5, [pc, #96]	@ (900059a4 <_Z23getFont_verdana_45_4bppv+0x64>)
{
90005944:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_45_4bpp(glyphs_verdana_45_4bpp, 11, 46, 45, 0, 0, 4, 1, 0, 0, unicodes_verdana_45_4bpp, kerning_verdana_45_4bpp, 0, 0, 0, 0);
90005946:	682c      	ldr	r4, [r5, #0]
90005948:	f3bf 8f5b 	dmb	ish
9000594c:	f014 0401 	ands.w	r4, r4, #1
90005950:	d002      	beq.n	90005958 <_Z23getFont_verdana_45_4bppv+0x18>
    return verdana_45_4bpp;
}
90005952:	4815      	ldr	r0, [pc, #84]	@ (900059a8 <_Z23getFont_verdana_45_4bppv+0x68>)
90005954:	b00f      	add	sp, #60	@ 0x3c
90005956:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_45_4bpp(glyphs_verdana_45_4bpp, 11, 46, 45, 0, 0, 4, 1, 0, 0, unicodes_verdana_45_4bpp, kerning_verdana_45_4bpp, 0, 0, 0, 0);
90005958:	4628      	mov	r0, r5
9000595a:	f022 f997 	bl	90027c8c <__cxa_guard_acquire>
9000595e:	2800      	cmp	r0, #0
90005960:	d0f7      	beq.n	90005952 <_Z23getFont_verdana_45_4bppv+0x12>
90005962:	4912      	ldr	r1, [pc, #72]	@ (900059ac <_Z23getFont_verdana_45_4bppv+0x6c>)
90005964:	2201      	movs	r2, #1
90005966:	4b12      	ldr	r3, [pc, #72]	@ (900059b0 <_Z23getFont_verdana_45_4bppv+0x70>)
90005968:	480f      	ldr	r0, [pc, #60]	@ (900059a8 <_Z23getFont_verdana_45_4bppv+0x68>)
9000596a:	e9cd 3107 	strd	r3, r1, [sp, #28]
9000596e:	2304      	movs	r3, #4
90005970:	212d      	movs	r1, #45	@ 0x2d
90005972:	e9cd 3203 	strd	r3, r2, [sp, #12]
90005976:	9100      	str	r1, [sp, #0]
90005978:	232e      	movs	r3, #46	@ 0x2e
9000597a:	220b      	movs	r2, #11
9000597c:	490d      	ldr	r1, [pc, #52]	@ (900059b4 <_Z23getFont_verdana_45_4bppv+0x74>)
9000597e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005982:	e9cd 4409 	strd	r4, r4, [sp, #36]	@ 0x24
90005986:	e9cd 4405 	strd	r4, r4, [sp, #20]
9000598a:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000598e:	f7ff fab3 	bl	90004ef8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005992:	4809      	ldr	r0, [pc, #36]	@ (900059b8 <_Z23getFont_verdana_45_4bppv+0x78>)
90005994:	f022 fd0e 	bl	900283b4 <atexit>
90005998:	4628      	mov	r0, r5
9000599a:	f022 f983 	bl	90027ca4 <__cxa_guard_release>
}
9000599e:	4802      	ldr	r0, [pc, #8]	@ (900059a8 <_Z23getFont_verdana_45_4bppv+0x68>)
900059a0:	b00f      	add	sp, #60	@ 0x3c
900059a2:	bd30      	pop	{r4, r5, pc}
900059a4:	240077bc 	.word	0x240077bc
900059a8:	240077c0 	.word	0x240077c0
900059ac:	9002c8f8 	.word	0x9002c8f8
900059b0:	9002c904 	.word	0x9002c904
900059b4:	90201218 	.word	0x90201218
900059b8:	9000593d 	.word	0x9000593d

900059bc <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
900059bc:	2000      	movs	r0, #0
900059be:	4770      	bx	lr

900059c0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
900059c0:	2000      	movs	r0, #0
900059c2:	4770      	bx	lr

900059c4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900059c4:	b40e      	push	{r1, r2, r3}
900059c6:	b500      	push	{lr}
900059c8:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900059ca:	2100      	movs	r1, #0
{
900059cc:	ab03      	add	r3, sp, #12
900059ce:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900059d2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900059d4:	f010 fbe6 	bl	900161a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900059d8:	b002      	add	sp, #8
900059da:	f85d eb04 	ldr.w	lr, [sp], #4
900059de:	b003      	add	sp, #12
900059e0:	4770      	bx	lr
900059e2:	bf00      	nop

900059e4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900059e4:	b40c      	push	{r2, r3}
900059e6:	b500      	push	{lr}
900059e8:	b083      	sub	sp, #12
900059ea:	ab04      	add	r3, sp, #16
900059ec:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900059f0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900059f2:	f010 fbd7 	bl	900161a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900059f6:	b003      	add	sp, #12
900059f8:	f85d eb04 	ldr.w	lr, [sp], #4
900059fc:	b002      	add	sp, #8
900059fe:	4770      	bx	lr

90005a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005a00:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90005a02:	b510      	push	{r4, lr}
90005a04:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90005a06:	b133      	cbz	r3, 90005a16 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90005a08:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90005a0a:	b39b      	cbz	r3, 90005a74 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90005a0c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90005a0e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90005a12:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90005a14:	b923      	cbnz	r3, 90005a20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90005a16:	4620      	mov	r0, r4
}
90005a18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90005a1c:	f012 b97e 	b.w	90017d1c <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005a20:	f012 fa7a 	bl	90017f18 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90005a24:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90005a26:	2b01      	cmp	r3, #1
90005a28:	d92a      	bls.n	90005a80 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90005a2a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90005a2c:	1c53      	adds	r3, r2, #1
90005a2e:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005a30:	2b09      	cmp	r3, #9
90005a32:	d812      	bhi.n	90005a5a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90005a34:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90005a38:	f640 103f 	movw	r0, #2367	@ 0x93f
90005a3c:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90005a3e:	4281      	cmp	r1, r0
90005a40:	d1e9      	bne.n	90005a16 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005a42:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005a46:	0052      	lsls	r2, r2, #1
90005a48:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90005a4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90005a4e:	4422      	add	r2, r4
90005a50:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90005a54:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
90005a56:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90005a58:	e7dd      	b.n	90005a16 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90005a5a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90005a5e:	f640 113f 	movw	r1, #2367	@ 0x93f
90005a62:	89db      	ldrh	r3, [r3, #14]
90005a64:	428b      	cmp	r3, r1
90005a66:	d1d6      	bne.n	90005a16 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005a68:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005a6c:	2300      	movs	r3, #0
90005a6e:	0052      	lsls	r2, r2, #1
90005a70:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90005a72:	e7ea      	b.n	90005a4a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90005a74:	4b05      	ldr	r3, [pc, #20]	@ (90005a8c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90005a76:	21c5      	movs	r1, #197	@ 0xc5
90005a78:	4a05      	ldr	r2, [pc, #20]	@ (90005a90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90005a7a:	4806      	ldr	r0, [pc, #24]	@ (90005a94 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90005a7c:	f022 fc7c 	bl	90028378 <__assert_func>
            assert(offset < used);
90005a80:	4b05      	ldr	r3, [pc, #20]	@ (90005a98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90005a82:	21cb      	movs	r1, #203	@ 0xcb
90005a84:	4a05      	ldr	r2, [pc, #20]	@ (90005a9c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90005a86:	4803      	ldr	r0, [pc, #12]	@ (90005a94 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90005a88:	f022 fc76 	bl	90028378 <__assert_func>
90005a8c:	9002b6cc 	.word	0x9002b6cc
90005a90:	9002b6d8 	.word	0x9002b6d8
90005a94:	9002b784 	.word	0x9002b784
90005a98:	9002b7d0 	.word	0x9002b7d0
90005a9c:	9002b7e0 	.word	0x9002b7e0

90005aa0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90005aa0:	f012 b905 	b.w	90017cae <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90005aa4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90005aa4:	b510      	push	{r4, lr}
90005aa6:	b086      	sub	sp, #24
90005aa8:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90005aac:	ac0a      	add	r4, sp, #40	@ 0x28
{
90005aae:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005ab2:	461a      	mov	r2, r3
90005ab4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90005ab6:	4661      	mov	r1, ip
90005ab8:	9401      	str	r4, [sp, #4]
90005aba:	9300      	str	r3, [sp, #0]
90005abc:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90005abe:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005ac0:	f00e ffbe 	bl	90014a40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90005ac4:	b006      	add	sp, #24
90005ac6:	bd10      	pop	{r4, pc}

90005ac8 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90005ac8:	b9e0      	cbnz	r0, 90005b04 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90005aca:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90005acc:	4b13      	ldr	r3, [pc, #76]	@ (90005b1c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90005ace:	681b      	ldr	r3, [r3, #0]
90005ad0:	b1cb      	cbz	r3, 90005b06 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005ad2:	4c13      	ldr	r4, [pc, #76]	@ (90005b20 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005ad4:	4813      	ldr	r0, [pc, #76]	@ (90005b24 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005ad6:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005ada:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005adc:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005ade:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005ae0:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005ae2:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005ae4:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90005ae6:	4b10      	ldr	r3, [pc, #64]	@ (90005b28 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90005ae8:	2200      	movs	r2, #0
90005aea:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90005aec:	f000 f83a 	bl	90005b64 <_ZN17TypedTextDatabase8getFontsEv>
90005af0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90005af2:	f000 f835 	bl	90005b60 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90005af6:	4b0d      	ldr	r3, [pc, #52]	@ (90005b2c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90005af8:	4a0d      	ldr	r2, [pc, #52]	@ (90005b30 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90005afa:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90005afc:	4b0d      	ldr	r3, [pc, #52]	@ (90005b34 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90005afe:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005b00:	8018      	strh	r0, [r3, #0]
    }
}
90005b02:	bd38      	pop	{r3, r4, r5, pc}
90005b04:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005b06:	4c0c      	ldr	r4, [pc, #48]	@ (90005b38 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90005b08:	4905      	ldr	r1, [pc, #20]	@ (90005b20 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005b0a:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90005b0c:	480b      	ldr	r0, [pc, #44]	@ (90005b3c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90005b0e:	4b05      	ldr	r3, [pc, #20]	@ (90005b24 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005b10:	4a0b      	ldr	r2, [pc, #44]	@ (90005b40 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90005b12:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90005b14:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90005b16:	2c00      	cmp	r4, #0
90005b18:	d1e5      	bne.n	90005ae6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90005b1a:	bd38      	pop	{r3, r4, r5, pc}
90005b1c:	240077f8 	.word	0x240077f8
90005b20:	240077f0 	.word	0x240077f0
90005b24:	240077ec 	.word	0x240077ec
90005b28:	240077f4 	.word	0x240077f4
90005b2c:	2402190c 	.word	0x2402190c
90005b30:	24021914 	.word	0x24021914
90005b34:	24021910 	.word	0x24021910
90005b38:	902012d4 	.word	0x902012d4
90005b3c:	902012bc 	.word	0x902012bc
90005b40:	902012b4 	.word	0x902012b4

90005b44 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90005b44:	4a04      	ldr	r2, [pc, #16]	@ (90005b58 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90005b46:	4b05      	ldr	r3, [pc, #20]	@ (90005b5c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90005b48:	6812      	ldr	r2, [r2, #0]
90005b4a:	681b      	ldr	r3, [r3, #0]
90005b4c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90005b50:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90005b54:	4770      	bx	lr
90005b56:	bf00      	nop
90005b58:	240077ec 	.word	0x240077ec
90005b5c:	240077f0 	.word	0x240077f0

90005b60 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90005b60:	2002      	movs	r0, #2
90005b62:	4770      	bx	lr

90005b64 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90005b64:	4800      	ldr	r0, [pc, #0]	@ (90005b68 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90005b66:	4770      	bx	lr
90005b68:	240077fc 	.word	0x240077fc

90005b6c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90005b6c:	b510      	push	{r4, lr}
};
90005b6e:	4c05      	ldr	r4, [pc, #20]	@ (90005b84 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90005b70:	f7ff fea6 	bl	900058c0 <_Z23getFont_verdana_20_4bppv>
};
90005b74:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_45_4bpp()),
90005b76:	f7ff fee3 	bl	90005940 <_Z23getFont_verdana_45_4bppv>
};
90005b7a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90005b7c:	f7ff fe60 	bl	90005840 <_Z23getFont_verdana_10_4bppv>
};
90005b80:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90005b82:	bd10      	pop	{r4, pc}
90005b84:	240077fc 	.word	0x240077fc

90005b88 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
90005b88:	b410      	push	{r4}
    pointArray = 0;
90005b8a:	2400      	movs	r4, #0
90005b8c:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
90005b8e:	600c      	str	r4, [r1, #0]
    commandArray = 0;
90005b90:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
90005b92:	601c      	str	r4, [r3, #0]
}
90005b94:	f85d 4b04 	ldr.w	r4, [sp], #4
90005b98:	4770      	bx	lr
90005b9a:	bf00      	nop

90005b9c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90005b9c:	4770      	bx	lr
90005b9e:	bf00      	nop

90005ba0 <_ZN19FrontendApplicationD0Ev>:
90005ba0:	b510      	push	{r4, lr}
90005ba2:	4604      	mov	r4, r0
90005ba4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90005ba8:	f022 f86e 	bl	90027c88 <_ZdlPvj>
90005bac:	4620      	mov	r0, r4
90005bae:	bd10      	pop	{r4, pc}

90005bb0 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90005bb0:	b510      	push	{r4, lr}
90005bb2:	4604      	mov	r4, r0
    {
        model.tick();
90005bb4:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90005bb8:	f000 f8ae 	bl	90005d18 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90005bbc:	4620      	mov	r0, r4
    }
90005bbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90005bc2:	f00f bc23 	b.w	9001540c <_ZN8touchgfx11Application15handleTickEventEv>
90005bc6:	bf00      	nop

90005bc8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90005bc8:	b510      	push	{r4, lr}
90005bca:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90005bcc:	f7ff f8da 	bl	90004d84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90005bd0:	4b01      	ldr	r3, [pc, #4]	@ (90005bd8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{
}
90005bd2:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90005bd4:	6023      	str	r3, [r4, #0]
}
90005bd6:	bd10      	pop	{r4, pc}
90005bd8:	9002b8bc 	.word	0x9002b8bc

90005bdc <_ZN13ModelListener22poolTemperatureChangedEv>:
    virtual void poolTemperatureChanged() {}
90005bdc:	4770      	bx	lr
90005bde:	bf00      	nop

90005be0 <_ZN13MainPresenterD1Ev>:

class MainPresenter : public Presenter, public ModelListener
{
public:
    MainPresenter(MainView& v);
    virtual ~MainPresenter() {};
90005be0:	4770      	bx	lr
90005be2:	bf00      	nop

90005be4 <_ZThn4_N13MainPresenterD1Ev>:
90005be4:	3804      	subs	r0, #4
90005be6:	4770      	bx	lr

90005be8 <_ZN13MainPresenter10deactivateEv>:
    view.setPoolLight(model->getPoolLight());
}

void MainPresenter::deactivate()
{
}
90005be8:	4770      	bx	lr
90005bea:	bf00      	nop

90005bec <_ZN13MainPresenterD0Ev>:
90005bec:	b510      	push	{r4, lr}
90005bee:	4604      	mov	r4, r0
90005bf0:	2110      	movs	r1, #16
90005bf2:	f022 f849 	bl	90027c88 <_ZdlPvj>
90005bf6:	4620      	mov	r0, r4
90005bf8:	bd10      	pop	{r4, pc}
90005bfa:	bf00      	nop

90005bfc <_ZThn4_N13MainPresenterD0Ev>:
90005bfc:	b510      	push	{r4, lr}
90005bfe:	1f04      	subs	r4, r0, #4
90005c00:	2110      	movs	r1, #16
90005c02:	4620      	mov	r0, r4
90005c04:	f022 f840 	bl	90027c88 <_ZdlPvj>
90005c08:	4620      	mov	r0, r4
90005c0a:	bd10      	pop	{r4, pc}

90005c0c <_ZN13MainPresenter8activateEv>:
    view.setPoolLight(model->getPoolLight());
90005c0c:	e9d0 3002 	ldrd	r3, r0, [r0, #8]
90005c10:	7919      	ldrb	r1, [r3, #4]
90005c12:	f000 b867 	b.w	90005ce4 <_ZN8MainView12setPoolLightEb>
90005c16:	bf00      	nop

90005c18 <_ZN13MainPresenterC1ER8MainView>:
    : view(v)
90005c18:	4a05      	ldr	r2, [pc, #20]	@ (90005c30 <_ZN13MainPresenterC1ER8MainView+0x18>)
90005c1a:	60c1      	str	r1, [r0, #12]
90005c1c:	6002      	str	r2, [r0, #0]
MainPresenter::MainPresenter(MainView& v)
90005c1e:	b410      	push	{r4}
    ModelListener() : model(0) {}
90005c20:	2400      	movs	r4, #0
90005c22:	6084      	str	r4, [r0, #8]
    : view(v)
90005c24:	f102 0418 	add.w	r4, r2, #24
90005c28:	6044      	str	r4, [r0, #4]
}
90005c2a:	f85d 4b04 	ldr.w	r4, [sp], #4
90005c2e:	4770      	bx	lr
90005c30:	9002b910 	.word	0x9002b910

90005c34 <_ZN13MainPresenter12setPoolLightEb>:

void MainPresenter::setPoolLight(bool state)
{
    model->userSetPoolLight(state);
90005c34:	6880      	ldr	r0, [r0, #8]
90005c36:	f000 b871 	b.w	90005d1c <_ZN5Model16userSetPoolLightEb>
90005c3a:	bf00      	nop

90005c3c <_ZN8MainView11setupScreenEv>:
{
}

void MainView::setupScreen()
{
}
90005c3c:	4770      	bx	lr
90005c3e:	bf00      	nop

90005c40 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
90005c40:	4b03      	ldr	r3, [pc, #12]	@ (90005c50 <_ZN8MainViewD1Ev+0x10>)
90005c42:	b510      	push	{r4, lr}
90005c44:	4604      	mov	r4, r0
90005c46:	6003      	str	r3, [r0, #0]
90005c48:	f7ff f990 	bl	90004f6c <_ZN12MainViewBaseD1Ev>
90005c4c:	4620      	mov	r0, r4
90005c4e:	bd10      	pop	{r4, pc}
90005c50:	9002b9f0 	.word	0x9002b9f0

90005c54 <_ZN8MainViewD0Ev>:
90005c54:	4b06      	ldr	r3, [pc, #24]	@ (90005c70 <_ZN8MainViewD0Ev+0x1c>)
90005c56:	b510      	push	{r4, lr}
90005c58:	4604      	mov	r4, r0
90005c5a:	6003      	str	r3, [r0, #0]
90005c5c:	f7ff f986 	bl	90004f6c <_ZN12MainViewBaseD1Ev>
90005c60:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
90005c64:	4620      	mov	r0, r4
90005c66:	f022 f80f 	bl	90027c88 <_ZdlPvj>
90005c6a:	4620      	mov	r0, r4
90005c6c:	bd10      	pop	{r4, pc}
90005c6e:	bf00      	nop
90005c70:	9002b9f0 	.word	0x9002b9f0

90005c74 <_ZN8MainView15updatePoolLightEv>:
void MainView::tearDownScreen()
{
}

void MainView::updatePoolLight()
{
90005c74:	b538      	push	{r3, r4, r5, lr}
     *
     * @return The id of this Bitmap.
     */
    BitmapId getId() const
    {
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
90005c76:	4d11      	ldr	r5, [pc, #68]	@ (90005cbc <_ZN8MainView15updatePoolLightEv+0x48>)
90005c78:	4604      	mov	r4, r0
    //report change to presenter
    presenter->setPoolLight(onOffButton.getState());
90005c7a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90005c7c:	682b      	ldr	r3, [r5, #0]
90005c7e:	b1b3      	cbz	r3, 90005cae <_ZN8MainView15updatePoolLightEv+0x3a>
     * @return True if the button has been toggled, i.e. the pressed state is shown when the
     *         button is not pressed.
     */
    bool getState() const
    {
        return up.getId() == originalPressed.getId();
90005c80:	f8b4 30cc 	ldrh.w	r3, [r4, #204]	@ 0xcc
90005c84:	f8b4 10c6 	ldrh.w	r1, [r4, #198]	@ 0xc6
90005c88:	1ac9      	subs	r1, r1, r3
90005c8a:	fab1 f181 	clz	r1, r1
90005c8e:	0949      	lsrs	r1, r1, #5
90005c90:	f7ff ffd0 	bl	90005c34 <_ZN13MainPresenter12setPoolLightEb>
90005c94:	682b      	ldr	r3, [r5, #0]
90005c96:	b153      	cbz	r3, 90005cae <_ZN8MainView15updatePoolLightEv+0x3a>
90005c98:	f8b4 30c6 	ldrh.w	r3, [r4, #198]	@ 0xc6
90005c9c:	f8b4 10cc 	ldrh.w	r1, [r4, #204]	@ 0xcc

    state = onOffButton.getState();
90005ca0:	4a07      	ldr	r2, [pc, #28]	@ (90005cc0 <_ZN8MainView15updatePoolLightEv+0x4c>)
90005ca2:	1a5b      	subs	r3, r3, r1
90005ca4:	fab3 f383 	clz	r3, r3
90005ca8:	095b      	lsrs	r3, r3, #5
90005caa:	7013      	strb	r3, [r2, #0]
}
90005cac:	bd38      	pop	{r3, r4, r5, pc}
90005cae:	4b05      	ldr	r3, [pc, #20]	@ (90005cc4 <_ZN8MainView15updatePoolLightEv+0x50>)
90005cb0:	2194      	movs	r1, #148	@ 0x94
90005cb2:	4a05      	ldr	r2, [pc, #20]	@ (90005cc8 <_ZN8MainView15updatePoolLightEv+0x54>)
90005cb4:	4805      	ldr	r0, [pc, #20]	@ (90005ccc <_ZN8MainView15updatePoolLightEv+0x58>)
90005cb6:	f022 fb5f 	bl	90028378 <__assert_func>
90005cba:	bf00      	nop
90005cbc:	24021944 	.word	0x24021944
90005cc0:	24007808 	.word	0x24007808
90005cc4:	9002b934 	.word	0x9002b934
90005cc8:	9002b970 	.word	0x9002b970
90005ccc:	9002b9a4 	.word	0x9002b9a4

90005cd0 <_ZN8MainViewC1Ev>:
MainView::MainView()
90005cd0:	b510      	push	{r4, lr}
90005cd2:	4604      	mov	r4, r0
90005cd4:	f7ff f9a4 	bl	90005020 <_ZN12MainViewBaseC1Ev>
90005cd8:	4b01      	ldr	r3, [pc, #4]	@ (90005ce0 <_ZN8MainViewC1Ev+0x10>)
}
90005cda:	4620      	mov	r0, r4
MainView::MainView()
90005cdc:	6023      	str	r3, [r4, #0]
}
90005cde:	bd10      	pop	{r4, pc}
90005ce0:	9002b9f0 	.word	0x9002b9f0

90005ce4 <_ZN8MainView12setPoolLightEb>:

void MainView::setPoolLight(bool state)
{
90005ce4:	b570      	push	{r4, r5, r6, lr}
    onOffButton.forceState(state);
90005ce6:	f100 0698 	add.w	r6, r0, #152	@ 0x98
{
90005cea:	4604      	mov	r4, r0
90005cec:	460d      	mov	r5, r1
    onOffButton.forceState(state);
90005cee:	4630      	mov	r0, r6
90005cf0:	f00c fbf1 	bl	900124d6 <_ZN8touchgfx12ToggleButton10forceStateEb>
    bulbYellow.setVisible(state);

    onOffButton.invalidate();
90005cf4:	4630      	mov	r0, r6
        visible = vis;
90005cf6:	f884 5155 	strb.w	r5, [r4, #341]	@ 0x155
90005cfa:	f010 fb7e 	bl	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
    bulbYellow.invalidate();
90005cfe:	f504 7098 	add.w	r0, r4, #304	@ 0x130
}
90005d02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    bulbYellow.invalidate();
90005d06:	f010 bb78 	b.w	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
90005d0a:	bf00      	nop

90005d0c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model()
    : modelListener(0), poolLightState(false), poolTemperature(18)
90005d0c:	2200      	movs	r2, #0
90005d0e:	2112      	movs	r1, #18
90005d10:	6002      	str	r2, [r0, #0]
90005d12:	7102      	strb	r2, [r0, #4]
90005d14:	6081      	str	r1, [r0, #8]
{
}
90005d16:	4770      	bx	lr

90005d18 <_ZN5Model4tickEv>:

void Model::tick()
{
}
90005d18:	4770      	bx	lr
90005d1a:	bf00      	nop

90005d1c <_ZN5Model16userSetPoolLightEb>:

void Model::userSetPoolLight(bool state)
{
    poolLightState = state;
90005d1c:	7101      	strb	r1, [r0, #4]
}
90005d1e:	4770      	bx	lr

90005d20 <_ZN5Model18userSetTemperatureEm>:

void Model::userSetTemperature(uint32_t temp)
{
    poolTemperature = temp;
90005d20:	6081      	str	r1, [r0, #8]
}
90005d22:	4770      	bx	lr

90005d24 <_ZN17PoolTempPresenterD1Ev>:

class PoolTempPresenter : public Presenter, public ModelListener
{
public:
    PoolTempPresenter(PoolTempView& v);
    virtual ~PoolTempPresenter() {};
90005d24:	4770      	bx	lr
90005d26:	bf00      	nop

90005d28 <_ZThn4_N17PoolTempPresenterD1Ev>:
90005d28:	3804      	subs	r0, #4
90005d2a:	4770      	bx	lr

90005d2c <_ZN17PoolTempPresenter10deactivateEv>:
    view.setPoolTemp(model->getPoolTemperature());
}

void PoolTempPresenter::deactivate()
{
}
90005d2c:	4770      	bx	lr
90005d2e:	bf00      	nop

90005d30 <_ZN17PoolTempPresenter22poolTemperatureChangedEv>:
     */
    void tick();

    uint32_t getPoolTemperature() const
    {
        return poolTemperature;
90005d30:	e9d0 2002 	ldrd	r2, r0, [r0, #8]

void PoolTempPresenter::poolTemperatureChanged()
{
    //forward new temperature to view
    view.setPoolTemp(model->getPoolTemperature());
90005d34:	6803      	ldr	r3, [r0, #0]
90005d36:	6891      	ldr	r1, [r2, #8]
90005d38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005d3a:	4718      	bx	r3

90005d3c <_ZN17PoolTempPresenterD0Ev>:
90005d3c:	b510      	push	{r4, lr}
90005d3e:	4604      	mov	r4, r0
90005d40:	2110      	movs	r1, #16
90005d42:	f021 ffa1 	bl	90027c88 <_ZdlPvj>
90005d46:	4620      	mov	r0, r4
90005d48:	bd10      	pop	{r4, pc}
90005d4a:	bf00      	nop

90005d4c <_ZThn4_N17PoolTempPresenterD0Ev>:
90005d4c:	b510      	push	{r4, lr}
90005d4e:	1f04      	subs	r4, r0, #4
90005d50:	2110      	movs	r1, #16
90005d52:	4620      	mov	r0, r4
90005d54:	f021 ff98 	bl	90027c88 <_ZdlPvj>
90005d58:	4620      	mov	r0, r4
90005d5a:	bd10      	pop	{r4, pc}

90005d5c <_ZThn4_N17PoolTempPresenter22poolTemperatureChangedEv>:

    virtual void poolTemperatureChanged();
90005d5c:	e9d0 2001 	ldrd	r2, r0, [r0, #4]
90005d60:	6803      	ldr	r3, [r0, #0]
90005d62:	6891      	ldr	r1, [r2, #8]
90005d64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005d66:	4718      	bx	r3

90005d68 <_ZN17PoolTempPresenterC1ER12PoolTempView>:
    : view(v)
90005d68:	4a05      	ldr	r2, [pc, #20]	@ (90005d80 <_ZN17PoolTempPresenterC1ER12PoolTempView+0x18>)
90005d6a:	60c1      	str	r1, [r0, #12]
90005d6c:	6002      	str	r2, [r0, #0]
PoolTempPresenter::PoolTempPresenter(PoolTempView& v)
90005d6e:	b410      	push	{r4}
90005d70:	2400      	movs	r4, #0
90005d72:	6084      	str	r4, [r0, #8]
    : view(v)
90005d74:	f102 041c 	add.w	r4, r2, #28
90005d78:	6044      	str	r4, [r0, #4]
}
90005d7a:	f85d 4b04 	ldr.w	r4, [sp], #4
90005d7e:	4770      	bx	lr
90005d80:	9002ba28 	.word	0x9002ba28

90005d84 <_ZN12PoolTempView11setupScreenEv>:
{
}

void PoolTempView::setupScreen()
{
}
90005d84:	4770      	bx	lr
90005d86:	bf00      	nop

90005d88 <_ZN12PoolTempViewD1Ev>:

class PoolTempView : public PoolTempViewBase
{
public:
    PoolTempView();
    virtual ~PoolTempView() {}
90005d88:	4b03      	ldr	r3, [pc, #12]	@ (90005d98 <_ZN12PoolTempViewD1Ev+0x10>)
90005d8a:	b510      	push	{r4, lr}
90005d8c:	4604      	mov	r4, r0
90005d8e:	6003      	str	r3, [r0, #0]
90005d90:	f7ff faae 	bl	900052f0 <_ZN16PoolTempViewBaseD1Ev>
90005d94:	4620      	mov	r0, r4
90005d96:	bd10      	pop	{r4, pc}
90005d98:	9002ba5c 	.word	0x9002ba5c

90005d9c <_ZN12PoolTempViewD0Ev>:
90005d9c:	4b06      	ldr	r3, [pc, #24]	@ (90005db8 <_ZN12PoolTempViewD0Ev+0x1c>)
90005d9e:	b510      	push	{r4, lr}
90005da0:	4604      	mov	r4, r0
90005da2:	6003      	str	r3, [r0, #0]
90005da4:	f7ff faa4 	bl	900052f0 <_ZN16PoolTempViewBaseD1Ev>
90005da8:	f44f 710d 	mov.w	r1, #564	@ 0x234
90005dac:	4620      	mov	r0, r4
90005dae:	f021 ff6b 	bl	90027c88 <_ZdlPvj>
90005db2:	4620      	mov	r0, r4
90005db4:	bd10      	pop	{r4, pc}
90005db6:	bf00      	nop
90005db8:	9002ba5c 	.word	0x9002ba5c

90005dbc <_ZN12PoolTempViewC1Ev>:
PoolTempView::PoolTempView()
90005dbc:	b510      	push	{r4, lr}
90005dbe:	4604      	mov	r4, r0
90005dc0:	f7ff fbc0 	bl	90005544 <_ZN16PoolTempViewBaseC1Ev>
90005dc4:	4b01      	ldr	r3, [pc, #4]	@ (90005dcc <_ZN12PoolTempViewC1Ev+0x10>)
}
90005dc6:	4620      	mov	r0, r4
PoolTempView::PoolTempView()
90005dc8:	6023      	str	r3, [r4, #0]
}
90005dca:	bd10      	pop	{r4, pc}
90005dcc:	9002ba5c 	.word	0x9002ba5c

90005dd0 <_ZN12PoolTempView11setPoolTempEm>:
void PoolTempView::tearDownScreen()
{
}

void PoolTempView::setPoolTemp(uint32_t temp)
{
90005dd0:	b538      	push	{r3, r4, r5, lr}
90005dd2:	4604      	mov	r4, r0
90005dd4:	460d      	mov	r5, r1
    //update slider and temperature text
    slider.setValue(temp);
90005dd6:	30cc      	adds	r0, #204	@ 0xcc
90005dd8:	b209      	sxth	r1, r1
90005dda:	f009 fd4a 	bl	9000f872 <_ZN8touchgfx6Slider8setValueEs>
    Unicode::snprintf(tempTextBuffer, 3, "%d", temp);
90005dde:	462b      	mov	r3, r5
90005de0:	f504 7003 	add.w	r0, r4, #524	@ 0x20c
90005de4:	4a04      	ldr	r2, [pc, #16]	@ (90005df8 <_ZN12PoolTempView11setPoolTempEm+0x28>)
90005de6:	2103      	movs	r1, #3
90005de8:	f012 fe3e 	bl	90018a68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    tempText.invalidate();
90005dec:	f504 70e0 	add.w	r0, r4, #448	@ 0x1c0
}
90005df0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    tempText.invalidate();
90005df4:	f010 bb01 	b.w	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
90005df8:	9002ba50 	.word	0x9002ba50

90005dfc <_ZN12PoolTempView11sliderMovedEi>:

void PoolTempView::sliderMoved(int value)
{
90005dfc:	b538      	push	{r3, r4, r5, lr}
    void userSetTemperature(uint32_t temp)
    {
        model->userSetTemperature(temp);
90005dfe:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
90005e00:	460d      	mov	r5, r1
90005e02:	4604      	mov	r4, r0
90005e04:	6898      	ldr	r0, [r3, #8]
90005e06:	f7ff ff8b 	bl	90005d20 <_ZN5Model18userSetTemperatureEm>
    //report to presenter and update text
    presenter->userSetTemperature(value);
    Unicode::snprintf(tempTextBuffer, 3, "%d", value);
90005e0a:	462b      	mov	r3, r5
90005e0c:	4a06      	ldr	r2, [pc, #24]	@ (90005e28 <_ZN12PoolTempView11sliderMovedEi+0x2c>)
90005e0e:	2103      	movs	r1, #3
90005e10:	f504 7003 	add.w	r0, r4, #524	@ 0x20c
90005e14:	f012 fe28 	bl	90018a68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    tempText.invalidate();
90005e18:	f504 70e0 	add.w	r0, r4, #448	@ 0x1c0
90005e1c:	f010 faed 	bl	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>

    brightness = value;
90005e20:	4b02      	ldr	r3, [pc, #8]	@ (90005e2c <_ZN12PoolTempView11sliderMovedEi+0x30>)
90005e22:	601d      	str	r5, [r3, #0]
}
90005e24:	bd38      	pop	{r3, r4, r5, pc}
90005e26:	bf00      	nop
90005e28:	9002ba50 	.word	0x9002ba50
90005e2c:	2400780c 	.word	0x2400780c

90005e30 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90005e30:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90005e34:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90005e36:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005e3a:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90005e3e:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90005e40:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90005e42:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005e46:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90005e4a:	4770      	bx	lr

90005e4c <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90005e4c:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90005e50:	2b01      	cmp	r3, #1
90005e52:	d102      	bne.n	90005e5a <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90005e54:	2300      	movs	r3, #0
90005e56:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90005e5a:	2000      	movs	r0, #0
90005e5c:	4770      	bx	lr
90005e5e:	bf00      	nop

90005e60 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90005e60:	2000      	movs	r0, #0
90005e62:	4770      	bx	lr

90005e64 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005e64:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005e66:	6904      	ldr	r4, [r0, #16]
90005e68:	8900      	ldrh	r0, [r0, #8]
90005e6a:	46a4      	mov	ip, r4
}
90005e6c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005e70:	4760      	bx	ip
90005e72:	bf00      	nop

90005e74 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005e74:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005e76:	68c4      	ldr	r4, [r0, #12]
90005e78:	8900      	ldrh	r0, [r0, #8]
90005e7a:	46a4      	mov	ip, r4
}
90005e7c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005e80:	4760      	bx	ip
90005e82:	bf00      	nop

90005e84 <FT5336_GestureConfig>:
{
90005e84:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005e86:	f100 0518 	add.w	r5, r0, #24
{
90005e8a:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005e8c:	7809      	ldrb	r1, [r1, #0]
90005e8e:	4628      	mov	r0, r5
90005e90:	f000 f96c 	bl	9000616c <ft5336_radian_value>
90005e94:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90005e96:	7931      	ldrb	r1, [r6, #4]
90005e98:	4628      	mov	r0, r5
90005e9a:	f000 f975 	bl	90006188 <ft5336_offset_left_right>
90005e9e:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90005ea0:	7a31      	ldrb	r1, [r6, #8]
90005ea2:	4628      	mov	r0, r5
90005ea4:	f000 f97e 	bl	900061a4 <ft5336_offset_up_down>
90005ea8:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005eaa:	7b31      	ldrb	r1, [r6, #12]
90005eac:	4628      	mov	r0, r5
90005eae:	f000 f987 	bl	900061c0 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005eb2:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005eb4:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005eb6:	4628      	mov	r0, r5
90005eb8:	f000 f990 	bl	900061dc <ft5336_distance_up_down>
90005ebc:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90005ebe:	7d31      	ldrb	r1, [r6, #20]
90005ec0:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005ec2:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90005ec4:	f000 f998 	bl	900061f8 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90005ec8:	42c4      	cmn	r4, r0
}
90005eca:	bf14      	ite	ne
90005ecc:	f04f 30ff 	movne.w	r0, #4294967295
90005ed0:	2000      	moveq	r0, #0
90005ed2:	bd70      	pop	{r4, r5, r6, pc}

90005ed4 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90005ed4:	3018      	adds	r0, #24
90005ed6:	f000 b9ab 	b.w	90006230 <ft5336_chip_id>
90005eda:	bf00      	nop

90005edc <FT5336_GetState>:
{
90005edc:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005ede:	f100 0518 	add.w	r5, r0, #24
{
90005ee2:	b083      	sub	sp, #12
90005ee4:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005ee6:	4628      	mov	r0, r5
90005ee8:	a901      	add	r1, sp, #4
90005eea:	f000 f931 	bl	90006150 <ft5336_td_status>
90005eee:	bb10      	cbnz	r0, 90005f36 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005ef0:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005ef4:	2b05      	cmp	r3, #5
90005ef6:	bf94      	ite	ls
90005ef8:	4619      	movls	r1, r3
90005efa:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005efc:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005efe:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005f00:	4628      	mov	r0, r5
90005f02:	2103      	movs	r1, #3
90005f04:	eb0d 0203 	add.w	r2, sp, r3
90005f08:	f000 f910 	bl	9000612c <ft5336_read_reg>
90005f0c:	b9b0      	cbnz	r0, 90005f3c <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005f0e:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005f12:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005f16:	0212      	lsls	r2, r2, #8
90005f18:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005f1c:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005f1e:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005f22:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005f26:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005f28:	f89d 1007 	ldrb.w	r1, [sp, #7]
90005f2c:	430b      	orrs	r3, r1
90005f2e:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90005f32:	b003      	add	sp, #12
90005f34:	bd30      	pop	{r4, r5, pc}
90005f36:	f04f 31ff 	mov.w	r1, #4294967295
90005f3a:	e7df      	b.n	90005efc <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90005f3c:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90005f40:	e7f7      	b.n	90005f32 <FT5336_GetState+0x56>
90005f42:	bf00      	nop

90005f44 <FT5336_GetMultiTouchState>:
{
90005f44:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005f46:	f100 0518 	add.w	r5, r0, #24
{
90005f4a:	b088      	sub	sp, #32
90005f4c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005f4e:	4628      	mov	r0, r5
90005f50:	4669      	mov	r1, sp
90005f52:	f000 f8fd 	bl	90006150 <ft5336_td_status>
90005f56:	2800      	cmp	r0, #0
90005f58:	f040 809a 	bne.w	90006090 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005f5c:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005f60:	2b05      	cmp	r3, #5
90005f62:	bf94      	ite	ls
90005f64:	4619      	movls	r1, r3
90005f66:	2100      	movhi	r1, #0
90005f68:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005f6a:	231e      	movs	r3, #30
90005f6c:	466a      	mov	r2, sp
90005f6e:	4628      	mov	r0, r5
90005f70:	2103      	movs	r1, #3
90005f72:	f000 f8db 	bl	9000612c <ft5336_read_reg>
90005f76:	2800      	cmp	r0, #0
90005f78:	f040 808d 	bne.w	90006096 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005f7c:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005f80:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005f84:	020a      	lsls	r2, r1, #8
90005f86:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005f8a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005f8c:	f89d c007 	ldrb.w	ip, [sp, #7]
90005f90:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005f94:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005f96:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005f9a:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005f9e:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005fa0:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005fa4:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005fa6:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005fa8:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005faa:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005fac:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005fb0:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005fb2:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005fb6:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005fba:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005fbc:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005fbe:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005fc2:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005fc4:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005fc6:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005fc8:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005fcc:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005fce:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005fd0:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005fd4:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005fd8:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005fda:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005fdc:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005fde:	ea45 050c 	orr.w	r5, r5, ip
90005fe2:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005fe6:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005fea:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005fec:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005fee:	0212      	lsls	r2, r2, #8
90005ff0:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005ff4:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005ff6:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005ffa:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005ffe:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006000:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006002:	f89d 300e 	ldrb.w	r3, [sp, #14]
90006006:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006008:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000600c:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000600e:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006010:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006014:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006016:	f89d 200f 	ldrb.w	r2, [sp, #15]
9000601a:	4313      	orrs	r3, r2
9000601c:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000601e:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006020:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006024:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006028:	020a      	lsls	r2, r1, #8
9000602a:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000602e:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006030:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006034:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006036:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000603a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000603c:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006040:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006042:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006044:	f89d 1018 	ldrb.w	r1, [sp, #24]
90006048:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000604a:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000604c:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000604e:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006052:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006054:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006058:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000605a:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000605e:	f89d 301d 	ldrb.w	r3, [sp, #29]
90006062:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006064:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006066:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006068:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000606c:	6625      	str	r5, [r4, #96]	@ 0x60
9000606e:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006070:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006074:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006076:	021b      	lsls	r3, r3, #8
90006078:	f89d 101b 	ldrb.w	r1, [sp, #27]
9000607c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90006080:	430b      	orrs	r3, r1
90006082:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006084:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006088:	4313      	orrs	r3, r2
9000608a:	6163      	str	r3, [r4, #20]
}
9000608c:	b008      	add	sp, #32
9000608e:	bd70      	pop	{r4, r5, r6, pc}
90006090:	f04f 31ff 	mov.w	r1, #4294967295
90006094:	e768      	b.n	90005f68 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90006096:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000609a:	e7f7      	b.n	9000608c <FT5336_GetMultiTouchState+0x148>

9000609c <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
9000609c:	3018      	adds	r0, #24
9000609e:	f000 b84d 	b.w	9000613c <ft5336_gest_id>
900060a2:	bf00      	nop

900060a4 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
900060a4:	2101      	movs	r1, #1
900060a6:	3018      	adds	r0, #24
900060a8:	f000 b8b4 	b.w	90006214 <ft5336_g_mode>

900060ac <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
900060ac:	2100      	movs	r1, #0
900060ae:	3018      	adds	r0, #24
900060b0:	f000 b8b0 	b.w	90006214 <ft5336_g_mode>

900060b4 <FT5336_Init>:
{
900060b4:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
900060b6:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
900060ba:	b98d      	cbnz	r5, 900060e0 <FT5336_Init+0x2c>
    pObj->IO.Init();
900060bc:	4606      	mov	r6, r0
900060be:	4604      	mov	r4, r0
900060c0:	f856 3b18 	ldr.w	r3, [r6], #24
900060c4:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
900060c6:	4629      	mov	r1, r5
900060c8:	4630      	mov	r0, r6
900060ca:	f000 f8a3 	bl	90006214 <ft5336_g_mode>
  if(ret != FT5336_OK)
900060ce:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
900060d0:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
900060d4:	bf18      	it	ne
900060d6:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
900060d8:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
900060dc:	4240      	negs	r0, r0
}
900060de:	bd70      	pop	{r4, r5, r6, pc}
    ret += FT5336_DisableIT(pObj);
900060e0:	2000      	movs	r0, #0
}
900060e2:	bd70      	pop	{r4, r5, r6, pc}

900060e4 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
900060e4:	2000      	movs	r0, #0
900060e6:	4770      	bx	lr

900060e8 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
900060e8:	b1c0      	cbz	r0, 9000611c <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
900060ea:	890a      	ldrh	r2, [r1, #8]
{
900060ec:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
900060ee:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
900060f2:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
900060f4:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
900060f8:	694a      	ldr	r2, [r1, #20]
900060fa:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
900060fe:	4909      	ldr	r1, [pc, #36]	@ (90006124 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006100:	60c5      	str	r5, [r0, #12]
90006102:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006106:	4a08      	ldr	r2, [pc, #32]	@ (90006128 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006108:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
9000610c:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
9000610e:	b10b      	cbz	r3, 90006114 <FT5336_RegisterBusIO+0x2c>
}
90006110:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90006112:	4718      	bx	r3
}
90006114:	f04f 30ff 	mov.w	r0, #4294967295
90006118:	bc30      	pop	{r4, r5}
9000611a:	4770      	bx	lr
9000611c:	f04f 30ff 	mov.w	r0, #4294967295
90006120:	4770      	bx	lr
90006122:	bf00      	nop
90006124:	90005e65 	.word	0x90005e65
90006128:	90005e75 	.word	0x90005e75

9000612c <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
9000612c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000612e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006132:	46a4      	mov	ip, r4
}
90006134:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006138:	4760      	bx	ip
9000613a:	bf00      	nop

9000613c <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
9000613c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000613e:	2301      	movs	r3, #1
{
90006140:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006142:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006146:	4619      	mov	r1, r3
90006148:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
9000614a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000614e:	4760      	bx	ip

90006150 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90006150:	b538      	push	{r3, r4, r5, lr}
90006152:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006154:	2301      	movs	r3, #1
90006156:	2102      	movs	r1, #2
90006158:	4622      	mov	r2, r4
9000615a:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
9000615e:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90006160:	b918      	cbnz	r0, 9000616a <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90006162:	7823      	ldrb	r3, [r4, #0]
90006164:	f003 030f 	and.w	r3, r3, #15
90006168:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
9000616a:	bd38      	pop	{r3, r4, r5, pc}

9000616c <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
9000616c:	b510      	push	{r4, lr}
9000616e:	460c      	mov	r4, r1
90006170:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006172:	2301      	movs	r3, #1
90006174:	2191      	movs	r1, #145	@ 0x91
{
90006176:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000617a:	f10d 0207 	add.w	r2, sp, #7
9000617e:	6804      	ldr	r4, [r0, #0]
90006180:	6880      	ldr	r0, [r0, #8]
90006182:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006184:	b002      	add	sp, #8
90006186:	bd10      	pop	{r4, pc}

90006188 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006188:	b510      	push	{r4, lr}
9000618a:	460c      	mov	r4, r1
9000618c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000618e:	2301      	movs	r3, #1
90006190:	2192      	movs	r1, #146	@ 0x92
{
90006192:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006196:	f10d 0207 	add.w	r2, sp, #7
9000619a:	6804      	ldr	r4, [r0, #0]
9000619c:	6880      	ldr	r0, [r0, #8]
9000619e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
900061a0:	b002      	add	sp, #8
900061a2:	bd10      	pop	{r4, pc}

900061a4 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
900061a4:	b510      	push	{r4, lr}
900061a6:	460c      	mov	r4, r1
900061a8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900061aa:	2301      	movs	r3, #1
900061ac:	2193      	movs	r1, #147	@ 0x93
{
900061ae:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900061b2:	f10d 0207 	add.w	r2, sp, #7
900061b6:	6804      	ldr	r4, [r0, #0]
900061b8:	6880      	ldr	r0, [r0, #8]
900061ba:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
900061bc:	b002      	add	sp, #8
900061be:	bd10      	pop	{r4, pc}

900061c0 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
900061c0:	b510      	push	{r4, lr}
900061c2:	460c      	mov	r4, r1
900061c4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900061c6:	2301      	movs	r3, #1
900061c8:	2194      	movs	r1, #148	@ 0x94
{
900061ca:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900061ce:	f10d 0207 	add.w	r2, sp, #7
900061d2:	6804      	ldr	r4, [r0, #0]
900061d4:	6880      	ldr	r0, [r0, #8]
900061d6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
900061d8:	b002      	add	sp, #8
900061da:	bd10      	pop	{r4, pc}

900061dc <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
900061dc:	b510      	push	{r4, lr}
900061de:	460c      	mov	r4, r1
900061e0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900061e2:	2301      	movs	r3, #1
900061e4:	2195      	movs	r1, #149	@ 0x95
{
900061e6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900061ea:	f10d 0207 	add.w	r2, sp, #7
900061ee:	6804      	ldr	r4, [r0, #0]
900061f0:	6880      	ldr	r0, [r0, #8]
900061f2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
900061f4:	b002      	add	sp, #8
900061f6:	bd10      	pop	{r4, pc}

900061f8 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
900061f8:	b510      	push	{r4, lr}
900061fa:	460c      	mov	r4, r1
900061fc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900061fe:	2301      	movs	r3, #1
90006200:	2196      	movs	r1, #150	@ 0x96
{
90006202:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006206:	f10d 0207 	add.w	r2, sp, #7
9000620a:	6804      	ldr	r4, [r0, #0]
9000620c:	6880      	ldr	r0, [r0, #8]
9000620e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90006210:	b002      	add	sp, #8
90006212:	bd10      	pop	{r4, pc}

90006214 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90006214:	b510      	push	{r4, lr}
90006216:	460c      	mov	r4, r1
90006218:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000621a:	2301      	movs	r3, #1
9000621c:	21a4      	movs	r1, #164	@ 0xa4
{
9000621e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006222:	f10d 0207 	add.w	r2, sp, #7
90006226:	6804      	ldr	r4, [r0, #0]
90006228:	6880      	ldr	r0, [r0, #8]
9000622a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
9000622c:	b002      	add	sp, #8
9000622e:	bd10      	pop	{r4, pc}

90006230 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006230:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006232:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90006236:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006238:	2301      	movs	r3, #1
9000623a:	46a4      	mov	ip, r4
9000623c:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
9000623e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006242:	4760      	bx	ip

90006244 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90006244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006246:	680b      	ldr	r3, [r1, #0]
{
90006248:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000624a:	4c2a      	ldr	r4, [pc, #168]	@ (900062f4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000624c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
90006250:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90006252:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90006254:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006256:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90006258:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000625a:	2301      	movs	r3, #1
9000625c:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
9000625e:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006260:	f005 ffba 	bl	9000c1d8 <HAL_SDRAM_SendCommand>
90006264:	2800      	cmp	r0, #0
90006266:	d142      	bne.n	900062ee <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90006268:	f000 ff48 	bl	900070fc <HAL_GetTick>
9000626c:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
9000626e:	f000 ff45 	bl	900070fc <HAL_GetTick>
90006272:	4286      	cmp	r6, r0
90006274:	d0fb      	beq.n	9000626e <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006276:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006278:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
9000627a:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000627c:	491d      	ldr	r1, [pc, #116]	@ (900062f4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000627e:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90006280:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90006282:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006284:	4638      	mov	r0, r7
90006286:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
9000628a:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
9000628c:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000628e:	f005 ffa3 	bl	9000c1d8 <HAL_SDRAM_SendCommand>
90006292:	bb60      	cbnz	r0, 900062ee <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006294:	4917      	ldr	r1, [pc, #92]	@ (900062f4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90006296:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
9000629a:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000629c:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
9000629e:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
900062a2:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900062a4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
900062a8:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900062aa:	f005 ff95 	bl	9000c1d8 <HAL_SDRAM_SendCommand>
900062ae:	b9f0      	cbnz	r0, 900062ee <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900062b0:	4910      	ldr	r1, [pc, #64]	@ (900062f4 <MT48LC4M32B2_Init+0xb0>)
900062b2:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900062b4:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
900062b8:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
900062ba:	696a      	ldr	r2, [r5, #20]
900062bc:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
900062be:	69aa      	ldr	r2, [r5, #24]
900062c0:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900062c2:	69ea      	ldr	r2, [r5, #28]
900062c4:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
900062c6:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
900062c8:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900062ca:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
900062cc:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900062d0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900062d4:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900062d6:	f005 ff7f 	bl	9000c1d8 <HAL_SDRAM_SendCommand>
900062da:	b940      	cbnz	r0, 900062ee <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
900062dc:	68a9      	ldr	r1, [r5, #8]
900062de:	4638      	mov	r0, r7
900062e0:	f005 ff9a 	bl	9000c218 <HAL_SDRAM_ProgramRefreshRate>
900062e4:	3800      	subs	r0, #0
900062e6:	bf18      	it	ne
900062e8:	2001      	movne	r0, #1
900062ea:	4240      	negs	r0, r0
}
900062ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
900062ee:	f04f 30ff 	mov.w	r0, #4294967295
}
900062f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900062f4:	24007810 	.word	0x24007810

900062f8 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
900062f8:	4a10      	ldr	r2, [pc, #64]	@ (9000633c <BSP_I2C4_DeInit+0x44>)
{
900062fa:	b508      	push	{r3, lr}
  I2c4InitCounter--;
900062fc:	6813      	ldr	r3, [r2, #0]
900062fe:	3b01      	subs	r3, #1
90006300:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90006302:	b10b      	cbz	r3, 90006308 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90006304:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90006306:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006308:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
9000630c:	480c      	ldr	r0, [pc, #48]	@ (90006340 <BSP_I2C4_DeInit+0x48>)
9000630e:	f001 fab7 	bl	90007880 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90006312:	480b      	ldr	r0, [pc, #44]	@ (90006340 <BSP_I2C4_DeInit+0x48>)
90006314:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90006318:	f001 fab2 	bl	90007880 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
9000631c:	4a09      	ldr	r2, [pc, #36]	@ (90006344 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
9000631e:	480a      	ldr	r0, [pc, #40]	@ (90006348 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90006320:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90006324:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006328:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
9000632c:	f001 feb4 	bl	90008098 <HAL_I2C_DeInit>
90006330:	2800      	cmp	r0, #0
90006332:	d0e7      	beq.n	90006304 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90006334:	f06f 0007 	mvn.w	r0, #7
}
90006338:	bd08      	pop	{r3, pc}
9000633a:	bf00      	nop
9000633c:	24008278 	.word	0x24008278
90006340:	58020c00 	.word	0x58020c00
90006344:	58024400 	.word	0x58024400
90006348:	24007820 	.word	0x24007820

9000634c <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
9000634c:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
9000634e:	2201      	movs	r2, #1
{
90006350:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90006352:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90006356:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
9000635a:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
9000635e:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90006362:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90006364:	f001 fe3c 	bl	90007fe0 <HAL_I2C_Init>
90006368:	b108      	cbz	r0, 9000636e <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
9000636a:	2001      	movs	r0, #1
}
9000636c:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
9000636e:	4601      	mov	r1, r0
90006370:	4620      	mov	r0, r4
90006372:	f002 f8af 	bl	900084d4 <HAL_I2CEx_ConfigAnalogFilter>
90006376:	2800      	cmp	r0, #0
90006378:	d1f7      	bne.n	9000636a <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
9000637a:	4601      	mov	r1, r0
9000637c:	4620      	mov	r0, r4
9000637e:	f002 f8d3 	bl	90008528 <HAL_I2CEx_ConfigDigitalFilter>
90006382:	3800      	subs	r0, #0
90006384:	bf18      	it	ne
90006386:	2001      	movne	r0, #1
}
90006388:	bd10      	pop	{r4, pc}
9000638a:	bf00      	nop

9000638c <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
9000638c:	4b9a      	ldr	r3, [pc, #616]	@ (900065f8 <BSP_I2C4_Init+0x26c>)
  hbus_i2c4.Instance = BUS_I2C4;
9000638e:	489b      	ldr	r0, [pc, #620]	@ (900065fc <BSP_I2C4_Init+0x270>)
90006390:	4a9b      	ldr	r2, [pc, #620]	@ (90006600 <BSP_I2C4_Init+0x274>)
{
90006392:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
90006396:	681c      	ldr	r4, [r3, #0]
{
90006398:	b09d      	sub	sp, #116	@ 0x74
  hbus_i2c4.Instance = BUS_I2C4;
9000639a:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
9000639c:	b11c      	cbz	r4, 900063a6 <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
9000639e:	2000      	movs	r0, #0
}
900063a0:	b01d      	add	sp, #116	@ 0x74
900063a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
900063a6:	2201      	movs	r2, #1
900063a8:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
900063aa:	f002 f88d 	bl	900084c8 <HAL_I2C_GetState>
900063ae:	2800      	cmp	r0, #0
900063b0:	d1f5      	bne.n	9000639e <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900063b2:	4d94      	ldr	r5, [pc, #592]	@ (90006604 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900063b4:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
900063b8:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900063ba:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900063bc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900063c0:	f04f 0800 	mov.w	r8, #0
900063c4:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900063c8:	f043 0308 	orr.w	r3, r3, #8
900063cc:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900063d0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900063d4:	f003 0308 	and.w	r3, r3, #8
900063d8:	9313      	str	r3, [sp, #76]	@ 0x4c
900063da:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900063dc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900063e0:	f043 0308 	orr.w	r3, r3, #8
900063e4:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900063e8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900063ec:	961a      	str	r6, [sp, #104]	@ 0x68
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900063ee:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900063f2:	e9cd 0116 	strd	r0, r1, [sp, #88]	@ 0x58
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900063f6:	9314      	str	r3, [sp, #80]	@ 0x50
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900063f8:	a916      	add	r1, sp, #88	@ 0x58
900063fa:	4883      	ldr	r0, [pc, #524]	@ (90006608 <BSP_I2C4_Init+0x27c>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900063fc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900063fe:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006402:	f001 f8fb 	bl	900075fc <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006406:	2312      	movs	r3, #18
90006408:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000640c:	a916      	add	r1, sp, #88	@ 0x58
9000640e:	487e      	ldr	r0, [pc, #504]	@ (90006608 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90006410:	961a      	str	r6, [sp, #104]	@ 0x68
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006412:	e9cd 2316 	strd	r2, r3, [sp, #88]	@ 0x58
90006416:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000641a:	f001 f8ef 	bl	900075fc <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
9000641e:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90006422:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90006426:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
9000642a:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
9000642e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90006432:	9315      	str	r3, [sp, #84]	@ 0x54
90006434:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_FORCE_RESET();
90006436:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000643a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000643e:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
90006442:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90006446:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000644a:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000644e:	f004 fdd9 	bl	9000b004 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90006452:	2800      	cmp	r0, #0
90006454:	f000 81fd 	beq.w	90006852 <BSP_I2C4_Init+0x4c6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006458:	4b6c      	ldr	r3, [pc, #432]	@ (9000660c <BSP_I2C4_Init+0x280>)
  if (tsdadel_max <= 0)
9000645a:	4625      	mov	r5, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
9000645c:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006460:	4e6b      	ldr	r6, [pc, #428]	@ (90006610 <BSP_I2C4_Init+0x284>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006462:	eb03 0350 	add.w	r3, r3, r0, lsr #1
90006466:	9401      	str	r4, [sp, #4]
90006468:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
9000646c:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000646e:	9700      	str	r7, [sp, #0]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006470:	eb07 0147 	add.w	r1, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006474:	f5c3 7cc3 	rsb	ip, r3, #390	@ 0x186
90006478:	4b66      	ldr	r3, [pc, #408]	@ (90006614 <BSP_I2C4_Init+0x288>)
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
9000647a:	007a      	lsls	r2, r7, #1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
9000647c:	f1c1 0e32 	rsb	lr, r1, #50	@ 0x32
90006480:	6819      	ldr	r1, [r3, #0]
  if (tsdadel_max <= 0)
90006482:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90006486:	9202      	str	r2, [sp, #8]
  if (tsdadel_min <= 0)
90006488:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_max <= 0)
9000648c:	4689      	mov	r9, r1
9000648e:	4622      	mov	r2, r4
90006490:	9111      	str	r1, [sp, #68]	@ 0x44
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006492:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90006496:	46b8      	mov	r8, r7
90006498:	eb07 0347 	add.w	r3, r7, r7, lsl #1
9000649c:	bf2c      	ite	cs
9000649e:	2001      	movcs	r0, #1
900064a0:	2000      	movcc	r0, #0
900064a2:	ebbe 0f47 	cmp.w	lr, r7, lsl #1
900064a6:	f000 0001 	and.w	r0, r0, #1
900064aa:	eb07 0187 	add.w	r1, r7, r7, lsl #2
900064ae:	bf88      	it	hi
900064b0:	2000      	movhi	r0, #0
900064b2:	459e      	cmp	lr, r3
900064b4:	eb07 0483 	add.w	r4, r7, r3, lsl #2
900064b8:	9004      	str	r0, [sp, #16]
900064ba:	bf8c      	ite	hi
900064bc:	2000      	movhi	r0, #0
900064be:	2001      	movls	r0, #1
900064c0:	459c      	cmp	ip, r3
900064c2:	940f      	str	r4, [sp, #60]	@ 0x3c
900064c4:	ebc7 0bc7 	rsb	fp, r7, r7, lsl #3
900064c8:	bf38      	it	cc
900064ca:	2000      	movcc	r0, #0
900064cc:	ebbe 0f87 	cmp.w	lr, r7, lsl #2
900064d0:	9006      	str	r0, [sp, #24]
900064d2:	eb07 0041 	add.w	r0, r7, r1, lsl #1
900064d6:	9005      	str	r0, [sp, #20]
900064d8:	bf94      	ite	ls
900064da:	2001      	movls	r0, #1
900064dc:	2000      	movhi	r0, #0
900064de:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
900064e2:	f000 0401 	and.w	r4, r0, #1
900064e6:	bf38      	it	cc
900064e8:	2400      	movcc	r4, #0
900064ea:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900064ec:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900064f0:	9407      	str	r4, [sp, #28]
900064f2:	bf8c      	ite	hi
900064f4:	2400      	movhi	r4, #0
900064f6:	2401      	movls	r4, #1
900064f8:	458c      	cmp	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900064fa:	9003      	str	r0, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900064fc:	bf38      	it	cc
900064fe:	2400      	movcc	r4, #0
90006500:	ebbe 0f43 	cmp.w	lr, r3, lsl #1
90006504:	bf98      	it	ls
90006506:	2001      	movls	r0, #1
90006508:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
9000650c:	9408      	str	r4, [sp, #32]
9000650e:	465c      	mov	r4, fp
90006510:	f000 0001 	and.w	r0, r0, #1
90006514:	bf38      	it	cc
90006516:	2000      	movcc	r0, #0
90006518:	45de      	cmp	lr, fp
9000651a:	9009      	str	r0, [sp, #36]	@ 0x24
9000651c:	4658      	mov	r0, fp
9000651e:	bf8c      	ite	hi
90006520:	2000      	movhi	r0, #0
90006522:	2001      	movls	r0, #1
90006524:	45dc      	cmp	ip, fp
90006526:	bf38      	it	cc
90006528:	2000      	movcc	r0, #0
9000652a:	ebbe 0fc7 	cmp.w	lr, r7, lsl #3
9000652e:	4683      	mov	fp, r0
90006530:	bf94      	ite	ls
90006532:	f04f 0b01 	movls.w	fp, #1
90006536:	f04f 0b00 	movhi.w	fp, #0
9000653a:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
9000653e:	900a      	str	r0, [sp, #40]	@ 0x28
90006540:	f00b 0b01 	and.w	fp, fp, #1
90006544:	bf38      	it	cc
90006546:	f04f 0b00 	movcc.w	fp, #0
9000654a:	4658      	mov	r0, fp
9000654c:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
90006550:	eb07 0bc7 	add.w	fp, r7, r7, lsl #3
90006554:	45de      	cmp	lr, fp
90006556:	bf8c      	ite	hi
90006558:	2000      	movhi	r0, #0
9000655a:	2001      	movls	r0, #1
9000655c:	45dc      	cmp	ip, fp
9000655e:	bf38      	it	cc
90006560:	2000      	movcc	r0, #0
90006562:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
90006566:	900c      	str	r0, [sp, #48]	@ 0x30
90006568:	bf98      	it	ls
9000656a:	f04f 0b01 	movls.w	fp, #1
9000656e:	9805      	ldr	r0, [sp, #20]
90006570:	bf88      	it	hi
90006572:	f04f 0b00 	movhi.w	fp, #0
90006576:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
9000657a:	f00b 0b01 	and.w	fp, fp, #1
9000657e:	4601      	mov	r1, r0
90006580:	bf38      	it	cc
90006582:	f04f 0b00 	movcc.w	fp, #0
90006586:	4586      	cmp	lr, r0
90006588:	bf8c      	ite	hi
9000658a:	2100      	movhi	r1, #0
9000658c:	2101      	movls	r1, #1
9000658e:	4584      	cmp	ip, r0
90006590:	4620      	mov	r0, r4
90006592:	bf38      	it	cc
90006594:	2100      	movcc	r1, #0
90006596:	ebbe 0f83 	cmp.w	lr, r3, lsl #2
9000659a:	910d      	str	r1, [sp, #52]	@ 0x34
9000659c:	bf94      	ite	ls
9000659e:	2101      	movls	r1, #1
900065a0:	2100      	movhi	r1, #0
900065a2:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
900065a6:	f001 0101 	and.w	r1, r1, #1
900065aa:	bf38      	it	cc
900065ac:	2100      	movcc	r1, #0
900065ae:	910e      	str	r1, [sp, #56]	@ 0x38
900065b0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900065b2:	4571      	cmp	r1, lr
900065b4:	460b      	mov	r3, r1
900065b6:	bf34      	ite	cc
900065b8:	2300      	movcc	r3, #0
900065ba:	2301      	movcs	r3, #1
900065bc:	4561      	cmp	r1, ip
900065be:	bf88      	it	hi
900065c0:	2300      	movhi	r3, #0
900065c2:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
900065c6:	930f      	str	r3, [sp, #60]	@ 0x3c
900065c8:	bf94      	ite	ls
900065ca:	2301      	movls	r3, #1
900065cc:	2300      	movhi	r3, #0
900065ce:	ebbc 0f44 	cmp.w	ip, r4, lsl #1
900065d2:	f04f 0400 	mov.w	r4, #0
900065d6:	f003 0301 	and.w	r3, r3, #1
900065da:	bf38      	it	cc
900065dc:	2300      	movcc	r3, #0
900065de:	9310      	str	r3, [sp, #64]	@ 0x40
900065e0:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
900065e4:	459e      	cmp	lr, r3
900065e6:	bf8c      	ite	hi
900065e8:	2100      	movhi	r1, #0
900065ea:	2101      	movls	r1, #1
900065ec:	459c      	cmp	ip, r3
900065ee:	bf38      	it	cc
900065f0:	2100      	movcc	r1, #0
900065f2:	9105      	str	r1, [sp, #20]
900065f4:	e014      	b.n	90006620 <BSP_I2C4_Init+0x294>
900065f6:	bf00      	nop
900065f8:	24008278 	.word	0x24008278
900065fc:	24007820 	.word	0x24007820
90006600:	58001c00 	.word	0x58001c00
90006604:	58024400 	.word	0x58024400
90006608:	58020c00 	.word	0x58020c00
9000660c:	3b9aca00 	.word	0x3b9aca00
90006610:	24007878 	.word	0x24007878
90006614:	24007874 	.word	0x24007874
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006618:	2c10      	cmp	r4, #16
9000661a:	44b8      	add	r8, r7
9000661c:	f000 8273 	beq.w	90006b06 <BSP_I2C4_Init+0x77a>
      if (tscldel >= (uint32_t)tscldel_min)
90006620:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
90006624:	4623      	mov	r3, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90006626:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
9000662a:	d3f5      	bcc.n	90006618 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
9000662c:	ebba 0105 	subs.w	r1, sl, r5
90006630:	bf18      	it	ne
90006632:	2101      	movne	r1, #1
90006634:	f1be 0f00 	cmp.w	lr, #0
90006638:	bf18      	it	ne
9000663a:	2100      	movne	r1, #0
9000663c:	2900      	cmp	r1, #0
9000663e:	f040 8250 	bne.w	90006ae2 <BSP_I2C4_Init+0x756>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006642:	45bc      	cmp	ip, r7
90006644:	bf34      	ite	cc
90006646:	2100      	movcc	r1, #0
90006648:	2101      	movcs	r1, #1
9000664a:	45be      	cmp	lr, r7
9000664c:	bf88      	it	hi
9000664e:	2100      	movhi	r1, #0
            if(presc != prev_presc)
90006650:	45aa      	cmp	sl, r5
90006652:	bf0c      	ite	eq
90006654:	2100      	moveq	r1, #0
90006656:	f001 0101 	andne.w	r1, r1, #1
9000665a:	2900      	cmp	r1, #0
9000665c:	f000 8103 	beq.w	90006866 <BSP_I2C4_Init+0x4da>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006660:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006664:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006668:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000666a:	46b2      	mov	sl, r6
9000666c:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006670:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006674:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006678:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000667a:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000667c:	f200 81aa 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
90006680:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006682:	9a06      	ldr	r2, [sp, #24]
90006684:	45aa      	cmp	sl, r5
90006686:	bf0c      	ite	eq
90006688:	2200      	moveq	r2, #0
9000668a:	f002 0201 	andne.w	r2, r2, #1
9000668e:	2a00      	cmp	r2, #0
90006690:	f000 8105 	beq.w	9000689e <BSP_I2C4_Init+0x512>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006694:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006698:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000669c:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000669e:	46b2      	mov	sl, r6
900066a0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900066a4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900066a8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900066ac:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900066ae:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900066b0:	f200 8190 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
900066b4:	4611      	mov	r1, r2
900066b6:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900066b8:	9a08      	ldr	r2, [sp, #32]
900066ba:	45aa      	cmp	sl, r5
900066bc:	bf0c      	ite	eq
900066be:	2200      	moveq	r2, #0
900066c0:	f002 0201 	andne.w	r2, r2, #1
900066c4:	2a00      	cmp	r2, #0
900066c6:	f000 8105 	beq.w	900068d4 <BSP_I2C4_Init+0x548>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900066ca:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900066ce:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900066d2:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900066d4:	46b2      	mov	sl, r6
900066d6:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900066da:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900066de:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900066e2:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900066e4:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900066e6:	f200 8175 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
900066ea:	4611      	mov	r1, r2
900066ec:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900066ee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900066f0:	45aa      	cmp	sl, r5
900066f2:	bf0c      	ite	eq
900066f4:	2200      	moveq	r2, #0
900066f6:	f002 0201 	andne.w	r2, r2, #1
900066fa:	2a00      	cmp	r2, #0
900066fc:	f000 8104 	beq.w	90006908 <BSP_I2C4_Init+0x57c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006700:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006704:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006708:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000670a:	46b2      	mov	sl, r6
9000670c:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006710:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006714:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006718:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000671a:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000671c:	f200 815a 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
90006720:	4611      	mov	r1, r2
90006722:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006724:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90006726:	45aa      	cmp	sl, r5
90006728:	bf0c      	ite	eq
9000672a:	2200      	moveq	r2, #0
9000672c:	f002 0201 	andne.w	r2, r2, #1
90006730:	2a00      	cmp	r2, #0
90006732:	f000 8103 	beq.w	9000693c <BSP_I2C4_Init+0x5b0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006736:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000673a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000673e:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006740:	46b2      	mov	sl, r6
90006742:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006746:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000674a:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000674e:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006750:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006752:	f200 813f 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
90006756:	4611      	mov	r1, r2
90006758:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000675a:	980d      	ldr	r0, [sp, #52]	@ 0x34
9000675c:	4555      	cmp	r5, sl
9000675e:	bf0c      	ite	eq
90006760:	2000      	moveq	r0, #0
90006762:	f000 0001 	andne.w	r0, r0, #1
90006766:	2800      	cmp	r0, #0
90006768:	f000 8101 	beq.w	9000696e <BSP_I2C4_Init+0x5e2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000676c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006770:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006774:	210b      	movs	r1, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006776:	46b2      	mov	sl, r6
90006778:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000677c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006780:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006784:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006786:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006788:	f200 8124 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
9000678c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000678e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90006790:	4555      	cmp	r5, sl
90006792:	bf0c      	ite	eq
90006794:	2200      	moveq	r2, #0
90006796:	f002 0201 	andne.w	r2, r2, #1
9000679a:	2a00      	cmp	r2, #0
9000679c:	f000 8100 	beq.w	900069a0 <BSP_I2C4_Init+0x614>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067a0:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900067a4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067a8:	200d      	movs	r0, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067aa:	46b2      	mov	sl, r6
900067ac:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067b0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067b4:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900067b8:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067ba:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067bc:	f200 810a 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
900067c0:	4610      	mov	r0, r2
900067c2:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900067c4:	9a05      	ldr	r2, [sp, #20]
900067c6:	4555      	cmp	r5, sl
900067c8:	bf0c      	ite	eq
900067ca:	2200      	moveq	r2, #0
900067cc:	f002 0201 	andne.w	r2, r2, #1
900067d0:	2a00      	cmp	r2, #0
900067d2:	f000 8182 	beq.w	90006ada <BSP_I2C4_Init+0x74e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067d6:	eb09 0189 	add.w	r1, r9, r9, lsl #2
900067da:	f8df a360 	ldr.w	sl, [pc, #864]	@ 90006b3c <BSP_I2C4_Init+0x7b0>
              I2c_valid_timing_nbr ++;
900067de:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067e2:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
900067e6:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067ea:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900067ee:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067f0:	f04f 030f 	mov.w	r3, #15
900067f4:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067f6:	f200 80ed 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
900067fa:	46aa      	mov	sl, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900067fc:	e70c      	b.n	90006618 <BSP_I2C4_Init+0x28c>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900067fe:	9a06      	ldr	r2, [sp, #24]
90006800:	4661      	mov	r1, ip
90006802:	f109 0914 	add.w	r9, r9, #20
90006806:	3201      	adds	r2, #1
90006808:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
9000680c:	e9dd 3c0c 	ldrd	r3, ip, [sp, #48]	@ 0x30
90006810:	4572      	cmp	r2, lr
90006812:	9206      	str	r2, [sp, #24]
90006814:	f040 8103 	bne.w	90006a1e <BSP_I2C4_Init+0x692>
        if (idx < I2C_VALID_TIMING_NBR)
90006818:	9b01      	ldr	r3, [sp, #4]
9000681a:	2b7f      	cmp	r3, #127	@ 0x7f
9000681c:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
90006820:	d817      	bhi.n	90006852 <BSP_I2C4_Init+0x4c6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006822:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90006826:	eb00 0283 	add.w	r2, r0, r3, lsl #2
9000682a:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000682e:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90006830:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006832:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006834:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90006838:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000683c:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90006840:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006842:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90006844:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90006846:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000684a:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000684c:	430b      	orrs	r3, r1
9000684e:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006852:	4621      	mov	r1, r4
90006854:	48b7      	ldr	r0, [pc, #732]	@ (90006b34 <BSP_I2C4_Init+0x7a8>)
90006856:	f7ff fd79 	bl	9000634c <MX_I2C4_Init>
9000685a:	2800      	cmp	r0, #0
9000685c:	f43f ad9f 	beq.w	9000639e <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
90006860:	f06f 0007 	mvn.w	r0, #7
  return ret;
90006864:	e59c      	b.n	900063a0 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
90006866:	4611      	mov	r1, r2
90006868:	9a04      	ldr	r2, [sp, #16]
9000686a:	45aa      	cmp	sl, r5
9000686c:	bf0c      	ite	eq
9000686e:	2200      	moveq	r2, #0
90006870:	f002 0201 	andne.w	r2, r2, #1
90006874:	2a00      	cmp	r2, #0
90006876:	f43f af04 	beq.w	90006682 <BSP_I2C4_Init+0x2f6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000687a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000687e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006882:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006884:	46b2      	mov	sl, r6
90006886:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000688a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000688e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006892:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006894:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006896:	f200 809d 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
9000689a:	4611      	mov	r1, r2
9000689c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000689e:	9a07      	ldr	r2, [sp, #28]
900068a0:	45aa      	cmp	sl, r5
900068a2:	bf0c      	ite	eq
900068a4:	2200      	moveq	r2, #0
900068a6:	f002 0201 	andne.w	r2, r2, #1
900068aa:	2a00      	cmp	r2, #0
900068ac:	f43f af04 	beq.w	900066b8 <BSP_I2C4_Init+0x32c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068b0:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900068b4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900068b8:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068ba:	46b2      	mov	sl, r6
900068bc:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900068c0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068c4:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900068c8:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900068ca:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900068cc:	f200 8082 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
900068d0:	4611      	mov	r1, r2
900068d2:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900068d4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900068d6:	45aa      	cmp	sl, r5
900068d8:	bf0c      	ite	eq
900068da:	2200      	moveq	r2, #0
900068dc:	f002 0201 	andne.w	r2, r2, #1
900068e0:	2a00      	cmp	r2, #0
900068e2:	f43f af04 	beq.w	900066ee <BSP_I2C4_Init+0x362>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068e6:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900068ea:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900068ee:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068f0:	46b2      	mov	sl, r6
900068f2:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900068f6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900068fa:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900068fe:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006900:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006902:	d867      	bhi.n	900069d4 <BSP_I2C4_Init+0x648>
90006904:	4611      	mov	r1, r2
90006906:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90006908:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9000690a:	45aa      	cmp	sl, r5
9000690c:	bf0c      	ite	eq
9000690e:	2200      	moveq	r2, #0
90006910:	f002 0201 	andne.w	r2, r2, #1
90006914:	2a00      	cmp	r2, #0
90006916:	f43f af05 	beq.w	90006724 <BSP_I2C4_Init+0x398>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000691a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000691e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006922:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006924:	46b2      	mov	sl, r6
90006926:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000692a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000692e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006932:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006934:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006936:	d84d      	bhi.n	900069d4 <BSP_I2C4_Init+0x648>
90006938:	4611      	mov	r1, r2
9000693a:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000693c:	45aa      	cmp	sl, r5
9000693e:	bf0c      	ite	eq
90006940:	2200      	moveq	r2, #0
90006942:	f00b 0201 	andne.w	r2, fp, #1
90006946:	2a00      	cmp	r2, #0
90006948:	f43f af07 	beq.w	9000675a <BSP_I2C4_Init+0x3ce>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000694c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006950:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006954:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006956:	46b2      	mov	sl, r6
90006958:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000695c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006960:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006964:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006966:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006968:	d834      	bhi.n	900069d4 <BSP_I2C4_Init+0x648>
9000696a:	4611      	mov	r1, r2
9000696c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000696e:	980e      	ldr	r0, [sp, #56]	@ 0x38
90006970:	4555      	cmp	r5, sl
90006972:	bf0c      	ite	eq
90006974:	2000      	moveq	r0, #0
90006976:	f000 0001 	andne.w	r0, r0, #1
9000697a:	2800      	cmp	r0, #0
9000697c:	f000 80af 	beq.w	90006ade <BSP_I2C4_Init+0x752>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006980:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006984:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006988:	210c      	movs	r1, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000698a:	46b2      	mov	sl, r6
9000698c:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006990:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006994:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006998:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000699a:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000699c:	d81a      	bhi.n	900069d4 <BSP_I2C4_Init+0x648>
9000699e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900069a0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900069a2:	4555      	cmp	r5, sl
900069a4:	bf0c      	ite	eq
900069a6:	2200      	moveq	r2, #0
900069a8:	f002 0201 	andne.w	r2, r2, #1
900069ac:	2a00      	cmp	r2, #0
900069ae:	f43f af09 	beq.w	900067c4 <BSP_I2C4_Init+0x438>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900069b2:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900069b6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900069ba:	46b2      	mov	sl, r6
900069bc:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
900069c0:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900069c4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900069c8:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900069ca:	f04f 030e 	mov.w	r3, #14
900069ce:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900069d0:	f67f af13 	bls.w	900067fa <BSP_I2C4_Init+0x46e>
900069d4:	4b58      	ldr	r3, [pc, #352]	@ (90006b38 <BSP_I2C4_Init+0x7ac>)
900069d6:	4650      	mov	r0, sl
900069d8:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing_nbr ++;
900069da:	4649      	mov	r1, r9
900069dc:	9a02      	ldr	r2, [sp, #8]
900069de:	f8c3 9000 	str.w	r9, [r3]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900069e2:	2500      	movs	r5, #0
900069e4:	9f00      	ldr	r7, [sp, #0]
900069e6:	f240 2657 	movw	r6, #599	@ 0x257
900069ea:	f240 4301 	movw	r3, #1025	@ 0x401
900069ee:	9506      	str	r5, [sp, #24]
900069f0:	f04f 35ff 	mov.w	r5, #4294967295
900069f4:	42be      	cmp	r6, r7
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900069f6:	468e      	mov	lr, r1
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900069f8:	9501      	str	r5, [sp, #4]
900069fa:	f102 0532 	add.w	r5, r2, #50	@ 0x32
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900069fe:	9408      	str	r4, [sp, #32]
90006a00:	eba3 0302 	sub.w	r3, r3, r2
90006a04:	bf38      	it	cc
90006a06:	463e      	movcc	r6, r7
90006a08:	f8df 9130 	ldr.w	r9, [pc, #304]	@ 90006b3c <BSP_I2C4_Init+0x7b0>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006a0c:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
90006a10:	f6a2 0c34 	subw	ip, r2, #2100	@ 0x834
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006a14:	f240 4a12 	movw	sl, #1042	@ 0x412
90006a18:	4639      	mov	r1, r7
90006a1a:	462c      	mov	r4, r5
90006a1c:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006a1e:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90006a22:	2500      	movs	r5, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006a24:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90006a28:	1a1a      	subs	r2, r3, r0
90006a2a:	1827      	adds	r7, r4, r0
90006a2c:	ea4f 0842 	mov.w	r8, r2, lsl #1
90006a30:	eb0c 0200 	add.w	r2, ip, r0
90006a34:	e9cd 3c0c 	strd	r3, ip, [sp, #48]	@ 0x30
90006a38:	9207      	str	r2, [sp, #28]
90006a3a:	468c      	mov	ip, r1
90006a3c:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
90006a40:	e006      	b.n	90006a50 <BSP_I2C4_Init+0x6c4>
90006a42:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90006a46:	4407      	add	r7, r0
90006a48:	eba8 0800 	sub.w	r8, r8, r0
90006a4c:	f43f aed7 	beq.w	900067fe <BSP_I2C4_Init+0x472>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006a50:	f240 5314 	movw	r3, #1300	@ 0x514
90006a54:	9500      	str	r5, [sp, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006a56:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006a58:	429f      	cmp	r7, r3
90006a5a:	d9f2      	bls.n	90006a42 <BSP_I2C4_Init+0x6b6>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006a5c:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006a60:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90006a64:	d2ed      	bcs.n	90006a42 <BSP_I2C4_Init+0x6b6>
90006a66:	f640 0e34 	movw	lr, #2100	@ 0x834
90006a6a:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006a6c:	2200      	movs	r2, #0
90006a6e:	ebae 0e03 	sub.w	lr, lr, r3
90006a72:	9b07      	ldr	r3, [sp, #28]
90006a74:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90006a78:	e9cd 7804 	strd	r7, r8, [sp, #16]
90006a7c:	443b      	add	r3, r7
90006a7e:	f8dd c004 	ldr.w	ip, [sp, #4]
90006a82:	f8dd 8018 	ldr.w	r8, [sp, #24]
90006a86:	e005      	b.n	90006a94 <BSP_I2C4_Init+0x708>
90006a88:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90006a8c:	4403      	add	r3, r0
90006a8e:	eba4 0400 	sub.w	r4, r4, r0
90006a92:	d01a      	beq.n	90006aca <BSP_I2C4_Init+0x73e>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006a94:	eb0e 0103 	add.w	r1, lr, r3
90006a98:	4617      	mov	r7, r2
90006a9a:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90006a9e:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006aa0:	42b1      	cmp	r1, r6
90006aa2:	d9f1      	bls.n	90006a88 <BSP_I2C4_Init+0x6fc>
90006aa4:	4555      	cmp	r5, sl
90006aa6:	d8ef      	bhi.n	90006a88 <BSP_I2C4_Init+0x6fc>
            if (error < 0)
90006aa8:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90006aac:	bf28      	it	cs
90006aae:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90006ab0:	458b      	cmp	fp, r1
90006ab2:	d9e9      	bls.n	90006a88 <BSP_I2C4_Init+0x6fc>
              I2c_valid_timing[count].sclh = sclh;
90006ab4:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006ab6:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              I2c_valid_timing[count].scll = scll;
90006aba:	9900      	ldr	r1, [sp, #0]
              I2c_valid_timing[count].sclh = sclh;
90006abc:	46c4      	mov	ip, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006abe:	4403      	add	r3, r0
90006ac0:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90006ac4:	e9c9 7103 	strd	r7, r1, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90006ac8:	d1e4      	bne.n	90006a94 <BSP_I2C4_Init+0x708>
90006aca:	f8cd c004 	str.w	ip, [sp, #4]
90006ace:	9d02      	ldr	r5, [sp, #8]
90006ad0:	f8dd 8014 	ldr.w	r8, [sp, #20]
90006ad4:	e9dd c703 	ldrd	ip, r7, [sp, #12]
90006ad8:	e7b3      	b.n	90006a42 <BSP_I2C4_Init+0x6b6>
90006ada:	4602      	mov	r2, r0
90006adc:	e59c      	b.n	90006618 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
90006ade:	4608      	mov	r0, r1
90006ae0:	e655      	b.n	9000678e <BSP_I2C4_Init+0x402>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ae2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006ae6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006aea:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006aec:	46b2      	mov	sl, r6
90006aee:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006af2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006af6:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006afa:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006afc:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006afe:	f63f af69 	bhi.w	900069d4 <BSP_I2C4_Init+0x648>
90006b02:	46aa      	mov	sl, r5
90006b04:	e6b0      	b.n	90006868 <BSP_I2C4_Init+0x4dc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90006b06:	3501      	adds	r5, #1
90006b08:	9b00      	ldr	r3, [sp, #0]
90006b0a:	2d10      	cmp	r5, #16
90006b0c:	441f      	add	r7, r3
90006b0e:	f47f acc0 	bne.w	90006492 <BSP_I2C4_Init+0x106>
90006b12:	4693      	mov	fp, r2
90006b14:	9c01      	ldr	r4, [sp, #4]
90006b16:	9911      	ldr	r1, [sp, #68]	@ 0x44
90006b18:	9a02      	ldr	r2, [sp, #8]
90006b1a:	f1bb 0f00 	cmp.w	fp, #0
90006b1e:	d003      	beq.n	90006b28 <BSP_I2C4_Init+0x79c>
90006b20:	4b05      	ldr	r3, [pc, #20]	@ (90006b38 <BSP_I2C4_Init+0x7ac>)
90006b22:	4649      	mov	r1, r9
90006b24:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006b28:	2900      	cmp	r1, #0
90006b2a:	f43f ae92 	beq.w	90006852 <BSP_I2C4_Init+0x4c6>
90006b2e:	4803      	ldr	r0, [pc, #12]	@ (90006b3c <BSP_I2C4_Init+0x7b0>)
90006b30:	e757      	b.n	900069e2 <BSP_I2C4_Init+0x656>
90006b32:	bf00      	nop
90006b34:	24007820 	.word	0x24007820
90006b38:	24007874 	.word	0x24007874
90006b3c:	24007878 	.word	0x24007878

90006b40 <BSP_I2C4_WriteReg>:
{
90006b40:	b530      	push	{r4, r5, lr}
90006b42:	4614      	mov	r4, r2
90006b44:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90006b46:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90006b4a:	460a      	mov	r2, r1
90006b4c:	9301      	str	r3, [sp, #4]
90006b4e:	4601      	mov	r1, r0
90006b50:	2301      	movs	r3, #1
90006b52:	4809      	ldr	r0, [pc, #36]	@ (90006b78 <BSP_I2C4_WriteReg+0x38>)
90006b54:	9502      	str	r5, [sp, #8]
90006b56:	9400      	str	r4, [sp, #0]
90006b58:	f001 fab8 	bl	900080cc <HAL_I2C_Mem_Write>
90006b5c:	b908      	cbnz	r0, 90006b62 <BSP_I2C4_WriteReg+0x22>
}
90006b5e:	b005      	add	sp, #20
90006b60:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90006b62:	4805      	ldr	r0, [pc, #20]	@ (90006b78 <BSP_I2C4_WriteReg+0x38>)
90006b64:	f001 fcb4 	bl	900084d0 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90006b68:	2804      	cmp	r0, #4
90006b6a:	bf14      	ite	ne
90006b6c:	f06f 0003 	mvnne.w	r0, #3
90006b70:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90006b74:	e7f3      	b.n	90006b5e <BSP_I2C4_WriteReg+0x1e>
90006b76:	bf00      	nop
90006b78:	24007820 	.word	0x24007820

90006b7c <BSP_I2C4_ReadReg>:
{
90006b7c:	b530      	push	{r4, r5, lr}
90006b7e:	4614      	mov	r4, r2
90006b80:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90006b82:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90006b86:	460a      	mov	r2, r1
90006b88:	9301      	str	r3, [sp, #4]
90006b8a:	4601      	mov	r1, r0
90006b8c:	2301      	movs	r3, #1
90006b8e:	4809      	ldr	r0, [pc, #36]	@ (90006bb4 <BSP_I2C4_ReadReg+0x38>)
90006b90:	9502      	str	r5, [sp, #8]
90006b92:	9400      	str	r4, [sp, #0]
90006b94:	f001 fb98 	bl	900082c8 <HAL_I2C_Mem_Read>
90006b98:	b908      	cbnz	r0, 90006b9e <BSP_I2C4_ReadReg+0x22>
}
90006b9a:	b005      	add	sp, #20
90006b9c:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90006b9e:	4805      	ldr	r0, [pc, #20]	@ (90006bb4 <BSP_I2C4_ReadReg+0x38>)
90006ba0:	f001 fc96 	bl	900084d0 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90006ba4:	2804      	cmp	r0, #4
90006ba6:	bf14      	ite	ne
90006ba8:	f06f 0003 	mvnne.w	r0, #3
90006bac:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90006bb0:	e7f3      	b.n	90006b9a <BSP_I2C4_ReadReg+0x1e>
90006bb2:	bf00      	nop
90006bb4:	24007820 	.word	0x24007820

90006bb8 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90006bb8:	f000 baa0 	b.w	900070fc <HAL_GetTick>

90006bbc <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90006bbc:	b970      	cbnz	r0, 90006bdc <BSP_SDRAM_DeInit+0x20>
{
90006bbe:	b510      	push	{r4, lr}
90006bc0:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90006bc2:	4808      	ldr	r0, [pc, #32]	@ (90006be4 <BSP_SDRAM_DeInit+0x28>)
90006bc4:	f005 fafa 	bl	9000c1bc <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90006bc8:	207a      	movs	r0, #122	@ 0x7a
90006bca:	f000 faff 	bl	900071cc <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006bce:	4b06      	ldr	r3, [pc, #24]	@ (90006be8 <BSP_SDRAM_DeInit+0x2c>)
90006bd0:	4806      	ldr	r0, [pc, #24]	@ (90006bec <BSP_SDRAM_DeInit+0x30>)
90006bd2:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90006bd4:	f003 fac0 	bl	9000a158 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90006bd8:	4620      	mov	r0, r4
}
90006bda:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90006bdc:	f06f 0001 	mvn.w	r0, #1
}
90006be0:	4770      	bx	lr
90006be2:	bf00      	nop
90006be4:	24008374 	.word	0x24008374
90006be8:	52000040 	.word	0x52000040
90006bec:	2400827c 	.word	0x2400827c

90006bf0 <MX_SDRAM_BANK2_Init>:
{
90006bf0:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90006bf2:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006bf4:	2200      	movs	r2, #0
{
90006bf6:	b089      	sub	sp, #36	@ 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90006bf8:	4c13      	ldr	r4, [pc, #76]	@ (90006c48 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006bfa:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90006bfc:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90006bfe:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90006c00:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90006c02:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90006c04:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90006c06:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90006c08:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90006c0c:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90006c0e:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006c10:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90006c12:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006c14:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90006c16:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90006c1a:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90006c1c:	f44f 6500 	mov.w	r5, #2048	@ 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90006c20:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90006c22:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90006c24:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90006c28:	2204      	movs	r2, #4
90006c2a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90006c2e:	2202      	movs	r2, #2
90006c30:	2302      	movs	r3, #2
90006c32:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90006c36:	4b05      	ldr	r3, [pc, #20]	@ (90006c4c <MX_SDRAM_BANK2_Init+0x5c>)
90006c38:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90006c3a:	f005 fa95 	bl	9000c168 <HAL_SDRAM_Init>
}
90006c3e:	3800      	subs	r0, #0
90006c40:	bf18      	it	ne
90006c42:	2001      	movne	r0, #1
90006c44:	b009      	add	sp, #36	@ 0x24
90006c46:	bd30      	pop	{r4, r5, pc}
90006c48:	24008374 	.word	0x24008374
90006c4c:	52004140 	.word	0x52004140

90006c50 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90006c50:	2800      	cmp	r0, #0
90006c52:	f040 80cd 	bne.w	90006df0 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90006c56:	4b69      	ldr	r3, [pc, #420]	@ (90006dfc <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90006c58:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
90006c5a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006c5e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
90006c62:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90006c64:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
{
90006c68:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
90006c6a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006c6e:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90006c70:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
90006c72:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90006c74:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006c78:	4c61      	ldr	r4, [pc, #388]	@ (90006e00 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006c7a:	4e62      	ldr	r6, [pc, #392]	@ (90006e04 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90006c7c:	9200      	str	r2, [sp, #0]
90006c7e:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90006c80:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006c84:	430a      	orrs	r2, r1
90006c86:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90006c8a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90006c8e:	400a      	ands	r2, r1
90006c90:	9201      	str	r2, [sp, #4]
90006c92:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90006c94:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006c98:	f042 0208 	orr.w	r2, r2, #8
90006c9c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006ca0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006ca4:	f002 0208 	and.w	r2, r2, #8
90006ca8:	9202      	str	r2, [sp, #8]
90006caa:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90006cac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006cb0:	f042 0210 	orr.w	r2, r2, #16
90006cb4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006cb8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006cbc:	f002 0210 	and.w	r2, r2, #16
90006cc0:	9203      	str	r2, [sp, #12]
90006cc2:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90006cc4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006cc8:	f042 0220 	orr.w	r2, r2, #32
90006ccc:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006cd0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006cd4:	f002 0220 	and.w	r2, r2, #32
90006cd8:	9204      	str	r2, [sp, #16]
90006cda:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90006cdc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006ce0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90006ce4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006ce8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006cec:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90006cf0:	9205      	str	r2, [sp, #20]
90006cf2:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006cf4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006cf8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90006cfc:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90006d00:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006d02:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90006d06:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006d08:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006d0c:	483e      	ldr	r0, [pc, #248]	@ (90006e08 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90006d0e:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006d10:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90006d12:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006d16:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006d18:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90006d1a:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90006d1c:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006d20:	f000 fc6c 	bl	900075fc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90006d24:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90006d28:	a907      	add	r1, sp, #28
90006d2a:	4838      	ldr	r0, [pc, #224]	@ (90006e0c <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90006d2c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90006d2e:	f000 fc65 	bl	900075fc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90006d32:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90006d36:	a907      	add	r1, sp, #28
90006d38:	4835      	ldr	r0, [pc, #212]	@ (90006e10 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90006d3a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90006d3c:	f000 fc5e 	bl	900075fc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90006d40:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90006d44:	a907      	add	r1, sp, #28
90006d46:	4833      	ldr	r0, [pc, #204]	@ (90006e14 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90006d48:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90006d4a:	f000 fc57 	bl	900075fc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90006d4e:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90006d50:	a907      	add	r1, sp, #28
90006d52:	4831      	ldr	r0, [pc, #196]	@ (90006e18 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90006d54:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90006d56:	f000 fc51 	bl	900075fc <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90006d5a:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006d5c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006d60:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90006d64:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90006d66:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90006d68:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006d6a:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90006d6c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006d70:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90006d72:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006d74:	4a29      	ldr	r2, [pc, #164]	@ (90006e1c <BSP_SDRAM_Init+0x1cc>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006d76:	6334      	str	r4, [r6, #48]	@ 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006d78:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006d7a:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90006d7c:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90006d80:	f640 0308 	movw	r3, #2056	@ 0x808
90006d84:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90006d86:	2320      	movs	r3, #32
90006d88:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006d8a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90006d8e:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006d92:	6263      	str	r3, [r4, #36]	@ 0x24
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90006d94:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90006d98:	f003 f9de 	bl	9000a158 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90006d9c:	4620      	mov	r0, r4
90006d9e:	f003 f961 	bl	9000a064 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90006da2:	462a      	mov	r2, r5
90006da4:	210f      	movs	r1, #15
90006da6:	207a      	movs	r0, #122	@ 0x7a
90006da8:	f000 f9c6 	bl	90007138 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90006dac:	207a      	movs	r0, #122	@ 0x7a
90006dae:	f000 f9ff 	bl	900071b0 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90006db2:	2210      	movs	r2, #16
90006db4:	2104      	movs	r1, #4
90006db6:	4630      	mov	r0, r6
90006db8:	f7ff ff1a 	bl	90006bf0 <MX_SDRAM_BANK2_Init>
90006dbc:	4603      	mov	r3, r0
90006dbe:	b9d0      	cbnz	r0, 90006df6 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90006dc0:	4917      	ldr	r1, [pc, #92]	@ (90006e20 <BSP_SDRAM_Init+0x1d0>)
90006dc2:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90006dc4:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90006dc6:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90006dc8:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90006dca:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90006dce:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90006dd0:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90006dd4:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90006dd8:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90006ddc:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90006de0:	f7ff fa30 	bl	90006244 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90006de4:	2800      	cmp	r0, #0
90006de6:	bf18      	it	ne
90006de8:	f06f 0004 	mvnne.w	r0, #4
}
90006dec:	b00d      	add	sp, #52	@ 0x34
90006dee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90006df0:	f06f 0001 	mvn.w	r0, #1
}
90006df4:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90006df6:	f04f 30ff 	mov.w	r0, #4294967295
90006dfa:	e7f7      	b.n	90006dec <BSP_SDRAM_Init+0x19c>
90006dfc:	58024400 	.word	0x58024400
90006e00:	240082e8 	.word	0x240082e8
90006e04:	24008374 	.word	0x24008374
90006e08:	58020c00 	.word	0x58020c00
90006e0c:	58021000 	.word	0x58021000
90006e10:	58021400 	.word	0x58021400
90006e14:	58021800 	.word	0x58021800
90006e18:	58021c00 	.word	0x58021c00
90006e1c:	52000040 	.word	0x52000040
90006e20:	24008354 	.word	0x24008354

90006e24 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90006e24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006e28:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90006e2a:	2800      	cmp	r0, #0
90006e2c:	d16b      	bne.n	90006f06 <BSP_TS_Init+0xe2>
90006e2e:	680b      	ldr	r3, [r1, #0]
90006e30:	460d      	mov	r5, r1
90006e32:	1e5a      	subs	r2, r3, #1
90006e34:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90006e38:	d265      	bcs.n	90006f06 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90006e3a:	684a      	ldr	r2, [r1, #4]
90006e3c:	1e51      	subs	r1, r2, #1
90006e3e:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90006e42:	d260      	bcs.n	90006f06 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90006e44:	4293      	cmp	r3, r2
90006e46:	bf28      	it	cs
90006e48:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90006e4a:	68ea      	ldr	r2, [r5, #12]
90006e4c:	429a      	cmp	r2, r3
90006e4e:	d85a      	bhi.n	90006f06 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90006e50:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90006e52:	4b31      	ldr	r3, [pc, #196]	@ (90006f18 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006e54:	4c31      	ldr	r4, [pc, #196]	@ (90006f1c <BSP_TS_Init+0xf8>)
90006e56:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90006e58:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90006e5c:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90006e5e:	4a30      	ldr	r2, [pc, #192]	@ (90006f20 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006e60:	4b30      	ldr	r3, [pc, #192]	@ (90006f24 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90006e62:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006e64:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90006e66:	4a30      	ldr	r2, [pc, #192]	@ (90006f28 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90006e68:	4b30      	ldr	r3, [pc, #192]	@ (90006f2c <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90006e6a:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006e6c:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90006e6e:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90006e70:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006e72:	f7ff f939 	bl	900060e8 <FT5336_RegisterBusIO>
90006e76:	2800      	cmp	r0, #0
90006e78:	d14b      	bne.n	90006f12 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90006e7a:	a901      	add	r1, sp, #4
90006e7c:	4620      	mov	r0, r4
90006e7e:	f7ff f829 	bl	90005ed4 <FT5336_ReadID>
90006e82:	2800      	cmp	r0, #0
90006e84:	d145      	bne.n	90006f12 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90006e86:	9b01      	ldr	r3, [sp, #4]
90006e88:	2b51      	cmp	r3, #81	@ 0x51
90006e8a:	d142      	bne.n	90006f12 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006e8c:	4b28      	ldr	r3, [pc, #160]	@ (90006f30 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006e8e:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90006e90:	4f28      	ldr	r7, [pc, #160]	@ (90006f34 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006e92:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90006f3c <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90006e96:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006e98:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006e9c:	681b      	ldr	r3, [r3, #0]
90006e9e:	4798      	blx	r3
90006ea0:	4606      	mov	r6, r0
90006ea2:	2800      	cmp	r0, #0
90006ea4:	d135      	bne.n	90006f12 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006ea6:	4c24      	ldr	r4, [pc, #144]	@ (90006f38 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006ea8:	a902      	add	r1, sp, #8
90006eaa:	6838      	ldr	r0, [r7, #0]
90006eac:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006eb0:	e9d5 7200 	ldrd	r7, r2, [r5]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006eb4:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006eb6:	e9c4 7200 	strd	r7, r2, [r4]
90006eba:	68aa      	ldr	r2, [r5, #8]
90006ebc:	60a2      	str	r2, [r4, #8]
90006ebe:	68ea      	ldr	r2, [r5, #12]
90006ec0:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006ec2:	4798      	blx	r3
90006ec4:	2800      	cmp	r0, #0
90006ec6:	db18      	blt.n	90006efa <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90006ec8:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90006ecc:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006ed0:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006ed2:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006ed6:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006ed8:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006eda:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006edc:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006ede:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006ee2:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006ee6:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006eea:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006eee:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006ef0:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
90006ef2:	4630      	mov	r0, r6
90006ef4:	b008      	add	sp, #32
90006ef6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90006efa:	f06f 0604 	mvn.w	r6, #4
}
90006efe:	4630      	mov	r0, r6
90006f00:	b008      	add	sp, #32
90006f02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90006f06:	f06f 0601 	mvn.w	r6, #1
}
90006f0a:	4630      	mov	r0, r6
90006f0c:	b008      	add	sp, #32
90006f0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90006f12:	f04f 36ff 	mov.w	r6, #4294967295
90006f16:	e7ec      	b.n	90006ef2 <BSP_TS_Init+0xce>
90006f18:	9000638d 	.word	0x9000638d
90006f1c:	240083a8 	.word	0x240083a8
90006f20:	900062f9 	.word	0x900062f9
90006f24:	90006b7d 	.word	0x90006b7d
90006f28:	90006b41 	.word	0x90006b41
90006f2c:	90006bb9 	.word	0x90006bb9
90006f30:	24000044 	.word	0x24000044
90006f34:	24008410 	.word	0x24008410
90006f38:	240083d0 	.word	0x240083d0
90006f3c:	24008414 	.word	0x24008414

90006f40 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90006f40:	2800      	cmp	r0, #0
90006f42:	d154      	bne.n	90006fee <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90006f44:	4b2b      	ldr	r3, [pc, #172]	@ (90006ff4 <BSP_TS_GetState+0xb4>)
90006f46:	4a2c      	ldr	r2, [pc, #176]	@ (90006ff8 <BSP_TS_GetState+0xb8>)
90006f48:	681b      	ldr	r3, [r3, #0]
90006f4a:	6810      	ldr	r0, [r2, #0]
90006f4c:	691b      	ldr	r3, [r3, #16]
{
90006f4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006f52:	b084      	sub	sp, #16
90006f54:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90006f56:	a901      	add	r1, sp, #4
90006f58:	4798      	blx	r3
90006f5a:	2800      	cmp	r0, #0
90006f5c:	db3f      	blt.n	90006fde <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90006f5e:	4b27      	ldr	r3, [pc, #156]	@ (90006ffc <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90006f60:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90006f62:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90006f64:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90006f66:	b930      	cbnz	r0, 90006f76 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90006f68:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90006f6a:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90006f6e:	2000      	movs	r0, #0
}
90006f70:	b004      	add	sp, #16
90006f72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90006f76:	689f      	ldr	r7, [r3, #8]
90006f78:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90006f7a:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90006f7e:	d433      	bmi.n	90006fe8 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90006f80:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90006f82:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006f84:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006f88:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006f8c:	d003      	beq.n	90006f96 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006f8e:	f10e 32ff 	add.w	r2, lr, #4294967295
90006f92:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90006f96:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90006f9a:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006f9c:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90006f9e:	bf48      	it	mi
90006fa0:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006fa4:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006fa8:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90006faa:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006fac:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006fb0:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006fb4:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006fb8:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006fba:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006fbc:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006fbe:	bf8c      	ite	hi
90006fc0:	1b90      	subhi	r0, r2, r6
90006fc2:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90006fc4:	42a9      	cmp	r1, r5
90006fc6:	bf8c      	ite	hi
90006fc8:	1b4f      	subhi	r7, r1, r5
90006fca:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90006fcc:	42b8      	cmp	r0, r7
90006fce:	bf38      	it	cc
90006fd0:	4638      	movcc	r0, r7
90006fd2:	68df      	ldr	r7, [r3, #12]
90006fd4:	4287      	cmp	r7, r0
90006fd6:	d2c8      	bcs.n	90006f6a <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90006fd8:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90006fda:	62d9      	str	r1, [r3, #44]	@ 0x2c
90006fdc:	e7c7      	b.n	90006f6e <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90006fde:	f06f 0004 	mvn.w	r0, #4
}
90006fe2:	b004      	add	sp, #16
90006fe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90006fe8:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90006fea:	4642      	mov	r2, r8
90006fec:	e7ca      	b.n	90006f84 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
90006fee:	f06f 0001 	mvn.w	r0, #1
}
90006ff2:	4770      	bx	lr
90006ff4:	24008414 	.word	0x24008414
90006ff8:	24008410 	.word	0x24008410
90006ffc:	240083d0 	.word	0x240083d0

90007000 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007000:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007002:	4c19      	ldr	r4, [pc, #100]	@ (90007068 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007004:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007006:	4b19      	ldr	r3, [pc, #100]	@ (9000706c <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007008:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
9000700c:	4818      	ldr	r0, [pc, #96]	@ (90007070 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000700e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
90007012:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
90007016:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007018:	4c16      	ldr	r4, [pc, #88]	@ (90007074 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
9000701a:	f041 0101 	orr.w	r1, r1, #1
9000701e:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90007020:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90007022:	6819      	ldr	r1, [r3, #0]
90007024:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007026:	4914      	ldr	r1, [pc, #80]	@ (90007078 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90007028:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
9000702a:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
9000702c:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
9000702e:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90007030:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90007032:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90007034:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90007036:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
90007038:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
9000703a:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
9000703c:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
9000703e:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90007040:	6818      	ldr	r0, [r3, #0]
90007042:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
90007046:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90007048:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000704a:	6823      	ldr	r3, [r4, #0]
9000704c:	4019      	ands	r1, r3
9000704e:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
90007052:	d203      	bcs.n	9000705c <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007054:	4b09      	ldr	r3, [pc, #36]	@ (9000707c <SystemInit+0x7c>)
90007056:	2201      	movs	r2, #1
90007058:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000705c:	4a08      	ldr	r2, [pc, #32]	@ (90007080 <SystemInit+0x80>)
9000705e:	4b02      	ldr	r3, [pc, #8]	@ (90007068 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90007060:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007064:	609a      	str	r2, [r3, #8]
}
90007066:	4770      	bx	lr
90007068:	e000ed00 	.word	0xe000ed00
9000706c:	58024400 	.word	0x58024400
90007070:	eaf6ed7f 	.word	0xeaf6ed7f
90007074:	5c001000 	.word	0x5c001000
90007078:	ffff0000 	.word	0xffff0000
9000707c:	51008000 	.word	0x51008000
90007080:	90000000 	.word	0x90000000

90007084 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90007084:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007086:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007088:	4c12      	ldr	r4, [pc, #72]	@ (900070d4 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000708a:	f000 f843 	bl	90007114 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000708e:	f003 fdb9 	bl	9000ac04 <HAL_RCC_GetSysClockFreq>
90007092:	4b11      	ldr	r3, [pc, #68]	@ (900070d8 <HAL_Init+0x54>)
90007094:	4911      	ldr	r1, [pc, #68]	@ (900070dc <HAL_Init+0x58>)
90007096:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007098:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000709a:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000709e:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900070a2:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900070a4:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900070a6:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
900070aa:	490d      	ldr	r1, [pc, #52]	@ (900070e0 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900070ac:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
900070b0:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900070b2:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
900070b6:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
900070b8:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
900070ba:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
900070bc:	f7fd f86a 	bl	90004194 <HAL_InitTick>
900070c0:	b110      	cbz	r0, 900070c8 <HAL_Init+0x44>
  {
    return HAL_ERROR;
900070c2:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
900070c4:	4620      	mov	r0, r4
900070c6:	bd10      	pop	{r4, pc}
900070c8:	4604      	mov	r4, r0
  HAL_MspInit();
900070ca:	f7fc fe21 	bl	90003d10 <HAL_MspInit>
}
900070ce:	4620      	mov	r0, r4
900070d0:	bd10      	pop	{r4, pc}
900070d2:	bf00      	nop
900070d4:	24000074 	.word	0x24000074
900070d8:	58024400 	.word	0x58024400
900070dc:	9002ba90 	.word	0x9002ba90
900070e0:	24000078 	.word	0x24000078

900070e4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
900070e4:	4a03      	ldr	r2, [pc, #12]	@ (900070f4 <HAL_IncTick+0x10>)
900070e6:	4b04      	ldr	r3, [pc, #16]	@ (900070f8 <HAL_IncTick+0x14>)
900070e8:	6811      	ldr	r1, [r2, #0]
900070ea:	781b      	ldrb	r3, [r3, #0]
900070ec:	440b      	add	r3, r1
900070ee:	6013      	str	r3, [r2, #0]
}
900070f0:	4770      	bx	lr
900070f2:	bf00      	nop
900070f4:	24008418 	.word	0x24008418
900070f8:	2400007c 	.word	0x2400007c

900070fc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
900070fc:	4b01      	ldr	r3, [pc, #4]	@ (90007104 <HAL_GetTick+0x8>)
900070fe:	6818      	ldr	r0, [r3, #0]
}
90007100:	4770      	bx	lr
90007102:	bf00      	nop
90007104:	24008418 	.word	0x24008418

90007108 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007108:	4b01      	ldr	r3, [pc, #4]	@ (90007110 <HAL_GetREVID+0x8>)
9000710a:	6818      	ldr	r0, [r3, #0]
}
9000710c:	0c00      	lsrs	r0, r0, #16
9000710e:	4770      	bx	lr
90007110:	5c001000 	.word	0x5c001000

90007114 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007114:	4906      	ldr	r1, [pc, #24]	@ (90007130 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007116:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000711a:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
9000711c:	4b05      	ldr	r3, [pc, #20]	@ (90007134 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000711e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007120:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007124:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90007128:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
9000712a:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
9000712c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
9000712e:	4770      	bx	lr
90007130:	e000ed00 	.word	0xe000ed00
90007134:	05fa0000 	.word	0x05fa0000

90007138 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90007138:	4b1a      	ldr	r3, [pc, #104]	@ (900071a4 <HAL_NVIC_SetPriority+0x6c>)
9000713a:	68db      	ldr	r3, [r3, #12]
9000713c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90007140:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007142:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007146:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000714a:	f1be 0f04 	cmp.w	lr, #4
9000714e:	bf28      	it	cs
90007150:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007154:	f1bc 0f06 	cmp.w	ip, #6
90007158:	d91a      	bls.n	90007190 <HAL_NVIC_SetPriority+0x58>
9000715a:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
9000715e:	f04f 33ff 	mov.w	r3, #4294967295
90007162:	fa03 f30c 	lsl.w	r3, r3, ip
90007166:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000716a:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
9000716e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007170:	fa03 f30e 	lsl.w	r3, r3, lr
90007174:	ea21 0303 	bic.w	r3, r1, r3
90007178:	fa03 f30c 	lsl.w	r3, r3, ip
9000717c:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007180:	ea4f 1303 	mov.w	r3, r3, lsl #4
90007184:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90007186:	db06      	blt.n	90007196 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007188:	4a07      	ldr	r2, [pc, #28]	@ (900071a8 <HAL_NVIC_SetPriority+0x70>)
9000718a:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
9000718c:	f85d fb04 	ldr.w	pc, [sp], #4
90007190:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007192:	4694      	mov	ip, r2
90007194:	e7e9      	b.n	9000716a <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007196:	f000 000f 	and.w	r0, r0, #15
9000719a:	4a04      	ldr	r2, [pc, #16]	@ (900071ac <HAL_NVIC_SetPriority+0x74>)
9000719c:	5413      	strb	r3, [r2, r0]
9000719e:	f85d fb04 	ldr.w	pc, [sp], #4
900071a2:	bf00      	nop
900071a4:	e000ed00 	.word	0xe000ed00
900071a8:	e000e400 	.word	0xe000e400
900071ac:	e000ed14 	.word	0xe000ed14

900071b0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
900071b0:	2800      	cmp	r0, #0
900071b2:	db07      	blt.n	900071c4 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900071b4:	2301      	movs	r3, #1
900071b6:	f000 011f 	and.w	r1, r0, #31
900071ba:	4a03      	ldr	r2, [pc, #12]	@ (900071c8 <HAL_NVIC_EnableIRQ+0x18>)
900071bc:	0940      	lsrs	r0, r0, #5
900071be:	408b      	lsls	r3, r1
900071c0:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
900071c4:	4770      	bx	lr
900071c6:	bf00      	nop
900071c8:	e000e100 	.word	0xe000e100

900071cc <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
900071cc:	2800      	cmp	r0, #0
900071ce:	db0c      	blt.n	900071ea <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900071d0:	0943      	lsrs	r3, r0, #5
900071d2:	2201      	movs	r2, #1
900071d4:	f000 001f 	and.w	r0, r0, #31
900071d8:	4904      	ldr	r1, [pc, #16]	@ (900071ec <HAL_NVIC_DisableIRQ+0x20>)
900071da:	3320      	adds	r3, #32
900071dc:	4082      	lsls	r2, r0
900071de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
900071e2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900071e6:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
900071ea:	4770      	bx	lr
900071ec:	e000e100 	.word	0xe000e100

900071f0 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
900071f0:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900071f4:	4b04      	ldr	r3, [pc, #16]	@ (90007208 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
900071f6:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900071f8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
900071fa:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
900071fe:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
90007200:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
90007204:	4770      	bx	lr
90007206:	bf00      	nop
90007208:	e000ed00 	.word	0xe000ed00

9000720c <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
9000720c:	4b06      	ldr	r3, [pc, #24]	@ (90007228 <HAL_MPU_Enable+0x1c>)
9000720e:	f040 0001 	orr.w	r0, r0, #1
90007212:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90007216:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007218:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000721c:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000721e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007222:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90007226:	4770      	bx	lr
90007228:	e000ed00 	.word	0xe000ed00

9000722c <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
9000722c:	4a16      	ldr	r2, [pc, #88]	@ (90007288 <HAL_MPU_ConfigRegion+0x5c>)
9000722e:	7843      	ldrb	r3, [r0, #1]
90007230:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
90007234:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
90007238:	f023 0301 	bic.w	r3, r3, #1
9000723c:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
90007240:	6843      	ldr	r3, [r0, #4]
90007242:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007246:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007248:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000724c:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
9000724e:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007250:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90007254:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007258:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000725a:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000725c:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90007260:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007264:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90007268:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000726a:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
9000726e:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007272:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90007276:	7a01      	ldrb	r1, [r0, #8]
90007278:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000727c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007280:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
90007284:	4770      	bx	lr
90007286:	bf00      	nop
90007288:	e000ed00 	.word	0xe000ed00

9000728c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
9000728c:	2800      	cmp	r0, #0
9000728e:	d036      	beq.n	900072fe <HAL_CRC_Init+0x72>
{
90007290:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90007292:	7f43      	ldrb	r3, [r0, #29]
90007294:	4604      	mov	r4, r0
90007296:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000729a:	b363      	cbz	r3, 900072f6 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
9000729c:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000729e:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
900072a0:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
900072a2:	b9f3      	cbnz	r3, 900072e2 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
900072a4:	6823      	ldr	r3, [r4, #0]
900072a6:	4a17      	ldr	r2, [pc, #92]	@ (90007304 <HAL_CRC_Init+0x78>)
900072a8:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
900072aa:	689a      	ldr	r2, [r3, #8]
900072ac:	f022 0218 	bic.w	r2, r2, #24
900072b0:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
900072b2:	7962      	ldrb	r2, [r4, #5]
900072b4:	b18a      	cbz	r2, 900072da <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
900072b6:	6922      	ldr	r2, [r4, #16]
900072b8:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
900072ba:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900072bc:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
900072c0:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
900072c4:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
900072c6:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
900072c8:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900072ca:	689a      	ldr	r2, [r3, #8]
900072cc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
900072d0:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
900072d2:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900072d4:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
900072d6:	7761      	strb	r1, [r4, #29]
}
900072d8:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
900072da:	f04f 32ff 	mov.w	r2, #4294967295
900072de:	611a      	str	r2, [r3, #16]
900072e0:	e7eb      	b.n	900072ba <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
900072e2:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
900072e6:	4620      	mov	r0, r4
900072e8:	f000 f80e 	bl	90007308 <HAL_CRCEx_Polynomial_Set>
900072ec:	b908      	cbnz	r0, 900072f2 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
900072ee:	6823      	ldr	r3, [r4, #0]
900072f0:	e7df      	b.n	900072b2 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
900072f2:	2001      	movs	r0, #1
}
900072f4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
900072f6:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
900072f8:	f7fc fd24 	bl	90003d44 <HAL_CRC_MspInit>
900072fc:	e7ce      	b.n	9000729c <HAL_CRC_Init+0x10>
    return HAL_ERROR;
900072fe:	2001      	movs	r0, #1
}
90007300:	4770      	bx	lr
90007302:	bf00      	nop
90007304:	04c11db7 	.word	0x04c11db7

90007308 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90007308:	07cb      	lsls	r3, r1, #31
9000730a:	d51a      	bpl.n	90007342 <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
9000730c:	231f      	movs	r3, #31
{
9000730e:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90007310:	3b01      	subs	r3, #1
90007312:	1c5c      	adds	r4, r3, #1
90007314:	fa21 fc03 	lsr.w	ip, r1, r3
90007318:	d015      	beq.n	90007346 <HAL_CRCEx_Polynomial_Set+0x3e>
9000731a:	f01c 0f01 	tst.w	ip, #1
9000731e:	d0f7      	beq.n	90007310 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
90007320:	2a18      	cmp	r2, #24
90007322:	d811      	bhi.n	90007348 <HAL_CRCEx_Polynomial_Set+0x40>
90007324:	e8df f002 	tbb	[pc, r2]
90007328:	10101016 	.word	0x10101016
9000732c:	10101010 	.word	0x10101010
90007330:	10101024 	.word	0x10101024
90007334:	10101010 	.word	0x10101010
90007338:	10101021 	.word	0x10101021
9000733c:	10101010 	.word	0x10101010
90007340:	14          	.byte	0x14
90007341:	00          	.byte	0x00
90007342:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90007344:	4770      	bx	lr
    switch (PolyLength)
90007346:	b12a      	cbz	r2, 90007354 <HAL_CRCEx_Polynomial_Set+0x4c>
90007348:	2001      	movs	r0, #1
}
9000734a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000734e:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90007350:	2b06      	cmp	r3, #6
90007352:	d8f9      	bhi.n	90007348 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90007354:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007356:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90007358:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000735a:	68a3      	ldr	r3, [r4, #8]
9000735c:	f023 0318 	bic.w	r3, r3, #24
90007360:	4313      	orrs	r3, r2
90007362:	60a3      	str	r3, [r4, #8]
}
90007364:	f85d 4b04 	ldr.w	r4, [sp], #4
90007368:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000736a:	2b07      	cmp	r3, #7
9000736c:	d9f2      	bls.n	90007354 <HAL_CRCEx_Polynomial_Set+0x4c>
9000736e:	e7eb      	b.n	90007348 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90007370:	2b0f      	cmp	r3, #15
90007372:	d9ef      	bls.n	90007354 <HAL_CRCEx_Polynomial_Set+0x4c>
90007374:	e7e8      	b.n	90007348 <HAL_CRCEx_Polynomial_Set+0x40>
90007376:	bf00      	nop

90007378 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90007378:	2800      	cmp	r0, #0
9000737a:	d035      	beq.n	900073e8 <HAL_DMA2D_Init+0x70>
{
9000737c:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000737e:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
90007382:	4604      	mov	r4, r0
90007384:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007388:	b34b      	cbz	r3, 900073de <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000738a:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000738c:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000738e:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007390:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007394:	69e1      	ldr	r1, [r4, #28]
90007396:	681d      	ldr	r5, [r3, #0]
90007398:	4814      	ldr	r0, [pc, #80]	@ (900073ec <HAL_DMA2D_Init+0x74>)
9000739a:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000739c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000739e:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900073a0:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900073a2:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900073a4:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900073a6:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900073a8:	4302      	orrs	r2, r0
900073aa:	6b59      	ldr	r1, [r3, #52]	@ 0x34
900073ac:	4810      	ldr	r0, [pc, #64]	@ (900073f0 <HAL_DMA2D_Init+0x78>)
900073ae:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900073b0:	4910      	ldr	r1, [pc, #64]	@ (900073f4 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900073b2:	4302      	orrs	r2, r0
900073b4:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900073b6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
900073b8:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900073ba:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900073be:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900073c0:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900073c2:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900073c4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
900073c6:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900073ca:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900073cc:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
900073d0:	430a      	orrs	r2, r1
900073d2:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900073d4:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900073d6:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900073d8:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
900073dc:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
900073de:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
900073e2:	f7fc fcc7 	bl	90003d74 <HAL_DMA2D_MspInit>
900073e6:	e7d0      	b.n	9000738a <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
900073e8:	2001      	movs	r0, #1
}
900073ea:	4770      	bx	lr
900073ec:	fff8ffbf 	.word	0xfff8ffbf
900073f0:	fffffef8 	.word	0xfffffef8
900073f4:	ffff0000 	.word	0xffff0000

900073f8 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
900073f8:	4770      	bx	lr
900073fa:	bf00      	nop

900073fc <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
900073fc:	4770      	bx	lr
900073fe:	bf00      	nop

90007400 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007400:	6803      	ldr	r3, [r0, #0]
{
90007402:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007404:	685d      	ldr	r5, [r3, #4]
{
90007406:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007408:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
9000740a:	07ea      	lsls	r2, r5, #31
9000740c:	d501      	bpl.n	90007412 <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
9000740e:	05f1      	lsls	r1, r6, #23
90007410:	d456      	bmi.n	900074c0 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90007412:	06aa      	lsls	r2, r5, #26
90007414:	d501      	bpl.n	9000741a <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
90007416:	04b3      	lsls	r3, r6, #18
90007418:	d43b      	bmi.n	90007492 <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
9000741a:	0728      	lsls	r0, r5, #28
9000741c:	d501      	bpl.n	90007422 <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000741e:	0531      	lsls	r1, r6, #20
90007420:	d421      	bmi.n	90007466 <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90007422:	076a      	lsls	r2, r5, #29
90007424:	d501      	bpl.n	9000742a <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
90007426:	0573      	lsls	r3, r6, #21
90007428:	d472      	bmi.n	90007510 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
9000742a:	07a8      	lsls	r0, r5, #30
9000742c:	d501      	bpl.n	90007432 <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
9000742e:	05b1      	lsls	r1, r6, #22
90007430:	d404      	bmi.n	9000743c <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90007432:	06ea      	lsls	r2, r5, #27
90007434:	d501      	bpl.n	9000743a <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90007436:	04f3      	lsls	r3, r6, #19
90007438:	d457      	bmi.n	900074ea <HAL_DMA2D_IRQHandler+0xea>
}
9000743a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
9000743c:	6823      	ldr	r3, [r4, #0]
9000743e:	681a      	ldr	r2, [r3, #0]
90007440:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90007444:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90007446:	2202      	movs	r2, #2
90007448:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000744a:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000744c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000744e:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90007450:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007452:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007456:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000745a:	6a23      	ldr	r3, [r4, #32]
9000745c:	2b00      	cmp	r3, #0
9000745e:	d0e8      	beq.n	90007432 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90007460:	4620      	mov	r0, r4
90007462:	4798      	blx	r3
90007464:	e7e5      	b.n	90007432 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90007466:	6823      	ldr	r3, [r4, #0]
90007468:	681a      	ldr	r2, [r3, #0]
9000746a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
9000746e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90007470:	2208      	movs	r2, #8
90007472:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007474:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90007476:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007478:	4313      	orrs	r3, r2
9000747a:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000747c:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007480:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007482:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90007484:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007488:	2b00      	cmp	r3, #0
9000748a:	d0ca      	beq.n	90007422 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
9000748c:	4620      	mov	r0, r4
9000748e:	4798      	blx	r3
90007490:	e7c7      	b.n	90007422 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90007492:	6823      	ldr	r3, [r4, #0]
90007494:	681a      	ldr	r2, [r3, #0]
90007496:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000749a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
9000749c:	2220      	movs	r2, #32
9000749e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900074a0:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
900074a2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900074a4:	f043 0302 	orr.w	r3, r3, #2
900074a8:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900074aa:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900074ae:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900074b0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900074b2:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900074b6:	2b00      	cmp	r3, #0
900074b8:	d0af      	beq.n	9000741a <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
900074ba:	4620      	mov	r0, r4
900074bc:	4798      	blx	r3
900074be:	e7ac      	b.n	9000741a <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
900074c0:	681a      	ldr	r2, [r3, #0]
900074c2:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
900074c6:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
900074c8:	6e42      	ldr	r2, [r0, #100]	@ 0x64
900074ca:	f042 0201 	orr.w	r2, r2, #1
900074ce:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
900074d0:	2201      	movs	r2, #1
900074d2:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900074d4:	2304      	movs	r3, #4
900074d6:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900074da:	2300      	movs	r3, #0
900074dc:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900074e0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900074e2:	2b00      	cmp	r3, #0
900074e4:	d095      	beq.n	90007412 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
900074e6:	4798      	blx	r3
900074e8:	e793      	b.n	90007412 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900074ea:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900074ec:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
900074ee:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
900074f0:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900074f2:	681a      	ldr	r2, [r3, #0]
900074f4:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
900074f8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900074fa:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900074fc:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900074fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90007500:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007504:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007506:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000750a:	f7ff ff77 	bl	900073fc <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000750e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007510:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007512:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007514:	681a      	ldr	r2, [r3, #0]
90007516:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
9000751a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
9000751c:	2204      	movs	r2, #4
9000751e:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007520:	f7ff ff6a 	bl	900073f8 <HAL_DMA2D_LineEventCallback>
90007524:	e781      	b.n	9000742a <HAL_DMA2D_IRQHandler+0x2a>
90007526:	bf00      	nop

90007528 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90007528:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
9000752c:	2a01      	cmp	r2, #1
9000752e:	d05f      	beq.n	900075f0 <HAL_DMA2D_ConfigLayer+0xc8>
90007530:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007532:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007536:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007538:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
9000753c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90007540:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
90007542:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007544:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90007548:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000754c:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000754e:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90007550:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007552:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007554:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007556:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000755a:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000755e:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007560:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007562:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007566:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000756a:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000756c:	d923      	bls.n	900075b6 <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000756e:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007572:	b971      	cbnz	r1, 90007592 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007574:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007576:	491f      	ldr	r1, [pc, #124]	@ (900075f4 <HAL_DMA2D_ConfigLayer+0xcc>)
90007578:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000757a:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000757c:	4311      	orrs	r1, r2
9000757e:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007580:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90007582:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007584:	2101      	movs	r1, #1

  return HAL_OK;
90007586:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007588:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
9000758c:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
90007590:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90007592:	2d0b      	cmp	r5, #11
90007594:	d12a      	bne.n	900075ec <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90007596:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90007598:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
9000759c:	4816      	ldr	r0, [pc, #88]	@ (900075f8 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000759e:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900075a2:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900075a4:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900075a8:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900075aa:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900075ae:	430a      	orrs	r2, r1
900075b0:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900075b2:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900075b4:	e7e5      	b.n	90007582 <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900075b6:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
900075ba:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900075bc:	b959      	cbnz	r1, 900075d6 <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900075be:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900075c0:	490c      	ldr	r1, [pc, #48]	@ (900075f4 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900075c2:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900075c4:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900075c6:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900075c8:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900075ca:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900075ce:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900075d0:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900075d2:	62a0      	str	r0, [r4, #40]	@ 0x28
900075d4:	e7d5      	b.n	90007582 <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900075d6:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900075d8:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900075dc:	4905      	ldr	r1, [pc, #20]	@ (900075f4 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900075de:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900075e0:	4029      	ands	r1, r5
900075e2:	4311      	orrs	r1, r2
900075e4:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900075e6:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900075e8:	6226      	str	r6, [r4, #32]
900075ea:	e7ca      	b.n	90007582 <HAL_DMA2D_ConfigLayer+0x5a>
900075ec:	4801      	ldr	r0, [pc, #4]	@ (900075f4 <HAL_DMA2D_ConfigLayer+0xcc>)
900075ee:	e7d6      	b.n	9000759e <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
900075f0:	2002      	movs	r0, #2
}
900075f2:	4770      	bx	lr
900075f4:	00ccfff0 	.word	0x00ccfff0
900075f8:	00c0fff0 	.word	0x00c0fff0

900075fc <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
900075fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007600:	680c      	ldr	r4, [r1, #0]
{
90007602:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007604:	2c00      	cmp	r4, #0
90007606:	f000 80a5 	beq.w	90007754 <HAL_GPIO_Init+0x158>
  uint32_t position = 0x00U;
9000760a:	2300      	movs	r3, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000760c:	f04f 0b01 	mov.w	fp, #1
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90007610:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007614:	9100      	str	r1, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007616:	fa0b fc03 	lsl.w	ip, fp, r3
    if (iocurrent != 0x00U)
9000761a:	ea1c 0a04 	ands.w	sl, ip, r4
9000761e:	f000 8094 	beq.w	9000774a <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007622:	9900      	ldr	r1, [sp, #0]
90007624:	005f      	lsls	r7, r3, #1
90007626:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007628:	2103      	movs	r1, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000762a:	f005 0203 	and.w	r2, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000762e:	fa01 f607 	lsl.w	r6, r1, r7
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007632:	f102 38ff 	add.w	r8, r2, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007636:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007638:	f1b8 0f01 	cmp.w	r8, #1
9000763c:	f240 808d 	bls.w	9000775a <HAL_GPIO_Init+0x15e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007640:	2a03      	cmp	r2, #3
90007642:	f040 80cb 	bne.w	900077dc <HAL_GPIO_Init+0x1e0>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007646:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
90007648:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000764a:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
9000764e:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007652:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90007656:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007658:	d077      	beq.n	9000774a <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000765a:	4e7f      	ldr	r6, [pc, #508]	@ (90007858 <HAL_GPIO_Init+0x25c>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000765c:	f003 0703 	and.w	r7, r3, #3
90007660:	210f      	movs	r1, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007662:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007666:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007668:	f042 0202 	orr.w	r2, r2, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000766c:	fa01 fc07 	lsl.w	ip, r1, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007670:	497a      	ldr	r1, [pc, #488]	@ (9000785c <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007672:	f8c6 20f4 	str.w	r2, [r6, #244]	@ 0xf4
90007676:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
9000767a:	f023 0603 	bic.w	r6, r3, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000767e:	4288      	cmp	r0, r1
90007680:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007684:	f002 0202 	and.w	r2, r2, #2
90007688:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000768c:	9203      	str	r2, [sp, #12]
9000768e:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
90007690:	68b2      	ldr	r2, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007692:	ea22 020c 	bic.w	r2, r2, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007696:	d031      	beq.n	900076fc <HAL_GPIO_Init+0x100>
90007698:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000769c:	4288      	cmp	r0, r1
9000769e:	f000 80b0 	beq.w	90007802 <HAL_GPIO_Init+0x206>
900076a2:	496f      	ldr	r1, [pc, #444]	@ (90007860 <HAL_GPIO_Init+0x264>)
900076a4:	4288      	cmp	r0, r1
900076a6:	f000 80b2 	beq.w	9000780e <HAL_GPIO_Init+0x212>
900076aa:	f8df c1b8 	ldr.w	ip, [pc, #440]	@ 90007864 <HAL_GPIO_Init+0x268>
900076ae:	4560      	cmp	r0, ip
900076b0:	f000 80a1 	beq.w	900077f6 <HAL_GPIO_Init+0x1fa>
900076b4:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 90007868 <HAL_GPIO_Init+0x26c>
900076b8:	4560      	cmp	r0, ip
900076ba:	f000 80b4 	beq.w	90007826 <HAL_GPIO_Init+0x22a>
900076be:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 9000786c <HAL_GPIO_Init+0x270>
900076c2:	4560      	cmp	r0, ip
900076c4:	f000 80b5 	beq.w	90007832 <HAL_GPIO_Init+0x236>
900076c8:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 90007870 <HAL_GPIO_Init+0x274>
900076cc:	4560      	cmp	r0, ip
900076ce:	f000 80a4 	beq.w	9000781a <HAL_GPIO_Init+0x21e>
900076d2:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 90007874 <HAL_GPIO_Init+0x278>
900076d6:	4560      	cmp	r0, ip
900076d8:	f000 80b1 	beq.w	9000783e <HAL_GPIO_Init+0x242>
900076dc:	f8df c198 	ldr.w	ip, [pc, #408]	@ 90007878 <HAL_GPIO_Init+0x27c>
900076e0:	4560      	cmp	r0, ip
900076e2:	f000 80b2 	beq.w	9000784a <HAL_GPIO_Init+0x24e>
900076e6:	f8df c194 	ldr.w	ip, [pc, #404]	@ 9000787c <HAL_GPIO_Init+0x280>
900076ea:	4560      	cmp	r0, ip
900076ec:	bf0c      	ite	eq
900076ee:	f04f 0c09 	moveq.w	ip, #9
900076f2:	f04f 0c0a 	movne.w	ip, #10
900076f6:	fa0c f707 	lsl.w	r7, ip, r7
900076fa:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
900076fc:	60b2      	str	r2, [r6, #8]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900076fe:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
90007700:	f8de 2000 	ldr.w	r2, [lr]
        temp &= ~(iocurrent);
90007704:	ea6f 060a 	mvn.w	r6, sl
        {
          temp |= iocurrent;
90007708:	bf4c      	ite	mi
9000770a:	ea4a 0202 	orrmi.w	r2, sl, r2
        temp &= ~(iocurrent);
9000770e:	4032      	andpl	r2, r6
        }
        EXTI->RTSR1 = temp;

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90007710:	02a9      	lsls	r1, r5, #10
        EXTI->RTSR1 = temp;
90007712:	f8ce 2000 	str.w	r2, [lr]
        temp = EXTI->FTSR1;
90007716:	f8de 2004 	ldr.w	r2, [lr, #4]
        temp &= ~(iocurrent);
9000771a:	bf54      	ite	pl
9000771c:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
9000771e:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->FTSR1 = temp;

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90007722:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
90007724:	f8ce 2004 	str.w	r2, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
90007728:	f8de 2084 	ldr.w	r2, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
9000772c:	bf54      	ite	pl
9000772e:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90007730:	ea4a 0202 	orrmi.w	r2, sl, r2
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90007734:	03e9      	lsls	r1, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
90007736:	f8ce 2084 	str.w	r2, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000773a:	f8de 2080 	ldr.w	r2, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
9000773e:	bf54      	ite	pl
90007740:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90007742:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI_CurrentCPU->IMR1 = temp;
90007746:	f8ce 2080 	str.w	r2, [lr, #128]	@ 0x80
      }
    }

    position++;
9000774a:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000774c:	fa34 f203 	lsrs.w	r2, r4, r3
90007750:	f47f af61 	bne.w	90007616 <HAL_GPIO_Init+0x1a>
  }
}
90007754:	b005      	add	sp, #20
90007756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
9000775a:	9900      	ldr	r1, [sp, #0]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000775c:	2a02      	cmp	r2, #2
        temp = GPIOx->OSPEEDR;
9000775e:	f8d0 9008 	ldr.w	r9, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
90007762:	68c9      	ldr	r1, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007764:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
90007768:	fa01 f807 	lsl.w	r8, r1, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000776c:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_Init->Speed << (position * 2U));
9000776e:	ea48 0809 	orr.w	r8, r8, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007772:	6889      	ldr	r1, [r1, #8]
        GPIOx->OSPEEDR = temp;
90007774:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007778:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
9000777c:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007780:	fa08 f803 	lsl.w	r8, r8, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007784:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007788:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
9000778c:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007790:	fa01 fc07 	lsl.w	ip, r1, r7
      temp = GPIOx->PUPDR;
90007794:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007798:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000779c:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900077a0:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900077a4:	f47f af4f 	bne.w	90007646 <HAL_GPIO_Init+0x4a>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900077a8:	f003 0c07 	and.w	ip, r3, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900077ac:	9900      	ldr	r1, [sp, #0]
        temp = GPIOx->AFR[position >> 3U];
900077ae:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900077b2:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900077b6:	6909      	ldr	r1, [r1, #16]
900077b8:	eb00 0888 	add.w	r8, r0, r8, lsl #2
900077bc:	fa01 f10c 	lsl.w	r1, r1, ip
        temp = GPIOx->AFR[position >> 3U];
900077c0:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900077c4:	9101      	str	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900077c6:	210f      	movs	r1, #15
900077c8:	fa01 fc0c 	lsl.w	ip, r1, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900077cc:	9901      	ldr	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900077ce:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900077d2:	ea41 0c09 	orr.w	ip, r1, r9
        GPIOx->AFR[position >> 3U] = temp;
900077d6:	f8c8 c020 	str.w	ip, [r8, #32]
900077da:	e734      	b.n	90007646 <HAL_GPIO_Init+0x4a>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900077dc:	9900      	ldr	r1, [sp, #0]
      temp = GPIOx->PUPDR;
900077de:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900077e2:	6889      	ldr	r1, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900077e4:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900077e8:	fa01 fc07 	lsl.w	ip, r1, r7
900077ec:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900077f0:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900077f4:	e727      	b.n	90007646 <HAL_GPIO_Init+0x4a>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900077f6:	f04f 0c03 	mov.w	ip, #3
900077fa:	fa0c f707 	lsl.w	r7, ip, r7
900077fe:	433a      	orrs	r2, r7
90007800:	e77c      	b.n	900076fc <HAL_GPIO_Init+0x100>
90007802:	f04f 0c01 	mov.w	ip, #1
90007806:	fa0c f707 	lsl.w	r7, ip, r7
9000780a:	433a      	orrs	r2, r7
9000780c:	e776      	b.n	900076fc <HAL_GPIO_Init+0x100>
9000780e:	f04f 0c02 	mov.w	ip, #2
90007812:	fa0c f707 	lsl.w	r7, ip, r7
90007816:	433a      	orrs	r2, r7
90007818:	e770      	b.n	900076fc <HAL_GPIO_Init+0x100>
9000781a:	f04f 0c06 	mov.w	ip, #6
9000781e:	fa0c f707 	lsl.w	r7, ip, r7
90007822:	433a      	orrs	r2, r7
90007824:	e76a      	b.n	900076fc <HAL_GPIO_Init+0x100>
90007826:	f04f 0c04 	mov.w	ip, #4
9000782a:	fa0c f707 	lsl.w	r7, ip, r7
9000782e:	433a      	orrs	r2, r7
90007830:	e764      	b.n	900076fc <HAL_GPIO_Init+0x100>
90007832:	f04f 0c05 	mov.w	ip, #5
90007836:	fa0c f707 	lsl.w	r7, ip, r7
9000783a:	433a      	orrs	r2, r7
9000783c:	e75e      	b.n	900076fc <HAL_GPIO_Init+0x100>
9000783e:	f04f 0c07 	mov.w	ip, #7
90007842:	fa0c f707 	lsl.w	r7, ip, r7
90007846:	433a      	orrs	r2, r7
90007848:	e758      	b.n	900076fc <HAL_GPIO_Init+0x100>
9000784a:	f04f 0c08 	mov.w	ip, #8
9000784e:	fa0c f707 	lsl.w	r7, ip, r7
90007852:	433a      	orrs	r2, r7
90007854:	e752      	b.n	900076fc <HAL_GPIO_Init+0x100>
90007856:	bf00      	nop
90007858:	58024400 	.word	0x58024400
9000785c:	58020000 	.word	0x58020000
90007860:	58020800 	.word	0x58020800
90007864:	58020c00 	.word	0x58020c00
90007868:	58021000 	.word	0x58021000
9000786c:	58021400 	.word	0x58021400
90007870:	58021800 	.word	0x58021800
90007874:	58021c00 	.word	0x58021c00
90007878:	58022000 	.word	0x58022000
9000787c:	58022400 	.word	0x58022400

90007880 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90007880:	2900      	cmp	r1, #0
90007882:	f000 80ac 	beq.w	900079de <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
90007886:	2300      	movs	r3, #0
{
90007888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
9000788c:	2601      	movs	r6, #1
{
9000788e:	b083      	sub	sp, #12
90007890:	f8df a168 	ldr.w	sl, [pc, #360]	@ 900079fc <HAL_GPIO_DeInit+0x17c>
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007894:	f04f 080f 	mov.w	r8, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007898:	f04f 0903 	mov.w	r9, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
9000789c:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0x00U)
900078a0:	ea12 0c01 	ands.w	ip, r2, r1
900078a4:	d073      	beq.n	9000798e <HAL_GPIO_DeInit+0x10e>
      tmp = SYSCFG->EXTICR[position >> 2U];
900078a6:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900078aa:	f003 0403 	and.w	r4, r3, #3
900078ae:	4455      	add	r5, sl
900078b0:	00a4      	lsls	r4, r4, #2
      tmp = SYSCFG->EXTICR[position >> 2U];
900078b2:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900078b4:	fa08 fe04 	lsl.w	lr, r8, r4
900078b8:	ea0e 0707 	and.w	r7, lr, r7
900078bc:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900078be:	4f4b      	ldr	r7, [pc, #300]	@ (900079ec <HAL_GPIO_DeInit+0x16c>)
900078c0:	42b8      	cmp	r0, r7
900078c2:	d027      	beq.n	90007914 <HAL_GPIO_DeInit+0x94>
900078c4:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
900078c8:	42b8      	cmp	r0, r7
900078ca:	d067      	beq.n	9000799c <HAL_GPIO_DeInit+0x11c>
900078cc:	4f48      	ldr	r7, [pc, #288]	@ (900079f0 <HAL_GPIO_DeInit+0x170>)
900078ce:	42b8      	cmp	r0, r7
900078d0:	d067      	beq.n	900079a2 <HAL_GPIO_DeInit+0x122>
900078d2:	4f48      	ldr	r7, [pc, #288]	@ (900079f4 <HAL_GPIO_DeInit+0x174>)
900078d4:	42b8      	cmp	r0, r7
900078d6:	d06e      	beq.n	900079b6 <HAL_GPIO_DeInit+0x136>
900078d8:	4f47      	ldr	r7, [pc, #284]	@ (900079f8 <HAL_GPIO_DeInit+0x178>)
900078da:	42b8      	cmp	r0, r7
900078dc:	d070      	beq.n	900079c0 <HAL_GPIO_DeInit+0x140>
900078de:	f8df b120 	ldr.w	fp, [pc, #288]	@ 90007a00 <HAL_GPIO_DeInit+0x180>
900078e2:	4558      	cmp	r0, fp
900078e4:	d062      	beq.n	900079ac <HAL_GPIO_DeInit+0x12c>
900078e6:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 90007a04 <HAL_GPIO_DeInit+0x184>
900078ea:	4558      	cmp	r0, fp
900078ec:	d072      	beq.n	900079d4 <HAL_GPIO_DeInit+0x154>
900078ee:	f8df b118 	ldr.w	fp, [pc, #280]	@ 90007a08 <HAL_GPIO_DeInit+0x188>
900078f2:	4558      	cmp	r0, fp
900078f4:	d074      	beq.n	900079e0 <HAL_GPIO_DeInit+0x160>
900078f6:	f8df b114 	ldr.w	fp, [pc, #276]	@ 90007a0c <HAL_GPIO_DeInit+0x18c>
900078fa:	4558      	cmp	r0, fp
900078fc:	d065      	beq.n	900079ca <HAL_GPIO_DeInit+0x14a>
900078fe:	f8df b110 	ldr.w	fp, [pc, #272]	@ 90007a10 <HAL_GPIO_DeInit+0x190>
90007902:	4558      	cmp	r0, fp
90007904:	bf14      	ite	ne
90007906:	f04f 0b0a 	movne.w	fp, #10
9000790a:	f04f 0b09 	moveq.w	fp, #9
9000790e:	fa0b f404 	lsl.w	r4, fp, r4
90007912:	e000      	b.n	90007916 <HAL_GPIO_DeInit+0x96>
90007914:	2400      	movs	r4, #0
90007916:	9f01      	ldr	r7, [sp, #4]
90007918:	42a7      	cmp	r7, r4
9000791a:	d119      	bne.n	90007950 <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000791c:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
90007920:	f8d4 7080 	ldr.w	r7, [r4, #128]	@ 0x80
90007924:	ea27 070c 	bic.w	r7, r7, ip
90007928:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000792c:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
90007930:	ea27 070c 	bic.w	r7, r7, ip
90007934:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90007938:	6867      	ldr	r7, [r4, #4]
9000793a:	ea27 070c 	bic.w	r7, r7, ip
9000793e:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007940:	6827      	ldr	r7, [r4, #0]
90007942:	ea27 070c 	bic.w	r7, r7, ip
90007946:	6027      	str	r7, [r4, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90007948:	68ac      	ldr	r4, [r5, #8]
9000794a:	ea24 040e 	bic.w	r4, r4, lr
9000794e:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007950:	005d      	lsls	r5, r3, #1
90007952:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007954:	08df      	lsrs	r7, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007956:	fa09 f505 	lsl.w	r5, r9, r5
9000795a:	eb00 0787 	add.w	r7, r0, r7, lsl #2
9000795e:	432c      	orrs	r4, r5
90007960:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007962:	f003 0407 	and.w	r4, r3, #7
90007966:	f8d7 c020 	ldr.w	ip, [r7, #32]
9000796a:	00a4      	lsls	r4, r4, #2
9000796c:	fa08 f404 	lsl.w	r4, r8, r4
90007970:	ea2c 0404 	bic.w	r4, ip, r4
90007974:	623c      	str	r4, [r7, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007976:	68c4      	ldr	r4, [r0, #12]
90007978:	ea24 0405 	bic.w	r4, r4, r5
9000797c:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000797e:	6844      	ldr	r4, [r0, #4]
90007980:	ea24 0202 	bic.w	r2, r4, r2
90007984:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007986:	6882      	ldr	r2, [r0, #8]
90007988:	ea22 0205 	bic.w	r2, r2, r5
9000798c:	6082      	str	r2, [r0, #8]
    }

    position++;
9000798e:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90007990:	fa31 f203 	lsrs.w	r2, r1, r3
90007994:	d182      	bne.n	9000789c <HAL_GPIO_DeInit+0x1c>
  }
}
90007996:	b003      	add	sp, #12
90007998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000799c:	fa06 f404 	lsl.w	r4, r6, r4
900079a0:	e7b9      	b.n	90007916 <HAL_GPIO_DeInit+0x96>
900079a2:	f04f 0b02 	mov.w	fp, #2
900079a6:	fa0b f404 	lsl.w	r4, fp, r4
900079aa:	e7b4      	b.n	90007916 <HAL_GPIO_DeInit+0x96>
900079ac:	f04f 0b05 	mov.w	fp, #5
900079b0:	fa0b f404 	lsl.w	r4, fp, r4
900079b4:	e7af      	b.n	90007916 <HAL_GPIO_DeInit+0x96>
900079b6:	f04f 0b03 	mov.w	fp, #3
900079ba:	fa0b f404 	lsl.w	r4, fp, r4
900079be:	e7aa      	b.n	90007916 <HAL_GPIO_DeInit+0x96>
900079c0:	f04f 0b04 	mov.w	fp, #4
900079c4:	fa0b f404 	lsl.w	r4, fp, r4
900079c8:	e7a5      	b.n	90007916 <HAL_GPIO_DeInit+0x96>
900079ca:	f04f 0b08 	mov.w	fp, #8
900079ce:	fa0b f404 	lsl.w	r4, fp, r4
900079d2:	e7a0      	b.n	90007916 <HAL_GPIO_DeInit+0x96>
900079d4:	f04f 0b06 	mov.w	fp, #6
900079d8:	fa0b f404 	lsl.w	r4, fp, r4
900079dc:	e79b      	b.n	90007916 <HAL_GPIO_DeInit+0x96>
900079de:	4770      	bx	lr
900079e0:	f04f 0b07 	mov.w	fp, #7
900079e4:	fa0b f404 	lsl.w	r4, fp, r4
900079e8:	e795      	b.n	90007916 <HAL_GPIO_DeInit+0x96>
900079ea:	bf00      	nop
900079ec:	58020000 	.word	0x58020000
900079f0:	58020800 	.word	0x58020800
900079f4:	58020c00 	.word	0x58020c00
900079f8:	58021000 	.word	0x58021000
900079fc:	58000400 	.word	0x58000400
90007a00:	58021400 	.word	0x58021400
90007a04:	58021800 	.word	0x58021800
90007a08:	58021c00 	.word	0x58021c00
90007a0c:	58022000 	.word	0x58022000
90007a10:	58022400 	.word	0x58022400

90007a14 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90007a14:	6903      	ldr	r3, [r0, #16]
90007a16:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90007a18:	bf14      	ite	ne
90007a1a:	2001      	movne	r0, #1
90007a1c:	2000      	moveq	r0, #0
90007a1e:	4770      	bx	lr

90007a20 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90007a20:	b902      	cbnz	r2, 90007a24 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90007a22:	0409      	lsls	r1, r1, #16
90007a24:	6181      	str	r1, [r0, #24]
  }
}
90007a26:	4770      	bx	lr

90007a28 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90007a28:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90007a2a:	ea01 0203 	and.w	r2, r1, r3
90007a2e:	ea21 0103 	bic.w	r1, r1, r3
90007a32:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
90007a36:	6181      	str	r1, [r0, #24]
}
90007a38:	4770      	bx	lr
90007a3a:	bf00      	nop

90007a3c <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @param  Status The actual Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
90007a3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007a40:	6803      	ldr	r3, [r0, #0]
90007a42:	699a      	ldr	r2, [r3, #24]
90007a44:	0414      	lsls	r4, r2, #16
90007a46:	f140 8088 	bpl.w	90007b5a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11e>
90007a4a:	4604      	mov	r4, r0
90007a4c:	4688      	mov	r8, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007a4e:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007a52:	699e      	ldr	r6, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007a54:	f016 0610 	ands.w	r6, r6, #16
90007a58:	f000 8082 	beq.w	90007b60 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x124>
  uint32_t error_code = 0;
90007a5c:	2600      	movs	r6, #0
  uint32_t tickstart = Tickstart;
90007a5e:	4645      	mov	r5, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007a60:	f8c3 901c 	str.w	r9, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90007a64:	4637      	mov	r7, r6

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007a66:	699a      	ldr	r2, [r3, #24]
90007a68:	0692      	lsls	r2, r2, #26
90007a6a:	d427      	bmi.n	90007abc <I2C_WaitOnFlagUntilTimeout.constprop.0+0x80>
90007a6c:	bb4f      	cbnz	r7, 90007ac2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007a6e:	f7ff fb45 	bl	900070fc <HAL_GetTick>
90007a72:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007a74:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007a76:	2819      	cmp	r0, #25
90007a78:	d9f5      	bls.n	90007a66 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007a7a:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007a7c:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007a80:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007a82:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007a84:	0409      	lsls	r1, r1, #16
90007a86:	d50b      	bpl.n	90007aa0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp1 != I2C_CR2_STOP) && \
90007a88:	0440      	lsls	r0, r0, #17
90007a8a:	d409      	bmi.n	90007aa0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
90007a8c:	2a20      	cmp	r2, #32
90007a8e:	d007      	beq.n	90007aa0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007a90:	685a      	ldr	r2, [r3, #4]
90007a92:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007a96:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
90007a98:	f7ff fb30 	bl	900070fc <HAL_GetTick>
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007a9c:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90007a9e:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007aa0:	699a      	ldr	r2, [r3, #24]
90007aa2:	0691      	lsls	r1, r2, #26
90007aa4:	d4df      	bmi.n	90007a66 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007aa6:	f7ff fb29 	bl	900070fc <HAL_GetTick>
90007aaa:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007aac:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007aae:	2819      	cmp	r0, #25
90007ab0:	d9f6      	bls.n	90007aa0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ab2:	699a      	ldr	r2, [r3, #24]
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007ab4:	2620      	movs	r6, #32

              status = HAL_ERROR;
90007ab6:	2701      	movs	r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ab8:	0692      	lsls	r2, r2, #26
90007aba:	d5d7      	bpl.n	90007a6c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x30>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
90007abc:	b90f      	cbnz	r7, 90007ac2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007abe:	2220      	movs	r2, #32
90007ac0:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90007ac2:	f046 0604 	orr.w	r6, r6, #4

    status = HAL_ERROR;
90007ac6:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90007ac8:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007aca:	05d7      	lsls	r7, r2, #23
90007acc:	d531      	bpl.n	90007b32 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf6>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007ace:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007ad2:	0550      	lsls	r0, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007ad4:	f046 0601 	orr.w	r6, r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007ad8:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007ada:	d504      	bpl.n	90007ae6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xaa>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007adc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007ae0:	f046 0608 	orr.w	r6, r6, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007ae4:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007ae6:	0592      	lsls	r2, r2, #22
90007ae8:	d504      	bpl.n	90007af4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007aea:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007aee:	f046 0602 	orr.w	r6, r6, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007af2:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007af4:	699a      	ldr	r2, [r3, #24]
90007af6:	0795      	lsls	r5, r2, #30
90007af8:	d501      	bpl.n	90007afe <I2C_WaitOnFlagUntilTimeout.constprop.0+0xc2>
    hi2c->Instance->TXDR = 0x00U;
90007afa:	2200      	movs	r2, #0
90007afc:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007afe:	699a      	ldr	r2, [r3, #24]
90007b00:	07d0      	lsls	r0, r2, #31
90007b02:	d403      	bmi.n	90007b0c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd0>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007b04:	699a      	ldr	r2, [r3, #24]
90007b06:	f042 0201 	orr.w	r2, r2, #1
90007b0a:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90007b0c:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90007b0e:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007b10:	4d19      	ldr	r5, [pc, #100]	@ (90007b78 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007b12:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007b14:	402a      	ands	r2, r5
90007b16:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007b18:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90007b1a:	4333      	orrs	r3, r6
90007b1c:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007b1e:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007b22:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007b26:	2300      	movs	r3, #0
      return HAL_ERROR;
90007b28:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007b2a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90007b2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007b32:	0551      	lsls	r1, r2, #21
90007b34:	d4d2      	bmi.n	90007adc <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa0>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007b36:	0597      	lsls	r7, r2, #22
90007b38:	d4d7      	bmi.n	90007aea <I2C_WaitOnFlagUntilTimeout.constprop.0+0xae>
  if (status != HAL_OK)
90007b3a:	2d00      	cmp	r5, #0
90007b3c:	d1da      	bne.n	90007af4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007b3e:	f7ff fadd 	bl	900070fc <HAL_GetTick>
90007b42:	eba0 0008 	sub.w	r0, r0, r8
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007b46:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007b48:	2819      	cmp	r0, #25
90007b4a:	d902      	bls.n	90007b52 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x116>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007b4c:	699a      	ldr	r2, [r3, #24]
90007b4e:	0411      	lsls	r1, r2, #16
90007b50:	d408      	bmi.n	90007b64 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x128>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007b52:	699a      	ldr	r2, [r3, #24]
90007b54:	0412      	lsls	r2, r2, #16
90007b56:	f53f af7c 	bmi.w	90007a52 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x16>
  return HAL_OK;
90007b5a:	2000      	movs	r0, #0
}
90007b5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007b60:	4635      	mov	r5, r6
90007b62:	e7b1      	b.n	90007ac8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x8c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007b64:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007b66:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007b68:	4313      	orrs	r3, r2
90007b6a:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007b6c:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007b70:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90007b74:	e7d7      	b.n	90007b26 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xea>
90007b76:	bf00      	nop
90007b78:	fe00e800 	.word	0xfe00e800

90007b7c <I2C_WaitOnTXISFlagUntilTimeout>:
{
90007b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007b80:	6803      	ldr	r3, [r0, #0]
{
90007b82:	4680      	mov	r8, r0
90007b84:	460d      	mov	r5, r1
90007b86:	4692      	mov	sl, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007b88:	2710      	movs	r7, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007b8a:	699c      	ldr	r4, [r3, #24]
90007b8c:	f014 0402 	ands.w	r4, r4, #2
90007b90:	f040 80a5 	bne.w	90007cde <I2C_WaitOnTXISFlagUntilTimeout+0x162>
  uint32_t itflag   = hi2c->Instance->ISR;
90007b94:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007b96:	f012 0c10 	ands.w	ip, r2, #16
90007b9a:	d078      	beq.n	90007c8e <I2C_WaitOnTXISFlagUntilTimeout+0x112>
  uint32_t tickstart = Tickstart;
90007b9c:	46d1      	mov	r9, sl
  HAL_StatusTypeDef status = HAL_OK;
90007b9e:	4626      	mov	r6, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007ba0:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ba2:	1c68      	adds	r0, r5, #1
90007ba4:	d001      	beq.n	90007baa <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
90007ba6:	e041      	b.n	90007c2c <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
90007ba8:	b92e      	cbnz	r6, 90007bb6 <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
90007baa:	699a      	ldr	r2, [r3, #24]
90007bac:	0691      	lsls	r1, r2, #26
90007bae:	d5fb      	bpl.n	90007ba8 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
    if (status == HAL_OK)
90007bb0:	b90e      	cbnz	r6, 90007bb6 <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007bb2:	2220      	movs	r2, #32
90007bb4:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
90007bb6:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90007bb8:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007bbc:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007bbe:	05d0      	lsls	r0, r2, #23
90007bc0:	d569      	bpl.n	90007c96 <I2C_WaitOnTXISFlagUntilTimeout+0x11a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007bc2:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007bc6:	0557      	lsls	r7, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007bc8:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007bcc:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007bce:	d504      	bpl.n	90007bda <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007bd0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007bd4:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007bd8:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007bda:	0595      	lsls	r5, r2, #22
90007bdc:	d504      	bpl.n	90007be8 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007bde:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007be2:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007be6:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007be8:	699a      	ldr	r2, [r3, #24]
90007bea:	0790      	lsls	r0, r2, #30
90007bec:	d501      	bpl.n	90007bf2 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    hi2c->Instance->TXDR = 0x00U;
90007bee:	2200      	movs	r2, #0
90007bf0:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007bf2:	699a      	ldr	r2, [r3, #24]
90007bf4:	07d1      	lsls	r1, r2, #31
90007bf6:	d403      	bmi.n	90007c00 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007bf8:	699a      	ldr	r2, [r3, #24]
90007bfa:	f042 0201 	orr.w	r2, r2, #1
90007bfe:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007c00:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007c02:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007c04:	4c37      	ldr	r4, [pc, #220]	@ (90007ce4 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007c06:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007c08:	4022      	ands	r2, r4
90007c0a:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007c0c:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
90007c10:	ea43 030c 	orr.w	r3, r3, ip
90007c14:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007c18:	f888 0041 	strb.w	r0, [r8, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007c1c:	f888 1042 	strb.w	r1, [r8, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007c20:	2300      	movs	r3, #0
      return HAL_ERROR;
90007c22:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007c24:	f888 3040 	strb.w	r3, [r8, #64]	@ 0x40
}
90007c28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c2c:	699a      	ldr	r2, [r3, #24]
90007c2e:	0692      	lsls	r2, r2, #26
90007c30:	d4be      	bmi.n	90007bb0 <I2C_WaitOnTXISFlagUntilTimeout+0x34>
90007c32:	2e00      	cmp	r6, #0
90007c34:	d1bf      	bne.n	90007bb6 <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007c36:	f7ff fa61 	bl	900070fc <HAL_GetTick>
90007c3a:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007c3e:	f8d8 3000 	ldr.w	r3, [r8]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007c42:	4285      	cmp	r5, r0
90007c44:	d301      	bcc.n	90007c4a <I2C_WaitOnTXISFlagUntilTimeout+0xce>
90007c46:	2d00      	cmp	r5, #0
90007c48:	d1f0      	bne.n	90007c2c <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007c4a:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007c4c:	f898 2042 	ldrb.w	r2, [r8, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007c50:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007c52:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007c54:	0409      	lsls	r1, r1, #16
90007c56:	d50c      	bpl.n	90007c72 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              (tmp1 != I2C_CR2_STOP) && \
90007c58:	0441      	lsls	r1, r0, #17
90007c5a:	d40a      	bmi.n	90007c72 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
90007c5c:	2a20      	cmp	r2, #32
90007c5e:	d008      	beq.n	90007c72 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007c60:	685a      	ldr	r2, [r3, #4]
90007c62:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007c66:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007c68:	f7ff fa48 	bl	900070fc <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007c6c:	f8d8 3000 	ldr.w	r3, [r8]
            tickstart = HAL_GetTick();
90007c70:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007c72:	699a      	ldr	r2, [r3, #24]
90007c74:	0692      	lsls	r2, r2, #26
90007c76:	d494      	bmi.n	90007ba2 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007c78:	f7ff fa40 	bl	900070fc <HAL_GetTick>
90007c7c:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c80:	f8d8 3000 	ldr.w	r3, [r8]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007c84:	2819      	cmp	r0, #25
90007c86:	d9f4      	bls.n	90007c72 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007c88:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007c8a:	2601      	movs	r6, #1
90007c8c:	e789      	b.n	90007ba2 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
  itflag = hi2c->Instance->ISR;
90007c8e:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90007c90:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007c92:	05d0      	lsls	r0, r2, #23
90007c94:	d495      	bmi.n	90007bc2 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007c96:	0556      	lsls	r6, r2, #21
90007c98:	d49a      	bmi.n	90007bd0 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007c9a:	0594      	lsls	r4, r2, #22
90007c9c:	d49f      	bmi.n	90007bde <I2C_WaitOnTXISFlagUntilTimeout+0x62>
  if (status != HAL_OK)
90007c9e:	2900      	cmp	r1, #0
90007ca0:	d1a2      	bne.n	90007be8 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
90007ca2:	1c6a      	adds	r2, r5, #1
90007ca4:	f43f af71 	beq.w	90007b8a <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007ca8:	f7ff fa28 	bl	900070fc <HAL_GetTick>
90007cac:	eba0 030a 	sub.w	r3, r0, sl
90007cb0:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90007cb2:	f8d8 3000 	ldr.w	r3, [r8]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007cb6:	d802      	bhi.n	90007cbe <I2C_WaitOnTXISFlagUntilTimeout+0x142>
90007cb8:	2d00      	cmp	r5, #0
90007cba:	f47f af65 	bne.w	90007b88 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90007cbe:	699a      	ldr	r2, [r3, #24]
90007cc0:	f012 0202 	ands.w	r2, r2, #2
90007cc4:	f47f af60 	bne.w	90007b88 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007cc8:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007ccc:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007cce:	430b      	orrs	r3, r1
90007cd0:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007cd4:	f888 1041 	strb.w	r1, [r8, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007cd8:	f888 2042 	strb.w	r2, [r8, #66]	@ 0x42
          return HAL_ERROR;
90007cdc:	e7a0      	b.n	90007c20 <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
  return HAL_OK;
90007cde:	2000      	movs	r0, #0
}
90007ce0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90007ce4:	fe00e800 	.word	0xfe00e800

90007ce8 <I2C_WaitOnFlagUntilTimeout>:
{
90007ce8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007cec:	461c      	mov	r4, r3
90007cee:	4683      	mov	fp, r0
90007cf0:	460e      	mov	r6, r1
90007cf2:	4615      	mov	r5, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007cf4:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007cf6:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007cfa:	699a      	ldr	r2, [r3, #24]
90007cfc:	ea36 0202 	bics.w	r2, r6, r2
90007d00:	bf0c      	ite	eq
90007d02:	2201      	moveq	r2, #1
90007d04:	2200      	movne	r2, #0
90007d06:	42aa      	cmp	r2, r5
90007d08:	f040 80af 	bne.w	90007e6a <I2C_WaitOnFlagUntilTimeout+0x182>
  uint32_t itflag   = hi2c->Instance->ISR;
90007d0c:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007d0e:	f012 0c10 	ands.w	ip, r2, #16
90007d12:	d07d      	beq.n	90007e10 <I2C_WaitOnFlagUntilTimeout+0x128>
  uint32_t error_code = 0;
90007d14:	f04f 0900 	mov.w	r9, #0
  uint32_t tickstart = Tickstart;
90007d18:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007d1c:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90007d20:	464f      	mov	r7, r9
90007d22:	1c60      	adds	r0, r4, #1
90007d24:	d001      	beq.n	90007d2a <I2C_WaitOnFlagUntilTimeout+0x42>
90007d26:	e041      	b.n	90007dac <I2C_WaitOnFlagUntilTimeout+0xc4>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007d28:	b92f      	cbnz	r7, 90007d36 <I2C_WaitOnFlagUntilTimeout+0x4e>
90007d2a:	699a      	ldr	r2, [r3, #24]
90007d2c:	0691      	lsls	r1, r2, #26
90007d2e:	d5fb      	bpl.n	90007d28 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90007d30:	b90f      	cbnz	r7, 90007d36 <I2C_WaitOnFlagUntilTimeout+0x4e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007d32:	2220      	movs	r2, #32
90007d34:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
90007d36:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90007d38:	f049 0c04 	orr.w	ip, r9, #4
    status = HAL_ERROR;
90007d3c:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007d3e:	05d7      	lsls	r7, r2, #23
90007d40:	d56a      	bpl.n	90007e18 <I2C_WaitOnFlagUntilTimeout+0x130>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007d42:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007d46:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007d48:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007d4c:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007d4e:	d504      	bpl.n	90007d5a <I2C_WaitOnFlagUntilTimeout+0x72>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007d50:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007d54:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007d58:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007d5a:	0592      	lsls	r2, r2, #22
90007d5c:	d504      	bpl.n	90007d68 <I2C_WaitOnFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007d5e:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007d62:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007d66:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007d68:	699a      	ldr	r2, [r3, #24]
90007d6a:	0790      	lsls	r0, r2, #30
90007d6c:	d501      	bpl.n	90007d72 <I2C_WaitOnFlagUntilTimeout+0x8a>
    hi2c->Instance->TXDR = 0x00U;
90007d6e:	2200      	movs	r2, #0
90007d70:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007d72:	699a      	ldr	r2, [r3, #24]
90007d74:	07d1      	lsls	r1, r2, #31
90007d76:	d403      	bmi.n	90007d80 <I2C_WaitOnFlagUntilTimeout+0x98>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007d78:	699a      	ldr	r2, [r3, #24]
90007d7a:	f042 0201 	orr.w	r2, r2, #1
90007d7e:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007d80:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007d82:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007d84:	4c3a      	ldr	r4, [pc, #232]	@ (90007e70 <I2C_WaitOnFlagUntilTimeout+0x188>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007d86:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007d88:	4022      	ands	r2, r4
90007d8a:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007d8c:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90007d90:	ea43 030c 	orr.w	r3, r3, ip
90007d94:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007d98:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007d9c:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007da0:	2300      	movs	r3, #0
      return HAL_ERROR;
90007da2:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007da4:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90007da8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007dac:	699a      	ldr	r2, [r3, #24]
90007dae:	0692      	lsls	r2, r2, #26
90007db0:	d4be      	bmi.n	90007d30 <I2C_WaitOnFlagUntilTimeout+0x48>
90007db2:	2f00      	cmp	r7, #0
90007db4:	d1bf      	bne.n	90007d36 <I2C_WaitOnFlagUntilTimeout+0x4e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007db6:	f7ff f9a1 	bl	900070fc <HAL_GetTick>
90007dba:	eba0 000a 	sub.w	r0, r0, sl
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007dbe:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007dc2:	4284      	cmp	r4, r0
90007dc4:	d301      	bcc.n	90007dca <I2C_WaitOnFlagUntilTimeout+0xe2>
90007dc6:	2c00      	cmp	r4, #0
90007dc8:	d1f0      	bne.n	90007dac <I2C_WaitOnFlagUntilTimeout+0xc4>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007dca:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
90007dcc:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007dd0:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
90007dd2:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007dd4:	0400      	lsls	r0, r0, #16
90007dd6:	d50c      	bpl.n	90007df2 <I2C_WaitOnFlagUntilTimeout+0x10a>
              (tmp1 != I2C_CR2_STOP) && \
90007dd8:	0449      	lsls	r1, r1, #17
90007dda:	d40a      	bmi.n	90007df2 <I2C_WaitOnFlagUntilTimeout+0x10a>
90007ddc:	2a20      	cmp	r2, #32
90007dde:	d008      	beq.n	90007df2 <I2C_WaitOnFlagUntilTimeout+0x10a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007de0:	685a      	ldr	r2, [r3, #4]
90007de2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007de6:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007de8:	f7ff f988 	bl	900070fc <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007dec:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90007df0:	4682      	mov	sl, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007df2:	699a      	ldr	r2, [r3, #24]
90007df4:	0692      	lsls	r2, r2, #26
90007df6:	d494      	bmi.n	90007d22 <I2C_WaitOnFlagUntilTimeout+0x3a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007df8:	f7ff f980 	bl	900070fc <HAL_GetTick>
90007dfc:	eba0 000a 	sub.w	r0, r0, sl
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007e00:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007e04:	2819      	cmp	r0, #25
90007e06:	d9f4      	bls.n	90007df2 <I2C_WaitOnFlagUntilTimeout+0x10a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007e08:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90007e0c:	2701      	movs	r7, #1
90007e0e:	e788      	b.n	90007d22 <I2C_WaitOnFlagUntilTimeout+0x3a>
  itflag = hi2c->Instance->ISR;
90007e10:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90007e12:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007e14:	05d7      	lsls	r7, r2, #23
90007e16:	d494      	bmi.n	90007d42 <I2C_WaitOnFlagUntilTimeout+0x5a>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007e18:	0550      	lsls	r0, r2, #21
90007e1a:	d499      	bmi.n	90007d50 <I2C_WaitOnFlagUntilTimeout+0x68>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007e1c:	0597      	lsls	r7, r2, #22
90007e1e:	d49e      	bmi.n	90007d5e <I2C_WaitOnFlagUntilTimeout+0x76>
  if (status != HAL_OK)
90007e20:	2900      	cmp	r1, #0
90007e22:	d1a1      	bne.n	90007d68 <I2C_WaitOnFlagUntilTimeout+0x80>
    if (Timeout != HAL_MAX_DELAY)
90007e24:	1c62      	adds	r2, r4, #1
90007e26:	f43f af68 	beq.w	90007cfa <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007e2a:	f7ff f967 	bl	900070fc <HAL_GetTick>
90007e2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90007e30:	1ac3      	subs	r3, r0, r3
90007e32:	42a3      	cmp	r3, r4
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007e34:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007e38:	d802      	bhi.n	90007e40 <I2C_WaitOnFlagUntilTimeout+0x158>
90007e3a:	2c00      	cmp	r4, #0
90007e3c:	f47f af5d 	bne.w	90007cfa <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007e40:	699a      	ldr	r2, [r3, #24]
90007e42:	ea36 0202 	bics.w	r2, r6, r2
90007e46:	bf0c      	ite	eq
90007e48:	2201      	moveq	r2, #1
90007e4a:	2200      	movne	r2, #0
90007e4c:	42aa      	cmp	r2, r5
90007e4e:	f47f af54 	bne.w	90007cfa <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007e52:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007e56:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007e58:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007e5a:	430b      	orrs	r3, r1
90007e5c:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007e60:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007e64:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
90007e68:	e79a      	b.n	90007da0 <I2C_WaitOnFlagUntilTimeout+0xb8>
  return HAL_OK;
90007e6a:	2000      	movs	r0, #0
}
90007e6c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90007e70:	fe00e800 	.word	0xfe00e800

90007e74 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007e74:	6803      	ldr	r3, [r0, #0]
{
90007e76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90007e7a:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007e7c:	699a      	ldr	r2, [r3, #24]
90007e7e:	0694      	lsls	r4, r2, #26
90007e80:	f100 8092 	bmi.w	90007fa8 <I2C_WaitOnSTOPFlagUntilTimeout+0x134>
90007e84:	4605      	mov	r5, r0
90007e86:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007e88:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007e8c:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007e8e:	f012 0c10 	ands.w	ip, r2, #16
90007e92:	f000 808c 	beq.w	90007fae <I2C_WaitOnSTOPFlagUntilTimeout+0x13a>
  uint32_t error_code = 0;
90007e96:	2400      	movs	r4, #0
  uint32_t tickstart = Tickstart;
90007e98:	46b9      	mov	r9, r7
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007e9a:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90007e9e:	46a2      	mov	sl, r4
90007ea0:	1c70      	adds	r0, r6, #1
90007ea2:	d003      	beq.n	90007eac <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90007ea4:	e043      	b.n	90007f2e <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ea6:	f1ba 0f00 	cmp.w	sl, #0
90007eaa:	d107      	bne.n	90007ebc <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90007eac:	699a      	ldr	r2, [r3, #24]
90007eae:	0691      	lsls	r1, r2, #26
90007eb0:	d5f9      	bpl.n	90007ea6 <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90007eb2:	f1ba 0f00 	cmp.w	sl, #0
90007eb6:	d101      	bne.n	90007ebc <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007eb8:	2220      	movs	r2, #32
90007eba:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007ebc:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007ec0:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007ec2:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007ec4:	05d0      	lsls	r0, r2, #23
90007ec6:	d55a      	bpl.n	90007f7e <I2C_WaitOnSTOPFlagUntilTimeout+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007ec8:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007ecc:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007ece:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007ed2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007ed4:	d504      	bpl.n	90007ee0 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007ed6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007eda:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007ede:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007ee0:	0596      	lsls	r6, r2, #22
90007ee2:	d504      	bpl.n	90007eee <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007ee4:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007ee8:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007eec:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007eee:	699a      	ldr	r2, [r3, #24]
90007ef0:	0790      	lsls	r0, r2, #30
90007ef2:	d501      	bpl.n	90007ef8 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
90007ef4:	2200      	movs	r2, #0
90007ef6:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007ef8:	699a      	ldr	r2, [r3, #24]
90007efa:	07d1      	lsls	r1, r2, #31
90007efc:	d403      	bmi.n	90007f06 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007efe:	699a      	ldr	r2, [r3, #24]
90007f00:	f042 0201 	orr.w	r2, r2, #1
90007f04:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007f06:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007f08:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007f0a:	4c33      	ldr	r4, [pc, #204]	@ (90007fd8 <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007f0c:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007f0e:	4022      	ands	r2, r4
90007f10:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007f12:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90007f14:	ea43 030c 	orr.w	r3, r3, ip
90007f18:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007f1a:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007f1e:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90007f22:	2300      	movs	r3, #0
      return HAL_ERROR;
90007f24:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90007f26:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90007f2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007f2e:	699a      	ldr	r2, [r3, #24]
90007f30:	0692      	lsls	r2, r2, #26
90007f32:	d4be      	bmi.n	90007eb2 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
90007f34:	f1ba 0f00 	cmp.w	sl, #0
90007f38:	d1c0      	bne.n	90007ebc <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007f3a:	f7ff f8df 	bl	900070fc <HAL_GetTick>
90007f3e:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007f42:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007f44:	4286      	cmp	r6, r0
90007f46:	d301      	bcc.n	90007f4c <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
90007f48:	2e00      	cmp	r6, #0
90007f4a:	d1f0      	bne.n	90007f2e <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007f4c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007f4e:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007f52:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007f54:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007f56:	0409      	lsls	r1, r1, #16
90007f58:	d503      	bpl.n	90007f62 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              (tmp1 != I2C_CR2_STOP) && \
90007f5a:	0441      	lsls	r1, r0, #17
90007f5c:	d401      	bmi.n	90007f62 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90007f5e:	2a20      	cmp	r2, #32
90007f60:	d130      	bne.n	90007fc4 <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007f62:	699a      	ldr	r2, [r3, #24]
90007f64:	0692      	lsls	r2, r2, #26
90007f66:	d49b      	bmi.n	90007ea0 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007f68:	f7ff f8c8 	bl	900070fc <HAL_GetTick>
90007f6c:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007f70:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007f72:	2819      	cmp	r0, #25
90007f74:	d9f5      	bls.n	90007f62 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007f76:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007f78:	f04f 0a01 	mov.w	sl, #1
90007f7c:	e790      	b.n	90007ea0 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007f7e:	0550      	lsls	r0, r2, #21
90007f80:	d4a9      	bmi.n	90007ed6 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007f82:	0594      	lsls	r4, r2, #22
90007f84:	d4ae      	bmi.n	90007ee4 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
90007f86:	2900      	cmp	r1, #0
90007f88:	d1b1      	bne.n	90007eee <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007f8a:	f7ff f8b7 	bl	900070fc <HAL_GetTick>
90007f8e:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007f90:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007f92:	42b0      	cmp	r0, r6
90007f94:	d800      	bhi.n	90007f98 <I2C_WaitOnSTOPFlagUntilTimeout+0x124>
90007f96:	b91e      	cbnz	r6, 90007fa0 <I2C_WaitOnSTOPFlagUntilTimeout+0x12c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007f98:	699a      	ldr	r2, [r3, #24]
90007f9a:	f012 0220 	ands.w	r2, r2, #32
90007f9e:	d008      	beq.n	90007fb2 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007fa0:	699a      	ldr	r2, [r3, #24]
90007fa2:	0692      	lsls	r2, r2, #26
90007fa4:	f57f af72 	bpl.w	90007e8c <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
90007fa8:	2000      	movs	r0, #0
}
90007faa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007fae:	4661      	mov	r1, ip
90007fb0:	e787      	b.n	90007ec2 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007fb2:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90007fb4:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007fb6:	430b      	orrs	r3, r1
90007fb8:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90007fba:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90007fbe:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90007fc2:	e7ae      	b.n	90007f22 <I2C_WaitOnSTOPFlagUntilTimeout+0xae>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007fc4:	685a      	ldr	r2, [r3, #4]
90007fc6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007fca:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007fcc:	f7ff f896 	bl	900070fc <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007fd0:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90007fd2:	4681      	mov	r9, r0
90007fd4:	e7c5      	b.n	90007f62 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90007fd6:	bf00      	nop
90007fd8:	fe00e800 	.word	0xfe00e800

90007fdc <HAL_I2C_MspInit>:
}
90007fdc:	4770      	bx	lr
90007fde:	bf00      	nop

90007fe0 <HAL_I2C_Init>:
  if (hi2c == NULL)
90007fe0:	2800      	cmp	r0, #0
90007fe2:	d053      	beq.n	9000808c <HAL_I2C_Init+0xac>
{
90007fe4:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90007fe6:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90007fea:	4604      	mov	r4, r0
90007fec:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007ff0:	2b00      	cmp	r3, #0
90007ff2:	d046      	beq.n	90008082 <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90007ff4:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90007ff6:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90007ff8:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90007ffa:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90007ffe:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008000:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008004:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90008006:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000800a:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
9000800c:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000800e:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008010:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008012:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008014:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90008018:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000801a:	d009      	beq.n	90008030 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000801c:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008020:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008022:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008024:	d107      	bne.n	90008036 <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008026:	685a      	ldr	r2, [r3, #4]
90008028:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
9000802c:	605a      	str	r2, [r3, #4]
9000802e:	e006      	b.n	9000803e <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008030:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008034:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008036:	685a      	ldr	r2, [r3, #4]
90008038:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
9000803c:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000803e:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90008040:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008044:	4912      	ldr	r1, [pc, #72]	@ (90008090 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008046:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008048:	4301      	orrs	r1, r0
9000804a:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000804c:	68d9      	ldr	r1, [r3, #12]
9000804e:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
90008052:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90008054:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008058:	4302      	orrs	r2, r0
9000805a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000805e:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008062:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008064:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008066:	4301      	orrs	r1, r0
  return HAL_OK;
90008068:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000806a:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000806c:	6819      	ldr	r1, [r3, #0]
9000806e:	f041 0101 	orr.w	r1, r1, #1
90008072:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008074:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008076:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000807a:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000807c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
90008080:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
90008082:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
90008086:	f7ff ffa9 	bl	90007fdc <HAL_I2C_MspInit>
9000808a:	e7b3      	b.n	90007ff4 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000808c:	2001      	movs	r0, #1
}
9000808e:	4770      	bx	lr
90008090:	02008000 	.word	0x02008000

90008094 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90008094:	4770      	bx	lr
90008096:	bf00      	nop

90008098 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90008098:	b1b0      	cbz	r0, 900080c8 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000809a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000809c:	2324      	movs	r3, #36	@ 0x24
{
9000809e:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
900080a0:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
900080a4:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
900080a6:	6813      	ldr	r3, [r2, #0]
900080a8:	f023 0301 	bic.w	r3, r3, #1
900080ac:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
900080ae:	f7ff fff1 	bl	90008094 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900080b2:	2300      	movs	r3, #0
900080b4:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
900080b6:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
900080b8:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
900080bc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
900080c0:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
900080c2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
900080c6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
900080c8:	2001      	movs	r0, #1
}
900080ca:	4770      	bx	lr

900080cc <HAL_I2C_Mem_Write>:
{
900080cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900080d0:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
900080d2:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
900080d6:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
900080d8:	2820      	cmp	r0, #32
{
900080da:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
900080de:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
900080e0:	d11e      	bne.n	90008120 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
900080e2:	4698      	mov	r8, r3
900080e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900080e6:	b1bb      	cbz	r3, 90008118 <HAL_I2C_Mem_Write+0x4c>
900080e8:	f1ba 0f00 	cmp.w	sl, #0
900080ec:	d014      	beq.n	90008118 <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
900080ee:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
900080f2:	2b01      	cmp	r3, #1
900080f4:	d014      	beq.n	90008120 <HAL_I2C_Mem_Write+0x54>
900080f6:	2301      	movs	r3, #1
900080f8:	460d      	mov	r5, r1
900080fa:	4691      	mov	r9, r2
900080fc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90008100:	f7fe fffc 	bl	900070fc <HAL_GetTick>
90008104:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008106:	4620      	mov	r0, r4
90008108:	4631      	mov	r1, r6
9000810a:	f7ff fc97 	bl	90007a3c <I2C_WaitOnFlagUntilTimeout.constprop.0>
9000810e:	b158      	cbz	r0, 90008128 <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
90008110:	2001      	movs	r0, #1
}
90008112:	b003      	add	sp, #12
90008114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008118:	f44f 7300 	mov.w	r3, #512	@ 0x200
9000811c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000811e:	e7f7      	b.n	90008110 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
90008120:	2002      	movs	r0, #2
}
90008122:	b003      	add	sp, #12
90008124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90008128:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000812a:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000812e:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
90008130:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008132:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90008134:	4a5f      	ldr	r2, [pc, #380]	@ (900082b4 <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008136:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000813a:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
9000813c:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000813e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008142:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008144:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008146:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000814a:	684b      	ldr	r3, [r1, #4]
9000814c:	4013      	ands	r3, r2
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000814e:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008152:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008156:	4a58      	ldr	r2, [pc, #352]	@ (900082b8 <HAL_I2C_Mem_Write+0x1ec>)
90008158:	ea43 030b 	orr.w	r3, r3, fp
9000815c:	431a      	orrs	r2, r3
9000815e:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008160:	4632      	mov	r2, r6
90008162:	4639      	mov	r1, r7
90008164:	f7ff fd0a 	bl	90007b7c <I2C_WaitOnTXISFlagUntilTimeout>
90008168:	2800      	cmp	r0, #0
9000816a:	d176      	bne.n	9000825a <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000816c:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008170:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008172:	d169      	bne.n	90008248 <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008174:	fa5f f289 	uxtb.w	r2, r9
90008178:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
9000817a:	463b      	mov	r3, r7
9000817c:	2200      	movs	r2, #0
9000817e:	2180      	movs	r1, #128	@ 0x80
90008180:	4620      	mov	r0, r4
90008182:	9600      	str	r6, [sp, #0]
90008184:	f7ff fdb0 	bl	90007ce8 <I2C_WaitOnFlagUntilTimeout>
90008188:	2800      	cmp	r0, #0
9000818a:	d166      	bne.n	9000825a <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000818c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000818e:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008190:	b29b      	uxth	r3, r3
90008192:	2bff      	cmp	r3, #255	@ 0xff
90008194:	d965      	bls.n	90008262 <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90008196:	6853      	ldr	r3, [r2, #4]
90008198:	4948      	ldr	r1, [pc, #288]	@ (900082bc <HAL_I2C_Mem_Write+0x1f0>)
9000819a:	400b      	ands	r3, r1
9000819c:	4948      	ldr	r1, [pc, #288]	@ (900082c0 <HAL_I2C_Mem_Write+0x1f4>)
9000819e:	ea43 030b 	orr.w	r3, r3, fp
900081a2:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900081a4:	23ff      	movs	r3, #255	@ 0xff
900081a6:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900081a8:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
900081aa:	e003      	b.n	900081b4 <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
900081ac:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900081ae:	b29b      	uxth	r3, r3
900081b0:	2b00      	cmp	r3, #0
900081b2:	d069      	beq.n	90008288 <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900081b4:	4632      	mov	r2, r6
900081b6:	4639      	mov	r1, r7
900081b8:	4620      	mov	r0, r4
900081ba:	f7ff fcdf 	bl	90007b7c <I2C_WaitOnTXISFlagUntilTimeout>
900081be:	4602      	mov	r2, r0
900081c0:	2800      	cmp	r0, #0
900081c2:	d1a5      	bne.n	90008110 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900081c4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900081c6:	6825      	ldr	r5, [r4, #0]
900081c8:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
900081cc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900081ce:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
900081d0:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900081d4:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900081d6:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900081d8:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
900081dc:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
900081de:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
900081e2:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
900081e4:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900081e8:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
900081ea:	b289      	uxth	r1, r1
900081ec:	2b00      	cmp	r3, #0
900081ee:	d1dd      	bne.n	900081ac <HAL_I2C_Mem_Write+0xe0>
900081f0:	2900      	cmp	r1, #0
900081f2:	d0db      	beq.n	900081ac <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900081f4:	463b      	mov	r3, r7
900081f6:	2180      	movs	r1, #128	@ 0x80
900081f8:	4620      	mov	r0, r4
900081fa:	9600      	str	r6, [sp, #0]
900081fc:	f7ff fd74 	bl	90007ce8 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008200:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008204:	2800      	cmp	r0, #0
90008206:	d183      	bne.n	90008110 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008208:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000820a:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 900082bc <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000820e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008210:	492b      	ldr	r1, [pc, #172]	@ (900082c0 <HAL_I2C_Mem_Write+0x1f4>)
90008212:	4670      	mov	r0, lr
90008214:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008216:	4563      	cmp	r3, ip
90008218:	d909      	bls.n	9000822e <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
9000821a:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000821c:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008220:	ea03 030e 	and.w	r3, r3, lr
90008224:	ea43 030b 	orr.w	r3, r3, fp
90008228:	4319      	orrs	r1, r3
9000822a:	6051      	str	r1, [r2, #4]
}
9000822c:	e7be      	b.n	900081ac <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
9000822e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008230:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90008232:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008234:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90008236:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008238:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000823a:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
9000823e:	430b      	orrs	r3, r1
90008240:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008244:	6053      	str	r3, [r2, #4]
}
90008246:	e7b1      	b.n	900081ac <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008248:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000824c:	4639      	mov	r1, r7
9000824e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008250:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008252:	4632      	mov	r2, r6
90008254:	f7ff fc92 	bl	90007b7c <I2C_WaitOnTXISFlagUntilTimeout>
90008258:	b188      	cbz	r0, 9000827e <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
9000825a:	2300      	movs	r3, #0
9000825c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90008260:	e756      	b.n	90008110 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
90008262:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008264:	4815      	ldr	r0, [pc, #84]	@ (900082bc <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
90008266:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008268:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000826a:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000826c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000826e:	4001      	ands	r1, r0
90008270:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90008274:	430b      	orrs	r3, r1
90008276:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000827a:	6053      	str	r3, [r2, #4]
}
9000827c:	e79a      	b.n	900081b4 <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000827e:	fa5f f289 	uxtb.w	r2, r9
90008282:	6823      	ldr	r3, [r4, #0]
90008284:	629a      	str	r2, [r3, #40]	@ 0x28
90008286:	e778      	b.n	9000817a <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008288:	4632      	mov	r2, r6
9000828a:	4639      	mov	r1, r7
9000828c:	4620      	mov	r0, r4
9000828e:	f7ff fdf1 	bl	90007e74 <I2C_WaitOnSTOPFlagUntilTimeout>
90008292:	2800      	cmp	r0, #0
90008294:	f47f af3c 	bne.w	90008110 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008298:	6823      	ldr	r3, [r4, #0]
9000829a:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000829c:	4d09      	ldr	r5, [pc, #36]	@ (900082c4 <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000829e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900082a0:	685a      	ldr	r2, [r3, #4]
900082a2:	402a      	ands	r2, r5
900082a4:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900082a6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900082aa:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900082ae:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900082b2:	e72e      	b.n	90008112 <HAL_I2C_Mem_Write+0x46>
900082b4:	fc009800 	.word	0xfc009800
900082b8:	01002000 	.word	0x01002000
900082bc:	fc009c00 	.word	0xfc009c00
900082c0:	01ff0000 	.word	0x01ff0000
900082c4:	fe00e800 	.word	0xfe00e800

900082c8 <HAL_I2C_Mem_Read>:
{
900082c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900082cc:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
900082ce:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
900082d2:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
900082d4:	2820      	cmp	r0, #32
{
900082d6:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900082da:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
900082dc:	d11e      	bne.n	9000831c <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
900082de:	4698      	mov	r8, r3
900082e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900082e2:	b1bb      	cbz	r3, 90008314 <HAL_I2C_Mem_Read+0x4c>
900082e4:	f1ba 0f00 	cmp.w	sl, #0
900082e8:	d014      	beq.n	90008314 <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
900082ea:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
900082ee:	2b01      	cmp	r3, #1
900082f0:	d014      	beq.n	9000831c <HAL_I2C_Mem_Read+0x54>
900082f2:	2301      	movs	r3, #1
900082f4:	460d      	mov	r5, r1
900082f6:	4691      	mov	r9, r2
900082f8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
900082fc:	f7fe fefe 	bl	900070fc <HAL_GetTick>
90008300:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008302:	4620      	mov	r0, r4
90008304:	4631      	mov	r1, r6
90008306:	f7ff fb99 	bl	90007a3c <I2C_WaitOnFlagUntilTimeout.constprop.0>
9000830a:	b158      	cbz	r0, 90008324 <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
9000830c:	2001      	movs	r0, #1
}
9000830e:	b002      	add	sp, #8
90008310:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008314:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008318:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000831a:	e7f7      	b.n	9000830c <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
9000831c:	2002      	movs	r0, #2
}
9000831e:	b002      	add	sp, #8
90008320:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008324:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008326:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
9000832a:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
9000832c:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000832e:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
90008330:	495f      	ldr	r1, [pc, #380]	@ (900084b0 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008332:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008336:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008338:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000833a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000833e:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008340:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008342:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008346:	6853      	ldr	r3, [r2, #4]
90008348:	400b      	ands	r3, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000834a:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000834e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008352:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
90008354:	432b      	orrs	r3, r5
90008356:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000835a:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000835c:	4632      	mov	r2, r6
9000835e:	f7ff fc0d 	bl	90007b7c <I2C_WaitOnTXISFlagUntilTimeout>
90008362:	2800      	cmp	r0, #0
90008364:	d177      	bne.n	90008456 <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008366:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000836a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000836c:	d16a      	bne.n	90008444 <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000836e:	fa5f f289 	uxtb.w	r2, r9
90008372:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90008374:	463b      	mov	r3, r7
90008376:	2200      	movs	r2, #0
90008378:	2140      	movs	r1, #64	@ 0x40
9000837a:	4620      	mov	r0, r4
9000837c:	9600      	str	r6, [sp, #0]
9000837e:	f7ff fcb3 	bl	90007ce8 <I2C_WaitOnFlagUntilTimeout>
90008382:	2800      	cmp	r0, #0
90008384:	d167      	bne.n	90008456 <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008386:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008388:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000838a:	b29b      	uxth	r3, r3
9000838c:	2bff      	cmp	r3, #255	@ 0xff
9000838e:	d966      	bls.n	9000845e <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90008390:	6853      	ldr	r3, [r2, #4]
90008392:	4947      	ldr	r1, [pc, #284]	@ (900084b0 <HAL_I2C_Mem_Read+0x1e8>)
90008394:	400b      	ands	r3, r1
90008396:	4947      	ldr	r1, [pc, #284]	@ (900084b4 <HAL_I2C_Mem_Read+0x1ec>)
90008398:	432b      	orrs	r3, r5
9000839a:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000839c:	23ff      	movs	r3, #255	@ 0xff
9000839e:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900083a0:	6051      	str	r1, [r2, #4]
}
900083a2:	e003      	b.n	900083ac <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
900083a4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900083a6:	b29b      	uxth	r3, r3
900083a8:	2b00      	cmp	r3, #0
900083aa:	d06b      	beq.n	90008484 <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
900083ac:	463b      	mov	r3, r7
900083ae:	2200      	movs	r2, #0
900083b0:	2104      	movs	r1, #4
900083b2:	4620      	mov	r0, r4
900083b4:	9600      	str	r6, [sp, #0]
900083b6:	f7ff fc97 	bl	90007ce8 <I2C_WaitOnFlagUntilTimeout>
900083ba:	2800      	cmp	r0, #0
900083bc:	d1a6      	bne.n	9000830c <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
900083be:	6821      	ldr	r1, [r4, #0]
900083c0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900083c2:	6a49      	ldr	r1, [r1, #36]	@ 0x24
900083c4:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
900083c6:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900083ca:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
900083cc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900083ce:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
900083d2:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900083d4:	3101      	adds	r1, #1
      hi2c->XferCount--;
900083d6:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
900083da:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
900083dc:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900083de:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900083e2:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900083e4:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900083e6:	b289      	uxth	r1, r1
900083e8:	2b00      	cmp	r3, #0
900083ea:	d1db      	bne.n	900083a4 <HAL_I2C_Mem_Read+0xdc>
900083ec:	2900      	cmp	r1, #0
900083ee:	d0d9      	beq.n	900083a4 <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900083f0:	4602      	mov	r2, r0
900083f2:	463b      	mov	r3, r7
900083f4:	2180      	movs	r1, #128	@ 0x80
900083f6:	4620      	mov	r0, r4
900083f8:	9600      	str	r6, [sp, #0]
900083fa:	f7ff fc75 	bl	90007ce8 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900083fe:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90008402:	2800      	cmp	r0, #0
90008404:	d182      	bne.n	9000830c <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008406:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008408:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 900084c4 <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000840c:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000840e:	492a      	ldr	r1, [pc, #168]	@ (900084b8 <HAL_I2C_Mem_Read+0x1f0>)
90008410:	4670      	mov	r0, lr
90008412:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008414:	4563      	cmp	r3, ip
90008416:	d908      	bls.n	9000842a <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90008418:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000841a:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000841e:	ea03 030e 	and.w	r3, r3, lr
90008422:	432b      	orrs	r3, r5
90008424:	4319      	orrs	r1, r3
90008426:	6051      	str	r1, [r2, #4]
}
90008428:	e7bc      	b.n	900083a4 <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
9000842a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000842c:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
9000842e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008430:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90008432:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008434:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008436:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
9000843a:	430b      	orrs	r3, r1
9000843c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008440:	6053      	str	r3, [r2, #4]
}
90008442:	e7af      	b.n	900083a4 <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008444:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008448:	4639      	mov	r1, r7
9000844a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000844c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000844e:	4632      	mov	r2, r6
90008450:	f7ff fb94 	bl	90007b7c <I2C_WaitOnTXISFlagUntilTimeout>
90008454:	b188      	cbz	r0, 9000847a <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
90008456:	2300      	movs	r3, #0
90008458:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
9000845c:	e756      	b.n	9000830c <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
9000845e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008460:	4813      	ldr	r0, [pc, #76]	@ (900084b0 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
90008462:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008464:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
90008466:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008468:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000846a:	4001      	ands	r1, r0
9000846c:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90008470:	430b      	orrs	r3, r1
90008472:	4912      	ldr	r1, [pc, #72]	@ (900084bc <HAL_I2C_Mem_Read+0x1f4>)
90008474:	4319      	orrs	r1, r3
90008476:	6051      	str	r1, [r2, #4]
}
90008478:	e798      	b.n	900083ac <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000847a:	fa5f f289 	uxtb.w	r2, r9
9000847e:	6823      	ldr	r3, [r4, #0]
90008480:	629a      	str	r2, [r3, #40]	@ 0x28
90008482:	e777      	b.n	90008374 <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008484:	4632      	mov	r2, r6
90008486:	4639      	mov	r1, r7
90008488:	4620      	mov	r0, r4
9000848a:	f7ff fcf3 	bl	90007e74 <I2C_WaitOnSTOPFlagUntilTimeout>
9000848e:	2800      	cmp	r0, #0
90008490:	f47f af3c 	bne.w	9000830c <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008494:	6823      	ldr	r3, [r4, #0]
90008496:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008498:	4d09      	ldr	r5, [pc, #36]	@ (900084c0 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000849a:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000849c:	685a      	ldr	r2, [r3, #4]
9000849e:	402a      	ands	r2, r5
900084a0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900084a2:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900084a6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900084aa:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900084ae:	e72e      	b.n	9000830e <HAL_I2C_Mem_Read+0x46>
900084b0:	fc009800 	.word	0xfc009800
900084b4:	01ff2400 	.word	0x01ff2400
900084b8:	01ff0000 	.word	0x01ff0000
900084bc:	02002400 	.word	0x02002400
900084c0:	fe00e800 	.word	0xfe00e800
900084c4:	fc009c00 	.word	0xfc009c00

900084c8 <HAL_I2C_GetState>:
  return hi2c->State;
900084c8:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
900084cc:	4770      	bx	lr
900084ce:	bf00      	nop

900084d0 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
900084d0:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
900084d2:	4770      	bx	lr

900084d4 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900084d4:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900084d8:	2a20      	cmp	r2, #32
900084da:	d123      	bne.n	90008524 <HAL_I2CEx_ConfigAnalogFilter+0x50>
900084dc:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
900084e0:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
900084e4:	4603      	mov	r3, r0
900084e6:	2a01      	cmp	r2, #1
900084e8:	d01c      	beq.n	90008524 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
900084ea:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
900084ec:	2024      	movs	r0, #36	@ 0x24
{
900084ee:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
900084f0:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900084f4:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
900084f8:	6810      	ldr	r0, [r2, #0]
900084fa:	f020 0001 	bic.w	r0, r0, #1
900084fe:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90008500:	6810      	ldr	r0, [r2, #0]
90008502:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
90008506:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90008508:	6810      	ldr	r0, [r2, #0]
9000850a:	4301      	orrs	r1, r0

    return HAL_OK;
9000850c:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000850e:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008510:	6811      	ldr	r1, [r2, #0]
90008512:	f041 0101 	orr.w	r1, r1, #1
90008516:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008518:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000851c:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008520:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90008524:	2002      	movs	r0, #2
}
90008526:	4770      	bx	lr

90008528 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008528:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
9000852c:	2a20      	cmp	r2, #32
9000852e:	d122      	bne.n	90008576 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90008530:	4603      	mov	r3, r0
{
90008532:	b500      	push	{lr}
90008534:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008538:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
9000853c:	2a01      	cmp	r2, #1
9000853e:	d01c      	beq.n	9000857a <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008540:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008542:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008544:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90008548:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
9000854c:	6810      	ldr	r0, [r2, #0]
9000854e:	f020 0001 	bic.w	r0, r0, #1
90008552:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90008554:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90008556:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
9000855a:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000855e:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90008560:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008562:	6811      	ldr	r1, [r2, #0]
90008564:	f041 0101 	orr.w	r1, r1, #1
90008568:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000856a:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000856e:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008572:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90008576:	2002      	movs	r0, #2
}
90008578:	4770      	bx	lr
    __HAL_LOCK(hi2c);
9000857a:	2002      	movs	r0, #2
}
9000857c:	f85d fb04 	ldr.w	pc, [sp], #4

90008580 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90008580:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90008584:	4699      	mov	r9, r3
90008586:	4680      	mov	r8, r0
90008588:	460d      	mov	r5, r1
9000858a:	4614      	mov	r4, r2

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
9000858c:	7803      	ldrb	r3, [r0, #0]
9000858e:	2601      	movs	r6, #1
  p = 0;
90008590:	2700      	movs	r7, #0
90008592:	e005      	b.n	900085a0 <JPEG_Bits_To_SizeCodes+0x20>
    i = (uint32_t)Bits[l];
90008594:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    if ((p + i) > 256UL)
90008598:	19da      	adds	r2, r3, r7
9000859a:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000859e:	d83a      	bhi.n	90008616 <JPEG_Bits_To_SizeCodes+0x96>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
900085a0:	19e8      	adds	r0, r5, r7
900085a2:	461a      	mov	r2, r3
900085a4:	4631      	mov	r1, r6
    while (i != 0UL)
900085a6:	b113      	cbz	r3, 900085ae <JPEG_Bits_To_SizeCodes+0x2e>
      p++;
900085a8:	441f      	add	r7, r3
      Huffsize[p] = (uint8_t) l + 1U;
900085aa:	f020 f981 	bl	900288b0 <memset>
  for (l = 0; l < 16UL; l++)
900085ae:	2e10      	cmp	r6, #16
    if ((p + i) > 256UL)
900085b0:	f106 0601 	add.w	r6, r6, #1
  for (l = 0; l < 16UL; l++)
900085b4:	d1ee      	bne.n	90008594 <JPEG_Bits_To_SizeCodes+0x14>
      i--;
    }
  }
  Huffsize[p] = 0;
900085b6:	2300      	movs	r3, #0
900085b8:	55eb      	strb	r3, [r5, r7]
  *LastK = p;
900085ba:	f8c9 7000 	str.w	r7, [r9]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
900085be:	7829      	ldrb	r1, [r5, #0]
900085c0:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
900085c2:	b329      	cbz	r1, 90008610 <JPEG_Bits_To_SizeCodes+0x90>
  code = 0;
900085c4:	4699      	mov	r9, r3
900085c6:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
900085ca:	2701      	movs	r7, #1
  p = 0;
900085cc:	461e      	mov	r6, r3
    while (((uint32_t) Huffsize[p]) == si)
900085ce:	4291      	cmp	r1, r2
900085d0:	d124      	bne.n	9000861c <JPEG_Bits_To_SizeCodes+0x9c>
900085d2:	eb06 0008 	add.w	r0, r6, r8
900085d6:	eb05 0c06 	add.w	ip, r5, r6
900085da:	464b      	mov	r3, r9
900085dc:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
900085e0:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
900085e4:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
900085e6:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
900085ea:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
900085ec:	4596      	cmp	lr, r2
900085ee:	d0f7      	beq.n	900085e0 <JPEG_Bits_To_SizeCodes+0x60>
900085f0:	3601      	adds	r6, #1
900085f2:	eba6 0609 	sub.w	r6, r6, r9
      p++;
900085f6:	440e      	add	r6, r1
    if(si > 31UL)
900085f8:	2a1f      	cmp	r2, #31
900085fa:	d80c      	bhi.n	90008616 <JPEG_Bits_To_SizeCodes+0x96>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
900085fc:	fa07 f102 	lsl.w	r1, r7, r2
90008600:	4299      	cmp	r1, r3
90008602:	d908      	bls.n	90008616 <JPEG_Bits_To_SizeCodes+0x96>
  while (Huffsize[p] != 0U)
90008604:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90008606:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
9000860a:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
9000860c:	2900      	cmp	r1, #0
9000860e:	d1de      	bne.n	900085ce <JPEG_Bits_To_SizeCodes+0x4e>
  }
  /* Return function status */
  return HAL_OK;
90008610:	2000      	movs	r0, #0
}
90008612:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_ERROR;
90008616:	2001      	movs	r0, #1
}
90008618:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (((uint32_t) Huffsize[p]) == si)
9000861c:	464b      	mov	r3, r9
9000861e:	e7eb      	b.n	900085f8 <JPEG_Bits_To_SizeCodes+0x78>

90008620 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90008620:	b5f0      	push	{r4, r5, r6, r7, lr}
90008622:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
90008626:	460d      	mov	r5, r1
90008628:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000862a:	ab01      	add	r3, sp, #4
9000862c:	aa43      	add	r2, sp, #268	@ 0x10c
9000862e:	a902      	add	r1, sp, #8
90008630:	f7ff ffa6 	bl	90008580 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008634:	b9d0      	cbnz	r0, 9000866c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90008636:	9f01      	ldr	r7, [sp, #4]
90008638:	b1c7      	cbz	r7, 9000866c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000863a:	370f      	adds	r7, #15
9000863c:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90008640:	a902      	add	r1, sp, #8
90008642:	f104 0c0f 	add.w	ip, r4, #15
90008646:	4427      	add	r7, r4
90008648:	e009      	b.n	9000865e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000864a:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000864e:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008650:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008654:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008658:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000865a:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000865c:	d006      	beq.n	9000866c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000865e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008662:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008664:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008668:	d9ef      	bls.n	9000864a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000866a:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000866c:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90008670:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008672:	bf00      	nop

90008674 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90008674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008678:	6804      	ldr	r4, [r0, #0]
{
9000867a:	b093      	sub	sp, #76	@ 0x4c
9000867c:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000867e:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
90008682:	429a      	cmp	r2, r3
90008684:	f000 809d 	beq.w	900087c2 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90008688:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
9000868c:	429a      	cmp	r2, r3
9000868e:	d003      	beq.n	90008698 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008690:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008692:	b013      	add	sp, #76	@ 0x4c
90008694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008698:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000869c:	a903      	add	r1, sp, #12
9000869e:	f7ff ffbf 	bl	90008620 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
900086a2:	2800      	cmp	r0, #0
900086a4:	d1f5      	bne.n	90008692 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
900086a6:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086aa:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086ae:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
900086b2:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086b4:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
900086b8:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086ba:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
900086be:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086c2:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
900086c6:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086ca:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
900086ce:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086d0:	f89d 9015 	ldrb.w	r9, [sp, #21]
900086d4:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086d8:	f89d c014 	ldrb.w	ip, [sp, #20]
900086dc:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086e0:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086e4:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086e8:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086ec:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086ee:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086f2:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
900086f6:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
900086fa:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086fe:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008702:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008706:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000870a:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000870e:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90008710:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008714:	f89d 2010 	ldrb.w	r2, [sp, #16]
90008718:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000871c:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000871e:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008722:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008724:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90008728:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000872c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008730:	f89d 600f 	ldrb.w	r6, [sp, #15]
90008734:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008738:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000873c:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000873e:	9b01      	ldr	r3, [sp, #4]
90008740:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008744:	f89d 500d 	ldrb.w	r5, [sp, #13]
90008748:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000874c:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90008750:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008754:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90008756:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000875a:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000875e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90008762:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008766:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000876a:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000876e:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90008772:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90008776:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000877a:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000877e:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
90008782:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008784:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90008788:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000878a:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000878e:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008792:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
90008796:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008798:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000879c:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000879e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
900087a2:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087a6:	f89d 301c 	ldrb.w	r3, [sp, #28]
900087aa:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900087ac:	f89d 3018 	ldrb.w	r3, [sp, #24]
900087b0:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
900087b4:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
900087b8:	f844 3c18 	str.w	r3, [r4, #-24]
}
900087bc:	b013      	add	sp, #76	@ 0x4c
900087be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900087c2:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
900087c6:	e769      	b.n	9000869c <JPEG_Set_HuffDC_Mem+0x28>

900087c8 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
900087c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900087cc:	6804      	ldr	r4, [r0, #0]
{
900087ce:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
900087d2:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900087d4:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
900087d8:	429a      	cmp	r2, r3
900087da:	d041      	beq.n	90008860 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
900087dc:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
900087e0:	429a      	cmp	r2, r3
900087e2:	d004      	beq.n	900087ee <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
900087e4:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900087e6:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
900087ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
900087ee:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
900087f2:	4628      	mov	r0, r5
900087f4:	466b      	mov	r3, sp
900087f6:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
900087fa:	a901      	add	r1, sp, #4
900087fc:	f7ff fec0 	bl	90008580 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008800:	2800      	cmp	r0, #0
90008802:	d1f0      	bne.n	900087e6 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90008804:	9b00      	ldr	r3, [sp, #0]
90008806:	b373      	cbz	r3, 90008866 <JPEG_Set_HuffAC_Mem+0x9e>
90008808:	330f      	adds	r3, #15
9000880a:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
9000880e:	af01      	add	r7, sp, #4
90008810:	f105 020f 	add.w	r2, r5, #15
90008814:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008818:	ae42      	add	r6, sp, #264	@ 0x108
9000881a:	e011      	b.n	90008840 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
9000881c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90008820:	2ba1      	cmp	r3, #161	@ 0xa1
90008822:	d8df      	bhi.n	900087e4 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008824:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008828:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000882c:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90008830:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008832:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008836:	46b1      	mov	r9, r6
90008838:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000883c:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000883e:	d014      	beq.n	9000886a <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90008840:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90008844:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
90008846:	2900      	cmp	r1, #0
90008848:	d0ec      	beq.n	90008824 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
9000884a:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000884c:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90008850:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
90008852:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90008856:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000885a:	d1df      	bne.n	9000881c <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
9000885c:	23a1      	movs	r3, #161	@ 0xa1
9000885e:	e7e1      	b.n	90008824 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90008860:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90008864:	e7c5      	b.n	900087f2 <JPEG_Set_HuffAC_Mem+0x2a>
90008866:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
9000886a:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
9000886e:	4a1a      	ldr	r2, [pc, #104]	@ (900088d8 <JPEG_Set_HuffAC_Mem+0x110>)
90008870:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90008874:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
90008876:	6023      	str	r3, [r4, #0]
90008878:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
9000887c:	6063      	str	r3, [r4, #4]
9000887e:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
90008882:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90008884:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90008888:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000888a:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
9000888e:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
90008892:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90008894:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90008898:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000889a:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
9000889e:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088a0:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088a4:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088a8:	0212      	lsls	r2, r2, #8
900088aa:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088ae:	021b      	lsls	r3, r3, #8
900088b0:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088b4:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
900088b8:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088ba:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088be:	433a      	orrs	r2, r7
    while (i > 1UL)
900088c0:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900088c2:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
900088c6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900088ca:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
900088ce:	d1e7      	bne.n	900088a0 <JPEG_Set_HuffAC_Mem+0xd8>
}
900088d0:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
900088d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900088d8:	0fd10fd0 	.word	0x0fd10fd0

900088dc <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900088dc:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900088de:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900088e0:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
900088e4:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900088e6:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900088e8:	f002 0203 	and.w	r2, r2, #3
900088ec:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900088ee:	685a      	ldr	r2, [r3, #4]
900088f0:	bf0c      	ite	eq
900088f2:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
900088f6:	f022 0208 	bicne.w	r2, r2, #8
900088fa:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900088fc:	681a      	ldr	r2, [r3, #0]
900088fe:	f022 0201 	bic.w	r2, r2, #1
90008902:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008904:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008906:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000890a:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000890c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000890e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008912:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008914:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008916:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000891a:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000891c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000891e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008922:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
90008924:	681a      	ldr	r2, [r3, #0]
90008926:	f042 0201 	orr.w	r2, r2, #1
9000892a:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000892c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000892e:	f002 020c 	and.w	r2, r2, #12
90008932:	2a08      	cmp	r2, #8
90008934:	d00a      	beq.n	9000894c <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008936:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008938:	f002 020c 	and.w	r2, r2, #12
9000893c:	2a0c      	cmp	r2, #12
9000893e:	d000      	beq.n	90008942 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90008940:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90008942:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008944:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008948:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000894a:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000894c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000894e:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
90008952:	631a      	str	r2, [r3, #48]	@ 0x30
90008954:	4770      	bx	lr
90008956:	bf00      	nop

90008958 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008958:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000895a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
9000895c:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000895e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
90008960:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008962:	42aa      	cmp	r2, r5
90008964:	d32a      	bcc.n	900089bc <JPEG_DMA_StartProcess+0x64>
90008966:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008968:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000896a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000896c:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000896e:	42b3      	cmp	r3, r6
90008970:	d324      	bcc.n	900089bc <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008972:	4f19      	ldr	r7, [pc, #100]	@ (900089d8 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008974:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 900089e4 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008978:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000897a:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000897e:	4917      	ldr	r1, [pc, #92]	@ (900089dc <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90008980:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90008982:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90008984:	4916      	ldr	r1, [pc, #88]	@ (900089e0 <JPEG_DMA_StartProcess+0x88>)
90008986:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90008988:	b1a5      	cbz	r5, 900089b4 <JPEG_DMA_StartProcess+0x5c>
9000898a:	b19e      	cbz	r6, 900089b4 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000898c:	fbb2 f1f5 	udiv	r1, r2, r5
90008990:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008994:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008996:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008998:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000899a:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000899c:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000899e:	fbb3 f2f6 	udiv	r2, r3, r6
900089a2:	fb06 3212 	mls	r2, r6, r2, r3
900089a6:	1a9b      	subs	r3, r3, r2
900089a8:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900089aa:	9500      	str	r5, [sp, #0]
900089ac:	69e2      	ldr	r2, [r4, #28]
900089ae:	f001 fc23 	bl	9000a1f8 <HAL_MDMA_Start_IT>
900089b2:	b130      	cbz	r0, 900089c2 <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900089b4:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900089b6:	f043 0304 	orr.w	r3, r3, #4
900089ba:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
900089bc:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
900089be:	b003      	add	sp, #12
900089c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900089c2:	6822      	ldr	r2, [r4, #0]
900089c4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900089c6:	69a1      	ldr	r1, [r4, #24]
900089c8:	3240      	adds	r2, #64	@ 0x40
900089ca:	9500      	str	r5, [sp, #0]
900089cc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900089ce:	f001 fc13 	bl	9000a1f8 <HAL_MDMA_Start_IT>
900089d2:	2800      	cmp	r0, #0
900089d4:	d0f3      	beq.n	900089be <JPEG_DMA_StartProcess+0x66>
900089d6:	e7ed      	b.n	900089b4 <JPEG_DMA_StartProcess+0x5c>
900089d8:	90008fc5 	.word	0x90008fc5
900089dc:	90009239 	.word	0x90009239
900089e0:	900092b9 	.word	0x900092b9
900089e4:	90008ff1 	.word	0x90008ff1

900089e8 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900089e8:	6803      	ldr	r3, [r0, #0]
900089ea:	685a      	ldr	r2, [r3, #4]
900089ec:	f002 0203 	and.w	r2, r2, #3
900089f0:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
900089f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900089f6:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900089f8:	d018      	beq.n	90008a2c <HAL_JPEG_GetInfo.part.0+0x44>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
900089fa:	685a      	ldr	r2, [r3, #4]
900089fc:	f012 0203 	ands.w	r2, r2, #3
90008a00:	d10b      	bne.n	90008a1a <HAL_JPEG_GetInfo.part.0+0x32>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a02:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008a04:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008a08:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a0a:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008a0c:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a0e:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008a12:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90008a16:	2100      	movs	r1, #0
90008a18:	e02f      	b.n	90008a7a <HAL_JPEG_GetInfo.part.0+0x92>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90008a1a:	685a      	ldr	r2, [r3, #4]
90008a1c:	f002 0203 	and.w	r2, r2, #3
90008a20:	2a03      	cmp	r2, #3
90008a22:	f000 8097 	beq.w	90008b54 <HAL_JPEG_GetInfo.part.0+0x16c>
    return HAL_ERROR;
90008a26:	2001      	movs	r0, #1
}
90008a28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008a2c:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a2e:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008a30:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a34:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008a36:	68d9      	ldr	r1, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008a38:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008a3c:	0c09      	lsrs	r1, r1, #16
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008a3e:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90008a40:	695c      	ldr	r4, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008a42:	f8c9 100c 	str.w	r1, [r9, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008a46:	0916      	lsrs	r6, r2, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008a48:	6999      	ldr	r1, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008a4a:	f014 0ff0 	tst.w	r4, #240	@ 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008a4e:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90008a52:	ea4f 1714 	mov.w	r7, r4, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008a56:	ea4f 1111 	mov.w	r1, r1, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008a5a:	d105      	bne.n	90008a68 <HAL_JPEG_GetInfo.part.0+0x80>
90008a5c:	2a01      	cmp	r2, #1
90008a5e:	d103      	bne.n	90008a68 <HAL_JPEG_GetInfo.part.0+0x80>
90008a60:	070d      	lsls	r5, r1, #28
90008a62:	d1d8      	bne.n	90008a16 <HAL_JPEG_GetInfo.part.0+0x2e>
90008a64:	2102      	movs	r1, #2
90008a66:	e008      	b.n	90008a7a <HAL_JPEG_GetInfo.part.0+0x92>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008a68:	433e      	orrs	r6, r7
90008a6a:	0734      	lsls	r4, r6, #28
90008a6c:	d0d3      	beq.n	90008a16 <HAL_JPEG_GetInfo.part.0+0x2e>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008a6e:	430f      	orrs	r7, r1
90008a70:	0739      	lsls	r1, r7, #28
90008a72:	d1d0      	bne.n	90008a16 <HAL_JPEG_GetInfo.part.0+0x2e>
90008a74:	2a03      	cmp	r2, #3
90008a76:	d1ce      	bne.n	90008a16 <HAL_JPEG_GetInfo.part.0+0x2e>
90008a78:	2101      	movs	r1, #1
90008a7a:	4a42      	ldr	r2, [pc, #264]	@ (90008b84 <HAL_JPEG_GetInfo.part.0+0x19c>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90008a7c:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90008a80:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90008a84:	2600      	movs	r6, #0
90008a86:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008a8a:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90008a8e:	f241 3188 	movw	r1, #5000	@ 0x1388
90008a92:	e033      	b.n	90008afc <HAL_JPEG_GetInfo.part.0+0x114>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008a94:	f892 8001 	ldrb.w	r8, [r2, #1]
90008a98:	fb0e f707 	mul.w	r7, lr, r7
90008a9c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008a9e:	f815 8008 	ldrb.w	r8, [r5, r8]
90008aa2:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008aa6:	2f64      	cmp	r7, #100	@ 0x64
90008aa8:	d958      	bls.n	90008b5c <HAL_JPEG_GetInfo.part.0+0x174>
          quality += 5000UL / scale;
90008aaa:	fbb1 f7f7 	udiv	r7, r1, r7
90008aae:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008ab0:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90008ab4:	2f01      	cmp	r7, #1
90008ab6:	d03d      	beq.n	90008b34 <HAL_JPEG_GetInfo.part.0+0x14c>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008ab8:	f892 8002 	ldrb.w	r8, [r2, #2]
90008abc:	fb0e f707 	mul.w	r7, lr, r7
90008ac0:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008ac2:	f815 8008 	ldrb.w	r8, [r5, r8]
90008ac6:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008aca:	2f64      	cmp	r7, #100	@ 0x64
90008acc:	d955      	bls.n	90008b7a <HAL_JPEG_GetInfo.part.0+0x192>
          quality += 5000UL / scale;
90008ace:	fbb1 f7f7 	udiv	r7, r1, r7
90008ad2:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008ad4:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90008ad6:	2b01      	cmp	r3, #1
90008ad8:	d030      	beq.n	90008b3c <HAL_JPEG_GetInfo.part.0+0x154>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008ada:	78d7      	ldrb	r7, [r2, #3]
90008adc:	fb0e f303 	mul.w	r3, lr, r3
90008ae0:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008ae2:	5def      	ldrb	r7, [r5, r7]
90008ae4:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90008ae8:	2b64      	cmp	r3, #100	@ 0x64
90008aea:	d93c      	bls.n	90008b66 <HAL_JPEG_GetInfo.part.0+0x17e>
          quality += 5000UL / scale;
90008aec:	fbb1 f3f3 	udiv	r3, r1, r3
90008af0:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008af2:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90008af4:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008af8:	4294      	cmp	r4, r2
90008afa:	d025      	beq.n	90008b48 <HAL_JPEG_GetInfo.part.0+0x160>
    quantRow = *tableAddress;
90008afc:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b00:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90008b02:	2f01      	cmp	r7, #1
90008b04:	d028      	beq.n	90008b58 <HAL_JPEG_GetInfo.part.0+0x170>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008b06:	f892 8000 	ldrb.w	r8, [r2]
90008b0a:	fb0e f707 	mul.w	r7, lr, r7
90008b0e:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008b10:	f815 8008 	ldrb.w	r8, [r5, r8]
90008b14:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008b18:	2f64      	cmp	r7, #100	@ 0x64
90008b1a:	d929      	bls.n	90008b70 <HAL_JPEG_GetInfo.part.0+0x188>
          quality += 5000UL / scale;
90008b1c:	fbb1 f7f7 	udiv	r7, r1, r7
90008b20:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b22:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
90008b26:	2f01      	cmp	r7, #1
90008b28:	d1b4      	bne.n	90008a94 <HAL_JPEG_GetInfo.part.0+0xac>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b2a:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90008b2e:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008b30:	2f01      	cmp	r7, #1
90008b32:	d1c1      	bne.n	90008ab8 <HAL_JPEG_GetInfo.part.0+0xd0>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008b34:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
90008b36:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008b38:	2b01      	cmp	r3, #1
90008b3a:	d1ce      	bne.n	90008ada <HAL_JPEG_GetInfo.part.0+0xf2>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008b3c:	3204      	adds	r2, #4
        quality += 100UL;
90008b3e:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
90008b40:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008b44:	4294      	cmp	r4, r2
90008b46:	d1d9      	bne.n	90008afc <HAL_JPEG_GetInfo.part.0+0x114>
  }

  return (quality / 64UL);
90008b48:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90008b4a:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90008b4c:	f8c9 6010 	str.w	r6, [r9, #16]
}
90008b50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008b54:	2130      	movs	r1, #48	@ 0x30
90008b56:	e76a      	b.n	90008a2e <HAL_JPEG_GetInfo.part.0+0x46>
        quality += 100UL;
90008b58:	3664      	adds	r6, #100	@ 0x64
90008b5a:	e7e2      	b.n	90008b22 <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += (200UL - scale) / 2UL;
90008b5c:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008b60:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008b64:	e7a4      	b.n	90008ab0 <HAL_JPEG_GetInfo.part.0+0xc8>
90008b66:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90008b6a:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90008b6e:	e7c0      	b.n	90008af2 <HAL_JPEG_GetInfo.part.0+0x10a>
90008b70:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008b74:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008b78:	e7d3      	b.n	90008b22 <HAL_JPEG_GetInfo.part.0+0x13a>
90008b7a:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008b7e:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008b82:	e7a7      	b.n	90008ad4 <HAL_JPEG_GetInfo.part.0+0xec>
90008b84:	9002bb20 	.word	0x9002bb20

90008b88 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90008b88:	2800      	cmp	r0, #0
90008b8a:	f000 8107 	beq.w	90008d9c <HAL_JPEG_Init+0x214>
{
90008b8e:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
90008b90:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90008b94:	4605      	mov	r5, r0
90008b96:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008b9a:	2b00      	cmp	r3, #0
90008b9c:	f000 80f9 	beq.w	90008d92 <HAL_JPEG_Init+0x20a>
  __HAL_JPEG_ENABLE(hjpeg);
90008ba0:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008ba2:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
90008ba4:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90008ba6:	497e      	ldr	r1, [pc, #504]	@ (90008da0 <HAL_JPEG_Init+0x218>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008ba8:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90008bac:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008bae:	f042 0201 	orr.w	r2, r2, #1
90008bb2:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008bb4:	6822      	ldr	r2, [r4, #0]
90008bb6:	f022 0201 	bic.w	r2, r2, #1
90008bba:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008bbc:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008bbe:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008bc2:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008bc4:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008bc6:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008bca:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008bcc:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008bce:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008bd2:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008bd4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90008bd6:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008bda:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90008bdc:	4a71      	ldr	r2, [pc, #452]	@ (90008da4 <HAL_JPEG_Init+0x21c>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90008bde:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008be0:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
90008be2:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90008be4:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008be8:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90008bec:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
90008bf0:	4b6d      	ldr	r3, [pc, #436]	@ (90008da8 <HAL_JPEG_Init+0x220>)
90008bf2:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90008bf6:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008bfa:	496c      	ldr	r1, [pc, #432]	@ (90008dac <HAL_JPEG_Init+0x224>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008bfc:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c00:	4b6b      	ldr	r3, [pc, #428]	@ (90008db0 <HAL_JPEG_Init+0x228>)
90008c02:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90008c06:	4a6b      	ldr	r2, [pc, #428]	@ (90008db4 <HAL_JPEG_Init+0x22c>)
90008c08:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c0c:	4b6a      	ldr	r3, [pc, #424]	@ (90008db8 <HAL_JPEG_Init+0x230>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c0e:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c12:	496a      	ldr	r1, [pc, #424]	@ (90008dbc <HAL_JPEG_Init+0x234>)
90008c14:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90008c18:	4a69      	ldr	r2, [pc, #420]	@ (90008dc0 <HAL_JPEG_Init+0x238>)
90008c1a:	4b6a      	ldr	r3, [pc, #424]	@ (90008dc4 <HAL_JPEG_Init+0x23c>)
90008c1c:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
90008c20:	f8c4 2380 	str.w	r2, [r4, #896]	@ 0x380
90008c24:	f8c4 337c 	str.w	r3, [r4, #892]	@ 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008c28:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
  value = *address & 0xFFFF0000U;
90008c2c:	f8d4 142c 	ldr.w	r1, [r4, #1068]	@ 0x42c
90008c30:	4a65      	ldr	r2, [pc, #404]	@ (90008dc8 <HAL_JPEG_Init+0x240>)
90008c32:	400a      	ands	r2, r1
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90008c34:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008c38:	4313      	orrs	r3, r2
  *address = value;
90008c3a:	4a64      	ldr	r2, [pc, #400]	@ (90008dcc <HAL_JPEG_Init+0x244>)
90008c3c:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
90008c40:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90008c44:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90008c48:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c4a:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90008c4e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90008c50:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90008c54:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90008c58:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c5a:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90008c5e:	ea43 030c 	orr.w	r3, r3, ip
90008c62:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c66:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008c6a:	d1eb      	bne.n	90008c44 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
90008c6c:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008c70:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90008c74:	4954      	ldr	r1, [pc, #336]	@ (90008dc8 <HAL_JPEG_Init+0x240>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008c76:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90008c78:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90008c7a:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
90008c7e:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
90008c82:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90008c86:	400b      	ands	r3, r1
  *address = value;
90008c88:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008c8c:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
90008c90:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
90008c94:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90008c98:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
90008c9c:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90008ca0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90008ca2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90008ca6:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
90008caa:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90008cae:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90008cb0:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008cb2:	4b47      	ldr	r3, [pc, #284]	@ (90008dd0 <HAL_JPEG_Init+0x248>)
  *address = value;
90008cb4:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90008cb8:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008cbc:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
90008cc0:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90008cc4:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90008cc8:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90008ccc:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
90008cce:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
90008cd2:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90008cd6:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90008cda:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008cdc:	493d      	ldr	r1, [pc, #244]	@ (90008dd4 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90008cde:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008ce0:	4b3d      	ldr	r3, [pc, #244]	@ (90008dd8 <HAL_JPEG_Init+0x250>)
  *address = value;
90008ce2:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008ce6:	4a3d      	ldr	r2, [pc, #244]	@ (90008ddc <HAL_JPEG_Init+0x254>)
90008ce8:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90008cec:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008cf0:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90008cf4:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90008cf8:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008cfc:	4a38      	ldr	r2, [pc, #224]	@ (90008de0 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90008cfe:	b29b      	uxth	r3, r3
90008d00:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008d04:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90008d08:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008d0c:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90008d10:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008d12:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008d16:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90008d18:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008d1c:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90008d20:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008d22:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90008d26:	ea43 030c 	orr.w	r3, r3, ip
90008d2a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008d2e:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008d32:	d1eb      	bne.n	90008d0c <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90008d34:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90008d38:	4924      	ldr	r1, [pc, #144]	@ (90008dcc <HAL_JPEG_Init+0x244>)
90008d3a:	4628      	mov	r0, r5
90008d3c:	f7ff fd44 	bl	900087c8 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008d40:	b118      	cbz	r0, 90008d4a <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008d42:	2301      	movs	r3, #1
    return HAL_ERROR;
90008d44:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008d46:	652b      	str	r3, [r5, #80]	@ 0x50
}
90008d48:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90008d4a:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90008d4e:	4924      	ldr	r1, [pc, #144]	@ (90008de0 <HAL_JPEG_Init+0x258>)
90008d50:	4628      	mov	r0, r5
90008d52:	f7ff fd39 	bl	900087c8 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008d56:	2800      	cmp	r0, #0
90008d58:	d1f3      	bne.n	90008d42 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90008d5a:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90008d5e:	4921      	ldr	r1, [pc, #132]	@ (90008de4 <HAL_JPEG_Init+0x25c>)
90008d60:	4628      	mov	r0, r5
90008d62:	f7ff fc87 	bl	90008674 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90008d66:	2800      	cmp	r0, #0
90008d68:	d1eb      	bne.n	90008d42 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90008d6a:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90008d6e:	491e      	ldr	r1, [pc, #120]	@ (90008de8 <HAL_JPEG_Init+0x260>)
90008d70:	4628      	mov	r0, r5
90008d72:	f7ff fc7f 	bl	90008674 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90008d76:	2800      	cmp	r0, #0
90008d78:	d1e3      	bne.n	90008d42 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008d7a:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90008d7c:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008d7e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90008d82:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90008d84:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90008d86:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90008d88:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90008d8c:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
90008d8e:	6568      	str	r0, [r5, #84]	@ 0x54
}
90008d90:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
90008d92:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90008d96:	f7fb f811 	bl	90003dbc <HAL_JPEG_MspInit>
90008d9a:	e701      	b.n	90008ba0 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90008d9c:	2001      	movs	r0, #1
}
90008d9e:	4770      	bx	lr
90008da0:	9002bae0 	.word	0x9002bae0
90008da4:	9002baa0 	.word	0x9002baa0
90008da8:	01050100 	.word	0x01050100
90008dac:	0b0a0908 	.word	0x0b0a0908
90008db0:	07060504 	.word	0x07060504
90008db4:	03020100 	.word	0x03020100
90008db8:	7d010000 	.word	0x7d010000
90008dbc:	04040505 	.word	0x04040505
90008dc0:	03040203 	.word	0x03040203
90008dc4:	03010200 	.word	0x03010200
90008dc8:	ffff0000 	.word	0xffff0000
90008dcc:	9002bc14 	.word	0x9002bc14
90008dd0:	09080706 	.word	0x09080706
90008dd4:	01000404 	.word	0x01000404
90008dd8:	04040201 	.word	0x04040201
90008ddc:	05070403 	.word	0x05070403
90008de0:	9002bb60 	.word	0x9002bb60
90008de4:	9002bce4 	.word	0x9002bce4
90008de8:	9002bcc8 	.word	0x9002bcc8

90008dec <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008dec:	2b00      	cmp	r3, #0
90008dee:	bf18      	it	ne
90008df0:	2900      	cmpne	r1, #0
90008df2:	d036      	beq.n	90008e62 <HAL_JPEG_Decode_DMA+0x76>
{
90008df4:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008df6:	fab0 f580 	clz	r5, r0
90008dfa:	4604      	mov	r4, r0
90008dfc:	096d      	lsrs	r5, r5, #5
90008dfe:	b370      	cbz	r0, 90008e5e <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90008e00:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90008e04:	f1bc 0f01 	cmp.w	ip, #1
90008e08:	d022      	beq.n	90008e50 <HAL_JPEG_Decode_DMA+0x64>
90008e0a:	f04f 0c01 	mov.w	ip, #1
90008e0e:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90008e12:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90008e16:	f1bc 0f01 	cmp.w	ip, #1
90008e1a:	d117      	bne.n	90008e4c <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90008e1c:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90008e1e:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90008e22:	9b04      	ldr	r3, [sp, #16]
90008e24:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90008e26:	2304      	movs	r3, #4
90008e28:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90008e2c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e2e:	f023 030f 	bic.w	r3, r3, #15
90008e32:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90008e34:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e36:	f043 030e 	orr.w	r3, r3, #14
90008e3a:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90008e3c:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90008e3e:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90008e40:	f7ff fd4c 	bl	900088dc <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90008e44:	f7ff fd88 	bl	90008958 <JPEG_DMA_StartProcess>
90008e48:	b920      	cbnz	r0, 90008e54 <HAL_JPEG_Decode_DMA+0x68>
}
90008e4a:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90008e4c:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90008e50:	2002      	movs	r0, #2
}
90008e52:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008e54:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90008e56:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008e5a:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90008e5e:	2001      	movs	r0, #1
}
90008e60:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90008e62:	2001      	movs	r0, #1
}
90008e64:	4770      	bx	lr
90008e66:	bf00      	nop

90008e68 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008e68:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e6a:	f003 030c 	and.w	r3, r3, #12
90008e6e:	2b0c      	cmp	r3, #12
90008e70:	d01a      	beq.n	90008ea8 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008e72:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e74:	f003 030c 	and.w	r3, r3, #12
90008e78:	2b08      	cmp	r3, #8
90008e7a:	d001      	beq.n	90008e80 <HAL_JPEG_Pause+0x18>
}
90008e7c:	2000      	movs	r0, #0
90008e7e:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008e80:	07ca      	lsls	r2, r1, #31
90008e82:	d41f      	bmi.n	90008ec4 <HAL_JPEG_Pause+0x5c>
90008e84:	f04f 3cff 	mov.w	ip, #4294967295
90008e88:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008e8c:	078b      	lsls	r3, r1, #30
90008e8e:	d504      	bpl.n	90008e9a <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008e90:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e92:	4694      	mov	ip, r2
90008e94:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008e98:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008e9a:	6802      	ldr	r2, [r0, #0]
}
90008e9c:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008e9e:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008ea0:	ea03 030c 	and.w	r3, r3, ip
90008ea4:	6313      	str	r3, [r2, #48]	@ 0x30
}
90008ea6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008ea8:	07cb      	lsls	r3, r1, #31
90008eaa:	d503      	bpl.n	90008eb4 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008eac:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008eae:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008eb2:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008eb4:	0789      	lsls	r1, r1, #30
90008eb6:	d5e1      	bpl.n	90008e7c <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008eb8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008eba:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008ebe:	6543      	str	r3, [r0, #84]	@ 0x54
}
90008ec0:	2000      	movs	r0, #0
90008ec2:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008ec4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008ec6:	f06f 0c06 	mvn.w	ip, #6
90008eca:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
90008ece:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008ed2:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90008ed4:	e7da      	b.n	90008e8c <HAL_JPEG_Pause+0x24>
90008ed6:	bf00      	nop

90008ed8 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90008ed8:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90008eda:	6282      	str	r2, [r0, #40]	@ 0x28
}
90008edc:	4770      	bx	lr
90008ede:	bf00      	nop

90008ee0 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90008ee0:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90008ee2:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90008ee4:	4770      	bx	lr
90008ee6:	bf00      	nop

90008ee8 <HAL_JPEG_Abort>:
{
90008ee8:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90008eea:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90008eec:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008eee:	6d41      	ldr	r1, [r0, #84]	@ 0x54
90008ef0:	4a32      	ldr	r2, [pc, #200]	@ (90008fbc <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008ef2:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008ef6:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008ef8:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008efa:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008efc:	d043      	beq.n	90008f86 <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008efe:	6822      	ldr	r2, [r4, #0]
90008f00:	6813      	ldr	r3, [r2, #0]
90008f02:	f023 0301 	bic.w	r3, r3, #1
90008f06:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90008f08:	f7fe f8f8 	bl	900070fc <HAL_GetTick>
90008f0c:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008f0e:	e005      	b.n	90008f1c <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
90008f10:	f7fe f8f4 	bl	900070fc <HAL_GetTick>
90008f14:	1b40      	subs	r0, r0, r5
90008f16:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90008f1a:	d82b      	bhi.n	90008f74 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008f1c:	6823      	ldr	r3, [r4, #0]
90008f1e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90008f20:	0612      	lsls	r2, r2, #24
90008f22:	d4f5      	bmi.n	90008f10 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008f24:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90008f26:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008f28:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008f2c:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008f2e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008f30:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008f34:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008f36:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008f38:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008f3c:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008f3e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90008f40:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008f44:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90008f46:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90008f48:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90008f4a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008f4c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
90008f50:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
90008f52:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90008f54:	b138      	cbz	r0, 90008f66 <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f56:	2306      	movs	r3, #6
    return HAL_ERROR;
90008f58:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f5a:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90008f5e:	2300      	movs	r3, #0
90008f60:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90008f64:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90008f66:	2301      	movs	r3, #1
90008f68:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90008f6c:	2300      	movs	r3, #0
90008f6e:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90008f72:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90008f74:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f76:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008f78:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90008f7a:	f042 0208 	orr.w	r2, r2, #8
90008f7e:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f80:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90008f84:	e7ce      	b.n	90008f24 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90008f86:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90008f88:	f001 f9a8 	bl	9000a2dc <HAL_MDMA_Abort>
90008f8c:	b118      	cbz	r0, 90008f96 <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90008f8e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90008f90:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90008f92:	2b40      	cmp	r3, #64	@ 0x40
90008f94:	d00d      	beq.n	90008fb2 <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90008f96:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90008f98:	f001 f9a0 	bl	9000a2dc <HAL_MDMA_Abort>
90008f9c:	2800      	cmp	r0, #0
90008f9e:	d0ae      	beq.n	90008efe <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90008fa0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90008fa2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90008fa4:	2b40      	cmp	r3, #64	@ 0x40
90008fa6:	d1aa      	bne.n	90008efe <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008fa8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90008faa:	f043 0304 	orr.w	r3, r3, #4
90008fae:	6523      	str	r3, [r4, #80]	@ 0x50
90008fb0:	e7a5      	b.n	90008efe <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008fb2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90008fb4:	f043 0304 	orr.w	r3, r3, #4
90008fb8:	6523      	str	r3, [r4, #80]	@ 0x50
90008fba:	e7ec      	b.n	90008f96 <HAL_JPEG_Abort+0xae>
90008fbc:	ffff7ff0 	.word	0xffff7ff0

90008fc0 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
90008fc0:	4770      	bx	lr
90008fc2:	bf00      	nop

90008fc4 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90008fc4:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90008fc6:	2101      	movs	r1, #1
{
90008fc8:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008fca:	6803      	ldr	r3, [r0, #0]
90008fcc:	681a      	ldr	r2, [r3, #0]
90008fce:	f022 0201 	bic.w	r2, r2, #1
90008fd2:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008fd4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008fd6:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008fda:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90008fdc:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008fe0:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90008fe2:	f043 0304 	orr.w	r3, r3, #4
90008fe6:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90008fe8:	f7f9 f884 	bl	900020f4 <HAL_JPEG_ErrorCallback>
}
90008fec:	bd08      	pop	{r3, pc}
90008fee:	bf00      	nop

90008ff0 <JPEG_MDMAInCpltCallback>:
{
90008ff0:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90008ff2:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90008ff4:	f248 010c 	movw	r1, #32780	@ 0x800c
{
90008ff8:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008ffa:	6822      	ldr	r2, [r4, #0]
90008ffc:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008ffe:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
90009002:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009004:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009006:	400b      	ands	r3, r1
90009008:	2b0c      	cmp	r3, #12
9000900a:	d001      	beq.n	90009010 <JPEG_MDMAInCpltCallback+0x20>
}
9000900c:	b003      	add	sp, #12
9000900e:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009010:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009012:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009014:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009016:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009018:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000901a:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000901e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009020:	1a9b      	subs	r3, r3, r2
90009022:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009024:	6a21      	ldr	r1, [r4, #32]
90009026:	f7f8 ff99 	bl	90001f5c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000902a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000902c:	42ab      	cmp	r3, r5
9000902e:	d311      	bcc.n	90009054 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009030:	b305      	cbz	r5, 90009074 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009032:	fbb3 f2f5 	udiv	r2, r3, r5
90009036:	fb05 3212 	mls	r2, r5, r2, r3
9000903a:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000903c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000903e:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009040:	04d1      	lsls	r1, r2, #19
90009042:	d400      	bmi.n	90009046 <JPEG_MDMAInCpltCallback+0x56>
90009044:	b963      	cbnz	r3, 90009060 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009046:	6822      	ldr	r2, [r4, #0]
90009048:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000904a:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
9000904e:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009050:	b003      	add	sp, #12
90009052:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009054:	b1cb      	cbz	r3, 9000908a <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
90009056:	0798      	lsls	r0, r3, #30
90009058:	d119      	bne.n	9000908e <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000905a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000905c:	04d2      	lsls	r2, r2, #19
9000905e:	d4f2      	bmi.n	90009046 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009060:	6822      	ldr	r2, [r4, #0]
90009062:	2501      	movs	r5, #1
90009064:	69a1      	ldr	r1, [r4, #24]
90009066:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009068:	3240      	adds	r2, #64	@ 0x40
9000906a:	9500      	str	r5, [sp, #0]
9000906c:	f001 f8c4 	bl	9000a1f8 <HAL_MDMA_Start_IT>
90009070:	2800      	cmp	r0, #0
90009072:	d0e8      	beq.n	90009046 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009074:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009076:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
90009078:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000907a:	f043 0304 	orr.w	r3, r3, #4
9000907e:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009080:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
90009084:	f7f9 f836 	bl	900020f4 <HAL_JPEG_ErrorCallback>
        return;
90009088:	e7c0      	b.n	9000900c <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000908a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000908c:	e7db      	b.n	90009046 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000908e:	f023 0303 	bic.w	r3, r3, #3
90009092:	3304      	adds	r3, #4
90009094:	e7d2      	b.n	9000903c <JPEG_MDMAInCpltCallback+0x4c>
90009096:	bf00      	nop

90009098 <JPEG_DMA_PollResidualData>:
{
90009098:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000909a:	6802      	ldr	r2, [r0, #0]
9000909c:	2610      	movs	r6, #16
{
9000909e:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900090a0:	6d65      	ldr	r5, [r4, #84]	@ 0x54
900090a2:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
900090a6:	d11d      	bne.n	900090e4 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900090a8:	6b53      	ldr	r3, [r2, #52]	@ 0x34
900090aa:	06df      	lsls	r7, r3, #27
900090ac:	d51a      	bpl.n	900090e4 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
900090ae:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
900090b0:	69e7      	ldr	r7, [r4, #28]
900090b2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
900090b4:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
900090b6:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
900090b8:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
900090ba:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
900090bc:	6a67      	ldr	r7, [r4, #36]	@ 0x24
900090be:	69e2      	ldr	r2, [r4, #28]
900090c0:	443a      	add	r2, r7
900090c2:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
900090c4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900090c6:	69e2      	ldr	r2, [r4, #28]
900090c8:	4402      	add	r2, r0
900090ca:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
900090cc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900090ce:	69e2      	ldr	r2, [r4, #28]
900090d0:	440a      	add	r2, r1
900090d2:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
900090d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
900090d6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
900090d8:	3304      	adds	r3, #4
900090da:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
900090dc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900090de:	4293      	cmp	r3, r2
900090e0:	d021      	beq.n	90009126 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
900090e2:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
900090e4:	3e01      	subs	r6, #1
900090e6:	d1db      	bne.n	900090a0 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
900090e8:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
900090ea:	6b53      	ldr	r3, [r2, #52]	@ 0x34
900090ec:	06d8      	lsls	r0, r3, #27
900090ee:	d501      	bpl.n	900090f4 <JPEG_DMA_PollResidualData+0x5c>
900090f0:	048b      	lsls	r3, r1, #18
900090f2:	d417      	bmi.n	90009124 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900090f4:	6813      	ldr	r3, [r2, #0]
900090f6:	f023 0301 	bic.w	r3, r3, #1
900090fa:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
900090fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900090fe:	b9eb      	cbnz	r3, 9000913c <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
90009100:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
90009102:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009104:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009106:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009108:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000910c:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009110:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009114:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009116:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009118:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000911a:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000911e:	d00a      	beq.n	90009136 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009120:	f7ff ff4e 	bl	90008fc0 <HAL_JPEG_EncodeCpltCallback>
}
90009124:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009126:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009128:	4620      	mov	r0, r4
9000912a:	69e1      	ldr	r1, [r4, #28]
9000912c:	f7f8 ff36 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009130:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
90009132:	6265      	str	r5, [r4, #36]	@ 0x24
90009134:	e7d6      	b.n	900090e4 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009136:	f7f8 ffdf 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
}
9000913a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000913c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000913e:	4620      	mov	r0, r4
90009140:	69e1      	ldr	r1, [r4, #28]
90009142:	f7f8 ff2b 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009146:	2300      	movs	r3, #0
90009148:	6263      	str	r3, [r4, #36]	@ 0x24
9000914a:	e7d9      	b.n	90009100 <JPEG_DMA_PollResidualData+0x68>

9000914c <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000914c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000914e:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
90009152:	d06f      	beq.n	90009234 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009154:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009156:	f003 030c 	and.w	r3, r3, #12
9000915a:	2b0c      	cmp	r3, #12
{
9000915c:	b530      	push	{r4, r5, lr}
9000915e:	4604      	mov	r4, r0
90009160:	b083      	sub	sp, #12
90009162:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009164:	d007      	beq.n	90009176 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009166:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009168:	f003 030c 	and.w	r3, r3, #12
9000916c:	2b08      	cmp	r3, #8
9000916e:	d035      	beq.n	900091dc <HAL_JPEG_Resume+0x90>
  return HAL_OK;
90009170:	2000      	movs	r0, #0
}
90009172:	b003      	add	sp, #12
90009174:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009176:	07c8      	lsls	r0, r1, #31
90009178:	d415      	bmi.n	900091a6 <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000917a:	07a9      	lsls	r1, r5, #30
9000917c:	d5f8      	bpl.n	90009170 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000917e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009180:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009184:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009186:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009188:	041a      	lsls	r2, r3, #16
9000918a:	d44f      	bmi.n	9000922c <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000918c:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000918e:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
90009190:	2a00      	cmp	r2, #0
90009192:	d13a      	bne.n	9000920a <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009194:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009196:	2206      	movs	r2, #6
    return HAL_ERROR;
90009198:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000919a:	f043 0304 	orr.w	r3, r3, #4
9000919e:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900091a0:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
900091a4:	e7e5      	b.n	90009172 <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900091a6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900091a8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900091aa:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900091ae:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900091b0:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
900091b2:	2a00      	cmp	r2, #0
900091b4:	d0ee      	beq.n	90009194 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
900091b6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900091b8:	fbb3 f1f2 	udiv	r1, r3, r2
900091bc:	fb02 3211 	mls	r2, r2, r1, r3
900091c0:	1a9b      	subs	r3, r3, r2
900091c2:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
900091c4:	2b00      	cmp	r3, #0
900091c6:	d0d8      	beq.n	9000917a <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900091c8:	6822      	ldr	r2, [r4, #0]
900091ca:	2101      	movs	r1, #1
900091cc:	3240      	adds	r2, #64	@ 0x40
900091ce:	9100      	str	r1, [sp, #0]
900091d0:	69a1      	ldr	r1, [r4, #24]
900091d2:	f001 f811 	bl	9000a1f8 <HAL_MDMA_Start_IT>
900091d6:	2800      	cmp	r0, #0
900091d8:	d0cf      	beq.n	9000917a <HAL_JPEG_Resume+0x2e>
900091da:	e7db      	b.n	90009194 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900091dc:	f011 0101 	ands.w	r1, r1, #1
900091e0:	d011      	beq.n	90009206 <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900091e2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900091e4:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
900091e6:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900091e8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900091ec:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900091ee:	07ab      	lsls	r3, r5, #30
900091f0:	d504      	bpl.n	900091fc <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900091f2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
900091f4:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900091f6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
900091fa:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
900091fc:	6822      	ldr	r2, [r4, #0]
900091fe:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009200:	430b      	orrs	r3, r1
90009202:	6313      	str	r3, [r2, #48]	@ 0x30
90009204:	e7b4      	b.n	90009170 <HAL_JPEG_Resume+0x24>
90009206:	2228      	movs	r2, #40	@ 0x28
90009208:	e7f1      	b.n	900091ee <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000920a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000920c:	fbb3 f1f2 	udiv	r1, r3, r2
90009210:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009214:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009216:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009218:	2201      	movs	r2, #1
9000921a:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000921c:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000921e:	9200      	str	r2, [sp, #0]
90009220:	69e2      	ldr	r2, [r4, #28]
90009222:	f000 ffe9 	bl	9000a1f8 <HAL_MDMA_Start_IT>
90009226:	2800      	cmp	r0, #0
90009228:	d0a2      	beq.n	90009170 <HAL_JPEG_Resume+0x24>
9000922a:	e7b3      	b.n	90009194 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000922c:	4620      	mov	r0, r4
9000922e:	f7ff ff33 	bl	90009098 <JPEG_DMA_PollResidualData>
90009232:	e79d      	b.n	90009170 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
90009234:	2001      	movs	r0, #1
}
90009236:	4770      	bx	lr

90009238 <JPEG_MDMAOutCpltCallback>:
{
90009238:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000923a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000923c:	f248 010c 	movw	r1, #32780	@ 0x800c
{
90009240:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009242:	6823      	ldr	r3, [r4, #0]
90009244:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009246:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000924a:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000924c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000924e:	400a      	ands	r2, r1
90009250:	2a0c      	cmp	r2, #12
90009252:	d001      	beq.n	90009258 <JPEG_MDMAOutCpltCallback+0x20>
}
90009254:	b003      	add	sp, #12
90009256:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
90009258:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000925a:	0692      	lsls	r2, r2, #26
9000925c:	d505      	bpl.n	9000926a <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000925e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009260:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009264:	631a      	str	r2, [r3, #48]	@ 0x30
}
90009266:	b003      	add	sp, #12
90009268:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000926a:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000926c:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000926e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009270:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009272:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009274:	f3c2 0210 	ubfx	r2, r2, #0, #17
90009278:	1a9b      	subs	r3, r3, r2
9000927a:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000927c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000927e:	f7f8 fe8d 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009282:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009284:	049b      	lsls	r3, r3, #18
90009286:	d501      	bpl.n	9000928c <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009288:	6823      	ldr	r3, [r4, #0]
9000928a:	e7e8      	b.n	9000925e <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000928c:	6821      	ldr	r1, [r4, #0]
9000928e:	2501      	movs	r5, #1
90009290:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009292:	69e2      	ldr	r2, [r4, #28]
90009294:	3144      	adds	r1, #68	@ 0x44
90009296:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009298:	9500      	str	r5, [sp, #0]
9000929a:	f000 ffad 	bl	9000a1f8 <HAL_MDMA_Start_IT>
9000929e:	2800      	cmp	r0, #0
900092a0:	d0f2      	beq.n	90009288 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900092a2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900092a4:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
900092a6:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900092a8:	f043 0304 	orr.w	r3, r3, #4
900092ac:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900092ae:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
900092b2:	f7f8 ff1f 	bl	900020f4 <HAL_JPEG_ErrorCallback>
          return;
900092b6:	e7cd      	b.n	90009254 <JPEG_MDMAOutCpltCallback+0x1c>

900092b8 <JPEG_MDMAOutAbortCallback>:
{
900092b8:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
900092ba:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
900092bc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900092be:	041a      	lsls	r2, r3, #16
900092c0:	d400      	bmi.n	900092c4 <JPEG_MDMAOutAbortCallback+0xc>
}
900092c2:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900092c4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
900092c6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900092c8:	681b      	ldr	r3, [r3, #0]
900092ca:	695b      	ldr	r3, [r3, #20]
900092cc:	f3c3 0310 	ubfx	r3, r3, #0, #17
900092d0:	1ad3      	subs	r3, r2, r3
900092d2:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
900092d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900092d6:	429a      	cmp	r2, r3
900092d8:	d025      	beq.n	90009326 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
900092da:	6822      	ldr	r2, [r4, #0]
900092dc:	6b55      	ldr	r5, [r2, #52]	@ 0x34
900092de:	f015 0510 	ands.w	r5, r5, #16
900092e2:	d118      	bne.n	90009316 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
900092e4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900092e6:	bb4b      	cbnz	r3, 9000933c <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900092e8:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
900092ea:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
900092ec:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900092ee:	f023 0301 	bic.w	r3, r3, #1
900092f2:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
900092f4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900092f6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900092f8:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900092fc:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009300:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009304:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009306:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009308:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000930a:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000930e:	d012      	beq.n	90009336 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009310:	f7ff fe56 	bl	90008fc0 <HAL_JPEG_EncodeCpltCallback>
}
90009314:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009316:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009318:	049b      	lsls	r3, r3, #18
9000931a:	d4d2      	bmi.n	900092c2 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000931c:	4620      	mov	r0, r4
}
9000931e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009322:	f7ff beb9 	b.w	90009098 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009326:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009328:	4620      	mov	r0, r4
9000932a:	69e1      	ldr	r1, [r4, #28]
9000932c:	f7f8 fe36 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009330:	2300      	movs	r3, #0
90009332:	6263      	str	r3, [r4, #36]	@ 0x24
90009334:	e7d1      	b.n	900092da <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009336:	f7f8 fedf 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
}
9000933a:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000933c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000933e:	4620      	mov	r0, r4
90009340:	69e1      	ldr	r1, [r4, #28]
90009342:	f7f8 fe2b 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009346:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009348:	6265      	str	r5, [r4, #36]	@ 0x24
9000934a:	e7cd      	b.n	900092e8 <JPEG_MDMAOutAbortCallback+0x30>

9000934c <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000934c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000934e:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009350:	f002 0203 	and.w	r2, r2, #3
90009354:	2a02      	cmp	r2, #2
{
90009356:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000935a:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000935c:	d01e      	beq.n	9000939c <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000935e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009360:	04d7      	lsls	r7, r2, #19
90009362:	d407      	bmi.n	90009374 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009364:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009366:	0796      	lsls	r6, r2, #30
90009368:	f100 811b 	bmi.w	900095a2 <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000936c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000936e:	0750      	lsls	r0, r2, #29
90009370:	f100 81cc 	bmi.w	9000970c <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009374:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90009376:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000937a:	d107      	bne.n	9000938c <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000937c:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000937e:	f016 0608 	ands.w	r6, r6, #8
90009382:	d14a      	bne.n	9000941a <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009384:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009386:	06d2      	lsls	r2, r2, #27
90009388:	f100 81fe 	bmi.w	90009788 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000938c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000938e:	f002 0238 	and.w	r2, r2, #56	@ 0x38
90009392:	2a20      	cmp	r2, #32
90009394:	d019      	beq.n	900093ca <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
90009396:	2000      	movs	r0, #0
}
90009398:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000939c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000939e:	0652      	lsls	r2, r2, #25
900093a0:	d5dd      	bpl.n	9000935e <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
900093a2:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
900093a4:	4629      	mov	r1, r5
900093a6:	f7ff fb1f 	bl	900089e8 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
900093aa:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
900093ac:	4629      	mov	r1, r5
900093ae:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
900093b0:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
900093b2:	f7f8 fda5 	bl	90001f00 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
900093b6:	6823      	ldr	r3, [r4, #0]
900093b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900093ba:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
900093be:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
900093c0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900093c2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
900093c6:	639a      	str	r2, [r3, #56]	@ 0x38
900093c8:	e7c9      	b.n	9000935e <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900093ca:	681a      	ldr	r2, [r3, #0]
900093cc:	f022 0201 	bic.w	r2, r2, #1
900093d0:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900093d2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900093d4:	f002 020c 	and.w	r2, r2, #12
900093d8:	2a08      	cmp	r2, #8
900093da:	f000 8201 	beq.w	900097e0 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900093de:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900093e0:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900093e4:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
900093e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900093e8:	2b00      	cmp	r3, #0
900093ea:	f040 81fe 	bne.w	900097ea <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
900093ee:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
900093f0:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900093f2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900093f4:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093f6:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900093fa:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900093fe:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009402:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009404:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009406:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009408:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000940c:	f000 81e5 	beq.w	900097da <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009410:	f7ff fdd6 	bl	90008fc0 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009414:	2001      	movs	r0, #1
}
90009416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000941a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000941c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000941e:	3220      	adds	r2, #32
90009420:	4296      	cmp	r6, r2
90009422:	f0c0 8200 	bcc.w	90009826 <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
90009426:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009428:	69e1      	ldr	r1, [r4, #28]
9000942a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000942c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000942e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009430:	69e2      	ldr	r2, [r4, #28]
90009432:	440a      	add	r2, r1
90009434:	0a19      	lsrs	r1, r3, #8
90009436:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009438:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000943a:	69e2      	ldr	r2, [r4, #28]
9000943c:	440a      	add	r2, r1
9000943e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009440:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009442:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009444:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009446:	69e2      	ldr	r2, [r4, #28]
90009448:	440a      	add	r2, r1
9000944a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000944c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000944e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009450:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009452:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009454:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009456:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009458:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000945a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000945c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000945e:	69e2      	ldr	r2, [r4, #28]
90009460:	440a      	add	r2, r1
90009462:	0a19      	lsrs	r1, r3, #8
90009464:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009466:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009468:	69e2      	ldr	r2, [r4, #28]
9000946a:	440a      	add	r2, r1
9000946c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000946e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009470:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009472:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009474:	69e2      	ldr	r2, [r4, #28]
90009476:	440a      	add	r2, r1
90009478:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000947a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000947c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000947e:	3304      	adds	r3, #4
90009480:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009482:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009484:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009486:	69e1      	ldr	r1, [r4, #28]
90009488:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000948a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000948c:	69e2      	ldr	r2, [r4, #28]
9000948e:	440a      	add	r2, r1
90009490:	0a19      	lsrs	r1, r3, #8
90009492:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009494:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009496:	69e2      	ldr	r2, [r4, #28]
90009498:	440a      	add	r2, r1
9000949a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000949c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000949e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094a0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094a2:	69e2      	ldr	r2, [r4, #28]
900094a4:	440a      	add	r2, r1
900094a6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900094a8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900094aa:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900094ac:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094ae:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900094b0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900094b2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094b4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094b6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900094b8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094ba:	69e2      	ldr	r2, [r4, #28]
900094bc:	440a      	add	r2, r1
900094be:	0a19      	lsrs	r1, r3, #8
900094c0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094c2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094c4:	69e2      	ldr	r2, [r4, #28]
900094c6:	440a      	add	r2, r1
900094c8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094ca:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094cc:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094ce:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094d0:	69e2      	ldr	r2, [r4, #28]
900094d2:	440a      	add	r2, r1
900094d4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900094d6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900094d8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900094da:	3304      	adds	r3, #4
900094dc:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900094de:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094e0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094e2:	69e1      	ldr	r1, [r4, #28]
900094e4:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900094e6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094e8:	69e2      	ldr	r2, [r4, #28]
900094ea:	440a      	add	r2, r1
900094ec:	0a19      	lsrs	r1, r3, #8
900094ee:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094f0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094f2:	69e2      	ldr	r2, [r4, #28]
900094f4:	440a      	add	r2, r1
900094f6:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094f8:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094fa:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094fc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094fe:	69e2      	ldr	r2, [r4, #28]
90009500:	440a      	add	r2, r1
90009502:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009504:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009506:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009508:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000950a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000950c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000950e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009510:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009512:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009514:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009516:	69e2      	ldr	r2, [r4, #28]
90009518:	440a      	add	r2, r1
9000951a:	0a19      	lsrs	r1, r3, #8
9000951c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000951e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009520:	69e2      	ldr	r2, [r4, #28]
90009522:	440a      	add	r2, r1
90009524:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009526:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009528:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000952a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000952c:	69e2      	ldr	r2, [r4, #28]
9000952e:	440a      	add	r2, r1
90009530:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009532:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009534:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009536:	3304      	adds	r3, #4
90009538:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000953a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000953c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000953e:	69e1      	ldr	r1, [r4, #28]
90009540:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009542:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009544:	69e2      	ldr	r2, [r4, #28]
90009546:	440a      	add	r2, r1
90009548:	0a19      	lsrs	r1, r3, #8
9000954a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000954c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000954e:	69e2      	ldr	r2, [r4, #28]
90009550:	440a      	add	r2, r1
90009552:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009554:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009556:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009558:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000955a:	69e2      	ldr	r2, [r4, #28]
9000955c:	440a      	add	r2, r1
9000955e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009560:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009562:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009564:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009566:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009568:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000956a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000956c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000956e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009570:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009572:	69e2      	ldr	r2, [r4, #28]
90009574:	440a      	add	r2, r1
90009576:	0a19      	lsrs	r1, r3, #8
90009578:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000957a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000957c:	69e2      	ldr	r2, [r4, #28]
9000957e:	440a      	add	r2, r1
90009580:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009582:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009584:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009586:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009588:	69e2      	ldr	r2, [r4, #28]
9000958a:	440a      	add	r2, r1
9000958c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000958e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009590:	3304      	adds	r3, #4
90009592:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009594:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009596:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009598:	429a      	cmp	r2, r3
9000959a:	f000 8258 	beq.w	90009a4e <JPEG_Process+0x702>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000959e:	6823      	ldr	r3, [r4, #0]
900095a0:	e6f4      	b.n	9000938c <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
900095a2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900095a4:	2a00      	cmp	r2, #0
900095a6:	f000 8128 	beq.w	900097fa <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900095aa:	6a21      	ldr	r1, [r4, #32]
900095ac:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
900095ae:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900095b0:	f240 81b9 	bls.w	90009926 <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
900095b4:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
900095b6:	6d61      	ldr	r1, [r4, #84]	@ 0x54
900095b8:	04cd      	lsls	r5, r1, #19
900095ba:	f53f aedb 	bmi.w	90009374 <JPEG_Process+0x28>
900095be:	2a00      	cmp	r2, #0
900095c0:	f43f aed8 	beq.w	90009374 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
900095c4:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
900095c6:	ea4f 0092 	mov.w	r0, r2, lsr #2
    if (nb_words >= nbRequestWords)
900095ca:	f200 8248 	bhi.w	90009a5e <JPEG_Process+0x712>
      if (nb_words > 0UL)
900095ce:	2a03      	cmp	r2, #3
900095d0:	f240 82c0 	bls.w	90009b54 <JPEG_Process+0x808>
          input_count = hjpeg->JpegInCount;
900095d4:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
900095d6:	2801      	cmp	r0, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900095d8:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900095da:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900095de:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900095e0:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900095e2:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900095e4:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900095e8:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900095ea:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
900095ee:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900095f2:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900095f6:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900095f8:	6a21      	ldr	r1, [r4, #32]
900095fa:	f101 0104 	add.w	r1, r1, #4
900095fe:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009600:	f43f aeb8 	beq.w	90009374 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009604:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009606:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009608:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000960c:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000960e:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009610:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009612:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009616:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009618:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000961c:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009620:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009624:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009626:	6a21      	ldr	r1, [r4, #32]
90009628:	f101 0104 	add.w	r1, r1, #4
9000962c:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000962e:	f43f aea1 	beq.w	90009374 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009632:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009634:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009636:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000963a:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000963c:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000963e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009640:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009644:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009646:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000964a:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000964e:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009652:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009654:	6a21      	ldr	r1, [r4, #32]
90009656:	f101 0104 	add.w	r1, r1, #4
9000965a:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000965c:	f43f ae8a 	beq.w	90009374 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009660:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009662:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009664:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009668:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000966a:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000966c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000966e:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009672:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009674:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009678:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000967c:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009680:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009682:	6a21      	ldr	r1, [r4, #32]
90009684:	f101 0104 	add.w	r1, r1, #4
90009688:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000968a:	f43f ae73 	beq.w	90009374 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000968e:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009690:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009692:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009696:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009698:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000969a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000969c:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900096a0:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096a2:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
900096a6:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096aa:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096ae:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900096b0:	6a21      	ldr	r1, [r4, #32]
900096b2:	f101 0104 	add.w	r1, r1, #4
900096b6:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096b8:	f43f ae5c 	beq.w	90009374 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900096bc:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096be:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096c0:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096c4:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096c6:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096c8:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096ca:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900096ce:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096d0:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
900096d4:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096d8:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096dc:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900096de:	6a21      	ldr	r1, [r4, #32]
900096e0:	f101 0104 	add.w	r1, r1, #4
900096e4:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096e6:	f47f ae45 	bne.w	90009374 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900096ea:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096ec:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096ee:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096f0:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900096f2:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096f4:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096f6:	7849      	ldrb	r1, [r1, #1]
900096f8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900096fc:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096fe:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009702:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009704:	6a22      	ldr	r2, [r4, #32]
90009706:	3204      	adds	r2, #4
90009708:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000970a:	e633      	b.n	90009374 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000970c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000970e:	2a00      	cmp	r2, #0
90009710:	d073      	beq.n	900097fa <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009712:	6a21      	ldr	r1, [r4, #32]
90009714:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009716:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009718:	f200 8182 	bhi.w	90009a20 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000971c:	428a      	cmp	r2, r1
9000971e:	f040 8104 	bne.w	9000992a <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009722:	6a21      	ldr	r1, [r4, #32]
90009724:	4620      	mov	r0, r4
90009726:	f7f8 fc19 	bl	90001f5c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000972a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000972c:	2a04      	cmp	r2, #4
9000972e:	d902      	bls.n	90009736 <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009730:	f022 0203 	bic.w	r2, r2, #3
90009734:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009736:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009738:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000973a:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000973c:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000973e:	04c9      	lsls	r1, r1, #19
90009740:	f53f ae18 	bmi.w	90009374 <JPEG_Process+0x28>
90009744:	2a00      	cmp	r2, #0
90009746:	f43f ae15 	beq.w	90009374 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000974a:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000974c:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000974e:	f040 8177 	bne.w	90009a40 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009752:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009754:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009756:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009758:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000975a:	f105 0501 	add.w	r5, r5, #1
9000975e:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009760:	d010      	beq.n	90009784 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009762:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009764:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009766:	5d45      	ldrb	r5, [r0, r5]
90009768:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000976c:	6a25      	ldr	r5, [r4, #32]
9000976e:	f105 0501 	add.w	r5, r5, #1
90009772:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009774:	d106      	bne.n	90009784 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009776:	6a22      	ldr	r2, [r4, #32]
90009778:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000977a:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000977c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
90009780:	3201      	adds	r2, #1
90009782:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009784:	6419      	str	r1, [r3, #64]	@ 0x40
90009786:	e5f5      	b.n	90009374 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009788:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000978a:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000978c:	3204      	adds	r2, #4
9000978e:	4295      	cmp	r5, r2
90009790:	f0c0 80cd 	bcc.w	9000992e <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
90009794:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009796:	69e1      	ldr	r1, [r4, #28]
90009798:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000979a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000979c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000979e:	69e2      	ldr	r2, [r4, #28]
900097a0:	440a      	add	r2, r1
900097a2:	0a19      	lsrs	r1, r3, #8
900097a4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900097a6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900097a8:	69e2      	ldr	r2, [r4, #28]
900097aa:	440a      	add	r2, r1
900097ac:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900097ae:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900097b0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900097b2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900097b4:	69e2      	ldr	r2, [r4, #28]
900097b6:	440a      	add	r2, r1
900097b8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900097ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900097bc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
900097be:	3304      	adds	r3, #4
900097c0:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900097c2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900097c4:	429a      	cmp	r2, r3
900097c6:	f47f aeea 	bne.w	9000959e <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900097ca:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900097cc:	4620      	mov	r0, r4
900097ce:	69e1      	ldr	r1, [r4, #28]
900097d0:	f7f8 fbe4 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900097d4:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
900097d6:	6266      	str	r6, [r4, #36]	@ 0x24
900097d8:	e5d8      	b.n	9000938c <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900097da:	f7f8 fc8d 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
900097de:	e619      	b.n	90009414 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900097e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900097e2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900097e6:	631a      	str	r2, [r3, #48]	@ 0x30
900097e8:	e5f9      	b.n	900093de <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900097ea:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900097ec:	4620      	mov	r0, r4
900097ee:	69e1      	ldr	r1, [r4, #28]
900097f0:	f7f8 fbd4 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
900097f4:	2300      	movs	r3, #0
900097f6:	6263      	str	r3, [r4, #36]	@ 0x24
900097f8:	e5f9      	b.n	900093ee <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900097fa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900097fc:	f002 020c 	and.w	r2, r2, #12
90009800:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009802:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009804:	f000 811e 	beq.w	90009a44 <JPEG_Process+0x6f8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009808:	f002 020c 	and.w	r2, r2, #12
9000980c:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000980e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009810:	f47f adb0 	bne.w	90009374 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009814:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009818:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000981a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000981c:	f022 0206 	bic.w	r2, r2, #6
90009820:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009822:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009824:	e5a6      	b.n	90009374 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009826:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009828:	4296      	cmp	r6, r2
9000982a:	f67f adaf 	bls.w	9000938c <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000982e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009830:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
90009832:	0880      	lsrs	r0, r0, #2
90009834:	d020      	beq.n	90009878 <JPEG_Process+0x52c>
90009836:	4629      	mov	r1, r5
90009838:	e000      	b.n	9000983c <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000983a:	6823      	ldr	r3, [r4, #0]
9000983c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000983e:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009840:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009842:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009844:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009846:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009848:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000984a:	69e2      	ldr	r2, [r4, #28]
9000984c:	4432      	add	r2, r6
9000984e:	ea4f 2613 	mov.w	r6, r3, lsr #8
90009852:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009854:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009856:	69e2      	ldr	r2, [r4, #28]
90009858:	4432      	add	r2, r6
9000985a:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000985e:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009862:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009864:	6a66      	ldr	r6, [r4, #36]	@ 0x24
90009866:	69e2      	ldr	r2, [r4, #28]
90009868:	4432      	add	r2, r6
9000986a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000986c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000986e:	f103 0304 	add.w	r3, r3, #4
90009872:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
90009874:	d1e1      	bne.n	9000983a <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009876:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90009878:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000987a:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000987c:	429e      	cmp	r6, r3
9000987e:	f000 8161 	beq.w	90009b44 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
90009882:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009886:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009888:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000988c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000988e:	d00e      	beq.n	900098ae <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009890:	f005 0303 	and.w	r3, r5, #3
90009894:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009896:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009898:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000989a:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000989c:	fa27 f303 	lsr.w	r3, r7, r3
900098a0:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
900098a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900098a4:	69e1      	ldr	r1, [r4, #28]
900098a6:	f103 0301 	add.w	r3, r3, #1
900098aa:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
900098ac:	d1f0      	bne.n	90009890 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
900098ae:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900098b2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098b4:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
900098b6:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900098ba:	f7f8 fb6f 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
900098be:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
900098c0:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
900098c2:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900098c4:	f63f ae6b 	bhi.w	9000959e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900098c8:	ea4f 02c6 	mov.w	r2, r6, lsl #3
900098cc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098ce:	69e0      	ldr	r0, [r4, #28]
900098d0:	fa27 f502 	lsr.w	r5, r7, r2
900098d4:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
900098d6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098d8:	f101 0101 	add.w	r1, r1, #1
900098dc:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900098de:	f43f ae5e 	beq.w	9000959e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900098e2:	f102 0108 	add.w	r1, r2, #8
900098e6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900098e8:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
900098ea:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900098ec:	fa27 f101 	lsr.w	r1, r7, r1
900098f0:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
900098f2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098f4:	f101 0101 	add.w	r1, r1, #1
900098f8:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900098fa:	f43f ae50 	beq.w	9000959e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900098fe:	3210      	adds	r2, #16
90009900:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009902:	69e0      	ldr	r0, [r4, #28]
90009904:	fa27 f202 	lsr.w	r2, r7, r2
90009908:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000990a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000990c:	3201      	adds	r2, #1
9000990e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009910:	2e00      	cmp	r6, #0
90009912:	f47f ae44 	bne.w	9000959e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009916:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009918:	0e3f      	lsrs	r7, r7, #24
9000991a:	69e2      	ldr	r2, [r4, #28]
9000991c:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000991e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009920:	3301      	adds	r3, #1
90009922:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009924:	e63b      	b.n	9000959e <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009926:	428a      	cmp	r2, r1
90009928:	d07c      	beq.n	90009a24 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000992a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000992c:	e522      	b.n	90009374 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000992e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009930:	4295      	cmp	r5, r2
90009932:	f67f ad2b 	bls.w	9000938c <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009936:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009938:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000993a:	0880      	lsrs	r0, r0, #2
9000993c:	d020      	beq.n	90009980 <JPEG_Process+0x634>
9000993e:	4631      	mov	r1, r6
90009940:	e000      	b.n	90009944 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
90009942:	6823      	ldr	r3, [r4, #0]
90009944:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
90009946:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009948:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000994a:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000994c:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000994e:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009950:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009952:	69e2      	ldr	r2, [r4, #28]
90009954:	442a      	add	r2, r5
90009956:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000995a:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000995c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000995e:	69e2      	ldr	r2, [r4, #28]
90009960:	442a      	add	r2, r5
90009962:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009966:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000996a:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000996c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000996e:	69e2      	ldr	r2, [r4, #28]
90009970:	442a      	add	r2, r5
90009972:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009974:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009976:	f103 0304 	add.w	r3, r3, #4
9000997a:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000997c:	d1e1      	bne.n	90009942 <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000997e:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
90009980:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009982:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009984:	429d      	cmp	r5, r3
90009986:	f000 80dd 	beq.w	90009b44 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000998a:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000998e:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009990:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
90009994:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
90009996:	d00e      	beq.n	900099b6 <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009998:	f006 0303 	and.w	r3, r6, #3
9000999c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000999e:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
900099a0:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
900099a2:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
900099a4:	fa27 f303 	lsr.w	r3, r7, r3
900099a8:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
900099aa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900099ac:	69e1      	ldr	r1, [r4, #28]
900099ae:	f103 0301 	add.w	r3, r3, #1
900099b2:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
900099b4:	d1f0      	bne.n	90009998 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
900099b6:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900099ba:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900099bc:	4620      	mov	r0, r4
900099be:	f7f8 faed 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
900099c2:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
900099c6:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
900099c8:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
900099ca:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900099cc:	f63f ade7 	bhi.w	9000959e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099d0:	ea4f 02c3 	mov.w	r2, r3, lsl #3
900099d4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099d6:	69e0      	ldr	r0, [r4, #28]
900099d8:	fa27 f502 	lsr.w	r5, r7, r2
900099dc:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
900099de:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099e0:	f101 0101 	add.w	r1, r1, #1
900099e4:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900099e6:	f43f adda 	beq.w	9000959e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099ea:	f102 0108 	add.w	r1, r2, #8
900099ee:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900099f0:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
900099f2:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099f4:	fa27 f101 	lsr.w	r1, r7, r1
900099f8:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
900099fa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099fc:	f101 0101 	add.w	r1, r1, #1
90009a00:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009a02:	f43f adcc 	beq.w	9000959e <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009a06:	3210      	adds	r2, #16
90009a08:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009a0a:	69e0      	ldr	r0, [r4, #28]
90009a0c:	fa27 f202 	lsr.w	r2, r7, r2
90009a10:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
90009a12:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009a14:	3201      	adds	r2, #1
90009a16:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009a18:	2b00      	cmp	r3, #0
90009a1a:	f43f af7c 	beq.w	90009916 <JPEG_Process+0x5ca>
90009a1e:	e5be      	b.n	9000959e <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009a20:	1a52      	subs	r2, r2, r1
90009a22:	e68b      	b.n	9000973c <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009a24:	6a21      	ldr	r1, [r4, #32]
90009a26:	4620      	mov	r0, r4
90009a28:	f7f8 fa98 	bl	90001f5c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009a2c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009a2e:	2a04      	cmp	r2, #4
90009a30:	d902      	bls.n	90009a38 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009a32:	f022 0203 	bic.w	r2, r2, #3
90009a36:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009a38:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a3a:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009a3c:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
90009a3e:	e5ba      	b.n	900095b6 <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
90009a40:	6a22      	ldr	r2, [r4, #32]
90009a42:	e653      	b.n	900096ec <JPEG_Process+0x3a0>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009a44:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009a48:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009a4a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009a4c:	e492      	b.n	90009374 <JPEG_Process+0x28>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a4e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009a50:	4620      	mov	r0, r4
90009a52:	69e1      	ldr	r1, [r4, #28]
90009a54:	f7f8 faa2 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009a58:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009a5a:	6265      	str	r5, [r4, #36]	@ 0x24
90009a5c:	e496      	b.n	9000938c <JPEG_Process+0x40>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a5e:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
90009a60:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a62:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a64:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a66:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a68:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a6a:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a6c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a6e:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009a72:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a74:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a78:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009a7a:	6a21      	ldr	r1, [r4, #32]
90009a7c:	3104      	adds	r1, #4
90009a7e:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009a80:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a82:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a84:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a86:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a88:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a8a:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a8c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a8e:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009a92:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a94:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a98:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009a9a:	6a21      	ldr	r1, [r4, #32]
90009a9c:	3104      	adds	r1, #4
90009a9e:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009aa0:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aa2:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009aa4:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aa6:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aa8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aaa:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009aac:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aae:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009ab2:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ab4:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ab8:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009aba:	6a21      	ldr	r1, [r4, #32]
90009abc:	3104      	adds	r1, #4
90009abe:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ac0:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ac2:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ac4:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ac6:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ac8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aca:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009acc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ace:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009ad2:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ad4:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ad8:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009ada:	6a21      	ldr	r1, [r4, #32]
90009adc:	3104      	adds	r1, #4
90009ade:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ae0:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ae2:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ae4:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ae6:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ae8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aea:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009aec:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009aee:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009af2:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009af4:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009af8:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009afa:	6a21      	ldr	r1, [r4, #32]
90009afc:	3104      	adds	r1, #4
90009afe:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b00:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b02:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b04:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b06:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b08:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b0a:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b0c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b0e:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009b12:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b14:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b18:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b1a:	6a21      	ldr	r1, [r4, #32]
90009b1c:	3104      	adds	r1, #4
90009b1e:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b20:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b22:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b24:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b26:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b28:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b2a:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b2c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b2e:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009b32:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b34:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b38:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b3a:	6a21      	ldr	r1, [r4, #32]
90009b3c:	3104      	adds	r1, #4
90009b3e:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b40:	6a20      	ldr	r0, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b42:	e5d3      	b.n	900096ec <JPEG_Process+0x3a0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009b44:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009b46:	4620      	mov	r0, r4
90009b48:	f7f8 fa28 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009b4c:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009b4e:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009b50:	6262      	str	r2, [r4, #36]	@ 0x24
90009b52:	e41b      	b.n	9000938c <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b54:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b56:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009b58:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b5a:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
90009b5c:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b60:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
90009b62:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b64:	f43f ae0e 	beq.w	90009784 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b68:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b6a:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b6c:	5c28      	ldrb	r0, [r5, r0]
90009b6e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
90009b72:	6a20      	ldr	r0, [r4, #32]
90009b74:	f100 0001 	add.w	r0, r0, #1
90009b78:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b7a:	f47f ae03 	bne.w	90009784 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b7e:	6a22      	ldr	r2, [r4, #32]
90009b80:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
90009b82:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b84:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
90009b88:	3201      	adds	r2, #1
90009b8a:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009b8c:	e5fa      	b.n	90009784 <JPEG_Process+0x438>
90009b8e:	bf00      	nop

90009b90 <HAL_JPEG_IRQHandler>:
{
90009b90:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
90009b92:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90009b96:	3b03      	subs	r3, #3
90009b98:	2b01      	cmp	r3, #1
90009b9a:	d900      	bls.n	90009b9e <HAL_JPEG_IRQHandler+0xe>
}
90009b9c:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009b9e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009ba0:	4604      	mov	r4, r0
90009ba2:	f003 030c 	and.w	r3, r3, #12
90009ba6:	2b08      	cmp	r3, #8
90009ba8:	d050      	beq.n	90009c4c <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009baa:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009bac:	f003 030c 	and.w	r3, r3, #12
90009bb0:	2b0c      	cmp	r3, #12
90009bb2:	d1f3      	bne.n	90009b9c <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bb4:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009bb6:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bb8:	f002 0203 	and.w	r2, r2, #3
90009bbc:	2a02      	cmp	r2, #2
90009bbe:	d049      	beq.n	90009c54 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
90009bc0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009bc2:	0692      	lsls	r2, r2, #26
90009bc4:	d5ea      	bpl.n	90009b9c <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009bc6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009bc8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009bca:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
90009bce:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009bd0:	681a      	ldr	r2, [r3, #0]
90009bd2:	f022 0201 	bic.w	r2, r2, #1
90009bd6:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009bd8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009bda:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009bde:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009be0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009be2:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009be6:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009be8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90009bec:	2b02      	cmp	r3, #2
90009bee:	d054      	beq.n	90009c9a <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
90009bf0:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009bf2:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90009bf6:	2b02      	cmp	r3, #2
90009bf8:	d043      	beq.n	90009c82 <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009bfa:	6803      	ldr	r3, [r0, #0]
90009bfc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009bfe:	695b      	ldr	r3, [r3, #20]
90009c00:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009c04:	1ad3      	subs	r3, r2, r3
90009c06:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009c08:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009c0a:	429a      	cmp	r2, r3
90009c0c:	d048      	beq.n	90009ca0 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009c0e:	6822      	ldr	r2, [r4, #0]
90009c10:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90009c12:	f015 0510 	ands.w	r5, r5, #16
90009c16:	d138      	bne.n	90009c8a <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
90009c18:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009c1a:	2b00      	cmp	r3, #0
90009c1c:	d14b      	bne.n	90009cb6 <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009c1e:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009c20:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009c22:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009c24:	f023 0301 	bic.w	r3, r3, #1
90009c28:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009c2a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009c2c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c2e:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009c32:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009c36:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009c3a:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c3c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009c3e:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009c40:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c44:	d034      	beq.n	90009cb0 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009c46:	f7ff f9bb 	bl	90008fc0 <HAL_JPEG_EncodeCpltCallback>
}
90009c4a:	bd38      	pop	{r3, r4, r5, pc}
90009c4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
90009c50:	f7ff bb7c 	b.w	9000934c <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009c54:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009c56:	0651      	lsls	r1, r2, #25
90009c58:	d5b2      	bpl.n	90009bc0 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009c5a:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009c5c:	4629      	mov	r1, r5
90009c5e:	f7fe fec3 	bl	900089e8 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009c62:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009c64:	4629      	mov	r1, r5
90009c66:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009c68:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009c6a:	f7f8 f949 	bl	90001f00 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009c6e:	6823      	ldr	r3, [r4, #0]
90009c70:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009c72:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
90009c76:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009c78:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009c7a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90009c7e:	639a      	str	r2, [r3, #56]	@ 0x38
90009c80:	e79e      	b.n	90009bc0 <HAL_JPEG_IRQHandler+0x30>
}
90009c82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
90009c86:	f000 bb63 	b.w	9000a350 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009c8a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009c8c:	049b      	lsls	r3, r3, #18
90009c8e:	d485      	bmi.n	90009b9c <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
90009c90:	4620      	mov	r0, r4
}
90009c92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009c96:	f7ff b9ff 	b.w	90009098 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
90009c9a:	f000 fb59 	bl	9000a350 <HAL_MDMA_Abort_IT>
90009c9e:	e7a7      	b.n	90009bf0 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009ca0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009ca2:	4620      	mov	r0, r4
90009ca4:	69e1      	ldr	r1, [r4, #28]
90009ca6:	f7f8 f979 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009caa:	2300      	movs	r3, #0
90009cac:	6263      	str	r3, [r4, #36]	@ 0x24
90009cae:	e7ae      	b.n	90009c0e <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009cb0:	f7f8 fa22 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
}
90009cb4:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009cb6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009cb8:	4620      	mov	r0, r4
90009cba:	69e1      	ldr	r1, [r4, #28]
90009cbc:	f7f8 f96e 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009cc0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009cc2:	6265      	str	r5, [r4, #36]	@ 0x24
90009cc4:	e7ab      	b.n	90009c1e <HAL_JPEG_IRQHandler+0x8e>
90009cc6:	bf00      	nop

90009cc8 <HAL_JPEG_GetState>:
  return hjpeg->State;
90009cc8:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
90009ccc:	4770      	bx	lr
90009cce:	bf00      	nop

90009cd0 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
90009cd0:	2800      	cmp	r0, #0
90009cd2:	d067      	beq.n	90009da4 <HAL_LTDC_Init+0xd4>
{
90009cd4:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
90009cd6:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
90009cda:	4604      	mov	r4, r0
90009cdc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90009ce0:	2b00      	cmp	r3, #0
90009ce2:	d05a      	beq.n	90009d9a <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009ce4:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009ce6:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009ce8:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009cec:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009cf0:	4302      	orrs	r2, r0
90009cf2:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009cf4:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009cf6:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90009cf8:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009cfa:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90009cfe:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
90009d00:	4929      	ldr	r1, [pc, #164]	@ (90009da8 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009d02:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009d04:	6998      	ldr	r0, [r3, #24]
90009d06:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
90009d08:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009d0a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
90009d0c:	689a      	ldr	r2, [r3, #8]
90009d0e:	400a      	ands	r2, r1
90009d10:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90009d12:	689a      	ldr	r2, [r3, #8]
90009d14:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009d18:	69a0      	ldr	r0, [r4, #24]
90009d1a:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
90009d1c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90009d1e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
90009d20:	68da      	ldr	r2, [r3, #12]
90009d22:	400a      	ands	r2, r1
90009d24:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90009d26:	68da      	ldr	r2, [r3, #12]
90009d28:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009d2c:	6a20      	ldr	r0, [r4, #32]
90009d2e:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
90009d30:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90009d32:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
90009d34:	691a      	ldr	r2, [r3, #16]
90009d36:	400a      	ands	r2, r1
90009d38:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
90009d3a:	691a      	ldr	r2, [r3, #16]
90009d3c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009d40:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90009d42:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
90009d44:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
90009d46:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
90009d48:	695a      	ldr	r2, [r3, #20]
90009d4a:	400a      	ands	r2, r1
90009d4c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
90009d4e:	695a      	ldr	r2, [r3, #20]
90009d50:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90009d52:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009d56:	430a      	orrs	r2, r1
90009d58:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009d5a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
90009d5c:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009d60:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
90009d64:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009d68:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009d6a:	6add      	ldr	r5, [r3, #44]	@ 0x2c
90009d6c:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
90009d70:	432a      	orrs	r2, r5
90009d72:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009d76:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009d78:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009d7c:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
90009d7e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009d80:	f042 0206 	orr.w	r2, r2, #6
90009d84:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
90009d86:	699a      	ldr	r2, [r3, #24]
90009d88:	f042 0201 	orr.w	r2, r2, #1
90009d8c:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
90009d8e:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009d90:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
90009d94:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
90009d98:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
90009d9a:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
90009d9e:	f7fa f899 	bl	90003ed4 <HAL_LTDC_MspInit>
90009da2:	e79f      	b.n	90009ce4 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
90009da4:	2001      	movs	r0, #1
}
90009da6:	4770      	bx	lr
90009da8:	f000f800 	.word	0xf000f800

90009dac <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
90009dac:	4770      	bx	lr
90009dae:	bf00      	nop

90009db0 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
90009db0:	4770      	bx	lr
90009db2:	bf00      	nop

90009db4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009db4:	6803      	ldr	r3, [r0, #0]
{
90009db6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009db8:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
90009dba:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
90009dbc:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
90009dbe:	076a      	lsls	r2, r5, #29
90009dc0:	d501      	bpl.n	90009dc6 <HAL_LTDC_IRQHandler+0x12>
90009dc2:	0771      	lsls	r1, r6, #29
90009dc4:	d41d      	bmi.n	90009e02 <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
90009dc6:	07aa      	lsls	r2, r5, #30
90009dc8:	d501      	bpl.n	90009dce <HAL_LTDC_IRQHandler+0x1a>
90009dca:	07b3      	lsls	r3, r6, #30
90009dcc:	d42d      	bmi.n	90009e2a <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
90009dce:	07e8      	lsls	r0, r5, #31
90009dd0:	d501      	bpl.n	90009dd6 <HAL_LTDC_IRQHandler+0x22>
90009dd2:	07f1      	lsls	r1, r6, #31
90009dd4:	d440      	bmi.n	90009e58 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
90009dd6:	072a      	lsls	r2, r5, #28
90009dd8:	d501      	bpl.n	90009dde <HAL_LTDC_IRQHandler+0x2a>
90009dda:	0733      	lsls	r3, r6, #28
90009ddc:	d400      	bmi.n	90009de0 <HAL_LTDC_IRQHandler+0x2c>
}
90009dde:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009de0:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009de2:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
90009de4:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
90009de6:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009de8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009dea:	f022 0208 	bic.w	r2, r2, #8
90009dee:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009df0:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
90009df2:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
90009df4:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009df8:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
90009dfc:	f7ff ffd8 	bl	90009db0 <HAL_LTDC_ReloadEventCallback>
}
90009e00:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
90009e02:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e04:	f022 0204 	bic.w	r2, r2, #4
90009e08:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
90009e0a:	2204      	movs	r2, #4
90009e0c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
90009e0e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
90009e12:	f043 0301 	orr.w	r3, r3, #1
90009e16:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009e1a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009e1c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009e20:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009e24:	f7ff ffc2 	bl	90009dac <HAL_LTDC_ErrorCallback>
90009e28:	e7cd      	b.n	90009dc6 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009e2a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
90009e2c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009e2e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e30:	f022 0202 	bic.w	r2, r2, #2
90009e34:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
90009e36:	2202      	movs	r2, #2
90009e38:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009e3a:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
90009e3c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
90009e40:	f043 0302 	orr.w	r3, r3, #2
90009e44:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009e48:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009e4a:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009e4e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009e52:	f7ff ffab 	bl	90009dac <HAL_LTDC_ErrorCallback>
90009e56:	e7ba      	b.n	90009dce <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009e58:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
90009e5a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009e5c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e5e:	f022 0201 	bic.w	r2, r2, #1
90009e62:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
90009e64:	2201      	movs	r2, #1
90009e66:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
90009e68:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
90009e6a:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009e6e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
90009e72:	f7f9 fbe1 	bl	90003638 <HAL_LTDC_LineEventCallback>
90009e76:	e7ae      	b.n	90009dd6 <HAL_LTDC_IRQHandler+0x22>

90009e78 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
90009e78:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
90009e7c:	2b01      	cmp	r3, #1
90009e7e:	f000 80c6 	beq.w	9000a00e <HAL_LTDC_ConfigLayer+0x196>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009e82:	2302      	movs	r3, #2
{
90009e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009e88:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009e8c:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009e90:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
{
90009e94:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009e96:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009e9a:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009e9c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009ea0:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009ea2:	f102 0684 	add.w	r6, r2, #132	@ 0x84
90009ea6:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009ea8:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
90009eac:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009eae:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009eb2:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009eb6:	f8df a164 	ldr.w	sl, [pc, #356]	@ 9000a01c <HAL_LTDC_ConfigLayer+0x1a4>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009eba:	f8dc 3004 	ldr.w	r3, [ip, #4]
90009ebe:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
90009ec2:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009ec4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009ec6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009eca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009ecc:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009ece:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009ed2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009ed4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009ed8:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009eda:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009edc:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009ee0:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009ee2:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009ee4:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009ee8:	f8d9 300c 	ldr.w	r3, [r9, #12]
90009eec:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009eee:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009ef0:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
90009ef4:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009ef8:	440b      	add	r3, r1
90009efa:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009efe:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009f02:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009f06:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009f0a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009f0e:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009f12:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009f14:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009f18:	68ab      	ldr	r3, [r5, #8]
90009f1a:	f8d9 000c 	ldr.w	r0, [r9, #12]
90009f1e:	3301      	adds	r3, #1
90009f20:	f3c0 000a 	ubfx	r0, r0, #0, #11
90009f24:	4403      	add	r3, r0
90009f26:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009f2a:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009f2c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
90009f30:	f8dc 3010 	ldr.w	r3, [ip, #16]
90009f34:	f023 0307 	bic.w	r3, r3, #7
90009f38:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009f3c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
90009f40:	f8dc 3018 	ldr.w	r3, [ip, #24]
90009f44:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
90009f46:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
90009f4a:	f895 4031 	ldrb.w	r4, [r5, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
90009f4e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
90009f52:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
90009f56:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90009f5a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
90009f5e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
90009f62:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
90009f66:	f8dc 3014 	ldr.w	r3, [ip, #20]
90009f6a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
90009f6e:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
90009f72:	696b      	ldr	r3, [r5, #20]
90009f74:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009f78:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009f7c:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009f7e:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009f82:	6a28      	ldr	r0, [r5, #32]
90009f84:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009f86:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009f8a:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
90009f8e:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
90009f92:	2300      	movs	r3, #0
90009f94:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
90009f98:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
90009f9a:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
90009f9e:	b3a1      	cbz	r1, 9000a00a <HAL_LTDC_ConfigLayer+0x192>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
90009fa0:	2901      	cmp	r1, #1
90009fa2:	d036      	beq.n	9000a012 <HAL_LTDC_ConfigLayer+0x19a>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
90009fa4:	1e8b      	subs	r3, r1, #2
90009fa6:	2907      	cmp	r1, #7
90009fa8:	bf18      	it	ne
90009faa:	2b02      	cmpne	r3, #2
90009fac:	bf94      	ite	ls
90009fae:	2301      	movls	r3, #1
90009fb0:	2300      	movhi	r3, #0
90009fb2:	3301      	adds	r3, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009fb4:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009fb6:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009fb8:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009fbc:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90009fc0:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009fc2:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009fc4:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90009fc8:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
90009fcc:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
90009fd0:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009fd4:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
90009fd8:	4b0f      	ldr	r3, [pc, #60]	@ (9000a018 <HAL_LTDC_ConfigLayer+0x1a0>)
90009fda:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
90009fde:	400b      	ands	r3, r1
90009fe0:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90009fe4:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90009fe8:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
90009fea:	f859 3006 	ldr.w	r3, [r9, r6]
90009fee:	4313      	orrs	r3, r2
90009ff0:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
90009ff4:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90009ff6:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
90009ffa:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
90009ffc:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000a000:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000a004:	b003      	add	sp, #12
9000a006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 4U;
9000a00a:	2304      	movs	r3, #4
9000a00c:	e7d2      	b.n	90009fb4 <HAL_LTDC_ConfigLayer+0x13c>
  __HAL_LOCK(hltdc);
9000a00e:	2002      	movs	r0, #2
}
9000a010:	4770      	bx	lr
    tmp = 3U;
9000a012:	2303      	movs	r3, #3
9000a014:	e7ce      	b.n	90009fb4 <HAL_LTDC_ConfigLayer+0x13c>
9000a016:	bf00      	nop
9000a018:	fffff800 	.word	0xfffff800
9000a01c:	fffff8f8 	.word	0xfffff8f8

9000a020 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000a020:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000a024:	2a01      	cmp	r2, #1
9000a026:	d019      	beq.n	9000a05c <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a028:	6802      	ldr	r2, [r0, #0]
9000a02a:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a02c:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000a02e:	f04f 0c00 	mov.w	ip, #0
{
9000a032:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a034:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a038:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000a03a:	4c09      	ldr	r4, [pc, #36]	@ (9000a060 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a03c:	f020 0001 	bic.w	r0, r0, #1
9000a040:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a042:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000a044:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000a046:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000a048:	4301      	orrs	r1, r0
9000a04a:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a04c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000a050:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000a052:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000a056:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a05a:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a05c:	2002      	movs	r0, #2
}
9000a05e:	4770      	bx	lr
9000a060:	50001000 	.word	0x50001000

9000a064 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a064:	b538      	push	{r3, r4, r5, lr}
9000a066:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a068:	f7fd f848 	bl	900070fc <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a06c:	2c00      	cmp	r4, #0
9000a06e:	d058      	beq.n	9000a122 <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a070:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a072:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a074:	2100      	movs	r1, #0
9000a076:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a078:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000a07c:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a080:	68da      	ldr	r2, [r3, #12]
9000a082:	f022 0201 	bic.w	r2, r2, #1
9000a086:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a088:	e005      	b.n	9000a096 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a08a:	f7fd f837 	bl	900070fc <HAL_GetTick>
9000a08e:	1b43      	subs	r3, r0, r5
9000a090:	2b05      	cmp	r3, #5
9000a092:	d841      	bhi.n	9000a118 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a094:	6823      	ldr	r3, [r4, #0]
9000a096:	68da      	ldr	r2, [r3, #12]
9000a098:	07d2      	lsls	r2, r2, #31
9000a09a:	d4f6      	bmi.n	9000a08a <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a09c:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a0a0:	69e0      	ldr	r0, [r4, #28]
9000a0a2:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a0a4:	68e1      	ldr	r1, [r4, #12]
9000a0a6:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a0a8:	4302      	orrs	r2, r0
9000a0aa:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a0ac:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a0ae:	4302      	orrs	r2, r0
9000a0b0:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a0b2:	4302      	orrs	r2, r0
9000a0b4:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000a0b6:	4302      	orrs	r2, r0
9000a0b8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a0ba:	4302      	orrs	r2, r0
9000a0bc:	68a0      	ldr	r0, [r4, #8]
9000a0be:	4302      	orrs	r2, r0
9000a0c0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000a0c2:	3801      	subs	r0, #1
9000a0c4:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a0c8:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a0ca:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a0cc:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000a0d0:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a0d2:	d103      	bne.n	9000a0dc <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000a0d4:	691a      	ldr	r2, [r3, #16]
9000a0d6:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000a0da:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000a0dc:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a0de:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000a0e0:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000a0e2:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a0e4:	db1f      	blt.n	9000a126 <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000a0e6:	b292      	uxth	r2, r2
9000a0e8:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a0ea:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a0ec:	2a00      	cmp	r2, #0
9000a0ee:	db24      	blt.n	9000a13a <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a0f0:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a0f2:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a0f6:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a0fa:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a0fc:	d029      	beq.n	9000a152 <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000a0fe:	b2c0      	uxtb	r0, r0
9000a100:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000a102:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000a104:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000a106:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000a108:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a10a:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000a10c:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000a10e:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a112:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000a116:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a118:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a11a:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a11c:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a11e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000a122:	2001      	movs	r0, #1
}
9000a124:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a126:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000a128:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a12a:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a12e:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a130:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a132:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a134:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a136:	2a00      	cmp	r2, #0
9000a138:	dada      	bge.n	9000a0f0 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a13a:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000a13c:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a13e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a142:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000a146:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a148:	6a19      	ldr	r1, [r3, #32]
9000a14a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a14e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a150:	d1d5      	bne.n	9000a0fe <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000a152:	2200      	movs	r2, #0
9000a154:	629a      	str	r2, [r3, #40]	@ 0x28
9000a156:	e7d4      	b.n	9000a102 <HAL_MDMA_Init+0x9e>

9000a158 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000a158:	b1f8      	cbz	r0, 9000a19a <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000a15a:	6802      	ldr	r2, [r0, #0]
9000a15c:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000a15e:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000a160:	68d0      	ldr	r0, [r2, #12]
{
9000a162:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000a164:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a168:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000a16a:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000a16c:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000a16e:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000a170:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000a172:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000a174:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000a176:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000a178:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000a17a:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000a17c:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000a17e:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000a180:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a182:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a184:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000a186:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000a18a:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000a18e:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000a192:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a194:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000a198:	4770      	bx	lr
    return HAL_ERROR;
9000a19a:	2001      	movs	r0, #1
}
9000a19c:	4770      	bx	lr
9000a19e:	bf00      	nop

9000a1a0 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000a1a0:	b308      	cbz	r0, 9000a1e6 <HAL_MDMA_ConfigPostRequestMask+0x46>
9000a1a2:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000a1a4:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000a1a8:	2801      	cmp	r0, #1
9000a1aa:	d01e      	beq.n	9000a1ea <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000a1ac:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000a1ae:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a1b2:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000a1b6:	45f4      	cmp	ip, lr
9000a1b8:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000a1bc:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a1c0:	d004      	beq.n	9000a1cc <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000a1c2:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000a1c4:	2200      	movs	r2, #0
9000a1c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000a1ca:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000a1cc:	681c      	ldr	r4, [r3, #0]
9000a1ce:	6925      	ldr	r5, [r4, #16]
9000a1d0:	006d      	lsls	r5, r5, #1
9000a1d2:	d4f7      	bmi.n	9000a1c4 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000a1d4:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000a1d6:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a1d8:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000a1da:	b941      	cbnz	r1, 9000a1ee <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a1dc:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000a1e0:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000a1e2:	2000      	movs	r0, #0
9000a1e4:	e7ee      	b.n	9000a1c4 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000a1e6:	2001      	movs	r0, #1
9000a1e8:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000a1ea:	2002      	movs	r0, #2
}
9000a1ec:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a1ee:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000a1f2:	6122      	str	r2, [r4, #16]
9000a1f4:	e7f5      	b.n	9000a1e2 <HAL_MDMA_ConfigPostRequestMask+0x42>
9000a1f6:	bf00      	nop

9000a1f8 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000a1f8:	2800      	cmp	r0, #0
9000a1fa:	d06b      	beq.n	9000a2d4 <HAL_MDMA_Start_IT+0xdc>
{
9000a1fc:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000a1fe:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000a202:	2c01      	cmp	r4, #1
9000a204:	d009      	beq.n	9000a21a <HAL_MDMA_Start_IT+0x22>
9000a206:	2401      	movs	r4, #1
9000a208:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a20c:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000a210:	2c01      	cmp	r4, #1
9000a212:	d005      	beq.n	9000a220 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000a214:	2300      	movs	r3, #0
9000a216:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000a21a:	2002      	movs	r0, #2
}
9000a21c:	bc70      	pop	{r4, r5, r6}
9000a21e:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a220:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a222:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a224:	4d2c      	ldr	r5, [pc, #176]	@ (9000a2d8 <HAL_MDMA_Start_IT+0xe0>)
9000a226:	f3c3 0310 	ubfx	r3, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a22a:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a22e:	2400      	movs	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a230:	f106 3cff 	add.w	ip, r6, #4294967295
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a234:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a238:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000a23a:	6804      	ldr	r4, [r0, #0]
9000a23c:	68e6      	ldr	r6, [r4, #12]
9000a23e:	f026 0601 	bic.w	r6, r6, #1
9000a242:	60e6      	str	r6, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a244:	6966      	ldr	r6, [r4, #20]
9000a246:	ea05 0506 	and.w	r5, r5, r6
9000a24a:	ea45 0503 	orr.w	r5, r5, r3
9000a24e:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a250:	6963      	ldr	r3, [r4, #20]
9000a252:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000a256:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000a25a:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a25c:	f04f 031f 	mov.w	r3, #31
9000a260:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000a262:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000a264:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000a266:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a268:	bf0c      	ite	eq
9000a26a:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a26e:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a272:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000a276:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a278:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000a27a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a27c:	bf0c      	ite	eq
9000a27e:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000a282:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000a286:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000a288:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000a28a:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000a28c:	68e3      	ldr	r3, [r4, #12]
9000a28e:	f043 0306 	orr.w	r3, r3, #6
9000a292:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000a294:	b11a      	cbz	r2, 9000a29e <HAL_MDMA_Start_IT+0xa6>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000a296:	68e3      	ldr	r3, [r4, #12]
9000a298:	f043 0310 	orr.w	r3, r3, #16
9000a29c:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a29e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000a2a0:	b11b      	cbz	r3, 9000a2aa <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000a2a2:	68e3      	ldr	r3, [r4, #12]
9000a2a4:	f043 0308 	orr.w	r3, r3, #8
9000a2a8:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000a2aa:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000a2ac:	b11b      	cbz	r3, 9000a2b6 <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000a2ae:	68e3      	ldr	r3, [r4, #12]
9000a2b0:	f043 0320 	orr.w	r3, r3, #32
9000a2b4:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000a2b6:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a2b8:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000a2ba:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a2be:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000a2c2:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a2c4:	d103      	bne.n	9000a2ce <HAL_MDMA_Start_IT+0xd6>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000a2c6:	68e3      	ldr	r3, [r4, #12]
9000a2c8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a2cc:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000a2ce:	2000      	movs	r0, #0
}
9000a2d0:	bc70      	pop	{r4, r5, r6}
9000a2d2:	4770      	bx	lr
    return HAL_ERROR;
9000a2d4:	2001      	movs	r0, #1
}
9000a2d6:	4770      	bx	lr
9000a2d8:	fffe0000 	.word	0xfffe0000

9000a2dc <HAL_MDMA_Abort>:
{
9000a2dc:	b538      	push	{r3, r4, r5, lr}
9000a2de:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000a2e0:	f7fc ff0c 	bl	900070fc <HAL_GetTick>
  if(hmdma == NULL)
9000a2e4:	b334      	cbz	r4, 9000a334 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a2e6:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000a2ea:	2b02      	cmp	r3, #2
9000a2ec:	d11d      	bne.n	9000a32a <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a2ee:	6822      	ldr	r2, [r4, #0]
9000a2f0:	4605      	mov	r5, r0
9000a2f2:	68d3      	ldr	r3, [r2, #12]
9000a2f4:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000a2f8:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000a2fa:	68d3      	ldr	r3, [r2, #12]
9000a2fc:	f023 0301 	bic.w	r3, r3, #1
9000a300:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a302:	e005      	b.n	9000a310 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a304:	f7fc fefa 	bl	900070fc <HAL_GetTick>
9000a308:	1b43      	subs	r3, r0, r5
9000a30a:	2b05      	cmp	r3, #5
9000a30c:	d814      	bhi.n	9000a338 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a30e:	6822      	ldr	r2, [r4, #0]
9000a310:	68d3      	ldr	r3, [r2, #12]
9000a312:	f013 0301 	ands.w	r3, r3, #1
9000a316:	d1f5      	bne.n	9000a304 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a318:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000a31a:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a31c:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000a31e:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000a320:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000a324:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000a328:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a32a:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000a32c:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a32e:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000a330:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000a334:	2001      	movs	r0, #1
}
9000a336:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a338:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000a33a:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a33c:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a33e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000a342:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a346:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a348:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000a34c:	e7f2      	b.n	9000a334 <HAL_MDMA_Abort+0x58>
9000a34e:	bf00      	nop

9000a350 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000a350:	4603      	mov	r3, r0
9000a352:	b128      	cbz	r0, 9000a360 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a354:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000a358:	2a02      	cmp	r2, #2
9000a35a:	d003      	beq.n	9000a364 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a35c:	2280      	movs	r2, #128	@ 0x80
9000a35e:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000a360:	2001      	movs	r0, #1
9000a362:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000a364:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a366:	2104      	movs	r1, #4
  return HAL_OK;
9000a368:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a36a:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000a36e:	68d3      	ldr	r3, [r2, #12]
9000a370:	f023 0301 	bic.w	r3, r3, #1
9000a374:	60d3      	str	r3, [r2, #12]
}
9000a376:	4770      	bx	lr

9000a378 <HAL_MDMA_IRQHandler>:
{
9000a378:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000a37a:	2300      	movs	r3, #0
{
9000a37c:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a37e:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000a382:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000a384:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a386:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a388:	4b57      	ldr	r3, [pc, #348]	@ (9000a4e8 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a38a:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a38c:	4a57      	ldr	r2, [pc, #348]	@ (9000a4ec <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000a38e:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a390:	6823      	ldr	r3, [r4, #0]
9000a392:	441a      	add	r2, r3
9000a394:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000a398:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a39c:	4202      	tst	r2, r0
9000a39e:	f000 80a0 	beq.w	9000a4e2 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000a3a2:	681a      	ldr	r2, [r3, #0]
9000a3a4:	07d1      	lsls	r1, r2, #31
9000a3a6:	d529      	bpl.n	9000a3fc <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000a3a8:	68da      	ldr	r2, [r3, #12]
9000a3aa:	0792      	lsls	r2, r2, #30
9000a3ac:	d526      	bpl.n	9000a3fc <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000a3ae:	68da      	ldr	r2, [r3, #12]
9000a3b0:	f022 0202 	bic.w	r2, r2, #2
9000a3b4:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000a3b6:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a3b8:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000a3ba:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a3bc:	bf54      	ite	pl
9000a3be:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000a3c2:	f041 0102 	orrmi.w	r1, r1, #2
9000a3c6:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000a3c8:	0591      	lsls	r1, r2, #22
9000a3ca:	d503      	bpl.n	9000a3d4 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000a3cc:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a3ce:	f041 0104 	orr.w	r1, r1, #4
9000a3d2:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000a3d4:	05d0      	lsls	r0, r2, #23
9000a3d6:	d503      	bpl.n	9000a3e0 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000a3d8:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a3da:	f041 0108 	orr.w	r1, r1, #8
9000a3de:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000a3e0:	0551      	lsls	r1, r2, #21
9000a3e2:	d503      	bpl.n	9000a3ec <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000a3e4:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a3e6:	f041 0110 	orr.w	r1, r1, #16
9000a3ea:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000a3ec:	0510      	lsls	r0, r2, #20
9000a3ee:	d503      	bpl.n	9000a3f8 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000a3f0:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000a3f2:	f042 0220 	orr.w	r2, r2, #32
9000a3f6:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000a3f8:	2201      	movs	r2, #1
9000a3fa:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000a3fc:	681a      	ldr	r2, [r3, #0]
9000a3fe:	06d1      	lsls	r1, r2, #27
9000a400:	d509      	bpl.n	9000a416 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000a402:	68da      	ldr	r2, [r3, #12]
9000a404:	0692      	lsls	r2, r2, #26
9000a406:	d506      	bpl.n	9000a416 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a408:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000a40a:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a40c:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000a40e:	b112      	cbz	r2, 9000a416 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000a410:	4620      	mov	r0, r4
9000a412:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000a414:	6823      	ldr	r3, [r4, #0]
9000a416:	681a      	ldr	r2, [r3, #0]
9000a418:	0710      	lsls	r0, r2, #28
9000a41a:	d509      	bpl.n	9000a430 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000a41c:	68da      	ldr	r2, [r3, #12]
9000a41e:	06d1      	lsls	r1, r2, #27
9000a420:	d506      	bpl.n	9000a430 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a422:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000a424:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a426:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000a428:	b112      	cbz	r2, 9000a430 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000a42a:	4620      	mov	r0, r4
9000a42c:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000a42e:	6823      	ldr	r3, [r4, #0]
9000a430:	681a      	ldr	r2, [r3, #0]
9000a432:	0752      	lsls	r2, r2, #29
9000a434:	d509      	bpl.n	9000a44a <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000a436:	68da      	ldr	r2, [r3, #12]
9000a438:	0710      	lsls	r0, r2, #28
9000a43a:	d506      	bpl.n	9000a44a <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a43c:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a43e:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a440:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a442:	b112      	cbz	r2, 9000a44a <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000a444:	4620      	mov	r0, r4
9000a446:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000a448:	6823      	ldr	r3, [r4, #0]
9000a44a:	681a      	ldr	r2, [r3, #0]
9000a44c:	0791      	lsls	r1, r2, #30
9000a44e:	d516      	bpl.n	9000a47e <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000a450:	68da      	ldr	r2, [r3, #12]
9000a452:	0752      	lsls	r2, r2, #29
9000a454:	d513      	bpl.n	9000a47e <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a456:	68da      	ldr	r2, [r3, #12]
9000a458:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000a45c:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000a45e:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000a462:	2a04      	cmp	r2, #4
9000a464:	d034      	beq.n	9000a4d0 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a466:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000a468:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a46a:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000a46c:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000a46e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000a470:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000a474:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000a478:	b10b      	cbz	r3, 9000a47e <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000a47a:	4620      	mov	r0, r4
9000a47c:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000a47e:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000a480:	2b00      	cmp	r3, #0
9000a482:	d02e      	beq.n	9000a4e2 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000a484:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a486:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000a488:	4b19      	ldr	r3, [pc, #100]	@ (9000a4f0 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a48a:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000a48e:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000a492:	68cb      	ldr	r3, [r1, #12]
9000a494:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a498:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000a49a:	60cb      	str	r3, [r1, #12]
9000a49c:	e002      	b.n	9000a4a4 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000a49e:	68cb      	ldr	r3, [r1, #12]
9000a4a0:	07d8      	lsls	r0, r3, #31
9000a4a2:	d504      	bpl.n	9000a4ae <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000a4a4:	9b01      	ldr	r3, [sp, #4]
9000a4a6:	3301      	adds	r3, #1
9000a4a8:	4293      	cmp	r3, r2
9000a4aa:	9301      	str	r3, [sp, #4]
9000a4ac:	d9f7      	bls.n	9000a49e <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000a4ae:	2300      	movs	r3, #0
9000a4b0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a4b4:	68cb      	ldr	r3, [r1, #12]
9000a4b6:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a4b8:	bf4c      	ite	mi
9000a4ba:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000a4bc:	2301      	movpl	r3, #1
9000a4be:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000a4c2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a4c4:	b16b      	cbz	r3, 9000a4e2 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000a4c6:	4620      	mov	r0, r4
}
9000a4c8:	b003      	add	sp, #12
9000a4ca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000a4ce:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000a4d0:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000a4d2:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000a4d4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000a4d6:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000a4da:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000a4de:	2b00      	cmp	r3, #0
9000a4e0:	d1f1      	bne.n	9000a4c6 <HAL_MDMA_IRQHandler+0x14e>
}
9000a4e2:	b003      	add	sp, #12
9000a4e4:	bd30      	pop	{r4, r5, pc}
9000a4e6:	bf00      	nop
9000a4e8:	24000078 	.word	0x24000078
9000a4ec:	adffffc0 	.word	0xadffffc0
9000a4f0:	1b4e81b5 	.word	0x1b4e81b5

9000a4f4 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000a4f4:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a4f6:	4c10      	ldr	r4, [pc, #64]	@ (9000a538 <HAL_PWREx_ConfigSupply+0x44>)
9000a4f8:	68e3      	ldr	r3, [r4, #12]
9000a4fa:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a4fe:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a500:	d105      	bne.n	9000a50e <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a502:	f003 0307 	and.w	r3, r3, #7
9000a506:	1a18      	subs	r0, r3, r0
9000a508:	bf18      	it	ne
9000a50a:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000a50c:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000a50e:	f023 0307 	bic.w	r3, r3, #7
9000a512:	4303      	orrs	r3, r0
9000a514:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000a516:	f7fc fdf1 	bl	900070fc <HAL_GetTick>
9000a51a:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a51c:	e005      	b.n	9000a52a <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000a51e:	f7fc fded 	bl	900070fc <HAL_GetTick>
9000a522:	1b40      	subs	r0, r0, r5
9000a524:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a528:	d804      	bhi.n	9000a534 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a52a:	6863      	ldr	r3, [r4, #4]
9000a52c:	049b      	lsls	r3, r3, #18
9000a52e:	d5f6      	bpl.n	9000a51e <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000a530:	2000      	movs	r0, #0
}
9000a532:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000a534:	2001      	movs	r0, #1
}
9000a536:	bd38      	pop	{r3, r4, r5, pc}
9000a538:	58024800 	.word	0x58024800

9000a53c <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a53c:	4b33      	ldr	r3, [pc, #204]	@ (9000a60c <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000a53e:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a540:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a542:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a544:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000a546:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a54a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a54c:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000a550:	d036      	beq.n	9000a5c0 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a552:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a556:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a55a:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a55e:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a562:	fb05 f202 	mul.w	r2, r5, r2
9000a566:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a568:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000a56c:	ee06 2a90 	vmov	s13, r2
9000a570:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000a574:	d002      	beq.n	9000a57c <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000a576:	2902      	cmp	r1, #2
9000a578:	d042      	beq.n	9000a600 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000a57a:	b319      	cbz	r1, 9000a5c4 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a57c:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000a610 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000a580:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000a584:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a586:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000a58a:	ee07 3a90 	vmov	s15, r3
9000a58e:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000a592:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a596:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000a59a:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000a59e:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000a5a2:	4b1a      	ldr	r3, [pc, #104]	@ (9000a60c <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000a5a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a5a6:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000a5aa:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000a5ac:	ee07 3a10 	vmov	s14, r3
9000a5b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000a5b4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000a5b8:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000a5bc:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000a5c0:	bc30      	pop	{r4, r5}
9000a5c2:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a5c4:	681a      	ldr	r2, [r3, #0]
9000a5c6:	0692      	lsls	r2, r2, #26
9000a5c8:	d51d      	bpl.n	9000a606 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a5ca:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5cc:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a5d0:	4a10      	ldr	r2, [pc, #64]	@ (9000a614 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a5d4:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5d8:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a5dc:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5de:	ee07 3a90 	vmov	s15, r3
9000a5e2:	ee06 2a10 	vmov	s12, r2
9000a5e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a5ea:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000a5ee:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000a5f2:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000a5f6:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000a5fa:	ee67 7a87 	vmul.f32	s15, s15, s14
9000a5fe:	e7d0      	b.n	9000a5a2 <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a600:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a618 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000a604:	e7bc      	b.n	9000a580 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a606:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a61c <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000a60a:	e7b9      	b.n	9000a580 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000a60c:	58024400 	.word	0x58024400
9000a610:	4a742400 	.word	0x4a742400
9000a614:	03d09000 	.word	0x03d09000
9000a618:	4bbebc20 	.word	0x4bbebc20
9000a61c:	4c742400 	.word	0x4c742400

9000a620 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000a620:	2800      	cmp	r0, #0
9000a622:	f000 82e9 	beq.w	9000abf8 <HAL_RCC_OscConfig+0x5d8>
{
9000a626:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000a628:	6803      	ldr	r3, [r0, #0]
9000a62a:	4604      	mov	r4, r0
9000a62c:	07d9      	lsls	r1, r3, #31
9000a62e:	d52e      	bpl.n	9000a68e <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a630:	4997      	ldr	r1, [pc, #604]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
9000a632:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a634:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a636:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a63a:	2a10      	cmp	r2, #16
9000a63c:	f000 80ee 	beq.w	9000a81c <HAL_RCC_OscConfig+0x1fc>
9000a640:	2a18      	cmp	r2, #24
9000a642:	f000 80e6 	beq.w	9000a812 <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a646:	6863      	ldr	r3, [r4, #4]
9000a648:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000a64c:	f000 8111 	beq.w	9000a872 <HAL_RCC_OscConfig+0x252>
9000a650:	2b00      	cmp	r3, #0
9000a652:	f000 8167 	beq.w	9000a924 <HAL_RCC_OscConfig+0x304>
9000a656:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000a65a:	4b8d      	ldr	r3, [pc, #564]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
9000a65c:	681a      	ldr	r2, [r3, #0]
9000a65e:	f000 828a 	beq.w	9000ab76 <HAL_RCC_OscConfig+0x556>
9000a662:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000a666:	601a      	str	r2, [r3, #0]
9000a668:	681a      	ldr	r2, [r3, #0]
9000a66a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000a66e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000a670:	f7fc fd44 	bl	900070fc <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a674:	4e86      	ldr	r6, [pc, #536]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000a676:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a678:	e005      	b.n	9000a686 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a67a:	f7fc fd3f 	bl	900070fc <HAL_GetTick>
9000a67e:	1b40      	subs	r0, r0, r5
9000a680:	2864      	cmp	r0, #100	@ 0x64
9000a682:	f200 814d 	bhi.w	9000a920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a686:	6833      	ldr	r3, [r6, #0]
9000a688:	039b      	lsls	r3, r3, #14
9000a68a:	d5f6      	bpl.n	9000a67a <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000a68c:	6823      	ldr	r3, [r4, #0]
9000a68e:	079d      	lsls	r5, r3, #30
9000a690:	d470      	bmi.n	9000a774 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a692:	06d9      	lsls	r1, r3, #27
9000a694:	d533      	bpl.n	9000a6fe <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a696:	4a7e      	ldr	r2, [pc, #504]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
9000a698:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a69a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a69c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a6a0:	2b08      	cmp	r3, #8
9000a6a2:	f000 80cb 	beq.w	9000a83c <HAL_RCC_OscConfig+0x21c>
9000a6a6:	2b18      	cmp	r3, #24
9000a6a8:	f000 80c3 	beq.w	9000a832 <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a6ac:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000a6ae:	4d78      	ldr	r5, [pc, #480]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a6b0:	2b00      	cmp	r3, #0
9000a6b2:	f000 816f 	beq.w	9000a994 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000a6b6:	682b      	ldr	r3, [r5, #0]
9000a6b8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000a6bc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a6be:	f7fc fd1d 	bl	900070fc <HAL_GetTick>
9000a6c2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a6c4:	e005      	b.n	9000a6d2 <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000a6c6:	f7fc fd19 	bl	900070fc <HAL_GetTick>
9000a6ca:	1b80      	subs	r0, r0, r6
9000a6cc:	2802      	cmp	r0, #2
9000a6ce:	f200 8127 	bhi.w	9000a920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a6d2:	682b      	ldr	r3, [r5, #0]
9000a6d4:	05db      	lsls	r3, r3, #23
9000a6d6:	d5f6      	bpl.n	9000a6c6 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a6d8:	f7fc fd16 	bl	90007108 <HAL_GetREVID>
9000a6dc:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a6e0:	4298      	cmp	r0, r3
9000a6e2:	f200 8269 	bhi.w	9000abb8 <HAL_RCC_OscConfig+0x598>
9000a6e6:	6a22      	ldr	r2, [r4, #32]
9000a6e8:	686b      	ldr	r3, [r5, #4]
9000a6ea:	2a20      	cmp	r2, #32
9000a6ec:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a6f0:	bf0c      	ite	eq
9000a6f2:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000a6f6:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000a6fa:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a6fc:	6823      	ldr	r3, [r4, #0]
9000a6fe:	071d      	lsls	r5, r3, #28
9000a700:	d516      	bpl.n	9000a730 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a702:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000a704:	4d62      	ldr	r5, [pc, #392]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a706:	2b00      	cmp	r3, #0
9000a708:	f000 8122 	beq.w	9000a950 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000a70c:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a70e:	f043 0301 	orr.w	r3, r3, #1
9000a712:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a714:	f7fc fcf2 	bl	900070fc <HAL_GetTick>
9000a718:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a71a:	e005      	b.n	9000a728 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a71c:	f7fc fcee 	bl	900070fc <HAL_GetTick>
9000a720:	1b80      	subs	r0, r0, r6
9000a722:	2802      	cmp	r0, #2
9000a724:	f200 80fc 	bhi.w	9000a920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a728:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a72a:	0798      	lsls	r0, r3, #30
9000a72c:	d5f6      	bpl.n	9000a71c <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000a72e:	6823      	ldr	r3, [r4, #0]
9000a730:	069a      	lsls	r2, r3, #26
9000a732:	d516      	bpl.n	9000a762 <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a734:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000a736:	4d56      	ldr	r5, [pc, #344]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a738:	2b00      	cmp	r3, #0
9000a73a:	f000 811a 	beq.w	9000a972 <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000a73e:	682b      	ldr	r3, [r5, #0]
9000a740:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a744:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a746:	f7fc fcd9 	bl	900070fc <HAL_GetTick>
9000a74a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a74c:	e005      	b.n	9000a75a <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a74e:	f7fc fcd5 	bl	900070fc <HAL_GetTick>
9000a752:	1b80      	subs	r0, r0, r6
9000a754:	2802      	cmp	r0, #2
9000a756:	f200 80e3 	bhi.w	9000a920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a75a:	682b      	ldr	r3, [r5, #0]
9000a75c:	049f      	lsls	r7, r3, #18
9000a75e:	d5f6      	bpl.n	9000a74e <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000a760:	6823      	ldr	r3, [r4, #0]
9000a762:	0759      	lsls	r1, r3, #29
9000a764:	f100 808b 	bmi.w	9000a87e <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000a768:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a76a:	2b00      	cmp	r3, #0
9000a76c:	f040 80bf 	bne.w	9000a8ee <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000a770:	2000      	movs	r0, #0
}
9000a772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a774:	4a46      	ldr	r2, [pc, #280]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
9000a776:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a778:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a77a:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000a77e:	d12d      	bne.n	9000a7dc <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a780:	4b43      	ldr	r3, [pc, #268]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a782:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a784:	681b      	ldr	r3, [r3, #0]
9000a786:	0759      	lsls	r1, r3, #29
9000a788:	d501      	bpl.n	9000a78e <HAL_RCC_OscConfig+0x16e>
9000a78a:	2a00      	cmp	r2, #0
9000a78c:	d04f      	beq.n	9000a82e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a78e:	4d40      	ldr	r5, [pc, #256]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
9000a790:	682b      	ldr	r3, [r5, #0]
9000a792:	f023 0319 	bic.w	r3, r3, #25
9000a796:	4313      	orrs	r3, r2
9000a798:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a79a:	f7fc fcaf 	bl	900070fc <HAL_GetTick>
9000a79e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a7a0:	e005      	b.n	9000a7ae <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a7a2:	f7fc fcab 	bl	900070fc <HAL_GetTick>
9000a7a6:	1b80      	subs	r0, r0, r6
9000a7a8:	2802      	cmp	r0, #2
9000a7aa:	f200 80b9 	bhi.w	9000a920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a7ae:	682b      	ldr	r3, [r5, #0]
9000a7b0:	075b      	lsls	r3, r3, #29
9000a7b2:	d5f6      	bpl.n	9000a7a2 <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000a7b4:	f7fc fca8 	bl	90007108 <HAL_GetREVID>
9000a7b8:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a7bc:	4298      	cmp	r0, r3
9000a7be:	f200 8110 	bhi.w	9000a9e2 <HAL_RCC_OscConfig+0x3c2>
9000a7c2:	6922      	ldr	r2, [r4, #16]
9000a7c4:	686b      	ldr	r3, [r5, #4]
9000a7c6:	2a40      	cmp	r2, #64	@ 0x40
9000a7c8:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000a7cc:	bf0c      	ite	eq
9000a7ce:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000a7d2:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000a7d6:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a7d8:	6823      	ldr	r3, [r4, #0]
9000a7da:	e75a      	b.n	9000a692 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a7dc:	2b18      	cmp	r3, #24
9000a7de:	f000 80fc 	beq.w	9000a9da <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a7e2:	4d2b      	ldr	r5, [pc, #172]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a7e4:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a7e6:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a7e8:	2a00      	cmp	r2, #0
9000a7ea:	f000 80e5 	beq.w	9000a9b8 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a7ee:	f023 0319 	bic.w	r3, r3, #25
9000a7f2:	4313      	orrs	r3, r2
9000a7f4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a7f6:	f7fc fc81 	bl	900070fc <HAL_GetTick>
9000a7fa:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a7fc:	e005      	b.n	9000a80a <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a7fe:	f7fc fc7d 	bl	900070fc <HAL_GetTick>
9000a802:	1b80      	subs	r0, r0, r6
9000a804:	2802      	cmp	r0, #2
9000a806:	f200 808b 	bhi.w	9000a920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a80a:	682b      	ldr	r3, [r5, #0]
9000a80c:	075f      	lsls	r7, r3, #29
9000a80e:	d5f6      	bpl.n	9000a7fe <HAL_RCC_OscConfig+0x1de>
9000a810:	e7d0      	b.n	9000a7b4 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a812:	f001 0103 	and.w	r1, r1, #3
9000a816:	2902      	cmp	r1, #2
9000a818:	f47f af15 	bne.w	9000a646 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000a81c:	4a1c      	ldr	r2, [pc, #112]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
9000a81e:	6812      	ldr	r2, [r2, #0]
9000a820:	0392      	lsls	r2, r2, #14
9000a822:	f57f af34 	bpl.w	9000a68e <HAL_RCC_OscConfig+0x6e>
9000a826:	6862      	ldr	r2, [r4, #4]
9000a828:	2a00      	cmp	r2, #0
9000a82a:	f47f af30 	bne.w	9000a68e <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000a82e:	2001      	movs	r0, #1
}
9000a830:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a832:	f002 0203 	and.w	r2, r2, #3
9000a836:	2a01      	cmp	r2, #1
9000a838:	f47f af38 	bne.w	9000a6ac <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000a83c:	4b14      	ldr	r3, [pc, #80]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
9000a83e:	681b      	ldr	r3, [r3, #0]
9000a840:	05da      	lsls	r2, r3, #23
9000a842:	d502      	bpl.n	9000a84a <HAL_RCC_OscConfig+0x22a>
9000a844:	69e3      	ldr	r3, [r4, #28]
9000a846:	2b80      	cmp	r3, #128	@ 0x80
9000a848:	d1f1      	bne.n	9000a82e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a84a:	f7fc fc5d 	bl	90007108 <HAL_GetREVID>
9000a84e:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a852:	4298      	cmp	r0, r3
9000a854:	f200 80ce 	bhi.w	9000a9f4 <HAL_RCC_OscConfig+0x3d4>
9000a858:	6a22      	ldr	r2, [r4, #32]
9000a85a:	2a20      	cmp	r2, #32
9000a85c:	f000 81bb 	beq.w	9000abd6 <HAL_RCC_OscConfig+0x5b6>
9000a860:	490b      	ldr	r1, [pc, #44]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
9000a862:	684b      	ldr	r3, [r1, #4]
9000a864:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a868:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000a86c:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a86e:	6823      	ldr	r3, [r4, #0]
9000a870:	e745      	b.n	9000a6fe <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a872:	4a07      	ldr	r2, [pc, #28]	@ (9000a890 <HAL_RCC_OscConfig+0x270>)
9000a874:	6813      	ldr	r3, [r2, #0]
9000a876:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a87a:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000a87c:	e6f8      	b.n	9000a670 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000a87e:	4d05      	ldr	r5, [pc, #20]	@ (9000a894 <HAL_RCC_OscConfig+0x274>)
9000a880:	682b      	ldr	r3, [r5, #0]
9000a882:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000a886:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000a888:	f7fc fc38 	bl	900070fc <HAL_GetTick>
9000a88c:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a88e:	e008      	b.n	9000a8a2 <HAL_RCC_OscConfig+0x282>
9000a890:	58024400 	.word	0x58024400
9000a894:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000a898:	f7fc fc30 	bl	900070fc <HAL_GetTick>
9000a89c:	1b80      	subs	r0, r0, r6
9000a89e:	2864      	cmp	r0, #100	@ 0x64
9000a8a0:	d83e      	bhi.n	9000a920 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a8a2:	682b      	ldr	r3, [r5, #0]
9000a8a4:	05da      	lsls	r2, r3, #23
9000a8a6:	d5f7      	bpl.n	9000a898 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000a8a8:	68a3      	ldr	r3, [r4, #8]
9000a8aa:	2b01      	cmp	r3, #1
9000a8ac:	f000 818d 	beq.w	9000abca <HAL_RCC_OscConfig+0x5aa>
9000a8b0:	2b00      	cmp	r3, #0
9000a8b2:	f000 8168 	beq.w	9000ab86 <HAL_RCC_OscConfig+0x566>
9000a8b6:	2b05      	cmp	r3, #5
9000a8b8:	4b85      	ldr	r3, [pc, #532]	@ (9000aad0 <HAL_RCC_OscConfig+0x4b0>)
9000a8ba:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a8bc:	f000 8194 	beq.w	9000abe8 <HAL_RCC_OscConfig+0x5c8>
9000a8c0:	f022 0201 	bic.w	r2, r2, #1
9000a8c4:	671a      	str	r2, [r3, #112]	@ 0x70
9000a8c6:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a8c8:	f022 0204 	bic.w	r2, r2, #4
9000a8cc:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000a8ce:	f7fc fc15 	bl	900070fc <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a8d2:	4e7f      	ldr	r6, [pc, #508]	@ (9000aad0 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a8d4:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000a8d8:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a8da:	e004      	b.n	9000a8e6 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a8dc:	f7fc fc0e 	bl	900070fc <HAL_GetTick>
9000a8e0:	1b40      	subs	r0, r0, r5
9000a8e2:	42b8      	cmp	r0, r7
9000a8e4:	d81c      	bhi.n	9000a920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a8e6:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000a8e8:	079b      	lsls	r3, r3, #30
9000a8ea:	d5f7      	bpl.n	9000a8dc <HAL_RCC_OscConfig+0x2bc>
9000a8ec:	e73c      	b.n	9000a768 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000a8ee:	4d78      	ldr	r5, [pc, #480]	@ (9000aad0 <HAL_RCC_OscConfig+0x4b0>)
9000a8f0:	692a      	ldr	r2, [r5, #16]
9000a8f2:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a8f6:	2a18      	cmp	r2, #24
9000a8f8:	f000 80f0 	beq.w	9000aadc <HAL_RCC_OscConfig+0x4bc>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a8fc:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000a8fe:	682b      	ldr	r3, [r5, #0]
9000a900:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000a904:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a906:	d07f      	beq.n	9000aa08 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000a908:	f7fc fbf8 	bl	900070fc <HAL_GetTick>
9000a90c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000a90e:	682b      	ldr	r3, [r5, #0]
9000a910:	019b      	lsls	r3, r3, #6
9000a912:	f57f af2d 	bpl.w	9000a770 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000a916:	f7fc fbf1 	bl	900070fc <HAL_GetTick>
9000a91a:	1b00      	subs	r0, r0, r4
9000a91c:	2802      	cmp	r0, #2
9000a91e:	d9f6      	bls.n	9000a90e <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000a920:	2003      	movs	r0, #3
}
9000a922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a924:	4d6a      	ldr	r5, [pc, #424]	@ (9000aad0 <HAL_RCC_OscConfig+0x4b0>)
9000a926:	682b      	ldr	r3, [r5, #0]
9000a928:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000a92c:	602b      	str	r3, [r5, #0]
9000a92e:	682b      	ldr	r3, [r5, #0]
9000a930:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000a934:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a936:	f7fc fbe1 	bl	900070fc <HAL_GetTick>
9000a93a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a93c:	e004      	b.n	9000a948 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a93e:	f7fc fbdd 	bl	900070fc <HAL_GetTick>
9000a942:	1b80      	subs	r0, r0, r6
9000a944:	2864      	cmp	r0, #100	@ 0x64
9000a946:	d8eb      	bhi.n	9000a920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a948:	682b      	ldr	r3, [r5, #0]
9000a94a:	039f      	lsls	r7, r3, #14
9000a94c:	d4f7      	bmi.n	9000a93e <HAL_RCC_OscConfig+0x31e>
9000a94e:	e69d      	b.n	9000a68c <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000a950:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a952:	f023 0301 	bic.w	r3, r3, #1
9000a956:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a958:	f7fc fbd0 	bl	900070fc <HAL_GetTick>
9000a95c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a95e:	e004      	b.n	9000a96a <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a960:	f7fc fbcc 	bl	900070fc <HAL_GetTick>
9000a964:	1b80      	subs	r0, r0, r6
9000a966:	2802      	cmp	r0, #2
9000a968:	d8da      	bhi.n	9000a920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a96a:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a96c:	0799      	lsls	r1, r3, #30
9000a96e:	d4f7      	bmi.n	9000a960 <HAL_RCC_OscConfig+0x340>
9000a970:	e6dd      	b.n	9000a72e <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000a972:	682b      	ldr	r3, [r5, #0]
9000a974:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a978:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a97a:	f7fc fbbf 	bl	900070fc <HAL_GetTick>
9000a97e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000a980:	e004      	b.n	9000a98c <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a982:	f7fc fbbb 	bl	900070fc <HAL_GetTick>
9000a986:	1b80      	subs	r0, r0, r6
9000a988:	2802      	cmp	r0, #2
9000a98a:	d8c9      	bhi.n	9000a920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000a98c:	682b      	ldr	r3, [r5, #0]
9000a98e:	0498      	lsls	r0, r3, #18
9000a990:	d4f7      	bmi.n	9000a982 <HAL_RCC_OscConfig+0x362>
9000a992:	e6e5      	b.n	9000a760 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000a994:	682b      	ldr	r3, [r5, #0]
9000a996:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000a99a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a99c:	f7fc fbae 	bl	900070fc <HAL_GetTick>
9000a9a0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000a9a2:	e004      	b.n	9000a9ae <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000a9a4:	f7fc fbaa 	bl	900070fc <HAL_GetTick>
9000a9a8:	1b80      	subs	r0, r0, r6
9000a9aa:	2802      	cmp	r0, #2
9000a9ac:	d8b8      	bhi.n	9000a920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000a9ae:	682b      	ldr	r3, [r5, #0]
9000a9b0:	05df      	lsls	r7, r3, #23
9000a9b2:	d4f7      	bmi.n	9000a9a4 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a9b4:	6823      	ldr	r3, [r4, #0]
9000a9b6:	e6a2      	b.n	9000a6fe <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000a9b8:	f023 0301 	bic.w	r3, r3, #1
9000a9bc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a9be:	f7fc fb9d 	bl	900070fc <HAL_GetTick>
9000a9c2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000a9c4:	e004      	b.n	9000a9d0 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a9c6:	f7fc fb99 	bl	900070fc <HAL_GetTick>
9000a9ca:	1b80      	subs	r0, r0, r6
9000a9cc:	2802      	cmp	r0, #2
9000a9ce:	d8a7      	bhi.n	9000a920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000a9d0:	682b      	ldr	r3, [r5, #0]
9000a9d2:	0758      	lsls	r0, r3, #29
9000a9d4:	d4f7      	bmi.n	9000a9c6 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a9d6:	6823      	ldr	r3, [r4, #0]
9000a9d8:	e65b      	b.n	9000a692 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a9da:	0790      	lsls	r0, r2, #30
9000a9dc:	f47f af01 	bne.w	9000a7e2 <HAL_RCC_OscConfig+0x1c2>
9000a9e0:	e6ce      	b.n	9000a780 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000a9e2:	686b      	ldr	r3, [r5, #4]
9000a9e4:	6922      	ldr	r2, [r4, #16]
9000a9e6:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000a9ea:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000a9ee:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a9f0:	6823      	ldr	r3, [r4, #0]
9000a9f2:	e64e      	b.n	9000a692 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a9f4:	4a36      	ldr	r2, [pc, #216]	@ (9000aad0 <HAL_RCC_OscConfig+0x4b0>)
9000a9f6:	6a21      	ldr	r1, [r4, #32]
9000a9f8:	68d3      	ldr	r3, [r2, #12]
9000a9fa:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000a9fe:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000aa02:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000aa04:	6823      	ldr	r3, [r4, #0]
9000aa06:	e67a      	b.n	9000a6fe <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000aa08:	f7fc fb78 	bl	900070fc <HAL_GetTick>
9000aa0c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000aa0e:	e004      	b.n	9000aa1a <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000aa10:	f7fc fb74 	bl	900070fc <HAL_GetTick>
9000aa14:	1b80      	subs	r0, r0, r6
9000aa16:	2802      	cmp	r0, #2
9000aa18:	d882      	bhi.n	9000a920 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000aa1a:	682b      	ldr	r3, [r5, #0]
9000aa1c:	0199      	lsls	r1, r3, #6
9000aa1e:	d4f7      	bmi.n	9000aa10 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000aa20:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000aa22:	4b2c      	ldr	r3, [pc, #176]	@ (9000aad4 <HAL_RCC_OscConfig+0x4b4>)
9000aa24:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000aa26:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000aa28:	492b      	ldr	r1, [pc, #172]	@ (9000aad8 <HAL_RCC_OscConfig+0x4b8>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000aa2a:	4e29      	ldr	r6, [pc, #164]	@ (9000aad0 <HAL_RCC_OscConfig+0x4b0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000aa2c:	4313      	orrs	r3, r2
9000aa2e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000aa30:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000aa34:	62ab      	str	r3, [r5, #40]	@ 0x28
9000aa36:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000aa3a:	3b01      	subs	r3, #1
9000aa3c:	3a01      	subs	r2, #1
9000aa3e:	025b      	lsls	r3, r3, #9
9000aa40:	0412      	lsls	r2, r2, #16
9000aa42:	b29b      	uxth	r3, r3
9000aa44:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000aa48:	4313      	orrs	r3, r2
9000aa4a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000aa4c:	3a01      	subs	r2, #1
9000aa4e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000aa52:	4313      	orrs	r3, r2
9000aa54:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000aa56:	3a01      	subs	r2, #1
9000aa58:	0612      	lsls	r2, r2, #24
9000aa5a:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000aa5e:	4313      	orrs	r3, r2
9000aa60:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000aa62:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa64:	f023 0301 	bic.w	r3, r3, #1
9000aa68:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000aa6a:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
9000aa6c:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
9000aa6e:	4011      	ands	r1, r2
9000aa70:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000aa74:	6369      	str	r1, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000aa76:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa78:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000aa7a:	f023 030c 	bic.w	r3, r3, #12
9000aa7e:	4313      	orrs	r3, r2
9000aa80:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000aa82:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa84:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000aa86:	f023 0302 	bic.w	r3, r3, #2
9000aa8a:	4313      	orrs	r3, r2
9000aa8c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000aa8e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa90:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000aa94:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000aa96:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa98:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000aa9c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000aa9e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aaa0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000aaa4:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000aaa6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aaa8:	f043 0301 	orr.w	r3, r3, #1
9000aaac:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000aaae:	682b      	ldr	r3, [r5, #0]
9000aab0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000aab4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000aab6:	f7fc fb21 	bl	900070fc <HAL_GetTick>
9000aaba:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000aabc:	6833      	ldr	r3, [r6, #0]
9000aabe:	019a      	lsls	r2, r3, #6
9000aac0:	f53f ae56 	bmi.w	9000a770 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000aac4:	f7fc fb1a 	bl	900070fc <HAL_GetTick>
9000aac8:	1b00      	subs	r0, r0, r4
9000aaca:	2802      	cmp	r0, #2
9000aacc:	d9f6      	bls.n	9000aabc <HAL_RCC_OscConfig+0x49c>
9000aace:	e727      	b.n	9000a920 <HAL_RCC_OscConfig+0x300>
9000aad0:	58024400 	.word	0x58024400
9000aad4:	fffffc0c 	.word	0xfffffc0c
9000aad8:	ffff0007 	.word	0xffff0007
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aadc:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000aade:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000aae0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aae2:	f43f aea4 	beq.w	9000a82e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000aae6:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aaea:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000aaec:	428b      	cmp	r3, r1
9000aaee:	f47f ae9e 	bne.w	9000a82e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000aaf2:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000aaf6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000aaf8:	429a      	cmp	r2, r3
9000aafa:	f47f ae98 	bne.w	9000a82e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000aafe:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000ab00:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000ab04:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000ab06:	429a      	cmp	r2, r3
9000ab08:	f47f ae91 	bne.w	9000a82e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000ab0c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000ab0e:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000ab12:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000ab14:	429a      	cmp	r2, r3
9000ab16:	f47f ae8a 	bne.w	9000a82e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000ab1a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000ab1c:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000ab20:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000ab22:	429a      	cmp	r2, r3
9000ab24:	f47f ae83 	bne.w	9000a82e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000ab28:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000ab2a:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000ab2e:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000ab30:	4298      	cmp	r0, r3
9000ab32:	f47f ae7c 	bne.w	9000a82e <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000ab36:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000ab38:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000ab3a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000ab3e:	429a      	cmp	r2, r3
9000ab40:	f43f ae16 	beq.w	9000a770 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000ab44:	4a2d      	ldr	r2, [pc, #180]	@ (9000abfc <HAL_RCC_OscConfig+0x5dc>)
9000ab46:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000ab48:	f023 0301 	bic.w	r3, r3, #1
9000ab4c:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000ab4e:	f7fc fad5 	bl	900070fc <HAL_GetTick>
9000ab52:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000ab54:	f7fc fad2 	bl	900070fc <HAL_GetTick>
9000ab58:	42a8      	cmp	r0, r5
9000ab5a:	d0fb      	beq.n	9000ab54 <HAL_RCC_OscConfig+0x534>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ab5c:	4a27      	ldr	r2, [pc, #156]	@ (9000abfc <HAL_RCC_OscConfig+0x5dc>)
9000ab5e:	4b28      	ldr	r3, [pc, #160]	@ (9000ac00 <HAL_RCC_OscConfig+0x5e0>)
9000ab60:	6b50      	ldr	r0, [r2, #52]	@ 0x34
9000ab62:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000ab64:	4003      	ands	r3, r0
9000ab66:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000ab6a:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000ab6c:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000ab6e:	f043 0301 	orr.w	r3, r3, #1
9000ab72:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000ab74:	e5fc      	b.n	9000a770 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000ab76:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000ab7a:	601a      	str	r2, [r3, #0]
9000ab7c:	681a      	ldr	r2, [r3, #0]
9000ab7e:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000ab82:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000ab84:	e574      	b.n	9000a670 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ab86:	4d1d      	ldr	r5, [pc, #116]	@ (9000abfc <HAL_RCC_OscConfig+0x5dc>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ab88:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ab8c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ab8e:	f023 0301 	bic.w	r3, r3, #1
9000ab92:	672b      	str	r3, [r5, #112]	@ 0x70
9000ab94:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ab96:	f023 0304 	bic.w	r3, r3, #4
9000ab9a:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000ab9c:	f7fc faae 	bl	900070fc <HAL_GetTick>
9000aba0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000aba2:	e005      	b.n	9000abb0 <HAL_RCC_OscConfig+0x590>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000aba4:	f7fc faaa 	bl	900070fc <HAL_GetTick>
9000aba8:	1b80      	subs	r0, r0, r6
9000abaa:	42b8      	cmp	r0, r7
9000abac:	f63f aeb8 	bhi.w	9000a920 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000abb0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000abb2:	0798      	lsls	r0, r3, #30
9000abb4:	d4f6      	bmi.n	9000aba4 <HAL_RCC_OscConfig+0x584>
9000abb6:	e5d7      	b.n	9000a768 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000abb8:	68eb      	ldr	r3, [r5, #12]
9000abba:	6a22      	ldr	r2, [r4, #32]
9000abbc:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000abc0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000abc4:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000abc6:	6823      	ldr	r3, [r4, #0]
9000abc8:	e599      	b.n	9000a6fe <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000abca:	4a0c      	ldr	r2, [pc, #48]	@ (9000abfc <HAL_RCC_OscConfig+0x5dc>)
9000abcc:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000abce:	f043 0301 	orr.w	r3, r3, #1
9000abd2:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000abd4:	e67b      	b.n	9000a8ce <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000abd6:	4a09      	ldr	r2, [pc, #36]	@ (9000abfc <HAL_RCC_OscConfig+0x5dc>)
9000abd8:	6853      	ldr	r3, [r2, #4]
9000abda:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000abde:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000abe2:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000abe4:	6823      	ldr	r3, [r4, #0]
9000abe6:	e58a      	b.n	9000a6fe <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000abe8:	f042 0204 	orr.w	r2, r2, #4
9000abec:	671a      	str	r2, [r3, #112]	@ 0x70
9000abee:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000abf0:	f042 0201 	orr.w	r2, r2, #1
9000abf4:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000abf6:	e66a      	b.n	9000a8ce <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000abf8:	2001      	movs	r0, #1
}
9000abfa:	4770      	bx	lr
9000abfc:	58024400 	.word	0x58024400
9000ac00:	ffff0007 	.word	0xffff0007

9000ac04 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ac04:	4a3f      	ldr	r2, [pc, #252]	@ (9000ad04 <HAL_RCC_GetSysClockFreq+0x100>)
9000ac06:	6913      	ldr	r3, [r2, #16]
9000ac08:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ac0c:	2b10      	cmp	r3, #16
9000ac0e:	d004      	beq.n	9000ac1a <HAL_RCC_GetSysClockFreq+0x16>
9000ac10:	2b18      	cmp	r3, #24
9000ac12:	d00d      	beq.n	9000ac30 <HAL_RCC_GetSysClockFreq+0x2c>
9000ac14:	b11b      	cbz	r3, 9000ac1e <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000ac16:	483c      	ldr	r0, [pc, #240]	@ (9000ad08 <HAL_RCC_GetSysClockFreq+0x104>)
9000ac18:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ac1a:	483c      	ldr	r0, [pc, #240]	@ (9000ad0c <HAL_RCC_GetSysClockFreq+0x108>)
9000ac1c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ac1e:	6813      	ldr	r3, [r2, #0]
9000ac20:	0699      	lsls	r1, r3, #26
9000ac22:	d548      	bpl.n	9000acb6 <HAL_RCC_GetSysClockFreq+0xb2>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac24:	6813      	ldr	r3, [r2, #0]
9000ac26:	483a      	ldr	r0, [pc, #232]	@ (9000ad10 <HAL_RCC_GetSysClockFreq+0x10c>)
9000ac28:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ac2c:	40d8      	lsrs	r0, r3
9000ac2e:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ac30:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000ac32:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ac34:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ac36:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000ac38:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ac3c:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ac3e:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000ac42:	d036      	beq.n	9000acb2 <HAL_RCC_GetSysClockFreq+0xae>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ac44:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ac48:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ac4c:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac50:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ac54:	fb05 f303 	mul.w	r3, r5, r3
9000ac58:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ac5e:	ee06 3a90 	vmov	s13, r3
9000ac62:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000ac66:	d002      	beq.n	9000ac6e <HAL_RCC_GetSysClockFreq+0x6a>
9000ac68:	2902      	cmp	r1, #2
9000ac6a:	d026      	beq.n	9000acba <HAL_RCC_GetSysClockFreq+0xb6>
9000ac6c:	b341      	cbz	r1, 9000acc0 <HAL_RCC_GetSysClockFreq+0xbc>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac6e:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 9000ad14 <HAL_RCC_GetSysClockFreq+0x110>
9000ac72:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000ac76:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000ac78:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ac7c:	ee07 3a10 	vmov	s14, r3
9000ac80:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ac84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ac88:	ee37 7a26 	vadd.f32	s14, s14, s13
9000ac8c:	ee37 7a25 	vadd.f32	s14, s14, s11
9000ac90:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000ac94:	4b1b      	ldr	r3, [pc, #108]	@ (9000ad04 <HAL_RCC_GetSysClockFreq+0x100>)
9000ac96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000ac98:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ac9c:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000ac9e:	ee07 3a90 	vmov	s15, r3
9000aca2:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000aca6:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000acaa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000acae:	ee17 0a90 	vmov	r0, s15
}
9000acb2:	bc30      	pop	{r4, r5}
9000acb4:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000acb6:	4816      	ldr	r0, [pc, #88]	@ (9000ad10 <HAL_RCC_GetSysClockFreq+0x10c>)
}
9000acb8:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acba:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 9000ad18 <HAL_RCC_GetSysClockFreq+0x114>
9000acbe:	e7d8      	b.n	9000ac72 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000acc0:	6813      	ldr	r3, [r2, #0]
9000acc2:	069b      	lsls	r3, r3, #26
9000acc4:	d51a      	bpl.n	9000acfc <HAL_RCC_GetSysClockFreq+0xf8>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000acc6:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acc8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000accc:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000acce:	4910      	ldr	r1, [pc, #64]	@ (9000ad10 <HAL_RCC_GetSysClockFreq+0x10c>)
9000acd0:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acd4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000acd8:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acda:	ee07 3a10 	vmov	s14, r3
9000acde:	ee06 1a10 	vmov	s12, r1
9000ace2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ace6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000acea:	ee77 6a26 	vadd.f32	s13, s14, s13
9000acee:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000acf2:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000acf6:	ee27 7a27 	vmul.f32	s14, s14, s15
9000acfa:	e7cb      	b.n	9000ac94 <HAL_RCC_GetSysClockFreq+0x90>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acfc:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000ad1c <HAL_RCC_GetSysClockFreq+0x118>
9000ad00:	e7b7      	b.n	9000ac72 <HAL_RCC_GetSysClockFreq+0x6e>
9000ad02:	bf00      	nop
9000ad04:	58024400 	.word	0x58024400
9000ad08:	003d0900 	.word	0x003d0900
9000ad0c:	017d7840 	.word	0x017d7840
9000ad10:	03d09000 	.word	0x03d09000
9000ad14:	4a742400 	.word	0x4a742400
9000ad18:	4bbebc20 	.word	0x4bbebc20
9000ad1c:	4c742400 	.word	0x4c742400

9000ad20 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000ad20:	2800      	cmp	r0, #0
9000ad22:	f000 810e 	beq.w	9000af42 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000ad26:	4a8d      	ldr	r2, [pc, #564]	@ (9000af5c <HAL_RCC_ClockConfig+0x23c>)
9000ad28:	6813      	ldr	r3, [r2, #0]
9000ad2a:	f003 030f 	and.w	r3, r3, #15
9000ad2e:	428b      	cmp	r3, r1
{
9000ad30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ad34:	4604      	mov	r4, r0
9000ad36:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000ad38:	d20c      	bcs.n	9000ad54 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000ad3a:	6813      	ldr	r3, [r2, #0]
9000ad3c:	f023 030f 	bic.w	r3, r3, #15
9000ad40:	430b      	orrs	r3, r1
9000ad42:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ad44:	6813      	ldr	r3, [r2, #0]
9000ad46:	f003 030f 	and.w	r3, r3, #15
9000ad4a:	428b      	cmp	r3, r1
9000ad4c:	d002      	beq.n	9000ad54 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000ad4e:	2001      	movs	r0, #1
}
9000ad50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ad54:	6823      	ldr	r3, [r4, #0]
9000ad56:	0758      	lsls	r0, r3, #29
9000ad58:	d50b      	bpl.n	9000ad72 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ad5a:	4981      	ldr	r1, [pc, #516]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000ad5c:	6920      	ldr	r0, [r4, #16]
9000ad5e:	698a      	ldr	r2, [r1, #24]
9000ad60:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ad64:	4290      	cmp	r0, r2
9000ad66:	d904      	bls.n	9000ad72 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ad68:	698a      	ldr	r2, [r1, #24]
9000ad6a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ad6e:	4302      	orrs	r2, r0
9000ad70:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ad72:	0719      	lsls	r1, r3, #28
9000ad74:	d50b      	bpl.n	9000ad8e <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ad76:	497a      	ldr	r1, [pc, #488]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000ad78:	6960      	ldr	r0, [r4, #20]
9000ad7a:	69ca      	ldr	r2, [r1, #28]
9000ad7c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ad80:	4290      	cmp	r0, r2
9000ad82:	d904      	bls.n	9000ad8e <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000ad84:	69ca      	ldr	r2, [r1, #28]
9000ad86:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ad8a:	4302      	orrs	r2, r0
9000ad8c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000ad8e:	06da      	lsls	r2, r3, #27
9000ad90:	d50b      	bpl.n	9000adaa <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000ad92:	4973      	ldr	r1, [pc, #460]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000ad94:	69a0      	ldr	r0, [r4, #24]
9000ad96:	69ca      	ldr	r2, [r1, #28]
9000ad98:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000ad9c:	4290      	cmp	r0, r2
9000ad9e:	d904      	bls.n	9000adaa <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000ada0:	69ca      	ldr	r2, [r1, #28]
9000ada2:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000ada6:	4302      	orrs	r2, r0
9000ada8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000adaa:	069f      	lsls	r7, r3, #26
9000adac:	d50b      	bpl.n	9000adc6 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000adae:	496c      	ldr	r1, [pc, #432]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000adb0:	69e0      	ldr	r0, [r4, #28]
9000adb2:	6a0a      	ldr	r2, [r1, #32]
9000adb4:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000adb8:	4290      	cmp	r0, r2
9000adba:	d904      	bls.n	9000adc6 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000adbc:	6a0a      	ldr	r2, [r1, #32]
9000adbe:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000adc2:	4302      	orrs	r2, r0
9000adc4:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000adc6:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000adc8:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000adcc:	f140 80ab 	bpl.w	9000af26 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000add0:	4e63      	ldr	r6, [pc, #396]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000add2:	68e0      	ldr	r0, [r4, #12]
9000add4:	69b1      	ldr	r1, [r6, #24]
9000add6:	f001 010f 	and.w	r1, r1, #15
9000adda:	4288      	cmp	r0, r1
9000addc:	d904      	bls.n	9000ade8 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000adde:	69b1      	ldr	r1, [r6, #24]
9000ade0:	f021 010f 	bic.w	r1, r1, #15
9000ade4:	4301      	orrs	r1, r0
9000ade6:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ade8:	2a00      	cmp	r2, #0
9000adea:	d030      	beq.n	9000ae4e <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000adec:	4a5c      	ldr	r2, [pc, #368]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000adee:	68a1      	ldr	r1, [r4, #8]
9000adf0:	6993      	ldr	r3, [r2, #24]
9000adf2:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000adf6:	430b      	orrs	r3, r1
9000adf8:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000adfa:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000adfc:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000adfe:	2902      	cmp	r1, #2
9000ae00:	f000 80a1 	beq.w	9000af46 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000ae04:	2903      	cmp	r1, #3
9000ae06:	f000 8098 	beq.w	9000af3a <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000ae0a:	2901      	cmp	r1, #1
9000ae0c:	f000 80a1 	beq.w	9000af52 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ae10:	075f      	lsls	r7, r3, #29
9000ae12:	d59c      	bpl.n	9000ad4e <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ae14:	4e52      	ldr	r6, [pc, #328]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ae16:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ae1a:	6933      	ldr	r3, [r6, #16]
9000ae1c:	f023 0307 	bic.w	r3, r3, #7
9000ae20:	430b      	orrs	r3, r1
9000ae22:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000ae24:	f7fc f96a 	bl	900070fc <HAL_GetTick>
9000ae28:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ae2a:	e005      	b.n	9000ae38 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ae2c:	f7fc f966 	bl	900070fc <HAL_GetTick>
9000ae30:	1bc0      	subs	r0, r0, r7
9000ae32:	4540      	cmp	r0, r8
9000ae34:	f200 808b 	bhi.w	9000af4e <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ae38:	6933      	ldr	r3, [r6, #16]
9000ae3a:	6862      	ldr	r2, [r4, #4]
9000ae3c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ae40:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000ae44:	d1f2      	bne.n	9000ae2c <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ae46:	6823      	ldr	r3, [r4, #0]
9000ae48:	079e      	lsls	r6, r3, #30
9000ae4a:	d506      	bpl.n	9000ae5a <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ae4c:	68e0      	ldr	r0, [r4, #12]
9000ae4e:	4944      	ldr	r1, [pc, #272]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000ae50:	698a      	ldr	r2, [r1, #24]
9000ae52:	f002 020f 	and.w	r2, r2, #15
9000ae56:	4282      	cmp	r2, r0
9000ae58:	d869      	bhi.n	9000af2e <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000ae5a:	4940      	ldr	r1, [pc, #256]	@ (9000af5c <HAL_RCC_ClockConfig+0x23c>)
9000ae5c:	680a      	ldr	r2, [r1, #0]
9000ae5e:	f002 020f 	and.w	r2, r2, #15
9000ae62:	42aa      	cmp	r2, r5
9000ae64:	d90a      	bls.n	9000ae7c <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000ae66:	680a      	ldr	r2, [r1, #0]
9000ae68:	f022 020f 	bic.w	r2, r2, #15
9000ae6c:	432a      	orrs	r2, r5
9000ae6e:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ae70:	680a      	ldr	r2, [r1, #0]
9000ae72:	f002 020f 	and.w	r2, r2, #15
9000ae76:	42aa      	cmp	r2, r5
9000ae78:	f47f af69 	bne.w	9000ad4e <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ae7c:	0758      	lsls	r0, r3, #29
9000ae7e:	d50b      	bpl.n	9000ae98 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ae80:	4937      	ldr	r1, [pc, #220]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000ae82:	6920      	ldr	r0, [r4, #16]
9000ae84:	698a      	ldr	r2, [r1, #24]
9000ae86:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ae8a:	4290      	cmp	r0, r2
9000ae8c:	d204      	bcs.n	9000ae98 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ae8e:	698a      	ldr	r2, [r1, #24]
9000ae90:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ae94:	4302      	orrs	r2, r0
9000ae96:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ae98:	0719      	lsls	r1, r3, #28
9000ae9a:	d50b      	bpl.n	9000aeb4 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ae9c:	4930      	ldr	r1, [pc, #192]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000ae9e:	6960      	ldr	r0, [r4, #20]
9000aea0:	69ca      	ldr	r2, [r1, #28]
9000aea2:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000aea6:	4290      	cmp	r0, r2
9000aea8:	d204      	bcs.n	9000aeb4 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000aeaa:	69ca      	ldr	r2, [r1, #28]
9000aeac:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000aeb0:	4302      	orrs	r2, r0
9000aeb2:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000aeb4:	06da      	lsls	r2, r3, #27
9000aeb6:	d50b      	bpl.n	9000aed0 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000aeb8:	4929      	ldr	r1, [pc, #164]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000aeba:	69a0      	ldr	r0, [r4, #24]
9000aebc:	69ca      	ldr	r2, [r1, #28]
9000aebe:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000aec2:	4290      	cmp	r0, r2
9000aec4:	d204      	bcs.n	9000aed0 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000aec6:	69ca      	ldr	r2, [r1, #28]
9000aec8:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000aecc:	4302      	orrs	r2, r0
9000aece:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000aed0:	069b      	lsls	r3, r3, #26
9000aed2:	d50b      	bpl.n	9000aeec <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000aed4:	4a22      	ldr	r2, [pc, #136]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000aed6:	69e1      	ldr	r1, [r4, #28]
9000aed8:	6a13      	ldr	r3, [r2, #32]
9000aeda:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000aede:	4299      	cmp	r1, r3
9000aee0:	d204      	bcs.n	9000aeec <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000aee2:	6a13      	ldr	r3, [r2, #32]
9000aee4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000aee8:	430b      	orrs	r3, r1
9000aeea:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000aeec:	f7ff fe8a 	bl	9000ac04 <HAL_RCC_GetSysClockFreq>
9000aef0:	4a1b      	ldr	r2, [pc, #108]	@ (9000af60 <HAL_RCC_ClockConfig+0x240>)
9000aef2:	4603      	mov	r3, r0
9000aef4:	481b      	ldr	r0, [pc, #108]	@ (9000af64 <HAL_RCC_ClockConfig+0x244>)
9000aef6:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000aef8:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000aefa:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000aefe:	4d1a      	ldr	r5, [pc, #104]	@ (9000af68 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af00:	f002 020f 	and.w	r2, r2, #15
9000af04:	4c19      	ldr	r4, [pc, #100]	@ (9000af6c <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af06:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af08:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af0a:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000af0e:	4818      	ldr	r0, [pc, #96]	@ (9000af70 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af10:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000af14:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000af16:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000af18:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af1a:	40d3      	lsrs	r3, r2
9000af1c:	6023      	str	r3, [r4, #0]
}
9000af1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000af22:	f7f9 b937 	b.w	90004194 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000af26:	2a00      	cmp	r2, #0
9000af28:	f47f af60 	bne.w	9000adec <HAL_RCC_ClockConfig+0xcc>
9000af2c:	e795      	b.n	9000ae5a <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000af2e:	698a      	ldr	r2, [r1, #24]
9000af30:	f022 020f 	bic.w	r2, r2, #15
9000af34:	4302      	orrs	r2, r0
9000af36:	618a      	str	r2, [r1, #24]
9000af38:	e78f      	b.n	9000ae5a <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000af3a:	019a      	lsls	r2, r3, #6
9000af3c:	f53f af6a 	bmi.w	9000ae14 <HAL_RCC_ClockConfig+0xf4>
9000af40:	e705      	b.n	9000ad4e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000af42:	2001      	movs	r0, #1
}
9000af44:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000af46:	0398      	lsls	r0, r3, #14
9000af48:	f53f af64 	bmi.w	9000ae14 <HAL_RCC_ClockConfig+0xf4>
9000af4c:	e6ff      	b.n	9000ad4e <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000af4e:	2003      	movs	r0, #3
9000af50:	e6fe      	b.n	9000ad50 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000af52:	05db      	lsls	r3, r3, #23
9000af54:	f53f af5e 	bmi.w	9000ae14 <HAL_RCC_ClockConfig+0xf4>
9000af58:	e6f9      	b.n	9000ad4e <HAL_RCC_ClockConfig+0x2e>
9000af5a:	bf00      	nop
9000af5c:	52002000 	.word	0x52002000
9000af60:	58024400 	.word	0x58024400
9000af64:	9002ba90 	.word	0x9002ba90
9000af68:	24000078 	.word	0x24000078
9000af6c:	24000074 	.word	0x24000074
9000af70:	24000080 	.word	0x24000080

9000af74 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000af74:	4a1c      	ldr	r2, [pc, #112]	@ (9000afe8 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000af76:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000af78:	6913      	ldr	r3, [r2, #16]
9000af7a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000af7e:	2b10      	cmp	r3, #16
9000af80:	d020      	beq.n	9000afc4 <HAL_RCC_GetPCLK1Freq+0x50>
9000af82:	2b18      	cmp	r3, #24
9000af84:	d029      	beq.n	9000afda <HAL_RCC_GetPCLK1Freq+0x66>
9000af86:	b1fb      	cbz	r3, 9000afc8 <HAL_RCC_GetPCLK1Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000af88:	4b18      	ldr	r3, [pc, #96]	@ (9000afec <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000af8a:	4a17      	ldr	r2, [pc, #92]	@ (9000afe8 <HAL_RCC_GetPCLK1Freq+0x74>)
9000af8c:	4918      	ldr	r1, [pc, #96]	@ (9000aff0 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000af8e:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000af90:	4d18      	ldr	r5, [pc, #96]	@ (9000aff4 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000af92:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af96:	4c18      	ldr	r4, [pc, #96]	@ (9000aff8 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000af98:	5c08      	ldrb	r0, [r1, r0]
9000af9a:	f000 001f 	and.w	r0, r0, #31
9000af9e:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afa0:	6990      	ldr	r0, [r2, #24]
9000afa2:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000afa6:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afa8:	5c08      	ldrb	r0, [r1, r0]
9000afaa:	f000 001f 	and.w	r0, r0, #31
9000afae:	40c3      	lsrs	r3, r0
9000afb0:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000afb2:	69d2      	ldr	r2, [r2, #28]
9000afb4:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000afb8:	5c88      	ldrb	r0, [r1, r2]
9000afba:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000afbe:	fa23 f000 	lsr.w	r0, r3, r0
9000afc2:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000afc4:	4b0d      	ldr	r3, [pc, #52]	@ (9000affc <HAL_RCC_GetPCLK1Freq+0x88>)
9000afc6:	e7e0      	b.n	9000af8a <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000afc8:	6813      	ldr	r3, [r2, #0]
9000afca:	069b      	lsls	r3, r3, #26
9000afcc:	d509      	bpl.n	9000afe2 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000afce:	6812      	ldr	r2, [r2, #0]
9000afd0:	4b0b      	ldr	r3, [pc, #44]	@ (9000b000 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000afd2:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000afd6:	40d3      	lsrs	r3, r2
9000afd8:	e7d7      	b.n	9000af8a <HAL_RCC_GetPCLK1Freq+0x16>
9000afda:	f7ff faaf 	bl	9000a53c <HAL_RCC_GetSysClockFreq.part.0>
9000afde:	4603      	mov	r3, r0
9000afe0:	e7d3      	b.n	9000af8a <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000afe2:	4b07      	ldr	r3, [pc, #28]	@ (9000b000 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000afe4:	e7d1      	b.n	9000af8a <HAL_RCC_GetPCLK1Freq+0x16>
9000afe6:	bf00      	nop
9000afe8:	58024400 	.word	0x58024400
9000afec:	003d0900 	.word	0x003d0900
9000aff0:	9002ba90 	.word	0x9002ba90
9000aff4:	24000078 	.word	0x24000078
9000aff8:	24000074 	.word	0x24000074
9000affc:	017d7840 	.word	0x017d7840
9000b000:	03d09000 	.word	0x03d09000

9000b004 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b004:	4a1c      	ldr	r2, [pc, #112]	@ (9000b078 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b006:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b008:	6913      	ldr	r3, [r2, #16]
9000b00a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b00e:	2b10      	cmp	r3, #16
9000b010:	d020      	beq.n	9000b054 <HAL_RCC_GetPCLK2Freq+0x50>
9000b012:	2b18      	cmp	r3, #24
9000b014:	d029      	beq.n	9000b06a <HAL_RCC_GetPCLK2Freq+0x66>
9000b016:	b1fb      	cbz	r3, 9000b058 <HAL_RCC_GetPCLK2Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000b018:	4b18      	ldr	r3, [pc, #96]	@ (9000b07c <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b01a:	4a17      	ldr	r2, [pc, #92]	@ (9000b078 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b01c:	4918      	ldr	r1, [pc, #96]	@ (9000b080 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b01e:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b020:	4d18      	ldr	r5, [pc, #96]	@ (9000b084 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b022:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b026:	4c18      	ldr	r4, [pc, #96]	@ (9000b088 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b028:	5c08      	ldrb	r0, [r1, r0]
9000b02a:	f000 001f 	and.w	r0, r0, #31
9000b02e:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b030:	6990      	ldr	r0, [r2, #24]
9000b032:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b036:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b038:	5c08      	ldrb	r0, [r1, r0]
9000b03a:	f000 001f 	and.w	r0, r0, #31
9000b03e:	40c3      	lsrs	r3, r0
9000b040:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b042:	69d2      	ldr	r2, [r2, #28]
9000b044:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b048:	5c88      	ldrb	r0, [r1, r2]
9000b04a:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b04e:	fa23 f000 	lsr.w	r0, r3, r0
9000b052:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b054:	4b0d      	ldr	r3, [pc, #52]	@ (9000b08c <HAL_RCC_GetPCLK2Freq+0x88>)
9000b056:	e7e0      	b.n	9000b01a <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b058:	6813      	ldr	r3, [r2, #0]
9000b05a:	069b      	lsls	r3, r3, #26
9000b05c:	d509      	bpl.n	9000b072 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b05e:	6812      	ldr	r2, [r2, #0]
9000b060:	4b0b      	ldr	r3, [pc, #44]	@ (9000b090 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b062:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b066:	40d3      	lsrs	r3, r2
9000b068:	e7d7      	b.n	9000b01a <HAL_RCC_GetPCLK2Freq+0x16>
9000b06a:	f7ff fa67 	bl	9000a53c <HAL_RCC_GetSysClockFreq.part.0>
9000b06e:	4603      	mov	r3, r0
9000b070:	e7d3      	b.n	9000b01a <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b072:	4b07      	ldr	r3, [pc, #28]	@ (9000b090 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b074:	e7d1      	b.n	9000b01a <HAL_RCC_GetPCLK2Freq+0x16>
9000b076:	bf00      	nop
9000b078:	58024400 	.word	0x58024400
9000b07c:	003d0900 	.word	0x003d0900
9000b080:	9002ba90 	.word	0x9002ba90
9000b084:	24000078 	.word	0x24000078
9000b088:	24000074 	.word	0x24000074
9000b08c:	017d7840 	.word	0x017d7840
9000b090:	03d09000 	.word	0x03d09000

9000b094 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b094:	4b13      	ldr	r3, [pc, #76]	@ (9000b0e4 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b096:	223f      	movs	r2, #63	@ 0x3f
9000b098:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b09a:	691a      	ldr	r2, [r3, #16]
9000b09c:	f002 0207 	and.w	r2, r2, #7
9000b0a0:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b0a2:	699a      	ldr	r2, [r3, #24]
9000b0a4:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000b0a8:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b0aa:	699a      	ldr	r2, [r3, #24]
9000b0ac:	f002 020f 	and.w	r2, r2, #15
9000b0b0:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b0b2:	699a      	ldr	r2, [r3, #24]
9000b0b4:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b0b8:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b0ba:	69da      	ldr	r2, [r3, #28]
9000b0bc:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b0c0:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b0c2:	69da      	ldr	r2, [r3, #28]
9000b0c4:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b0c8:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b0ca:	6a1b      	ldr	r3, [r3, #32]
{
9000b0cc:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b0ce:	f003 0370 	and.w	r3, r3, #112	@ 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b0d2:	4c05      	ldr	r4, [pc, #20]	@ (9000b0e8 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b0d4:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b0d6:	6823      	ldr	r3, [r4, #0]
}
9000b0d8:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b0dc:	f003 030f 	and.w	r3, r3, #15
9000b0e0:	600b      	str	r3, [r1, #0]
}
9000b0e2:	4770      	bx	lr
9000b0e4:	58024400 	.word	0x58024400
9000b0e8:	52002000 	.word	0x52002000

9000b0ec <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b0ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000b0ee:	4c36      	ldr	r4, [pc, #216]	@ (9000b1c8 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b0f0:	4606      	mov	r6, r0
9000b0f2:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000b0f4:	6823      	ldr	r3, [r4, #0]
9000b0f6:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000b0fa:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b0fc:	f7fb fffe 	bl	900070fc <HAL_GetTick>
9000b100:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b102:	e004      	b.n	9000b10e <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b104:	f7fb fffa 	bl	900070fc <HAL_GetTick>
9000b108:	1b40      	subs	r0, r0, r5
9000b10a:	2802      	cmp	r0, #2
9000b10c:	d856      	bhi.n	9000b1bc <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b10e:	6823      	ldr	r3, [r4, #0]
9000b110:	011a      	lsls	r2, r3, #4
9000b112:	d4f7      	bmi.n	9000b104 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000b114:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b116:	6832      	ldr	r2, [r6, #0]
9000b118:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000b11c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000b120:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b122:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b126:	3b01      	subs	r3, #1
9000b128:	3a01      	subs	r2, #1
9000b12a:	025b      	lsls	r3, r3, #9
9000b12c:	0412      	lsls	r2, r2, #16
9000b12e:	b29b      	uxth	r3, r3
9000b130:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b134:	4313      	orrs	r3, r2
9000b136:	6872      	ldr	r2, [r6, #4]
9000b138:	3a01      	subs	r2, #1
9000b13a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b13e:	4313      	orrs	r3, r2
9000b140:	6932      	ldr	r2, [r6, #16]
9000b142:	3a01      	subs	r2, #1
9000b144:	0612      	lsls	r2, r2, #24
9000b146:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b14a:	4313      	orrs	r3, r2
9000b14c:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000b14e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b150:	6972      	ldr	r2, [r6, #20]
9000b152:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000b156:	4313      	orrs	r3, r2
9000b158:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b15a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b15c:	69b3      	ldr	r3, [r6, #24]
9000b15e:	f022 0220 	bic.w	r2, r2, #32
9000b162:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b164:	4b19      	ldr	r3, [pc, #100]	@ (9000b1cc <RCCEx_PLL2_Config.part.0+0xe0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b166:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000b168:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b16a:	f022 0210 	bic.w	r2, r2, #16
9000b16e:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b170:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
9000b172:	69f2      	ldr	r2, [r6, #28]
9000b174:	400b      	ands	r3, r1
9000b176:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b17a:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000b17c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b17e:	f043 0310 	orr.w	r3, r3, #16
9000b182:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b184:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b186:	b1df      	cbz	r7, 9000b1c0 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b188:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000b18a:	bf0c      	ite	eq
9000b18c:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000b190:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000b194:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000b196:	4c0c      	ldr	r4, [pc, #48]	@ (9000b1c8 <RCCEx_PLL2_Config.part.0+0xdc>)
9000b198:	6823      	ldr	r3, [r4, #0]
9000b19a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000b19e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b1a0:	f7fb ffac 	bl	900070fc <HAL_GetTick>
9000b1a4:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b1a6:	e004      	b.n	9000b1b2 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b1a8:	f7fb ffa8 	bl	900070fc <HAL_GetTick>
9000b1ac:	1b40      	subs	r0, r0, r5
9000b1ae:	2802      	cmp	r0, #2
9000b1b0:	d804      	bhi.n	9000b1bc <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b1b2:	6823      	ldr	r3, [r4, #0]
9000b1b4:	011b      	lsls	r3, r3, #4
9000b1b6:	d5f7      	bpl.n	9000b1a8 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000b1b8:	2000      	movs	r0, #0
}
9000b1ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b1bc:	2003      	movs	r0, #3
}
9000b1be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b1c0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000b1c4:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b1c6:	e7e6      	b.n	9000b196 <RCCEx_PLL2_Config.part.0+0xaa>
9000b1c8:	58024400 	.word	0x58024400
9000b1cc:	ffff0007 	.word	0xffff0007

9000b1d0 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b1d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000b1d2:	4c36      	ldr	r4, [pc, #216]	@ (9000b2ac <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b1d4:	4606      	mov	r6, r0
9000b1d6:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000b1d8:	6823      	ldr	r3, [r4, #0]
9000b1da:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000b1de:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b1e0:	f7fb ff8c 	bl	900070fc <HAL_GetTick>
9000b1e4:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b1e6:	e004      	b.n	9000b1f2 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b1e8:	f7fb ff88 	bl	900070fc <HAL_GetTick>
9000b1ec:	1b40      	subs	r0, r0, r5
9000b1ee:	2802      	cmp	r0, #2
9000b1f0:	d856      	bhi.n	9000b2a0 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b1f2:	6823      	ldr	r3, [r4, #0]
9000b1f4:	009a      	lsls	r2, r3, #2
9000b1f6:	d4f7      	bmi.n	9000b1e8 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000b1f8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b1fa:	6832      	ldr	r2, [r6, #0]
9000b1fc:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000b200:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000b204:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b206:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b20a:	3b01      	subs	r3, #1
9000b20c:	3a01      	subs	r2, #1
9000b20e:	025b      	lsls	r3, r3, #9
9000b210:	0412      	lsls	r2, r2, #16
9000b212:	b29b      	uxth	r3, r3
9000b214:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b218:	4313      	orrs	r3, r2
9000b21a:	6872      	ldr	r2, [r6, #4]
9000b21c:	3a01      	subs	r2, #1
9000b21e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b222:	4313      	orrs	r3, r2
9000b224:	6932      	ldr	r2, [r6, #16]
9000b226:	3a01      	subs	r2, #1
9000b228:	0612      	lsls	r2, r2, #24
9000b22a:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b22e:	4313      	orrs	r3, r2
9000b230:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000b232:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b234:	6972      	ldr	r2, [r6, #20]
9000b236:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000b23a:	4313      	orrs	r3, r2
9000b23c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b23e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b240:	69b3      	ldr	r3, [r6, #24]
9000b242:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000b246:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b248:	4b19      	ldr	r3, [pc, #100]	@ (9000b2b0 <RCCEx_PLL3_Config.part.0+0xe0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b24a:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000b24c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b24e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000b252:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b254:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9000b256:	69f2      	ldr	r2, [r6, #28]
9000b258:	400b      	ands	r3, r1
9000b25a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b25e:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000b260:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b262:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b266:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b268:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b26a:	b1df      	cbz	r7, 9000b2a4 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b26c:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000b26e:	bf0c      	ite	eq
9000b270:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000b274:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000b278:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000b27a:	4c0c      	ldr	r4, [pc, #48]	@ (9000b2ac <RCCEx_PLL3_Config.part.0+0xdc>)
9000b27c:	6823      	ldr	r3, [r4, #0]
9000b27e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000b282:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b284:	f7fb ff3a 	bl	900070fc <HAL_GetTick>
9000b288:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b28a:	e004      	b.n	9000b296 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b28c:	f7fb ff36 	bl	900070fc <HAL_GetTick>
9000b290:	1b40      	subs	r0, r0, r5
9000b292:	2802      	cmp	r0, #2
9000b294:	d804      	bhi.n	9000b2a0 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b296:	6823      	ldr	r3, [r4, #0]
9000b298:	009b      	lsls	r3, r3, #2
9000b29a:	d5f7      	bpl.n	9000b28c <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000b29c:	2000      	movs	r0, #0
}
9000b29e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b2a0:	2003      	movs	r0, #3
}
9000b2a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b2a4:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000b2a8:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b2aa:	e7e6      	b.n	9000b27a <RCCEx_PLL3_Config.part.0+0xaa>
9000b2ac:	58024400 	.word	0x58024400
9000b2b0:	ffff0007 	.word	0xffff0007

9000b2b4 <HAL_RCCEx_PeriphCLKConfig>:
{
9000b2b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b2b8:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000b2bc:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b2be:	011d      	lsls	r5, r3, #4
9000b2c0:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000b2c4:	d525      	bpl.n	9000b312 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b2c6:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000b2c8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b2cc:	f000 8660 	beq.w	9000bf90 <HAL_RCCEx_PeriphCLKConfig+0xcdc>
9000b2d0:	d814      	bhi.n	9000b2fc <HAL_RCCEx_PeriphCLKConfig+0x48>
9000b2d2:	2900      	cmp	r1, #0
9000b2d4:	f000 86fa 	beq.w	9000c0cc <HAL_RCCEx_PeriphCLKConfig+0xe18>
9000b2d8:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b2dc:	f040 8466 	bne.w	9000bbac <HAL_RCCEx_PeriphCLKConfig+0x8f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b2e0:	49ad      	ldr	r1, [pc, #692]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b2e2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b2e4:	f001 0103 	and.w	r1, r1, #3
9000b2e8:	2903      	cmp	r1, #3
9000b2ea:	f000 845f 	beq.w	9000bbac <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000b2ee:	2102      	movs	r1, #2
9000b2f0:	3008      	adds	r0, #8
9000b2f2:	f7ff fefb 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b2f6:	4606      	mov	r6, r0
        break;
9000b2f8:	f000 be56 	b.w	9000bfa8 <HAL_RCCEx_PeriphCLKConfig+0xcf4>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b2fc:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000b300:	f040 8454 	bne.w	9000bbac <HAL_RCCEx_PeriphCLKConfig+0x8f8>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b304:	4da4      	ldr	r5, [pc, #656]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000b306:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b308:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000b30a:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000b30e:	4301      	orrs	r1, r0
9000b310:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b312:	05d8      	lsls	r0, r3, #23
9000b314:	d50a      	bpl.n	9000b32c <HAL_RCCEx_PeriphCLKConfig+0x78>
    switch (PeriphClkInit->Sai1ClockSelection)
9000b316:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000b318:	2904      	cmp	r1, #4
9000b31a:	d806      	bhi.n	9000b32a <HAL_RCCEx_PeriphCLKConfig+0x76>
9000b31c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b320:	064c04a8 	.word	0x064c04a8
9000b324:	04ad0661 	.word	0x04ad0661
9000b328:	04ad      	.short	0x04ad
9000b32a:	2601      	movs	r6, #1
9000b32c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000b32e:	0599      	lsls	r1, r3, #22
9000b330:	d524      	bpl.n	9000b37c <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch (PeriphClkInit->Sai23ClockSelection)
9000b332:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000b334:	2980      	cmp	r1, #128	@ 0x80
9000b336:	f000 8664 	beq.w	9000c002 <HAL_RCCEx_PeriphCLKConfig+0xd4e>
9000b33a:	f200 8122 	bhi.w	9000b582 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
9000b33e:	2900      	cmp	r1, #0
9000b340:	f000 84ac 	beq.w	9000bc9c <HAL_RCCEx_PeriphCLKConfig+0x9e8>
9000b344:	2940      	cmp	r1, #64	@ 0x40
9000b346:	f040 8123 	bne.w	9000b590 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b34a:	4993      	ldr	r1, [pc, #588]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b34c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b34e:	f001 0103 	and.w	r1, r1, #3
9000b352:	2903      	cmp	r1, #3
9000b354:	f000 811c 	beq.w	9000b590 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000b358:	2100      	movs	r1, #0
9000b35a:	f104 0008 	add.w	r0, r4, #8
9000b35e:	f7ff fec5 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b362:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b364:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b368:	2d00      	cmp	r5, #0
9000b36a:	f040 851b 	bne.w	9000bda4 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000b36e:	4f8a      	ldr	r7, [pc, #552]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b370:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000b372:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b374:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000b378:	4301      	orrs	r1, r0
9000b37a:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b37c:	055f      	lsls	r7, r3, #21
9000b37e:	d528      	bpl.n	9000b3d2 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4AClockSelection)
9000b380:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000b384:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000b388:	f000 864f 	beq.w	9000c02a <HAL_RCCEx_PeriphCLKConfig+0xd76>
9000b38c:	f200 8106 	bhi.w	9000b59c <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000b390:	2900      	cmp	r1, #0
9000b392:	f000 8463 	beq.w	9000bc5c <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000b396:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b39a:	f040 8107 	bne.w	9000b5ac <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b39e:	497e      	ldr	r1, [pc, #504]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b3a0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b3a2:	f001 0103 	and.w	r1, r1, #3
9000b3a6:	2903      	cmp	r1, #3
9000b3a8:	f000 8100 	beq.w	9000b5ac <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000b3ac:	2100      	movs	r1, #0
9000b3ae:	f104 0008 	add.w	r0, r4, #8
9000b3b2:	f7ff fe9b 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b3b6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b3b8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b3bc:	2d00      	cmp	r5, #0
9000b3be:	f040 84f4 	bne.w	9000bdaa <HAL_RCCEx_PeriphCLKConfig+0xaf6>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000b3c2:	4f75      	ldr	r7, [pc, #468]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b3c4:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000b3c8:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b3ca:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000b3ce:	4301      	orrs	r1, r0
9000b3d0:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b3d2:	0518      	lsls	r0, r3, #20
9000b3d4:	d528      	bpl.n	9000b428 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b3d6:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000b3da:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000b3de:	f000 85ac 	beq.w	9000bf3a <HAL_RCCEx_PeriphCLKConfig+0xc86>
9000b3e2:	f200 80e6 	bhi.w	9000b5b2 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9000b3e6:	2900      	cmp	r1, #0
9000b3e8:	f000 8425 	beq.w	9000bc36 <HAL_RCCEx_PeriphCLKConfig+0x982>
9000b3ec:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000b3f0:	f040 80e7 	bne.w	9000b5c2 <HAL_RCCEx_PeriphCLKConfig+0x30e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b3f4:	4968      	ldr	r1, [pc, #416]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b3f6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b3f8:	f001 0103 	and.w	r1, r1, #3
9000b3fc:	2903      	cmp	r1, #3
9000b3fe:	f000 80e0 	beq.w	9000b5c2 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000b402:	2100      	movs	r1, #0
9000b404:	f104 0008 	add.w	r0, r4, #8
9000b408:	f7ff fe70 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b40c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b40e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b412:	2d00      	cmp	r5, #0
9000b414:	f040 84cc 	bne.w	9000bdb0 <HAL_RCCEx_PeriphCLKConfig+0xafc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000b418:	4f5f      	ldr	r7, [pc, #380]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b41a:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000b41e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b420:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000b424:	4301      	orrs	r1, r0
9000b426:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b428:	0199      	lsls	r1, r3, #6
9000b42a:	d518      	bpl.n	9000b45e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->QspiClockSelection)
9000b42c:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000b42e:	2920      	cmp	r1, #32
9000b430:	f000 84ff 	beq.w	9000be32 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
9000b434:	f200 80c8 	bhi.w	9000b5c8 <HAL_RCCEx_PeriphCLKConfig+0x314>
9000b438:	b139      	cbz	r1, 9000b44a <HAL_RCCEx_PeriphCLKConfig+0x196>
9000b43a:	2910      	cmp	r1, #16
9000b43c:	f040 80c7 	bne.w	9000b5ce <HAL_RCCEx_PeriphCLKConfig+0x31a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b440:	4855      	ldr	r0, [pc, #340]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b442:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b444:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b448:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b44a:	2d00      	cmp	r5, #0
9000b44c:	f040 849f 	bne.w	9000bd8e <HAL_RCCEx_PeriphCLKConfig+0xada>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000b450:	4f51      	ldr	r7, [pc, #324]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b452:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000b454:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b456:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000b45a:	4301      	orrs	r1, r0
9000b45c:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000b45e:	04df      	lsls	r7, r3, #19
9000b460:	d526      	bpl.n	9000b4b0 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi123ClockSelection)
9000b462:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000b464:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b468:	f000 857b 	beq.w	9000bf62 <HAL_RCCEx_PeriphCLKConfig+0xcae>
9000b46c:	f200 80b2 	bhi.w	9000b5d4 <HAL_RCCEx_PeriphCLKConfig+0x320>
9000b470:	2900      	cmp	r1, #0
9000b472:	f000 83ea 	beq.w	9000bc4a <HAL_RCCEx_PeriphCLKConfig+0x996>
9000b476:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000b47a:	f040 80b3 	bne.w	9000b5e4 <HAL_RCCEx_PeriphCLKConfig+0x330>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b47e:	4946      	ldr	r1, [pc, #280]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b480:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b482:	f001 0103 	and.w	r1, r1, #3
9000b486:	2903      	cmp	r1, #3
9000b488:	f000 80ac 	beq.w	9000b5e4 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000b48c:	2100      	movs	r1, #0
9000b48e:	f104 0008 	add.w	r0, r4, #8
9000b492:	f7ff fe2b 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b496:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b498:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b49c:	2d00      	cmp	r5, #0
9000b49e:	f040 848a 	bne.w	9000bdb6 <HAL_RCCEx_PeriphCLKConfig+0xb02>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000b4a2:	4f3d      	ldr	r7, [pc, #244]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b4a4:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000b4a6:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b4a8:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000b4ac:	4301      	orrs	r1, r0
9000b4ae:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b4b0:	0498      	lsls	r0, r3, #18
9000b4b2:	d524      	bpl.n	9000b4fe <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi45ClockSelection)
9000b4b4:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000b4b6:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b4ba:	f000 8516 	beq.w	9000beea <HAL_RCCEx_PeriphCLKConfig+0xc36>
9000b4be:	f200 8094 	bhi.w	9000b5ea <HAL_RCCEx_PeriphCLKConfig+0x336>
9000b4c2:	b191      	cbz	r1, 9000b4ea <HAL_RCCEx_PeriphCLKConfig+0x236>
9000b4c4:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b4c8:	f040 8099 	bne.w	9000b5fe <HAL_RCCEx_PeriphCLKConfig+0x34a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b4cc:	4932      	ldr	r1, [pc, #200]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b4ce:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b4d0:	f001 0103 	and.w	r1, r1, #3
9000b4d4:	2903      	cmp	r1, #3
9000b4d6:	f000 8092 	beq.w	9000b5fe <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000b4da:	2101      	movs	r1, #1
9000b4dc:	f104 0008 	add.w	r0, r4, #8
9000b4e0:	f7ff fe04 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b4e4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b4e6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b4ea:	2d00      	cmp	r5, #0
9000b4ec:	f040 8476 	bne.w	9000bddc <HAL_RCCEx_PeriphCLKConfig+0xb28>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000b4f0:	4f29      	ldr	r7, [pc, #164]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b4f2:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000b4f4:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b4f6:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000b4fa:	4301      	orrs	r1, r0
9000b4fc:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b4fe:	0459      	lsls	r1, r3, #17
9000b500:	d523      	bpl.n	9000b54a <HAL_RCCEx_PeriphCLKConfig+0x296>
    switch (PeriphClkInit->Spi6ClockSelection)
9000b502:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000b506:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b50a:	f000 8502 	beq.w	9000bf12 <HAL_RCCEx_PeriphCLKConfig+0xc5e>
9000b50e:	d879      	bhi.n	9000b604 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000b510:	b181      	cbz	r1, 9000b534 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000b512:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b516:	d17d      	bne.n	9000b614 <HAL_RCCEx_PeriphCLKConfig+0x360>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b518:	491f      	ldr	r1, [pc, #124]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b51a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b51c:	f001 0103 	and.w	r1, r1, #3
9000b520:	2903      	cmp	r1, #3
9000b522:	d077      	beq.n	9000b614 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000b524:	2101      	movs	r1, #1
9000b526:	f104 0008 	add.w	r0, r4, #8
9000b52a:	f7ff fddf 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b52e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b530:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b534:	2d00      	cmp	r5, #0
9000b536:	f040 8454 	bne.w	9000bde2 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000b53a:	4f17      	ldr	r7, [pc, #92]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000b53c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000b540:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b542:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b546:	4301      	orrs	r1, r0
9000b548:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b54a:	041f      	lsls	r7, r3, #16
9000b54c:	d50d      	bpl.n	9000b56a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
    switch (PeriphClkInit->FdcanClockSelection)
9000b54e:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000b550:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b554:	f000 82e2 	beq.w	9000bb1c <HAL_RCCEx_PeriphCLKConfig+0x868>
9000b558:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b55c:	f000 83f0 	beq.w	9000bd40 <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9000b560:	2900      	cmp	r1, #0
9000b562:	f000 82e0 	beq.w	9000bb26 <HAL_RCCEx_PeriphCLKConfig+0x872>
9000b566:	2601      	movs	r6, #1
9000b568:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000b56a:	01d8      	lsls	r0, r3, #7
9000b56c:	d55e      	bpl.n	9000b62c <HAL_RCCEx_PeriphCLKConfig+0x378>
    switch (PeriphClkInit->FmcClockSelection)
9000b56e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000b570:	2903      	cmp	r1, #3
9000b572:	f200 85cd 	bhi.w	9000c110 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000b576:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b57a:	0055      	.short	0x0055
9000b57c:	04930050 	.word	0x04930050
9000b580:	0055      	.short	0x0055
    switch (PeriphClkInit->Sai23ClockSelection)
9000b582:	29c0      	cmp	r1, #192	@ 0xc0
9000b584:	f43f aef0 	beq.w	9000b368 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000b588:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000b58c:	f43f aeec 	beq.w	9000b368 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000b590:	2601      	movs	r6, #1
9000b592:	4635      	mov	r5, r6
9000b594:	e6f2      	b.n	9000b37c <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000b596:	bf00      	nop
9000b598:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Sai4AClockSelection)
9000b59c:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000b5a0:	f43f af0c 	beq.w	9000b3bc <HAL_RCCEx_PeriphCLKConfig+0x108>
9000b5a4:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000b5a8:	f43f af08 	beq.w	9000b3bc <HAL_RCCEx_PeriphCLKConfig+0x108>
9000b5ac:	2601      	movs	r6, #1
9000b5ae:	4635      	mov	r5, r6
9000b5b0:	e70f      	b.n	9000b3d2 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b5b2:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000b5b6:	f43f af2c 	beq.w	9000b412 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000b5ba:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000b5be:	f43f af28 	beq.w	9000b412 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000b5c2:	2601      	movs	r6, #1
9000b5c4:	4635      	mov	r5, r6
9000b5c6:	e72f      	b.n	9000b428 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->QspiClockSelection)
9000b5c8:	2930      	cmp	r1, #48	@ 0x30
9000b5ca:	f43f af3e 	beq.w	9000b44a <HAL_RCCEx_PeriphCLKConfig+0x196>
9000b5ce:	2601      	movs	r6, #1
9000b5d0:	4635      	mov	r5, r6
9000b5d2:	e744      	b.n	9000b45e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000b5d4:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000b5d8:	f43f af60 	beq.w	9000b49c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000b5dc:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000b5e0:	f43f af5c 	beq.w	9000b49c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000b5e4:	2601      	movs	r6, #1
9000b5e6:	4635      	mov	r5, r6
9000b5e8:	e762      	b.n	9000b4b0 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi45ClockSelection)
9000b5ea:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000b5ee:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000b5f2:	f43f af7a 	beq.w	9000b4ea <HAL_RCCEx_PeriphCLKConfig+0x236>
9000b5f6:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000b5fa:	f43f af76 	beq.w	9000b4ea <HAL_RCCEx_PeriphCLKConfig+0x236>
9000b5fe:	2601      	movs	r6, #1
9000b600:	4635      	mov	r5, r6
9000b602:	e77c      	b.n	9000b4fe <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000b604:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000b608:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000b60c:	d092      	beq.n	9000b534 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000b60e:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000b612:	d08f      	beq.n	9000b534 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000b614:	2601      	movs	r6, #1
9000b616:	4635      	mov	r5, r6
9000b618:	e797      	b.n	9000b54a <HAL_RCCEx_PeriphCLKConfig+0x296>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b61a:	4837      	ldr	r0, [pc, #220]	@ (9000b6f8 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000b61c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b61e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b622:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b624:	2d00      	cmp	r5, #0
9000b626:	f000 83b5 	beq.w	9000bd94 <HAL_RCCEx_PeriphCLKConfig+0xae0>
9000b62a:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000b62c:	0259      	lsls	r1, r3, #9
9000b62e:	f100 82c0 	bmi.w	9000bbb2 <HAL_RCCEx_PeriphCLKConfig+0x8fe>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000b632:	07df      	lsls	r7, r3, #31
9000b634:	d52f      	bpl.n	9000b696 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
    switch (PeriphClkInit->Usart16ClockSelection)
9000b636:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000b638:	2928      	cmp	r1, #40	@ 0x28
9000b63a:	d82a      	bhi.n	9000b692 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000b63c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b640:	002902ab 	.word	0x002902ab
9000b644:	00290029 	.word	0x00290029
9000b648:	00290029 	.word	0x00290029
9000b64c:	00290029 	.word	0x00290029
9000b650:	0029029c 	.word	0x0029029c
9000b654:	00290029 	.word	0x00290029
9000b658:	00290029 	.word	0x00290029
9000b65c:	00290029 	.word	0x00290029
9000b660:	0029052d 	.word	0x0029052d
9000b664:	00290029 	.word	0x00290029
9000b668:	00290029 	.word	0x00290029
9000b66c:	00290029 	.word	0x00290029
9000b670:	002902ab 	.word	0x002902ab
9000b674:	00290029 	.word	0x00290029
9000b678:	00290029 	.word	0x00290029
9000b67c:	00290029 	.word	0x00290029
9000b680:	002902ab 	.word	0x002902ab
9000b684:	00290029 	.word	0x00290029
9000b688:	00290029 	.word	0x00290029
9000b68c:	00290029 	.word	0x00290029
9000b690:	02ab      	.short	0x02ab
9000b692:	2601      	movs	r6, #1
9000b694:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000b696:	0798      	lsls	r0, r3, #30
9000b698:	d51e      	bpl.n	9000b6d8 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000b69a:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000b69c:	2905      	cmp	r1, #5
9000b69e:	f200 851c 	bhi.w	9000c0da <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000b6a2:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b6a6:	0015      	.short	0x0015
9000b6a8:	04e80006 	.word	0x04e80006
9000b6ac:	00150015 	.word	0x00150015
9000b6b0:	0015      	.short	0x0015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b6b2:	4911      	ldr	r1, [pc, #68]	@ (9000b6f8 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000b6b4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b6b6:	f001 0103 	and.w	r1, r1, #3
9000b6ba:	2903      	cmp	r1, #3
9000b6bc:	f000 850d 	beq.w	9000c0da <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000b6c0:	2101      	movs	r1, #1
9000b6c2:	f104 0008 	add.w	r0, r4, #8
9000b6c6:	f7ff fd11 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b6ca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b6cc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b6d0:	2d00      	cmp	r5, #0
9000b6d2:	f000 837b 	beq.w	9000bdcc <HAL_RCCEx_PeriphCLKConfig+0xb18>
9000b6d6:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b6d8:	0759      	lsls	r1, r3, #29
9000b6da:	d522      	bpl.n	9000b722 <HAL_RCCEx_PeriphCLKConfig+0x46e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000b6dc:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000b6e0:	2905      	cmp	r1, #5
9000b6e2:	f200 84fe 	bhi.w	9000c0e2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000b6e6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b6ea:	0018      	.short	0x0018
9000b6ec:	04b40009 	.word	0x04b40009
9000b6f0:	00180018 	.word	0x00180018
9000b6f4:	0018      	.short	0x0018
9000b6f6:	bf00      	nop
9000b6f8:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b6fc:	49b0      	ldr	r1, [pc, #704]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b6fe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b700:	f001 0103 	and.w	r1, r1, #3
9000b704:	2903      	cmp	r1, #3
9000b706:	f000 84ec 	beq.w	9000c0e2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000b70a:	2101      	movs	r1, #1
9000b70c:	f104 0008 	add.w	r0, r4, #8
9000b710:	f7ff fcec 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b714:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b716:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b71a:	2d00      	cmp	r5, #0
9000b71c:	f000 8364 	beq.w	9000bde8 <HAL_RCCEx_PeriphCLKConfig+0xb34>
9000b720:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b722:	069f      	lsls	r7, r3, #26
9000b724:	d526      	bpl.n	9000b774 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000b726:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000b72a:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b72e:	f000 836e 	beq.w	9000be0e <HAL_RCCEx_PeriphCLKConfig+0xb5a>
9000b732:	f200 8194 	bhi.w	9000ba5e <HAL_RCCEx_PeriphCLKConfig+0x7aa>
9000b736:	b191      	cbz	r1, 9000b75e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000b738:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b73c:	f040 8199 	bne.w	9000ba72 <HAL_RCCEx_PeriphCLKConfig+0x7be>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b740:	499f      	ldr	r1, [pc, #636]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b742:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b744:	f001 0103 	and.w	r1, r1, #3
9000b748:	2903      	cmp	r1, #3
9000b74a:	f000 8192 	beq.w	9000ba72 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000b74e:	2100      	movs	r1, #0
9000b750:	f104 0008 	add.w	r0, r4, #8
9000b754:	f7ff fcca 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b758:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b75a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b75e:	2d00      	cmp	r5, #0
9000b760:	f040 834b 	bne.w	9000bdfa <HAL_RCCEx_PeriphCLKConfig+0xb46>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000b764:	4f96      	ldr	r7, [pc, #600]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b766:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000b76a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b76c:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b770:	4301      	orrs	r1, r0
9000b772:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b774:	0658      	lsls	r0, r3, #25
9000b776:	d526      	bpl.n	9000b7c6 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000b778:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000b77c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000b780:	f000 83a1 	beq.w	9000bec6 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000b784:	f200 8178 	bhi.w	9000ba78 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
9000b788:	b191      	cbz	r1, 9000b7b0 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000b78a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000b78e:	f040 817d 	bne.w	9000ba8c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b792:	498b      	ldr	r1, [pc, #556]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b794:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b796:	f001 0103 	and.w	r1, r1, #3
9000b79a:	2903      	cmp	r1, #3
9000b79c:	f000 8176 	beq.w	9000ba8c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000b7a0:	2100      	movs	r1, #0
9000b7a2:	f104 0008 	add.w	r0, r4, #8
9000b7a6:	f7ff fca1 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b7aa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b7ac:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b7b0:	2d00      	cmp	r5, #0
9000b7b2:	f040 8328 	bne.w	9000be06 <HAL_RCCEx_PeriphCLKConfig+0xb52>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000b7b6:	4f82      	ldr	r7, [pc, #520]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b7b8:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000b7bc:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b7be:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000b7c2:	4301      	orrs	r1, r0
9000b7c4:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b7c6:	0619      	lsls	r1, r3, #24
9000b7c8:	d526      	bpl.n	9000b818 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000b7ca:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000b7ce:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000b7d2:	f000 8353 	beq.w	9000be7c <HAL_RCCEx_PeriphCLKConfig+0xbc8>
9000b7d6:	f200 815c 	bhi.w	9000ba92 <HAL_RCCEx_PeriphCLKConfig+0x7de>
9000b7da:	b191      	cbz	r1, 9000b802 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000b7dc:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b7e0:	f040 8161 	bne.w	9000baa6 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b7e4:	4976      	ldr	r1, [pc, #472]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b7e6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b7e8:	f001 0103 	and.w	r1, r1, #3
9000b7ec:	2903      	cmp	r1, #3
9000b7ee:	f000 815a 	beq.w	9000baa6 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000b7f2:	2100      	movs	r1, #0
9000b7f4:	f104 0008 	add.w	r0, r4, #8
9000b7f8:	f7ff fc78 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b7fc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b7fe:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b802:	2d00      	cmp	r5, #0
9000b804:	f040 82fb 	bne.w	9000bdfe <HAL_RCCEx_PeriphCLKConfig+0xb4a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000b808:	4f6d      	ldr	r7, [pc, #436]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b80a:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000b80e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b810:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000b814:	4301      	orrs	r1, r0
9000b816:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b818:	071f      	lsls	r7, r3, #28
9000b81a:	d50b      	bpl.n	9000b834 <HAL_RCCEx_PeriphCLKConfig+0x580>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000b81c:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000b820:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000b824:	f000 8250 	beq.w	9000bcc8 <HAL_RCCEx_PeriphCLKConfig+0xa14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000b828:	4f65      	ldr	r7, [pc, #404]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b82a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b82c:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000b830:	4301      	orrs	r1, r0
9000b832:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000b834:	06d8      	lsls	r0, r3, #27
9000b836:	d50b      	bpl.n	9000b850 <HAL_RCCEx_PeriphCLKConfig+0x59c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000b838:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000b83c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000b840:	f000 8257 	beq.w	9000bcf2 <HAL_RCCEx_PeriphCLKConfig+0xa3e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000b844:	4f5e      	ldr	r7, [pc, #376]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b846:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b848:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000b84c:	4301      	orrs	r1, r0
9000b84e:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000b850:	0319      	lsls	r1, r3, #12
9000b852:	d50e      	bpl.n	9000b872 <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->AdcClockSelection)
9000b854:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000b858:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b85c:	f000 816e 	beq.w	9000bb3c <HAL_RCCEx_PeriphCLKConfig+0x888>
9000b860:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b864:	f000 8179 	beq.w	9000bb5a <HAL_RCCEx_PeriphCLKConfig+0x8a6>
9000b868:	2900      	cmp	r1, #0
9000b86a:	f000 827a 	beq.w	9000bd62 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000b86e:	2601      	movs	r6, #1
9000b870:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000b872:	035f      	lsls	r7, r3, #13
9000b874:	d50f      	bpl.n	9000b896 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    switch (PeriphClkInit->UsbClockSelection)
9000b876:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000b87a:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b87e:	f000 82eb 	beq.w	9000be58 <HAL_RCCEx_PeriphCLKConfig+0xba4>
9000b882:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000b886:	f000 813d 	beq.w	9000bb04 <HAL_RCCEx_PeriphCLKConfig+0x850>
9000b88a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b88e:	f000 8134 	beq.w	9000bafa <HAL_RCCEx_PeriphCLKConfig+0x846>
9000b892:	2601      	movs	r6, #1
9000b894:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000b896:	03d8      	lsls	r0, r3, #15
9000b898:	d520      	bpl.n	9000b8dc <HAL_RCCEx_PeriphCLKConfig+0x628>
    switch (PeriphClkInit->SdmmcClockSelection)
9000b89a:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000b89c:	2900      	cmp	r1, #0
9000b89e:	f000 8245 	beq.w	9000bd2c <HAL_RCCEx_PeriphCLKConfig+0xa78>
9000b8a2:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b8a6:	f040 8125 	bne.w	9000baf4 <HAL_RCCEx_PeriphCLKConfig+0x840>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b8aa:	4945      	ldr	r1, [pc, #276]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b8ac:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b8ae:	f001 0103 	and.w	r1, r1, #3
9000b8b2:	2903      	cmp	r1, #3
9000b8b4:	f000 811e 	beq.w	9000baf4 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000b8b8:	2102      	movs	r1, #2
9000b8ba:	f104 0008 	add.w	r0, r4, #8
9000b8be:	f7ff fc15 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000b8c2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b8c4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b8c8:	2d00      	cmp	r5, #0
9000b8ca:	f040 8237 	bne.w	9000bd3c <HAL_RCCEx_PeriphCLKConfig+0xa88>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000b8ce:	4f3c      	ldr	r7, [pc, #240]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b8d0:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000b8d2:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b8d4:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000b8d8:	4301      	orrs	r1, r0
9000b8da:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b8dc:	0099      	lsls	r1, r3, #2
9000b8de:	d50e      	bpl.n	9000b8fe <HAL_RCCEx_PeriphCLKConfig+0x64a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b8e0:	4937      	ldr	r1, [pc, #220]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b8e2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b8e4:	f001 0103 	and.w	r1, r1, #3
9000b8e8:	2903      	cmp	r1, #3
9000b8ea:	d007      	beq.n	9000b8fc <HAL_RCCEx_PeriphCLKConfig+0x648>
9000b8ec:	2102      	movs	r1, #2
9000b8ee:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b8f2:	f7ff fc6d 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b8f6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000b8fa:	b100      	cbz	r0, 9000b8fe <HAL_RCCEx_PeriphCLKConfig+0x64a>
      status = HAL_ERROR;
9000b8fc:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b8fe:	039f      	lsls	r7, r3, #14
9000b900:	f140 80e0 	bpl.w	9000bac4 <HAL_RCCEx_PeriphCLKConfig+0x810>
    switch (PeriphClkInit->RngClockSelection)
9000b904:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000b908:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000b90c:	f000 8205 	beq.w	9000bd1a <HAL_RCCEx_PeriphCLKConfig+0xa66>
9000b910:	f240 80cc 	bls.w	9000baac <HAL_RCCEx_PeriphCLKConfig+0x7f8>
9000b914:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000b918:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000b91c:	f000 80c9 	beq.w	9000bab2 <HAL_RCCEx_PeriphCLKConfig+0x7fe>
9000b920:	2501      	movs	r5, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000b922:	02d8      	lsls	r0, r3, #11
9000b924:	d506      	bpl.n	9000b934 <HAL_RCCEx_PeriphCLKConfig+0x680>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000b926:	4826      	ldr	r0, [pc, #152]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b928:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000b92a:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b92c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000b930:	4331      	orrs	r1, r6
9000b932:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000b934:	00d9      	lsls	r1, r3, #3
9000b936:	d507      	bpl.n	9000b948 <HAL_RCCEx_PeriphCLKConfig+0x694>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000b938:	4821      	ldr	r0, [pc, #132]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b93a:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000b93e:	6901      	ldr	r1, [r0, #16]
9000b940:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000b944:	4331      	orrs	r1, r6
9000b946:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000b948:	029f      	lsls	r7, r3, #10
9000b94a:	d506      	bpl.n	9000b95a <HAL_RCCEx_PeriphCLKConfig+0x6a6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000b94c:	481c      	ldr	r0, [pc, #112]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b94e:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000b950:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b952:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000b956:	4331      	orrs	r1, r6
9000b958:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000b95a:	005e      	lsls	r6, r3, #1
9000b95c:	d509      	bpl.n	9000b972 <HAL_RCCEx_PeriphCLKConfig+0x6be>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000b95e:	4918      	ldr	r1, [pc, #96]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b960:	6908      	ldr	r0, [r1, #16]
9000b962:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000b966:	6108      	str	r0, [r1, #16]
9000b968:	6908      	ldr	r0, [r1, #16]
9000b96a:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000b96e:	4330      	orrs	r0, r6
9000b970:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000b972:	2b00      	cmp	r3, #0
9000b974:	da06      	bge.n	9000b984 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000b976:	4812      	ldr	r0, [pc, #72]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b978:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000b97a:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000b97c:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000b980:	4331      	orrs	r1, r6
9000b982:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000b984:	0218      	lsls	r0, r3, #8
9000b986:	d507      	bpl.n	9000b998 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000b988:	490d      	ldr	r1, [pc, #52]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b98a:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000b98e:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000b990:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000b994:	4303      	orrs	r3, r0
9000b996:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000b998:	07d1      	lsls	r1, r2, #31
9000b99a:	d513      	bpl.n	9000b9c4 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b99c:	4b08      	ldr	r3, [pc, #32]	@ (9000b9c0 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000b99e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b9a0:	f003 0303 	and.w	r3, r3, #3
9000b9a4:	2b03      	cmp	r3, #3
9000b9a6:	f000 818d 	beq.w	9000bcc4 <HAL_RCCEx_PeriphCLKConfig+0xa10>
9000b9aa:	2100      	movs	r1, #0
9000b9ac:	f104 0008 	add.w	r0, r4, #8
9000b9b0:	f7ff fb9c 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000b9b4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b9b6:	2800      	cmp	r0, #0
9000b9b8:	f040 8204 	bne.w	9000bdc4 <HAL_RCCEx_PeriphCLKConfig+0xb10>
9000b9bc:	e002      	b.n	9000b9c4 <HAL_RCCEx_PeriphCLKConfig+0x710>
9000b9be:	bf00      	nop
9000b9c0:	58024400 	.word	0x58024400
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000b9c4:	0793      	lsls	r3, r2, #30
9000b9c6:	d50f      	bpl.n	9000b9e8 <HAL_RCCEx_PeriphCLKConfig+0x734>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b9c8:	4bb2      	ldr	r3, [pc, #712]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000b9ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b9cc:	f003 0303 	and.w	r3, r3, #3
9000b9d0:	2b03      	cmp	r3, #3
9000b9d2:	f000 816c 	beq.w	9000bcae <HAL_RCCEx_PeriphCLKConfig+0x9fa>
9000b9d6:	2101      	movs	r1, #1
9000b9d8:	f104 0008 	add.w	r0, r4, #8
9000b9dc:	f7ff fb86 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000b9e0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b9e2:	2800      	cmp	r0, #0
9000b9e4:	f040 81f0 	bne.w	9000bdc8 <HAL_RCCEx_PeriphCLKConfig+0xb14>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000b9e8:	0757      	lsls	r7, r2, #29
9000b9ea:	d50f      	bpl.n	9000ba0c <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b9ec:	4ba9      	ldr	r3, [pc, #676]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000b9ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b9f0:	f003 0303 	and.w	r3, r3, #3
9000b9f4:	2b03      	cmp	r3, #3
9000b9f6:	f000 815c 	beq.w	9000bcb2 <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9000b9fa:	2102      	movs	r1, #2
9000b9fc:	f104 0008 	add.w	r0, r4, #8
9000ba00:	f7ff fb74 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000ba04:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ba06:	2800      	cmp	r0, #0
9000ba08:	f040 81d8 	bne.w	9000bdbc <HAL_RCCEx_PeriphCLKConfig+0xb08>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000ba0c:	0716      	lsls	r6, r2, #28
9000ba0e:	d50f      	bpl.n	9000ba30 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba10:	4ba0      	ldr	r3, [pc, #640]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ba12:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba14:	f003 0303 	and.w	r3, r3, #3
9000ba18:	2b03      	cmp	r3, #3
9000ba1a:	f000 814c 	beq.w	9000bcb6 <HAL_RCCEx_PeriphCLKConfig+0xa02>
9000ba1e:	2100      	movs	r1, #0
9000ba20:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ba24:	f7ff fbd4 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ba28:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ba2a:	2800      	cmp	r0, #0
9000ba2c:	f040 81c8 	bne.w	9000bdc0 <HAL_RCCEx_PeriphCLKConfig+0xb0c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ba30:	06d0      	lsls	r0, r2, #27
9000ba32:	d54a      	bpl.n	9000baca <HAL_RCCEx_PeriphCLKConfig+0x816>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba34:	4b97      	ldr	r3, [pc, #604]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ba36:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ba3c:	f003 0303 	and.w	r3, r3, #3
9000ba40:	2b03      	cmp	r3, #3
9000ba42:	f000 813a 	beq.w	9000bcba <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000ba46:	2101      	movs	r1, #1
9000ba48:	4630      	mov	r0, r6
9000ba4a:	f7ff fbc1 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000ba4e:	2800      	cmp	r0, #0
9000ba50:	d03a      	beq.n	9000bac8 <HAL_RCCEx_PeriphCLKConfig+0x814>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ba52:	6863      	ldr	r3, [r4, #4]
9000ba54:	069a      	lsls	r2, r3, #26
9000ba56:	f140 808c 	bpl.w	9000bb72 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000ba5a:	4605      	mov	r5, r0
9000ba5c:	e039      	b.n	9000bad2 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000ba5e:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000ba62:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000ba66:	f43f ae7a 	beq.w	9000b75e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000ba6a:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000ba6e:	f43f ae76 	beq.w	9000b75e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000ba72:	2601      	movs	r6, #1
9000ba74:	4635      	mov	r5, r6
9000ba76:	e67d      	b.n	9000b774 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000ba78:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000ba7c:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000ba80:	f43f ae96 	beq.w	9000b7b0 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000ba84:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000ba88:	f43f ae92 	beq.w	9000b7b0 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000ba8c:	2601      	movs	r6, #1
9000ba8e:	4635      	mov	r5, r6
9000ba90:	e699      	b.n	9000b7c6 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000ba92:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000ba96:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ba9a:	f43f aeb2 	beq.w	9000b802 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000ba9e:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000baa2:	f43f aeae 	beq.w	9000b802 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000baa6:	2601      	movs	r6, #1
9000baa8:	4635      	mov	r5, r6
9000baaa:	e6b5      	b.n	9000b818 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->RngClockSelection)
9000baac:	2900      	cmp	r1, #0
9000baae:	f47f af37 	bne.w	9000b920 <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if (ret == HAL_OK)
9000bab2:	2d00      	cmp	r5, #0
9000bab4:	f47f af35 	bne.w	9000b922 <HAL_RCCEx_PeriphCLKConfig+0x66e>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000bab8:	4d76      	ldr	r5, [pc, #472]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000baba:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000babc:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000bac0:	4301      	orrs	r1, r0
9000bac2:	6569      	str	r1, [r5, #84]	@ 0x54
      status = HAL_ERROR;
9000bac4:	4635      	mov	r5, r6
9000bac6:	e72c      	b.n	9000b922 <HAL_RCCEx_PeriphCLKConfig+0x66e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000bac8:	6862      	ldr	r2, [r4, #4]
9000baca:	0693      	lsls	r3, r2, #26
9000bacc:	d50d      	bpl.n	9000baea <HAL_RCCEx_PeriphCLKConfig+0x836>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000bace:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bad2:	4b70      	ldr	r3, [pc, #448]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bad4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000bad6:	f003 0303 	and.w	r3, r3, #3
9000bada:	2b03      	cmp	r3, #3
9000badc:	d049      	beq.n	9000bb72 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000bade:	2102      	movs	r1, #2
9000bae0:	4630      	mov	r0, r6
9000bae2:	f7ff fb75 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000bae6:	2800      	cmp	r0, #0
9000bae8:	d143      	bne.n	9000bb72 <HAL_RCCEx_PeriphCLKConfig+0x8be>
  if (status == HAL_OK)
9000baea:	1e28      	subs	r0, r5, #0
9000baec:	bf18      	it	ne
9000baee:	2001      	movne	r0, #1
}
9000baf0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000baf4:	2601      	movs	r6, #1
9000baf6:	4635      	mov	r5, r6
9000baf8:	e6f0      	b.n	9000b8dc <HAL_RCCEx_PeriphCLKConfig+0x628>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bafa:	4866      	ldr	r0, [pc, #408]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bafc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bafe:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bb02:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bb04:	2d00      	cmp	r5, #0
9000bb06:	f040 8140 	bne.w	9000bd8a <HAL_RCCEx_PeriphCLKConfig+0xad6>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000bb0a:	4f62      	ldr	r7, [pc, #392]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bb0c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000bb10:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bb12:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000bb16:	4301      	orrs	r1, r0
9000bb18:	6579      	str	r1, [r7, #84]	@ 0x54
9000bb1a:	e6bc      	b.n	9000b896 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bb1c:	485d      	ldr	r0, [pc, #372]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bb1e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bb20:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bb24:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bb26:	2d00      	cmp	r5, #0
9000bb28:	f040 812c 	bne.w	9000bd84 <HAL_RCCEx_PeriphCLKConfig+0xad0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000bb2c:	4f59      	ldr	r7, [pc, #356]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bb2e:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000bb30:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bb32:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000bb36:	4301      	orrs	r1, r0
9000bb38:	6539      	str	r1, [r7, #80]	@ 0x50
9000bb3a:	e516      	b.n	9000b56a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb3c:	4955      	ldr	r1, [pc, #340]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bb3e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb40:	f001 0103 	and.w	r1, r1, #3
9000bb44:	2903      	cmp	r1, #3
9000bb46:	f43f ae92 	beq.w	9000b86e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000bb4a:	2102      	movs	r1, #2
9000bb4c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bb50:	f7ff fb3e 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000bb54:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000bb56:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb5a:	2d00      	cmp	r5, #0
9000bb5c:	f040 8151 	bne.w	9000be02 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000bb60:	4f4c      	ldr	r7, [pc, #304]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bb62:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000bb66:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bb68:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000bb6c:	4301      	orrs	r1, r0
9000bb6e:	65b9      	str	r1, [r7, #88]	@ 0x58
9000bb70:	e67f      	b.n	9000b872 <HAL_RCCEx_PeriphCLKConfig+0x5be>
  return HAL_ERROR;
9000bb72:	2001      	movs	r0, #1
}
9000bb74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb78:	4946      	ldr	r1, [pc, #280]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bb7a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb7c:	f001 0103 	and.w	r1, r1, #3
9000bb80:	2903      	cmp	r1, #3
9000bb82:	f43f ad86 	beq.w	9000b692 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000bb86:	2101      	movs	r1, #1
9000bb88:	f104 0008 	add.w	r0, r4, #8
9000bb8c:	f7ff faae 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000bb90:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bb92:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb96:	2d00      	cmp	r5, #0
9000bb98:	f040 8137 	bne.w	9000be0a <HAL_RCCEx_PeriphCLKConfig+0xb56>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000bb9c:	4f3d      	ldr	r7, [pc, #244]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bb9e:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000bba0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bba2:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000bba6:	4301      	orrs	r1, r0
9000bba8:	6579      	str	r1, [r7, #84]	@ 0x54
9000bbaa:	e574      	b.n	9000b696 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9000bbac:	2601      	movs	r6, #1
9000bbae:	f7ff bbb0 	b.w	9000b312 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000bbb2:	4f39      	ldr	r7, [pc, #228]	@ (9000bc98 <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9000bbb4:	683b      	ldr	r3, [r7, #0]
9000bbb6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000bbba:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000bbbc:	f7fb fa9e 	bl	900070fc <HAL_GetTick>
9000bbc0:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bbc2:	e006      	b.n	9000bbd2 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000bbc4:	f7fb fa9a 	bl	900070fc <HAL_GetTick>
9000bbc8:	eba0 0008 	sub.w	r0, r0, r8
9000bbcc:	2864      	cmp	r0, #100	@ 0x64
9000bbce:	f200 8277 	bhi.w	9000c0c0 <HAL_RCCEx_PeriphCLKConfig+0xe0c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bbd2:	683b      	ldr	r3, [r7, #0]
9000bbd4:	05da      	lsls	r2, r3, #23
9000bbd6:	d5f5      	bpl.n	9000bbc4 <HAL_RCCEx_PeriphCLKConfig+0x910>
    if (ret == HAL_OK)
9000bbd8:	2d00      	cmp	r5, #0
9000bbda:	f040 8272 	bne.w	9000c0c2 <HAL_RCCEx_PeriphCLKConfig+0xe0e>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000bbde:	4a2d      	ldr	r2, [pc, #180]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bbe0:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000bbe4:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000bbe6:	4059      	eors	r1, r3
9000bbe8:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000bbec:	d00b      	beq.n	9000bc06 <HAL_RCCEx_PeriphCLKConfig+0x952>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bbee:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000bbf0:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bbf2:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000bbf6:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000bbfa:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000bbfc:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000bbfe:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000bc02:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000bc04:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000bc06:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000bc0a:	f000 8285 	beq.w	9000c118 <HAL_RCCEx_PeriphCLKConfig+0xe64>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bc0e:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000bc12:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000bc16:	f000 8293 	beq.w	9000c140 <HAL_RCCEx_PeriphCLKConfig+0xe8c>
9000bc1a:	491e      	ldr	r1, [pc, #120]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bc1c:	690a      	ldr	r2, [r1, #16]
9000bc1e:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000bc22:	610a      	str	r2, [r1, #16]
9000bc24:	481b      	ldr	r0, [pc, #108]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bc26:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000bc2a:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000bc2c:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000bc2e:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bc32:	6701      	str	r1, [r0, #112]	@ 0x70
9000bc34:	e4fd      	b.n	9000b632 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc36:	4817      	ldr	r0, [pc, #92]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bc38:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bc3a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bc3e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bc40:	2d00      	cmp	r5, #0
9000bc42:	f040 80b5 	bne.w	9000bdb0 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000bc46:	f7ff bbe7 	b.w	9000b418 <HAL_RCCEx_PeriphCLKConfig+0x164>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc4a:	4812      	ldr	r0, [pc, #72]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bc4c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bc4e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bc52:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bc54:	2d00      	cmp	r5, #0
9000bc56:	f040 80ae 	bne.w	9000bdb6 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000bc5a:	e422      	b.n	9000b4a2 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc5c:	480d      	ldr	r0, [pc, #52]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bc5e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bc60:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bc64:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bc66:	2d00      	cmp	r5, #0
9000bc68:	f040 809f 	bne.w	9000bdaa <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000bc6c:	f7ff bba9 	b.w	9000b3c2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc70:	4808      	ldr	r0, [pc, #32]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bc72:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bc74:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bc78:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000bc7a:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000bc7c:	2d00      	cmp	r5, #0
9000bc7e:	f040 81ad 	bne.w	9000bfdc <HAL_RCCEx_PeriphCLKConfig+0xd28>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000bc82:	4f04      	ldr	r7, [pc, #16]	@ (9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000bc84:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000bc86:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bc88:	f021 0107 	bic.w	r1, r1, #7
9000bc8c:	4301      	orrs	r1, r0
9000bc8e:	6539      	str	r1, [r7, #80]	@ 0x50
9000bc90:	f7ff bb4d 	b.w	9000b32e <HAL_RCCEx_PeriphCLKConfig+0x7a>
9000bc94:	58024400 	.word	0x58024400
9000bc98:	58024800 	.word	0x58024800
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bc9c:	48bb      	ldr	r0, [pc, #748]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bc9e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bca0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bca4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bca6:	2d00      	cmp	r5, #0
9000bca8:	d17c      	bne.n	9000bda4 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000bcaa:	f7ff bb60 	b.w	9000b36e <HAL_RCCEx_PeriphCLKConfig+0xba>
    return HAL_ERROR;
9000bcae:	2501      	movs	r5, #1
9000bcb0:	e69a      	b.n	9000b9e8 <HAL_RCCEx_PeriphCLKConfig+0x734>
9000bcb2:	2501      	movs	r5, #1
9000bcb4:	e6aa      	b.n	9000ba0c <HAL_RCCEx_PeriphCLKConfig+0x758>
    return HAL_ERROR;
9000bcb6:	2501      	movs	r5, #1
9000bcb8:	e6ba      	b.n	9000ba30 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000bcba:	0691      	lsls	r1, r2, #26
9000bcbc:	f57f af59 	bpl.w	9000bb72 <HAL_RCCEx_PeriphCLKConfig+0x8be>
    return HAL_ERROR;
9000bcc0:	2501      	movs	r5, #1
9000bcc2:	e706      	b.n	9000bad2 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    return HAL_ERROR;
9000bcc4:	2501      	movs	r5, #1
9000bcc6:	e67d      	b.n	9000b9c4 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bcc8:	49b0      	ldr	r1, [pc, #704]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bcca:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bccc:	f001 0103 	and.w	r1, r1, #3
9000bcd0:	2903      	cmp	r1, #3
9000bcd2:	f000 820a 	beq.w	9000c0ea <HAL_RCCEx_PeriphCLKConfig+0xe36>
9000bcd6:	2102      	movs	r1, #2
9000bcd8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bcdc:	f7ff fa78 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000bce0:	2800      	cmp	r0, #0
9000bce2:	f000 820f 	beq.w	9000c104 <HAL_RCCEx_PeriphCLKConfig+0xe50>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000bce6:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000bcea:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000bcec:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bcf0:	e59a      	b.n	9000b828 <HAL_RCCEx_PeriphCLKConfig+0x574>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bcf2:	49a6      	ldr	r1, [pc, #664]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bcf4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bcf6:	f001 0103 	and.w	r1, r1, #3
9000bcfa:	2903      	cmp	r1, #3
9000bcfc:	f000 81f8 	beq.w	9000c0f0 <HAL_RCCEx_PeriphCLKConfig+0xe3c>
9000bd00:	2102      	movs	r1, #2
9000bd02:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd06:	f7ff fa63 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000bd0a:	2800      	cmp	r0, #0
9000bd0c:	f040 81f3 	bne.w	9000c0f6 <HAL_RCCEx_PeriphCLKConfig+0xe42>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000bd10:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000bd14:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bd18:	e594      	b.n	9000b844 <HAL_RCCEx_PeriphCLKConfig+0x590>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bd1a:	4f9c      	ldr	r7, [pc, #624]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bd1c:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000bd1e:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000bd22:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bd24:	2d00      	cmp	r5, #0
9000bd26:	f47f adfc 	bne.w	9000b922 <HAL_RCCEx_PeriphCLKConfig+0x66e>
9000bd2a:	e6c5      	b.n	9000bab8 <HAL_RCCEx_PeriphCLKConfig+0x804>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bd2c:	4897      	ldr	r0, [pc, #604]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bd2e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bd30:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bd34:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bd36:	2d00      	cmp	r5, #0
9000bd38:	f43f adc9 	beq.w	9000b8ce <HAL_RCCEx_PeriphCLKConfig+0x61a>
9000bd3c:	462e      	mov	r6, r5
9000bd3e:	e5cd      	b.n	9000b8dc <HAL_RCCEx_PeriphCLKConfig+0x628>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd40:	4992      	ldr	r1, [pc, #584]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bd42:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd44:	f001 0103 	and.w	r1, r1, #3
9000bd48:	2903      	cmp	r1, #3
9000bd4a:	f43f ac0c 	beq.w	9000b566 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
9000bd4e:	2101      	movs	r1, #1
9000bd50:	f104 0008 	add.w	r0, r4, #8
9000bd54:	f7ff f9ca 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000bd58:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000bd5a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd5e:	b98d      	cbnz	r5, 9000bd84 <HAL_RCCEx_PeriphCLKConfig+0xad0>
9000bd60:	e6e4      	b.n	9000bb2c <HAL_RCCEx_PeriphCLKConfig+0x878>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd62:	488a      	ldr	r0, [pc, #552]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bd64:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000bd66:	f000 0003 	and.w	r0, r0, #3
9000bd6a:	2803      	cmp	r0, #3
9000bd6c:	f43f ad7f 	beq.w	9000b86e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000bd70:	f104 0008 	add.w	r0, r4, #8
9000bd74:	f7ff f9ba 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000bd78:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000bd7a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd7e:	2d00      	cmp	r5, #0
9000bd80:	d13f      	bne.n	9000be02 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
9000bd82:	e6ed      	b.n	9000bb60 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
9000bd84:	462e      	mov	r6, r5
9000bd86:	f7ff bbf0 	b.w	9000b56a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000bd8a:	462e      	mov	r6, r5
9000bd8c:	e583      	b.n	9000b896 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
9000bd8e:	462e      	mov	r6, r5
9000bd90:	f7ff bb65 	b.w	9000b45e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000bd94:	4f7d      	ldr	r7, [pc, #500]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bd96:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000bd98:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000bd9a:	f021 0103 	bic.w	r1, r1, #3
9000bd9e:	4301      	orrs	r1, r0
9000bda0:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000bda2:	e443      	b.n	9000b62c <HAL_RCCEx_PeriphCLKConfig+0x378>
9000bda4:	462e      	mov	r6, r5
9000bda6:	f7ff bae9 	b.w	9000b37c <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000bdaa:	462e      	mov	r6, r5
9000bdac:	f7ff bb11 	b.w	9000b3d2 <HAL_RCCEx_PeriphCLKConfig+0x11e>
9000bdb0:	462e      	mov	r6, r5
9000bdb2:	f7ff bb39 	b.w	9000b428 <HAL_RCCEx_PeriphCLKConfig+0x174>
9000bdb6:	462e      	mov	r6, r5
9000bdb8:	f7ff bb7a 	b.w	9000b4b0 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000bdbc:	4605      	mov	r5, r0
9000bdbe:	e625      	b.n	9000ba0c <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000bdc0:	4605      	mov	r5, r0
9000bdc2:	e635      	b.n	9000ba30 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000bdc4:	4605      	mov	r5, r0
9000bdc6:	e5fd      	b.n	9000b9c4 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000bdc8:	4605      	mov	r5, r0
9000bdca:	e60d      	b.n	9000b9e8 <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000bdcc:	4f6f      	ldr	r7, [pc, #444]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bdce:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000bdd0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bdd2:	f021 0107 	bic.w	r1, r1, #7
9000bdd6:	4301      	orrs	r1, r0
9000bdd8:	6579      	str	r1, [r7, #84]	@ 0x54
9000bdda:	e47d      	b.n	9000b6d8 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000bddc:	462e      	mov	r6, r5
9000bdde:	f7ff bb8e 	b.w	9000b4fe <HAL_RCCEx_PeriphCLKConfig+0x24a>
9000bde2:	462e      	mov	r6, r5
9000bde4:	f7ff bbb1 	b.w	9000b54a <HAL_RCCEx_PeriphCLKConfig+0x296>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000bde8:	4f68      	ldr	r7, [pc, #416]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bdea:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000bdee:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bdf0:	f021 0107 	bic.w	r1, r1, #7
9000bdf4:	4301      	orrs	r1, r0
9000bdf6:	65b9      	str	r1, [r7, #88]	@ 0x58
9000bdf8:	e493      	b.n	9000b722 <HAL_RCCEx_PeriphCLKConfig+0x46e>
9000bdfa:	462e      	mov	r6, r5
9000bdfc:	e4ba      	b.n	9000b774 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
9000bdfe:	462e      	mov	r6, r5
9000be00:	e50a      	b.n	9000b818 <HAL_RCCEx_PeriphCLKConfig+0x564>
9000be02:	462e      	mov	r6, r5
9000be04:	e535      	b.n	9000b872 <HAL_RCCEx_PeriphCLKConfig+0x5be>
9000be06:	462e      	mov	r6, r5
9000be08:	e4dd      	b.n	9000b7c6 <HAL_RCCEx_PeriphCLKConfig+0x512>
9000be0a:	462e      	mov	r6, r5
9000be0c:	e443      	b.n	9000b696 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be0e:	495f      	ldr	r1, [pc, #380]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000be10:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be12:	f001 0103 	and.w	r1, r1, #3
9000be16:	2903      	cmp	r1, #3
9000be18:	f43f ae2b 	beq.w	9000ba72 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000be1c:	2102      	movs	r1, #2
9000be1e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be22:	f7ff f9d5 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000be26:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000be28:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be2c:	2d00      	cmp	r5, #0
9000be2e:	d1e4      	bne.n	9000bdfa <HAL_RCCEx_PeriphCLKConfig+0xb46>
9000be30:	e498      	b.n	9000b764 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be32:	4956      	ldr	r1, [pc, #344]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000be34:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be36:	f001 0103 	and.w	r1, r1, #3
9000be3a:	2903      	cmp	r1, #3
9000be3c:	f43f abc7 	beq.w	9000b5ce <HAL_RCCEx_PeriphCLKConfig+0x31a>
9000be40:	2102      	movs	r1, #2
9000be42:	f104 0008 	add.w	r0, r4, #8
9000be46:	f7ff f951 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000be4a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000be4c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be50:	2d00      	cmp	r5, #0
9000be52:	d19c      	bne.n	9000bd8e <HAL_RCCEx_PeriphCLKConfig+0xada>
9000be54:	f7ff bafc 	b.w	9000b450 <HAL_RCCEx_PeriphCLKConfig+0x19c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be58:	494c      	ldr	r1, [pc, #304]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000be5a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be5c:	f001 0103 	and.w	r1, r1, #3
9000be60:	2903      	cmp	r1, #3
9000be62:	f43f ad16 	beq.w	9000b892 <HAL_RCCEx_PeriphCLKConfig+0x5de>
9000be66:	2101      	movs	r1, #1
9000be68:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be6c:	f7ff f9b0 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000be70:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000be72:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be76:	2d00      	cmp	r5, #0
9000be78:	d187      	bne.n	9000bd8a <HAL_RCCEx_PeriphCLKConfig+0xad6>
9000be7a:	e646      	b.n	9000bb0a <HAL_RCCEx_PeriphCLKConfig+0x856>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be7c:	4943      	ldr	r1, [pc, #268]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000be7e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be80:	f001 0103 	and.w	r1, r1, #3
9000be84:	2903      	cmp	r1, #3
9000be86:	f43f ae0e 	beq.w	9000baa6 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000be8a:	2102      	movs	r1, #2
9000be8c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be90:	f7ff f99e 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000be94:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000be96:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be9a:	2d00      	cmp	r5, #0
9000be9c:	d1af      	bne.n	9000bdfe <HAL_RCCEx_PeriphCLKConfig+0xb4a>
9000be9e:	e4b3      	b.n	9000b808 <HAL_RCCEx_PeriphCLKConfig+0x554>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bea0:	493a      	ldr	r1, [pc, #232]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bea2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bea4:	f001 0103 	and.w	r1, r1, #3
9000bea8:	2903      	cmp	r1, #3
9000beaa:	f000 8131 	beq.w	9000c110 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000beae:	2102      	movs	r1, #2
9000beb0:	f104 0008 	add.w	r0, r4, #8
9000beb4:	f7ff f91a 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000beb8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000beba:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bebe:	2d00      	cmp	r5, #0
9000bec0:	f47f abb3 	bne.w	9000b62a <HAL_RCCEx_PeriphCLKConfig+0x376>
9000bec4:	e766      	b.n	9000bd94 <HAL_RCCEx_PeriphCLKConfig+0xae0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bec6:	4931      	ldr	r1, [pc, #196]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bec8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000beca:	f001 0103 	and.w	r1, r1, #3
9000bece:	2903      	cmp	r1, #3
9000bed0:	f43f addc 	beq.w	9000ba8c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000bed4:	2102      	movs	r1, #2
9000bed6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000beda:	f7ff f979 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000bede:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bee0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bee4:	2d00      	cmp	r5, #0
9000bee6:	d18e      	bne.n	9000be06 <HAL_RCCEx_PeriphCLKConfig+0xb52>
9000bee8:	e465      	b.n	9000b7b6 <HAL_RCCEx_PeriphCLKConfig+0x502>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000beea:	4928      	ldr	r1, [pc, #160]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000beec:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000beee:	f001 0103 	and.w	r1, r1, #3
9000bef2:	2903      	cmp	r1, #3
9000bef4:	f43f ab83 	beq.w	9000b5fe <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000bef8:	2101      	movs	r1, #1
9000befa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000befe:	f7ff f967 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000bf02:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bf04:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf08:	2d00      	cmp	r5, #0
9000bf0a:	f47f af67 	bne.w	9000bddc <HAL_RCCEx_PeriphCLKConfig+0xb28>
9000bf0e:	f7ff baef 	b.w	9000b4f0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf12:	491e      	ldr	r1, [pc, #120]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bf14:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf16:	f001 0103 	and.w	r1, r1, #3
9000bf1a:	2903      	cmp	r1, #3
9000bf1c:	f43f ab7a 	beq.w	9000b614 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000bf20:	2101      	movs	r1, #1
9000bf22:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf26:	f7ff f953 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000bf2a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000bf2c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf30:	2d00      	cmp	r5, #0
9000bf32:	f47f af56 	bne.w	9000bde2 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
9000bf36:	f7ff bb00 	b.w	9000b53a <HAL_RCCEx_PeriphCLKConfig+0x286>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf3a:	4914      	ldr	r1, [pc, #80]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bf3c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf3e:	f001 0103 	and.w	r1, r1, #3
9000bf42:	2903      	cmp	r1, #3
9000bf44:	f43f ab3d 	beq.w	9000b5c2 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000bf48:	2100      	movs	r1, #0
9000bf4a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf4e:	f7ff f93f 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000bf52:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bf54:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf58:	2d00      	cmp	r5, #0
9000bf5a:	f47f af29 	bne.w	9000bdb0 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000bf5e:	f7ff ba5b 	b.w	9000b418 <HAL_RCCEx_PeriphCLKConfig+0x164>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf62:	490a      	ldr	r1, [pc, #40]	@ (9000bf8c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000bf64:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf66:	f001 0103 	and.w	r1, r1, #3
9000bf6a:	2903      	cmp	r1, #3
9000bf6c:	f43f ab3a 	beq.w	9000b5e4 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000bf70:	2100      	movs	r1, #0
9000bf72:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf76:	f7ff f92b 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000bf7a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bf7c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf80:	2d00      	cmp	r5, #0
9000bf82:	f47f af18 	bne.w	9000bdb6 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000bf86:	f7ff ba8c 	b.w	9000b4a2 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
9000bf8a:	bf00      	nop
9000bf8c:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf90:	4973      	ldr	r1, [pc, #460]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000bf92:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf94:	f001 0103 	and.w	r1, r1, #3
9000bf98:	2903      	cmp	r1, #3
9000bf9a:	f43f ae07 	beq.w	9000bbac <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000bf9e:	2102      	movs	r1, #2
9000bfa0:	3028      	adds	r0, #40	@ 0x28
9000bfa2:	f7ff f915 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000bfa6:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000bfa8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfac:	2e00      	cmp	r6, #0
9000bfae:	f47f a9b0 	bne.w	9000b312 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000bfb2:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000bfb4:	f7ff b9a6 	b.w	9000b304 <HAL_RCCEx_PeriphCLKConfig+0x50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bfb8:	4969      	ldr	r1, [pc, #420]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000bfba:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bfbc:	f001 0103 	and.w	r1, r1, #3
9000bfc0:	2903      	cmp	r1, #3
9000bfc2:	f43f a9b2 	beq.w	9000b32a <HAL_RCCEx_PeriphCLKConfig+0x76>
9000bfc6:	2100      	movs	r1, #0
9000bfc8:	f104 0008 	add.w	r0, r4, #8
9000bfcc:	f7ff f88e 	bl	9000b0ec <RCCEx_PLL2_Config.part.0>
9000bfd0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bfd2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfd6:	2d00      	cmp	r5, #0
9000bfd8:	f43f ae53 	beq.w	9000bc82 <HAL_RCCEx_PeriphCLKConfig+0x9ce>
9000bfdc:	462e      	mov	r6, r5
9000bfde:	f7ff b9a6 	b.w	9000b32e <HAL_RCCEx_PeriphCLKConfig+0x7a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bfe2:	495f      	ldr	r1, [pc, #380]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000bfe4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bfe6:	f001 0103 	and.w	r1, r1, #3
9000bfea:	2903      	cmp	r1, #3
9000bfec:	f43f a99d 	beq.w	9000b32a <HAL_RCCEx_PeriphCLKConfig+0x76>
9000bff0:	2100      	movs	r1, #0
9000bff2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bff6:	f7ff f8eb 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000bffa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bffc:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c000:	e63c      	b.n	9000bc7c <HAL_RCCEx_PeriphCLKConfig+0x9c8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c002:	4957      	ldr	r1, [pc, #348]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c004:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c006:	f001 0103 	and.w	r1, r1, #3
9000c00a:	2903      	cmp	r1, #3
9000c00c:	f43f aac0 	beq.w	9000b590 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000c010:	2100      	movs	r1, #0
9000c012:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c016:	f7ff f8db 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000c01a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c01c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c020:	2d00      	cmp	r5, #0
9000c022:	f47f aebf 	bne.w	9000bda4 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000c026:	f7ff b9a2 	b.w	9000b36e <HAL_RCCEx_PeriphCLKConfig+0xba>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c02a:	494d      	ldr	r1, [pc, #308]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c02c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c02e:	f001 0103 	and.w	r1, r1, #3
9000c032:	2903      	cmp	r1, #3
9000c034:	f43f aaba 	beq.w	9000b5ac <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000c038:	2100      	movs	r1, #0
9000c03a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c03e:	f7ff f8c7 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000c042:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c044:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c048:	2d00      	cmp	r5, #0
9000c04a:	f47f aeae 	bne.w	9000bdaa <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000c04e:	f7ff b9b8 	b.w	9000b3c2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c052:	4943      	ldr	r1, [pc, #268]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c054:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c056:	f001 0103 	and.w	r1, r1, #3
9000c05a:	2903      	cmp	r1, #3
9000c05c:	d041      	beq.n	9000c0e2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000c05e:	2101      	movs	r1, #1
9000c060:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c064:	f7ff f8b4 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000c068:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c06a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c06e:	2d00      	cmp	r5, #0
9000c070:	f47f ab56 	bne.w	9000b720 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000c074:	e6b8      	b.n	9000bde8 <HAL_RCCEx_PeriphCLKConfig+0xb34>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c076:	493a      	ldr	r1, [pc, #232]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c078:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c07a:	f001 0103 	and.w	r1, r1, #3
9000c07e:	2903      	cmp	r1, #3
9000c080:	d02b      	beq.n	9000c0da <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000c082:	2101      	movs	r1, #1
9000c084:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c088:	f7ff f8a2 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000c08c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c08e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c092:	2d00      	cmp	r5, #0
9000c094:	f47f ab1f 	bne.w	9000b6d6 <HAL_RCCEx_PeriphCLKConfig+0x422>
9000c098:	e698      	b.n	9000bdcc <HAL_RCCEx_PeriphCLKConfig+0xb18>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c09a:	4931      	ldr	r1, [pc, #196]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c09c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c09e:	f001 0103 	and.w	r1, r1, #3
9000c0a2:	2903      	cmp	r1, #3
9000c0a4:	f43f aaf5 	beq.w	9000b692 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000c0a8:	2101      	movs	r1, #1
9000c0aa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c0ae:	f7ff f88f 	bl	9000b1d0 <RCCEx_PLL3_Config.part.0>
9000c0b2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c0b4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c0b8:	2d00      	cmp	r5, #0
9000c0ba:	f47f aea6 	bne.w	9000be0a <HAL_RCCEx_PeriphCLKConfig+0xb56>
9000c0be:	e56d      	b.n	9000bb9c <HAL_RCCEx_PeriphCLKConfig+0x8e8>
        ret = HAL_TIMEOUT;
9000c0c0:	2503      	movs	r5, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c0c2:	462e      	mov	r6, r5
9000c0c4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c0c8:	f7ff bab3 	b.w	9000b632 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c0cc:	4d24      	ldr	r5, [pc, #144]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c0ce:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000c0d0:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000c0d4:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c0d6:	f7ff b915 	b.w	9000b304 <HAL_RCCEx_PeriphCLKConfig+0x50>
9000c0da:	2601      	movs	r6, #1
9000c0dc:	4635      	mov	r5, r6
9000c0de:	f7ff bafb 	b.w	9000b6d8 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000c0e2:	2601      	movs	r6, #1
9000c0e4:	4635      	mov	r5, r6
9000c0e6:	f7ff bb1c 	b.w	9000b722 <HAL_RCCEx_PeriphCLKConfig+0x46e>
        status = HAL_ERROR;
9000c0ea:	2601      	movs	r6, #1
9000c0ec:	f7ff bb9c 	b.w	9000b828 <HAL_RCCEx_PeriphCLKConfig+0x574>
        status = HAL_ERROR;
9000c0f0:	2601      	movs	r6, #1
9000c0f2:	f7ff bba7 	b.w	9000b844 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c0f6:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000c0fa:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c0fc:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c100:	f7ff bba0 	b.w	9000b844 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c104:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c108:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c10c:	f7ff bb8c 	b.w	9000b828 <HAL_RCCEx_PeriphCLKConfig+0x574>
9000c110:	2601      	movs	r6, #1
9000c112:	4635      	mov	r5, r6
9000c114:	f7ff ba8a 	b.w	9000b62c <HAL_RCCEx_PeriphCLKConfig+0x378>
        tickstart = HAL_GetTick();
9000c118:	f7fa fff0 	bl	900070fc <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c11c:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>
        tickstart = HAL_GetTick();
9000c120:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c122:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c126:	e004      	b.n	9000c132 <HAL_RCCEx_PeriphCLKConfig+0xe7e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c128:	f7fa ffe8 	bl	900070fc <HAL_GetTick>
9000c12c:	1bc0      	subs	r0, r0, r7
9000c12e:	4548      	cmp	r0, r9
9000c130:	d810      	bhi.n	9000c154 <HAL_RCCEx_PeriphCLKConfig+0xea0>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c132:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000c136:	079b      	lsls	r3, r3, #30
9000c138:	d5f6      	bpl.n	9000c128 <HAL_RCCEx_PeriphCLKConfig+0xe74>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c13a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000c13e:	e566      	b.n	9000bc0e <HAL_RCCEx_PeriphCLKConfig+0x95a>
9000c140:	4807      	ldr	r0, [pc, #28]	@ (9000c160 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c142:	4a08      	ldr	r2, [pc, #32]	@ (9000c164 <HAL_RCCEx_PeriphCLKConfig+0xeb0>)
9000c144:	6901      	ldr	r1, [r0, #16]
9000c146:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c14a:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000c14e:	430a      	orrs	r2, r1
9000c150:	6102      	str	r2, [r0, #16]
9000c152:	e567      	b.n	9000bc24 <HAL_RCCEx_PeriphCLKConfig+0x970>
        status = ret;
9000c154:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c156:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c15a:	4635      	mov	r5, r6
9000c15c:	f7ff ba69 	b.w	9000b632 <HAL_RCCEx_PeriphCLKConfig+0x37e>
9000c160:	58024400 	.word	0x58024400
9000c164:	00ffffcf 	.word	0x00ffffcf

9000c168 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c168:	b318      	cbz	r0, 9000c1b2 <HAL_SDRAM_Init+0x4a>
{
9000c16a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c16c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000c170:	4604      	mov	r4, r0
9000c172:	460d      	mov	r5, r1
9000c174:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c178:	b1b3      	cbz	r3, 9000c1a8 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c17a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c17c:	2302      	movs	r3, #2
9000c17e:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c182:	f851 0b04 	ldr.w	r0, [r1], #4
9000c186:	f000 fa13 	bl	9000c5b0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c18a:	6862      	ldr	r2, [r4, #4]
9000c18c:	4629      	mov	r1, r5
9000c18e:	6820      	ldr	r0, [r4, #0]
9000c190:	f000 fa46 	bl	9000c620 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c194:	4a08      	ldr	r2, [pc, #32]	@ (9000c1b8 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c196:	2101      	movs	r1, #1

  return HAL_OK;
9000c198:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c19a:	6813      	ldr	r3, [r2, #0]
9000c19c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000c1a0:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c1a2:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000c1a6:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c1a8:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c1ac:	f7f7 ff40 	bl	90004030 <HAL_SDRAM_MspInit>
9000c1b0:	e7e3      	b.n	9000c17a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c1b2:	2001      	movs	r0, #1
}
9000c1b4:	4770      	bx	lr
9000c1b6:	bf00      	nop
9000c1b8:	52004000 	.word	0x52004000

9000c1bc <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c1bc:	b510      	push	{r4, lr}
9000c1be:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c1c0:	f7f7 ffb2 	bl	90004128 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c1c4:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c1c8:	f000 fa68 	bl	9000c69c <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c1cc:	2000      	movs	r0, #0
9000c1ce:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c1d2:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000c1d6:	bd10      	pop	{r4, pc}

9000c1d8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c1d8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c1da:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c1de:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c1e0:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c1e2:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c1e4:	d004      	beq.n	9000c1f0 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c1e6:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000c1ea:	2c01      	cmp	r4, #1
9000c1ec:	d001      	beq.n	9000c1f2 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c1ee:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c1f0:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c1f2:	2302      	movs	r3, #2
9000c1f4:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c1f6:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c1f8:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c1fc:	f000 fa62 	bl	9000c6c4 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c200:	6833      	ldr	r3, [r6, #0]
9000c202:	2b02      	cmp	r3, #2
9000c204:	d003      	beq.n	9000c20e <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c206:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000c20a:	2000      	movs	r0, #0
}
9000c20c:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c20e:	2305      	movs	r3, #5
9000c210:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000c214:	e7f9      	b.n	9000c20a <HAL_SDRAM_SendCommand+0x32>
9000c216:	bf00      	nop

9000c218 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c218:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c21a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c21e:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c220:	2b02      	cmp	r3, #2
9000c222:	b2d8      	uxtb	r0, r3
9000c224:	d005      	beq.n	9000c232 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c226:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000c22a:	2b01      	cmp	r3, #1
9000c22c:	b2dd      	uxtb	r5, r3
9000c22e:	d001      	beq.n	9000c234 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c230:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c232:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c234:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c236:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c238:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c23c:	f000 fa5a 	bl	9000c6f4 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c240:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c242:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000c246:	bd38      	pop	{r3, r4, r5, pc}

9000c248 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000c248:	4770      	bx	lr
9000c24a:	bf00      	nop

9000c24c <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000c24c:	2800      	cmp	r0, #0
9000c24e:	f000 8094 	beq.w	9000c37a <HAL_TIM_Base_Init+0x12e>
{
9000c252:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000c254:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c258:	4604      	mov	r4, r0
9000c25a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c25e:	2b00      	cmp	r3, #0
9000c260:	d07b      	beq.n	9000c35a <HAL_TIM_Base_Init+0x10e>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c262:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c264:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c266:	4946      	ldr	r1, [pc, #280]	@ (9000c380 <HAL_TIM_Base_Init+0x134>)
9000c268:	4846      	ldr	r0, [pc, #280]	@ (9000c384 <HAL_TIM_Base_Init+0x138>)
9000c26a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000c26e:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000c272:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c276:	eba3 0e00 	sub.w	lr, r3, r0
  tmpcr1 = TIMx->CR1;
9000c27a:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c27c:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c280:	69a7      	ldr	r7, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c282:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c286:	6865      	ldr	r5, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c288:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c28c:	68e6      	ldr	r6, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c28e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000c292:	d020      	beq.n	9000c2d6 <HAL_TIM_Base_Init+0x8a>
9000c294:	b9f9      	cbnz	r1, 9000c2d6 <HAL_TIM_Base_Init+0x8a>
9000c296:	f8df c0fc 	ldr.w	ip, [pc, #252]	@ 9000c394 <HAL_TIM_Base_Init+0x148>
9000c29a:	4563      	cmp	r3, ip
9000c29c:	d01b      	beq.n	9000c2d6 <HAL_TIM_Base_Init+0x8a>
9000c29e:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c2a2:	4563      	cmp	r3, ip
9000c2a4:	d017      	beq.n	9000c2d6 <HAL_TIM_Base_Init+0x8a>
9000c2a6:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c2aa:	4563      	cmp	r3, ip
9000c2ac:	d013      	beq.n	9000c2d6 <HAL_TIM_Base_Init+0x8a>
9000c2ae:	f1be 0f00 	cmp.w	lr, #0
9000c2b2:	d110      	bne.n	9000c2d6 <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c2b4:	4834      	ldr	r0, [pc, #208]	@ (9000c388 <HAL_TIM_Base_Init+0x13c>)
9000c2b6:	4935      	ldr	r1, [pc, #212]	@ (9000c38c <HAL_TIM_Base_Init+0x140>)
9000c2b8:	428b      	cmp	r3, r1
9000c2ba:	bf18      	it	ne
9000c2bc:	4283      	cmpne	r3, r0
9000c2be:	d051      	beq.n	9000c364 <HAL_TIM_Base_Init+0x118>
9000c2c0:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000c2c4:	428b      	cmp	r3, r1
9000c2c6:	d04d      	beq.n	9000c364 <HAL_TIM_Base_Init+0x118>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c2c8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c2cc:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000c2ce:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c2d0:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c2d2:	629d      	str	r5, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c2d4:	e01d      	b.n	9000c312 <HAL_TIM_Base_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
9000c2d6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c2d8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000c2dc:	4302      	orrs	r2, r0
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c2de:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c2e0:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c2e4:	4302      	orrs	r2, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c2e6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c2ea:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000c2ec:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c2ee:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c2f0:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c2f2:	b961      	cbnz	r1, 9000c30e <HAL_TIM_Base_Init+0xc2>
9000c2f4:	f1be 0f00 	cmp.w	lr, #0
9000c2f8:	d109      	bne.n	9000c30e <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c2fa:	4925      	ldr	r1, [pc, #148]	@ (9000c390 <HAL_TIM_Base_Init+0x144>)
9000c2fc:	4a22      	ldr	r2, [pc, #136]	@ (9000c388 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c2fe:	4293      	cmp	r3, r2
9000c300:	bf18      	it	ne
9000c302:	428b      	cmpne	r3, r1
9000c304:	d003      	beq.n	9000c30e <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c306:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c30a:	4293      	cmp	r3, r2
9000c30c:	d101      	bne.n	9000c312 <HAL_TIM_Base_Init+0xc6>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c30e:	6962      	ldr	r2, [r4, #20]
9000c310:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c312:	2201      	movs	r2, #1
9000c314:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
9000c316:	691a      	ldr	r2, [r3, #16]
9000c318:	07d2      	lsls	r2, r2, #31
9000c31a:	d503      	bpl.n	9000c324 <HAL_TIM_Base_Init+0xd8>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
9000c31c:	691a      	ldr	r2, [r3, #16]
9000c31e:	f022 0201 	bic.w	r2, r2, #1
9000c322:	611a      	str	r2, [r3, #16]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c324:	2301      	movs	r3, #1
  return HAL_OK;
9000c326:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c328:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c32c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9000c330:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
9000c334:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000c338:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
9000c33c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000c340:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c344:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000c348:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000c34c:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9000c350:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c354:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
9000c358:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
9000c35a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c35e:	f7ff ff73 	bl	9000c248 <HAL_TIM_Base_MspInit>
9000c362:	e77e      	b.n	9000c262 <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c364:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c366:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c36a:	430a      	orrs	r2, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c36c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c370:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000c372:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c374:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c376:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c378:	e7bf      	b.n	9000c2fa <HAL_TIM_Base_Init+0xae>
    return HAL_ERROR;
9000c37a:	2001      	movs	r0, #1
}
9000c37c:	4770      	bx	lr
9000c37e:	bf00      	nop
9000c380:	40010000 	.word	0x40010000
9000c384:	40010400 	.word	0x40010400
9000c388:	40014000 	.word	0x40014000
9000c38c:	40014400 	.word	0x40014400
9000c390:	40014800 	.word	0x40014800
9000c394:	40000400 	.word	0x40000400

9000c398 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000c398:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c39c:	2b01      	cmp	r3, #1
9000c39e:	d13d      	bne.n	9000c41c <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c3a0:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c3a2:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c3a4:	4b1e      	ldr	r3, [pc, #120]	@ (9000c420 <HAL_TIM_Base_Start_IT+0x88>)
9000c3a6:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000c3aa:	bf18      	it	ne
9000c3ac:	429a      	cmpne	r2, r3
{
9000c3ae:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c3b0:	bf0c      	ite	eq
9000c3b2:	2301      	moveq	r3, #1
9000c3b4:	2300      	movne	r3, #0
9000c3b6:	4d1b      	ldr	r5, [pc, #108]	@ (9000c424 <HAL_TIM_Base_Start_IT+0x8c>)
9000c3b8:	4c1b      	ldr	r4, [pc, #108]	@ (9000c428 <HAL_TIM_Base_Start_IT+0x90>)
9000c3ba:	42aa      	cmp	r2, r5
9000c3bc:	bf08      	it	eq
9000c3be:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000c3c2:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c3c6:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c3c8:	42a2      	cmp	r2, r4
9000c3ca:	bf08      	it	eq
9000c3cc:	f043 0301 	orreq.w	r3, r3, #1
9000c3d0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c3d4:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c3d8:	4814      	ldr	r0, [pc, #80]	@ (9000c42c <HAL_TIM_Base_Start_IT+0x94>)
9000c3da:	42a2      	cmp	r2, r4
9000c3dc:	bf08      	it	eq
9000c3de:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c3e2:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c3e4:	4282      	cmp	r2, r0
9000c3e6:	bf08      	it	eq
9000c3e8:	f043 0301 	orreq.w	r3, r3, #1
9000c3ec:	4910      	ldr	r1, [pc, #64]	@ (9000c430 <HAL_TIM_Base_Start_IT+0x98>)
9000c3ee:	428a      	cmp	r2, r1
9000c3f0:	bf08      	it	eq
9000c3f2:	f043 0301 	orreq.w	r3, r3, #1
9000c3f6:	b913      	cbnz	r3, 9000c3fe <HAL_TIM_Base_Start_IT+0x66>
9000c3f8:	4b0e      	ldr	r3, [pc, #56]	@ (9000c434 <HAL_TIM_Base_Start_IT+0x9c>)
9000c3fa:	429a      	cmp	r2, r3
9000c3fc:	d107      	bne.n	9000c40e <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000c3fe:	6891      	ldr	r1, [r2, #8]
9000c400:	4b0d      	ldr	r3, [pc, #52]	@ (9000c438 <HAL_TIM_Base_Start_IT+0xa0>)
9000c402:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000c404:	2b06      	cmp	r3, #6
9000c406:	d006      	beq.n	9000c416 <HAL_TIM_Base_Start_IT+0x7e>
9000c408:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000c40c:	d003      	beq.n	9000c416 <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000c40e:	6813      	ldr	r3, [r2, #0]
9000c410:	f043 0301 	orr.w	r3, r3, #1
9000c414:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000c416:	2000      	movs	r0, #0
}
9000c418:	bc30      	pop	{r4, r5}
9000c41a:	4770      	bx	lr
    return HAL_ERROR;
9000c41c:	2001      	movs	r0, #1
}
9000c41e:	4770      	bx	lr
9000c420:	40010000 	.word	0x40010000
9000c424:	40000400 	.word	0x40000400
9000c428:	40000800 	.word	0x40000800
9000c42c:	40010400 	.word	0x40010400
9000c430:	40001800 	.word	0x40001800
9000c434:	40014000 	.word	0x40014000
9000c438:	00010007 	.word	0x00010007

9000c43c <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000c43c:	4770      	bx	lr
9000c43e:	bf00      	nop

9000c440 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000c440:	4770      	bx	lr
9000c442:	bf00      	nop

9000c444 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000c444:	4770      	bx	lr
9000c446:	bf00      	nop

9000c448 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000c448:	4770      	bx	lr
9000c44a:	bf00      	nop

9000c44c <HAL_TIM_IRQHandler>:
{
9000c44c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t itsource = htim->Instance->DIER;
9000c44e:	6803      	ldr	r3, [r0, #0]
{
9000c450:	4605      	mov	r5, r0
  uint32_t itsource = htim->Instance->DIER;
9000c452:	68de      	ldr	r6, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
9000c454:	691c      	ldr	r4, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000c456:	07a1      	lsls	r1, r4, #30
9000c458:	d501      	bpl.n	9000c45e <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000c45a:	07b2      	lsls	r2, r6, #30
9000c45c:	d457      	bmi.n	9000c50e <HAL_TIM_IRQHandler+0xc2>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000c45e:	0767      	lsls	r7, r4, #29
9000c460:	d501      	bpl.n	9000c466 <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000c462:	0770      	lsls	r0, r6, #29
9000c464:	d440      	bmi.n	9000c4e8 <HAL_TIM_IRQHandler+0x9c>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000c466:	0721      	lsls	r1, r4, #28
9000c468:	d501      	bpl.n	9000c46e <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000c46a:	0732      	lsls	r2, r6, #28
9000c46c:	d42a      	bmi.n	9000c4c4 <HAL_TIM_IRQHandler+0x78>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000c46e:	06e7      	lsls	r7, r4, #27
9000c470:	d501      	bpl.n	9000c476 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000c472:	06f0      	lsls	r0, r6, #27
9000c474:	d413      	bmi.n	9000c49e <HAL_TIM_IRQHandler+0x52>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000c476:	07e1      	lsls	r1, r4, #31
9000c478:	d501      	bpl.n	9000c47e <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000c47a:	07f2      	lsls	r2, r6, #31
9000c47c:	d465      	bmi.n	9000c54a <HAL_TIM_IRQHandler+0xfe>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000c47e:	f414 5f02 	tst.w	r4, #8320	@ 0x2080
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c482:	f404 7780 	and.w	r7, r4, #256	@ 0x100
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000c486:	d052      	beq.n	9000c52e <HAL_TIM_IRQHandler+0xe2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c488:	0633      	lsls	r3, r6, #24
9000c48a:	d466      	bmi.n	9000c55a <HAL_TIM_IRQHandler+0x10e>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000c48c:	0660      	lsls	r0, r4, #25
9000c48e:	d501      	bpl.n	9000c494 <HAL_TIM_IRQHandler+0x48>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000c490:	0671      	lsls	r1, r6, #25
9000c492:	d473      	bmi.n	9000c57c <HAL_TIM_IRQHandler+0x130>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000c494:	06a2      	lsls	r2, r4, #26
9000c496:	d501      	bpl.n	9000c49c <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000c498:	06b3      	lsls	r3, r6, #26
9000c49a:	d44d      	bmi.n	9000c538 <HAL_TIM_IRQHandler+0xec>
}
9000c49c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c49e:	682b      	ldr	r3, [r5, #0]
9000c4a0:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000c4a4:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c4a6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000c4a8:	2208      	movs	r2, #8
9000c4aa:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000c4ac:	69db      	ldr	r3, [r3, #28]
9000c4ae:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c4b2:	d174      	bne.n	9000c59e <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c4b4:	f7ff ffc2 	bl	9000c43c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c4b8:	4628      	mov	r0, r5
9000c4ba:	f7ff ffc3 	bl	9000c444 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c4be:	2300      	movs	r3, #0
9000c4c0:	772b      	strb	r3, [r5, #28]
9000c4c2:	e7d8      	b.n	9000c476 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c4c4:	682b      	ldr	r3, [r5, #0]
9000c4c6:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000c4ca:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c4cc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000c4ce:	2204      	movs	r2, #4
9000c4d0:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000c4d2:	69db      	ldr	r3, [r3, #28]
9000c4d4:	079b      	lsls	r3, r3, #30
9000c4d6:	d15f      	bne.n	9000c598 <HAL_TIM_IRQHandler+0x14c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c4d8:	f7ff ffb0 	bl	9000c43c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c4dc:	4628      	mov	r0, r5
9000c4de:	f7ff ffb1 	bl	9000c444 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c4e2:	2300      	movs	r3, #0
9000c4e4:	772b      	strb	r3, [r5, #28]
9000c4e6:	e7c2      	b.n	9000c46e <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c4e8:	682b      	ldr	r3, [r5, #0]
9000c4ea:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000c4ee:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c4f0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000c4f2:	2202      	movs	r2, #2
9000c4f4:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000c4f6:	699b      	ldr	r3, [r3, #24]
9000c4f8:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c4fc:	d149      	bne.n	9000c592 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c4fe:	f7ff ff9d 	bl	9000c43c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c502:	4628      	mov	r0, r5
9000c504:	f7ff ff9e 	bl	9000c444 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c508:	2300      	movs	r3, #0
9000c50a:	772b      	strb	r3, [r5, #28]
9000c50c:	e7ab      	b.n	9000c466 <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000c50e:	f06f 0202 	mvn.w	r2, #2
9000c512:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000c514:	2201      	movs	r2, #1
9000c516:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000c518:	699b      	ldr	r3, [r3, #24]
9000c51a:	079b      	lsls	r3, r3, #30
9000c51c:	d136      	bne.n	9000c58c <HAL_TIM_IRQHandler+0x140>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000c51e:	f7ff ff8d 	bl	9000c43c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c522:	4628      	mov	r0, r5
9000c524:	f7ff ff8e 	bl	9000c444 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c528:	2300      	movs	r3, #0
9000c52a:	772b      	strb	r3, [r5, #28]
9000c52c:	e797      	b.n	9000c45e <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c52e:	2f00      	cmp	r7, #0
9000c530:	d0ac      	beq.n	9000c48c <HAL_TIM_IRQHandler+0x40>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c532:	0637      	lsls	r7, r6, #24
9000c534:	d41a      	bmi.n	9000c56c <HAL_TIM_IRQHandler+0x120>
9000c536:	e7a9      	b.n	9000c48c <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c538:	682b      	ldr	r3, [r5, #0]
9000c53a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000c53e:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c540:	611a      	str	r2, [r3, #16]
}
9000c542:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
      HAL_TIMEx_CommutCallback(htim);
9000c546:	f000 b82d 	b.w	9000c5a4 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c54a:	682b      	ldr	r3, [r5, #0]
9000c54c:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000c550:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c552:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000c554:	f7f7 fbd0 	bl	90003cf8 <HAL_TIM_PeriodElapsedCallback>
9000c558:	e791      	b.n	9000c47e <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c55a:	682b      	ldr	r3, [r5, #0]
9000c55c:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000c560:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c562:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000c564:	f000 f820 	bl	9000c5a8 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c568:	2f00      	cmp	r7, #0
9000c56a:	d08f      	beq.n	9000c48c <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c56c:	682b      	ldr	r3, [r5, #0]
9000c56e:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000c572:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c574:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000c576:	f000 f819 	bl	9000c5ac <HAL_TIMEx_Break2Callback>
9000c57a:	e787      	b.n	9000c48c <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c57c:	682b      	ldr	r3, [r5, #0]
9000c57e:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000c582:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c584:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000c586:	f7ff ff5f 	bl	9000c448 <HAL_TIM_TriggerCallback>
9000c58a:	e783      	b.n	9000c494 <HAL_TIM_IRQHandler+0x48>
          HAL_TIM_IC_CaptureCallback(htim);
9000c58c:	f7ff ff58 	bl	9000c440 <HAL_TIM_IC_CaptureCallback>
9000c590:	e7ca      	b.n	9000c528 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000c592:	f7ff ff55 	bl	9000c440 <HAL_TIM_IC_CaptureCallback>
9000c596:	e7b7      	b.n	9000c508 <HAL_TIM_IRQHandler+0xbc>
        HAL_TIM_IC_CaptureCallback(htim);
9000c598:	f7ff ff52 	bl	9000c440 <HAL_TIM_IC_CaptureCallback>
9000c59c:	e7a1      	b.n	9000c4e2 <HAL_TIM_IRQHandler+0x96>
        HAL_TIM_IC_CaptureCallback(htim);
9000c59e:	f7ff ff4f 	bl	9000c440 <HAL_TIM_IC_CaptureCallback>
9000c5a2:	e78c      	b.n	9000c4be <HAL_TIM_IRQHandler+0x72>

9000c5a4 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000c5a4:	4770      	bx	lr
9000c5a6:	bf00      	nop

9000c5a8 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000c5a8:	4770      	bx	lr
9000c5aa:	bf00      	nop

9000c5ac <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000c5ac:	4770      	bx	lr
9000c5ae:	bf00      	nop

9000c5b0 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
9000c5b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000c5b4:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000c5b8:	e9d1 8200 	ldrd	r8, r2, [r1]
9000c5bc:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000c5be:	ea43 030e 	orr.w	r3, r3, lr
9000c5c2:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000c5c6:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000c5ca:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000c5cc:	f1b8 0f00 	cmp.w	r8, #0
9000c5d0:	d10f      	bne.n	9000c5f2 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000c5d2:	433b      	orrs	r3, r7
9000c5d4:	4313      	orrs	r3, r2
9000c5d6:	4a11      	ldr	r2, [pc, #68]	@ (9000c61c <FMC_SDRAM_Init+0x6c>)
9000c5d8:	ea43 030c 	orr.w	r3, r3, ip
9000c5dc:	4333      	orrs	r3, r6
9000c5de:	432b      	orrs	r3, r5
9000c5e0:	4323      	orrs	r3, r4
9000c5e2:	430b      	orrs	r3, r1
9000c5e4:	6801      	ldr	r1, [r0, #0]
9000c5e6:	400a      	ands	r2, r1
9000c5e8:	4313      	orrs	r3, r2
9000c5ea:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000c5ec:	2000      	movs	r0, #0
9000c5ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000c5f2:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000c5f6:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000c5f8:	4332      	orrs	r2, r6
9000c5fa:	432a      	orrs	r2, r5
9000c5fc:	4322      	orrs	r2, r4
9000c5fe:	4c07      	ldr	r4, [pc, #28]	@ (9000c61c <FMC_SDRAM_Init+0x6c>)
9000c600:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000c602:	6801      	ldr	r1, [r0, #0]
9000c604:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000c608:	430b      	orrs	r3, r1
9000c60a:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000c60c:	6843      	ldr	r3, [r0, #4]
9000c60e:	401c      	ands	r4, r3
9000c610:	4322      	orrs	r2, r4
9000c612:	6042      	str	r2, [r0, #4]
}
9000c614:	2000      	movs	r0, #0
9000c616:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000c61a:	bf00      	nop
9000c61c:	ffff8000 	.word	0xffff8000

9000c620 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000c620:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c622:	68cc      	ldr	r4, [r1, #12]
9000c624:	694b      	ldr	r3, [r1, #20]
9000c626:	3c01      	subs	r4, #1
9000c628:	688d      	ldr	r5, [r1, #8]
9000c62a:	698f      	ldr	r7, [r1, #24]
9000c62c:	3b01      	subs	r3, #1
9000c62e:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000c632:	684c      	ldr	r4, [r1, #4]
9000c634:	680e      	ldr	r6, [r1, #0]
9000c636:	3d01      	subs	r5, #1
9000c638:	3c01      	subs	r4, #1
9000c63a:	051b      	lsls	r3, r3, #20
9000c63c:	022d      	lsls	r5, r5, #8
9000c63e:	3e01      	subs	r6, #1
9000c640:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000c644:	690c      	ldr	r4, [r1, #16]
9000c646:	1e79      	subs	r1, r7, #1
9000c648:	3c01      	subs	r4, #1
9000c64a:	0609      	lsls	r1, r1, #24
9000c64c:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000c64e:	b972      	cbnz	r2, 9000c66e <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c650:	ea4e 0303 	orr.w	r3, lr, r3
9000c654:	6882      	ldr	r2, [r0, #8]
9000c656:	4333      	orrs	r3, r6
9000c658:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000c65c:	ea43 030c 	orr.w	r3, r3, ip
9000c660:	432b      	orrs	r3, r5
9000c662:	4323      	orrs	r3, r4
9000c664:	430b      	orrs	r3, r1
9000c666:	4313      	orrs	r3, r2
9000c668:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000c66a:	2000      	movs	r0, #0
9000c66c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c66e:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000c672:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c676:	4a08      	ldr	r2, [pc, #32]	@ (9000c698 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000c678:	4333      	orrs	r3, r6
9000c67a:	4323      	orrs	r3, r4
9000c67c:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000c67e:	6881      	ldr	r1, [r0, #8]
9000c680:	400a      	ands	r2, r1
9000c682:	ea42 020e 	orr.w	r2, r2, lr
9000c686:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000c688:	68c2      	ldr	r2, [r0, #12]
9000c68a:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000c68e:	4313      	orrs	r3, r2
9000c690:	60c3      	str	r3, [r0, #12]
}
9000c692:	2000      	movs	r0, #0
9000c694:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000c696:	bf00      	nop
9000c698:	ff0f0fff 	.word	0xff0f0fff

9000c69c <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000c69c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000c69e:	2200      	movs	r2, #0
{
9000c6a0:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000c6a2:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000c6a6:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000c6aa:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000c6ae:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000c6b2:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000c6b4:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000c6b8:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000c6ba:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000c6bc:	619a      	str	r2, [r3, #24]
}
9000c6be:	bc30      	pop	{r4, r5}
9000c6c0:	4770      	bx	lr
9000c6c2:	bf00      	nop

9000c6c4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000c6c4:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000c6c6:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000c6ca:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000c6cc:	6900      	ldr	r0, [r0, #16]
9000c6ce:	4323      	orrs	r3, r4
9000c6d0:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000c6d4:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000c6d8:	4c05      	ldr	r4, [pc, #20]	@ (9000c6f0 <FMC_SDRAM_SendCommand+0x2c>)
9000c6da:	3901      	subs	r1, #1
9000c6dc:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000c6de:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000c6e0:	4323      	orrs	r3, r4
}
9000c6e2:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000c6e6:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000c6ea:	6113      	str	r3, [r2, #16]
}
9000c6ec:	4770      	bx	lr
9000c6ee:	bf00      	nop
9000c6f0:	ffc00000 	.word	0xffc00000

9000c6f4 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000c6f4:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000c6f6:	4b05      	ldr	r3, [pc, #20]	@ (9000c70c <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000c6f8:	2000      	movs	r0, #0
{
9000c6fa:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000c6fc:	6954      	ldr	r4, [r2, #20]
9000c6fe:	4023      	ands	r3, r4
}
9000c700:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000c704:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000c708:	6153      	str	r3, [r2, #20]
}
9000c70a:	4770      	bx	lr
9000c70c:	ffffc001 	.word	0xffffc001

9000c710 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000c710:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000c712:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000c716:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000c718:	f002 fafc 	bl	9000ed14 <xTaskGetSchedulerState>
9000c71c:	2801      	cmp	r0, #1
9000c71e:	d100      	bne.n	9000c722 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000c720:	bd08      	pop	{r3, pc}
9000c722:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000c726:	f000 bc35 	b.w	9000cf94 <xPortSysTickHandler>
9000c72a:	bf00      	nop

9000c72c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000c72c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000c730:	b92b      	cbnz	r3, 9000c73e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000c732:	4b06      	ldr	r3, [pc, #24]	@ (9000c74c <osKernelInitialize+0x20>)
9000c734:	6818      	ldr	r0, [r3, #0]
9000c736:	b928      	cbnz	r0, 9000c744 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000c738:	2201      	movs	r2, #1
9000c73a:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000c73c:	4770      	bx	lr
    stat = osErrorISR;
9000c73e:	f06f 0005 	mvn.w	r0, #5
9000c742:	4770      	bx	lr
    } else {
      stat = osError;
9000c744:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000c748:	4770      	bx	lr
9000c74a:	bf00      	nop
9000c74c:	24008b74 	.word	0x24008b74

9000c750 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000c750:	b510      	push	{r4, lr}
9000c752:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000c756:	b974      	cbnz	r4, 9000c776 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000c758:	4b08      	ldr	r3, [pc, #32]	@ (9000c77c <osKernelStart+0x2c>)
9000c75a:	681a      	ldr	r2, [r3, #0]
9000c75c:	2a01      	cmp	r2, #1
9000c75e:	d107      	bne.n	9000c770 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000c760:	4907      	ldr	r1, [pc, #28]	@ (9000c780 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000c762:	2202      	movs	r2, #2
9000c764:	77cc      	strb	r4, [r1, #31]
9000c766:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000c768:	f002 f886 	bl	9000e878 <vTaskStartScheduler>
      stat = osOK;
9000c76c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000c76e:	bd10      	pop	{r4, pc}
      stat = osError;
9000c770:	f04f 30ff 	mov.w	r0, #4294967295
}
9000c774:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000c776:	f06f 0005 	mvn.w	r0, #5
}
9000c77a:	bd10      	pop	{r4, pc}
9000c77c:	24008b74 	.word	0x24008b74
9000c780:	e000ed00 	.word	0xe000ed00

9000c784 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000c784:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000c786:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000c788:	b087      	sub	sp, #28
  hTask = NULL;
9000c78a:	9505      	str	r5, [sp, #20]
9000c78c:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000c790:	b300      	cbz	r0, 9000c7d4 <osThreadNew+0x50>
9000c792:	b9fb      	cbnz	r3, 9000c7d4 <osThreadNew+0x50>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000c794:	4614      	mov	r4, r2
9000c796:	b302      	cbz	r2, 9000c7da <osThreadNew+0x56>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000c798:	6996      	ldr	r6, [r2, #24]
9000c79a:	b9c6      	cbnz	r6, 9000c7ce <osThreadNew+0x4a>
9000c79c:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000c79e:	6863      	ldr	r3, [r4, #4]
9000c7a0:	07db      	lsls	r3, r3, #31
9000c7a2:	d417      	bmi.n	9000c7d4 <osThreadNew+0x50>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000c7a4:	6963      	ldr	r3, [r4, #20]
9000c7a6:	b32b      	cbz	r3, 9000c7f4 <osThreadNew+0x70>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000c7a8:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000c7aa:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000c7ac:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000c7b0:	68e7      	ldr	r7, [r4, #12]
9000c7b2:	b30d      	cbz	r5, 9000c7f8 <osThreadNew+0x74>
9000c7b4:	2fab      	cmp	r7, #171	@ 0xab
9000c7b6:	d90d      	bls.n	9000c7d4 <osThreadNew+0x50>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000c7b8:	6924      	ldr	r4, [r4, #16]
9000c7ba:	b15b      	cbz	r3, 9000c7d4 <osThreadNew+0x50>
9000c7bc:	b154      	cbz	r4, 9000c7d4 <osThreadNew+0x50>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000c7be:	460b      	mov	r3, r1
9000c7c0:	9600      	str	r6, [sp, #0]
9000c7c2:	4661      	mov	r1, ip
9000c7c4:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000c7c8:	f001 ff96 	bl	9000e6f8 <xTaskCreateStatic>
9000c7cc:	e003      	b.n	9000c7d6 <osThreadNew+0x52>
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000c7ce:	1e72      	subs	r2, r6, #1
9000c7d0:	2a37      	cmp	r2, #55	@ 0x37
9000c7d2:	d9e4      	bls.n	9000c79e <osThreadNew+0x1a>
        return (NULL);
9000c7d4:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000c7d6:	b007      	add	sp, #28
9000c7d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000c7da:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000c7dc:	2618      	movs	r6, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000c7de:	460b      	mov	r3, r1
9000c7e0:	4621      	mov	r1, r4
9000c7e2:	ac05      	add	r4, sp, #20
9000c7e4:	9600      	str	r6, [sp, #0]
9000c7e6:	9401      	str	r4, [sp, #4]
9000c7e8:	f001 ffc0 	bl	9000e76c <xTaskCreate>
9000c7ec:	2801      	cmp	r0, #1
9000c7ee:	d1f1      	bne.n	9000c7d4 <osThreadNew+0x50>
  return ((osThreadId_t)hTask);
9000c7f0:	9805      	ldr	r0, [sp, #20]
9000c7f2:	e7f0      	b.n	9000c7d6 <osThreadNew+0x52>
    stack = configMINIMAL_STACK_SIZE;
9000c7f4:	2280      	movs	r2, #128	@ 0x80
9000c7f6:	e7d8      	b.n	9000c7aa <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000c7f8:	2f00      	cmp	r7, #0
9000c7fa:	d1eb      	bne.n	9000c7d4 <osThreadNew+0x50>
9000c7fc:	6923      	ldr	r3, [r4, #16]
9000c7fe:	2b00      	cmp	r3, #0
9000c800:	d1e8      	bne.n	9000c7d4 <osThreadNew+0x50>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000c802:	b292      	uxth	r2, r2
9000c804:	4664      	mov	r4, ip
9000c806:	e7ea      	b.n	9000c7de <osThreadNew+0x5a>

9000c808 <osDelay>:
9000c808:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000c80c:	b93a      	cbnz	r2, 9000c81e <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000c80e:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000c810:	b908      	cbnz	r0, 9000c816 <osDelay+0xe>
    stat = osOK;
9000c812:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000c814:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000c816:	f001 ffd9 	bl	9000e7cc <vTaskDelay>
    stat = osOK;
9000c81a:	2000      	movs	r0, #0
}
9000c81c:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000c81e:	f06f 0005 	mvn.w	r0, #5
}
9000c822:	4770      	bx	lr

9000c824 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000c824:	b5f0      	push	{r4, r5, r6, r7, lr}
9000c826:	b083      	sub	sp, #12
9000c828:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000c82c:	b98e      	cbnz	r6, 9000c852 <osSemaphoreNew+0x2e>
9000c82e:	4605      	mov	r5, r0
9000c830:	b178      	cbz	r0, 9000c852 <osSemaphoreNew+0x2e>
9000c832:	4288      	cmp	r0, r1
9000c834:	460f      	mov	r7, r1
9000c836:	d30c      	bcc.n	9000c852 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000c838:	4614      	mov	r4, r2
9000c83a:	b172      	cbz	r2, 9000c85a <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000c83c:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000c840:	b14a      	cbz	r2, 9000c856 <osSemaphoreNew+0x32>
9000c842:	2b4f      	cmp	r3, #79	@ 0x4f
9000c844:	d905      	bls.n	9000c852 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000c846:	2801      	cmp	r0, #1
9000c848:	d02f      	beq.n	9000c8aa <osSemaphoreNew+0x86>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000c84a:	f000 fd81 	bl	9000d350 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000c84e:	4605      	mov	r5, r0
9000c850:	b968      	cbnz	r0, 9000c86e <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000c852:	2500      	movs	r5, #0
9000c854:	e010      	b.n	9000c878 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000c856:	2b00      	cmp	r3, #0
9000c858:	d1fb      	bne.n	9000c852 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000c85a:	2d01      	cmp	r5, #1
9000c85c:	d00f      	beq.n	9000c87e <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000c85e:	4628      	mov	r0, r5
9000c860:	4639      	mov	r1, r7
9000c862:	f000 fdd5 	bl	9000d410 <xQueueCreateCountingSemaphore>
9000c866:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000c868:	2d00      	cmp	r5, #0
9000c86a:	d0f2      	beq.n	9000c852 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000c86c:	b104      	cbz	r4, 9000c870 <osSemaphoreNew+0x4c>
          name = attr->name;
9000c86e:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000c870:	4621      	mov	r1, r4
9000c872:	4628      	mov	r0, r5
9000c874:	f001 fc06 	bl	9000e084 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000c878:	4628      	mov	r0, r5
9000c87a:	b003      	add	sp, #12
9000c87c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000c87e:	4628      	mov	r0, r5
9000c880:	2203      	movs	r2, #3
9000c882:	2100      	movs	r1, #0
9000c884:	f000 fd22 	bl	9000d2cc <xQueueGenericCreate>
9000c888:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000c88a:	2d00      	cmp	r5, #0
9000c88c:	d0e1      	beq.n	9000c852 <osSemaphoreNew+0x2e>
9000c88e:	2f00      	cmp	r7, #0
9000c890:	d0ea      	beq.n	9000c868 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000c892:	2300      	movs	r3, #0
9000c894:	4628      	mov	r0, r5
9000c896:	461a      	mov	r2, r3
9000c898:	4619      	mov	r1, r3
9000c89a:	f000 fdff 	bl	9000d49c <xQueueGenericSend>
9000c89e:	2801      	cmp	r0, #1
9000c8a0:	d0e4      	beq.n	9000c86c <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000c8a2:	4628      	mov	r0, r5
9000c8a4:	f001 fba8 	bl	9000dff8 <vQueueDelete>
      if (hSemaphore != NULL) {
9000c8a8:	e7d3      	b.n	9000c852 <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000c8aa:	4613      	mov	r3, r2
9000c8ac:	2203      	movs	r2, #3
9000c8ae:	4631      	mov	r1, r6
9000c8b0:	9200      	str	r2, [sp, #0]
9000c8b2:	4632      	mov	r2, r6
9000c8b4:	f000 fc9e 	bl	9000d1f4 <xQueueGenericCreateStatic>
9000c8b8:	4605      	mov	r5, r0
9000c8ba:	e7e6      	b.n	9000c88a <osSemaphoreNew+0x66>

9000c8bc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000c8bc:	b360      	cbz	r0, 9000c918 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000c8be:	b510      	push	{r4, lr}
9000c8c0:	460c      	mov	r4, r1
9000c8c2:	b082      	sub	sp, #8
9000c8c4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000c8c8:	b1b3      	cbz	r3, 9000c8f8 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000c8ca:	bb11      	cbnz	r1, 9000c912 <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000c8cc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000c8ce:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000c8d0:	f001 fb34 	bl	9000df3c <xQueueReceiveFromISR>
9000c8d4:	2801      	cmp	r0, #1
9000c8d6:	d118      	bne.n	9000c90a <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000c8d8:	9b01      	ldr	r3, [sp, #4]
9000c8da:	b913      	cbnz	r3, 9000c8e2 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000c8dc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000c8de:	b002      	add	sp, #8
9000c8e0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000c8e2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000c8e6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000c8ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000c8ee:	f3bf 8f4f 	dsb	sy
9000c8f2:	f3bf 8f6f 	isb	sy
9000c8f6:	e7f1      	b.n	9000c8dc <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000c8f8:	f001 f994 	bl	9000dc24 <xQueueSemaphoreTake>
9000c8fc:	2801      	cmp	r0, #1
9000c8fe:	d0ed      	beq.n	9000c8dc <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000c900:	b11c      	cbz	r4, 9000c90a <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000c902:	f06f 0001 	mvn.w	r0, #1
}
9000c906:	b002      	add	sp, #8
9000c908:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000c90a:	f06f 0002 	mvn.w	r0, #2
}
9000c90e:	b002      	add	sp, #8
9000c910:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000c912:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000c916:	e7e2      	b.n	9000c8de <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000c918:	f06f 0003 	mvn.w	r0, #3
}
9000c91c:	4770      	bx	lr
9000c91e:	bf00      	nop

9000c920 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000c920:	b328      	cbz	r0, 9000c96e <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000c922:	b500      	push	{lr}
9000c924:	b083      	sub	sp, #12
9000c926:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000c92a:	b19b      	cbz	r3, 9000c954 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000c92c:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000c92e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000c930:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000c932:	f000 ff9b 	bl	9000d86c <xQueueGiveFromISR>
9000c936:	2801      	cmp	r0, #1
9000c938:	d116      	bne.n	9000c968 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000c93a:	9b01      	ldr	r3, [sp, #4]
9000c93c:	b183      	cbz	r3, 9000c960 <osSemaphoreRelease+0x40>
9000c93e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000c942:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000c946:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000c94a:	f3bf 8f4f 	dsb	sy
9000c94e:	f3bf 8f6f 	isb	sy
9000c952:	e005      	b.n	9000c960 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000c954:	461a      	mov	r2, r3
9000c956:	4619      	mov	r1, r3
9000c958:	f000 fda0 	bl	9000d49c <xQueueGenericSend>
9000c95c:	2801      	cmp	r0, #1
9000c95e:	d103      	bne.n	9000c968 <osSemaphoreRelease+0x48>
  stat = osOK;
9000c960:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000c962:	b003      	add	sp, #12
9000c964:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000c968:	f06f 0002 	mvn.w	r0, #2
9000c96c:	e7f9      	b.n	9000c962 <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000c96e:	f06f 0003 	mvn.w	r0, #3
}
9000c972:	4770      	bx	lr

9000c974 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000c974:	b5f0      	push	{r4, r5, r6, r7, lr}
9000c976:	b083      	sub	sp, #12
9000c978:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000c97c:	b987      	cbnz	r7, 9000c9a0 <osMessageQueueNew+0x2c>
9000c97e:	4605      	mov	r5, r0
9000c980:	b170      	cbz	r0, 9000c9a0 <osMessageQueueNew+0x2c>
9000c982:	b169      	cbz	r1, 9000c9a0 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000c984:	4614      	mov	r4, r2
9000c986:	b17a      	cbz	r2, 9000c9a8 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000c988:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000c98c:	b1c3      	cbz	r3, 9000c9c0 <osMessageQueueNew+0x4c>
9000c98e:	2a4f      	cmp	r2, #79	@ 0x4f
9000c990:	d906      	bls.n	9000c9a0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000c992:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000c994:	b122      	cbz	r2, 9000c9a0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000c996:	fb01 f505 	mul.w	r5, r1, r5
9000c99a:	6966      	ldr	r6, [r4, #20]
9000c99c:	42ae      	cmp	r6, r5
9000c99e:	d21e      	bcs.n	9000c9de <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000c9a0:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000c9a2:	4628      	mov	r0, r5
9000c9a4:	b003      	add	sp, #12
9000c9a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000c9a8:	f000 fc90 	bl	9000d2cc <xQueueGenericCreate>
    if (hQueue != NULL) {
9000c9ac:	4605      	mov	r5, r0
9000c9ae:	2800      	cmp	r0, #0
9000c9b0:	d0f6      	beq.n	9000c9a0 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000c9b2:	4628      	mov	r0, r5
9000c9b4:	4621      	mov	r1, r4
9000c9b6:	f001 fb65 	bl	9000e084 <vQueueAddToRegistry>
}
9000c9ba:	4628      	mov	r0, r5
9000c9bc:	b003      	add	sp, #12
9000c9be:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000c9c0:	2a00      	cmp	r2, #0
9000c9c2:	d1ed      	bne.n	9000c9a0 <osMessageQueueNew+0x2c>
9000c9c4:	6923      	ldr	r3, [r4, #16]
9000c9c6:	2b00      	cmp	r3, #0
9000c9c8:	d1ea      	bne.n	9000c9a0 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000c9ca:	6962      	ldr	r2, [r4, #20]
9000c9cc:	2a00      	cmp	r2, #0
9000c9ce:	d1e7      	bne.n	9000c9a0 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000c9d0:	f000 fc7c 	bl	9000d2cc <xQueueGenericCreate>
    if (hQueue != NULL) {
9000c9d4:	4605      	mov	r5, r0
9000c9d6:	2800      	cmp	r0, #0
9000c9d8:	d0e2      	beq.n	9000c9a0 <osMessageQueueNew+0x2c>
        name = attr->name;
9000c9da:	6824      	ldr	r4, [r4, #0]
9000c9dc:	e7e9      	b.n	9000c9b2 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000c9de:	9700      	str	r7, [sp, #0]
9000c9e0:	f000 fc08 	bl	9000d1f4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000c9e4:	4605      	mov	r5, r0
9000c9e6:	2800      	cmp	r0, #0
9000c9e8:	d1f7      	bne.n	9000c9da <osMessageQueueNew+0x66>
9000c9ea:	e7d9      	b.n	9000c9a0 <osMessageQueueNew+0x2c>

9000c9ec <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000c9ec:	b560      	push	{r5, r6, lr}
9000c9ee:	461e      	mov	r6, r3
9000c9f0:	b083      	sub	sp, #12
9000c9f2:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000c9f6:	fab0 f580 	clz	r5, r0
9000c9fa:	fab1 f381 	clz	r3, r1
9000c9fe:	096d      	lsrs	r5, r5, #5
9000ca00:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000ca02:	b1da      	cbz	r2, 9000ca3c <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000ca04:	2e00      	cmp	r6, #0
9000ca06:	bf18      	it	ne
9000ca08:	f043 0301 	orrne.w	r3, r3, #1
9000ca0c:	bb33      	cbnz	r3, 9000ca5c <osMessageQueuePut+0x70>
9000ca0e:	bb2d      	cbnz	r5, 9000ca5c <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000ca10:	462b      	mov	r3, r5
9000ca12:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000ca14:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000ca16:	f000 fec3 	bl	9000d7a0 <xQueueGenericSendFromISR>
9000ca1a:	2801      	cmp	r0, #1
9000ca1c:	d11a      	bne.n	9000ca54 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000ca1e:	9b01      	ldr	r3, [sp, #4]
9000ca20:	b14b      	cbz	r3, 9000ca36 <osMessageQueuePut+0x4a>
9000ca22:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ca26:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ca2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ca2e:	f3bf 8f4f 	dsb	sy
9000ca32:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000ca36:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000ca38:	b003      	add	sp, #12
9000ca3a:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000ca3c:	b975      	cbnz	r5, 9000ca5c <osMessageQueuePut+0x70>
9000ca3e:	b96b      	cbnz	r3, 9000ca5c <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000ca40:	4632      	mov	r2, r6
9000ca42:	f000 fd2b 	bl	9000d49c <xQueueGenericSend>
9000ca46:	2801      	cmp	r0, #1
9000ca48:	d0f5      	beq.n	9000ca36 <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000ca4a:	b11e      	cbz	r6, 9000ca54 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000ca4c:	f06f 0001 	mvn.w	r0, #1
}
9000ca50:	b003      	add	sp, #12
9000ca52:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000ca54:	f06f 0002 	mvn.w	r0, #2
}
9000ca58:	b003      	add	sp, #12
9000ca5a:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000ca5c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000ca60:	e7ea      	b.n	9000ca38 <osMessageQueuePut+0x4c>
9000ca62:	bf00      	nop

9000ca64 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000ca64:	b570      	push	{r4, r5, r6, lr}
9000ca66:	461e      	mov	r6, r3
9000ca68:	b082      	sub	sp, #8
9000ca6a:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000ca6e:	fab0 f580 	clz	r5, r0
9000ca72:	fab1 f481 	clz	r4, r1
9000ca76:	096d      	lsrs	r5, r5, #5
9000ca78:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000ca7a:	b1d3      	cbz	r3, 9000cab2 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000ca7c:	2e00      	cmp	r6, #0
9000ca7e:	bf18      	it	ne
9000ca80:	f044 0401 	orrne.w	r4, r4, #1
9000ca84:	bb2c      	cbnz	r4, 9000cad2 <osMessageQueueGet+0x6e>
9000ca86:	bb25      	cbnz	r5, 9000cad2 <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000ca88:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000ca8a:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000ca8c:	f001 fa56 	bl	9000df3c <xQueueReceiveFromISR>
9000ca90:	2801      	cmp	r0, #1
9000ca92:	d11a      	bne.n	9000caca <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000ca94:	9b01      	ldr	r3, [sp, #4]
9000ca96:	b14b      	cbz	r3, 9000caac <osMessageQueueGet+0x48>
9000ca98:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ca9c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000caa0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000caa4:	f3bf 8f4f 	dsb	sy
9000caa8:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000caac:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000caae:	b002      	add	sp, #8
9000cab0:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000cab2:	b975      	cbnz	r5, 9000cad2 <osMessageQueueGet+0x6e>
9000cab4:	b96c      	cbnz	r4, 9000cad2 <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000cab6:	4632      	mov	r2, r6
9000cab8:	f000 ff2e 	bl	9000d918 <xQueueReceive>
9000cabc:	2801      	cmp	r0, #1
9000cabe:	d0f5      	beq.n	9000caac <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000cac0:	b11e      	cbz	r6, 9000caca <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000cac2:	f06f 0001 	mvn.w	r0, #1
}
9000cac6:	b002      	add	sp, #8
9000cac8:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000caca:	f06f 0002 	mvn.w	r0, #2
}
9000cace:	b002      	add	sp, #8
9000cad0:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000cad2:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000cad6:	e7ea      	b.n	9000caae <osMessageQueueGet+0x4a>

9000cad8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000cad8:	4b04      	ldr	r3, [pc, #16]	@ (9000caec <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000cada:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000cadc:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000cade:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000cae0:	4c03      	ldr	r4, [pc, #12]	@ (9000caf0 <vApplicationGetIdleTaskMemory+0x18>)
9000cae2:	600c      	str	r4, [r1, #0]
}
9000cae4:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000cae8:	6013      	str	r3, [r2, #0]
}
9000caea:	4770      	bx	lr
9000caec:	24008ac8 	.word	0x24008ac8
9000caf0:	240088c8 	.word	0x240088c8

9000caf4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000caf4:	4b05      	ldr	r3, [pc, #20]	@ (9000cb0c <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000caf6:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000caf8:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000cafa:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000cafe:	4c04      	ldr	r4, [pc, #16]	@ (9000cb10 <vApplicationGetTimerTaskMemory+0x1c>)
9000cb00:	600c      	str	r4, [r1, #0]
}
9000cb02:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000cb06:	6013      	str	r3, [r2, #0]
}
9000cb08:	4770      	bx	lr
9000cb0a:	bf00      	nop
9000cb0c:	2400881c 	.word	0x2400881c
9000cb10:	2400841c 	.word	0x2400841c

9000cb14 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000cb14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000cb18:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000cb1a:	f001 ff31 	bl	9000e980 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000cb1e:	4a53      	ldr	r2, [pc, #332]	@ (9000cc6c <pvPortMalloc+0x158>)
9000cb20:	6815      	ldr	r5, [r2, #0]
9000cb22:	2d00      	cmp	r5, #0
9000cb24:	d035      	beq.n	9000cb92 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000cb26:	4b52      	ldr	r3, [pc, #328]	@ (9000cc70 <pvPortMalloc+0x15c>)
9000cb28:	681e      	ldr	r6, [r3, #0]
9000cb2a:	4234      	tst	r4, r6
9000cb2c:	d12b      	bne.n	9000cb86 <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000cb2e:	b354      	cbz	r4, 9000cb86 <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000cb30:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000cb34:	0764      	lsls	r4, r4, #29
9000cb36:	d002      	beq.n	9000cb3e <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000cb38:	f020 0007 	bic.w	r0, r0, #7
9000cb3c:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000cb3e:	b310      	cbz	r0, 9000cb86 <pvPortMalloc+0x72>
9000cb40:	f8df e140 	ldr.w	lr, [pc, #320]	@ 9000cc84 <pvPortMalloc+0x170>
9000cb44:	f8de c000 	ldr.w	ip, [lr]
9000cb48:	4584      	cmp	ip, r0
9000cb4a:	d31c      	bcc.n	9000cb86 <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000cb4c:	4c49      	ldr	r4, [pc, #292]	@ (9000cc74 <pvPortMalloc+0x160>)
9000cb4e:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000cb50:	e003      	b.n	9000cb5a <pvPortMalloc+0x46>
9000cb52:	681a      	ldr	r2, [r3, #0]
9000cb54:	b122      	cbz	r2, 9000cb60 <pvPortMalloc+0x4c>
9000cb56:	461c      	mov	r4, r3
9000cb58:	4613      	mov	r3, r2
9000cb5a:	6859      	ldr	r1, [r3, #4]
9000cb5c:	4281      	cmp	r1, r0
9000cb5e:	d3f8      	bcc.n	9000cb52 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000cb60:	42ab      	cmp	r3, r5
9000cb62:	d010      	beq.n	9000cb86 <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000cb64:	681a      	ldr	r2, [r3, #0]
9000cb66:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000cb68:	1a0a      	subs	r2, r1, r0
9000cb6a:	2a10      	cmp	r2, #16
9000cb6c:	d947      	bls.n	9000cbfe <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000cb6e:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000cb70:	0761      	lsls	r1, r4, #29
9000cb72:	d02d      	beq.n	9000cbd0 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000cb74:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000cb78:	f383 8811 	msr	BASEPRI, r3
9000cb7c:	f3bf 8f6f 	isb	sy
9000cb80:	f3bf 8f4f 	dsb	sy
9000cb84:	e7fe      	b.n	9000cb84 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000cb86:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000cb88:	f001 ff02 	bl	9000e990 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000cb8c:	4620      	mov	r0, r4
9000cb8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000cb92:	4b39      	ldr	r3, [pc, #228]	@ (9000cc78 <pvPortMalloc+0x164>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000cb94:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000cb98:	4e36      	ldr	r6, [pc, #216]	@ (9000cc74 <pvPortMalloc+0x160>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000cb9a:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000cb9c:	4d37      	ldr	r5, [pc, #220]	@ (9000cc7c <pvPortMalloc+0x168>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000cb9e:	bf18      	it	ne
9000cba0:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000cba2:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000cba6:	bf18      	it	ne
9000cba8:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000cbac:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000cbae:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000cbb0:	6033      	str	r3, [r6, #0]
9000cbb2:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000cbb4:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000cbb6:	1aeb      	subs	r3, r5, r3
}
9000cbb8:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000cbba:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000cbbe:	4a30      	ldr	r2, [pc, #192]	@ (9000cc80 <pvPortMalloc+0x16c>)
9000cbc0:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000cbc2:	4a30      	ldr	r2, [pc, #192]	@ (9000cc84 <pvPortMalloc+0x170>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000cbc4:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000cbc8:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000cbca:	4b29      	ldr	r3, [pc, #164]	@ (9000cc70 <pvPortMalloc+0x15c>)
9000cbcc:	6018      	str	r0, [r3, #0]
}
9000cbce:	e7ac      	b.n	9000cb2a <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000cbd0:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000cbd2:	4a28      	ldr	r2, [pc, #160]	@ (9000cc74 <pvPortMalloc+0x160>)
						pxBlock->xBlockSize = xWantedSize;
9000cbd4:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000cbd6:	4617      	mov	r7, r2
9000cbd8:	6812      	ldr	r2, [r2, #0]
9000cbda:	4294      	cmp	r4, r2
9000cbdc:	d8fb      	bhi.n	9000cbd6 <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000cbde:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000cbe0:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000cbe4:	eb07 0901 	add.w	r9, r7, r1
9000cbe8:	454c      	cmp	r4, r9
9000cbea:	d028      	beq.n	9000cc3e <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cbec:	eb04 0108 	add.w	r1, r4, r8
9000cbf0:	428a      	cmp	r2, r1
9000cbf2:	d02e      	beq.n	9000cc52 <pvPortMalloc+0x13e>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000cbf4:	4601      	mov	r1, r0
9000cbf6:	6022      	str	r2, [r4, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000cbf8:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000cbfa:	bf18      	it	ne
9000cbfc:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000cbfe:	4820      	ldr	r0, [pc, #128]	@ (9000cc80 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000cc00:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->pxNextFreeBlock = NULL;
9000cc04:	2500      	movs	r5, #0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000cc06:	4331      	orrs	r1, r6
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000cc08:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000cc0a:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000cc0e:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000cc10:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000cc14:	6059      	str	r1, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000cc16:	bf38      	it	cc
9000cc18:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000cc1a:	481b      	ldr	r0, [pc, #108]	@ (9000cc88 <pvPortMalloc+0x174>)
					pxBlock->pxNextFreeBlock = NULL;
9000cc1c:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000cc1e:	6802      	ldr	r2, [r0, #0]
9000cc20:	3201      	adds	r2, #1
9000cc22:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000cc24:	f001 feb4 	bl	9000e990 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000cc28:	0763      	lsls	r3, r4, #29
9000cc2a:	d0af      	beq.n	9000cb8c <pvPortMalloc+0x78>
9000cc2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000cc30:	f383 8811 	msr	BASEPRI, r3
9000cc34:	f3bf 8f6f 	isb	sy
9000cc38:	f3bf 8f4f 	dsb	sy
9000cc3c:	e7fe      	b.n	9000cc3c <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000cc3e:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cc40:	eb07 0108 	add.w	r1, r7, r8
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000cc44:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cc48:	428a      	cmp	r2, r1
9000cc4a:	d001      	beq.n	9000cc50 <pvPortMalloc+0x13c>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000cc4c:	6859      	ldr	r1, [r3, #4]
9000cc4e:	e7d6      	b.n	9000cbfe <pvPortMalloc+0xea>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cc50:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000cc52:	42aa      	cmp	r2, r5
9000cc54:	d006      	beq.n	9000cc64 <pvPortMalloc+0x150>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000cc56:	6851      	ldr	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000cc58:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000cc5a:	4441      	add	r1, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000cc5c:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000cc5e:	6061      	str	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000cc60:	6859      	ldr	r1, [r3, #4]
9000cc62:	e7c9      	b.n	9000cbf8 <pvPortMalloc+0xe4>
9000cc64:	6859      	ldr	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000cc66:	6022      	str	r2, [r4, #0]
9000cc68:	e7c6      	b.n	9000cbf8 <pvPortMalloc+0xe4>
9000cc6a:	bf00      	nop
9000cc6c:	24008b8c 	.word	0x24008b8c
9000cc70:	24008b78 	.word	0x24008b78
9000cc74:	24008b90 	.word	0x24008b90
9000cc78:	24008b98 	.word	0x24008b98
9000cc7c:	24021230 	.word	0x24021230
9000cc80:	24008b84 	.word	0x24008b84
9000cc84:	24008b88 	.word	0x24008b88
9000cc88:	24008b80 	.word	0x24008b80

9000cc8c <vPortFree>:
	if( pv != NULL )
9000cc8c:	b1d0      	cbz	r0, 9000ccc4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000cc8e:	4a2d      	ldr	r2, [pc, #180]	@ (9000cd44 <vPortFree+0xb8>)
9000cc90:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000cc94:	6812      	ldr	r2, [r2, #0]
9000cc96:	4213      	tst	r3, r2
9000cc98:	d00b      	beq.n	9000ccb2 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000cc9a:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000cc9e:	b191      	cbz	r1, 9000ccc6 <vPortFree+0x3a>
9000cca0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000cca4:	f383 8811 	msr	BASEPRI, r3
9000cca8:	f3bf 8f6f 	isb	sy
9000ccac:	f3bf 8f4f 	dsb	sy
9000ccb0:	e7fe      	b.n	9000ccb0 <vPortFree+0x24>
9000ccb2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ccb6:	f383 8811 	msr	BASEPRI, r3
9000ccba:	f3bf 8f6f 	isb	sy
9000ccbe:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000ccc2:	e7fe      	b.n	9000ccc2 <vPortFree+0x36>
9000ccc4:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000ccc6:	ea23 0302 	bic.w	r3, r3, r2
{
9000ccca:	b530      	push	{r4, r5, lr}
9000cccc:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000ccce:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000ccd2:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000ccd6:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000ccd8:	f001 fe52 	bl	9000e980 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000ccdc:	4a1a      	ldr	r2, [pc, #104]	@ (9000cd48 <vPortFree+0xbc>)
9000ccde:	9801      	ldr	r0, [sp, #4]
9000cce0:	6813      	ldr	r3, [r2, #0]
9000cce2:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000cce6:	440b      	add	r3, r1
9000cce8:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000ccea:	4b18      	ldr	r3, [pc, #96]	@ (9000cd4c <vPortFree+0xc0>)
9000ccec:	461a      	mov	r2, r3
9000ccee:	681b      	ldr	r3, [r3, #0]
9000ccf0:	429c      	cmp	r4, r3
9000ccf2:	d8fb      	bhi.n	9000ccec <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000ccf4:	6855      	ldr	r5, [r2, #4]
9000ccf6:	eb02 0e05 	add.w	lr, r2, r5
9000ccfa:	4574      	cmp	r4, lr
9000ccfc:	d011      	beq.n	9000cd22 <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ccfe:	eb04 0c01 	add.w	ip, r4, r1
9000cd02:	4563      	cmp	r3, ip
9000cd04:	d013      	beq.n	9000cd2e <vPortFree+0xa2>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000cd06:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000cd0a:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000cd0c:	bf18      	it	ne
9000cd0e:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000cd10:	4a0f      	ldr	r2, [pc, #60]	@ (9000cd50 <vPortFree+0xc4>)
9000cd12:	6813      	ldr	r3, [r2, #0]
9000cd14:	3301      	adds	r3, #1
9000cd16:	6013      	str	r3, [r2, #0]
}
9000cd18:	b003      	add	sp, #12
9000cd1a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000cd1e:	f001 be37 	b.w	9000e990 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000cd22:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cd24:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000cd26:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000cd28:	4283      	cmp	r3, r0
9000cd2a:	d1f1      	bne.n	9000cd10 <vPortFree+0x84>
9000cd2c:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000cd2e:	4809      	ldr	r0, [pc, #36]	@ (9000cd54 <vPortFree+0xc8>)
9000cd30:	6800      	ldr	r0, [r0, #0]
9000cd32:	4283      	cmp	r3, r0
9000cd34:	d003      	beq.n	9000cd3e <vPortFree+0xb2>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000cd36:	e9d3 0500 	ldrd	r0, r5, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000cd3a:	4429      	add	r1, r5
9000cd3c:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000cd3e:	6020      	str	r0, [r4, #0]
9000cd40:	e7e3      	b.n	9000cd0a <vPortFree+0x7e>
9000cd42:	bf00      	nop
9000cd44:	24008b78 	.word	0x24008b78
9000cd48:	24008b88 	.word	0x24008b88
9000cd4c:	24008b90 	.word	0x24008b90
9000cd50:	24008b7c 	.word	0x24008b7c
9000cd54:	24008b8c 	.word	0x24008b8c

9000cd58 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000cd58:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000cd5c:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000cd60:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000cd62:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000cd64:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000cd66:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000cd68:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000cd6c:	4770      	bx	lr
9000cd6e:	bf00      	nop

9000cd70 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000cd70:	2300      	movs	r3, #0
9000cd72:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000cd74:	4770      	bx	lr
9000cd76:	bf00      	nop

9000cd78 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000cd78:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000cd7a:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000cd7c:	3301      	adds	r3, #1
{
9000cd7e:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000cd80:	6894      	ldr	r4, [r2, #8]
9000cd82:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000cd86:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000cd88:	6091      	str	r1, [r2, #8]
}
9000cd8a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000cd8e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000cd90:	6003      	str	r3, [r0, #0]
}
9000cd92:	4770      	bx	lr

9000cd94 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000cd94:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000cd96:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000cd98:	1c6b      	adds	r3, r5, #1
9000cd9a:	d010      	beq.n	9000cdbe <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000cd9c:	f100 0308 	add.w	r3, r0, #8
9000cda0:	461c      	mov	r4, r3
9000cda2:	685b      	ldr	r3, [r3, #4]
9000cda4:	681a      	ldr	r2, [r3, #0]
9000cda6:	42aa      	cmp	r2, r5
9000cda8:	d9fa      	bls.n	9000cda0 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000cdaa:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000cdac:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000cdae:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000cdb0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000cdb2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000cdb4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000cdb6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000cdb8:	6002      	str	r2, [r0, #0]
}
9000cdba:	bc30      	pop	{r4, r5}
9000cdbc:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000cdbe:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000cdc0:	6863      	ldr	r3, [r4, #4]
9000cdc2:	e7f2      	b.n	9000cdaa <vListInsert+0x16>

9000cdc4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000cdc4:	6903      	ldr	r3, [r0, #16]
{
9000cdc6:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000cdc8:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000cdca:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000cdce:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000cdd0:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000cdd4:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000cdd6:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000cdd8:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000cddc:	bf08      	it	eq
9000cdde:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000cde0:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000cde2:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000cde4:	3a01      	subs	r2, #1
9000cde6:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000cde8:	6818      	ldr	r0, [r3, #0]
}
9000cdea:	4770      	bx	lr

9000cdec <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000cdec:	4808      	ldr	r0, [pc, #32]	@ (9000ce10 <prvPortStartFirstTask+0x24>)
9000cdee:	6800      	ldr	r0, [r0, #0]
9000cdf0:	6800      	ldr	r0, [r0, #0]
9000cdf2:	f380 8808 	msr	MSP, r0
9000cdf6:	f04f 0000 	mov.w	r0, #0
9000cdfa:	f380 8814 	msr	CONTROL, r0
9000cdfe:	b662      	cpsie	i
9000ce00:	b661      	cpsie	f
9000ce02:	f3bf 8f4f 	dsb	sy
9000ce06:	f3bf 8f6f 	isb	sy
9000ce0a:	df00      	svc	0
9000ce0c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000ce0e:	0000      	.short	0x0000
9000ce10:	e000ed08 	.word	0xe000ed08

9000ce14 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000ce14:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000ce24 <vPortEnableVFP+0x10>
9000ce18:	6801      	ldr	r1, [r0, #0]
9000ce1a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000ce1e:	6001      	str	r1, [r0, #0]
9000ce20:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000ce22:	0000      	.short	0x0000
9000ce24:	e000ed88 	.word	0xe000ed88

9000ce28 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000ce28:	4b0e      	ldr	r3, [pc, #56]	@ (9000ce64 <prvTaskExitError+0x3c>)
{
9000ce2a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000ce2c:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000ce2e:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000ce30:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000ce32:	3301      	adds	r3, #1
9000ce34:	d008      	beq.n	9000ce48 <prvTaskExitError+0x20>
9000ce36:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ce3a:	f383 8811 	msr	BASEPRI, r3
9000ce3e:	f3bf 8f6f 	isb	sy
9000ce42:	f3bf 8f4f 	dsb	sy
9000ce46:	e7fe      	b.n	9000ce46 <prvTaskExitError+0x1e>
9000ce48:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ce4c:	f383 8811 	msr	BASEPRI, r3
9000ce50:	f3bf 8f6f 	isb	sy
9000ce54:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000ce58:	9b01      	ldr	r3, [sp, #4]
9000ce5a:	2b00      	cmp	r3, #0
9000ce5c:	d0fc      	beq.n	9000ce58 <prvTaskExitError+0x30>
}
9000ce5e:	b002      	add	sp, #8
9000ce60:	4770      	bx	lr
9000ce62:	bf00      	nop
9000ce64:	24000084 	.word	0x24000084

9000ce68 <pxPortInitialiseStack>:
{
9000ce68:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000ce6a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000ce6e:	4809      	ldr	r0, [pc, #36]	@ (9000ce94 <pxPortInitialiseStack+0x2c>)
{
9000ce70:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000ce72:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000ce76:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000ce7a:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000ce7e:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000ce82:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000ce86:	f06f 0102 	mvn.w	r1, #2
}
9000ce8a:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000ce8e:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000ce92:	4770      	bx	lr
9000ce94:	9000ce29 	.word	0x9000ce29
	...

9000cea0 <SVC_Handler>:
	__asm volatile (
9000cea0:	4b07      	ldr	r3, [pc, #28]	@ (9000cec0 <pxCurrentTCBConst2>)
9000cea2:	6819      	ldr	r1, [r3, #0]
9000cea4:	6808      	ldr	r0, [r1, #0]
9000cea6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ceaa:	f380 8809 	msr	PSP, r0
9000ceae:	f3bf 8f6f 	isb	sy
9000ceb2:	f04f 0000 	mov.w	r0, #0
9000ceb6:	f380 8811 	msr	BASEPRI, r0
9000ceba:	4770      	bx	lr
9000cebc:	f3af 8000 	nop.w

9000cec0 <pxCurrentTCBConst2>:
9000cec0:	24021778 	.word	0x24021778

9000cec4 <vPortEnterCritical>:
9000cec4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000cec8:	f383 8811 	msr	BASEPRI, r3
9000cecc:	f3bf 8f6f 	isb	sy
9000ced0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000ced4:	4a0b      	ldr	r2, [pc, #44]	@ (9000cf04 <vPortEnterCritical+0x40>)
9000ced6:	6813      	ldr	r3, [r2, #0]
9000ced8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000ceda:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000cedc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000cede:	d000      	beq.n	9000cee2 <vPortEnterCritical+0x1e>
}
9000cee0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000cee2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000cee6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000ceea:	b2db      	uxtb	r3, r3
9000ceec:	2b00      	cmp	r3, #0
9000ceee:	d0f7      	beq.n	9000cee0 <vPortEnterCritical+0x1c>
9000cef0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000cef4:	f383 8811 	msr	BASEPRI, r3
9000cef8:	f3bf 8f6f 	isb	sy
9000cefc:	f3bf 8f4f 	dsb	sy
9000cf00:	e7fe      	b.n	9000cf00 <vPortEnterCritical+0x3c>
9000cf02:	bf00      	nop
9000cf04:	24000084 	.word	0x24000084

9000cf08 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000cf08:	4a08      	ldr	r2, [pc, #32]	@ (9000cf2c <vPortExitCritical+0x24>)
9000cf0a:	6813      	ldr	r3, [r2, #0]
9000cf0c:	b943      	cbnz	r3, 9000cf20 <vPortExitCritical+0x18>
9000cf0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000cf12:	f383 8811 	msr	BASEPRI, r3
9000cf16:	f3bf 8f6f 	isb	sy
9000cf1a:	f3bf 8f4f 	dsb	sy
9000cf1e:	e7fe      	b.n	9000cf1e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000cf20:	3b01      	subs	r3, #1
9000cf22:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000cf24:	b90b      	cbnz	r3, 9000cf2a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000cf26:	f383 8811 	msr	BASEPRI, r3
}
9000cf2a:	4770      	bx	lr
9000cf2c:	24000084 	.word	0x24000084

9000cf30 <PendSV_Handler>:
	__asm volatile
9000cf30:	f3ef 8009 	mrs	r0, PSP
9000cf34:	f3bf 8f6f 	isb	sy
9000cf38:	4b15      	ldr	r3, [pc, #84]	@ (9000cf90 <pxCurrentTCBConst>)
9000cf3a:	681a      	ldr	r2, [r3, #0]
9000cf3c:	f01e 0f10 	tst.w	lr, #16
9000cf40:	bf08      	it	eq
9000cf42:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000cf46:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000cf4a:	6010      	str	r0, [r2, #0]
9000cf4c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000cf50:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000cf54:	f380 8811 	msr	BASEPRI, r0
9000cf58:	f3bf 8f4f 	dsb	sy
9000cf5c:	f3bf 8f6f 	isb	sy
9000cf60:	f001 fd52 	bl	9000ea08 <vTaskSwitchContext>
9000cf64:	f04f 0000 	mov.w	r0, #0
9000cf68:	f380 8811 	msr	BASEPRI, r0
9000cf6c:	bc09      	pop	{r0, r3}
9000cf6e:	6819      	ldr	r1, [r3, #0]
9000cf70:	6808      	ldr	r0, [r1, #0]
9000cf72:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000cf76:	f01e 0f10 	tst.w	lr, #16
9000cf7a:	bf08      	it	eq
9000cf7c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000cf80:	f380 8809 	msr	PSP, r0
9000cf84:	f3bf 8f6f 	isb	sy
9000cf88:	4770      	bx	lr
9000cf8a:	bf00      	nop
9000cf8c:	f3af 8000 	nop.w

9000cf90 <pxCurrentTCBConst>:
9000cf90:	24021778 	.word	0x24021778

9000cf94 <xPortSysTickHandler>:
{
9000cf94:	b508      	push	{r3, lr}
	__asm volatile
9000cf96:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000cf9a:	f383 8811 	msr	BASEPRI, r3
9000cf9e:	f3bf 8f6f 	isb	sy
9000cfa2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000cfa6:	f001 fd09 	bl	9000e9bc <xTaskIncrementTick>
9000cfaa:	b128      	cbz	r0, 9000cfb8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000cfac:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000cfb0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000cfb4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000cfb8:	2300      	movs	r3, #0
9000cfba:	f383 8811 	msr	BASEPRI, r3
}
9000cfbe:	bd08      	pop	{r3, pc}

9000cfc0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000cfc0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000cfc4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000cfc6:	4806      	ldr	r0, [pc, #24]	@ (9000cfe0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000cfc8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000cfca:	4906      	ldr	r1, [pc, #24]	@ (9000cfe4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000cfcc:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000cfce:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000cfd0:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000cfd2:	fba1 1303 	umull	r1, r3, r1, r3
9000cfd6:	099b      	lsrs	r3, r3, #6
9000cfd8:	3b01      	subs	r3, #1
9000cfda:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000cfdc:	6110      	str	r0, [r2, #16]
}
9000cfde:	4770      	bx	lr
9000cfe0:	24000078 	.word	0x24000078
9000cfe4:	10624dd3 	.word	0x10624dd3

9000cfe8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000cfe8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000cfec:	4a48      	ldr	r2, [pc, #288]	@ (9000d110 <xPortStartScheduler+0x128>)
9000cfee:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000cff2:	4291      	cmp	r1, r2
9000cff4:	d041      	beq.n	9000d07a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000cff6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000cffa:	4b46      	ldr	r3, [pc, #280]	@ (9000d114 <xPortStartScheduler+0x12c>)
9000cffc:	429a      	cmp	r2, r3
9000cffe:	d033      	beq.n	9000d068 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d000:	4b45      	ldr	r3, [pc, #276]	@ (9000d118 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d002:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d006:	4845      	ldr	r0, [pc, #276]	@ (9000d11c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d008:	4945      	ldr	r1, [pc, #276]	@ (9000d120 <xPortStartScheduler+0x138>)
{
9000d00a:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d00c:	781a      	ldrb	r2, [r3, #0]
{
9000d00e:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d010:	b2d2      	uxtb	r2, r2
9000d012:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d014:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d016:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d01a:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d01c:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d01e:	b2db      	uxtb	r3, r3
9000d020:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d024:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d028:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d02c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d030:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d032:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d034:	d50f      	bpl.n	9000d056 <xPortStartScheduler+0x6e>
9000d036:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d038:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d03c:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d03e:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d040:	005b      	lsls	r3, r3, #1
9000d042:	b2db      	uxtb	r3, r3
9000d044:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d048:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d04c:	061b      	lsls	r3, r3, #24
9000d04e:	d4f3      	bmi.n	9000d038 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000d050:	2903      	cmp	r1, #3
9000d052:	d01b      	beq.n	9000d08c <xPortStartScheduler+0xa4>
9000d054:	6001      	str	r1, [r0, #0]
	__asm volatile
9000d056:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d05a:	f383 8811 	msr	BASEPRI, r3
9000d05e:	f3bf 8f6f 	isb	sy
9000d062:	f3bf 8f4f 	dsb	sy
9000d066:	e7fe      	b.n	9000d066 <xPortStartScheduler+0x7e>
9000d068:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d06c:	f383 8811 	msr	BASEPRI, r3
9000d070:	f3bf 8f6f 	isb	sy
9000d074:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d078:	e7fe      	b.n	9000d078 <xPortStartScheduler+0x90>
9000d07a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d07e:	f383 8811 	msr	BASEPRI, r3
9000d082:	f3bf 8f6f 	isb	sy
9000d086:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d08a:	e7fe      	b.n	9000d08a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d08c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d08e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d092:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d096:	4a20      	ldr	r2, [pc, #128]	@ (9000d118 <xPortStartScheduler+0x130>)
9000d098:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000d09a:	4e22      	ldr	r6, [pc, #136]	@ (9000d124 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d09c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000d09e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d0a0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d0a2:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000d0a6:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000d0aa:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000d0ae:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000d0b2:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000d0b6:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000d0ba:	f7ff ff81 	bl	9000cfc0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000d0be:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000d0c0:	f7ff fea8 	bl	9000ce14 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000d0c4:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000d0c8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000d0cc:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000d0d0:	f7ff fe8c 	bl	9000cdec <prvPortStartFirstTask>
	vTaskSwitchContext();
9000d0d4:	f001 fc98 	bl	9000ea08 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000d0d8:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000d0da:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000d0dc:	3301      	adds	r3, #1
9000d0de:	d008      	beq.n	9000d0f2 <xPortStartScheduler+0x10a>
9000d0e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d0e4:	f383 8811 	msr	BASEPRI, r3
9000d0e8:	f3bf 8f6f 	isb	sy
9000d0ec:	f3bf 8f4f 	dsb	sy
9000d0f0:	e7fe      	b.n	9000d0f0 <xPortStartScheduler+0x108>
9000d0f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d0f6:	f383 8811 	msr	BASEPRI, r3
9000d0fa:	f3bf 8f6f 	isb	sy
9000d0fe:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d102:	9b03      	ldr	r3, [sp, #12]
9000d104:	2b00      	cmp	r3, #0
9000d106:	d0fc      	beq.n	9000d102 <xPortStartScheduler+0x11a>
}
9000d108:	2000      	movs	r0, #0
9000d10a:	b004      	add	sp, #16
9000d10c:	bd70      	pop	{r4, r5, r6, pc}
9000d10e:	bf00      	nop
9000d110:	410fc271 	.word	0x410fc271
9000d114:	410fc270 	.word	0x410fc270
9000d118:	e000e400 	.word	0xe000e400
9000d11c:	24021238 	.word	0x24021238
9000d120:	2402123c 	.word	0x2402123c
9000d124:	24000084 	.word	0x24000084

9000d128 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000d128:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000d12c:	2b0f      	cmp	r3, #15
9000d12e:	d90e      	bls.n	9000d14e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d130:	4911      	ldr	r1, [pc, #68]	@ (9000d178 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d132:	4a12      	ldr	r2, [pc, #72]	@ (9000d17c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d134:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d136:	7812      	ldrb	r2, [r2, #0]
9000d138:	429a      	cmp	r2, r3
9000d13a:	d908      	bls.n	9000d14e <vPortValidateInterruptPriority+0x26>
9000d13c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d140:	f383 8811 	msr	BASEPRI, r3
9000d144:	f3bf 8f6f 	isb	sy
9000d148:	f3bf 8f4f 	dsb	sy
9000d14c:	e7fe      	b.n	9000d14c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000d14e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d152:	4a0b      	ldr	r2, [pc, #44]	@ (9000d180 <vPortValidateInterruptPriority+0x58>)
9000d154:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000d158:	6812      	ldr	r2, [r2, #0]
9000d15a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000d15e:	4293      	cmp	r3, r2
9000d160:	d908      	bls.n	9000d174 <vPortValidateInterruptPriority+0x4c>
9000d162:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d166:	f383 8811 	msr	BASEPRI, r3
9000d16a:	f3bf 8f6f 	isb	sy
9000d16e:	f3bf 8f4f 	dsb	sy
9000d172:	e7fe      	b.n	9000d172 <vPortValidateInterruptPriority+0x4a>
	}
9000d174:	4770      	bx	lr
9000d176:	bf00      	nop
9000d178:	e000e3f0 	.word	0xe000e3f0
9000d17c:	2402123c 	.word	0x2402123c
9000d180:	24021238 	.word	0x24021238

9000d184 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000d184:	b570      	push	{r4, r5, r6, lr}
9000d186:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d188:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000d18a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000d18c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d18e:	b92a      	cbnz	r2, 9000d19c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000d190:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d192:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000d194:	b34e      	cbz	r6, 9000d1ea <prvCopyDataToQueue+0x66>
BaseType_t xReturn = pdFALSE;
9000d196:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d198:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000d19a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000d19c:	b97e      	cbnz	r6, 9000d1be <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000d19e:	6840      	ldr	r0, [r0, #4]
9000d1a0:	f01b fcbd 	bl	90028b1e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d1a4:	6863      	ldr	r3, [r4, #4]
9000d1a6:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d1a8:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d1aa:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d1ac:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d1ae:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000d1b0:	bf24      	itt	cs
9000d1b2:	6823      	ldrcs	r3, [r4, #0]
9000d1b4:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d1b6:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
9000d1b8:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d1ba:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000d1bc:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000d1be:	68c0      	ldr	r0, [r0, #12]
9000d1c0:	f01b fcad 	bl	90028b1e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d1c4:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000d1c6:	68e3      	ldr	r3, [r4, #12]
9000d1c8:	4251      	negs	r1, r2
9000d1ca:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d1cc:	6822      	ldr	r2, [r4, #0]
9000d1ce:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d1d0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d1d2:	d202      	bcs.n	9000d1da <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000d1d4:	68a3      	ldr	r3, [r4, #8]
9000d1d6:	440b      	add	r3, r1
9000d1d8:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000d1da:	2e02      	cmp	r6, #2
9000d1dc:	d1eb      	bne.n	9000d1b6 <prvCopyDataToQueue+0x32>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000d1de:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000d1e0:	f04f 0000 	mov.w	r0, #0
9000d1e4:	bf38      	it	cc
9000d1e6:	2501      	movcc	r5, #1
9000d1e8:	e7d6      	b.n	9000d198 <prvCopyDataToQueue+0x14>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000d1ea:	6880      	ldr	r0, [r0, #8]
9000d1ec:	f001 fde2 	bl	9000edb4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000d1f0:	60a6      	str	r6, [r4, #8]
9000d1f2:	e7d1      	b.n	9000d198 <prvCopyDataToQueue+0x14>

9000d1f4 <xQueueGenericCreateStatic>:
	{
9000d1f4:	b530      	push	{r4, r5, lr}
9000d1f6:	b083      	sub	sp, #12
9000d1f8:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000d1fc:	b940      	cbnz	r0, 9000d210 <xQueueGenericCreateStatic+0x1c>
9000d1fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d202:	f383 8811 	msr	BASEPRI, r3
9000d206:	f3bf 8f6f 	isb	sy
9000d20a:	f3bf 8f4f 	dsb	sy
9000d20e:	e7fe      	b.n	9000d20e <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000d210:	461c      	mov	r4, r3
9000d212:	b153      	cbz	r3, 9000d22a <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000d214:	b30a      	cbz	r2, 9000d25a <xQueueGenericCreateStatic+0x66>
9000d216:	b989      	cbnz	r1, 9000d23c <xQueueGenericCreateStatic+0x48>
9000d218:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d21c:	f383 8811 	msr	BASEPRI, r3
9000d220:	f3bf 8f6f 	isb	sy
9000d224:	f3bf 8f4f 	dsb	sy
9000d228:	e7fe      	b.n	9000d228 <xQueueGenericCreateStatic+0x34>
9000d22a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d22e:	f383 8811 	msr	BASEPRI, r3
9000d232:	f3bf 8f6f 	isb	sy
9000d236:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000d23a:	e7fe      	b.n	9000d23a <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000d23c:	b16a      	cbz	r2, 9000d25a <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000d23e:	2350      	movs	r3, #80	@ 0x50
9000d240:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000d242:	9b01      	ldr	r3, [sp, #4]
9000d244:	2b50      	cmp	r3, #80	@ 0x50
9000d246:	d013      	beq.n	9000d270 <xQueueGenericCreateStatic+0x7c>
9000d248:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d24c:	f383 8811 	msr	BASEPRI, r3
9000d250:	f3bf 8f6f 	isb	sy
9000d254:	f3bf 8f4f 	dsb	sy
9000d258:	e7fe      	b.n	9000d258 <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000d25a:	2900      	cmp	r1, #0
9000d25c:	d0ef      	beq.n	9000d23e <xQueueGenericCreateStatic+0x4a>
9000d25e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d262:	f383 8811 	msr	BASEPRI, r3
9000d266:	f3bf 8f6f 	isb	sy
9000d26a:	f3bf 8f4f 	dsb	sy
9000d26e:	e7fe      	b.n	9000d26e <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000d270:	2900      	cmp	r1, #0
9000d272:	bf08      	it	eq
9000d274:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000d276:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d278:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000d27a:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000d27c:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000d27e:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d280:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000d284:	f7ff fe1e 	bl	9000cec4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d288:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d28a:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d28e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d290:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000d294:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d298:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d29a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d29c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d29e:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d2a0:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000d2a2:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d2a4:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d2a6:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000d2a8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d2ac:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d2b0:	f7ff fd52 	bl	9000cd58 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d2b4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000d2b8:	f7ff fd4e 	bl	9000cd58 <vListInitialise>
	taskEXIT_CRITICAL();
9000d2bc:	f7ff fe24 	bl	9000cf08 <vPortExitCritical>
	}
9000d2c0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000d2c2:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000d2c6:	b003      	add	sp, #12
9000d2c8:	bd30      	pop	{r4, r5, pc}
9000d2ca:	bf00      	nop

9000d2cc <xQueueGenericCreate>:
	{
9000d2cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000d2ce:	b940      	cbnz	r0, 9000d2e2 <xQueueGenericCreate+0x16>
9000d2d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d2d4:	f383 8811 	msr	BASEPRI, r3
9000d2d8:	f3bf 8f6f 	isb	sy
9000d2dc:	f3bf 8f4f 	dsb	sy
9000d2e0:	e7fe      	b.n	9000d2e0 <xQueueGenericCreate+0x14>
9000d2e2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000d2e4:	fb01 f000 	mul.w	r0, r1, r0
9000d2e8:	460e      	mov	r6, r1
9000d2ea:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000d2ec:	3050      	adds	r0, #80	@ 0x50
9000d2ee:	f7ff fc11 	bl	9000cb14 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000d2f2:	4604      	mov	r4, r0
9000d2f4:	b340      	cbz	r0, 9000d348 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000d2f6:	2300      	movs	r3, #0
9000d2f8:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000d2fc:	b336      	cbz	r6, 9000d34c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d2fe:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000d302:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000d304:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000d308:	f7ff fddc 	bl	9000cec4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d30c:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d30e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d312:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d314:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000d318:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d31c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d31e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d320:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d322:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d324:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000d326:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d328:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d32a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000d32c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d330:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d334:	f7ff fd10 	bl	9000cd58 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d338:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000d33c:	f7ff fd0c 	bl	9000cd58 <vListInitialise>
	taskEXIT_CRITICAL();
9000d340:	f7ff fde2 	bl	9000cf08 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000d344:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000d348:	4620      	mov	r0, r4
9000d34a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000d34c:	4603      	mov	r3, r0
9000d34e:	e7d8      	b.n	9000d302 <xQueueGenericCreate+0x36>

9000d350 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000d350:	b940      	cbnz	r0, 9000d364 <xQueueCreateCountingSemaphoreStatic+0x14>
9000d352:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d356:	f383 8811 	msr	BASEPRI, r3
9000d35a:	f3bf 8f6f 	isb	sy
9000d35e:	f3bf 8f4f 	dsb	sy
9000d362:	e7fe      	b.n	9000d362 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000d364:	4288      	cmp	r0, r1
9000d366:	d208      	bcs.n	9000d37a <xQueueCreateCountingSemaphoreStatic+0x2a>
9000d368:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d36c:	f383 8811 	msr	BASEPRI, r3
9000d370:	f3bf 8f6f 	isb	sy
9000d374:	f3bf 8f4f 	dsb	sy
9000d378:	e7fe      	b.n	9000d378 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000d37a:	b530      	push	{r4, r5, lr}
9000d37c:	4614      	mov	r4, r2
9000d37e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000d380:	2a00      	cmp	r2, #0
9000d382:	d03b      	beq.n	9000d3fc <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000d384:	2350      	movs	r3, #80	@ 0x50
9000d386:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000d388:	9b03      	ldr	r3, [sp, #12]
9000d38a:	2b50      	cmp	r3, #80	@ 0x50
9000d38c:	d008      	beq.n	9000d3a0 <xQueueCreateCountingSemaphoreStatic+0x50>
9000d38e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d392:	f383 8811 	msr	BASEPRI, r3
9000d396:	f3bf 8f6f 	isb	sy
9000d39a:	f3bf 8f4f 	dsb	sy
9000d39e:	e7fe      	b.n	9000d39e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000d3a0:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d3a2:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000d3a4:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000d3a6:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d3a8:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000d3ac:	6415      	str	r5, [r2, #64]	@ 0x40
9000d3ae:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000d3b0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000d3b2:	f7ff fd87 	bl	9000cec4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d3b6:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d3b8:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d3ba:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d3bc:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000d3c0:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d3c4:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d3c6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d3c8:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d3ca:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000d3cc:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d3ce:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d3d2:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000d3d4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d3d8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d3dc:	f7ff fcbc 	bl	9000cd58 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d3e0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000d3e4:	f7ff fcb8 	bl	9000cd58 <vListInitialise>
	taskEXIT_CRITICAL();
9000d3e8:	f7ff fd8e 	bl	9000cf08 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000d3ec:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000d3ee:	9901      	ldr	r1, [sp, #4]
	}
9000d3f0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000d3f2:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000d3f6:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000d3f8:	b005      	add	sp, #20
9000d3fa:	bd30      	pop	{r4, r5, pc}
9000d3fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d400:	f383 8811 	msr	BASEPRI, r3
9000d404:	f3bf 8f6f 	isb	sy
9000d408:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000d40c:	e7fe      	b.n	9000d40c <xQueueCreateCountingSemaphoreStatic+0xbc>
9000d40e:	bf00      	nop

9000d410 <xQueueCreateCountingSemaphore>:
	{
9000d410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000d412:	b940      	cbnz	r0, 9000d426 <xQueueCreateCountingSemaphore+0x16>
9000d414:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d418:	f383 8811 	msr	BASEPRI, r3
9000d41c:	f3bf 8f6f 	isb	sy
9000d420:	f3bf 8f4f 	dsb	sy
9000d424:	e7fe      	b.n	9000d424 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000d426:	4288      	cmp	r0, r1
9000d428:	4604      	mov	r4, r0
9000d42a:	460e      	mov	r6, r1
9000d42c:	d208      	bcs.n	9000d440 <xQueueCreateCountingSemaphore+0x30>
9000d42e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d432:	f383 8811 	msr	BASEPRI, r3
9000d436:	f3bf 8f6f 	isb	sy
9000d43a:	f3bf 8f4f 	dsb	sy
9000d43e:	e7fe      	b.n	9000d43e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000d440:	2050      	movs	r0, #80	@ 0x50
9000d442:	f7ff fb67 	bl	9000cb14 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000d446:	4605      	mov	r5, r0
9000d448:	b330      	cbz	r0, 9000d498 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000d44a:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000d44c:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000d44e:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000d450:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000d454:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000d456:	f7ff fd35 	bl	9000cec4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d45a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d45c:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d45e:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d462:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d464:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000d468:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d46c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d46e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d470:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d472:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000d474:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d476:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000d478:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d47c:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d480:	f7ff fc6a 	bl	9000cd58 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d484:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000d488:	f7ff fc66 	bl	9000cd58 <vListInitialise>
	taskEXIT_CRITICAL();
9000d48c:	f7ff fd3c 	bl	9000cf08 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000d490:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000d492:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000d494:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000d498:	4628      	mov	r0, r5
9000d49a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000d49c <xQueueGenericSend>:
{
9000d49c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000d4a0:	b084      	sub	sp, #16
9000d4a2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000d4a4:	2800      	cmp	r0, #0
9000d4a6:	f000 8103 	beq.w	9000d6b0 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000d4aa:	4688      	mov	r8, r1
9000d4ac:	4604      	mov	r4, r0
9000d4ae:	461f      	mov	r7, r3
9000d4b0:	2900      	cmp	r1, #0
9000d4b2:	f000 8097 	beq.w	9000d5e4 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000d4b6:	2f02      	cmp	r7, #2
9000d4b8:	d10b      	bne.n	9000d4d2 <xQueueGenericSend+0x36>
9000d4ba:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000d4bc:	2b01      	cmp	r3, #1
9000d4be:	d008      	beq.n	9000d4d2 <xQueueGenericSend+0x36>
9000d4c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d4c4:	f383 8811 	msr	BASEPRI, r3
9000d4c8:	f3bf 8f6f 	isb	sy
9000d4cc:	f3bf 8f4f 	dsb	sy
9000d4d0:	e7fe      	b.n	9000d4d0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000d4d2:	f001 fc1f 	bl	9000ed14 <xTaskGetSchedulerState>
9000d4d6:	2800      	cmp	r0, #0
9000d4d8:	f000 80f3 	beq.w	9000d6c2 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000d4dc:	f1a7 0902 	sub.w	r9, r7, #2
9000d4e0:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d4e2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000d4e6:	fab9 f989 	clz	r9, r9
9000d4ea:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000d4ee:	f7ff fce9 	bl	9000cec4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000d4f2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000d4f4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000d4f6:	429a      	cmp	r2, r3
9000d4f8:	f0c0 80f0 	bcc.w	9000d6dc <xQueueGenericSend+0x240>
9000d4fc:	f1b9 0f00 	cmp.w	r9, #0
9000d500:	f040 80ec 	bne.w	9000d6dc <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000d504:	9b01      	ldr	r3, [sp, #4]
9000d506:	2b00      	cmp	r3, #0
9000d508:	f000 8101 	beq.w	9000d70e <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000d50c:	2d00      	cmp	r5, #0
9000d50e:	f000 80cb 	beq.w	9000d6a8 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000d512:	f7ff fcf9 	bl	9000cf08 <vPortExitCritical>
		vTaskSuspendAll();
9000d516:	f001 fa33 	bl	9000e980 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000d51a:	f7ff fcd3 	bl	9000cec4 <vPortEnterCritical>
9000d51e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000d522:	2bff      	cmp	r3, #255	@ 0xff
9000d524:	d102      	bne.n	9000d52c <xQueueGenericSend+0x90>
9000d526:	2300      	movs	r3, #0
9000d528:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000d52c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000d530:	2bff      	cmp	r3, #255	@ 0xff
9000d532:	d102      	bne.n	9000d53a <xQueueGenericSend+0x9e>
9000d534:	2300      	movs	r3, #0
9000d536:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000d53a:	f7ff fce5 	bl	9000cf08 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000d53e:	a901      	add	r1, sp, #4
9000d540:	a802      	add	r0, sp, #8
9000d542:	f001 fb9f 	bl	9000ec84 <xTaskCheckForTimeOut>
9000d546:	2800      	cmp	r0, #0
9000d548:	f040 80e5 	bne.w	9000d716 <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000d54c:	f7ff fcba 	bl	9000cec4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000d550:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000d552:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000d554:	429a      	cmp	r2, r3
9000d556:	d052      	beq.n	9000d5fe <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000d558:	f7ff fcd6 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000d55c:	f7ff fcb2 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000d560:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000d564:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d566:	2d00      	cmp	r5, #0
9000d568:	dc04      	bgt.n	9000d574 <xQueueGenericSend+0xd8>
9000d56a:	e011      	b.n	9000d590 <xQueueGenericSend+0xf4>
			--cTxLock;
9000d56c:	1e6a      	subs	r2, r5, #1
9000d56e:	b2d3      	uxtb	r3, r2
9000d570:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d572:	b16b      	cbz	r3, 9000d590 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d574:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d576:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d578:	b153      	cbz	r3, 9000d590 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d57a:	f001 fb31 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000d57e:	2800      	cmp	r0, #0
9000d580:	d0f4      	beq.n	9000d56c <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000d582:	f001 fbc1 	bl	9000ed08 <vTaskMissedYield>
			--cTxLock;
9000d586:	1e6a      	subs	r2, r5, #1
9000d588:	b2d3      	uxtb	r3, r2
9000d58a:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d58c:	2b00      	cmp	r3, #0
9000d58e:	d1f1      	bne.n	9000d574 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000d590:	23ff      	movs	r3, #255	@ 0xff
9000d592:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000d596:	f7ff fcb7 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000d59a:	f7ff fc93 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000d59e:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000d5a2:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d5a4:	2d00      	cmp	r5, #0
9000d5a6:	dd14      	ble.n	9000d5d2 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d5a8:	f104 0a10 	add.w	sl, r4, #16
9000d5ac:	e003      	b.n	9000d5b6 <xQueueGenericSend+0x11a>
				--cRxLock;
9000d5ae:	1e6a      	subs	r2, r5, #1
9000d5b0:	b2d3      	uxtb	r3, r2
9000d5b2:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d5b4:	b16b      	cbz	r3, 9000d5d2 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d5b6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d5b8:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d5ba:	b153      	cbz	r3, 9000d5d2 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d5bc:	f001 fb10 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000d5c0:	2800      	cmp	r0, #0
9000d5c2:	d0f4      	beq.n	9000d5ae <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000d5c4:	f001 fba0 	bl	9000ed08 <vTaskMissedYield>
				--cRxLock;
9000d5c8:	1e6a      	subs	r2, r5, #1
9000d5ca:	b2d3      	uxtb	r3, r2
9000d5cc:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d5ce:	2b00      	cmp	r3, #0
9000d5d0:	d1f1      	bne.n	9000d5b6 <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000d5d2:	23ff      	movs	r3, #255	@ 0xff
9000d5d4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000d5d8:	f7ff fc96 	bl	9000cf08 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000d5dc:	f001 f9d8 	bl	9000e990 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000d5e0:	2501      	movs	r5, #1
9000d5e2:	e784      	b.n	9000d4ee <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000d5e4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000d5e6:	2b00      	cmp	r3, #0
9000d5e8:	f43f af65 	beq.w	9000d4b6 <xQueueGenericSend+0x1a>
9000d5ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d5f0:	f383 8811 	msr	BASEPRI, r3
9000d5f4:	f3bf 8f6f 	isb	sy
9000d5f8:	f3bf 8f4f 	dsb	sy
9000d5fc:	e7fe      	b.n	9000d5fc <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000d5fe:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000d602:	f7ff fc81 	bl	9000cf08 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000d606:	9901      	ldr	r1, [sp, #4]
9000d608:	4650      	mov	r0, sl
9000d60a:	f001 fa5b 	bl	9000eac4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000d60e:	f7ff fc59 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000d612:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000d616:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d618:	2d00      	cmp	r5, #0
9000d61a:	dc04      	bgt.n	9000d626 <xQueueGenericSend+0x18a>
9000d61c:	e011      	b.n	9000d642 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000d61e:	1e6b      	subs	r3, r5, #1
9000d620:	b2da      	uxtb	r2, r3
9000d622:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d624:	b16a      	cbz	r2, 9000d642 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d626:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d628:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d62a:	b153      	cbz	r3, 9000d642 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d62c:	f001 fad8 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000d630:	2800      	cmp	r0, #0
9000d632:	d0f4      	beq.n	9000d61e <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000d634:	f001 fb68 	bl	9000ed08 <vTaskMissedYield>
			--cTxLock;
9000d638:	1e6b      	subs	r3, r5, #1
9000d63a:	b2da      	uxtb	r2, r3
9000d63c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d63e:	2a00      	cmp	r2, #0
9000d640:	d1f1      	bne.n	9000d626 <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000d642:	23ff      	movs	r3, #255	@ 0xff
9000d644:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000d648:	f7ff fc5e 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000d64c:	f7ff fc3a 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000d650:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000d654:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d656:	2d00      	cmp	r5, #0
9000d658:	dc04      	bgt.n	9000d664 <xQueueGenericSend+0x1c8>
9000d65a:	e011      	b.n	9000d680 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000d65c:	1e6b      	subs	r3, r5, #1
9000d65e:	b2da      	uxtb	r2, r3
9000d660:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d662:	b16a      	cbz	r2, 9000d680 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d664:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d666:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d668:	b153      	cbz	r3, 9000d680 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d66a:	f001 fab9 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000d66e:	2800      	cmp	r0, #0
9000d670:	d0f4      	beq.n	9000d65c <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000d672:	f001 fb49 	bl	9000ed08 <vTaskMissedYield>
				--cRxLock;
9000d676:	1e6b      	subs	r3, r5, #1
9000d678:	b2da      	uxtb	r2, r3
9000d67a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d67c:	2a00      	cmp	r2, #0
9000d67e:	d1f1      	bne.n	9000d664 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000d680:	23ff      	movs	r3, #255	@ 0xff
9000d682:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000d686:	f7ff fc3f 	bl	9000cf08 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000d68a:	f001 f981 	bl	9000e990 <xTaskResumeAll>
9000d68e:	2800      	cmp	r0, #0
9000d690:	d1a6      	bne.n	9000d5e0 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000d692:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d696:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d69a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d69e:	f3bf 8f4f 	dsb	sy
9000d6a2:	f3bf 8f6f 	isb	sy
9000d6a6:	e79b      	b.n	9000d5e0 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000d6a8:	a802      	add	r0, sp, #8
9000d6aa:	f001 fadf 	bl	9000ec6c <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000d6ae:	e730      	b.n	9000d512 <xQueueGenericSend+0x76>
9000d6b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d6b4:	f383 8811 	msr	BASEPRI, r3
9000d6b8:	f3bf 8f6f 	isb	sy
9000d6bc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000d6c0:	e7fe      	b.n	9000d6c0 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000d6c2:	9b01      	ldr	r3, [sp, #4]
9000d6c4:	2b00      	cmp	r3, #0
9000d6c6:	f43f af09 	beq.w	9000d4dc <xQueueGenericSend+0x40>
9000d6ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d6ce:	f383 8811 	msr	BASEPRI, r3
9000d6d2:	f3bf 8f6f 	isb	sy
9000d6d6:	f3bf 8f4f 	dsb	sy
9000d6da:	e7fe      	b.n	9000d6da <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000d6dc:	463a      	mov	r2, r7
9000d6de:	4641      	mov	r1, r8
9000d6e0:	4620      	mov	r0, r4
9000d6e2:	f7ff fd4f 	bl	9000d184 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d6e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d6e8:	2b00      	cmp	r3, #0
9000d6ea:	d151      	bne.n	9000d790 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000d6ec:	b148      	cbz	r0, 9000d702 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000d6ee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d6f2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d6f6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d6fa:	f3bf 8f4f 	dsb	sy
9000d6fe:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000d702:	f7ff fc01 	bl	9000cf08 <vPortExitCritical>
				return pdPASS;
9000d706:	2001      	movs	r0, #1
}
9000d708:	b004      	add	sp, #16
9000d70a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000d70e:	f7ff fbfb 	bl	9000cf08 <vPortExitCritical>
					return errQUEUE_FULL;
9000d712:	2000      	movs	r0, #0
9000d714:	e7f8      	b.n	9000d708 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000d716:	f7ff fbd5 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000d71a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000d71e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d720:	2d00      	cmp	r5, #0
9000d722:	dd10      	ble.n	9000d746 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d724:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000d728:	e003      	b.n	9000d732 <xQueueGenericSend+0x296>
			--cTxLock;
9000d72a:	1e6b      	subs	r3, r5, #1
9000d72c:	b2da      	uxtb	r2, r3
9000d72e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d730:	b14a      	cbz	r2, 9000d746 <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d732:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d734:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d736:	b133      	cbz	r3, 9000d746 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d738:	f001 fa52 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000d73c:	2800      	cmp	r0, #0
9000d73e:	d0f4      	beq.n	9000d72a <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000d740:	f001 fae2 	bl	9000ed08 <vTaskMissedYield>
9000d744:	e7f1      	b.n	9000d72a <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000d746:	23ff      	movs	r3, #255	@ 0xff
9000d748:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000d74c:	f7ff fbdc 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000d750:	f7ff fbb8 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000d754:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000d758:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d75a:	2d00      	cmp	r5, #0
9000d75c:	dd10      	ble.n	9000d780 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d75e:	f104 0610 	add.w	r6, r4, #16
9000d762:	e003      	b.n	9000d76c <xQueueGenericSend+0x2d0>
				--cRxLock;
9000d764:	1e6b      	subs	r3, r5, #1
9000d766:	b2da      	uxtb	r2, r3
9000d768:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d76a:	b14a      	cbz	r2, 9000d780 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d76c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d76e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d770:	b133      	cbz	r3, 9000d780 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d772:	f001 fa35 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000d776:	2800      	cmp	r0, #0
9000d778:	d0f4      	beq.n	9000d764 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000d77a:	f001 fac5 	bl	9000ed08 <vTaskMissedYield>
9000d77e:	e7f1      	b.n	9000d764 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000d780:	23ff      	movs	r3, #255	@ 0xff
9000d782:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000d786:	f7ff fbbf 	bl	9000cf08 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000d78a:	f001 f901 	bl	9000e990 <xTaskResumeAll>
			return errQUEUE_FULL;
9000d78e:	e7c0      	b.n	9000d712 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d790:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000d794:	f001 fa24 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000d798:	2800      	cmp	r0, #0
9000d79a:	d0b2      	beq.n	9000d702 <xQueueGenericSend+0x266>
9000d79c:	e7a7      	b.n	9000d6ee <xQueueGenericSend+0x252>
9000d79e:	bf00      	nop

9000d7a0 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000d7a0:	2800      	cmp	r0, #0
9000d7a2:	d04b      	beq.n	9000d83c <xQueueGenericSendFromISR+0x9c>
{
9000d7a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000d7a8:	460e      	mov	r6, r1
9000d7aa:	4604      	mov	r4, r0
9000d7ac:	4617      	mov	r7, r2
9000d7ae:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000d7b0:	b339      	cbz	r1, 9000d802 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000d7b2:	2d02      	cmp	r5, #2
9000d7b4:	d10b      	bne.n	9000d7ce <xQueueGenericSendFromISR+0x2e>
9000d7b6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000d7b8:	2b01      	cmp	r3, #1
9000d7ba:	d008      	beq.n	9000d7ce <xQueueGenericSendFromISR+0x2e>
9000d7bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d7c0:	f383 8811 	msr	BASEPRI, r3
9000d7c4:	f3bf 8f6f 	isb	sy
9000d7c8:	f3bf 8f4f 	dsb	sy
9000d7cc:	e7fe      	b.n	9000d7cc <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000d7ce:	f7ff fcab 	bl	9000d128 <vPortValidateInterruptPriority>
	__asm volatile
9000d7d2:	f3ef 8811 	mrs	r8, BASEPRI
9000d7d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d7da:	f383 8811 	msr	BASEPRI, r3
9000d7de:	f3bf 8f6f 	isb	sy
9000d7e2:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000d7e6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000d7e8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000d7ea:	429a      	cmp	r2, r3
9000d7ec:	d315      	bcc.n	9000d81a <xQueueGenericSendFromISR+0x7a>
9000d7ee:	f1a5 0002 	sub.w	r0, r5, #2
9000d7f2:	fab0 f080 	clz	r0, r0
9000d7f6:	0940      	lsrs	r0, r0, #5
9000d7f8:	b978      	cbnz	r0, 9000d81a <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000d7fa:	f388 8811 	msr	BASEPRI, r8
}
9000d7fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000d802:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000d804:	2b00      	cmp	r3, #0
9000d806:	d0d4      	beq.n	9000d7b2 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000d808:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d80c:	f383 8811 	msr	BASEPRI, r3
9000d810:	f3bf 8f6f 	isb	sy
9000d814:	f3bf 8f4f 	dsb	sy
9000d818:	e7fe      	b.n	9000d818 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000d81a:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000d81c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000d820:	4631      	mov	r1, r6
9000d822:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000d824:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000d826:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000d828:	f7ff fcac 	bl	9000d184 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000d82c:	1c6b      	adds	r3, r5, #1
9000d82e:	d00e      	beq.n	9000d84e <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000d830:	1c6b      	adds	r3, r5, #1
9000d832:	b25b      	sxtb	r3, r3
9000d834:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000d838:	2001      	movs	r0, #1
9000d83a:	e7de      	b.n	9000d7fa <xQueueGenericSendFromISR+0x5a>
9000d83c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d840:	f383 8811 	msr	BASEPRI, r3
9000d844:	f3bf 8f6f 	isb	sy
9000d848:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000d84c:	e7fe      	b.n	9000d84c <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d84e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d850:	2b00      	cmp	r3, #0
9000d852:	d0f1      	beq.n	9000d838 <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d854:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000d858:	f001 f9c2 	bl	9000ebe0 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000d85c:	2800      	cmp	r0, #0
9000d85e:	d0eb      	beq.n	9000d838 <xQueueGenericSendFromISR+0x98>
9000d860:	2f00      	cmp	r7, #0
9000d862:	d0e9      	beq.n	9000d838 <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000d864:	2301      	movs	r3, #1
9000d866:	603b      	str	r3, [r7, #0]
9000d868:	e7e6      	b.n	9000d838 <xQueueGenericSendFromISR+0x98>
9000d86a:	bf00      	nop

9000d86c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000d86c:	b360      	cbz	r0, 9000d8c8 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000d86e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000d870:	b570      	push	{r4, r5, r6, lr}
9000d872:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000d874:	b143      	cbz	r3, 9000d888 <xQueueGiveFromISR+0x1c>
9000d876:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d87a:	f383 8811 	msr	BASEPRI, r3
9000d87e:	f3bf 8f6f 	isb	sy
9000d882:	f3bf 8f4f 	dsb	sy
9000d886:	e7fe      	b.n	9000d886 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000d888:	6803      	ldr	r3, [r0, #0]
9000d88a:	460d      	mov	r5, r1
9000d88c:	b32b      	cbz	r3, 9000d8da <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000d88e:	f7ff fc4b 	bl	9000d128 <vPortValidateInterruptPriority>
	__asm volatile
9000d892:	f3ef 8611 	mrs	r6, BASEPRI
9000d896:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d89a:	f383 8811 	msr	BASEPRI, r3
9000d89e:	f3bf 8f6f 	isb	sy
9000d8a2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000d8a6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000d8a8:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000d8aa:	429a      	cmp	r2, r3
9000d8ac:	d921      	bls.n	9000d8f2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000d8ae:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d8b2:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000d8b4:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d8b6:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000d8b8:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000d8ba:	d01e      	beq.n	9000d8fa <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000d8bc:	3301      	adds	r3, #1
9000d8be:	b25b      	sxtb	r3, r3
9000d8c0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000d8c4:	2001      	movs	r0, #1
9000d8c6:	e015      	b.n	9000d8f4 <xQueueGiveFromISR+0x88>
	__asm volatile
9000d8c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d8cc:	f383 8811 	msr	BASEPRI, r3
9000d8d0:	f3bf 8f6f 	isb	sy
9000d8d4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000d8d8:	e7fe      	b.n	9000d8d8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000d8da:	6883      	ldr	r3, [r0, #8]
9000d8dc:	2b00      	cmp	r3, #0
9000d8de:	d0d6      	beq.n	9000d88e <xQueueGiveFromISR+0x22>
9000d8e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d8e4:	f383 8811 	msr	BASEPRI, r3
9000d8e8:	f3bf 8f6f 	isb	sy
9000d8ec:	f3bf 8f4f 	dsb	sy
9000d8f0:	e7fe      	b.n	9000d8f0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000d8f2:	2000      	movs	r0, #0
	__asm volatile
9000d8f4:	f386 8811 	msr	BASEPRI, r6
}
9000d8f8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d8fa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000d8fc:	2b00      	cmp	r3, #0
9000d8fe:	d0e1      	beq.n	9000d8c4 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d900:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000d904:	f001 f96c 	bl	9000ebe0 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000d908:	2d00      	cmp	r5, #0
9000d90a:	d0db      	beq.n	9000d8c4 <xQueueGiveFromISR+0x58>
9000d90c:	2800      	cmp	r0, #0
9000d90e:	d0d9      	beq.n	9000d8c4 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000d910:	2301      	movs	r3, #1
9000d912:	602b      	str	r3, [r5, #0]
9000d914:	e7d6      	b.n	9000d8c4 <xQueueGiveFromISR+0x58>
9000d916:	bf00      	nop

9000d918 <xQueueReceive>:
{
9000d918:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000d91c:	b085      	sub	sp, #20
9000d91e:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000d920:	2800      	cmp	r0, #0
9000d922:	f000 8164 	beq.w	9000dbee <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000d926:	460f      	mov	r7, r1
9000d928:	4604      	mov	r4, r0
9000d92a:	2900      	cmp	r1, #0
9000d92c:	f000 8097 	beq.w	9000da5e <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000d930:	f001 f9f0 	bl	9000ed14 <xTaskGetSchedulerState>
9000d934:	2800      	cmp	r0, #0
9000d936:	f000 809f 	beq.w	9000da78 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
9000d93a:	f7ff fac3 	bl	9000cec4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000d93e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000d940:	2d00      	cmp	r5, #0
9000d942:	d175      	bne.n	9000da30 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000d944:	9b01      	ldr	r3, [sp, #4]
9000d946:	2b00      	cmp	r3, #0
9000d948:	f000 80f4 	beq.w	9000db34 <xQueueReceive+0x21c>
		prvLockQueue( pxQueue );
9000d94c:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d94e:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000d952:	a802      	add	r0, sp, #8
9000d954:	f001 f98a 	bl	9000ec6c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000d958:	f7ff fad6 	bl	9000cf08 <vPortExitCritical>
		vTaskSuspendAll();
9000d95c:	f001 f810 	bl	9000e980 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000d960:	f7ff fab0 	bl	9000cec4 <vPortEnterCritical>
9000d964:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000d968:	2bff      	cmp	r3, #255	@ 0xff
9000d96a:	d101      	bne.n	9000d970 <xQueueReceive+0x58>
9000d96c:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000d970:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000d974:	2bff      	cmp	r3, #255	@ 0xff
9000d976:	d101      	bne.n	9000d97c <xQueueReceive+0x64>
9000d978:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000d97c:	f7ff fac4 	bl	9000cf08 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000d980:	a901      	add	r1, sp, #4
9000d982:	a802      	add	r0, sp, #8
9000d984:	f001 f97e 	bl	9000ec84 <xTaskCheckForTimeOut>
9000d988:	2800      	cmp	r0, #0
9000d98a:	f040 8082 	bne.w	9000da92 <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
9000d98e:	f7ff fa99 	bl	9000cec4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000d992:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000d994:	2b00      	cmp	r3, #0
9000d996:	f000 80d3 	beq.w	9000db40 <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
9000d99a:	f7ff fab5 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000d99e:	f7ff fa91 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000d9a2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000d9a6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d9a8:	2d00      	cmp	r5, #0
9000d9aa:	dd14      	ble.n	9000d9d6 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d9ac:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000d9b0:	e003      	b.n	9000d9ba <xQueueReceive+0xa2>
			--cTxLock;
9000d9b2:	1e6b      	subs	r3, r5, #1
9000d9b4:	b2da      	uxtb	r2, r3
9000d9b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d9b8:	b16a      	cbz	r2, 9000d9d6 <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d9ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d9bc:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000d9be:	b153      	cbz	r3, 9000d9d6 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000d9c0:	f001 f90e 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000d9c4:	2800      	cmp	r0, #0
9000d9c6:	d0f4      	beq.n	9000d9b2 <xQueueReceive+0x9a>
						vTaskMissedYield();
9000d9c8:	f001 f99e 	bl	9000ed08 <vTaskMissedYield>
			--cTxLock;
9000d9cc:	1e6b      	subs	r3, r5, #1
9000d9ce:	b2da      	uxtb	r2, r3
9000d9d0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000d9d2:	2a00      	cmp	r2, #0
9000d9d4:	d1f1      	bne.n	9000d9ba <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
9000d9d6:	23ff      	movs	r3, #255	@ 0xff
9000d9d8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000d9dc:	f7ff fa94 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000d9e0:	f7ff fa70 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000d9e4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000d9e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d9ea:	2d00      	cmp	r5, #0
9000d9ec:	dd14      	ble.n	9000da18 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d9ee:	f104 0910 	add.w	r9, r4, #16
9000d9f2:	e003      	b.n	9000d9fc <xQueueReceive+0xe4>
				--cRxLock;
9000d9f4:	1e6b      	subs	r3, r5, #1
9000d9f6:	b2da      	uxtb	r2, r3
9000d9f8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000d9fa:	b16a      	cbz	r2, 9000da18 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000d9fc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000d9fe:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000da00:	b153      	cbz	r3, 9000da18 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000da02:	f001 f8ed 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000da06:	2800      	cmp	r0, #0
9000da08:	d0f4      	beq.n	9000d9f4 <xQueueReceive+0xdc>
					vTaskMissedYield();
9000da0a:	f001 f97d 	bl	9000ed08 <vTaskMissedYield>
				--cRxLock;
9000da0e:	1e6b      	subs	r3, r5, #1
9000da10:	b2da      	uxtb	r2, r3
9000da12:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000da14:	2a00      	cmp	r2, #0
9000da16:	d1f1      	bne.n	9000d9fc <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
9000da18:	23ff      	movs	r3, #255	@ 0xff
9000da1a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000da1e:	f7ff fa73 	bl	9000cf08 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000da22:	f000 ffb5 	bl	9000e990 <xTaskResumeAll>
		taskENTER_CRITICAL();
9000da26:	f7ff fa4d 	bl	9000cec4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000da2a:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000da2c:	2d00      	cmp	r5, #0
9000da2e:	d07d      	beq.n	9000db2c <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000da30:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000da32:	b152      	cbz	r2, 9000da4a <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000da34:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000da36:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000da38:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000da3a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000da3c:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000da3e:	d301      	bcc.n	9000da44 <xQueueReceive+0x12c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000da40:	6821      	ldr	r1, [r4, #0]
9000da42:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000da44:	4638      	mov	r0, r7
9000da46:	f01b f86a 	bl	90028b1e <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000da4a:	3d01      	subs	r5, #1
9000da4c:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000da4e:	6923      	ldr	r3, [r4, #16]
9000da50:	2b00      	cmp	r3, #0
9000da52:	f040 80d5 	bne.w	9000dc00 <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
9000da56:	f7ff fa57 	bl	9000cf08 <vPortExitCritical>
				return pdPASS;
9000da5a:	2001      	movs	r0, #1
9000da5c:	e06d      	b.n	9000db3a <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000da5e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000da60:	2b00      	cmp	r3, #0
9000da62:	f43f af65 	beq.w	9000d930 <xQueueReceive+0x18>
	__asm volatile
9000da66:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da6a:	f383 8811 	msr	BASEPRI, r3
9000da6e:	f3bf 8f6f 	isb	sy
9000da72:	f3bf 8f4f 	dsb	sy
9000da76:	e7fe      	b.n	9000da76 <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000da78:	9b01      	ldr	r3, [sp, #4]
9000da7a:	2b00      	cmp	r3, #0
9000da7c:	f43f af5d 	beq.w	9000d93a <xQueueReceive+0x22>
9000da80:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da84:	f383 8811 	msr	BASEPRI, r3
9000da88:	f3bf 8f6f 	isb	sy
9000da8c:	f3bf 8f4f 	dsb	sy
9000da90:	e7fe      	b.n	9000da90 <xQueueReceive+0x178>
	taskENTER_CRITICAL();
9000da92:	f7ff fa17 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000da96:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000da9a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000da9c:	2d00      	cmp	r5, #0
9000da9e:	dc04      	bgt.n	9000daaa <xQueueReceive+0x192>
9000daa0:	e011      	b.n	9000dac6 <xQueueReceive+0x1ae>
			--cTxLock;
9000daa2:	1e6b      	subs	r3, r5, #1
9000daa4:	b2da      	uxtb	r2, r3
9000daa6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000daa8:	b16a      	cbz	r2, 9000dac6 <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000daaa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000daac:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000daae:	b153      	cbz	r3, 9000dac6 <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dab0:	f001 f896 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000dab4:	2800      	cmp	r0, #0
9000dab6:	d0f4      	beq.n	9000daa2 <xQueueReceive+0x18a>
						vTaskMissedYield();
9000dab8:	f001 f926 	bl	9000ed08 <vTaskMissedYield>
			--cTxLock;
9000dabc:	1e6b      	subs	r3, r5, #1
9000dabe:	b2da      	uxtb	r2, r3
9000dac0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dac2:	2a00      	cmp	r2, #0
9000dac4:	d1f1      	bne.n	9000daaa <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
9000dac6:	23ff      	movs	r3, #255	@ 0xff
9000dac8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000dacc:	f7ff fa1c 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dad0:	f7ff f9f8 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dad4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000dad8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dada:	2d00      	cmp	r5, #0
9000dadc:	dd14      	ble.n	9000db08 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dade:	f104 0910 	add.w	r9, r4, #16
9000dae2:	e003      	b.n	9000daec <xQueueReceive+0x1d4>
				--cRxLock;
9000dae4:	1e6b      	subs	r3, r5, #1
9000dae6:	b2da      	uxtb	r2, r3
9000dae8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000daea:	b16a      	cbz	r2, 9000db08 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000daec:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000daee:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000daf0:	b153      	cbz	r3, 9000db08 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000daf2:	f001 f875 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000daf6:	2800      	cmp	r0, #0
9000daf8:	d0f4      	beq.n	9000dae4 <xQueueReceive+0x1cc>
					vTaskMissedYield();
9000dafa:	f001 f905 	bl	9000ed08 <vTaskMissedYield>
				--cRxLock;
9000dafe:	1e6b      	subs	r3, r5, #1
9000db00:	b2da      	uxtb	r2, r3
9000db02:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000db04:	2a00      	cmp	r2, #0
9000db06:	d1f1      	bne.n	9000daec <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
9000db08:	23ff      	movs	r3, #255	@ 0xff
9000db0a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000db0e:	f7ff f9fb 	bl	9000cf08 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000db12:	f000 ff3d 	bl	9000e990 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000db16:	f7ff f9d5 	bl	9000cec4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000db1a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000db1c:	b153      	cbz	r3, 9000db34 <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
9000db1e:	f7ff f9f3 	bl	9000cf08 <vPortExitCritical>
		taskENTER_CRITICAL();
9000db22:	f7ff f9cf 	bl	9000cec4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000db26:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000db28:	2d00      	cmp	r5, #0
9000db2a:	d181      	bne.n	9000da30 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000db2c:	9b01      	ldr	r3, [sp, #4]
9000db2e:	2b00      	cmp	r3, #0
9000db30:	f47f af12 	bne.w	9000d958 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000db34:	f7ff f9e8 	bl	9000cf08 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000db38:	2000      	movs	r0, #0
}
9000db3a:	b005      	add	sp, #20
9000db3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000db40:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000db44:	f7ff f9e0 	bl	9000cf08 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000db48:	9901      	ldr	r1, [sp, #4]
9000db4a:	4648      	mov	r0, r9
9000db4c:	f000 ffba 	bl	9000eac4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000db50:	f7ff f9b8 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000db54:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000db58:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000db5a:	2d00      	cmp	r5, #0
9000db5c:	dc04      	bgt.n	9000db68 <xQueueReceive+0x250>
9000db5e:	e011      	b.n	9000db84 <xQueueReceive+0x26c>
			--cTxLock;
9000db60:	1e6b      	subs	r3, r5, #1
9000db62:	b2da      	uxtb	r2, r3
9000db64:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000db66:	b16a      	cbz	r2, 9000db84 <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000db68:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000db6a:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000db6c:	b153      	cbz	r3, 9000db84 <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000db6e:	f001 f837 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000db72:	2800      	cmp	r0, #0
9000db74:	d0f4      	beq.n	9000db60 <xQueueReceive+0x248>
						vTaskMissedYield();
9000db76:	f001 f8c7 	bl	9000ed08 <vTaskMissedYield>
			--cTxLock;
9000db7a:	1e6b      	subs	r3, r5, #1
9000db7c:	b2da      	uxtb	r2, r3
9000db7e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000db80:	2a00      	cmp	r2, #0
9000db82:	d1f1      	bne.n	9000db68 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
9000db84:	23ff      	movs	r3, #255	@ 0xff
9000db86:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000db8a:	f7ff f9bd 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000db8e:	f7ff f999 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000db92:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000db96:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000db98:	2d00      	cmp	r5, #0
9000db9a:	dd14      	ble.n	9000dbc6 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000db9c:	f104 0910 	add.w	r9, r4, #16
9000dba0:	e003      	b.n	9000dbaa <xQueueReceive+0x292>
				--cRxLock;
9000dba2:	1e6b      	subs	r3, r5, #1
9000dba4:	b2da      	uxtb	r2, r3
9000dba6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dba8:	b16a      	cbz	r2, 9000dbc6 <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dbaa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dbac:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dbae:	b153      	cbz	r3, 9000dbc6 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dbb0:	f001 f816 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000dbb4:	2800      	cmp	r0, #0
9000dbb6:	d0f4      	beq.n	9000dba2 <xQueueReceive+0x28a>
					vTaskMissedYield();
9000dbb8:	f001 f8a6 	bl	9000ed08 <vTaskMissedYield>
				--cRxLock;
9000dbbc:	1e6b      	subs	r3, r5, #1
9000dbbe:	b2da      	uxtb	r2, r3
9000dbc0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dbc2:	2a00      	cmp	r2, #0
9000dbc4:	d1f1      	bne.n	9000dbaa <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
9000dbc6:	23ff      	movs	r3, #255	@ 0xff
9000dbc8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000dbcc:	f7ff f99c 	bl	9000cf08 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000dbd0:	f000 fede 	bl	9000e990 <xTaskResumeAll>
9000dbd4:	2800      	cmp	r0, #0
9000dbd6:	d1a4      	bne.n	9000db22 <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
9000dbd8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dbdc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000dbe0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000dbe4:	f3bf 8f4f 	dsb	sy
9000dbe8:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000dbec:	e799      	b.n	9000db22 <xQueueReceive+0x20a>
9000dbee:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dbf2:	f383 8811 	msr	BASEPRI, r3
9000dbf6:	f3bf 8f6f 	isb	sy
9000dbfa:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000dbfe:	e7fe      	b.n	9000dbfe <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dc00:	f104 0010 	add.w	r0, r4, #16
9000dc04:	f000 ffec 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000dc08:	2800      	cmp	r0, #0
9000dc0a:	f43f af24 	beq.w	9000da56 <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
9000dc0e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dc12:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000dc16:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000dc1a:	f3bf 8f4f 	dsb	sy
9000dc1e:	f3bf 8f6f 	isb	sy
9000dc22:	e718      	b.n	9000da56 <xQueueReceive+0x13e>

9000dc24 <xQueueSemaphoreTake>:
{
9000dc24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000dc28:	b084      	sub	sp, #16
9000dc2a:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000dc2c:	2800      	cmp	r0, #0
9000dc2e:	d05e      	beq.n	9000dcee <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
9000dc30:	6c07      	ldr	r7, [r0, #64]	@ 0x40
9000dc32:	4604      	mov	r4, r0
9000dc34:	b147      	cbz	r7, 9000dc48 <xQueueSemaphoreTake+0x24>
9000dc36:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc3a:	f383 8811 	msr	BASEPRI, r3
9000dc3e:	f3bf 8f6f 	isb	sy
9000dc42:	f3bf 8f4f 	dsb	sy
9000dc46:	e7fe      	b.n	9000dc46 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000dc48:	f001 f864 	bl	9000ed14 <xTaskGetSchedulerState>
9000dc4c:	4605      	mov	r5, r0
9000dc4e:	2800      	cmp	r0, #0
9000dc50:	d056      	beq.n	9000dd00 <xQueueSemaphoreTake+0xdc>
9000dc52:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dc54:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
9000dc58:	f7ff f934 	bl	9000cec4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000dc5c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000dc5e:	2b00      	cmp	r3, #0
9000dc60:	f040 814d 	bne.w	9000defe <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
9000dc64:	9b01      	ldr	r3, [sp, #4]
9000dc66:	2b00      	cmp	r3, #0
9000dc68:	f000 813e 	beq.w	9000dee8 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
9000dc6c:	2d00      	cmp	r5, #0
9000dc6e:	f000 80a3 	beq.w	9000ddb8 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
9000dc72:	f7ff f949 	bl	9000cf08 <vPortExitCritical>
		vTaskSuspendAll();
9000dc76:	f000 fe83 	bl	9000e980 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000dc7a:	f7ff f923 	bl	9000cec4 <vPortEnterCritical>
9000dc7e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000dc82:	2bff      	cmp	r3, #255	@ 0xff
9000dc84:	d102      	bne.n	9000dc8c <xQueueSemaphoreTake+0x68>
9000dc86:	2300      	movs	r3, #0
9000dc88:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000dc8c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000dc90:	2bff      	cmp	r3, #255	@ 0xff
9000dc92:	d102      	bne.n	9000dc9a <xQueueSemaphoreTake+0x76>
9000dc94:	2300      	movs	r3, #0
9000dc96:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000dc9a:	f7ff f935 	bl	9000cf08 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000dc9e:	a901      	add	r1, sp, #4
9000dca0:	a802      	add	r0, sp, #8
9000dca2:	f000 ffef 	bl	9000ec84 <xTaskCheckForTimeOut>
9000dca6:	2800      	cmp	r0, #0
9000dca8:	d137      	bne.n	9000dd1a <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000dcaa:	f7ff f90b 	bl	9000cec4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000dcae:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000dcb0:	2b00      	cmp	r3, #0
9000dcb2:	f000 80ae 	beq.w	9000de12 <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
9000dcb6:	f7ff f927 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dcba:	f7ff f903 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dcbe:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000dcc2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dcc4:	2d00      	cmp	r5, #0
9000dcc6:	dd7f      	ble.n	9000ddc8 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dcc8:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000dccc:	e004      	b.n	9000dcd8 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000dcce:	1e6b      	subs	r3, r5, #1
9000dcd0:	b2da      	uxtb	r2, r3
9000dcd2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dcd4:	2a00      	cmp	r2, #0
9000dcd6:	d077      	beq.n	9000ddc8 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dcd8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dcda:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dcdc:	2b00      	cmp	r3, #0
9000dcde:	d073      	beq.n	9000ddc8 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dce0:	f000 ff7e 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000dce4:	2800      	cmp	r0, #0
9000dce6:	d0f2      	beq.n	9000dcce <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
9000dce8:	f001 f80e 	bl	9000ed08 <vTaskMissedYield>
9000dcec:	e7ef      	b.n	9000dcce <xQueueSemaphoreTake+0xaa>
9000dcee:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dcf2:	f383 8811 	msr	BASEPRI, r3
9000dcf6:	f3bf 8f6f 	isb	sy
9000dcfa:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000dcfe:	e7fe      	b.n	9000dcfe <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000dd00:	9b01      	ldr	r3, [sp, #4]
9000dd02:	2b00      	cmp	r3, #0
9000dd04:	f000 80d7 	beq.w	9000deb6 <xQueueSemaphoreTake+0x292>
9000dd08:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dd0c:	f383 8811 	msr	BASEPRI, r3
9000dd10:	f3bf 8f6f 	isb	sy
9000dd14:	f3bf 8f4f 	dsb	sy
9000dd18:	e7fe      	b.n	9000dd18 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000dd1a:	f7ff f8d3 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dd1e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000dd22:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd24:	2d00      	cmp	r5, #0
9000dd26:	dc04      	bgt.n	9000dd32 <xQueueSemaphoreTake+0x10e>
9000dd28:	e011      	b.n	9000dd4e <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000dd2a:	1e6b      	subs	r3, r5, #1
9000dd2c:	b2da      	uxtb	r2, r3
9000dd2e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd30:	b16a      	cbz	r2, 9000dd4e <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd32:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd34:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd36:	b153      	cbz	r3, 9000dd4e <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd38:	f000 ff52 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000dd3c:	2800      	cmp	r0, #0
9000dd3e:	d0f4      	beq.n	9000dd2a <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000dd40:	f000 ffe2 	bl	9000ed08 <vTaskMissedYield>
			--cTxLock;
9000dd44:	1e6b      	subs	r3, r5, #1
9000dd46:	b2da      	uxtb	r2, r3
9000dd48:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd4a:	2a00      	cmp	r2, #0
9000dd4c:	d1f1      	bne.n	9000dd32 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000dd4e:	23ff      	movs	r3, #255	@ 0xff
9000dd50:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000dd54:	f7ff f8d8 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dd58:	f7ff f8b4 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dd5c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000dd60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dd62:	2d00      	cmp	r5, #0
9000dd64:	dd14      	ble.n	9000dd90 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dd66:	f104 0810 	add.w	r8, r4, #16
9000dd6a:	e003      	b.n	9000dd74 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000dd6c:	1e6b      	subs	r3, r5, #1
9000dd6e:	b2da      	uxtb	r2, r3
9000dd70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dd72:	b16a      	cbz	r2, 9000dd90 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dd74:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dd76:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dd78:	b153      	cbz	r3, 9000dd90 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dd7a:	f000 ff31 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000dd7e:	2800      	cmp	r0, #0
9000dd80:	d0f4      	beq.n	9000dd6c <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000dd82:	f000 ffc1 	bl	9000ed08 <vTaskMissedYield>
				--cRxLock;
9000dd86:	1e6b      	subs	r3, r5, #1
9000dd88:	b2da      	uxtb	r2, r3
9000dd8a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dd8c:	2a00      	cmp	r2, #0
9000dd8e:	d1f1      	bne.n	9000dd74 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000dd90:	23ff      	movs	r3, #255	@ 0xff
9000dd92:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000dd96:	f7ff f8b7 	bl	9000cf08 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000dd9a:	f000 fdf9 	bl	9000e990 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000dd9e:	f7ff f891 	bl	9000cec4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000dda2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000dda4:	b963      	cbnz	r3, 9000ddc0 <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
9000dda6:	f7ff f8af 	bl	9000cf08 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000ddaa:	2f00      	cmp	r7, #0
9000ddac:	f040 8085 	bne.w	9000deba <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
9000ddb0:	2000      	movs	r0, #0
}
9000ddb2:	b004      	add	sp, #16
9000ddb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
9000ddb8:	a802      	add	r0, sp, #8
9000ddba:	f000 ff57 	bl	9000ec6c <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000ddbe:	e758      	b.n	9000dc72 <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
9000ddc0:	f7ff f8a2 	bl	9000cf08 <vPortExitCritical>
	return xReturn;
9000ddc4:	2501      	movs	r5, #1
9000ddc6:	e747      	b.n	9000dc58 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
9000ddc8:	23ff      	movs	r3, #255	@ 0xff
9000ddca:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ddce:	f7ff f89b 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ddd2:	f7ff f877 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ddd6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ddda:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dddc:	2d00      	cmp	r5, #0
9000ddde:	dd10      	ble.n	9000de02 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dde0:	f104 0810 	add.w	r8, r4, #16
9000dde4:	e003      	b.n	9000ddee <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
9000dde6:	1e6b      	subs	r3, r5, #1
9000dde8:	b2da      	uxtb	r2, r3
9000ddea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ddec:	b14a      	cbz	r2, 9000de02 <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ddee:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ddf0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ddf2:	b133      	cbz	r3, 9000de02 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ddf4:	f000 fef4 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000ddf8:	2800      	cmp	r0, #0
9000ddfa:	d0f4      	beq.n	9000dde6 <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
9000ddfc:	f000 ff84 	bl	9000ed08 <vTaskMissedYield>
9000de00:	e7f1      	b.n	9000dde6 <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
9000de02:	23ff      	movs	r3, #255	@ 0xff
9000de04:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000de08:	f7ff f87e 	bl	9000cf08 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000de0c:	f000 fdc0 	bl	9000e990 <xTaskResumeAll>
9000de10:	e7d8      	b.n	9000ddc4 <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
9000de12:	f7ff f879 	bl	9000cf08 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000de16:	6823      	ldr	r3, [r4, #0]
9000de18:	2b00      	cmp	r3, #0
9000de1a:	d05c      	beq.n	9000ded6 <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000de1c:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000de20:	9901      	ldr	r1, [sp, #4]
9000de22:	4640      	mov	r0, r8
9000de24:	f000 fe4e 	bl	9000eac4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000de28:	f7ff f84c 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000de2c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000de30:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de32:	2d00      	cmp	r5, #0
9000de34:	dc04      	bgt.n	9000de40 <xQueueSemaphoreTake+0x21c>
9000de36:	e00d      	b.n	9000de54 <xQueueSemaphoreTake+0x230>
			--cTxLock;
9000de38:	1e6b      	subs	r3, r5, #1
9000de3a:	b2da      	uxtb	r2, r3
9000de3c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de3e:	b14a      	cbz	r2, 9000de54 <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000de40:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000de42:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000de44:	b133      	cbz	r3, 9000de54 <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000de46:	f000 fecb 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000de4a:	2800      	cmp	r0, #0
9000de4c:	d0f4      	beq.n	9000de38 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
9000de4e:	f000 ff5b 	bl	9000ed08 <vTaskMissedYield>
9000de52:	e7f1      	b.n	9000de38 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
9000de54:	23ff      	movs	r3, #255	@ 0xff
9000de56:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000de5a:	f7ff f855 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000de5e:	f7ff f831 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000de62:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000de66:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de68:	2d00      	cmp	r5, #0
9000de6a:	dd10      	ble.n	9000de8e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de6c:	f104 0810 	add.w	r8, r4, #16
9000de70:	e003      	b.n	9000de7a <xQueueSemaphoreTake+0x256>
				--cRxLock;
9000de72:	1e6b      	subs	r3, r5, #1
9000de74:	b2da      	uxtb	r2, r3
9000de76:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de78:	b14a      	cbz	r2, 9000de8e <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de7a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de7c:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de7e:	b133      	cbz	r3, 9000de8e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de80:	f000 feae 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000de84:	2800      	cmp	r0, #0
9000de86:	d0f4      	beq.n	9000de72 <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
9000de88:	f000 ff3e 	bl	9000ed08 <vTaskMissedYield>
9000de8c:	e7f1      	b.n	9000de72 <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
9000de8e:	23ff      	movs	r3, #255	@ 0xff
9000de90:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000de94:	f7ff f838 	bl	9000cf08 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000de98:	f000 fd7a 	bl	9000e990 <xTaskResumeAll>
9000de9c:	2800      	cmp	r0, #0
9000de9e:	d191      	bne.n	9000ddc4 <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
9000dea0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dea4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000dea8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000deac:	f3bf 8f4f 	dsb	sy
9000deb0:	f3bf 8f6f 	isb	sy
9000deb4:	e786      	b.n	9000ddc4 <xQueueSemaphoreTake+0x1a0>
9000deb6:	462f      	mov	r7, r5
9000deb8:	e6cc      	b.n	9000dc54 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000deba:	f7ff f803 	bl	9000cec4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000debe:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000dec0:	b119      	cbz	r1, 9000deca <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000dec2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000dec4:	6819      	ldr	r1, [r3, #0]
9000dec6:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000deca:	68a0      	ldr	r0, [r4, #8]
9000decc:	f000 ffb6 	bl	9000ee3c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000ded0:	f7ff f81a 	bl	9000cf08 <vPortExitCritical>
9000ded4:	e76c      	b.n	9000ddb0 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000ded6:	f7fe fff5 	bl	9000cec4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000deda:	68a0      	ldr	r0, [r4, #8]
9000dedc:	f000 ff2a 	bl	9000ed34 <xTaskPriorityInherit>
9000dee0:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000dee2:	f7ff f811 	bl	9000cf08 <vPortExitCritical>
9000dee6:	e799      	b.n	9000de1c <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000dee8:	2f00      	cmp	r7, #0
9000deea:	d0f1      	beq.n	9000ded0 <xQueueSemaphoreTake+0x2ac>
9000deec:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000def0:	f383 8811 	msr	BASEPRI, r3
9000def4:	f3bf 8f6f 	isb	sy
9000def8:	f3bf 8f4f 	dsb	sy
9000defc:	e7fe      	b.n	9000defc <xQueueSemaphoreTake+0x2d8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000defe:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000df00:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000df02:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000df04:	b12a      	cbz	r2, 9000df12 <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000df06:	6923      	ldr	r3, [r4, #16]
9000df08:	b93b      	cbnz	r3, 9000df1a <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
9000df0a:	f7fe fffd 	bl	9000cf08 <vPortExitCritical>
				return pdPASS;
9000df0e:	2001      	movs	r0, #1
9000df10:	e74f      	b.n	9000ddb2 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000df12:	f000 ffe3 	bl	9000eedc <pvTaskIncrementMutexHeldCount>
9000df16:	60a0      	str	r0, [r4, #8]
9000df18:	e7f5      	b.n	9000df06 <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df1a:	f104 0010 	add.w	r0, r4, #16
9000df1e:	f000 fe5f 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000df22:	2800      	cmp	r0, #0
9000df24:	d0f1      	beq.n	9000df0a <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
9000df26:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000df2a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000df2e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000df32:	f3bf 8f4f 	dsb	sy
9000df36:	f3bf 8f6f 	isb	sy
9000df3a:	e7e6      	b.n	9000df0a <xQueueSemaphoreTake+0x2e6>

9000df3c <xQueueReceiveFromISR>:
{
9000df3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000df40:	b310      	cbz	r0, 9000df88 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000df42:	460f      	mov	r7, r1
9000df44:	4604      	mov	r4, r0
9000df46:	4616      	mov	r6, r2
9000df48:	b191      	cbz	r1, 9000df70 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000df4a:	f7ff f8ed 	bl	9000d128 <vPortValidateInterruptPriority>
	__asm volatile
9000df4e:	f3ef 8911 	mrs	r9, BASEPRI
9000df52:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df56:	f383 8811 	msr	BASEPRI, r3
9000df5a:	f3bf 8f6f 	isb	sy
9000df5e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000df62:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000df64:	b9cd      	cbnz	r5, 9000df9a <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000df66:	4628      	mov	r0, r5
	__asm volatile
9000df68:	f389 8811 	msr	BASEPRI, r9
}
9000df6c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000df70:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000df72:	2b00      	cmp	r3, #0
9000df74:	d0e9      	beq.n	9000df4a <xQueueReceiveFromISR+0xe>
	__asm volatile
9000df76:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df7a:	f383 8811 	msr	BASEPRI, r3
9000df7e:	f3bf 8f6f 	isb	sy
9000df82:	f3bf 8f4f 	dsb	sy
9000df86:	e7fe      	b.n	9000df86 <xQueueReceiveFromISR+0x4a>
9000df88:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df8c:	f383 8811 	msr	BASEPRI, r3
9000df90:	f3bf 8f6f 	isb	sy
9000df94:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000df98:	e7fe      	b.n	9000df98 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000df9a:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000df9e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000dfa0:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000dfa4:	b142      	cbz	r2, 9000dfb8 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000dfa6:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000dfa8:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000dfaa:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000dfac:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000dfae:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000dfb0:	d21c      	bcs.n	9000dfec <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000dfb2:	4638      	mov	r0, r7
9000dfb4:	f01a fdb3 	bl	90028b1e <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000dfb8:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000dfba:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000dfbe:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000dfc0:	d006      	beq.n	9000dfd0 <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000dfc2:	f108 0301 	add.w	r3, r8, #1
9000dfc6:	b25b      	sxtb	r3, r3
9000dfc8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000dfcc:	2001      	movs	r0, #1
9000dfce:	e7cb      	b.n	9000df68 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dfd0:	6923      	ldr	r3, [r4, #16]
9000dfd2:	2b00      	cmp	r3, #0
9000dfd4:	d0fa      	beq.n	9000dfcc <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dfd6:	f104 0010 	add.w	r0, r4, #16
9000dfda:	f000 fe01 	bl	9000ebe0 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000dfde:	2e00      	cmp	r6, #0
9000dfe0:	d0f4      	beq.n	9000dfcc <xQueueReceiveFromISR+0x90>
9000dfe2:	2800      	cmp	r0, #0
9000dfe4:	d0f2      	beq.n	9000dfcc <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000dfe6:	2301      	movs	r3, #1
9000dfe8:	6033      	str	r3, [r6, #0]
9000dfea:	e7ef      	b.n	9000dfcc <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000dfec:	6821      	ldr	r1, [r4, #0]
9000dfee:	60e1      	str	r1, [r4, #12]
9000dff0:	e7df      	b.n	9000dfb2 <xQueueReceiveFromISR+0x76>
9000dff2:	bf00      	nop
9000dff4:	0000      	movs	r0, r0
	...

9000dff8 <vQueueDelete>:
	configASSERT( pxQueue );
9000dff8:	b1e0      	cbz	r0, 9000e034 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000dffa:	4b21      	ldr	r3, [pc, #132]	@ (9000e080 <vQueueDelete+0x88>)
9000dffc:	685a      	ldr	r2, [r3, #4]
9000dffe:	4290      	cmp	r0, r2
9000e000:	d02b      	beq.n	9000e05a <vQueueDelete+0x62>
9000e002:	68da      	ldr	r2, [r3, #12]
9000e004:	4290      	cmp	r0, r2
9000e006:	d02a      	beq.n	9000e05e <vQueueDelete+0x66>
9000e008:	695a      	ldr	r2, [r3, #20]
9000e00a:	4290      	cmp	r0, r2
9000e00c:	d029      	beq.n	9000e062 <vQueueDelete+0x6a>
9000e00e:	69da      	ldr	r2, [r3, #28]
9000e010:	4290      	cmp	r0, r2
9000e012:	d028      	beq.n	9000e066 <vQueueDelete+0x6e>
9000e014:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000e016:	4290      	cmp	r0, r2
9000e018:	d027      	beq.n	9000e06a <vQueueDelete+0x72>
9000e01a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000e01c:	4290      	cmp	r0, r2
9000e01e:	d014      	beq.n	9000e04a <vQueueDelete+0x52>
9000e020:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000e022:	4290      	cmp	r0, r2
9000e024:	d023      	beq.n	9000e06e <vQueueDelete+0x76>
9000e026:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000e028:	4290      	cmp	r0, r2
9000e02a:	d022      	beq.n	9000e072 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000e02c:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000e030:	b14b      	cbz	r3, 9000e046 <vQueueDelete+0x4e>
}
9000e032:	4770      	bx	lr
9000e034:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e038:	f383 8811 	msr	BASEPRI, r3
9000e03c:	f3bf 8f6f 	isb	sy
9000e040:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e044:	e7fe      	b.n	9000e044 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000e046:	f7fe be21 	b.w	9000cc8c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e04a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000e04c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000e050:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000e078 <vQueueDelete+0x80>
9000e054:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000e058:	e7e8      	b.n	9000e02c <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e05a:	2200      	movs	r2, #0
9000e05c:	e7f6      	b.n	9000e04c <vQueueDelete+0x54>
9000e05e:	2201      	movs	r2, #1
9000e060:	e7f4      	b.n	9000e04c <vQueueDelete+0x54>
9000e062:	2202      	movs	r2, #2
9000e064:	e7f2      	b.n	9000e04c <vQueueDelete+0x54>
9000e066:	2203      	movs	r2, #3
9000e068:	e7f0      	b.n	9000e04c <vQueueDelete+0x54>
9000e06a:	2204      	movs	r2, #4
9000e06c:	e7ee      	b.n	9000e04c <vQueueDelete+0x54>
9000e06e:	2206      	movs	r2, #6
9000e070:	e7ec      	b.n	9000e04c <vQueueDelete+0x54>
9000e072:	2207      	movs	r2, #7
9000e074:	e7ea      	b.n	9000e04c <vQueueDelete+0x54>
9000e076:	bf00      	nop
	...
9000e080:	24021240 	.word	0x24021240

9000e084 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000e084:	4b12      	ldr	r3, [pc, #72]	@ (9000e0d0 <vQueueAddToRegistry+0x4c>)
9000e086:	681a      	ldr	r2, [r3, #0]
9000e088:	b17a      	cbz	r2, 9000e0aa <vQueueAddToRegistry+0x26>
9000e08a:	689a      	ldr	r2, [r3, #8]
9000e08c:	b162      	cbz	r2, 9000e0a8 <vQueueAddToRegistry+0x24>
9000e08e:	691a      	ldr	r2, [r3, #16]
9000e090:	b192      	cbz	r2, 9000e0b8 <vQueueAddToRegistry+0x34>
9000e092:	699a      	ldr	r2, [r3, #24]
9000e094:	b192      	cbz	r2, 9000e0bc <vQueueAddToRegistry+0x38>
9000e096:	6a1a      	ldr	r2, [r3, #32]
9000e098:	b192      	cbz	r2, 9000e0c0 <vQueueAddToRegistry+0x3c>
9000e09a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000e09c:	b192      	cbz	r2, 9000e0c4 <vQueueAddToRegistry+0x40>
9000e09e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000e0a0:	b192      	cbz	r2, 9000e0c8 <vQueueAddToRegistry+0x44>
9000e0a2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000e0a4:	b192      	cbz	r2, 9000e0cc <vQueueAddToRegistry+0x48>
	}
9000e0a6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e0a8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e0aa:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000e0ae:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e0b2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000e0b6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e0b8:	2202      	movs	r2, #2
9000e0ba:	e7f6      	b.n	9000e0aa <vQueueAddToRegistry+0x26>
9000e0bc:	2203      	movs	r2, #3
9000e0be:	e7f4      	b.n	9000e0aa <vQueueAddToRegistry+0x26>
9000e0c0:	2204      	movs	r2, #4
9000e0c2:	e7f2      	b.n	9000e0aa <vQueueAddToRegistry+0x26>
9000e0c4:	2205      	movs	r2, #5
9000e0c6:	e7f0      	b.n	9000e0aa <vQueueAddToRegistry+0x26>
9000e0c8:	2206      	movs	r2, #6
9000e0ca:	e7ee      	b.n	9000e0aa <vQueueAddToRegistry+0x26>
9000e0cc:	2207      	movs	r2, #7
9000e0ce:	e7ec      	b.n	9000e0aa <vQueueAddToRegistry+0x26>
9000e0d0:	24021240 	.word	0x24021240

9000e0d4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000e0d4:	b570      	push	{r4, r5, r6, lr}
9000e0d6:	4605      	mov	r5, r0
9000e0d8:	460e      	mov	r6, r1
9000e0da:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000e0dc:	f7fe fef2 	bl	9000cec4 <vPortEnterCritical>
9000e0e0:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000e0e4:	2bff      	cmp	r3, #255	@ 0xff
9000e0e6:	d102      	bne.n	9000e0ee <vQueueWaitForMessageRestricted+0x1a>
9000e0e8:	2300      	movs	r3, #0
9000e0ea:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000e0ee:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000e0f2:	2bff      	cmp	r3, #255	@ 0xff
9000e0f4:	d102      	bne.n	9000e0fc <vQueueWaitForMessageRestricted+0x28>
9000e0f6:	2300      	movs	r3, #0
9000e0f8:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000e0fc:	f7fe ff04 	bl	9000cf08 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000e100:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000e102:	2b00      	cmp	r3, #0
9000e104:	d043      	beq.n	9000e18e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000e106:	f7fe fedd 	bl	9000cec4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e10a:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000e10e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e110:	2c00      	cmp	r4, #0
9000e112:	dd14      	ble.n	9000e13e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e114:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000e118:	e003      	b.n	9000e122 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000e11a:	1e63      	subs	r3, r4, #1
9000e11c:	b2da      	uxtb	r2, r3
9000e11e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e120:	b16a      	cbz	r2, 9000e13e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e122:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e124:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e126:	b153      	cbz	r3, 9000e13e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e128:	f000 fd5a 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000e12c:	2800      	cmp	r0, #0
9000e12e:	d0f4      	beq.n	9000e11a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000e130:	f000 fdea 	bl	9000ed08 <vTaskMissedYield>
			--cTxLock;
9000e134:	1e63      	subs	r3, r4, #1
9000e136:	b2da      	uxtb	r2, r3
9000e138:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e13a:	2a00      	cmp	r2, #0
9000e13c:	d1f1      	bne.n	9000e122 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e13e:	23ff      	movs	r3, #255	@ 0xff
9000e140:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e144:	f7fe fee0 	bl	9000cf08 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e148:	f7fe febc 	bl	9000cec4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e14c:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000e150:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e152:	2c00      	cmp	r4, #0
9000e154:	dd14      	ble.n	9000e180 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e156:	f105 0610 	add.w	r6, r5, #16
9000e15a:	e003      	b.n	9000e164 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000e15c:	1e63      	subs	r3, r4, #1
9000e15e:	b2da      	uxtb	r2, r3
9000e160:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e162:	b16a      	cbz	r2, 9000e180 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e164:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e166:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e168:	b153      	cbz	r3, 9000e180 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e16a:	f000 fd39 	bl	9000ebe0 <xTaskRemoveFromEventList>
9000e16e:	2800      	cmp	r0, #0
9000e170:	d0f4      	beq.n	9000e15c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000e172:	f000 fdc9 	bl	9000ed08 <vTaskMissedYield>
				--cRxLock;
9000e176:	1e63      	subs	r3, r4, #1
9000e178:	b2da      	uxtb	r2, r3
9000e17a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e17c:	2a00      	cmp	r2, #0
9000e17e:	d1f1      	bne.n	9000e164 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000e180:	23ff      	movs	r3, #255	@ 0xff
9000e182:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000e186:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000e18a:	f7fe bebd 	b.w	9000cf08 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000e18e:	4622      	mov	r2, r4
9000e190:	4631      	mov	r1, r6
9000e192:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000e196:	f000 fcd9 	bl	9000eb4c <vTaskPlaceOnEventListRestricted>
9000e19a:	e7b4      	b.n	9000e106 <vQueueWaitForMessageRestricted+0x32>

9000e19c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000e19c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000e1a0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000e1a2:	f7fe fe8f 	bl	9000cec4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000e1a6:	4a34      	ldr	r2, [pc, #208]	@ (9000e278 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000e1a8:	4e34      	ldr	r6, [pc, #208]	@ (9000e27c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000e1aa:	6813      	ldr	r3, [r2, #0]
9000e1ac:	3301      	adds	r3, #1
9000e1ae:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000e1b0:	6833      	ldr	r3, [r6, #0]
9000e1b2:	2b00      	cmp	r3, #0
9000e1b4:	d031      	beq.n	9000e21a <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000e1b6:	4c32      	ldr	r4, [pc, #200]	@ (9000e280 <prvAddNewTaskToReadyList+0xe4>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e1b8:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000e1ba:	6823      	ldr	r3, [r4, #0]
9000e1bc:	b333      	cbz	r3, 9000e20c <prvAddNewTaskToReadyList+0x70>
9000e1be:	4f31      	ldr	r7, [pc, #196]	@ (9000e284 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000e1c0:	4a31      	ldr	r2, [pc, #196]	@ (9000e288 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000e1c2:	4932      	ldr	r1, [pc, #200]	@ (9000e28c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000e1c4:	6813      	ldr	r3, [r2, #0]
9000e1c6:	3301      	adds	r3, #1
9000e1c8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000e1ca:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000e1cc:	680b      	ldr	r3, [r1, #0]
9000e1ce:	4283      	cmp	r3, r0
9000e1d0:	d200      	bcs.n	9000e1d4 <prvAddNewTaskToReadyList+0x38>
9000e1d2:	6008      	str	r0, [r1, #0]
9000e1d4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000e1d8:	1d29      	adds	r1, r5, #4
9000e1da:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000e1de:	f7fe fdcb 	bl	9000cd78 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000e1e2:	f7fe fe91 	bl	9000cf08 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000e1e6:	6823      	ldr	r3, [r4, #0]
9000e1e8:	b173      	cbz	r3, 9000e208 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000e1ea:	6832      	ldr	r2, [r6, #0]
9000e1ec:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000e1ee:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000e1f0:	429a      	cmp	r2, r3
9000e1f2:	d209      	bcs.n	9000e208 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000e1f4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e1f8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e1fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e200:	f3bf 8f4f 	dsb	sy
9000e204:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000e208:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e20c:	6833      	ldr	r3, [r6, #0]
9000e20e:	4f1d      	ldr	r7, [pc, #116]	@ (9000e284 <prvAddNewTaskToReadyList+0xe8>)
9000e210:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000e212:	4283      	cmp	r3, r0
9000e214:	d8d4      	bhi.n	9000e1c0 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000e216:	6035      	str	r5, [r6, #0]
9000e218:	e7d2      	b.n	9000e1c0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000e21a:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000e21c:	6813      	ldr	r3, [r2, #0]
9000e21e:	2b01      	cmp	r3, #1
9000e220:	d003      	beq.n	9000e22a <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e222:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000e224:	4f17      	ldr	r7, [pc, #92]	@ (9000e284 <prvAddNewTaskToReadyList+0xe8>)
9000e226:	4c16      	ldr	r4, [pc, #88]	@ (9000e280 <prvAddNewTaskToReadyList+0xe4>)
9000e228:	e7ca      	b.n	9000e1c0 <prvAddNewTaskToReadyList+0x24>
9000e22a:	4f16      	ldr	r7, [pc, #88]	@ (9000e284 <prvAddNewTaskToReadyList+0xe8>)
9000e22c:	463c      	mov	r4, r7
9000e22e:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000e232:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000e234:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000e236:	f7fe fd8f 	bl	9000cd58 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000e23a:	45a0      	cmp	r8, r4
9000e23c:	d1f9      	bne.n	9000e232 <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000e23e:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 9000e2a4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000e242:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000e2a8 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000e246:	4648      	mov	r0, r9
9000e248:	4c0d      	ldr	r4, [pc, #52]	@ (9000e280 <prvAddNewTaskToReadyList+0xe4>)
9000e24a:	f7fe fd85 	bl	9000cd58 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000e24e:	4640      	mov	r0, r8
9000e250:	f7fe fd82 	bl	9000cd58 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000e254:	480e      	ldr	r0, [pc, #56]	@ (9000e290 <prvAddNewTaskToReadyList+0xf4>)
9000e256:	f7fe fd7f 	bl	9000cd58 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000e25a:	480e      	ldr	r0, [pc, #56]	@ (9000e294 <prvAddNewTaskToReadyList+0xf8>)
9000e25c:	f7fe fd7c 	bl	9000cd58 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000e260:	480d      	ldr	r0, [pc, #52]	@ (9000e298 <prvAddNewTaskToReadyList+0xfc>)
9000e262:	f7fe fd79 	bl	9000cd58 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000e266:	4b0d      	ldr	r3, [pc, #52]	@ (9000e29c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000e268:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000e26a:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000e26e:	4b0c      	ldr	r3, [pc, #48]	@ (9000e2a0 <prvAddNewTaskToReadyList+0x104>)
9000e270:	f8c3 8000 	str.w	r8, [r3]
}
9000e274:	e7a4      	b.n	9000e1c0 <prvAddNewTaskToReadyList+0x24>
9000e276:	bf00      	nop
9000e278:	240212a4 	.word	0x240212a4
9000e27c:	24021778 	.word	0x24021778
9000e280:	24021298 	.word	0x24021298
9000e284:	24021318 	.word	0x24021318
9000e288:	24021288 	.word	0x24021288
9000e28c:	2402129c 	.word	0x2402129c
9000e290:	240212d4 	.word	0x240212d4
9000e294:	240212c0 	.word	0x240212c0
9000e298:	240212a8 	.word	0x240212a8
9000e29c:	240212ec 	.word	0x240212ec
9000e2a0:	240212e8 	.word	0x240212e8
9000e2a4:	24021304 	.word	0x24021304
9000e2a8:	240212f0 	.word	0x240212f0

9000e2ac <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000e2ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000e2b0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000e2b2:	0096      	lsls	r6, r2, #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000e2b4:	4607      	mov	r7, r0
9000e2b6:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000e2b8:	4632      	mov	r2, r6
9000e2ba:	21a5      	movs	r1, #165	@ 0xa5
9000e2bc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
9000e2be:	4698      	mov	r8, r3
9000e2c0:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000e2c4:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000e2c6:	f01a faf3 	bl	900288b0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000e2ca:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000e2cc:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000e2ce:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
9000e2d2:	2d00      	cmp	r5, #0
9000e2d4:	d074      	beq.n	9000e3c0 <prvInitialiseNewTask.constprop.0+0x114>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e2d6:	782b      	ldrb	r3, [r5, #0]
9000e2d8:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000e2dc:	2b00      	cmp	r3, #0
9000e2de:	d036      	beq.n	9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e2e0:	786b      	ldrb	r3, [r5, #1]
9000e2e2:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000e2e6:	b393      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e2e8:	78ab      	ldrb	r3, [r5, #2]
9000e2ea:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000e2ee:	b373      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e2f0:	78eb      	ldrb	r3, [r5, #3]
9000e2f2:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000e2f6:	b353      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e2f8:	792b      	ldrb	r3, [r5, #4]
9000e2fa:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000e2fe:	b333      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e300:	796b      	ldrb	r3, [r5, #5]
9000e302:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000e306:	b313      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e308:	79ab      	ldrb	r3, [r5, #6]
9000e30a:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000e30e:	b1f3      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e310:	79eb      	ldrb	r3, [r5, #7]
9000e312:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000e316:	b1d3      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e318:	7a2b      	ldrb	r3, [r5, #8]
9000e31a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000e31e:	b1b3      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e320:	7a6b      	ldrb	r3, [r5, #9]
9000e322:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000e326:	b193      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e328:	7aab      	ldrb	r3, [r5, #10]
9000e32a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000e32e:	b173      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e330:	7aeb      	ldrb	r3, [r5, #11]
9000e332:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000e336:	b153      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e338:	7b2b      	ldrb	r3, [r5, #12]
9000e33a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000e33e:	b133      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e340:	7b6b      	ldrb	r3, [r5, #13]
9000e342:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000e346:	b113      	cbz	r3, 9000e34e <prvInitialiseNewTask.constprop.0+0xa2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000e348:	7bab      	ldrb	r3, [r5, #14]
9000e34a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000e34e:	2300      	movs	r3, #0
9000e350:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000e354:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000e356:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000e35a:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000e35c:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000e35e:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000e362:	bf28      	it	cs
9000e364:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000e366:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000e368:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000e36a:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000e36e:	f7fe fcff 	bl	9000cd70 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000e372:	f104 0018 	add.w	r0, r4, #24
9000e376:	f7fe fcfb 	bl	9000cd70 <vListInitialiseItem>
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000e37a:	4651      	mov	r1, sl
9000e37c:	224c      	movs	r2, #76	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000e37e:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
9000e380:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000e384:	f104 0058 	add.w	r0, r4, #88	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000e388:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000e38a:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000e38c:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000e390:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000e394:	f01a fa8c 	bl	900288b0 <memset>
9000e398:	4b0b      	ldr	r3, [pc, #44]	@ (9000e3c8 <prvInitialiseNewTask.constprop.0+0x11c>)
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000e39a:	4642      	mov	r2, r8
9000e39c:	4639      	mov	r1, r7
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000e39e:	f103 0568 	add.w	r5, r3, #104	@ 0x68
9000e3a2:	65e3      	str	r3, [r4, #92]	@ 0x5c
9000e3a4:	33d0      	adds	r3, #208	@ 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000e3a6:	4630      	mov	r0, r6
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
9000e3a8:	6625      	str	r5, [r4, #96]	@ 0x60
9000e3aa:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000e3ac:	f7fe fd5c 	bl	9000ce68 <pxPortInitialiseStack>
9000e3b0:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000e3b2:	f1b9 0f00 	cmp.w	r9, #0
9000e3b6:	d001      	beq.n	9000e3bc <prvInitialiseNewTask.constprop.0+0x110>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000e3b8:	f8c9 4000 	str.w	r4, [r9]
}
9000e3bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000e3c0:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000e3c4:	e7c6      	b.n	9000e354 <prvInitialiseNewTask.constprop.0+0xa8>
9000e3c6:	bf00      	nop
9000e3c8:	24022318 	.word	0x24022318

9000e3cc <prvIdleTask>:
{
9000e3cc:	b580      	push	{r7, lr}
9000e3ce:	4d24      	ldr	r5, [pc, #144]	@ (9000e460 <prvIdleTask+0x94>)
9000e3d0:	4f24      	ldr	r7, [pc, #144]	@ (9000e464 <prvIdleTask+0x98>)
9000e3d2:	4e25      	ldr	r6, [pc, #148]	@ (9000e468 <prvIdleTask+0x9c>)
9000e3d4:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 9000e46c <prvIdleTask+0xa0>
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000e3d8:	682b      	ldr	r3, [r5, #0]
9000e3da:	b35b      	cbz	r3, 9000e434 <prvIdleTask+0x68>
		{
			taskENTER_CRITICAL();
9000e3dc:	f7fe fd72 	bl	9000cec4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e3e0:	68fb      	ldr	r3, [r7, #12]
9000e3e2:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e3e4:	1d20      	adds	r0, r4, #4
9000e3e6:	f7fe fced 	bl	9000cdc4 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000e3ea:	6833      	ldr	r3, [r6, #0]
9000e3ec:	3b01      	subs	r3, #1
9000e3ee:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
9000e3f0:	682b      	ldr	r3, [r5, #0]
9000e3f2:	3b01      	subs	r3, #1
9000e3f4:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
9000e3f6:	f7fe fd87 	bl	9000cf08 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
9000e3fa:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9000e3fe:	f01a fab1 	bl	90028964 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000e402:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
9000e406:	b163      	cbz	r3, 9000e422 <prvIdleTask+0x56>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000e408:	2b01      	cmp	r3, #1
9000e40a:	d024      	beq.n	9000e456 <prvIdleTask+0x8a>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000e40c:	2b02      	cmp	r3, #2
9000e40e:	d0e3      	beq.n	9000e3d8 <prvIdleTask+0xc>
9000e410:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e414:	f383 8811 	msr	BASEPRI, r3
9000e418:	f3bf 8f6f 	isb	sy
9000e41c:	f3bf 8f4f 	dsb	sy
9000e420:	e7fe      	b.n	9000e420 <prvIdleTask+0x54>
				vPortFree( pxTCB->pxStack );
9000e422:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000e424:	f7fe fc32 	bl	9000cc8c <vPortFree>
				vPortFree( pxTCB );
9000e428:	4620      	mov	r0, r4
9000e42a:	f7fe fc2f 	bl	9000cc8c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000e42e:	682b      	ldr	r3, [r5, #0]
9000e430:	2b00      	cmp	r3, #0
9000e432:	d1d3      	bne.n	9000e3dc <prvIdleTask+0x10>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000e434:	f8d8 3000 	ldr.w	r3, [r8]
9000e438:	2b01      	cmp	r3, #1
9000e43a:	d909      	bls.n	9000e450 <prvIdleTask+0x84>
				taskYIELD();
9000e43c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e440:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e444:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e448:	f3bf 8f4f 	dsb	sy
9000e44c:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000e450:	f7f5 f942 	bl	900036d8 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000e454:	e7c0      	b.n	9000e3d8 <prvIdleTask+0xc>
				vPortFree( pxTCB );
9000e456:	4620      	mov	r0, r4
9000e458:	f7fe fc18 	bl	9000cc8c <vPortFree>
9000e45c:	e7bc      	b.n	9000e3d8 <prvIdleTask+0xc>
9000e45e:	bf00      	nop
9000e460:	240212bc 	.word	0x240212bc
9000e464:	240212c0 	.word	0x240212c0
9000e468:	240212a4 	.word	0x240212a4
9000e46c:	24021318 	.word	0x24021318

9000e470 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000e470:	4b49      	ldr	r3, [pc, #292]	@ (9000e598 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000e472:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000e476:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000e478:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000e47a:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000e47c:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000e47e:	2e00      	cmp	r6, #0
9000e480:	d03e      	beq.n	9000e500 <xTaskIncrementTick.part.0+0x90>
9000e482:	4b46      	ldr	r3, [pc, #280]	@ (9000e59c <xTaskIncrementTick.part.0+0x12c>)
9000e484:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000e486:	681b      	ldr	r3, [r3, #0]
9000e488:	429e      	cmp	r6, r3
9000e48a:	d346      	bcc.n	9000e51a <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e48c:	4f44      	ldr	r7, [pc, #272]	@ (9000e5a0 <xTaskIncrementTick.part.0+0x130>)
9000e48e:	683b      	ldr	r3, [r7, #0]
9000e490:	681d      	ldr	r5, [r3, #0]
9000e492:	2d00      	cmp	r5, #0
9000e494:	d077      	beq.n	9000e586 <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000e496:	2500      	movs	r5, #0
9000e498:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 9000e5b0 <xTaskIncrementTick.part.0+0x140>
9000e49c:	f8df a114 	ldr.w	sl, [pc, #276]	@ 9000e5b4 <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000e4a0:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 9000e5b8 <xTaskIncrementTick.part.0+0x148>
9000e4a4:	e020      	b.n	9000e4e8 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e4a6:	f7fe fc8d 	bl	9000cdc4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000e4aa:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000e4ac:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000e4b0:	b10b      	cbz	r3, 9000e4b6 <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000e4b2:	f7fe fc87 	bl	9000cdc4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000e4b6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000e4b8:	4659      	mov	r1, fp
9000e4ba:	f8d8 2000 	ldr.w	r2, [r8]
9000e4be:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000e4c2:	4293      	cmp	r3, r2
9000e4c4:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000e4c8:	d901      	bls.n	9000e4ce <xTaskIncrementTick.part.0+0x5e>
9000e4ca:	f8c8 3000 	str.w	r3, [r8]
9000e4ce:	f7fe fc53 	bl	9000cd78 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000e4d2:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e4d6:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000e4d8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000e4da:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e4dc:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000e4de:	4291      	cmp	r1, r2
9000e4e0:	bf28      	it	cs
9000e4e2:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e4e4:	2b00      	cmp	r3, #0
9000e4e6:	d052      	beq.n	9000e58e <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e4e8:	683b      	ldr	r3, [r7, #0]
9000e4ea:	68db      	ldr	r3, [r3, #12]
9000e4ec:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000e4ee:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e4f0:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
9000e4f4:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e4f6:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
9000e4f8:	d2d5      	bcs.n	9000e4a6 <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9000e4fa:	9a01      	ldr	r2, [sp, #4]
9000e4fc:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000e4fe:	e011      	b.n	9000e524 <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
9000e500:	4b27      	ldr	r3, [pc, #156]	@ (9000e5a0 <xTaskIncrementTick.part.0+0x130>)
9000e502:	681a      	ldr	r2, [r3, #0]
9000e504:	6812      	ldr	r2, [r2, #0]
9000e506:	b30a      	cbz	r2, 9000e54c <xTaskIncrementTick.part.0+0xdc>
9000e508:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e50c:	f383 8811 	msr	BASEPRI, r3
9000e510:	f3bf 8f6f 	isb	sy
9000e514:	f3bf 8f4f 	dsb	sy
9000e518:	e7fe      	b.n	9000e518 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
9000e51a:	2500      	movs	r5, #0
9000e51c:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 9000e5b0 <xTaskIncrementTick.part.0+0x140>
9000e520:	f8df a090 	ldr.w	sl, [pc, #144]	@ 9000e5b4 <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000e524:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000e528:	491e      	ldr	r1, [pc, #120]	@ (9000e5a4 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000e52a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000e52c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000e530:	009b      	lsls	r3, r3, #2
9000e532:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000e536:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000e538:	2a02      	cmp	r2, #2
9000e53a:	bf28      	it	cs
9000e53c:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000e53e:	2b00      	cmp	r3, #0
}
9000e540:	bf0c      	ite	eq
9000e542:	4628      	moveq	r0, r5
9000e544:	2001      	movne	r0, #1
9000e546:	b003      	add	sp, #12
9000e548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000e54c:	4a16      	ldr	r2, [pc, #88]	@ (9000e5a8 <xTaskIncrementTick.part.0+0x138>)
9000e54e:	6818      	ldr	r0, [r3, #0]
9000e550:	6811      	ldr	r1, [r2, #0]
9000e552:	6019      	str	r1, [r3, #0]
9000e554:	4915      	ldr	r1, [pc, #84]	@ (9000e5ac <xTaskIncrementTick.part.0+0x13c>)
9000e556:	6010      	str	r0, [r2, #0]
9000e558:	680a      	ldr	r2, [r1, #0]
9000e55a:	3201      	adds	r2, #1
9000e55c:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e55e:	681a      	ldr	r2, [r3, #0]
9000e560:	6812      	ldr	r2, [r2, #0]
9000e562:	b93a      	cbnz	r2, 9000e574 <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000e564:	4b0d      	ldr	r3, [pc, #52]	@ (9000e59c <xTaskIncrementTick.part.0+0x12c>)
9000e566:	461a      	mov	r2, r3
9000e568:	9301      	str	r3, [sp, #4]
9000e56a:	f04f 33ff 	mov.w	r3, #4294967295
9000e56e:	6013      	str	r3, [r2, #0]
9000e570:	4613      	mov	r3, r2
9000e572:	e788      	b.n	9000e486 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e574:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000e576:	4a09      	ldr	r2, [pc, #36]	@ (9000e59c <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e578:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000e57a:	9201      	str	r2, [sp, #4]
9000e57c:	68db      	ldr	r3, [r3, #12]
9000e57e:	685b      	ldr	r3, [r3, #4]
9000e580:	6013      	str	r3, [r2, #0]
9000e582:	4613      	mov	r3, r2
	}
}
9000e584:	e77f      	b.n	9000e486 <xTaskIncrementTick.part.0+0x16>
9000e586:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 9000e5b0 <xTaskIncrementTick.part.0+0x140>
9000e58a:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000e5b4 <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000e58e:	f04f 33ff 	mov.w	r3, #4294967295
9000e592:	9a01      	ldr	r2, [sp, #4]
9000e594:	6013      	str	r3, [r2, #0]
					break;
9000e596:	e7c5      	b.n	9000e524 <xTaskIncrementTick.part.0+0xb4>
9000e598:	240212a0 	.word	0x240212a0
9000e59c:	24021284 	.word	0x24021284
9000e5a0:	240212ec 	.word	0x240212ec
9000e5a4:	24021290 	.word	0x24021290
9000e5a8:	240212e8 	.word	0x240212e8
9000e5ac:	2402128c 	.word	0x2402128c
9000e5b0:	24021318 	.word	0x24021318
9000e5b4:	24021778 	.word	0x24021778
9000e5b8:	2402129c 	.word	0x2402129c

9000e5bc <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000e5bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000e5c0:	4d43      	ldr	r5, [pc, #268]	@ (9000e6d0 <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
9000e5c2:	f7fe fc7f 	bl	9000cec4 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000e5c6:	682b      	ldr	r3, [r5, #0]
9000e5c8:	3b01      	subs	r3, #1
9000e5ca:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000e5cc:	682b      	ldr	r3, [r5, #0]
9000e5ce:	2b00      	cmp	r3, #0
9000e5d0:	d168      	bne.n	9000e6a4 <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000e5d2:	4b40      	ldr	r3, [pc, #256]	@ (9000e6d4 <xTaskResumeAll.part.0+0x118>)
9000e5d4:	681b      	ldr	r3, [r3, #0]
9000e5d6:	2b00      	cmp	r3, #0
9000e5d8:	d064      	beq.n	9000e6a4 <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000e5da:	4e3f      	ldr	r6, [pc, #252]	@ (9000e6d8 <xTaskResumeAll.part.0+0x11c>)
9000e5dc:	6833      	ldr	r3, [r6, #0]
9000e5de:	2b00      	cmp	r3, #0
9000e5e0:	d073      	beq.n	9000e6ca <xTaskResumeAll.part.0+0x10e>
9000e5e2:	4f3e      	ldr	r7, [pc, #248]	@ (9000e6dc <xTaskResumeAll.part.0+0x120>)
9000e5e4:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 9000e6ec <xTaskResumeAll.part.0+0x130>
9000e5e8:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 9000e6f0 <xTaskResumeAll.part.0+0x134>
9000e5ec:	f8df a104 	ldr.w	sl, [pc, #260]	@ 9000e6f4 <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e5f0:	68f3      	ldr	r3, [r6, #12]
9000e5f2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e5f6:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000e5fa:	f10b 0018 	add.w	r0, fp, #24
9000e5fe:	f7fe fbe1 	bl	9000cdc4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000e602:	4620      	mov	r0, r4
9000e604:	f7fe fbde 	bl	9000cdc4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000e608:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000e60c:	4621      	mov	r1, r4
9000e60e:	683c      	ldr	r4, [r7, #0]
9000e610:	eb02 0082 	add.w	r0, r2, r2, lsl #2
9000e614:	42a2      	cmp	r2, r4
9000e616:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000e61a:	d900      	bls.n	9000e61e <xTaskResumeAll.part.0+0x62>
9000e61c:	603a      	str	r2, [r7, #0]
9000e61e:	f7fe fbab 	bl	9000cd78 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000e622:	f8d8 1000 	ldr.w	r1, [r8]
9000e626:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000e62a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
9000e62c:	429a      	cmp	r2, r3
9000e62e:	d33f      	bcc.n	9000e6b0 <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
9000e630:	2301      	movs	r3, #1
9000e632:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000e636:	6833      	ldr	r3, [r6, #0]
9000e638:	2b00      	cmp	r3, #0
9000e63a:	d1d9      	bne.n	9000e5f0 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e63c:	4b28      	ldr	r3, [pc, #160]	@ (9000e6e0 <xTaskResumeAll.part.0+0x124>)
9000e63e:	681a      	ldr	r2, [r3, #0]
9000e640:	6812      	ldr	r2, [r2, #0]
9000e642:	2a00      	cmp	r2, #0
9000e644:	d03c      	beq.n	9000e6c0 <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e646:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000e648:	4b26      	ldr	r3, [pc, #152]	@ (9000e6e4 <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000e64a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000e64c:	68d2      	ldr	r2, [r2, #12]
9000e64e:	6852      	ldr	r2, [r2, #4]
9000e650:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000e652:	4e25      	ldr	r6, [pc, #148]	@ (9000e6e8 <xTaskResumeAll.part.0+0x12c>)
9000e654:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000e656:	b194      	cbz	r4, 9000e67e <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
9000e658:	2701      	movs	r7, #1
9000e65a:	e006      	b.n	9000e66a <xTaskResumeAll.part.0+0xae>
9000e65c:	f7ff ff08 	bl	9000e470 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000e660:	b108      	cbz	r0, 9000e666 <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
9000e662:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000e666:	3c01      	subs	r4, #1
9000e668:	d008      	beq.n	9000e67c <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000e66a:	682b      	ldr	r3, [r5, #0]
9000e66c:	2b00      	cmp	r3, #0
9000e66e:	d0f5      	beq.n	9000e65c <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
9000e670:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000e672:	3c01      	subs	r4, #1
		++xPendedTicks;
9000e674:	f103 0301 	add.w	r3, r3, #1
9000e678:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000e67a:	d1f6      	bne.n	9000e66a <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
9000e67c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000e67e:	f8da 3000 	ldr.w	r3, [sl]
9000e682:	b17b      	cbz	r3, 9000e6a4 <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
9000e684:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e688:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e68c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e690:	f3bf 8f4f 	dsb	sy
9000e694:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000e698:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000e69a:	f7fe fc35 	bl	9000cf08 <vPortExitCritical>
}
9000e69e:	4620      	mov	r0, r4
9000e6a0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
9000e6a4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000e6a6:	f7fe fc2f 	bl	9000cf08 <vPortExitCritical>
}
9000e6aa:	4620      	mov	r0, r4
9000e6ac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000e6b0:	6833      	ldr	r3, [r6, #0]
9000e6b2:	2b00      	cmp	r3, #0
9000e6b4:	d19c      	bne.n	9000e5f0 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000e6b6:	4b0a      	ldr	r3, [pc, #40]	@ (9000e6e0 <xTaskResumeAll.part.0+0x124>)
9000e6b8:	681a      	ldr	r2, [r3, #0]
9000e6ba:	6812      	ldr	r2, [r2, #0]
9000e6bc:	2a00      	cmp	r2, #0
9000e6be:	d1c2      	bne.n	9000e646 <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
9000e6c0:	4b08      	ldr	r3, [pc, #32]	@ (9000e6e4 <xTaskResumeAll.part.0+0x128>)
9000e6c2:	f04f 32ff 	mov.w	r2, #4294967295
9000e6c6:	601a      	str	r2, [r3, #0]
9000e6c8:	e7c3      	b.n	9000e652 <xTaskResumeAll.part.0+0x96>
9000e6ca:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000e6f4 <xTaskResumeAll.part.0+0x138>
9000e6ce:	e7c0      	b.n	9000e652 <xTaskResumeAll.part.0+0x96>
9000e6d0:	24021280 	.word	0x24021280
9000e6d4:	240212a4 	.word	0x240212a4
9000e6d8:	240212d4 	.word	0x240212d4
9000e6dc:	2402129c 	.word	0x2402129c
9000e6e0:	240212ec 	.word	0x240212ec
9000e6e4:	24021284 	.word	0x24021284
9000e6e8:	24021294 	.word	0x24021294
9000e6ec:	24021318 	.word	0x24021318
9000e6f0:	24021778 	.word	0x24021778
9000e6f4:	24021290 	.word	0x24021290

9000e6f8 <xTaskCreateStatic>:
	{
9000e6f8:	b530      	push	{r4, r5, lr}
9000e6fa:	b087      	sub	sp, #28
9000e6fc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
9000e6fe:	b1c4      	cbz	r4, 9000e732 <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
9000e700:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9000e702:	b16d      	cbz	r5, 9000e720 <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
9000e704:	25ac      	movs	r5, #172	@ 0xac
9000e706:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
9000e708:	9d05      	ldr	r5, [sp, #20]
9000e70a:	2dac      	cmp	r5, #172	@ 0xac
9000e70c:	d01a      	beq.n	9000e744 <xTaskCreateStatic+0x4c>
9000e70e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e712:	f383 8811 	msr	BASEPRI, r3
9000e716:	f3bf 8f6f 	isb	sy
9000e71a:	f3bf 8f4f 	dsb	sy
9000e71e:	e7fe      	b.n	9000e71e <xTaskCreateStatic+0x26>
9000e720:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e724:	f383 8811 	msr	BASEPRI, r3
9000e728:	f3bf 8f6f 	isb	sy
9000e72c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000e730:	e7fe      	b.n	9000e730 <xTaskCreateStatic+0x38>
9000e732:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e736:	f383 8811 	msr	BASEPRI, r3
9000e73a:	f3bf 8f6f 	isb	sy
9000e73e:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000e742:	e7fe      	b.n	9000e742 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000e744:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9000e746:	632c      	str	r4, [r5, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000e748:	2402      	movs	r4, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000e74a:	9502      	str	r5, [sp, #8]
9000e74c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9000e74e:	9500      	str	r5, [sp, #0]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000e750:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9000e752:	f885 40a9 	strb.w	r4, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000e756:	ac04      	add	r4, sp, #16
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000e758:	9d05      	ldr	r5, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000e75a:	9401      	str	r4, [sp, #4]
9000e75c:	f7ff fda6 	bl	9000e2ac <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
9000e760:	980c      	ldr	r0, [sp, #48]	@ 0x30
9000e762:	f7ff fd1b 	bl	9000e19c <prvAddNewTaskToReadyList>
	}
9000e766:	9804      	ldr	r0, [sp, #16]
9000e768:	b007      	add	sp, #28
9000e76a:	bd30      	pop	{r4, r5, pc}

9000e76c <xTaskCreate>:
	{
9000e76c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e770:	4607      	mov	r7, r0
9000e772:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000e774:	0090      	lsls	r0, r2, #2
	{
9000e776:	4615      	mov	r5, r2
9000e778:	4688      	mov	r8, r1
9000e77a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000e77c:	f7fe f9ca 	bl	9000cb14 <pvPortMalloc>
			if( pxStack != NULL )
9000e780:	b1f0      	cbz	r0, 9000e7c0 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000e782:	4604      	mov	r4, r0
9000e784:	20ac      	movs	r0, #172	@ 0xac
9000e786:	f7fe f9c5 	bl	9000cb14 <pvPortMalloc>
				if( pxNewTCB != NULL )
9000e78a:	4606      	mov	r6, r0
9000e78c:	b1a8      	cbz	r0, 9000e7ba <xTaskCreate+0x4e>
					pxNewTCB->pxStack = pxStack;
9000e78e:	6304      	str	r4, [r0, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000e790:	2400      	movs	r4, #0
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
9000e792:	464b      	mov	r3, r9
9000e794:	462a      	mov	r2, r5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000e796:	f886 40a9 	strb.w	r4, [r6, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
9000e79a:	4641      	mov	r1, r8
9000e79c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9000e79e:	4638      	mov	r0, r7
9000e7a0:	9602      	str	r6, [sp, #8]
9000e7a2:	9401      	str	r4, [sp, #4]
9000e7a4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9000e7a6:	9400      	str	r4, [sp, #0]
9000e7a8:	f7ff fd80 	bl	9000e2ac <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
9000e7ac:	4630      	mov	r0, r6
9000e7ae:	f7ff fcf5 	bl	9000e19c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000e7b2:	2001      	movs	r0, #1
	}
9000e7b4:	b005      	add	sp, #20
9000e7b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
9000e7ba:	4620      	mov	r0, r4
9000e7bc:	f7fe fa66 	bl	9000cc8c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000e7c0:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000e7c4:	b005      	add	sp, #20
9000e7c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000e7ca:	bf00      	nop

9000e7cc <vTaskDelay>:
	{
9000e7cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000e7ce:	b950      	cbnz	r0, 9000e7e6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000e7d0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e7d4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e7d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e7dc:	f3bf 8f4f 	dsb	sy
9000e7e0:	f3bf 8f6f 	isb	sy
	}
9000e7e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000e7e6:	4d1e      	ldr	r5, [pc, #120]	@ (9000e860 <vTaskDelay+0x94>)
9000e7e8:	682b      	ldr	r3, [r5, #0]
9000e7ea:	b143      	cbz	r3, 9000e7fe <vTaskDelay+0x32>
9000e7ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7f0:	f383 8811 	msr	BASEPRI, r3
9000e7f4:	f3bf 8f6f 	isb	sy
9000e7f8:	f3bf 8f4f 	dsb	sy
9000e7fc:	e7fe      	b.n	9000e7fc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000e7fe:	682b      	ldr	r3, [r5, #0]
9000e800:	4604      	mov	r4, r0
9000e802:	3301      	adds	r3, #1
9000e804:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000e806:	4b17      	ldr	r3, [pc, #92]	@ (9000e864 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000e808:	4e17      	ldr	r6, [pc, #92]	@ (9000e868 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000e80a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000e80c:	6830      	ldr	r0, [r6, #0]
9000e80e:	3004      	adds	r0, #4
9000e810:	f7fe fad8 	bl	9000cdc4 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000e814:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000e816:	6833      	ldr	r3, [r6, #0]
9000e818:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000e81a:	d315      	bcc.n	9000e848 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000e81c:	4b13      	ldr	r3, [pc, #76]	@ (9000e86c <vTaskDelay+0xa0>)
9000e81e:	6818      	ldr	r0, [r3, #0]
9000e820:	6831      	ldr	r1, [r6, #0]
9000e822:	3104      	adds	r1, #4
9000e824:	f7fe fab6 	bl	9000cd94 <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000e828:	682b      	ldr	r3, [r5, #0]
9000e82a:	b943      	cbnz	r3, 9000e83e <vTaskDelay+0x72>
9000e82c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e830:	f383 8811 	msr	BASEPRI, r3
9000e834:	f3bf 8f6f 	isb	sy
9000e838:	f3bf 8f4f 	dsb	sy
9000e83c:	e7fe      	b.n	9000e83c <vTaskDelay+0x70>
9000e83e:	f7ff febd 	bl	9000e5bc <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000e842:	2800      	cmp	r0, #0
9000e844:	d0c4      	beq.n	9000e7d0 <vTaskDelay+0x4>
	}
9000e846:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000e848:	4b09      	ldr	r3, [pc, #36]	@ (9000e870 <vTaskDelay+0xa4>)
9000e84a:	6818      	ldr	r0, [r3, #0]
9000e84c:	6831      	ldr	r1, [r6, #0]
9000e84e:	3104      	adds	r1, #4
9000e850:	f7fe faa0 	bl	9000cd94 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000e854:	4b07      	ldr	r3, [pc, #28]	@ (9000e874 <vTaskDelay+0xa8>)
9000e856:	681a      	ldr	r2, [r3, #0]
9000e858:	4294      	cmp	r4, r2
9000e85a:	d2e5      	bcs.n	9000e828 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000e85c:	601c      	str	r4, [r3, #0]
9000e85e:	e7e3      	b.n	9000e828 <vTaskDelay+0x5c>
9000e860:	24021280 	.word	0x24021280
9000e864:	240212a0 	.word	0x240212a0
9000e868:	24021778 	.word	0x24021778
9000e86c:	240212e8 	.word	0x240212e8
9000e870:	240212ec 	.word	0x240212ec
9000e874:	24021284 	.word	0x24021284

9000e878 <vTaskStartScheduler>:
{
9000e878:	b530      	push	{r4, r5, lr}
9000e87a:	b08b      	sub	sp, #44	@ 0x2c
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000e87c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000e87e:	aa07      	add	r2, sp, #28
9000e880:	a906      	add	r1, sp, #24
9000e882:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000e884:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000e888:	f7fe f926 	bl	9000cad8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000e88c:	9d05      	ldr	r5, [sp, #20]
9000e88e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
		configASSERT( puxStackBuffer != NULL );
9000e892:	b1bb      	cbz	r3, 9000e8c4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000e894:	b16d      	cbz	r5, 9000e8b2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000e896:	21ac      	movs	r1, #172	@ 0xac
9000e898:	9109      	str	r1, [sp, #36]	@ 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
9000e89a:	9909      	ldr	r1, [sp, #36]	@ 0x24
9000e89c:	29ac      	cmp	r1, #172	@ 0xac
9000e89e:	d01a      	beq.n	9000e8d6 <vTaskStartScheduler+0x5e>
9000e8a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e8a4:	f383 8811 	msr	BASEPRI, r3
9000e8a8:	f3bf 8f6f 	isb	sy
9000e8ac:	f3bf 8f4f 	dsb	sy
9000e8b0:	e7fe      	b.n	9000e8b0 <vTaskStartScheduler+0x38>
9000e8b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e8b6:	f383 8811 	msr	BASEPRI, r3
9000e8ba:	f3bf 8f6f 	isb	sy
9000e8be:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000e8c2:	e7fe      	b.n	9000e8c2 <vTaskStartScheduler+0x4a>
9000e8c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e8c8:	f383 8811 	msr	BASEPRI, r3
9000e8cc:	f3bf 8f6f 	isb	sy
9000e8d0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000e8d4:	e7fe      	b.n	9000e8d4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000e8d6:	2102      	movs	r1, #2
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000e8d8:	632b      	str	r3, [r5, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000e8da:	4822      	ldr	r0, [pc, #136]	@ (9000e964 <vTaskStartScheduler+0xec>)
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000e8dc:	f885 10a9 	strb.w	r1, [r5, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000e8e0:	a908      	add	r1, sp, #32
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000e8e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
9000e8e4:	4623      	mov	r3, r4
9000e8e6:	9400      	str	r4, [sp, #0]
9000e8e8:	e9cd 1501 	strd	r1, r5, [sp, #4]
9000e8ec:	491e      	ldr	r1, [pc, #120]	@ (9000e968 <vTaskStartScheduler+0xf0>)
9000e8ee:	f7ff fcdd 	bl	9000e2ac <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
9000e8f2:	4628      	mov	r0, r5
9000e8f4:	f7ff fc52 	bl	9000e19c <prvAddNewTaskToReadyList>
		return xReturn;
9000e8f8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
9000e8fa:	b17b      	cbz	r3, 9000e91c <vTaskStartScheduler+0xa4>
			xReturn = xTimerCreateTimerTask();
9000e8fc:	f000 fc90 	bl	9000f220 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000e900:	2801      	cmp	r0, #1
			xReturn = xTimerCreateTimerTask();
9000e902:	4603      	mov	r3, r0
	if( xReturn == pdPASS )
9000e904:	d00c      	beq.n	9000e920 <vTaskStartScheduler+0xa8>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000e906:	3301      	adds	r3, #1
9000e908:	d108      	bne.n	9000e91c <vTaskStartScheduler+0xa4>
9000e90a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e90e:	f383 8811 	msr	BASEPRI, r3
9000e912:	f3bf 8f6f 	isb	sy
9000e916:	f3bf 8f4f 	dsb	sy
9000e91a:	e7fe      	b.n	9000e91a <vTaskStartScheduler+0xa2>
}
9000e91c:	b00b      	add	sp, #44	@ 0x2c
9000e91e:	bd30      	pop	{r4, r5, pc}
9000e920:	f04f 0250 	mov.w	r2, #80	@ 0x50
9000e924:	f382 8811 	msr	BASEPRI, r2
9000e928:	f3bf 8f6f 	isb	sy
9000e92c:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
9000e930:	4a0e      	ldr	r2, [pc, #56]	@ (9000e96c <vTaskStartScheduler+0xf4>)
9000e932:	480f      	ldr	r0, [pc, #60]	@ (9000e970 <vTaskStartScheduler+0xf8>)
9000e934:	6811      	ldr	r1, [r2, #0]
9000e936:	3158      	adds	r1, #88	@ 0x58
9000e938:	6001      	str	r1, [r0, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
9000e93a:	f04f 30ff 	mov.w	r0, #4294967295
9000e93e:	490d      	ldr	r1, [pc, #52]	@ (9000e974 <vTaskStartScheduler+0xfc>)
9000e940:	6008      	str	r0, [r1, #0]
		xSchedulerRunning = pdTRUE;
9000e942:	480d      	ldr	r0, [pc, #52]	@ (9000e978 <vTaskStartScheduler+0x100>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000e944:	490d      	ldr	r1, [pc, #52]	@ (9000e97c <vTaskStartScheduler+0x104>)
		xSchedulerRunning = pdTRUE;
9000e946:	6003      	str	r3, [r0, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000e948:	600c      	str	r4, [r1, #0]
		traceTASK_SWITCHED_IN();
9000e94a:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000e94c:	b143      	cbz	r3, 9000e960 <vTaskStartScheduler+0xe8>
		if( xTCB->pxTaskTag != NULL )
9000e94e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000e950:	b10b      	cbz	r3, 9000e956 <vTaskStartScheduler+0xde>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000e952:	2000      	movs	r0, #0
9000e954:	4798      	blx	r3
}
9000e956:	b00b      	add	sp, #44	@ 0x2c
9000e958:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
9000e95c:	f7fe bb44 	b.w	9000cfe8 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000e960:	6813      	ldr	r3, [r2, #0]
9000e962:	e7f4      	b.n	9000e94e <vTaskStartScheduler+0xd6>
9000e964:	9000e3cd 	.word	0x9000e3cd
9000e968:	9002bd00 	.word	0x9002bd00
9000e96c:	24021778 	.word	0x24021778
9000e970:	24000114 	.word	0x24000114
9000e974:	24021284 	.word	0x24021284
9000e978:	24021298 	.word	0x24021298
9000e97c:	240212a0 	.word	0x240212a0

9000e980 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000e980:	4a02      	ldr	r2, [pc, #8]	@ (9000e98c <vTaskSuspendAll+0xc>)
9000e982:	6813      	ldr	r3, [r2, #0]
9000e984:	3301      	adds	r3, #1
9000e986:	6013      	str	r3, [r2, #0]
}
9000e988:	4770      	bx	lr
9000e98a:	bf00      	nop
9000e98c:	24021280 	.word	0x24021280

9000e990 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000e990:	4b06      	ldr	r3, [pc, #24]	@ (9000e9ac <xTaskResumeAll+0x1c>)
9000e992:	681b      	ldr	r3, [r3, #0]
9000e994:	b943      	cbnz	r3, 9000e9a8 <xTaskResumeAll+0x18>
9000e996:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e99a:	f383 8811 	msr	BASEPRI, r3
9000e99e:	f3bf 8f6f 	isb	sy
9000e9a2:	f3bf 8f4f 	dsb	sy
9000e9a6:	e7fe      	b.n	9000e9a6 <xTaskResumeAll+0x16>
9000e9a8:	f7ff be08 	b.w	9000e5bc <xTaskResumeAll.part.0>
9000e9ac:	24021280 	.word	0x24021280

9000e9b0 <xTaskGetTickCount>:
		xTicks = xTickCount;
9000e9b0:	4b01      	ldr	r3, [pc, #4]	@ (9000e9b8 <xTaskGetTickCount+0x8>)
9000e9b2:	6818      	ldr	r0, [r3, #0]
}
9000e9b4:	4770      	bx	lr
9000e9b6:	bf00      	nop
9000e9b8:	240212a0 	.word	0x240212a0

9000e9bc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000e9bc:	4b05      	ldr	r3, [pc, #20]	@ (9000e9d4 <xTaskIncrementTick+0x18>)
9000e9be:	681b      	ldr	r3, [r3, #0]
9000e9c0:	b90b      	cbnz	r3, 9000e9c6 <xTaskIncrementTick+0xa>
9000e9c2:	f7ff bd55 	b.w	9000e470 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000e9c6:	4a04      	ldr	r2, [pc, #16]	@ (9000e9d8 <xTaskIncrementTick+0x1c>)
}
9000e9c8:	2000      	movs	r0, #0
		++xPendedTicks;
9000e9ca:	6813      	ldr	r3, [r2, #0]
9000e9cc:	3301      	adds	r3, #1
9000e9ce:	6013      	str	r3, [r2, #0]
}
9000e9d0:	4770      	bx	lr
9000e9d2:	bf00      	nop
9000e9d4:	24021280 	.word	0x24021280
9000e9d8:	24021294 	.word	0x24021294

9000e9dc <vTaskSetApplicationTaskTag>:
	{
9000e9dc:	b538      	push	{r3, r4, r5, lr}
9000e9de:	460d      	mov	r5, r1
		if( xTask == NULL )
9000e9e0:	b138      	cbz	r0, 9000e9f2 <vTaskSetApplicationTaskTag+0x16>
9000e9e2:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000e9e4:	f7fe fa6e 	bl	9000cec4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000e9e8:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000e9ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000e9ee:	f7fe ba8b 	b.w	9000cf08 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000e9f2:	4b04      	ldr	r3, [pc, #16]	@ (9000ea04 <vTaskSetApplicationTaskTag+0x28>)
9000e9f4:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000e9f6:	f7fe fa65 	bl	9000cec4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000e9fa:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000e9fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000ea00:	f7fe ba82 	b.w	9000cf08 <vPortExitCritical>
9000ea04:	24021778 	.word	0x24021778

9000ea08 <vTaskSwitchContext>:
{
9000ea08:	b538      	push	{r3, r4, r5, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000ea0a:	4b28      	ldr	r3, [pc, #160]	@ (9000eaac <vTaskSwitchContext+0xa4>)
9000ea0c:	681b      	ldr	r3, [r3, #0]
9000ea0e:	b11b      	cbz	r3, 9000ea18 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
9000ea10:	4b27      	ldr	r3, [pc, #156]	@ (9000eab0 <vTaskSwitchContext+0xa8>)
9000ea12:	2201      	movs	r2, #1
9000ea14:	601a      	str	r2, [r3, #0]
}
9000ea16:	bd38      	pop	{r3, r4, r5, pc}
		xYieldPending = pdFALSE;
9000ea18:	4a25      	ldr	r2, [pc, #148]	@ (9000eab0 <vTaskSwitchContext+0xa8>)
		traceTASK_SWITCHED_OUT();
9000ea1a:	4c26      	ldr	r4, [pc, #152]	@ (9000eab4 <vTaskSwitchContext+0xac>)
		xYieldPending = pdFALSE;
9000ea1c:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000ea1e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000ea20:	2b00      	cmp	r3, #0
9000ea22:	d038      	beq.n	9000ea96 <vTaskSwitchContext+0x8e>
		if( xTCB->pxTaskTag != NULL )
9000ea24:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000ea26:	b10b      	cbz	r3, 9000ea2c <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000ea28:	2001      	movs	r0, #1
9000ea2a:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ea2c:	4d22      	ldr	r5, [pc, #136]	@ (9000eab8 <vTaskSwitchContext+0xb0>)
9000ea2e:	4923      	ldr	r1, [pc, #140]	@ (9000eabc <vTaskSwitchContext+0xb4>)
9000ea30:	682b      	ldr	r3, [r5, #0]
9000ea32:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000ea36:	0098      	lsls	r0, r3, #2
9000ea38:	0092      	lsls	r2, r2, #2
9000ea3a:	588a      	ldr	r2, [r1, r2]
9000ea3c:	b942      	cbnz	r2, 9000ea50 <vTaskSwitchContext+0x48>
9000ea3e:	b30b      	cbz	r3, 9000ea84 <vTaskSwitchContext+0x7c>
9000ea40:	3b01      	subs	r3, #1
9000ea42:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000ea46:	0098      	lsls	r0, r3, #2
9000ea48:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000ea4c:	2a00      	cmp	r2, #0
9000ea4e:	d0f6      	beq.n	9000ea3e <vTaskSwitchContext+0x36>
9000ea50:	4418      	add	r0, r3
9000ea52:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000ea56:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000ea5a:	4662      	mov	r2, ip
9000ea5c:	6849      	ldr	r1, [r1, #4]
9000ea5e:	3208      	adds	r2, #8
9000ea60:	4291      	cmp	r1, r2
9000ea62:	f8cc 1004 	str.w	r1, [ip, #4]
9000ea66:	d01d      	beq.n	9000eaa4 <vTaskSwitchContext+0x9c>
9000ea68:	68ca      	ldr	r2, [r1, #12]
9000ea6a:	6022      	str	r2, [r4, #0]
9000ea6c:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000ea6e:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000ea70:	b1b3      	cbz	r3, 9000eaa0 <vTaskSwitchContext+0x98>
		if( xTCB->pxTaskTag != NULL )
9000ea72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000ea74:	b10b      	cbz	r3, 9000ea7a <vTaskSwitchContext+0x72>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000ea76:	2000      	movs	r0, #0
9000ea78:	4798      	blx	r3
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
9000ea7a:	6823      	ldr	r3, [r4, #0]
9000ea7c:	4a10      	ldr	r2, [pc, #64]	@ (9000eac0 <vTaskSwitchContext+0xb8>)
9000ea7e:	3358      	adds	r3, #88	@ 0x58
9000ea80:	6013      	str	r3, [r2, #0]
}
9000ea82:	bd38      	pop	{r3, r4, r5, pc}
9000ea84:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ea88:	f383 8811 	msr	BASEPRI, r3
9000ea8c:	f3bf 8f6f 	isb	sy
9000ea90:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ea94:	e7fe      	b.n	9000ea94 <vTaskSwitchContext+0x8c>
			xTCB = pxCurrentTCB;
9000ea96:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000ea98:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000ea9a:	2b00      	cmp	r3, #0
9000ea9c:	d1c4      	bne.n	9000ea28 <vTaskSwitchContext+0x20>
9000ea9e:	e7c5      	b.n	9000ea2c <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000eaa0:	6823      	ldr	r3, [r4, #0]
9000eaa2:	e7e6      	b.n	9000ea72 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000eaa4:	6849      	ldr	r1, [r1, #4]
9000eaa6:	f8cc 1004 	str.w	r1, [ip, #4]
9000eaaa:	e7dd      	b.n	9000ea68 <vTaskSwitchContext+0x60>
9000eaac:	24021280 	.word	0x24021280
9000eab0:	24021290 	.word	0x24021290
9000eab4:	24021778 	.word	0x24021778
9000eab8:	2402129c 	.word	0x2402129c
9000eabc:	24021318 	.word	0x24021318
9000eac0:	24000114 	.word	0x24000114

9000eac4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000eac4:	b1f0      	cbz	r0, 9000eb04 <vTaskPlaceOnEventList+0x40>
{
9000eac6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000eac8:	4d1a      	ldr	r5, [pc, #104]	@ (9000eb34 <vTaskPlaceOnEventList+0x70>)
9000eaca:	460c      	mov	r4, r1
9000eacc:	6829      	ldr	r1, [r5, #0]
9000eace:	3118      	adds	r1, #24
9000ead0:	f7fe f960 	bl	9000cd94 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000ead4:	4b18      	ldr	r3, [pc, #96]	@ (9000eb38 <vTaskPlaceOnEventList+0x74>)
9000ead6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000ead8:	6828      	ldr	r0, [r5, #0]
9000eada:	3004      	adds	r0, #4
9000eadc:	f7fe f972 	bl	9000cdc4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000eae0:	1c63      	adds	r3, r4, #1
9000eae2:	d020      	beq.n	9000eb26 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000eae4:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000eae6:	682b      	ldr	r3, [r5, #0]
9000eae8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000eaea:	d214      	bcs.n	9000eb16 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000eaec:	4b13      	ldr	r3, [pc, #76]	@ (9000eb3c <vTaskPlaceOnEventList+0x78>)
9000eaee:	6818      	ldr	r0, [r3, #0]
9000eaf0:	6829      	ldr	r1, [r5, #0]
9000eaf2:	3104      	adds	r1, #4
9000eaf4:	f7fe f94e 	bl	9000cd94 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000eaf8:	4b11      	ldr	r3, [pc, #68]	@ (9000eb40 <vTaskPlaceOnEventList+0x7c>)
9000eafa:	681a      	ldr	r2, [r3, #0]
9000eafc:	4294      	cmp	r4, r2
9000eafe:	d200      	bcs.n	9000eb02 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000eb00:	601c      	str	r4, [r3, #0]
}
9000eb02:	bd70      	pop	{r4, r5, r6, pc}
9000eb04:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb08:	f383 8811 	msr	BASEPRI, r3
9000eb0c:	f3bf 8f6f 	isb	sy
9000eb10:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000eb14:	e7fe      	b.n	9000eb14 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000eb16:	4b0b      	ldr	r3, [pc, #44]	@ (9000eb44 <vTaskPlaceOnEventList+0x80>)
9000eb18:	6818      	ldr	r0, [r3, #0]
9000eb1a:	6829      	ldr	r1, [r5, #0]
}
9000eb1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000eb20:	3104      	adds	r1, #4
9000eb22:	f7fe b937 	b.w	9000cd94 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000eb26:	6829      	ldr	r1, [r5, #0]
9000eb28:	4807      	ldr	r0, [pc, #28]	@ (9000eb48 <vTaskPlaceOnEventList+0x84>)
9000eb2a:	3104      	adds	r1, #4
}
9000eb2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000eb30:	f7fe b922 	b.w	9000cd78 <vListInsertEnd>
9000eb34:	24021778 	.word	0x24021778
9000eb38:	240212a0 	.word	0x240212a0
9000eb3c:	240212ec 	.word	0x240212ec
9000eb40:	24021284 	.word	0x24021284
9000eb44:	240212e8 	.word	0x240212e8
9000eb48:	240212a8 	.word	0x240212a8

9000eb4c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000eb4c:	b358      	cbz	r0, 9000eba6 <vTaskPlaceOnEventListRestricted+0x5a>
	{
9000eb4e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000eb50:	4e1d      	ldr	r6, [pc, #116]	@ (9000ebc8 <vTaskPlaceOnEventListRestricted+0x7c>)
9000eb52:	460c      	mov	r4, r1
9000eb54:	4615      	mov	r5, r2
9000eb56:	6831      	ldr	r1, [r6, #0]
9000eb58:	3118      	adds	r1, #24
9000eb5a:	f7fe f90d 	bl	9000cd78 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
9000eb5e:	b165      	cbz	r5, 9000eb7a <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000eb60:	4b1a      	ldr	r3, [pc, #104]	@ (9000ebcc <vTaskPlaceOnEventListRestricted+0x80>)
9000eb62:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000eb64:	6830      	ldr	r0, [r6, #0]
9000eb66:	3004      	adds	r0, #4
9000eb68:	f7fe f92c 	bl	9000cdc4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000eb6c:	6831      	ldr	r1, [r6, #0]
9000eb6e:	4818      	ldr	r0, [pc, #96]	@ (9000ebd0 <vTaskPlaceOnEventListRestricted+0x84>)
9000eb70:	3104      	adds	r1, #4
	}
9000eb72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000eb76:	f7fe b8ff 	b.w	9000cd78 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000eb7a:	4b14      	ldr	r3, [pc, #80]	@ (9000ebcc <vTaskPlaceOnEventListRestricted+0x80>)
9000eb7c:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000eb7e:	6830      	ldr	r0, [r6, #0]
9000eb80:	3004      	adds	r0, #4
9000eb82:	f7fe f91f 	bl	9000cdc4 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000eb86:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000eb88:	6833      	ldr	r3, [r6, #0]
9000eb8a:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000eb8c:	d214      	bcs.n	9000ebb8 <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000eb8e:	4b11      	ldr	r3, [pc, #68]	@ (9000ebd4 <vTaskPlaceOnEventListRestricted+0x88>)
9000eb90:	6818      	ldr	r0, [r3, #0]
9000eb92:	6831      	ldr	r1, [r6, #0]
9000eb94:	3104      	adds	r1, #4
9000eb96:	f7fe f8fd 	bl	9000cd94 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000eb9a:	4b0f      	ldr	r3, [pc, #60]	@ (9000ebd8 <vTaskPlaceOnEventListRestricted+0x8c>)
9000eb9c:	681a      	ldr	r2, [r3, #0]
9000eb9e:	4294      	cmp	r4, r2
9000eba0:	d200      	bcs.n	9000eba4 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9000eba2:	601c      	str	r4, [r3, #0]
	}
9000eba4:	bd70      	pop	{r4, r5, r6, pc}
9000eba6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ebaa:	f383 8811 	msr	BASEPRI, r3
9000ebae:	f3bf 8f6f 	isb	sy
9000ebb2:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000ebb6:	e7fe      	b.n	9000ebb6 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000ebb8:	4b08      	ldr	r3, [pc, #32]	@ (9000ebdc <vTaskPlaceOnEventListRestricted+0x90>)
9000ebba:	6818      	ldr	r0, [r3, #0]
9000ebbc:	6831      	ldr	r1, [r6, #0]
	}
9000ebbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000ebc2:	3104      	adds	r1, #4
9000ebc4:	f7fe b8e6 	b.w	9000cd94 <vListInsert>
9000ebc8:	24021778 	.word	0x24021778
9000ebcc:	240212a0 	.word	0x240212a0
9000ebd0:	240212a8 	.word	0x240212a8
9000ebd4:	240212ec 	.word	0x240212ec
9000ebd8:	24021284 	.word	0x24021284
9000ebdc:	240212e8 	.word	0x240212e8

9000ebe0 <xTaskRemoveFromEventList>:
{
9000ebe0:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ebe2:	68c3      	ldr	r3, [r0, #12]
9000ebe4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
9000ebe6:	b34c      	cbz	r4, 9000ec3c <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000ebe8:	f104 0518 	add.w	r5, r4, #24
9000ebec:	4628      	mov	r0, r5
9000ebee:	f7fe f8e9 	bl	9000cdc4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ebf2:	4b18      	ldr	r3, [pc, #96]	@ (9000ec54 <xTaskRemoveFromEventList+0x74>)
9000ebf4:	681b      	ldr	r3, [r3, #0]
9000ebf6:	b173      	cbz	r3, 9000ec16 <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000ebf8:	4629      	mov	r1, r5
9000ebfa:	4817      	ldr	r0, [pc, #92]	@ (9000ec58 <xTaskRemoveFromEventList+0x78>)
9000ebfc:	f7fe f8bc 	bl	9000cd78 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000ec00:	4b16      	ldr	r3, [pc, #88]	@ (9000ec5c <xTaskRemoveFromEventList+0x7c>)
9000ec02:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ec04:	681b      	ldr	r3, [r3, #0]
9000ec06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000ec08:	429a      	cmp	r2, r3
9000ec0a:	d920      	bls.n	9000ec4e <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
9000ec0c:	2301      	movs	r3, #1
9000ec0e:	4a14      	ldr	r2, [pc, #80]	@ (9000ec60 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
9000ec10:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000ec12:	6013      	str	r3, [r2, #0]
}
9000ec14:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000ec16:	1d25      	adds	r5, r4, #4
9000ec18:	4628      	mov	r0, r5
9000ec1a:	f7fe f8d3 	bl	9000cdc4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000ec1e:	4b11      	ldr	r3, [pc, #68]	@ (9000ec64 <xTaskRemoveFromEventList+0x84>)
9000ec20:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000ec22:	681a      	ldr	r2, [r3, #0]
9000ec24:	4290      	cmp	r0, r2
9000ec26:	d900      	bls.n	9000ec2a <xTaskRemoveFromEventList+0x4a>
9000ec28:	6018      	str	r0, [r3, #0]
9000ec2a:	4b0f      	ldr	r3, [pc, #60]	@ (9000ec68 <xTaskRemoveFromEventList+0x88>)
9000ec2c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000ec30:	4629      	mov	r1, r5
9000ec32:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000ec36:	f7fe f89f 	bl	9000cd78 <vListInsertEnd>
9000ec3a:	e7e1      	b.n	9000ec00 <xTaskRemoveFromEventList+0x20>
9000ec3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ec40:	f383 8811 	msr	BASEPRI, r3
9000ec44:	f3bf 8f6f 	isb	sy
9000ec48:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000ec4c:	e7fe      	b.n	9000ec4c <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
9000ec4e:	2000      	movs	r0, #0
}
9000ec50:	bd38      	pop	{r3, r4, r5, pc}
9000ec52:	bf00      	nop
9000ec54:	24021280 	.word	0x24021280
9000ec58:	240212d4 	.word	0x240212d4
9000ec5c:	24021778 	.word	0x24021778
9000ec60:	24021290 	.word	0x24021290
9000ec64:	2402129c 	.word	0x2402129c
9000ec68:	24021318 	.word	0x24021318

9000ec6c <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000ec6c:	4a03      	ldr	r2, [pc, #12]	@ (9000ec7c <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000ec6e:	4b04      	ldr	r3, [pc, #16]	@ (9000ec80 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000ec70:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000ec72:	681b      	ldr	r3, [r3, #0]
9000ec74:	e9c0 2300 	strd	r2, r3, [r0]
}
9000ec78:	4770      	bx	lr
9000ec7a:	bf00      	nop
9000ec7c:	2402128c 	.word	0x2402128c
9000ec80:	240212a0 	.word	0x240212a0

9000ec84 <xTaskCheckForTimeOut>:
{
9000ec84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
9000ec86:	b308      	cbz	r0, 9000eccc <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
9000ec88:	460d      	mov	r5, r1
9000ec8a:	b1b1      	cbz	r1, 9000ecba <xTaskCheckForTimeOut+0x36>
9000ec8c:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000ec8e:	f7fe f919 	bl	9000cec4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000ec92:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000ec94:	4a1a      	ldr	r2, [pc, #104]	@ (9000ed00 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
9000ec96:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000ec98:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000ec9a:	d02c      	beq.n	9000ecf6 <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000ec9c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9000ed04 <xTaskCheckForTimeOut+0x80>
9000eca0:	6826      	ldr	r6, [r4, #0]
9000eca2:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000eca6:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000eca8:	42be      	cmp	r6, r7
9000ecaa:	d018      	beq.n	9000ecde <xTaskCheckForTimeOut+0x5a>
9000ecac:	4288      	cmp	r0, r1
9000ecae:	d816      	bhi.n	9000ecde <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
9000ecb0:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000ecb2:	f7fe f929 	bl	9000cf08 <vPortExitCritical>
}
9000ecb6:	4620      	mov	r0, r4
9000ecb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000ecba:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ecbe:	f383 8811 	msr	BASEPRI, r3
9000ecc2:	f3bf 8f6f 	isb	sy
9000ecc6:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000ecca:	e7fe      	b.n	9000ecca <xTaskCheckForTimeOut+0x46>
9000eccc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ecd0:	f383 8811 	msr	BASEPRI, r3
9000ecd4:	f3bf 8f6f 	isb	sy
9000ecd8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000ecdc:	e7fe      	b.n	9000ecdc <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000ecde:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000ece2:	4573      	cmp	r3, lr
9000ece4:	d909      	bls.n	9000ecfa <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
9000ece6:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000ece8:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000ecec:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000ecee:	4403      	add	r3, r0
9000ecf0:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000ecf2:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
9000ecf6:	2400      	movs	r4, #0
9000ecf8:	e7db      	b.n	9000ecb2 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
9000ecfa:	2300      	movs	r3, #0
9000ecfc:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000ecfe:	e7d7      	b.n	9000ecb0 <xTaskCheckForTimeOut+0x2c>
9000ed00:	240212a0 	.word	0x240212a0
9000ed04:	2402128c 	.word	0x2402128c

9000ed08 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000ed08:	4b01      	ldr	r3, [pc, #4]	@ (9000ed10 <vTaskMissedYield+0x8>)
9000ed0a:	2201      	movs	r2, #1
9000ed0c:	601a      	str	r2, [r3, #0]
}
9000ed0e:	4770      	bx	lr
9000ed10:	24021290 	.word	0x24021290

9000ed14 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000ed14:	4b05      	ldr	r3, [pc, #20]	@ (9000ed2c <xTaskGetSchedulerState+0x18>)
9000ed16:	681b      	ldr	r3, [r3, #0]
9000ed18:	b133      	cbz	r3, 9000ed28 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ed1a:	4b05      	ldr	r3, [pc, #20]	@ (9000ed30 <xTaskGetSchedulerState+0x1c>)
9000ed1c:	6818      	ldr	r0, [r3, #0]
9000ed1e:	fab0 f080 	clz	r0, r0
9000ed22:	0940      	lsrs	r0, r0, #5
9000ed24:	0040      	lsls	r0, r0, #1
9000ed26:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000ed28:	2001      	movs	r0, #1
	}
9000ed2a:	4770      	bx	lr
9000ed2c:	24021298 	.word	0x24021298
9000ed30:	24021280 	.word	0x24021280

9000ed34 <xTaskPriorityInherit>:
	{
9000ed34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
9000ed36:	4604      	mov	r4, r0
9000ed38:	b1c8      	cbz	r0, 9000ed6e <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000ed3a:	4d1b      	ldr	r5, [pc, #108]	@ (9000eda8 <xTaskPriorityInherit+0x74>)
9000ed3c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9000ed3e:	682a      	ldr	r2, [r5, #0]
9000ed40:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000ed42:	4293      	cmp	r3, r2
9000ed44:	d214      	bcs.n	9000ed70 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000ed46:	6982      	ldr	r2, [r0, #24]
9000ed48:	2a00      	cmp	r2, #0
9000ed4a:	db04      	blt.n	9000ed56 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ed4c:	682a      	ldr	r2, [r5, #0]
9000ed4e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000ed50:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
9000ed54:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000ed56:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000ed5a:	4e14      	ldr	r6, [pc, #80]	@ (9000edac <xTaskPriorityInherit+0x78>)
9000ed5c:	6962      	ldr	r2, [r4, #20]
9000ed5e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000ed62:	429a      	cmp	r2, r3
9000ed64:	d00c      	beq.n	9000ed80 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000ed66:	682b      	ldr	r3, [r5, #0]
9000ed68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000ed6a:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
9000ed6c:	2001      	movs	r0, #1
	}
9000ed6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000ed70:	682b      	ldr	r3, [r5, #0]
9000ed72:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9000ed74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000ed76:	4298      	cmp	r0, r3
9000ed78:	bf2c      	ite	cs
9000ed7a:	2000      	movcs	r0, #0
9000ed7c:	2001      	movcc	r0, #1
	}
9000ed7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000ed80:	1d27      	adds	r7, r4, #4
9000ed82:	4638      	mov	r0, r7
9000ed84:	f7fe f81e 	bl	9000cdc4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000ed88:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000ed8a:	4b09      	ldr	r3, [pc, #36]	@ (9000edb0 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000ed8c:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000ed8e:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000ed90:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000ed92:	4290      	cmp	r0, r2
9000ed94:	d900      	bls.n	9000ed98 <xTaskPriorityInherit+0x64>
9000ed96:	6018      	str	r0, [r3, #0]
9000ed98:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000ed9c:	4639      	mov	r1, r7
9000ed9e:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000eda2:	f7fd ffe9 	bl	9000cd78 <vListInsertEnd>
9000eda6:	e7e1      	b.n	9000ed6c <xTaskPriorityInherit+0x38>
9000eda8:	24021778 	.word	0x24021778
9000edac:	24021318 	.word	0x24021318
9000edb0:	2402129c 	.word	0x2402129c

9000edb4 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000edb4:	b308      	cbz	r0, 9000edfa <xTaskPriorityDisinherit+0x46>
	{
9000edb6:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000edb8:	4b1d      	ldr	r3, [pc, #116]	@ (9000ee30 <xTaskPriorityDisinherit+0x7c>)
9000edba:	681c      	ldr	r4, [r3, #0]
9000edbc:	4284      	cmp	r4, r0
9000edbe:	d008      	beq.n	9000edd2 <xTaskPriorityDisinherit+0x1e>
9000edc0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000edc4:	f383 8811 	msr	BASEPRI, r3
9000edc8:	f3bf 8f6f 	isb	sy
9000edcc:	f3bf 8f4f 	dsb	sy
9000edd0:	e7fe      	b.n	9000edd0 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
9000edd2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000edd4:	b143      	cbz	r3, 9000ede8 <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000edd6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
9000edd8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000edda:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
9000eddc:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000edde:	4291      	cmp	r1, r2
9000ede0:	d000      	beq.n	9000ede4 <xTaskPriorityDisinherit+0x30>
9000ede2:	b163      	cbz	r3, 9000edfe <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
9000ede4:	2000      	movs	r0, #0
	}
9000ede6:	bd38      	pop	{r3, r4, r5, pc}
9000ede8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000edec:	f383 8811 	msr	BASEPRI, r3
9000edf0:	f3bf 8f6f 	isb	sy
9000edf4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000edf8:	e7fe      	b.n	9000edf8 <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
9000edfa:	2000      	movs	r0, #0
	}
9000edfc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000edfe:	1d25      	adds	r5, r4, #4
9000ee00:	4628      	mov	r0, r5
9000ee02:	f7fd ffdf 	bl	9000cdc4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000ee06:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
9000ee08:	4b0a      	ldr	r3, [pc, #40]	@ (9000ee34 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ee0a:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000ee0e:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ee10:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000ee12:	681a      	ldr	r2, [r3, #0]
9000ee14:	4290      	cmp	r0, r2
9000ee16:	d900      	bls.n	9000ee1a <xTaskPriorityDisinherit+0x66>
9000ee18:	6018      	str	r0, [r3, #0]
9000ee1a:	4b07      	ldr	r3, [pc, #28]	@ (9000ee38 <xTaskPriorityDisinherit+0x84>)
9000ee1c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000ee20:	4629      	mov	r1, r5
9000ee22:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000ee26:	f7fd ffa7 	bl	9000cd78 <vListInsertEnd>
					xReturn = pdTRUE;
9000ee2a:	2001      	movs	r0, #1
	}
9000ee2c:	bd38      	pop	{r3, r4, r5, pc}
9000ee2e:	bf00      	nop
9000ee30:	24021778 	.word	0x24021778
9000ee34:	2402129c 	.word	0x2402129c
9000ee38:	24021318 	.word	0x24021318

9000ee3c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000ee3c:	2800      	cmp	r0, #0
9000ee3e:	d03c      	beq.n	9000eeba <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
9000ee40:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
9000ee42:	b570      	push	{r4, r5, r6, lr}
9000ee44:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
9000ee46:	b14b      	cbz	r3, 9000ee5c <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000ee48:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000ee4a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ee4c:	4281      	cmp	r1, r0
9000ee4e:	bf38      	it	cc
9000ee50:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000ee52:	2b01      	cmp	r3, #1
9000ee54:	d101      	bne.n	9000ee5a <vTaskPriorityDisinheritAfterTimeout+0x1e>
9000ee56:	428a      	cmp	r2, r1
9000ee58:	d109      	bne.n	9000ee6e <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
9000ee5a:	bd70      	pop	{r4, r5, r6, pc}
9000ee5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee60:	f383 8811 	msr	BASEPRI, r3
9000ee64:	f3bf 8f6f 	isb	sy
9000ee68:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000ee6c:	e7fe      	b.n	9000ee6c <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
9000ee6e:	4b18      	ldr	r3, [pc, #96]	@ (9000eed0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
9000ee70:	681b      	ldr	r3, [r3, #0]
9000ee72:	42a3      	cmp	r3, r4
9000ee74:	d022      	beq.n	9000eebc <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000ee76:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000ee78:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000ee7a:	2b00      	cmp	r3, #0
9000ee7c:	db02      	blt.n	9000ee84 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ee7e:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
9000ee82:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000ee84:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000ee88:	4d12      	ldr	r5, [pc, #72]	@ (9000eed4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
9000ee8a:	6961      	ldr	r1, [r4, #20]
9000ee8c:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000ee90:	4299      	cmp	r1, r3
9000ee92:	d1e2      	bne.n	9000ee5a <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000ee94:	1d26      	adds	r6, r4, #4
9000ee96:	4630      	mov	r0, r6
9000ee98:	f7fd ff94 	bl	9000cdc4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000ee9c:	4b0e      	ldr	r3, [pc, #56]	@ (9000eed8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000ee9e:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000eea0:	681a      	ldr	r2, [r3, #0]
9000eea2:	4290      	cmp	r0, r2
9000eea4:	d900      	bls.n	9000eea8 <vTaskPriorityDisinheritAfterTimeout+0x6c>
9000eea6:	6018      	str	r0, [r3, #0]
9000eea8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000eeac:	4631      	mov	r1, r6
9000eeae:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000eeb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
9000eeb6:	f7fd bf5f 	b.w	9000cd78 <vListInsertEnd>
9000eeba:	4770      	bx	lr
9000eebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eec0:	f383 8811 	msr	BASEPRI, r3
9000eec4:	f3bf 8f6f 	isb	sy
9000eec8:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000eecc:	e7fe      	b.n	9000eecc <vTaskPriorityDisinheritAfterTimeout+0x90>
9000eece:	bf00      	nop
9000eed0:	24021778 	.word	0x24021778
9000eed4:	24021318 	.word	0x24021318
9000eed8:	2402129c 	.word	0x2402129c

9000eedc <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000eedc:	4b04      	ldr	r3, [pc, #16]	@ (9000eef0 <pvTaskIncrementMutexHeldCount+0x14>)
9000eede:	681a      	ldr	r2, [r3, #0]
9000eee0:	b11a      	cbz	r2, 9000eeea <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000eee2:	6819      	ldr	r1, [r3, #0]
9000eee4:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
9000eee6:	3201      	adds	r2, #1
9000eee8:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
9000eeea:	6818      	ldr	r0, [r3, #0]
	}
9000eeec:	4770      	bx	lr
9000eeee:	bf00      	nop
9000eef0:	24021778 	.word	0x24021778

9000eef4 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000eef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000eef8:	4e21      	ldr	r6, [pc, #132]	@ (9000ef80 <prvSwitchTimerLists+0x8c>)
9000eefa:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000eefc:	e00d      	b.n	9000ef1a <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000eefe:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ef00:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000ef02:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000ef04:	1d25      	adds	r5, r4, #4
9000ef06:	4628      	mov	r0, r5
9000ef08:	f7fd ff5c 	bl	9000cdc4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000ef0c:	6a23      	ldr	r3, [r4, #32]
9000ef0e:	4620      	mov	r0, r4
9000ef10:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000ef12:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
9000ef16:	075b      	lsls	r3, r3, #29
9000ef18:	d40a      	bmi.n	9000ef30 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000ef1a:	6833      	ldr	r3, [r6, #0]
9000ef1c:	681a      	ldr	r2, [r3, #0]
9000ef1e:	2a00      	cmp	r2, #0
9000ef20:	d1ed      	bne.n	9000eefe <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000ef22:	4a18      	ldr	r2, [pc, #96]	@ (9000ef84 <prvSwitchTimerLists+0x90>)
9000ef24:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000ef26:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000ef28:	6031      	str	r1, [r6, #0]
}
9000ef2a:	b004      	add	sp, #16
9000ef2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000ef30:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000ef32:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
9000ef34:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 9000ef88 <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000ef38:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000ef3a:	429f      	cmp	r7, r3
9000ef3c:	d205      	bcs.n	9000ef4a <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000ef3e:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000ef40:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000ef42:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000ef44:	f7fd ff26 	bl	9000cd94 <vListInsert>
9000ef48:	e7e7      	b.n	9000ef1a <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
9000ef4a:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
9000ef4e:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
9000ef50:	b16b      	cbz	r3, 9000ef6e <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000ef52:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
9000ef54:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000ef58:	f7ff fedc 	bl	9000ed14 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000ef5c:	462b      	mov	r3, r5
9000ef5e:	462a      	mov	r2, r5
9000ef60:	4669      	mov	r1, sp
9000ef62:	f8d8 0000 	ldr.w	r0, [r8]
9000ef66:	f7fe fa99 	bl	9000d49c <xQueueGenericSend>
				configASSERT( xResult );
9000ef6a:	2800      	cmp	r0, #0
9000ef6c:	d1d5      	bne.n	9000ef1a <prvSwitchTimerLists+0x26>
9000ef6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ef72:	f383 8811 	msr	BASEPRI, r3
9000ef76:	f3bf 8f6f 	isb	sy
9000ef7a:	f3bf 8f4f 	dsb	sy
9000ef7e:	e7fe      	b.n	9000ef7e <prvSwitchTimerLists+0x8a>
9000ef80:	2402187c 	.word	0x2402187c
9000ef84:	24021878 	.word	0x24021878
9000ef88:	24021874 	.word	0x24021874

9000ef8c <prvTimerTask>:
{
9000ef8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ef90:	4e9f      	ldr	r6, [pc, #636]	@ (9000f210 <prvTimerTask+0x284>)
9000ef92:	b089      	sub	sp, #36	@ 0x24
9000ef94:	4d9f      	ldr	r5, [pc, #636]	@ (9000f214 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000ef96:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9000ef9a:	4c9f      	ldr	r4, [pc, #636]	@ (9000f218 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000ef9c:	6833      	ldr	r3, [r6, #0]
9000ef9e:	681f      	ldr	r7, [r3, #0]
9000efa0:	2f00      	cmp	r7, #0
9000efa2:	f000 80b2 	beq.w	9000f10a <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000efa6:	68db      	ldr	r3, [r3, #12]
9000efa8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000efaa:	f7ff fce9 	bl	9000e980 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000efae:	f7ff fcff 	bl	9000e9b0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000efb2:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000efb4:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000efb6:	4298      	cmp	r0, r3
9000efb8:	f0c0 80af 	bcc.w	9000f11a <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000efbc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000efbe:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000efc0:	f200 80d0 	bhi.w	9000f164 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000efc4:	f7ff fce4 	bl	9000e990 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000efc8:	6833      	ldr	r3, [r6, #0]
9000efca:	68db      	ldr	r3, [r3, #12]
9000efcc:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000efd0:	f10b 0804 	add.w	r8, fp, #4
9000efd4:	4640      	mov	r0, r8
9000efd6:	f7fd fef5 	bl	9000cdc4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000efda:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
9000efde:	0758      	lsls	r0, r3, #29
9000efe0:	f100 80d0 	bmi.w	9000f184 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000efe4:	f023 0301 	bic.w	r3, r3, #1
9000efe8:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000efec:	f8db 3020 	ldr.w	r3, [fp, #32]
9000eff0:	4658      	mov	r0, fp
9000eff2:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000eff4:	2200      	movs	r2, #0
9000eff6:	4669      	mov	r1, sp
9000eff8:	6820      	ldr	r0, [r4, #0]
9000effa:	f7fe fc8d 	bl	9000d918 <xQueueReceive>
9000effe:	2800      	cmp	r0, #0
9000f000:	d0cc      	beq.n	9000ef9c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000f002:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000f004:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000f006:	2b00      	cmp	r3, #0
9000f008:	db77      	blt.n	9000f0fa <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000f00a:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000f00c:	697b      	ldr	r3, [r7, #20]
9000f00e:	b113      	cbz	r3, 9000f016 <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f010:	1d38      	adds	r0, r7, #4
9000f012:	f7fd fed7 	bl	9000cdc4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9000f016:	f7ff fccb 	bl	9000e9b0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f01a:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f01c:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
9000f01e:	4298      	cmp	r0, r3
9000f020:	f0c0 8082 	bcc.w	9000f128 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9000f024:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9000f026:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
9000f02a:	2b09      	cmp	r3, #9
9000f02c:	d8e2      	bhi.n	9000eff4 <prvTimerTask+0x68>
9000f02e:	e8df f003 	tbb	[pc, r3]
9000f032:	0505      	.short	0x0505
9000f034:	5b3e5405 	.word	0x5b3e5405
9000f038:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f03c:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f040:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f042:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f046:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f048:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f04c:	69ba      	ldr	r2, [r7, #24]
9000f04e:	1899      	adds	r1, r3, r2
9000f050:	bf2c      	ite	cs
9000f052:	2001      	movcs	r0, #1
9000f054:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9000f056:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f058:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f05a:	f200 8085 	bhi.w	9000f168 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f05e:	ebab 0303 	sub.w	r3, fp, r3
9000f062:	429a      	cmp	r2, r3
9000f064:	f200 80be 	bhi.w	9000f1e4 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f068:	6a3b      	ldr	r3, [r7, #32]
9000f06a:	4638      	mov	r0, r7
9000f06c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f06e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000f072:	0759      	lsls	r1, r3, #29
9000f074:	d5be      	bpl.n	9000eff4 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9000f076:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f078:	9b01      	ldr	r3, [sp, #4]
9000f07a:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
9000f07c:	b171      	cbz	r1, 9000f09c <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f07e:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000f080:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000f084:	2700      	movs	r7, #0
9000f086:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f088:	f7ff fe44 	bl	9000ed14 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f08c:	463b      	mov	r3, r7
9000f08e:	463a      	mov	r2, r7
9000f090:	a904      	add	r1, sp, #16
9000f092:	6820      	ldr	r0, [r4, #0]
9000f094:	f7fe fa02 	bl	9000d49c <xQueueGenericSend>
							configASSERT( xResult );
9000f098:	2800      	cmp	r0, #0
9000f09a:	d1ab      	bne.n	9000eff4 <prvTimerTask+0x68>
9000f09c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f0a0:	f383 8811 	msr	BASEPRI, r3
9000f0a4:	f3bf 8f6f 	isb	sy
9000f0a8:	f3bf 8f4f 	dsb	sy
9000f0ac:	e7fe      	b.n	9000f0ac <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f0ae:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000f0b2:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f0b4:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000f0b8:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f0ba:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000f0be:	2b00      	cmp	r3, #0
9000f0c0:	f000 809c 	beq.w	9000f1fc <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000f0c4:	445b      	add	r3, fp
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f0c6:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f0c8:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9000f0ca:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f0cc:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f0ce:	d855      	bhi.n	9000f17c <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f0d0:	4b52      	ldr	r3, [pc, #328]	@ (9000f21c <prvTimerTask+0x290>)
9000f0d2:	6818      	ldr	r0, [r3, #0]
9000f0d4:	f7fd fe5e 	bl	9000cd94 <vListInsert>
9000f0d8:	e78c      	b.n	9000eff4 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f0da:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000f0de:	f023 0301 	bic.w	r3, r3, #1
9000f0e2:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
9000f0e6:	e785      	b.n	9000eff4 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000f0e8:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000f0ec:	079a      	lsls	r2, r3, #30
9000f0ee:	d570      	bpl.n	9000f1d2 <prvTimerTask+0x246>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f0f0:	f023 0301 	bic.w	r3, r3, #1
9000f0f4:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
9000f0f8:	e77c      	b.n	9000eff4 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000f0fa:	9b01      	ldr	r3, [sp, #4]
9000f0fc:	9903      	ldr	r1, [sp, #12]
9000f0fe:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000f100:	9b00      	ldr	r3, [sp, #0]
9000f102:	2b00      	cmp	r3, #0
9000f104:	f6ff af76 	blt.w	9000eff4 <prvTimerTask+0x68>
9000f108:	e77f      	b.n	9000f00a <prvTimerTask+0x7e>
	vTaskSuspendAll();
9000f10a:	f7ff fc39 	bl	9000e980 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000f10e:	f7ff fc4f 	bl	9000e9b0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f112:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f114:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000f116:	4298      	cmp	r0, r3
9000f118:	d209      	bcs.n	9000f12e <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9000f11a:	f7ff feeb 	bl	9000eef4 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000f11e:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9000f122:	f7ff fc35 	bl	9000e990 <xTaskResumeAll>
9000f126:	e765      	b.n	9000eff4 <prvTimerTask+0x68>
		prvSwitchTimerLists();
9000f128:	f7ff fee4 	bl	9000eef4 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9000f12c:	e77a      	b.n	9000f024 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000f12e:	4b3b      	ldr	r3, [pc, #236]	@ (9000f21c <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9000f130:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000f134:	681b      	ldr	r3, [r3, #0]
9000f136:	681a      	ldr	r2, [r3, #0]
9000f138:	fab2 f282 	clz	r2, r2
9000f13c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000f13e:	eba7 010a 	sub.w	r1, r7, sl
9000f142:	6820      	ldr	r0, [r4, #0]
9000f144:	f7fe ffc6 	bl	9000e0d4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000f148:	f7ff fc22 	bl	9000e990 <xTaskResumeAll>
9000f14c:	2800      	cmp	r0, #0
9000f14e:	f47f af51 	bne.w	9000eff4 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9000f152:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
9000f156:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
9000f15a:	f3bf 8f4f 	dsb	sy
9000f15e:	f3bf 8f6f 	isb	sy
9000f162:	e747      	b.n	9000eff4 <prvTimerTask+0x68>
9000f164:	2200      	movs	r2, #0
9000f166:	e7ea      	b.n	9000f13e <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000f168:	455b      	cmp	r3, fp
9000f16a:	d902      	bls.n	9000f172 <prvTimerTask+0x1e6>
9000f16c:	2800      	cmp	r0, #0
9000f16e:	f43f af7b 	beq.w	9000f068 <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f172:	1d39      	adds	r1, r7, #4
9000f174:	6830      	ldr	r0, [r6, #0]
9000f176:	f7fd fe0d 	bl	9000cd94 <vListInsert>
	return xProcessTimerNow;
9000f17a:	e73b      	b.n	9000eff4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f17c:	6830      	ldr	r0, [r6, #0]
9000f17e:	f7fd fe09 	bl	9000cd94 <vListInsert>
9000f182:	e737      	b.n	9000eff4 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000f184:	f8db 0018 	ldr.w	r0, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f188:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000f18c:	183b      	adds	r3, r7, r0
	if( xNextExpiryTime <= xTimeNow )
9000f18e:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f190:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f194:	d321      	bcc.n	9000f1da <prvTimerTask+0x24e>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f196:	ebaa 0a07 	sub.w	sl, sl, r7
9000f19a:	4550      	cmp	r0, sl
9000f19c:	d828      	bhi.n	9000f1f0 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
9000f19e:	6823      	ldr	r3, [r4, #0]
9000f1a0:	b173      	cbz	r3, 9000f1c0 <prvTimerTask+0x234>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000f1a2:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000f1a6:	2700      	movs	r7, #0
9000f1a8:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f1aa:	f7ff fdb3 	bl	9000ed14 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f1ae:	463b      	mov	r3, r7
9000f1b0:	463a      	mov	r2, r7
9000f1b2:	a904      	add	r1, sp, #16
9000f1b4:	6820      	ldr	r0, [r4, #0]
9000f1b6:	f7fe f971 	bl	9000d49c <xQueueGenericSend>
			configASSERT( xResult );
9000f1ba:	2800      	cmp	r0, #0
9000f1bc:	f47f af16 	bne.w	9000efec <prvTimerTask+0x60>
9000f1c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f1c4:	f383 8811 	msr	BASEPRI, r3
9000f1c8:	f3bf 8f6f 	isb	sy
9000f1cc:	f3bf 8f4f 	dsb	sy
9000f1d0:	e7fe      	b.n	9000f1d0 <prvTimerTask+0x244>
							vPortFree( pxTimer );
9000f1d2:	4638      	mov	r0, r7
9000f1d4:	f7fd fd5a 	bl	9000cc8c <vPortFree>
9000f1d8:	e70c      	b.n	9000eff4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f1da:	4641      	mov	r1, r8
9000f1dc:	6830      	ldr	r0, [r6, #0]
9000f1de:	f7fd fdd9 	bl	9000cd94 <vListInsert>
	return xProcessTimerNow;
9000f1e2:	e703      	b.n	9000efec <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f1e4:	4b0d      	ldr	r3, [pc, #52]	@ (9000f21c <prvTimerTask+0x290>)
9000f1e6:	1d39      	adds	r1, r7, #4
9000f1e8:	6818      	ldr	r0, [r3, #0]
9000f1ea:	f7fd fdd3 	bl	9000cd94 <vListInsert>
	return xProcessTimerNow;
9000f1ee:	e701      	b.n	9000eff4 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f1f0:	4b0a      	ldr	r3, [pc, #40]	@ (9000f21c <prvTimerTask+0x290>)
9000f1f2:	4641      	mov	r1, r8
9000f1f4:	6818      	ldr	r0, [r3, #0]
9000f1f6:	f7fd fdcd 	bl	9000cd94 <vListInsert>
	return xProcessTimerNow;
9000f1fa:	e6f7      	b.n	9000efec <prvTimerTask+0x60>
9000f1fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f200:	f383 8811 	msr	BASEPRI, r3
9000f204:	f3bf 8f6f 	isb	sy
9000f208:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000f20c:	e7fe      	b.n	9000f20c <prvTimerTask+0x280>
9000f20e:	bf00      	nop
9000f210:	2402187c 	.word	0x2402187c
9000f214:	2402186c 	.word	0x2402186c
9000f218:	24021874 	.word	0x24021874
9000f21c:	24021878 	.word	0x24021878

9000f220 <xTimerCreateTimerTask>:
{
9000f220:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000f222:	4c23      	ldr	r4, [pc, #140]	@ (9000f2b0 <xTimerCreateTimerTask+0x90>)
{
9000f224:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
9000f226:	f7fd fe4d 	bl	9000cec4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000f22a:	6825      	ldr	r5, [r4, #0]
9000f22c:	b335      	cbz	r5, 9000f27c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9000f22e:	f7fd fe6b 	bl	9000cf08 <vPortExitCritical>
	if( xTimerQueue != NULL )
9000f232:	6823      	ldr	r3, [r4, #0]
9000f234:	b1cb      	cbz	r3, 9000f26a <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000f236:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000f238:	aa07      	add	r2, sp, #28
9000f23a:	a906      	add	r1, sp, #24
9000f23c:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000f23e:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000f240:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000f244:	f7fd fc56 	bl	9000caf4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000f248:	4623      	mov	r3, r4
9000f24a:	9a07      	ldr	r2, [sp, #28]
9000f24c:	9500      	str	r5, [sp, #0]
9000f24e:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9000f252:	e9cd 1001 	strd	r1, r0, [sp, #4]
9000f256:	4917      	ldr	r1, [pc, #92]	@ (9000f2b4 <xTimerCreateTimerTask+0x94>)
9000f258:	4817      	ldr	r0, [pc, #92]	@ (9000f2b8 <xTimerCreateTimerTask+0x98>)
9000f25a:	f7ff fa4d 	bl	9000e6f8 <xTaskCreateStatic>
9000f25e:	4b17      	ldr	r3, [pc, #92]	@ (9000f2bc <xTimerCreateTimerTask+0x9c>)
9000f260:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000f262:	b110      	cbz	r0, 9000f26a <xTimerCreateTimerTask+0x4a>
}
9000f264:	2001      	movs	r0, #1
9000f266:	b009      	add	sp, #36	@ 0x24
9000f268:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000f26a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f26e:	f383 8811 	msr	BASEPRI, r3
9000f272:	f3bf 8f6f 	isb	sy
9000f276:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000f27a:	e7fe      	b.n	9000f27a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9000f27c:	4f10      	ldr	r7, [pc, #64]	@ (9000f2c0 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9000f27e:	4e11      	ldr	r6, [pc, #68]	@ (9000f2c4 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
9000f280:	4638      	mov	r0, r7
9000f282:	f7fd fd69 	bl	9000cd58 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000f286:	4630      	mov	r0, r6
9000f288:	f7fd fd66 	bl	9000cd58 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000f28c:	4a0e      	ldr	r2, [pc, #56]	@ (9000f2c8 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000f28e:	9500      	str	r5, [sp, #0]
9000f290:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000f292:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000f294:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000f296:	4a0d      	ldr	r2, [pc, #52]	@ (9000f2cc <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000f298:	4b0d      	ldr	r3, [pc, #52]	@ (9000f2d0 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9000f29a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000f29c:	4a0d      	ldr	r2, [pc, #52]	@ (9000f2d4 <xTimerCreateTimerTask+0xb4>)
9000f29e:	f7fd ffa9 	bl	9000d1f4 <xQueueGenericCreateStatic>
9000f2a2:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9000f2a4:	2800      	cmp	r0, #0
9000f2a6:	d0c2      	beq.n	9000f22e <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000f2a8:	490b      	ldr	r1, [pc, #44]	@ (9000f2d8 <xTimerCreateTimerTask+0xb8>)
9000f2aa:	f7fe feeb 	bl	9000e084 <vQueueAddToRegistry>
9000f2ae:	e7be      	b.n	9000f22e <xTimerCreateTimerTask+0xe>
9000f2b0:	24021874 	.word	0x24021874
9000f2b4:	9002bd10 	.word	0x9002bd10
9000f2b8:	9000ef8d 	.word	0x9000ef8d
9000f2bc:	24021870 	.word	0x24021870
9000f2c0:	24021894 	.word	0x24021894
9000f2c4:	24021880 	.word	0x24021880
9000f2c8:	2402187c 	.word	0x2402187c
9000f2cc:	24021878 	.word	0x24021878
9000f2d0:	2402177c 	.word	0x2402177c
9000f2d4:	240217cc 	.word	0x240217cc
9000f2d8:	9002bd08 	.word	0x9002bd08

9000f2dc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000f2dc:	8880      	ldrh	r0, [r0, #4]
9000f2de:	4770      	bx	lr

9000f2e0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000f2e0:	b570      	push	{r4, r5, r6, lr}
9000f2e2:	6803      	ldr	r3, [r0, #0]
9000f2e4:	460c      	mov	r4, r1
9000f2e6:	2100      	movs	r1, #0
9000f2e8:	4605      	mov	r5, r0
9000f2ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000f2ec:	4798      	blx	r3
9000f2ee:	4606      	mov	r6, r0
9000f2f0:	682b      	ldr	r3, [r5, #0]
9000f2f2:	4628      	mov	r0, r5
9000f2f4:	1ba4      	subs	r4, r4, r6
9000f2f6:	6a1b      	ldr	r3, [r3, #32]
9000f2f8:	b2a4      	uxth	r4, r4
9000f2fa:	4798      	blx	r3
9000f2fc:	fbb4 f0f0 	udiv	r0, r4, r0
9000f300:	bd70      	pop	{r4, r5, r6, pc}

9000f302 <_ZN8touchgfx17AbstractPartition5clearEv>:
9000f302:	2300      	movs	r3, #0
9000f304:	8083      	strh	r3, [r0, #4]
9000f306:	4770      	bx	lr

9000f308 <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000f308:	b510      	push	{r4, lr}
9000f30a:	6803      	ldr	r3, [r0, #0]
9000f30c:	4604      	mov	r4, r0
9000f30e:	8881      	ldrh	r1, [r0, #4]
9000f310:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000f312:	4798      	blx	r3
9000f314:	88a3      	ldrh	r3, [r4, #4]
9000f316:	3301      	adds	r3, #1
9000f318:	80a3      	strh	r3, [r4, #4]
9000f31a:	bd10      	pop	{r4, pc}

9000f31c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000f31c:	6803      	ldr	r3, [r0, #0]
9000f31e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000f320:	4718      	bx	r3

9000f322 <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000f322:	4770      	bx	lr

9000f324 <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000f324:	4a02      	ldr	r2, [pc, #8]	@ (9000f330 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000f326:	6002      	str	r2, [r0, #0]
9000f328:	2200      	movs	r2, #0
9000f32a:	8082      	strh	r2, [r0, #4]
9000f32c:	4770      	bx	lr
9000f32e:	bf00      	nop
9000f330:	9002bd20 	.word	0x9002bd20

9000f334 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000f334:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000f336:	2000      	movs	r0, #0
9000f338:	b12b      	cbz	r3, 9000f346 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000f33a:	b920      	cbnz	r0, 9000f346 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000f33c:	1a5a      	subs	r2, r3, r1
9000f33e:	699b      	ldr	r3, [r3, #24]
9000f340:	4250      	negs	r0, r2
9000f342:	4150      	adcs	r0, r2
9000f344:	e7f8      	b.n	9000f338 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000f346:	4770      	bx	lr

9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000f348:	2300      	movs	r3, #0
9000f34a:	6148      	str	r0, [r1, #20]
9000f34c:	618b      	str	r3, [r1, #24]
9000f34e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000f350:	b913      	cbnz	r3, 9000f358 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9000f352:	6281      	str	r1, [r0, #40]	@ 0x28
9000f354:	4770      	bx	lr
9000f356:	4613      	mov	r3, r2
9000f358:	699a      	ldr	r2, [r3, #24]
9000f35a:	2a00      	cmp	r2, #0
9000f35c:	d1fb      	bne.n	9000f356 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9000f35e:	6199      	str	r1, [r3, #24]
9000f360:	4770      	bx	lr

9000f362 <_ZN8touchgfx9Container9removeAllEv>:
9000f362:	2200      	movs	r2, #0
9000f364:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000f366:	b123      	cbz	r3, 9000f372 <_ZN8touchgfx9Container9removeAllEv+0x10>
9000f368:	6999      	ldr	r1, [r3, #24]
9000f36a:	6281      	str	r1, [r0, #40]	@ 0x28
9000f36c:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000f370:	e7f8      	b.n	9000f364 <_ZN8touchgfx9Container9removeAllEv+0x2>
9000f372:	4770      	bx	lr

9000f374 <_ZN8touchgfx9Container6unlinkEv>:
9000f374:	2300      	movs	r3, #0
9000f376:	6283      	str	r3, [r0, #40]	@ 0x28
9000f378:	4770      	bx	lr

9000f37a <_ZNK8touchgfx9Container12getSolidRectEv>:
9000f37a:	2200      	movs	r2, #0
9000f37c:	8002      	strh	r2, [r0, #0]
9000f37e:	8042      	strh	r2, [r0, #2]
9000f380:	8082      	strh	r2, [r0, #4]
9000f382:	80c2      	strh	r2, [r0, #6]
9000f384:	4770      	bx	lr

9000f386 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000f386:	b570      	push	{r4, r5, r6, lr}
9000f388:	460d      	mov	r5, r1
9000f38a:	4616      	mov	r6, r2
9000f38c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000f38e:	b13c      	cbz	r4, 9000f3a0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000f390:	6823      	ldr	r3, [r4, #0]
9000f392:	4620      	mov	r0, r4
9000f394:	4632      	mov	r2, r6
9000f396:	4629      	mov	r1, r5
9000f398:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f39a:	4798      	blx	r3
9000f39c:	69a4      	ldr	r4, [r4, #24]
9000f39e:	e7f6      	b.n	9000f38e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000f3a0:	bd70      	pop	{r4, r5, r6, pc}

9000f3a2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000f3a2:	b538      	push	{r3, r4, r5, lr}
9000f3a4:	460d      	mov	r5, r1
9000f3a6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000f3a8:	b134      	cbz	r4, 9000f3b8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000f3aa:	682b      	ldr	r3, [r5, #0]
9000f3ac:	4621      	mov	r1, r4
9000f3ae:	4628      	mov	r0, r5
9000f3b0:	689b      	ldr	r3, [r3, #8]
9000f3b2:	4798      	blx	r3
9000f3b4:	69a4      	ldr	r4, [r4, #24]
9000f3b6:	e7f7      	b.n	9000f3a8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000f3b8:	bd38      	pop	{r3, r4, r5, pc}

9000f3ba <_ZN8touchgfx9ContainerD1Ev>:
9000f3ba:	4770      	bx	lr

9000f3bc <_ZN8touchgfx9ContainerD0Ev>:
9000f3bc:	b510      	push	{r4, lr}
9000f3be:	4604      	mov	r4, r0
9000f3c0:	212c      	movs	r1, #44	@ 0x2c
9000f3c2:	f018 fc61 	bl	90027c88 <_ZdlPvj>
9000f3c6:	4620      	mov	r0, r4
9000f3c8:	bd10      	pop	{r4, pc}

9000f3ca <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000f3ca:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000f3cc:	b19b      	cbz	r3, 9000f3f6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000f3ce:	428b      	cmp	r3, r1
9000f3d0:	d109      	bne.n	9000f3e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000f3d2:	699a      	ldr	r2, [r3, #24]
9000f3d4:	2100      	movs	r1, #0
9000f3d6:	6159      	str	r1, [r3, #20]
9000f3d8:	6282      	str	r2, [r0, #40]	@ 0x28
9000f3da:	b902      	cbnz	r2, 9000f3de <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9000f3dc:	4770      	bx	lr
9000f3de:	6199      	str	r1, [r3, #24]
9000f3e0:	4770      	bx	lr
9000f3e2:	4613      	mov	r3, r2
9000f3e4:	b13a      	cbz	r2, 9000f3f6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000f3e6:	699a      	ldr	r2, [r3, #24]
9000f3e8:	428a      	cmp	r2, r1
9000f3ea:	d1fa      	bne.n	9000f3e2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
9000f3ec:	698a      	ldr	r2, [r1, #24]
9000f3ee:	619a      	str	r2, [r3, #24]
9000f3f0:	2300      	movs	r3, #0
9000f3f2:	e9c1 3305 	strd	r3, r3, [r1, #20]
9000f3f6:	4770      	bx	lr

9000f3f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9000f3f8:	b410      	push	{r4}
9000f3fa:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000f3fc:	4604      	mov	r4, r0
9000f3fe:	b92b      	cbnz	r3, 9000f40c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9000f400:	6803      	ldr	r3, [r0, #0]
9000f402:	4611      	mov	r1, r2
9000f404:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f408:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9000f40a:	4718      	bx	r3
9000f40c:	b941      	cbnz	r1, 9000f420 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9000f40e:	6193      	str	r3, [r2, #24]
9000f410:	6282      	str	r2, [r0, #40]	@ 0x28
9000f412:	6154      	str	r4, [r2, #20]
9000f414:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f418:	4770      	bx	lr
9000f41a:	4603      	mov	r3, r0
9000f41c:	2800      	cmp	r0, #0
9000f41e:	d0f9      	beq.n	9000f414 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9000f420:	4299      	cmp	r1, r3
9000f422:	6998      	ldr	r0, [r3, #24]
9000f424:	d1f9      	bne.n	9000f41a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9000f426:	6190      	str	r0, [r2, #24]
9000f428:	618a      	str	r2, [r1, #24]
9000f42a:	e7f2      	b.n	9000f412 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9000f42c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9000f42c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f430:	461f      	mov	r7, r3
9000f432:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9000f436:	460d      	mov	r5, r1
9000f438:	4616      	mov	r6, r2
9000f43a:	b103      	cbz	r3, 9000f43e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9000f43c:	6038      	str	r0, [r7, #0]
9000f43e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000f440:	b314      	cbz	r4, 9000f488 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9000f442:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9000f446:	b1eb      	cbz	r3, 9000f484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000f448:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9000f44c:	428d      	cmp	r5, r1
9000f44e:	db19      	blt.n	9000f484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000f450:	b289      	uxth	r1, r1
9000f452:	8923      	ldrh	r3, [r4, #8]
9000f454:	440b      	add	r3, r1
9000f456:	b21b      	sxth	r3, r3
9000f458:	429d      	cmp	r5, r3
9000f45a:	da13      	bge.n	9000f484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000f45c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9000f460:	4296      	cmp	r6, r2
9000f462:	db0f      	blt.n	9000f484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000f464:	b292      	uxth	r2, r2
9000f466:	8963      	ldrh	r3, [r4, #10]
9000f468:	4413      	add	r3, r2
9000f46a:	b21b      	sxth	r3, r3
9000f46c:	429e      	cmp	r6, r3
9000f46e:	da09      	bge.n	9000f484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000f470:	6823      	ldr	r3, [r4, #0]
9000f472:	1ab2      	subs	r2, r6, r2
9000f474:	1a69      	subs	r1, r5, r1
9000f476:	4620      	mov	r0, r4
9000f478:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
9000f47c:	b212      	sxth	r2, r2
9000f47e:	463b      	mov	r3, r7
9000f480:	b209      	sxth	r1, r1
9000f482:	47c0      	blx	r8
9000f484:	69a4      	ldr	r4, [r4, #24]
9000f486:	e7db      	b.n	9000f440 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9000f488:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000f48c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9000f48c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f490:	4c6d      	ldr	r4, [pc, #436]	@ (9000f648 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9000f492:	b0a1      	sub	sp, #132	@ 0x84
9000f494:	4606      	mov	r6, r0
9000f496:	6824      	ldr	r4, [r4, #0]
9000f498:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
9000f49a:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
9000f49e:	2400      	movs	r4, #0
9000f4a0:	9303      	str	r3, [sp, #12]
9000f4a2:	802c      	strh	r4, [r5, #0]
9000f4a4:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
9000f4a6:	802c      	strh	r4, [r5, #0]
9000f4a8:	601c      	str	r4, [r3, #0]
9000f4aa:	e9cd 1201 	strd	r1, r2, [sp, #4]
9000f4ae:	f7ff ffbd 	bl	9000f42c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000f4b2:	f1b9 0f03 	cmp.w	r9, #3
9000f4b6:	f340 80c1 	ble.w	9000f63c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9000f4ba:	4631      	mov	r1, r6
9000f4bc:	a80c      	add	r0, sp, #48	@ 0x30
9000f4be:	f007 f837 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000f4c2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9000f4c6:	9306      	str	r3, [sp, #24]
9000f4c8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9000f4cc:	9307      	str	r3, [sp, #28]
9000f4ce:	9b03      	ldr	r3, [sp, #12]
9000f4d0:	f8d3 a000 	ldr.w	sl, [r3]
9000f4d4:	f1ba 0f00 	cmp.w	sl, #0
9000f4d8:	f000 80b3 	beq.w	9000f642 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
9000f4dc:	4651      	mov	r1, sl
9000f4de:	a810      	add	r0, sp, #64	@ 0x40
9000f4e0:	f007 f826 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000f4e4:	2002      	movs	r0, #2
9000f4e6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
9000f4ea:	9b01      	ldr	r3, [sp, #4]
9000f4ec:	9a06      	ldr	r2, [sp, #24]
9000f4ee:	fb91 f1f0 	sdiv	r1, r1, r0
9000f4f2:	189d      	adds	r5, r3, r2
9000f4f4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
9000f4f8:	9a07      	ldr	r2, [sp, #28]
9000f4fa:	4419      	add	r1, r3
9000f4fc:	9b02      	ldr	r3, [sp, #8]
9000f4fe:	4413      	add	r3, r2
9000f500:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
9000f504:	1a6d      	subs	r5, r5, r1
9000f506:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
9000f50a:	fb92 f2f0 	sdiv	r2, r2, r0
9000f50e:	440a      	add	r2, r1
9000f510:	1a9b      	subs	r3, r3, r2
9000f512:	435b      	muls	r3, r3
9000f514:	fb05 3505 	mla	r5, r5, r5, r3
9000f518:	4f4c      	ldr	r7, [pc, #304]	@ (9000f64c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
9000f51a:	ac10      	add	r4, sp, #64	@ 0x40
9000f51c:	f1b9 0f0c 	cmp.w	r9, #12
9000f520:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000f522:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000f524:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000f526:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000f528:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000f52a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000f52c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9000f530:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000f534:	f04f 0303 	mov.w	r3, #3
9000f538:	bfd8      	it	le
9000f53a:	f109 32ff 	addle.w	r2, r9, #4294967295
9000f53e:	f04f 0400 	mov.w	r4, #0
9000f542:	f8cd 9000 	str.w	r9, [sp]
9000f546:	bfcc      	ite	gt
9000f548:	4698      	movgt	r8, r3
9000f54a:	fb92 f8f3 	sdivle	r8, r2, r3
9000f54e:	1c63      	adds	r3, r4, #1
9000f550:	aa10      	add	r2, sp, #64	@ 0x40
9000f552:	f004 0401 	and.w	r4, r4, #1
9000f556:	f04f 0b00 	mov.w	fp, #0
9000f55a:	9308      	str	r3, [sp, #32]
9000f55c:	9b00      	ldr	r3, [sp, #0]
9000f55e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9000f562:	fb93 f3f8 	sdiv	r3, r3, r8
9000f566:	3404      	adds	r4, #4
9000f568:	b29b      	uxth	r3, r3
9000f56a:	9304      	str	r3, [sp, #16]
9000f56c:	9a04      	ldr	r2, [sp, #16]
9000f56e:	f854 3c04 	ldr.w	r3, [r4, #-4]
9000f572:	fb13 f302 	smulbb	r3, r3, r2
9000f576:	9a01      	ldr	r2, [sp, #4]
9000f578:	b29b      	uxth	r3, r3
9000f57a:	1899      	adds	r1, r3, r2
9000f57c:	9305      	str	r3, [sp, #20]
9000f57e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9000f582:	b209      	sxth	r1, r1
9000f584:	4299      	cmp	r1, r3
9000f586:	db4d      	blt.n	9000f624 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000f588:	8932      	ldrh	r2, [r6, #8]
9000f58a:	4413      	add	r3, r2
9000f58c:	b21b      	sxth	r3, r3
9000f58e:	4299      	cmp	r1, r3
9000f590:	da48      	bge.n	9000f624 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000f592:	9b04      	ldr	r3, [sp, #16]
9000f594:	6827      	ldr	r7, [r4, #0]
9000f596:	fb17 f703 	smulbb	r7, r7, r3
9000f59a:	9b02      	ldr	r3, [sp, #8]
9000f59c:	b2bf      	uxth	r7, r7
9000f59e:	18fa      	adds	r2, r7, r3
9000f5a0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
9000f5a4:	b212      	sxth	r2, r2
9000f5a6:	429a      	cmp	r2, r3
9000f5a8:	db3c      	blt.n	9000f624 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000f5aa:	8970      	ldrh	r0, [r6, #10]
9000f5ac:	4403      	add	r3, r0
9000f5ae:	b21b      	sxth	r3, r3
9000f5b0:	429a      	cmp	r2, r3
9000f5b2:	da37      	bge.n	9000f624 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000f5b4:	2300      	movs	r3, #0
9000f5b6:	4630      	mov	r0, r6
9000f5b8:	930b      	str	r3, [sp, #44]	@ 0x2c
9000f5ba:	ab0b      	add	r3, sp, #44	@ 0x2c
9000f5bc:	f7ff ff36 	bl	9000f42c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000f5c0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9000f5c2:	b37a      	cbz	r2, 9000f624 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000f5c4:	4552      	cmp	r2, sl
9000f5c6:	d02d      	beq.n	9000f624 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000f5c8:	4611      	mov	r1, r2
9000f5ca:	a80e      	add	r0, sp, #56	@ 0x38
9000f5cc:	9209      	str	r2, [sp, #36]	@ 0x24
9000f5ce:	f006 ffaf 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000f5d2:	f04f 0e02 	mov.w	lr, #2
9000f5d6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
9000f5da:	9a06      	ldr	r2, [sp, #24]
9000f5dc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
9000f5e0:	9b01      	ldr	r3, [sp, #4]
9000f5e2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
9000f5e6:	4413      	add	r3, r2
9000f5e8:	9a07      	ldr	r2, [sp, #28]
9000f5ea:	fb91 f1fe 	sdiv	r1, r1, lr
9000f5ee:	fb9c fcfe 	sdiv	ip, ip, lr
9000f5f2:	4401      	add	r1, r0
9000f5f4:	1a58      	subs	r0, r3, r1
9000f5f6:	9b02      	ldr	r3, [sp, #8]
9000f5f8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
9000f5fc:	4413      	add	r3, r2
9000f5fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9000f600:	448c      	add	ip, r1
9000f602:	eba3 030c 	sub.w	r3, r3, ip
9000f606:	435b      	muls	r3, r3
9000f608:	fb00 3300 	mla	r3, r0, r0, r3
9000f60c:	42ab      	cmp	r3, r5
9000f60e:	d208      	bcs.n	9000f622 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
9000f610:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9000f612:	461d      	mov	r5, r3
9000f614:	9803      	ldr	r0, [sp, #12]
9000f616:	6001      	str	r1, [r0, #0]
9000f618:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9000f61a:	9805      	ldr	r0, [sp, #20]
9000f61c:	8008      	strh	r0, [r1, #0]
9000f61e:	992b      	ldr	r1, [sp, #172]	@ 0xac
9000f620:	800f      	strh	r7, [r1, #0]
9000f622:	4692      	mov	sl, r2
9000f624:	f10b 0b01 	add.w	fp, fp, #1
9000f628:	3408      	adds	r4, #8
9000f62a:	f1bb 0f04 	cmp.w	fp, #4
9000f62e:	d19d      	bne.n	9000f56c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
9000f630:	9b00      	ldr	r3, [sp, #0]
9000f632:	9c08      	ldr	r4, [sp, #32]
9000f634:	444b      	add	r3, r9
9000f636:	4544      	cmp	r4, r8
9000f638:	9300      	str	r3, [sp, #0]
9000f63a:	d188      	bne.n	9000f54e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
9000f63c:	b021      	add	sp, #132	@ 0x84
9000f63e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000f642:	f04f 35ff 	mov.w	r5, #4294967295
9000f646:	e767      	b.n	9000f518 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
9000f648:	240218b4 	.word	0x240218b4
9000f64c:	900294a0 	.word	0x900294a0

9000f650 <_ZN8touchgfx4RectaNERKS0_>:
9000f650:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f654:	f9b1 7000 	ldrsh.w	r7, [r1]
9000f658:	888c      	ldrh	r4, [r1, #4]
9000f65a:	f9b0 9000 	ldrsh.w	r9, [r0]
9000f65e:	443c      	add	r4, r7
9000f660:	b2a4      	uxth	r4, r4
9000f662:	fa0f f884 	sxth.w	r8, r4
9000f666:	45c1      	cmp	r9, r8
9000f668:	da2f      	bge.n	9000f6ca <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000f66a:	8882      	ldrh	r2, [r0, #4]
9000f66c:	444a      	add	r2, r9
9000f66e:	b292      	uxth	r2, r2
9000f670:	fa0f fe82 	sxth.w	lr, r2
9000f674:	4577      	cmp	r7, lr
9000f676:	da28      	bge.n	9000f6ca <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000f678:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9000f67c:	88cb      	ldrh	r3, [r1, #6]
9000f67e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9000f682:	442b      	add	r3, r5
9000f684:	b21b      	sxth	r3, r3
9000f686:	429e      	cmp	r6, r3
9000f688:	da1f      	bge.n	9000f6ca <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000f68a:	88c3      	ldrh	r3, [r0, #6]
9000f68c:	4433      	add	r3, r6
9000f68e:	b29b      	uxth	r3, r3
9000f690:	fa0f fc83 	sxth.w	ip, r3
9000f694:	4565      	cmp	r5, ip
9000f696:	da18      	bge.n	9000f6ca <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000f698:	454f      	cmp	r7, r9
9000f69a:	bfb8      	it	lt
9000f69c:	464f      	movlt	r7, r9
9000f69e:	42b5      	cmp	r5, r6
9000f6a0:	bfb8      	it	lt
9000f6a2:	4635      	movlt	r5, r6
9000f6a4:	45f0      	cmp	r8, lr
9000f6a6:	bfd8      	it	le
9000f6a8:	4622      	movle	r2, r4
9000f6aa:	1bd2      	subs	r2, r2, r7
9000f6ac:	8082      	strh	r2, [r0, #4]
9000f6ae:	884a      	ldrh	r2, [r1, #2]
9000f6b0:	88c9      	ldrh	r1, [r1, #6]
9000f6b2:	8007      	strh	r7, [r0, #0]
9000f6b4:	440a      	add	r2, r1
9000f6b6:	8045      	strh	r5, [r0, #2]
9000f6b8:	b292      	uxth	r2, r2
9000f6ba:	b211      	sxth	r1, r2
9000f6bc:	458c      	cmp	ip, r1
9000f6be:	bfa8      	it	ge
9000f6c0:	4613      	movge	r3, r2
9000f6c2:	1b5b      	subs	r3, r3, r5
9000f6c4:	80c3      	strh	r3, [r0, #6]
9000f6c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000f6ca:	2300      	movs	r3, #0
9000f6cc:	8003      	strh	r3, [r0, #0]
9000f6ce:	8043      	strh	r3, [r0, #2]
9000f6d0:	8083      	strh	r3, [r0, #4]
9000f6d2:	80c3      	strh	r3, [r0, #6]
9000f6d4:	e7f7      	b.n	9000f6c6 <_ZN8touchgfx4RectaNERKS0_+0x76>

9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>:
9000f6d6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9000f6da:	2b00      	cmp	r3, #0
9000f6dc:	dd06      	ble.n	9000f6ec <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9000f6de:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9000f6e2:	2800      	cmp	r0, #0
9000f6e4:	bfcc      	ite	gt
9000f6e6:	2000      	movgt	r0, #0
9000f6e8:	2001      	movle	r0, #1
9000f6ea:	4770      	bx	lr
9000f6ec:	2001      	movs	r0, #1
9000f6ee:	4770      	bx	lr

9000f6f0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
9000f6f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f6f4:	2300      	movs	r3, #0
9000f6f6:	4604      	mov	r4, r0
9000f6f8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9000f6fa:	8003      	strh	r3, [r0, #0]
9000f6fc:	8043      	strh	r3, [r0, #2]
9000f6fe:	8083      	strh	r3, [r0, #4]
9000f700:	80c3      	strh	r3, [r0, #6]
9000f702:	2d00      	cmp	r5, #0
9000f704:	d040      	beq.n	9000f788 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9000f706:	1d28      	adds	r0, r5, #4
9000f708:	f7ff ffe5 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9000f70c:	b988      	cbnz	r0, 9000f732 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9000f70e:	4620      	mov	r0, r4
9000f710:	f7ff ffe1 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9000f714:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9000f718:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9000f71c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
9000f720:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9000f724:	b138      	cbz	r0, 9000f736 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9000f726:	8022      	strh	r2, [r4, #0]
9000f728:	8063      	strh	r3, [r4, #2]
9000f72a:	f8a4 e004 	strh.w	lr, [r4, #4]
9000f72e:	f8a4 c006 	strh.w	ip, [r4, #6]
9000f732:	69ad      	ldr	r5, [r5, #24]
9000f734:	e7e5      	b.n	9000f702 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9000f736:	f9b4 0000 	ldrsh.w	r0, [r4]
9000f73a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9000f73e:	4290      	cmp	r0, r2
9000f740:	4607      	mov	r7, r0
9000f742:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9000f746:	460e      	mov	r6, r1
9000f748:	bfa8      	it	ge
9000f74a:	4617      	movge	r7, r2
9000f74c:	4299      	cmp	r1, r3
9000f74e:	4472      	add	r2, lr
9000f750:	f8b4 e006 	ldrh.w	lr, [r4, #6]
9000f754:	bfa8      	it	ge
9000f756:	461e      	movge	r6, r3
9000f758:	4440      	add	r0, r8
9000f75a:	4471      	add	r1, lr
9000f75c:	4463      	add	r3, ip
9000f75e:	b200      	sxth	r0, r0
9000f760:	8027      	strh	r7, [r4, #0]
9000f762:	b212      	sxth	r2, r2
9000f764:	8066      	strh	r6, [r4, #2]
9000f766:	b209      	sxth	r1, r1
9000f768:	b21b      	sxth	r3, r3
9000f76a:	4290      	cmp	r0, r2
9000f76c:	bfac      	ite	ge
9000f76e:	ebc7 0200 	rsbge	r2, r7, r0
9000f772:	ebc7 0202 	rsblt	r2, r7, r2
9000f776:	4299      	cmp	r1, r3
9000f778:	bfac      	ite	ge
9000f77a:	ebc6 0301 	rsbge	r3, r6, r1
9000f77e:	ebc6 0303 	rsblt	r3, r6, r3
9000f782:	80a2      	strh	r2, [r4, #4]
9000f784:	80e3      	strh	r3, [r4, #6]
9000f786:	e7d4      	b.n	9000f732 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9000f788:	4620      	mov	r0, r4
9000f78a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000f78e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
9000f78e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9000f792:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9000f796:	b383      	cbz	r3, 9000f7fa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9000f798:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000f79a:	b374      	cbz	r4, 9000f7fa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9000f79c:	f9b1 5000 	ldrsh.w	r5, [r1]
9000f7a0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
9000f7a4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
9000f7a8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
9000f7ac:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9000f7b0:	b303      	cbz	r3, 9000f7f4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9000f7b2:	4668      	mov	r0, sp
9000f7b4:	1d21      	adds	r1, r4, #4
9000f7b6:	f8ad 5000 	strh.w	r5, [sp]
9000f7ba:	f8ad 6002 	strh.w	r6, [sp, #2]
9000f7be:	f8ad 7004 	strh.w	r7, [sp, #4]
9000f7c2:	f8ad 8006 	strh.w	r8, [sp, #6]
9000f7c6:	f7ff ff43 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9000f7ca:	4668      	mov	r0, sp
9000f7cc:	f7ff ff83 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9000f7d0:	b980      	cbnz	r0, 9000f7f4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9000f7d2:	f8bd 3000 	ldrh.w	r3, [sp]
9000f7d6:	4669      	mov	r1, sp
9000f7d8:	88a2      	ldrh	r2, [r4, #4]
9000f7da:	4620      	mov	r0, r4
9000f7dc:	1a9b      	subs	r3, r3, r2
9000f7de:	88e2      	ldrh	r2, [r4, #6]
9000f7e0:	f8ad 3000 	strh.w	r3, [sp]
9000f7e4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9000f7e8:	1a9b      	subs	r3, r3, r2
9000f7ea:	f8ad 3002 	strh.w	r3, [sp, #2]
9000f7ee:	6823      	ldr	r3, [r4, #0]
9000f7f0:	689b      	ldr	r3, [r3, #8]
9000f7f2:	4798      	blx	r3
9000f7f4:	69a4      	ldr	r4, [r4, #24]
9000f7f6:	2c00      	cmp	r4, #0
9000f7f8:	d1d8      	bne.n	9000f7ac <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
9000f7fa:	b002      	add	sp, #8
9000f7fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000f800 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
9000f800:	b573      	push	{r0, r1, r4, r5, r6, lr}
9000f802:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9000f806:	460d      	mov	r5, r1
9000f808:	4616      	mov	r6, r2
9000f80a:	b323      	cbz	r3, 9000f856 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9000f80c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000f80e:	b314      	cbz	r4, 9000f856 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9000f810:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9000f814:	b1eb      	cbz	r3, 9000f852 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9000f816:	6828      	ldr	r0, [r5, #0]
9000f818:	466b      	mov	r3, sp
9000f81a:	6869      	ldr	r1, [r5, #4]
9000f81c:	c303      	stmia	r3!, {r0, r1}
9000f81e:	4668      	mov	r0, sp
9000f820:	1d21      	adds	r1, r4, #4
9000f822:	f7ff ff15 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9000f826:	4668      	mov	r0, sp
9000f828:	f7ff ff55 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9000f82c:	b988      	cbnz	r0, 9000f852 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9000f82e:	f8bd 3000 	ldrh.w	r3, [sp]
9000f832:	4669      	mov	r1, sp
9000f834:	88a2      	ldrh	r2, [r4, #4]
9000f836:	4620      	mov	r0, r4
9000f838:	1a9b      	subs	r3, r3, r2
9000f83a:	88e2      	ldrh	r2, [r4, #6]
9000f83c:	f8ad 3000 	strh.w	r3, [sp]
9000f840:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9000f844:	1a9b      	subs	r3, r3, r2
9000f846:	4632      	mov	r2, r6
9000f848:	f8ad 3002 	strh.w	r3, [sp, #2]
9000f84c:	6823      	ldr	r3, [r4, #0]
9000f84e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9000f850:	4798      	blx	r3
9000f852:	69a4      	ldr	r4, [r4, #24]
9000f854:	e7db      	b.n	9000f80e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9000f856:	b002      	add	sp, #8
9000f858:	bd70      	pop	{r4, r5, r6, pc}

9000f85a <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
9000f85a:	f9b0 00e4 	ldrsh.w	r0, [r0, #228]	@ 0xe4
9000f85e:	4770      	bx	lr

9000f860 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
9000f860:	f9b0 00e6 	ldrsh.w	r0, [r0, #230]	@ 0xe6
9000f864:	4770      	bx	lr

9000f866 <_ZNK8touchgfx6Slider11getMinValueEv>:
9000f866:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	@ 0x30
9000f86a:	4770      	bx	lr

9000f86c <_ZNK8touchgfx6Slider11getMaxValueEv>:
9000f86c:	f9b0 0032 	ldrsh.w	r0, [r0, #50]	@ 0x32
9000f870:	4770      	bx	lr

9000f872 <_ZN8touchgfx6Slider8setValueEs>:
9000f872:	b570      	push	{r4, r5, r6, lr}
9000f874:	6803      	ldr	r3, [r0, #0]
9000f876:	4604      	mov	r4, r0
9000f878:	e9d3 532b 	ldrd	r5, r3, [r3, #172]	@ 0xac
9000f87c:	4798      	blx	r3
9000f87e:	4601      	mov	r1, r0
9000f880:	462b      	mov	r3, r5
9000f882:	4620      	mov	r0, r4
9000f884:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000f888:	4718      	bx	r3

9000f88a <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
9000f88a:	b570      	push	{r4, r5, r6, lr}
9000f88c:	6803      	ldr	r3, [r0, #0]
9000f88e:	4604      	mov	r4, r0
9000f890:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
9000f894:	f8d3 60ac 	ldr.w	r6, [r3, #172]	@ 0xac
9000f898:	b95a      	cbnz	r2, 9000f8b2 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x28>
9000f89a:	894d      	ldrh	r5, [r1, #10]
9000f89c:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
9000f8a0:	4620      	mov	r0, r4
9000f8a2:	4798      	blx	r3
9000f8a4:	1a29      	subs	r1, r5, r0
9000f8a6:	4633      	mov	r3, r6
9000f8a8:	4620      	mov	r0, r4
9000f8aa:	b209      	sxth	r1, r1
9000f8ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000f8b0:	4718      	bx	r3
9000f8b2:	898d      	ldrh	r5, [r1, #12]
9000f8b4:	e7f2      	b.n	9000f89c <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x12>

9000f8b6 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
9000f8b6:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
9000f8ba:	2302      	movs	r3, #2
9000f8bc:	b922      	cbnz	r2, 9000f8c8 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x12>
9000f8be:	f9b0 0094 	ldrsh.w	r0, [r0, #148]	@ 0x94
9000f8c2:	fb90 f0f3 	sdiv	r0, r0, r3
9000f8c6:	4770      	bx	lr
9000f8c8:	f9b0 0096 	ldrsh.w	r0, [r0, #150]	@ 0x96
9000f8cc:	e7f9      	b.n	9000f8c2 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

9000f8ce <_ZN8touchgfx6Slider13setValueRangeEsss>:
9000f8ce:	8642      	strh	r2, [r0, #50]	@ 0x32
9000f8d0:	6802      	ldr	r2, [r0, #0]
9000f8d2:	8601      	strh	r1, [r0, #48]	@ 0x30
9000f8d4:	4619      	mov	r1, r3
9000f8d6:	b410      	push	{r4}
9000f8d8:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f8dc:	f8d2 20a8 	ldr.w	r2, [r2, #168]	@ 0xa8
9000f8e0:	4710      	bx	r2

9000f8e2 <_ZN8touchgfx6Slider13setValueRangeEss>:
9000f8e2:	f9b0 302e 	ldrsh.w	r3, [r0, #46]	@ 0x2e
9000f8e6:	428b      	cmp	r3, r1
9000f8e8:	b410      	push	{r4}
9000f8ea:	db09      	blt.n	9000f900 <_ZN8touchgfx6Slider13setValueRangeEss+0x1e>
9000f8ec:	4293      	cmp	r3, r2
9000f8ee:	bfa8      	it	ge
9000f8f0:	4613      	movge	r3, r2
9000f8f2:	6804      	ldr	r4, [r0, #0]
9000f8f4:	f8d4 4098 	ldr.w	r4, [r4, #152]	@ 0x98
9000f8f8:	46a4      	mov	ip, r4
9000f8fa:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f8fe:	4760      	bx	ip
9000f900:	460b      	mov	r3, r1
9000f902:	e7f6      	b.n	9000f8f2 <_ZN8touchgfx6Slider13setValueRangeEss+0x10>

9000f904 <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
9000f904:	f9b0 20e6 	ldrsh.w	r2, [r0, #230]	@ 0xe6
9000f908:	f9b0 00e4 	ldrsh.w	r0, [r0, #228]	@ 0xe4
9000f90c:	1a10      	subs	r0, r2, r0
9000f90e:	4770      	bx	lr

9000f910 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
9000f910:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	@ 0x32
9000f914:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	@ 0x30
9000f918:	1a10      	subs	r0, r2, r0
9000f91a:	4770      	bx	lr

9000f91c <_ZN8touchgfx6SliderD1Ev>:
9000f91c:	4770      	bx	lr

9000f91e <_ZN8touchgfx6SliderD0Ev>:
9000f91e:	b510      	push	{r4, lr}
9000f920:	4604      	mov	r4, r0
9000f922:	21f4      	movs	r1, #244	@ 0xf4
9000f924:	f018 f9b0 	bl	90027c88 <_ZdlPvj>
9000f928:	4620      	mov	r0, r4
9000f92a:	bd10      	pop	{r4, pc}

9000f92c <_ZNK8touchgfx6Slider15valueToPositionEi>:
9000f92c:	b570      	push	{r4, r5, r6, lr}
9000f92e:	f9b0 5032 	ldrsh.w	r5, [r0, #50]	@ 0x32
9000f932:	4604      	mov	r4, r0
9000f934:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	@ 0x30
9000f938:	428d      	cmp	r5, r1
9000f93a:	bfa8      	it	ge
9000f93c:	460d      	movge	r5, r1
9000f93e:	429d      	cmp	r5, r3
9000f940:	bfac      	ite	ge
9000f942:	ebc3 0505 	rsbge	r5, r3, r5
9000f946:	ebc3 0503 	rsblt	r5, r3, r3
9000f94a:	6803      	ldr	r3, [r0, #0]
9000f94c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
9000f950:	4798      	blx	r3
9000f952:	6823      	ldr	r3, [r4, #0]
9000f954:	4606      	mov	r6, r0
9000f956:	4620      	mov	r0, r4
9000f958:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
9000f95c:	4798      	blx	r3
9000f95e:	4631      	mov	r1, r6
9000f960:	4602      	mov	r2, r0
9000f962:	4628      	mov	r0, r5
9000f964:	f007 fa37 	bl	90016dd6 <_ZN8touchgfx6muldivElll>
9000f968:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000f96c:	2b01      	cmp	r3, #1
9000f96e:	bf0b      	itete	eq
9000f970:	f8b4 30e6 	ldrheq.w	r3, [r4, #230]	@ 0xe6
9000f974:	f8b4 30e4 	ldrhne.w	r3, [r4, #228]	@ 0xe4
9000f978:	1a18      	subeq	r0, r3, r0
9000f97a:	18c0      	addne	r0, r0, r3
9000f97c:	b200      	sxth	r0, r0
9000f97e:	bd70      	pop	{r4, r5, r6, pc}

9000f980 <_ZNK8touchgfx6Slider15positionToValueEs>:
9000f980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000f982:	f9b0 30e6 	ldrsh.w	r3, [r0, #230]	@ 0xe6
9000f986:	4605      	mov	r5, r0
9000f988:	f9b0 40e4 	ldrsh.w	r4, [r0, #228]	@ 0xe4
9000f98c:	4299      	cmp	r1, r3
9000f98e:	f890 202c 	ldrb.w	r2, [r0, #44]	@ 0x2c
9000f992:	f9b0 6030 	ldrsh.w	r6, [r0, #48]	@ 0x30
9000f996:	bfa8      	it	ge
9000f998:	4619      	movge	r1, r3
9000f99a:	42a1      	cmp	r1, r4
9000f99c:	bfb8      	it	lt
9000f99e:	4621      	movlt	r1, r4
9000f9a0:	2a01      	cmp	r2, #1
9000f9a2:	b289      	uxth	r1, r1
9000f9a4:	bf08      	it	eq
9000f9a6:	1a5c      	subeq	r4, r3, r1
9000f9a8:	6803      	ldr	r3, [r0, #0]
9000f9aa:	bf18      	it	ne
9000f9ac:	1b0c      	subne	r4, r1, r4
9000f9ae:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
9000f9b2:	4798      	blx	r3
9000f9b4:	682b      	ldr	r3, [r5, #0]
9000f9b6:	4607      	mov	r7, r0
9000f9b8:	b224      	sxth	r4, r4
9000f9ba:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
9000f9be:	4628      	mov	r0, r5
9000f9c0:	4798      	blx	r3
9000f9c2:	4639      	mov	r1, r7
9000f9c4:	4602      	mov	r2, r0
9000f9c6:	4620      	mov	r0, r4
9000f9c8:	f007 fa05 	bl	90016dd6 <_ZN8touchgfx6muldivElll>
9000f9cc:	4430      	add	r0, r6
9000f9ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000f9d0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
9000f9d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f9d4:	790b      	ldrb	r3, [r1, #4]
9000f9d6:	4604      	mov	r4, r0
9000f9d8:	460d      	mov	r5, r1
9000f9da:	b32b      	cbz	r3, 9000fa28 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x58>
9000f9dc:	2b01      	cmp	r3, #1
9000f9de:	d137      	bne.n	9000fa50 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
9000f9e0:	6823      	ldr	r3, [r4, #0]
9000f9e2:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
9000f9e6:	f8d3 70ac 	ldr.w	r7, [r3, #172]	@ 0xac
9000f9ea:	2a00      	cmp	r2, #0
9000f9ec:	d12e      	bne.n	9000fa4c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
9000f9ee:	88ee      	ldrh	r6, [r5, #6]
9000f9f0:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
9000f9f4:	4620      	mov	r0, r4
9000f9f6:	4798      	blx	r3
9000f9f8:	1a31      	subs	r1, r6, r0
9000f9fa:	4620      	mov	r0, r4
9000f9fc:	b209      	sxth	r1, r1
9000f9fe:	47b8      	blx	r7
9000fa00:	792b      	ldrb	r3, [r5, #4]
9000fa02:	2b01      	cmp	r3, #1
9000fa04:	d124      	bne.n	9000fa50 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
9000fa06:	f8d4 00ec 	ldr.w	r0, [r4, #236]	@ 0xec
9000fa0a:	b308      	cbz	r0, 9000fa50 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
9000fa0c:	6803      	ldr	r3, [r0, #0]
9000fa0e:	68db      	ldr	r3, [r3, #12]
9000fa10:	4798      	blx	r3
9000fa12:	b1e8      	cbz	r0, 9000fa50 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x80>
9000fa14:	f8d4 00ec 	ldr.w	r0, [r4, #236]	@ 0xec
9000fa18:	4621      	mov	r1, r4
9000fa1a:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
9000fa1e:	6803      	ldr	r3, [r0, #0]
9000fa20:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9000fa24:	689b      	ldr	r3, [r3, #8]
9000fa26:	4718      	bx	r3
9000fa28:	f8d0 00e8 	ldr.w	r0, [r0, #232]	@ 0xe8
9000fa2c:	2800      	cmp	r0, #0
9000fa2e:	d0d7      	beq.n	9000f9e0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
9000fa30:	6803      	ldr	r3, [r0, #0]
9000fa32:	68db      	ldr	r3, [r3, #12]
9000fa34:	4798      	blx	r3
9000fa36:	2800      	cmp	r0, #0
9000fa38:	d0d2      	beq.n	9000f9e0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
9000fa3a:	f8d4 00e8 	ldr.w	r0, [r4, #232]	@ 0xe8
9000fa3e:	4621      	mov	r1, r4
9000fa40:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
9000fa44:	6803      	ldr	r3, [r0, #0]
9000fa46:	689b      	ldr	r3, [r3, #8]
9000fa48:	4798      	blx	r3
9000fa4a:	e7c9      	b.n	9000f9e0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
9000fa4c:	892e      	ldrh	r6, [r5, #8]
9000fa4e:	e7cf      	b.n	9000f9f0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x20>
9000fa50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000fa54 <_ZN8touchgfx8DrawableC1Ev>:
9000fa54:	4a0a      	ldr	r2, [pc, #40]	@ (9000fa80 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
9000fa56:	6002      	str	r2, [r0, #0]
9000fa58:	2200      	movs	r2, #0
9000fa5a:	8082      	strh	r2, [r0, #4]
9000fa5c:	80c2      	strh	r2, [r0, #6]
9000fa5e:	8102      	strh	r2, [r0, #8]
9000fa60:	8142      	strh	r2, [r0, #10]
9000fa62:	8182      	strh	r2, [r0, #12]
9000fa64:	81c2      	strh	r2, [r0, #14]
9000fa66:	8202      	strh	r2, [r0, #16]
9000fa68:	8242      	strh	r2, [r0, #18]
9000fa6a:	61c2      	str	r2, [r0, #28]
9000fa6c:	8402      	strh	r2, [r0, #32]
9000fa6e:	8442      	strh	r2, [r0, #34]	@ 0x22
9000fa70:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
9000fa74:	e9c0 2205 	strd	r2, r2, [r0, #20]
9000fa78:	2201      	movs	r2, #1
9000fa7a:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
9000fa7e:	4770      	bx	lr
9000fa80:	9002c2a0 	.word	0x9002c2a0

9000fa84 <_ZN8touchgfx8Drawable5setXYEss>:
9000fa84:	b570      	push	{r4, r5, r6, lr}
9000fa86:	6803      	ldr	r3, [r0, #0]
9000fa88:	4604      	mov	r4, r0
9000fa8a:	4615      	mov	r5, r2
9000fa8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000fa8e:	4798      	blx	r3
9000fa90:	6823      	ldr	r3, [r4, #0]
9000fa92:	4629      	mov	r1, r5
9000fa94:	4620      	mov	r0, r4
9000fa96:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9000fa98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000fa9c:	4718      	bx	r3

9000fa9e <_ZN8touchgfx8Drawable14setWidthHeightEss>:
9000fa9e:	b570      	push	{r4, r5, r6, lr}
9000faa0:	6803      	ldr	r3, [r0, #0]
9000faa2:	4604      	mov	r4, r0
9000faa4:	4615      	mov	r5, r2
9000faa6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9000faa8:	4798      	blx	r3
9000faaa:	6823      	ldr	r3, [r4, #0]
9000faac:	4629      	mov	r1, r5
9000faae:	4620      	mov	r0, r4
9000fab0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9000fab2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000fab6:	4718      	bx	r3

9000fab8 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
9000fab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000fabc:	f9b0 80e4 	ldrsh.w	r8, [r0, #228]	@ 0xe4
9000fac0:	4604      	mov	r4, r0
9000fac2:	308c      	adds	r0, #140	@ 0x8c
9000fac4:	4588      	cmp	r8, r1
9000fac6:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000faca:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
9000face:	bfb8      	it	lt
9000fad0:	4688      	movlt	r8, r1
9000fad2:	f9b0 105a 	ldrsh.w	r1, [r0, #90]	@ 0x5a
9000fad6:	4588      	cmp	r8, r1
9000fad8:	bfa8      	it	ge
9000fada:	4688      	movge	r8, r1
9000fadc:	fa1f f788 	uxth.w	r7, r8
9000fae0:	2b00      	cmp	r3, #0
9000fae2:	d130      	bne.n	9000fb46 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x8e>
9000fae4:	f9b4 2092 	ldrsh.w	r2, [r4, #146]	@ 0x92
9000fae8:	4641      	mov	r1, r8
9000faea:	f7f3 f999 	bl	90002e20 <_ZN8touchgfx8Drawable6moveToEss>
9000faee:	4630      	mov	r0, r6
9000faf0:	f006 fc83 	bl	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
9000faf4:	f8b4 20bc 	ldrh.w	r2, [r4, #188]	@ 0xbc
9000faf8:	6823      	ldr	r3, [r4, #0]
9000fafa:	4620      	mov	r0, r4
9000fafc:	1abf      	subs	r7, r7, r2
9000fafe:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
9000fb02:	b2bf      	uxth	r7, r7
9000fb04:	4798      	blx	r3
9000fb06:	4407      	add	r7, r0
9000fb08:	f8a4 70c0 	strh.w	r7, [r4, #192]	@ 0xc0
9000fb0c:	4630      	mov	r0, r6
9000fb0e:	f006 fc74 	bl	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
9000fb12:	6823      	ldr	r3, [r4, #0]
9000fb14:	4641      	mov	r1, r8
9000fb16:	4620      	mov	r0, r4
9000fb18:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
9000fb1c:	4798      	blx	r3
9000fb1e:	85e0      	strh	r0, [r4, #46]	@ 0x2e
9000fb20:	f8d4 00f0 	ldr.w	r0, [r4, #240]	@ 0xf0
9000fb24:	2800      	cmp	r0, #0
9000fb26:	d03c      	beq.n	9000fba2 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xea>
9000fb28:	6803      	ldr	r3, [r0, #0]
9000fb2a:	68db      	ldr	r3, [r3, #12]
9000fb2c:	4798      	blx	r3
9000fb2e:	2800      	cmp	r0, #0
9000fb30:	d037      	beq.n	9000fba2 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xea>
9000fb32:	f8d4 00f0 	ldr.w	r0, [r4, #240]	@ 0xf0
9000fb36:	4621      	mov	r1, r4
9000fb38:	f9b4 202e 	ldrsh.w	r2, [r4, #46]	@ 0x2e
9000fb3c:	6803      	ldr	r3, [r0, #0]
9000fb3e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000fb42:	689b      	ldr	r3, [r3, #8]
9000fb44:	4718      	bx	r3
9000fb46:	4642      	mov	r2, r8
9000fb48:	f9b4 1090 	ldrsh.w	r1, [r4, #144]	@ 0x90
9000fb4c:	f7f3 f968 	bl	90002e20 <_ZN8touchgfx8Drawable6moveToEss>
9000fb50:	4630      	mov	r0, r6
9000fb52:	f006 fc52 	bl	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
9000fb56:	8f60      	ldrh	r0, [r4, #58]	@ 0x3a
9000fb58:	8fe5      	ldrh	r5, [r4, #62]	@ 0x3e
9000fb5a:	6823      	ldr	r3, [r4, #0]
9000fb5c:	4405      	add	r5, r0
9000fb5e:	4620      	mov	r0, r4
9000fb60:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
9000fb64:	b2ad      	uxth	r5, r5
9000fb66:	4798      	blx	r3
9000fb68:	6823      	ldr	r3, [r4, #0]
9000fb6a:	1bed      	subs	r5, r5, r7
9000fb6c:	f9b4 a0bc 	ldrsh.w	sl, [r4, #188]	@ 0xbc
9000fb70:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
9000fb74:	1a2d      	subs	r5, r5, r0
9000fb76:	4620      	mov	r0, r4
9000fb78:	4798      	blx	r3
9000fb7a:	4438      	add	r0, r7
9000fb7c:	b2ad      	uxth	r5, r5
9000fb7e:	f9b4 90c0 	ldrsh.w	r9, [r4, #192]	@ 0xc0
9000fb82:	b202      	sxth	r2, r0
9000fb84:	4651      	mov	r1, sl
9000fb86:	4630      	mov	r0, r6
9000fb88:	f7ff ff7c 	bl	9000fa84 <_ZN8touchgfx8Drawable5setXYEss>
9000fb8c:	4630      	mov	r0, r6
9000fb8e:	b22a      	sxth	r2, r5
9000fb90:	4649      	mov	r1, r9
9000fb92:	f7ff ff84 	bl	9000fa9e <_ZN8touchgfx8Drawable14setWidthHeightEss>
9000fb96:	f8b4 006a 	ldrh.w	r0, [r4, #106]	@ 0x6a
9000fb9a:	1a2d      	subs	r5, r5, r0
9000fb9c:	f8a4 5066 	strh.w	r5, [r4, #102]	@ 0x66
9000fba0:	e7b4      	b.n	9000fb0c <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x54>
9000fba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9000fba6 <_ZN8touchgfx8Drawable11setPositionERKS0_>:
9000fba6:	b570      	push	{r4, r5, r6, lr}
9000fba8:	4604      	mov	r4, r0
9000fbaa:	f9b1 5008 	ldrsh.w	r5, [r1, #8]
9000fbae:	f9b1 600a 	ldrsh.w	r6, [r1, #10]
9000fbb2:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
9000fbb6:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
9000fbba:	f7ff ff63 	bl	9000fa84 <_ZN8touchgfx8Drawable5setXYEss>
9000fbbe:	4632      	mov	r2, r6
9000fbc0:	4629      	mov	r1, r5
9000fbc2:	4620      	mov	r0, r4
9000fbc4:	f7ff ff6b 	bl	9000fa9e <_ZN8touchgfx8Drawable14setWidthHeightEss>
9000fbc8:	bd70      	pop	{r4, r5, r6, pc}

9000fbca <_ZN8touchgfx6Slider21setupHorizontalSliderEsssss>:
9000fbca:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fbce:	f04f 0a00 	mov.w	sl, #0
9000fbd2:	f100 0b34 	add.w	fp, r0, #52	@ 0x34
9000fbd6:	4604      	mov	r4, r0
9000fbd8:	461d      	mov	r5, r3
9000fbda:	f880 a02c 	strb.w	sl, [r0, #44]	@ 0x2c
9000fbde:	4658      	mov	r0, fp
9000fbe0:	4690      	mov	r8, r2
9000fbe2:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9000fbe6:	4689      	mov	r9, r1
9000fbe8:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	@ 0x28
9000fbec:	f7ff ff4a 	bl	9000fa84 <_ZN8touchgfx8Drawable5setXYEss>
9000fbf0:	4659      	mov	r1, fp
9000fbf2:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
9000fbf6:	f7ff ffd6 	bl	9000fba6 <_ZN8touchgfx8Drawable11setPositionERKS0_>
9000fbfa:	4652      	mov	r2, sl
9000fbfc:	4651      	mov	r1, sl
9000fbfe:	f104 0060 	add.w	r0, r4, #96	@ 0x60
9000fc02:	f7ff ff3f 	bl	9000fa84 <_ZN8touchgfx8Drawable5setXYEss>
9000fc06:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
9000fc08:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
9000fc0a:	4620      	mov	r0, r4
9000fc0c:	4490      	add	r8, r2
9000fc0e:	f8b4 2096 	ldrh.w	r2, [r4, #150]	@ 0x96
9000fc12:	f8a4 5092 	strh.w	r5, [r4, #146]	@ 0x92
9000fc16:	4489      	add	r9, r1
9000fc18:	4415      	add	r5, r2
9000fc1a:	f8b4 1094 	ldrh.w	r1, [r4, #148]	@ 0x94
9000fc1e:	fa0f f288 	sxth.w	r2, r8
9000fc22:	f8a4 70e4 	strh.w	r7, [r4, #228]	@ 0xe4
9000fc26:	1873      	adds	r3, r6, r1
9000fc28:	b22d      	sxth	r5, r5
9000fc2a:	fa0f f989 	sxth.w	r9, r9
9000fc2e:	f8a4 60e6 	strh.w	r6, [r4, #230]	@ 0xe6
9000fc32:	b219      	sxth	r1, r3
9000fc34:	42aa      	cmp	r2, r5
9000fc36:	bfb8      	it	lt
9000fc38:	462a      	movlt	r2, r5
9000fc3a:	4549      	cmp	r1, r9
9000fc3c:	bfb8      	it	lt
9000fc3e:	4649      	movlt	r1, r9
9000fc40:	f7ff ff2d 	bl	9000fa9e <_ZN8touchgfx8Drawable14setWidthHeightEss>
9000fc44:	6823      	ldr	r3, [r4, #0]
9000fc46:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
9000fc4a:	4620      	mov	r0, r4
9000fc4c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
9000fc50:	b001      	add	sp, #4
9000fc52:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fc56:	4718      	bx	r3

9000fc58 <_ZN8touchgfx6Slider19setupVerticalSliderEsssss>:
9000fc58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000fc5c:	461d      	mov	r5, r3
9000fc5e:	f100 0a34 	add.w	sl, r0, #52	@ 0x34
9000fc62:	2301      	movs	r3, #1
9000fc64:	4604      	mov	r4, r0
9000fc66:	4617      	mov	r7, r2
9000fc68:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9000fc6c:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
9000fc70:	4650      	mov	r0, sl
9000fc72:	460e      	mov	r6, r1
9000fc74:	f9bd 9020 	ldrsh.w	r9, [sp, #32]
9000fc78:	f7ff ff04 	bl	9000fa84 <_ZN8touchgfx8Drawable5setXYEss>
9000fc7c:	4651      	mov	r1, sl
9000fc7e:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
9000fc82:	f7ff ff90 	bl	9000fba6 <_ZN8touchgfx8Drawable11setPositionERKS0_>
9000fc86:	8fa1      	ldrh	r1, [r4, #60]	@ 0x3c
9000fc88:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
9000fc8a:	4620      	mov	r0, r4
9000fc8c:	f8b4 3096 	ldrh.w	r3, [r4, #150]	@ 0x96
9000fc90:	440e      	add	r6, r1
9000fc92:	443a      	add	r2, r7
9000fc94:	f8b4 1094 	ldrh.w	r1, [r4, #148]	@ 0x94
9000fc98:	4443      	add	r3, r8
9000fc9a:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
9000fc9e:	b212      	sxth	r2, r2
9000fca0:	440d      	add	r5, r1
9000fca2:	b21b      	sxth	r3, r3
9000fca4:	f8a4 90e4 	strh.w	r9, [r4, #228]	@ 0xe4
9000fca8:	b231      	sxth	r1, r6
9000fcaa:	f8a4 80e6 	strh.w	r8, [r4, #230]	@ 0xe6
9000fcae:	429a      	cmp	r2, r3
9000fcb0:	b22d      	sxth	r5, r5
9000fcb2:	bfb8      	it	lt
9000fcb4:	461a      	movlt	r2, r3
9000fcb6:	42a9      	cmp	r1, r5
9000fcb8:	bfb8      	it	lt
9000fcba:	4629      	movlt	r1, r5
9000fcbc:	f7ff feef 	bl	9000fa9e <_ZN8touchgfx8Drawable14setWidthHeightEss>
9000fcc0:	6823      	ldr	r3, [r4, #0]
9000fcc2:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
9000fcc6:	4620      	mov	r0, r4
9000fcc8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
9000fccc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000fcd0:	4718      	bx	r3
	...

9000fcd4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
9000fcd4:	b538      	push	{r3, r4, r5, lr}
9000fcd6:	4604      	mov	r4, r0
9000fcd8:	460d      	mov	r5, r1
9000fcda:	2226      	movs	r2, #38	@ 0x26
9000fcdc:	2100      	movs	r1, #0
9000fcde:	f018 fde7 	bl	900288b0 <memset>
9000fce2:	4620      	mov	r0, r4
9000fce4:	f7ff feb6 	bl	9000fa54 <_ZN8touchgfx8DrawableC1Ev>
9000fce8:	4b06      	ldr	r3, [pc, #24]	@ (9000fd04 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
9000fcea:	4620      	mov	r0, r4
9000fcec:	4629      	mov	r1, r5
9000fcee:	6023      	str	r3, [r4, #0]
9000fcf0:	882b      	ldrh	r3, [r5, #0]
9000fcf2:	84e3      	strh	r3, [r4, #38]	@ 0x26
9000fcf4:	23ff      	movs	r3, #255	@ 0xff
9000fcf6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
9000fcfa:	f002 ff1a 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000fcfe:	4620      	mov	r0, r4
9000fd00:	bd38      	pop	{r3, r4, r5, pc}
9000fd02:	bf00      	nop
9000fd04:	9002c1d0 	.word	0x9002c1d0

9000fd08 <_ZN8touchgfx6SliderC1Ev>:
9000fd08:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9000fd0c:	4604      	mov	r4, r0
9000fd0e:	f7ff fea1 	bl	9000fa54 <_ZN8touchgfx8DrawableC1Ev>
9000fd12:	4b28      	ldr	r3, [pc, #160]	@ (9000fdb4 <_ZN8touchgfx6SliderC1Ev+0xac>)
9000fd14:	2500      	movs	r5, #0
9000fd16:	ae02      	add	r6, sp, #8
9000fd18:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9000fd1c:	6023      	str	r3, [r4, #0]
9000fd1e:	f104 0934 	add.w	r9, r4, #52	@ 0x34
9000fd22:	2364      	movs	r3, #100	@ 0x64
9000fd24:	f104 0a60 	add.w	sl, r4, #96	@ 0x60
9000fd28:	f826 7d04 	strh.w	r7, [r6, #-4]!
9000fd2c:	4648      	mov	r0, r9
9000fd2e:	8663      	strh	r3, [r4, #50]	@ 0x32
9000fd30:	4631      	mov	r1, r6
9000fd32:	62a5      	str	r5, [r4, #40]	@ 0x28
9000fd34:	f104 088c 	add.w	r8, r4, #140	@ 0x8c
9000fd38:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
9000fd3c:	85e5      	strh	r5, [r4, #46]	@ 0x2e
9000fd3e:	8625      	strh	r5, [r4, #48]	@ 0x30
9000fd40:	f7ff ffc8 	bl	9000fcd4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
9000fd44:	4631      	mov	r1, r6
9000fd46:	4650      	mov	r0, sl
9000fd48:	f8ad 7004 	strh.w	r7, [sp, #4]
9000fd4c:	f7ff ffc2 	bl	9000fcd4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
9000fd50:	4631      	mov	r1, r6
9000fd52:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
9000fd56:	4640      	mov	r0, r8
9000fd58:	f8ad 7004 	strh.w	r7, [sp, #4]
9000fd5c:	f7ff ffba 	bl	9000fcd4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
9000fd60:	4630      	mov	r0, r6
9000fd62:	f7ff fe77 	bl	9000fa54 <_ZN8touchgfx8DrawableC1Ev>
9000fd66:	4b14      	ldr	r3, [pc, #80]	@ (9000fdb8 <_ZN8touchgfx6SliderC1Ev+0xb0>)
9000fd68:	4651      	mov	r1, sl
9000fd6a:	4630      	mov	r0, r6
9000fd6c:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
9000fd70:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
9000fd74:	f8c4 50e0 	str.w	r5, [r4, #224]	@ 0xe0
9000fd78:	e9c4 3539 	strd	r3, r5, [r4, #228]	@ 0xe4
9000fd7c:	2301      	movs	r3, #1
9000fd7e:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
9000fd82:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
9000fd86:	f7ff fadf 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000fd8a:	4649      	mov	r1, r9
9000fd8c:	4620      	mov	r0, r4
9000fd8e:	f7ff fadb 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000fd92:	4631      	mov	r1, r6
9000fd94:	4620      	mov	r0, r4
9000fd96:	f7ff fad7 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000fd9a:	4641      	mov	r1, r8
9000fd9c:	4620      	mov	r0, r4
9000fd9e:	f7ff fad3 	bl	9000f348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000fda2:	4620      	mov	r0, r4
9000fda4:	f9b4 10e4 	ldrsh.w	r1, [r4, #228]	@ 0xe4
9000fda8:	f7ff fe86 	bl	9000fab8 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>
9000fdac:	4620      	mov	r0, r4
9000fdae:	b002      	add	sp, #8
9000fdb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000fdb4:	9002bde4 	.word	0x9002bde4
9000fdb8:	9002bd54 	.word	0x9002bd54

9000fdbc <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
9000fdbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000fdc0:	4604      	mov	r4, r0
9000fdc2:	f100 0634 	add.w	r6, r0, #52	@ 0x34
9000fdc6:	4689      	mov	r9, r1
9000fdc8:	461f      	mov	r7, r3
9000fdca:	f104 058c 	add.w	r5, r4, #140	@ 0x8c
9000fdce:	4630      	mov	r0, r6
9000fdd0:	4690      	mov	r8, r2
9000fdd2:	f006 fb12 	bl	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
9000fdd6:	4628      	mov	r0, r5
9000fdd8:	f006 fb0f 	bl	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
9000fddc:	4649      	mov	r1, r9
9000fdde:	4630      	mov	r0, r6
9000fde0:	f002 fea7 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000fde4:	4641      	mov	r1, r8
9000fde6:	f104 0060 	add.w	r0, r4, #96	@ 0x60
9000fdea:	f002 fea2 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000fdee:	4639      	mov	r1, r7
9000fdf0:	4628      	mov	r0, r5
9000fdf2:	f002 fe9e 	bl	90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000fdf6:	f9b4 206a 	ldrsh.w	r2, [r4, #106]	@ 0x6a
9000fdfa:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	@ 0x68
9000fdfe:	f104 00b8 	add.w	r0, r4, #184	@ 0xb8
9000fe02:	f7ff fe4c 	bl	9000fa9e <_ZN8touchgfx8Drawable14setWidthHeightEss>
9000fe06:	6823      	ldr	r3, [r4, #0]
9000fe08:	f9b4 102e 	ldrsh.w	r1, [r4, #46]	@ 0x2e
9000fe0c:	4620      	mov	r0, r4
9000fe0e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
9000fe12:	4798      	blx	r3
9000fe14:	4630      	mov	r0, r6
9000fe16:	f006 faf0 	bl	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>
9000fe1a:	4628      	mov	r0, r5
9000fe1c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000fe20:	f006 baeb 	b.w	900163fa <_ZNK8touchgfx8Drawable10invalidateEv>

9000fe24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
9000fe24:	6803      	ldr	r3, [r0, #0]
9000fe26:	b513      	push	{r0, r1, r4, lr}
9000fe28:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
9000fe2c:	2300      	movs	r3, #0
9000fe2e:	e9cd 3300 	strd	r3, r3, [sp]
9000fe32:	466b      	mov	r3, sp
9000fe34:	47a0      	blx	r4
9000fe36:	b002      	add	sp, #8
9000fe38:	bd10      	pop	{r4, pc}

9000fe3a <_ZN8touchgfx3HAL16flushFrameBufferEv>:
9000fe3a:	2301      	movs	r3, #1
9000fe3c:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9000fe40:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9000fe44:	4770      	bx	lr

9000fe46 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
9000fe46:	2301      	movs	r3, #1
9000fe48:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9000fe4c:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9000fe50:	4770      	bx	lr

9000fe52 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
9000fe52:	6843      	ldr	r3, [r0, #4]
9000fe54:	2201      	movs	r2, #1
9000fe56:	725a      	strb	r2, [r3, #9]
9000fe58:	6840      	ldr	r0, [r0, #4]
9000fe5a:	6803      	ldr	r3, [r0, #0]
9000fe5c:	691b      	ldr	r3, [r3, #16]
9000fe5e:	4718      	bx	r3

9000fe60 <_ZN8touchgfx3HAL8flushDMAEv>:
9000fe60:	6840      	ldr	r0, [r0, #4]
9000fe62:	6803      	ldr	r3, [r0, #0]
9000fe64:	689b      	ldr	r3, [r3, #8]
9000fe66:	4718      	bx	r3

9000fe68 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
9000fe68:	b530      	push	{r4, r5, lr}
9000fe6a:	b08b      	sub	sp, #44	@ 0x2c
9000fe6c:	6804      	ldr	r4, [r0, #0]
9000fe6e:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
9000fe72:	9509      	str	r5, [sp, #36]	@ 0x24
9000fe74:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
9000fe78:	9508      	str	r5, [sp, #32]
9000fe7a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
9000fe7e:	9507      	str	r5, [sp, #28]
9000fe80:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
9000fe84:	9506      	str	r5, [sp, #24]
9000fe86:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
9000fe8a:	9505      	str	r5, [sp, #20]
9000fe8c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
9000fe90:	9504      	str	r5, [sp, #16]
9000fe92:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
9000fe96:	9503      	str	r5, [sp, #12]
9000fe98:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
9000fe9c:	9502      	str	r5, [sp, #8]
9000fe9e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9000fea2:	e9cd 3500 	strd	r3, r5, [sp]
9000fea6:	4613      	mov	r3, r2
9000fea8:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
9000feaa:	2200      	movs	r2, #0
9000feac:	47a0      	blx	r4
9000feae:	b00b      	add	sp, #44	@ 0x2c
9000feb0:	bd30      	pop	{r4, r5, pc}
	...

9000feb4 <_ZN8touchgfx3HAL10beginFrameEv>:
9000feb4:	4b04      	ldr	r3, [pc, #16]	@ (9000fec8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
9000feb6:	781b      	ldrb	r3, [r3, #0]
9000feb8:	b123      	cbz	r3, 9000fec4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
9000feba:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
9000febe:	f080 0001 	eor.w	r0, r0, #1
9000fec2:	4770      	bx	lr
9000fec4:	2001      	movs	r0, #1
9000fec6:	4770      	bx	lr
9000fec8:	240218b2 	.word	0x240218b2

9000fecc <_ZN8touchgfx3HAL8endFrameEv>:
9000fecc:	b510      	push	{r4, lr}
9000fece:	4604      	mov	r4, r0
9000fed0:	6840      	ldr	r0, [r0, #4]
9000fed2:	6803      	ldr	r3, [r0, #0]
9000fed4:	689b      	ldr	r3, [r3, #8]
9000fed6:	4798      	blx	r3
9000fed8:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
9000fedc:	b113      	cbz	r3, 9000fee4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9000fede:	2301      	movs	r3, #1
9000fee0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
9000fee4:	bd10      	pop	{r4, pc}

9000fee6 <_ZN8touchgfx3HAL10initializeEv>:
9000fee6:	b510      	push	{r4, lr}
9000fee8:	4604      	mov	r4, r0
9000feea:	f7f2 f9f5 	bl	900022d8 <_ZN8touchgfx10OSWrappers10initializeEv>
9000feee:	f7f0 fe73 	bl	90000bd8 <_ZN8touchgfx4GPIO4initEv>
9000fef2:	6860      	ldr	r0, [r4, #4]
9000fef4:	6803      	ldr	r3, [r0, #0]
9000fef6:	68db      	ldr	r3, [r3, #12]
9000fef8:	4798      	blx	r3
9000fefa:	68e0      	ldr	r0, [r4, #12]
9000fefc:	6803      	ldr	r3, [r0, #0]
9000fefe:	689b      	ldr	r3, [r3, #8]
9000ff00:	4798      	blx	r3
9000ff02:	6823      	ldr	r3, [r4, #0]
9000ff04:	4620      	mov	r0, r4
9000ff06:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
9000ff08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000ff0c:	4718      	bx	r3
	...

9000ff10 <_ZN8touchgfx3HAL4tickEv>:
9000ff10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9000ff12:	6803      	ldr	r3, [r0, #0]
9000ff14:	4604      	mov	r4, r0
9000ff16:	4d5b      	ldr	r5, [pc, #364]	@ (90010084 <_ZN8touchgfx3HAL4tickEv+0x174>)
9000ff18:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
9000ff1c:	4798      	blx	r3
9000ff1e:	2800      	cmp	r0, #0
9000ff20:	f000 8095 	beq.w	9001004e <_ZN8touchgfx3HAL4tickEv+0x13e>
9000ff24:	2001      	movs	r0, #1
9000ff26:	2600      	movs	r6, #0
9000ff28:	f7f0 fe90 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9000ff2c:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
9000ff30:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
9000ff34:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
9000ff38:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
9000ff3c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
9000ff40:	b133      	cbz	r3, 9000ff50 <_ZN8touchgfx3HAL4tickEv+0x40>
9000ff42:	6823      	ldr	r3, [r4, #0]
9000ff44:	4620      	mov	r0, r4
9000ff46:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
9000ff4a:	4798      	blx	r3
9000ff4c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
9000ff50:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
9000ff54:	2601      	movs	r6, #1
9000ff56:	6862      	ldr	r2, [r4, #4]
9000ff58:	f083 0301 	eor.w	r3, r3, #1
9000ff5c:	702e      	strb	r6, [r5, #0]
9000ff5e:	7253      	strb	r3, [r2, #9]
9000ff60:	f005 f9d2 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
9000ff64:	6803      	ldr	r3, [r0, #0]
9000ff66:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9000ff68:	4798      	blx	r3
9000ff6a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9000ff6e:	b90b      	cbnz	r3, 9000ff74 <_ZN8touchgfx3HAL4tickEv+0x64>
9000ff70:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
9000ff74:	f005 f9c8 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
9000ff78:	6803      	ldr	r3, [r0, #0]
9000ff7a:	695b      	ldr	r3, [r3, #20]
9000ff7c:	4798      	blx	r3
9000ff7e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000ff80:	6803      	ldr	r3, [r0, #0]
9000ff82:	691b      	ldr	r3, [r3, #16]
9000ff84:	4798      	blx	r3
9000ff86:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9000ff8a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
9000ff8e:	3b01      	subs	r3, #1
9000ff90:	b2db      	uxtb	r3, r3
9000ff92:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
9000ff96:	b10a      	cbz	r2, 9000ff9c <_ZN8touchgfx3HAL4tickEv+0x8c>
9000ff98:	2b00      	cmp	r3, #0
9000ff9a:	d1eb      	bne.n	9000ff74 <_ZN8touchgfx3HAL4tickEv+0x64>
9000ff9c:	4a3a      	ldr	r2, [pc, #232]	@ (90010088 <_ZN8touchgfx3HAL4tickEv+0x178>)
9000ff9e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
9000ffa2:	7813      	ldrb	r3, [r2, #0]
9000ffa4:	3301      	adds	r3, #1
9000ffa6:	b25b      	sxtb	r3, r3
9000ffa8:	4299      	cmp	r1, r3
9000ffaa:	7013      	strb	r3, [r2, #0]
9000ffac:	dc10      	bgt.n	9000ffd0 <_ZN8touchgfx3HAL4tickEv+0xc0>
9000ffae:	2300      	movs	r3, #0
9000ffb0:	68e0      	ldr	r0, [r4, #12]
9000ffb2:	a902      	add	r1, sp, #8
9000ffb4:	7013      	strb	r3, [r2, #0]
9000ffb6:	aa03      	add	r2, sp, #12
9000ffb8:	6803      	ldr	r3, [r0, #0]
9000ffba:	68db      	ldr	r3, [r3, #12]
9000ffbc:	4798      	blx	r3
9000ffbe:	6823      	ldr	r3, [r4, #0]
9000ffc0:	2800      	cmp	r0, #0
9000ffc2:	d050      	beq.n	90010066 <_ZN8touchgfx3HAL4tickEv+0x156>
9000ffc4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
9000ffc8:	4620      	mov	r0, r4
9000ffca:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9000ffce:	4798      	blx	r3
9000ffd0:	2300      	movs	r3, #0
9000ffd2:	6960      	ldr	r0, [r4, #20]
9000ffd4:	f88d 3007 	strb.w	r3, [sp, #7]
9000ffd8:	b158      	cbz	r0, 9000fff2 <_ZN8touchgfx3HAL4tickEv+0xe2>
9000ffda:	6803      	ldr	r3, [r0, #0]
9000ffdc:	f10d 0107 	add.w	r1, sp, #7
9000ffe0:	68db      	ldr	r3, [r3, #12]
9000ffe2:	4798      	blx	r3
9000ffe4:	b128      	cbz	r0, 9000fff2 <_ZN8touchgfx3HAL4tickEv+0xe2>
9000ffe6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000ffe8:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000ffec:	6803      	ldr	r3, [r0, #0]
9000ffee:	68db      	ldr	r3, [r3, #12]
9000fff0:	4798      	blx	r3
9000fff2:	f104 001c 	add.w	r0, r4, #28
9000fff6:	f017 f82b 	bl	90027050 <_ZN8touchgfx8Gestures4tickEv>
9000fffa:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
9000fffe:	b30b      	cbz	r3, 90010044 <_ZN8touchgfx3HAL4tickEv+0x134>
90010000:	6920      	ldr	r0, [r4, #16]
90010002:	6803      	ldr	r3, [r0, #0]
90010004:	691b      	ldr	r3, [r3, #16]
90010006:	4798      	blx	r3
90010008:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001000a:	4606      	mov	r6, r0
9001000c:	b903      	cbnz	r3, 90010010 <_ZN8touchgfx3HAL4tickEv+0x100>
9001000e:	6760      	str	r0, [r4, #116]	@ 0x74
90010010:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010012:	4a1e      	ldr	r2, [pc, #120]	@ (9001008c <_ZN8touchgfx3HAL4tickEv+0x17c>)
90010014:	1af3      	subs	r3, r6, r3
90010016:	4293      	cmp	r3, r2
90010018:	d914      	bls.n	90010044 <_ZN8touchgfx3HAL4tickEv+0x134>
9001001a:	6920      	ldr	r0, [r4, #16]
9001001c:	6803      	ldr	r3, [r0, #0]
9001001e:	699b      	ldr	r3, [r3, #24]
90010020:	4798      	blx	r3
90010022:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010024:	2264      	movs	r2, #100	@ 0x64
90010026:	1af3      	subs	r3, r6, r3
90010028:	fbb3 f3f2 	udiv	r3, r3, r2
9001002c:	fbb0 f0f3 	udiv	r0, r0, r3
90010030:	2800      	cmp	r0, #0
90010032:	dc1d      	bgt.n	90010070 <_ZN8touchgfx3HAL4tickEv+0x160>
90010034:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90010038:	6920      	ldr	r0, [r4, #16]
9001003a:	2100      	movs	r1, #0
9001003c:	6803      	ldr	r3, [r0, #0]
9001003e:	69db      	ldr	r3, [r3, #28]
90010040:	4798      	blx	r3
90010042:	6766      	str	r6, [r4, #116]	@ 0x74
90010044:	f005 f960 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
90010048:	6803      	ldr	r3, [r0, #0]
9001004a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001004c:	4798      	blx	r3
9001004e:	6823      	ldr	r3, [r4, #0]
90010050:	4620      	mov	r0, r4
90010052:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
90010056:	4798      	blx	r3
90010058:	2001      	movs	r0, #1
9001005a:	f7f0 fe2b 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9001005e:	2300      	movs	r3, #0
90010060:	702b      	strb	r3, [r5, #0]
90010062:	b004      	add	sp, #16
90010064:	bd70      	pop	{r4, r5, r6, pc}
90010066:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
9001006a:	4620      	mov	r0, r4
9001006c:	4798      	blx	r3
9001006e:	e7af      	b.n	9000ffd0 <_ZN8touchgfx3HAL4tickEv+0xc0>
90010070:	2863      	cmp	r0, #99	@ 0x63
90010072:	bfcb      	itete	gt
90010074:	2300      	movgt	r3, #0
90010076:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
9001007a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
9001007e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
90010082:	e7d9      	b.n	90010038 <_ZN8touchgfx3HAL4tickEv+0x128>
90010084:	240218b8 	.word	0x240218b8
90010088:	240218b9 	.word	0x240218b9
9001008c:	05f5e100 	.word	0x05f5e100

90010090 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90010090:	b510      	push	{r4, lr}
90010092:	4604      	mov	r4, r0
90010094:	f7f2 f952 	bl	9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010098:	2200      	movs	r2, #0
9001009a:	6863      	ldr	r3, [r4, #4]
9001009c:	729a      	strb	r2, [r3, #10]
9001009e:	bd10      	pop	{r4, pc}

900100a0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
900100a0:	65c1      	str	r1, [r0, #92]	@ 0x5c
900100a2:	301c      	adds	r0, #28
900100a4:	f016 bfd2 	b.w	9002704c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

900100a8 <_ZN8touchgfx3HAL5touchEll>:
900100a8:	b530      	push	{r4, r5, lr}
900100aa:	b087      	sub	sp, #28
900100ac:	4604      	mov	r4, r0
900100ae:	a804      	add	r0, sp, #16
900100b0:	e9cd 1204 	strd	r1, r2, [sp, #16]
900100b4:	f004 ff0e 	bl	90014ed4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
900100b8:	9b04      	ldr	r3, [sp, #16]
900100ba:	a906      	add	r1, sp, #24
900100bc:	a803      	add	r0, sp, #12
900100be:	f8ad 300c 	strh.w	r3, [sp, #12]
900100c2:	9b05      	ldr	r3, [sp, #20]
900100c4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
900100c8:	f004 ff56 	bl	90014f78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
900100cc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
900100d0:	f104 001c 	add.w	r0, r4, #28
900100d4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900100d8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
900100dc:	b189      	cbz	r1, 90010102 <_ZN8touchgfx3HAL5touchEll+0x5a>
900100de:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
900100e2:	9300      	str	r3, [sp, #0]
900100e4:	4613      	mov	r3, r2
900100e6:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
900100ea:	462a      	mov	r2, r5
900100ec:	f016 ffbe 	bl	9002706c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900100f0:	b128      	cbz	r0, 900100fe <_ZN8touchgfx3HAL5touchEll+0x56>
900100f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900100f6:	6623      	str	r3, [r4, #96]	@ 0x60
900100f8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900100fc:	6663      	str	r3, [r4, #100]	@ 0x64
900100fe:	b007      	add	sp, #28
90010100:	bd30      	pop	{r4, r5, pc}
90010102:	f016 fff3 	bl	900270ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010106:	2301      	movs	r3, #1
90010108:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
9001010c:	e7f1      	b.n	900100f2 <_ZN8touchgfx3HAL5touchEll+0x4a>

9001010e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
9001010e:	b510      	push	{r4, lr}
90010110:	2b00      	cmp	r3, #0
90010112:	d046      	beq.n	900101a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010114:	ea81 0002 	eor.w	r0, r1, r2
90010118:	07c4      	lsls	r4, r0, #31
9001011a:	d508      	bpl.n	9001012e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
9001011c:	440b      	add	r3, r1
9001011e:	3a01      	subs	r2, #1
90010120:	428b      	cmp	r3, r1
90010122:	d93e      	bls.n	900101a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010124:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010128:	f801 0b01 	strb.w	r0, [r1], #1
9001012c:	e7f8      	b.n	90010120 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
9001012e:	07d0      	lsls	r0, r2, #31
90010130:	bf42      	ittt	mi
90010132:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90010136:	f103 33ff 	addmi.w	r3, r3, #4294967295
9001013a:	f801 0b01 	strbmi.w	r0, [r1], #1
9001013e:	2b01      	cmp	r3, #1
90010140:	d911      	bls.n	90010166 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010142:	ea81 0402 	eor.w	r4, r1, r2
90010146:	4610      	mov	r0, r2
90010148:	07a4      	lsls	r4, r4, #30
9001014a:	d022      	beq.n	90010192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
9001014c:	f023 0401 	bic.w	r4, r3, #1
90010150:	440c      	add	r4, r1
90010152:	428c      	cmp	r4, r1
90010154:	4602      	mov	r2, r0
90010156:	d904      	bls.n	90010162 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90010158:	8812      	ldrh	r2, [r2, #0]
9001015a:	3002      	adds	r0, #2
9001015c:	f821 2b02 	strh.w	r2, [r1], #2
90010160:	e7f7      	b.n	90010152 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90010162:	f003 0301 	and.w	r3, r3, #1
90010166:	f023 0003 	bic.w	r0, r3, #3
9001016a:	4408      	add	r0, r1
9001016c:	4288      	cmp	r0, r1
9001016e:	4614      	mov	r4, r2
90010170:	d904      	bls.n	9001017c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90010172:	6824      	ldr	r4, [r4, #0]
90010174:	3204      	adds	r2, #4
90010176:	f841 4b04 	str.w	r4, [r1], #4
9001017a:	e7f7      	b.n	9001016c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
9001017c:	f003 0303 	and.w	r3, r3, #3
90010180:	3a01      	subs	r2, #1
90010182:	440b      	add	r3, r1
90010184:	428b      	cmp	r3, r1
90010186:	d90c      	bls.n	900101a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010188:	f812 0f01 	ldrb.w	r0, [r2, #1]!
9001018c:	f801 0b01 	strb.w	r0, [r1], #1
90010190:	e7f8      	b.n	90010184 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90010192:	0790      	lsls	r0, r2, #30
90010194:	d0e7      	beq.n	90010166 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010196:	f832 0b02 	ldrh.w	r0, [r2], #2
9001019a:	3b02      	subs	r3, #2
9001019c:	f821 0b02 	strh.w	r0, [r1], #2
900101a0:	e7e1      	b.n	90010166 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900101a2:	2001      	movs	r0, #1
900101a4:	bd10      	pop	{r4, pc}

900101a6 <_ZN8touchgfx3HAL7noTouchEv>:
900101a6:	b510      	push	{r4, lr}
900101a8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
900101ac:	4604      	mov	r4, r0
900101ae:	b153      	cbz	r3, 900101c6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
900101b0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
900101b4:	2101      	movs	r1, #1
900101b6:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
900101ba:	301c      	adds	r0, #28
900101bc:	f016 ff96 	bl	900270ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900101c0:	2300      	movs	r3, #0
900101c2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
900101c6:	bd10      	pop	{r4, pc}

900101c8 <_ZN8touchgfx3HAL3lcdEv>:
900101c8:	4b04      	ldr	r3, [pc, #16]	@ (900101dc <_ZN8touchgfx3HAL3lcdEv+0x14>)
900101ca:	681b      	ldr	r3, [r3, #0]
900101cc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900101d0:	b10a      	cbz	r2, 900101d6 <_ZN8touchgfx3HAL3lcdEv+0xe>
900101d2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900101d4:	b900      	cbnz	r0, 900101d8 <_ZN8touchgfx3HAL3lcdEv+0x10>
900101d6:	6898      	ldr	r0, [r3, #8]
900101d8:	4770      	bx	lr
900101da:	bf00      	nop
900101dc:	240218b4 	.word	0x240218b4

900101e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900101e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900101e4:	b085      	sub	sp, #20
900101e6:	4604      	mov	r4, r0
900101e8:	2000      	movs	r0, #0
900101ea:	4699      	mov	r9, r3
900101ec:	ad04      	add	r5, sp, #16
900101ee:	460f      	mov	r7, r1
900101f0:	4690      	mov	r8, r2
900101f2:	f845 0d04 	str.w	r0, [r5, #-4]!
900101f6:	69a0      	ldr	r0, [r4, #24]
900101f8:	6806      	ldr	r6, [r0, #0]
900101fa:	9501      	str	r5, [sp, #4]
900101fc:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90010200:	9500      	str	r5, [sp, #0]
90010202:	6835      	ldr	r5, [r6, #0]
90010204:	47a8      	blx	r5
90010206:	4d10      	ldr	r5, [pc, #64]	@ (90010248 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90010208:	4606      	mov	r6, r0
9001020a:	f8a5 9000 	strh.w	r9, [r5]
9001020e:	f7ff ffdb 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
90010212:	6803      	ldr	r3, [r0, #0]
90010214:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010216:	4798      	blx	r3
90010218:	b128      	cbz	r0, 90010226 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
9001021a:	2801      	cmp	r0, #1
9001021c:	d00b      	beq.n	90010236 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
9001021e:	4630      	mov	r0, r6
90010220:	b005      	add	sp, #20
90010222:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010226:	882b      	ldrh	r3, [r5, #0]
90010228:	fb08 7203 	mla	r2, r8, r3, r7
9001022c:	9b03      	ldr	r3, [sp, #12]
9001022e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90010232:	63e3      	str	r3, [r4, #60]	@ 0x3c
90010234:	e7f3      	b.n	9001021e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90010236:	882a      	ldrh	r2, [r5, #0]
90010238:	9b03      	ldr	r3, [sp, #12]
9001023a:	fb08 7202 	mla	r2, r8, r2, r7
9001023e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90010242:	1a9a      	subs	r2, r3, r2
90010244:	63e2      	str	r2, [r4, #60]	@ 0x3c
90010246:	e7ea      	b.n	9001021e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90010248:	240218ae 	.word	0x240218ae

9001024c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
9001024c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001024e:	b08b      	sub	sp, #44	@ 0x2c
90010250:	4617      	mov	r7, r2
90010252:	4604      	mov	r4, r0
90010254:	460e      	mov	r6, r1
90010256:	461d      	mov	r5, r3
90010258:	f7ff ffb6 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
9001025c:	6803      	ldr	r3, [r0, #0]
9001025e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010260:	4798      	blx	r3
90010262:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90010266:	9007      	str	r0, [sp, #28]
90010268:	4631      	mov	r1, r6
9001026a:	6822      	ldr	r2, [r4, #0]
9001026c:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010270:	4b0c      	ldr	r3, [pc, #48]	@ (900102a4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90010272:	4620      	mov	r0, r4
90010274:	881b      	ldrh	r3, [r3, #0]
90010276:	9306      	str	r3, [sp, #24]
90010278:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
9001027c:	9305      	str	r3, [sp, #20]
9001027e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90010282:	9304      	str	r3, [sp, #16]
90010284:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010288:	9303      	str	r3, [sp, #12]
9001028a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001028e:	9302      	str	r3, [sp, #8]
90010290:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010294:	e9cd 5300 	strd	r5, r3, [sp]
90010298:	463b      	mov	r3, r7
9001029a:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
9001029c:	2200      	movs	r2, #0
9001029e:	47a8      	blx	r5
900102a0:	b00b      	add	sp, #44	@ 0x2c
900102a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900102a4:	240218ae 	.word	0x240218ae

900102a8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
900102a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900102ac:	4698      	mov	r8, r3
900102ae:	6803      	ldr	r3, [r0, #0]
900102b0:	b08b      	sub	sp, #44	@ 0x2c
900102b2:	4617      	mov	r7, r2
900102b4:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
900102b6:	460e      	mov	r6, r1
900102b8:	4b13      	ldr	r3, [pc, #76]	@ (90010308 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
900102ba:	4604      	mov	r4, r0
900102bc:	f8b3 9000 	ldrh.w	r9, [r3]
900102c0:	f7ff ff82 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
900102c4:	6803      	ldr	r3, [r0, #0]
900102c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900102c8:	4798      	blx	r3
900102ca:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900102ce:	2200      	movs	r2, #0
900102d0:	4631      	mov	r1, r6
900102d2:	e9cd 0308 	strd	r0, r3, [sp, #32]
900102d6:	2302      	movs	r3, #2
900102d8:	4620      	mov	r0, r4
900102da:	e9cd 9306 	strd	r9, r3, [sp, #24]
900102de:	2301      	movs	r3, #1
900102e0:	9305      	str	r3, [sp, #20]
900102e2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900102e6:	9304      	str	r3, [sp, #16]
900102e8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900102ec:	9303      	str	r3, [sp, #12]
900102ee:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900102f2:	9302      	str	r3, [sp, #8]
900102f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900102f8:	e9cd 8300 	strd	r8, r3, [sp]
900102fc:	463b      	mov	r3, r7
900102fe:	47a8      	blx	r5
90010300:	b00b      	add	sp, #44	@ 0x2c
90010302:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010306:	bf00      	nop
90010308:	240218ae 	.word	0x240218ae

9001030c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
9001030c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010310:	4698      	mov	r8, r3
90010312:	6803      	ldr	r3, [r0, #0]
90010314:	b087      	sub	sp, #28
90010316:	460e      	mov	r6, r1
90010318:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
9001031a:	4617      	mov	r7, r2
9001031c:	4b0f      	ldr	r3, [pc, #60]	@ (9001035c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
9001031e:	4604      	mov	r4, r0
90010320:	f8b3 9000 	ldrh.w	r9, [r3]
90010324:	f7ff ff50 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
90010328:	6803      	ldr	r3, [r0, #0]
9001032a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001032c:	4798      	blx	r3
9001032e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90010332:	463a      	mov	r2, r7
90010334:	4631      	mov	r1, r6
90010336:	f8cd 900c 	str.w	r9, [sp, #12]
9001033a:	e9cd 0304 	strd	r0, r3, [sp, #16]
9001033e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90010342:	4620      	mov	r0, r4
90010344:	9302      	str	r3, [sp, #8]
90010346:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
9001034a:	9301      	str	r3, [sp, #4]
9001034c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90010350:	9300      	str	r3, [sp, #0]
90010352:	4643      	mov	r3, r8
90010354:	47a8      	blx	r5
90010356:	b007      	add	sp, #28
90010358:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001035c:	240218ae 	.word	0x240218ae

90010360 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90010360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010364:	4604      	mov	r4, r0
90010366:	b08f      	sub	sp, #60	@ 0x3c
90010368:	4610      	mov	r0, r2
9001036a:	460d      	mov	r5, r1
9001036c:	4691      	mov	r9, r2
9001036e:	461e      	mov	r6, r3
90010370:	f008 fba0 	bl	90018ab4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010374:	2800      	cmp	r0, #0
90010376:	f000 809d 	beq.w	900104b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
9001037a:	6823      	ldr	r3, [r4, #0]
9001037c:	4620      	mov	r0, r4
9001037e:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90010518 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90010382:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90010386:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010388:	4798      	blx	r3
9001038a:	6823      	ldr	r3, [r4, #0]
9001038c:	4620      	mov	r0, r4
9001038e:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 9001051c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90010392:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010394:	4798      	blx	r3
90010396:	f8bb 3000 	ldrh.w	r3, [fp]
9001039a:	4f5c      	ldr	r7, [pc, #368]	@ (9001050c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001039c:	9301      	str	r3, [sp, #4]
9001039e:	f8ba 3000 	ldrh.w	r3, [sl]
900103a2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
900103a6:	4640      	mov	r0, r8
900103a8:	9302      	str	r3, [sp, #8]
900103aa:	883b      	ldrh	r3, [r7, #0]
900103ac:	9303      	str	r3, [sp, #12]
900103ae:	4b58      	ldr	r3, [pc, #352]	@ (90010510 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900103b0:	881a      	ldrh	r2, [r3, #0]
900103b2:	9305      	str	r3, [sp, #20]
900103b4:	9204      	str	r2, [sp, #16]
900103b6:	f008 fc11 	bl	90018bdc <_ZNK8touchgfx6Bitmap8getWidthEv>
900103ba:	8038      	strh	r0, [r7, #0]
900103bc:	4640      	mov	r0, r8
900103be:	f008 fc41 	bl	90018c44 <_ZNK8touchgfx6Bitmap9getHeightEv>
900103c2:	9b05      	ldr	r3, [sp, #20]
900103c4:	b280      	uxth	r0, r0
900103c6:	8018      	strh	r0, [r3, #0]
900103c8:	4b52      	ldr	r3, [pc, #328]	@ (90010514 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
900103ca:	781b      	ldrb	r3, [r3, #0]
900103cc:	2b00      	cmp	r3, #0
900103ce:	d174      	bne.n	900104ba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
900103d0:	883b      	ldrh	r3, [r7, #0]
900103d2:	f8aa 0000 	strh.w	r0, [sl]
900103d6:	f8ab 3000 	strh.w	r3, [fp]
900103da:	4648      	mov	r0, r9
900103dc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
900103e0:	f008 fb68 	bl	90018ab4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900103e4:	2200      	movs	r2, #0
900103e6:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
900103ea:	4611      	mov	r1, r2
900103ec:	4628      	mov	r0, r5
900103ee:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
900103f2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
900103f6:	f7ff fb45 	bl	9000fa84 <_ZN8touchgfx8Drawable5setXYEss>
900103fa:	2301      	movs	r3, #1
900103fc:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90010400:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90010404:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010408:	2b00      	cmp	r3, #0
9001040a:	dd5c      	ble.n	900104c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001040c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010410:	2b00      	cmp	r3, #0
90010412:	dd58      	ble.n	900104c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010414:	462a      	mov	r2, r5
90010416:	ab0a      	add	r3, sp, #40	@ 0x28
90010418:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001041c:	6851      	ldr	r1, [r2, #4]
9001041e:	c303      	stmia	r3!, {r0, r1}
90010420:	4631      	mov	r1, r6
90010422:	a80a      	add	r0, sp, #40	@ 0x28
90010424:	f7ff f914 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
90010428:	4b38      	ldr	r3, [pc, #224]	@ (9001050c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001042a:	2100      	movs	r1, #0
9001042c:	f9b3 2000 	ldrsh.w	r2, [r3]
90010430:	4b37      	ldr	r3, [pc, #220]	@ (90010510 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010432:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90010436:	aa0a      	add	r2, sp, #40	@ 0x28
90010438:	f9b3 3000 	ldrsh.w	r3, [r3]
9001043c:	910c      	str	r1, [sp, #48]	@ 0x30
9001043e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90010442:	ab08      	add	r3, sp, #32
90010444:	e892 0003 	ldmia.w	r2, {r0, r1}
90010448:	e883 0003 	stmia.w	r3, {r0, r1}
9001044c:	4618      	mov	r0, r3
9001044e:	a90c      	add	r1, sp, #48	@ 0x30
90010450:	f7ff f8fe 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
90010454:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90010456:	2b00      	cmp	r3, #0
90010458:	d13c      	bne.n	900104d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
9001045a:	2000      	movs	r0, #0
9001045c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90010460:	2600      	movs	r6, #0
90010462:	696b      	ldr	r3, [r5, #20]
90010464:	a908      	add	r1, sp, #32
90010466:	682a      	ldr	r2, [r5, #0]
90010468:	4628      	mov	r0, r5
9001046a:	9305      	str	r3, [sp, #20]
9001046c:	616e      	str	r6, [r5, #20]
9001046e:	6892      	ldr	r2, [r2, #8]
90010470:	4790      	blx	r2
90010472:	9b05      	ldr	r3, [sp, #20]
90010474:	4652      	mov	r2, sl
90010476:	4649      	mov	r1, r9
90010478:	616b      	str	r3, [r5, #20]
9001047a:	4628      	mov	r0, r5
9001047c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90010480:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90010484:	f7ff fafe 	bl	9000fa84 <_ZN8touchgfx8Drawable5setXYEss>
90010488:	9a01      	ldr	r2, [sp, #4]
9001048a:	4b23      	ldr	r3, [pc, #140]	@ (90010518 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
9001048c:	4620      	mov	r0, r4
9001048e:	801a      	strh	r2, [r3, #0]
90010490:	9a02      	ldr	r2, [sp, #8]
90010492:	4b22      	ldr	r3, [pc, #136]	@ (9001051c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90010494:	801a      	strh	r2, [r3, #0]
90010496:	9a03      	ldr	r2, [sp, #12]
90010498:	4b1c      	ldr	r3, [pc, #112]	@ (9001050c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001049a:	801a      	strh	r2, [r3, #0]
9001049c:	4b1c      	ldr	r3, [pc, #112]	@ (90010510 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001049e:	9a04      	ldr	r2, [sp, #16]
900104a0:	801a      	strh	r2, [r3, #0]
900104a2:	6823      	ldr	r3, [r4, #0]
900104a4:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
900104a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900104aa:	4798      	blx	r3
900104ac:	6823      	ldr	r3, [r4, #0]
900104ae:	4620      	mov	r0, r4
900104b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900104b2:	4798      	blx	r3
900104b4:	b00f      	add	sp, #60	@ 0x3c
900104b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900104ba:	883b      	ldrh	r3, [r7, #0]
900104bc:	f8ab 0000 	strh.w	r0, [fp]
900104c0:	f8aa 3000 	strh.w	r3, [sl]
900104c4:	e789      	b.n	900103da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
900104c6:	462a      	mov	r2, r5
900104c8:	ab0a      	add	r3, sp, #40	@ 0x28
900104ca:	f852 0f04 	ldr.w	r0, [r2, #4]!
900104ce:	6851      	ldr	r1, [r2, #4]
900104d0:	c303      	stmia	r3!, {r0, r1}
900104d2:	e7a9      	b.n	90010428 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
900104d4:	a807      	add	r0, sp, #28
900104d6:	f008 fcf7 	bl	90018ec8 <_ZNK8touchgfx6Bitmap9getFormatEv>
900104da:	4606      	mov	r6, r0
900104dc:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
900104de:	6803      	ldr	r3, [r0, #0]
900104e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900104e2:	4798      	blx	r3
900104e4:	4286      	cmp	r6, r0
900104e6:	d1b8      	bne.n	9001045a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
900104e8:	f7ff fe6e 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
900104ec:	6803      	ldr	r3, [r0, #0]
900104ee:	4606      	mov	r6, r0
900104f0:	a807      	add	r0, sp, #28
900104f2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900104f4:	9305      	str	r3, [sp, #20]
900104f6:	f008 fce7 	bl	90018ec8 <_ZNK8touchgfx6Bitmap9getFormatEv>
900104fa:	9b05      	ldr	r3, [sp, #20]
900104fc:	4601      	mov	r1, r0
900104fe:	4630      	mov	r0, r6
90010500:	4798      	blx	r3
90010502:	f080 0001 	eor.w	r0, r0, #1
90010506:	b2c0      	uxtb	r0, r0
90010508:	e7a8      	b.n	9001045c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
9001050a:	bf00      	nop
9001050c:	240218a8 	.word	0x240218a8
90010510:	240218aa 	.word	0x240218aa
90010514:	240218ac 	.word	0x240218ac
90010518:	240218ae 	.word	0x240218ae
9001051c:	240218b0 	.word	0x240218b0

90010520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90010520:	4b07      	ldr	r3, [pc, #28]	@ (90010540 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90010522:	b510      	push	{r4, lr}
90010524:	781b      	ldrb	r3, [r3, #0]
90010526:	4604      	mov	r4, r0
90010528:	b13b      	cbz	r3, 9001053a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001052a:	6803      	ldr	r3, [r0, #0]
9001052c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001052e:	4798      	blx	r3
90010530:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010532:	4283      	cmp	r3, r0
90010534:	d101      	bne.n	9001053a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010536:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90010538:	bd10      	pop	{r4, pc}
9001053a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
9001053c:	e7fc      	b.n	90010538 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
9001053e:	bf00      	nop
90010540:	240218b2 	.word	0x240218b2

90010544 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90010544:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010548:	461d      	mov	r5, r3
9001054a:	b08a      	sub	sp, #40	@ 0x28
9001054c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90010550:	4690      	mov	r8, r2
90010552:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90010556:	2400      	movs	r4, #0
90010558:	4607      	mov	r7, r0
9001055a:	fb06 8505 	mla	r5, r6, r5, r8
9001055e:	9404      	str	r4, [sp, #16]
90010560:	f88d 4020 	strb.w	r4, [sp, #32]
90010564:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010568:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001056c:	f8ad 3018 	strh.w	r3, [sp, #24]
90010570:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010574:	f8ad 301a 	strh.w	r3, [sp, #26]
90010578:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001057c:	f8ad 301c 	strh.w	r3, [sp, #28]
90010580:	f7ff ffce 	bl	90010520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010584:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010588:	6878      	ldr	r0, [r7, #4]
9001058a:	f8ad 601e 	strh.w	r6, [sp, #30]
9001058e:	a901      	add	r1, sp, #4
90010590:	9505      	str	r5, [sp, #20]
90010592:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010596:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
9001059a:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
9001059e:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
900105a2:	6803      	ldr	r3, [r0, #0]
900105a4:	685b      	ldr	r3, [r3, #4]
900105a6:	4798      	blx	r3
900105a8:	b00a      	add	sp, #40	@ 0x28
900105aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900105ae <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900105ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900105b2:	b08b      	sub	sp, #44	@ 0x2c
900105b4:	2400      	movs	r4, #0
900105b6:	4691      	mov	r9, r2
900105b8:	461d      	mov	r5, r3
900105ba:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
900105be:	f44f 6300 	mov.w	r3, #2048	@ 0x800
900105c2:	4688      	mov	r8, r1
900105c4:	4607      	mov	r7, r0
900105c6:	9404      	str	r4, [sp, #16]
900105c8:	fb06 9505 	mla	r5, r6, r5, r9
900105cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
900105d0:	f7ff ffa6 	bl	90010520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900105d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900105d8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900105dc:	6878      	ldr	r0, [r7, #4]
900105de:	f8ad 3018 	strh.w	r3, [sp, #24]
900105e2:	a901      	add	r1, sp, #4
900105e4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900105e8:	9505      	str	r5, [sp, #20]
900105ea:	f8ad 301a 	strh.w	r3, [sp, #26]
900105ee:	f8ad 401c 	strh.w	r4, [sp, #28]
900105f2:	f8ad 601e 	strh.w	r6, [sp, #30]
900105f6:	f8cd 8010 	str.w	r8, [sp, #16]
900105fa:	f8ad 4020 	strh.w	r4, [sp, #32]
900105fe:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010602:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90010606:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
9001060a:	6803      	ldr	r3, [r0, #0]
9001060c:	685b      	ldr	r3, [r3, #4]
9001060e:	4798      	blx	r3
90010610:	b00b      	add	sp, #44	@ 0x2c
90010612:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90010618 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90010618:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001061c:	b08a      	sub	sp, #40	@ 0x28
9001061e:	4698      	mov	r8, r3
90010620:	2300      	movs	r3, #0
90010622:	4606      	mov	r6, r0
90010624:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90010628:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
9001062c:	2d0b      	cmp	r5, #11
9001062e:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
90010632:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90010636:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
9001063a:	9304      	str	r3, [sp, #16]
9001063c:	d137      	bne.n	900106ae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
9001063e:	2380      	movs	r3, #128	@ 0x80
90010640:	f88d 0020 	strb.w	r0, [sp, #32]
90010644:	4630      	mov	r0, r6
90010646:	9203      	str	r2, [sp, #12]
90010648:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001064c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010650:	f8ad 3018 	strh.w	r3, [sp, #24]
90010654:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010658:	f8ad 301a 	strh.w	r3, [sp, #26]
9001065c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010660:	f8ad 301c 	strh.w	r3, [sp, #28]
90010664:	f7ff ff5c 	bl	90010520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010668:	2c0b      	cmp	r4, #11
9001066a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
9001066e:	f8ad 701e 	strh.w	r7, [sp, #30]
90010672:	bf94      	ite	ls
90010674:	4b19      	ldrls	r3, [pc, #100]	@ (900106dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90010676:	2100      	movhi	r1, #0
90010678:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
9001067c:	bf98      	it	ls
9001067e:	5d19      	ldrbls	r1, [r3, r4]
90010680:	fb02 8307 	mla	r3, r2, r7, r8
90010684:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010688:	10c9      	asrs	r1, r1, #3
9001068a:	fb01 0003 	mla	r0, r1, r3, r0
9001068e:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90010692:	a901      	add	r1, sp, #4
90010694:	9005      	str	r0, [sp, #20]
90010696:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
9001069a:	2300      	movs	r3, #0
9001069c:	6870      	ldr	r0, [r6, #4]
9001069e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
900106a2:	6803      	ldr	r3, [r0, #0]
900106a4:	685b      	ldr	r3, [r3, #4]
900106a6:	4798      	blx	r3
900106a8:	b00a      	add	sp, #40	@ 0x28
900106aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900106ae:	2d02      	cmp	r5, #2
900106b0:	d109      	bne.n	900106c6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
900106b2:	28ff      	cmp	r0, #255	@ 0xff
900106b4:	d105      	bne.n	900106c2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
900106b6:	f1bc 0f00 	cmp.w	ip, #0
900106ba:	bf14      	ite	ne
900106bc:	2340      	movne	r3, #64	@ 0x40
900106be:	2320      	moveq	r3, #32
900106c0:	e7be      	b.n	90010640 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900106c2:	2340      	movs	r3, #64	@ 0x40
900106c4:	e7bc      	b.n	90010640 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900106c6:	28ff      	cmp	r0, #255	@ 0xff
900106c8:	d105      	bne.n	900106d6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
900106ca:	f1bc 0f00 	cmp.w	ip, #0
900106ce:	bf14      	ite	ne
900106d0:	2304      	movne	r3, #4
900106d2:	2301      	moveq	r3, #1
900106d4:	e7b4      	b.n	90010640 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900106d6:	2304      	movs	r3, #4
900106d8:	e7b2      	b.n	90010640 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
900106da:	bf00      	nop
900106dc:	9002bea8 	.word	0x9002bea8

900106e0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
900106e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900106e4:	b08b      	sub	sp, #44	@ 0x2c
900106e6:	461d      	mov	r5, r3
900106e8:	2400      	movs	r4, #0
900106ea:	4688      	mov	r8, r1
900106ec:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
900106f0:	4693      	mov	fp, r2
900106f2:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
900106f6:	4607      	mov	r7, r0
900106f8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900106fc:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90010700:	9404      	str	r4, [sp, #16]
90010702:	bf14      	ite	ne
90010704:	2308      	movne	r3, #8
90010706:	2302      	moveq	r3, #2
90010708:	fb05 b50a 	mla	r5, r5, sl, fp
9001070c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010710:	f7ff ff06 	bl	90010520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010714:	2e0b      	cmp	r6, #11
90010716:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001071a:	a901      	add	r1, sp, #4
9001071c:	bf98      	it	ls
9001071e:	4b13      	ldrls	r3, [pc, #76]	@ (9001076c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90010720:	f8ad a01e 	strh.w	sl, [sp, #30]
90010724:	bf98      	it	ls
90010726:	5d9c      	ldrbls	r4, [r3, r6]
90010728:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
9001072c:	10e4      	asrs	r4, r4, #3
9001072e:	f8cd 8010 	str.w	r8, [sp, #16]
90010732:	f8ad 3018 	strh.w	r3, [sp, #24]
90010736:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001073a:	fb04 0405 	mla	r4, r4, r5, r0
9001073e:	6878      	ldr	r0, [r7, #4]
90010740:	f8ad 301a 	strh.w	r3, [sp, #26]
90010744:	2300      	movs	r3, #0
90010746:	9405      	str	r4, [sp, #20]
90010748:	f8ad 301c 	strh.w	r3, [sp, #28]
9001074c:	f88d 9020 	strb.w	r9, [sp, #32]
90010750:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90010754:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90010758:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
9001075c:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90010760:	6803      	ldr	r3, [r0, #0]
90010762:	685b      	ldr	r3, [r3, #4]
90010764:	4798      	blx	r3
90010766:	b00b      	add	sp, #44	@ 0x2c
90010768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001076c:	9002bea8 	.word	0x9002bea8

90010770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90010770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010774:	461e      	mov	r6, r3
90010776:	4b0a      	ldr	r3, [pc, #40]	@ (900107a0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90010778:	460f      	mov	r7, r1
9001077a:	4690      	mov	r8, r2
9001077c:	881d      	ldrh	r5, [r3, #0]
9001077e:	f7ff fd23 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
90010782:	6803      	ldr	r3, [r0, #0]
90010784:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010786:	4798      	blx	r3
90010788:	280b      	cmp	r0, #11
9001078a:	bf96      	itet	ls
9001078c:	4b05      	ldrls	r3, [pc, #20]	@ (900107a4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
9001078e:	2400      	movhi	r4, #0
90010790:	5c1c      	ldrbls	r4, [r3, r0]
90010792:	fb08 7005 	mla	r0, r8, r5, r7
90010796:	10e4      	asrs	r4, r4, #3
90010798:	fb04 6000 	mla	r0, r4, r0, r6
9001079c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900107a0:	240218ae 	.word	0x240218ae
900107a4:	9002bea8 	.word	0x9002bea8

900107a8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900107a8:	b5f0      	push	{r4, r5, r6, r7, lr}
900107aa:	b08b      	sub	sp, #44	@ 0x2c
900107ac:	461f      	mov	r7, r3
900107ae:	4604      	mov	r4, r0
900107b0:	4616      	mov	r6, r2
900107b2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
900107b6:	2500      	movs	r5, #0
900107b8:	e9cd 3101 	strd	r3, r1, [sp, #4]
900107bc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900107c0:	9504      	str	r5, [sp, #16]
900107c2:	f8ad 3018 	strh.w	r3, [sp, #24]
900107c6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900107ca:	f8ad 301a 	strh.w	r3, [sp, #26]
900107ce:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900107d2:	f8ad 301c 	strh.w	r3, [sp, #28]
900107d6:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900107da:	f88d 3020 	strb.w	r3, [sp, #32]
900107de:	f7ff fe9f 	bl	90010520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900107e2:	463a      	mov	r2, r7
900107e4:	4631      	mov	r1, r6
900107e6:	4603      	mov	r3, r0
900107e8:	4620      	mov	r0, r4
900107ea:	f7ff ffc1 	bl	90010770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900107ee:	4b0e      	ldr	r3, [pc, #56]	@ (90010828 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
900107f0:	9005      	str	r0, [sp, #20]
900107f2:	881b      	ldrh	r3, [r3, #0]
900107f4:	f8ad 301e 	strh.w	r3, [sp, #30]
900107f8:	f7ff fce6 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
900107fc:	6803      	ldr	r3, [r0, #0]
900107fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010800:	4798      	blx	r3
90010802:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90010804:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90010808:	a901      	add	r1, sp, #4
9001080a:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
9001080e:	9304      	str	r3, [sp, #16]
90010810:	6860      	ldr	r0, [r4, #4]
90010812:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90010816:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
9001081a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
9001081e:	6803      	ldr	r3, [r0, #0]
90010820:	685b      	ldr	r3, [r3, #4]
90010822:	4798      	blx	r3
90010824:	b00b      	add	sp, #44	@ 0x2c
90010826:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010828:	240218ae 	.word	0x240218ae

9001082c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
9001082c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001082e:	b08d      	sub	sp, #52	@ 0x34
90010830:	2501      	movs	r5, #1
90010832:	4604      	mov	r4, r0
90010834:	466b      	mov	r3, sp
90010836:	9503      	str	r5, [sp, #12]
90010838:	e883 0006 	stmia.w	r3, {r1, r2}
9001083c:	2300      	movs	r3, #0
9001083e:	f8bd 6000 	ldrh.w	r6, [sp]
90010842:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90010846:	9306      	str	r3, [sp, #24]
90010848:	6803      	ldr	r3, [r0, #0]
9001084a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001084c:	4798      	blx	r3
9001084e:	463a      	mov	r2, r7
90010850:	4631      	mov	r1, r6
90010852:	4603      	mov	r3, r0
90010854:	4620      	mov	r0, r4
90010856:	f7ff ff8b 	bl	90010770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001085a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9001085c:	9004      	str	r0, [sp, #16]
9001085e:	9307      	str	r3, [sp, #28]
90010860:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010864:	f8ad 3020 	strh.w	r3, [sp, #32]
90010868:	f8bd 3006 	ldrh.w	r3, [sp, #6]
9001086c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90010870:	4b0e      	ldr	r3, [pc, #56]	@ (900108ac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90010872:	881b      	ldrh	r3, [r3, #0]
90010874:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90010878:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
9001087c:	f7ff fca4 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
90010880:	6803      	ldr	r3, [r0, #0]
90010882:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010884:	4798      	blx	r3
90010886:	23ff      	movs	r3, #255	@ 0xff
90010888:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
9001088c:	a903      	add	r1, sp, #12
9001088e:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90010892:	6860      	ldr	r0, [r4, #4]
90010894:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90010898:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
9001089c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
900108a0:	6803      	ldr	r3, [r0, #0]
900108a2:	685b      	ldr	r3, [r3, #4]
900108a4:	4798      	blx	r3
900108a6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
900108a8:	b00d      	add	sp, #52	@ 0x34
900108aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
900108ac:	240218ae 	.word	0x240218ae

900108b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
900108b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900108b4:	b08c      	sub	sp, #48	@ 0x30
900108b6:	461e      	mov	r6, r3
900108b8:	2300      	movs	r3, #0
900108ba:	4604      	mov	r4, r0
900108bc:	466d      	mov	r5, sp
900108be:	9306      	str	r3, [sp, #24]
900108c0:	6803      	ldr	r3, [r0, #0]
900108c2:	e885 0006 	stmia.w	r5, {r1, r2}
900108c6:	2501      	movs	r5, #1
900108c8:	f8bd 7000 	ldrh.w	r7, [sp]
900108cc:	f8bd 8002 	ldrh.w	r8, [sp, #2]
900108d0:	9503      	str	r5, [sp, #12]
900108d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900108d4:	4798      	blx	r3
900108d6:	4642      	mov	r2, r8
900108d8:	4639      	mov	r1, r7
900108da:	4603      	mov	r3, r0
900108dc:	4620      	mov	r0, r4
900108de:	f7ff ff47 	bl	90010770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900108e2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900108e6:	9004      	str	r0, [sp, #16]
900108e8:	f8ad 3020 	strh.w	r3, [sp, #32]
900108ec:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900108f0:	9607      	str	r6, [sp, #28]
900108f2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
900108f6:	4b10      	ldr	r3, [pc, #64]	@ (90010938 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
900108f8:	881b      	ldrh	r3, [r3, #0]
900108fa:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
900108fe:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90010900:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90010904:	f7ff fc60 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
90010908:	6803      	ldr	r3, [r0, #0]
9001090a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001090c:	4798      	blx	r3
9001090e:	23ff      	movs	r3, #255	@ 0xff
90010910:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90010914:	a903      	add	r1, sp, #12
90010916:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001091a:	6860      	ldr	r0, [r4, #4]
9001091c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90010920:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90010924:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90010928:	6803      	ldr	r3, [r0, #0]
9001092a:	685b      	ldr	r3, [r3, #4]
9001092c:	4798      	blx	r3
9001092e:	4630      	mov	r0, r6
90010930:	b00c      	add	sp, #48	@ 0x30
90010932:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010936:	bf00      	nop
90010938:	240218ae 	.word	0x240218ae

9001093c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
9001093c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001093e:	b085      	sub	sp, #20
90010940:	4605      	mov	r5, r0
90010942:	ac02      	add	r4, sp, #8
90010944:	e884 0006 	stmia.w	r4, {r1, r2}
90010948:	f8bd 6008 	ldrh.w	r6, [sp, #8]
9001094c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90010950:	f7ff fde6 	bl	90010520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010954:	4631      	mov	r1, r6
90010956:	4603      	mov	r3, r0
90010958:	463a      	mov	r2, r7
9001095a:	4628      	mov	r0, r5
9001095c:	f7ff ff08 	bl	90010770 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010960:	4a05      	ldr	r2, [pc, #20]	@ (90010978 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90010962:	682b      	ldr	r3, [r5, #0]
90010964:	8812      	ldrh	r2, [r2, #0]
90010966:	9200      	str	r2, [sp, #0]
90010968:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
9001096a:	4603      	mov	r3, r0
9001096c:	4628      	mov	r0, r5
9001096e:	e894 0006 	ldmia.w	r4, {r1, r2}
90010972:	47b0      	blx	r6
90010974:	b005      	add	sp, #20
90010976:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010978:	240218ae 	.word	0x240218ae

9001097c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
9001097c:	b570      	push	{r4, r5, r6, lr}
9001097e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90010982:	4604      	mov	r4, r0
90010984:	b19b      	cbz	r3, 900109ae <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90010986:	2002      	movs	r0, #2
90010988:	f7f0 f9c8 	bl	90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
9001098c:	2300      	movs	r3, #0
9001098e:	4620      	mov	r0, r4
90010990:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90010994:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90010998:	6823      	ldr	r3, [r4, #0]
9001099a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
9001099e:	f7ff fdbf 	bl	90010520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900109a2:	4601      	mov	r1, r0
900109a4:	4620      	mov	r0, r4
900109a6:	462b      	mov	r3, r5
900109a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900109ac:	4718      	bx	r3
900109ae:	bd70      	pop	{r4, r5, r6, pc}

900109b0 <_ZN8touchgfx3HAL12setMCUActiveEb>:
900109b0:	b570      	push	{r4, r5, r6, lr}
900109b2:	4605      	mov	r5, r0
900109b4:	460c      	mov	r4, r1
900109b6:	2003      	movs	r0, #3
900109b8:	b149      	cbz	r1, 900109ce <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
900109ba:	f7f0 f947 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900109be:	6928      	ldr	r0, [r5, #16]
900109c0:	b168      	cbz	r0, 900109de <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900109c2:	6803      	ldr	r3, [r0, #0]
900109c4:	2101      	movs	r1, #1
900109c6:	695b      	ldr	r3, [r3, #20]
900109c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900109cc:	4718      	bx	r3
900109ce:	f7f0 f971 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900109d2:	6928      	ldr	r0, [r5, #16]
900109d4:	b118      	cbz	r0, 900109de <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900109d6:	6803      	ldr	r3, [r0, #0]
900109d8:	4621      	mov	r1, r4
900109da:	695b      	ldr	r3, [r3, #20]
900109dc:	e7f4      	b.n	900109c8 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
900109de:	bd70      	pop	{r4, r5, r6, pc}

900109e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
900109e0:	b538      	push	{r3, r4, r5, lr}
900109e2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
900109e6:	4604      	mov	r4, r0
900109e8:	460d      	mov	r5, r1
900109ea:	428b      	cmp	r3, r1
900109ec:	d006      	beq.n	900109fc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
900109ee:	6803      	ldr	r3, [r0, #0]
900109f0:	b929      	cbnz	r1, 900109fe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
900109f2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
900109f6:	4798      	blx	r3
900109f8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
900109fc:	bd38      	pop	{r3, r4, r5, pc}
900109fe:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90010a02:	e7f8      	b.n	900109f6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90010a04 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90010a04:	4b0d      	ldr	r3, [pc, #52]	@ (90010a3c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90010a06:	b510      	push	{r4, lr}
90010a08:	781b      	ldrb	r3, [r3, #0]
90010a0a:	4604      	mov	r4, r0
90010a0c:	b95b      	cbnz	r3, 90010a26 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010a0e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90010a12:	2b02      	cmp	r3, #2
90010a14:	d007      	beq.n	90010a26 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010a16:	6840      	ldr	r0, [r0, #4]
90010a18:	f000 f91a 	bl	90010c50 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90010a1c:	b118      	cbz	r0, 90010a26 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010a1e:	6862      	ldr	r2, [r4, #4]
90010a20:	7a53      	ldrb	r3, [r2, #9]
90010a22:	2b00      	cmp	r3, #0
90010a24:	d0fc      	beq.n	90010a20 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90010a26:	f7f1 fc81 	bl	9000232c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010a2a:	4620      	mov	r0, r4
90010a2c:	2100      	movs	r1, #0
90010a2e:	f7ff ffd7 	bl	900109e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010a32:	4620      	mov	r0, r4
90010a34:	f7ff fd74 	bl	90010520 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010a38:	bd10      	pop	{r4, pc}
90010a3a:	bf00      	nop
90010a3c:	240218b2 	.word	0x240218b2

90010a40 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90010a40:	b570      	push	{r4, r5, r6, lr}
90010a42:	4604      	mov	r4, r0
90010a44:	6803      	ldr	r3, [r0, #0]
90010a46:	b919      	cbnz	r1, 90010a50 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90010a48:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010a4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010a4e:	4718      	bx	r3
90010a50:	2200      	movs	r2, #0
90010a52:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90010a56:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
90010a5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010a5c:	4798      	blx	r3
90010a5e:	6863      	ldr	r3, [r4, #4]
90010a60:	2101      	movs	r1, #1
90010a62:	4605      	mov	r5, r0
90010a64:	4620      	mov	r0, r4
90010a66:	7299      	strb	r1, [r3, #10]
90010a68:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90010a6c:	f7ff ffb8 	bl	900109e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010a70:	4628      	mov	r0, r5
90010a72:	bd70      	pop	{r4, r5, r6, pc}

90010a74 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90010a74:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90010a78:	1a13      	subs	r3, r2, r0
90010a7a:	4258      	negs	r0, r3
90010a7c:	4158      	adcs	r0, r3
90010a7e:	4770      	bx	lr

90010a80 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90010a80:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90010a84:	1a9b      	subs	r3, r3, r2
90010a86:	2b00      	cmp	r3, #0
90010a88:	bfdc      	itt	le
90010a8a:	6882      	ldrle	r2, [r0, #8]
90010a8c:	189b      	addle	r3, r3, r2
90010a8e:	2b01      	cmp	r3, #1
90010a90:	bfcc      	ite	gt
90010a92:	2000      	movgt	r0, #0
90010a94:	2001      	movle	r0, #1
90010a96:	4770      	bx	lr

90010a98 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90010a98:	6902      	ldr	r2, [r0, #16]
90010a9a:	6843      	ldr	r3, [r0, #4]
90010a9c:	2024      	movs	r0, #36	@ 0x24
90010a9e:	fb00 3002 	mla	r0, r0, r2, r3
90010aa2:	4770      	bx	lr

90010aa4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90010aa4:	6803      	ldr	r3, [r0, #0]
90010aa6:	691b      	ldr	r3, [r3, #16]
90010aa8:	4718      	bx	r3

90010aaa <_ZN8touchgfx13DMA_Interface7executeEv>:
90010aaa:	2301      	movs	r3, #1
90010aac:	b570      	push	{r4, r5, r6, lr}
90010aae:	7203      	strb	r3, [r0, #8]
90010ab0:	4604      	mov	r4, r0
90010ab2:	6840      	ldr	r0, [r0, #4]
90010ab4:	6803      	ldr	r3, [r0, #0]
90010ab6:	699b      	ldr	r3, [r3, #24]
90010ab8:	4798      	blx	r3
90010aba:	6803      	ldr	r3, [r0, #0]
90010abc:	4605      	mov	r5, r0
90010abe:	2b40      	cmp	r3, #64	@ 0x40
90010ac0:	d00c      	beq.n	90010adc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010ac2:	d810      	bhi.n	90010ae6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90010ac4:	2b04      	cmp	r3, #4
90010ac6:	d01d      	beq.n	90010b04 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90010ac8:	d804      	bhi.n	90010ad4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90010aca:	2b01      	cmp	r3, #1
90010acc:	d006      	beq.n	90010adc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010ace:	2b02      	cmp	r3, #2
90010ad0:	d02c      	beq.n	90010b2c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90010ad2:	bd70      	pop	{r4, r5, r6, pc}
90010ad4:	2b08      	cmp	r3, #8
90010ad6:	d01d      	beq.n	90010b14 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90010ad8:	2b20      	cmp	r3, #32
90010ada:	d1fa      	bne.n	90010ad2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90010adc:	6823      	ldr	r3, [r4, #0]
90010ade:	4620      	mov	r0, r4
90010ae0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90010ae2:	4798      	blx	r3
90010ae4:	e013      	b.n	90010b0e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90010ae6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90010aea:	d0f7      	beq.n	90010adc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010aec:	d804      	bhi.n	90010af8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90010aee:	2b80      	cmp	r3, #128	@ 0x80
90010af0:	d0f4      	beq.n	90010adc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010af2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90010af6:	e7f0      	b.n	90010ada <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90010af8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90010afc:	d0ee      	beq.n	90010adc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010afe:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90010b02:	e7e5      	b.n	90010ad0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90010b04:	6823      	ldr	r3, [r4, #0]
90010b06:	7f01      	ldrb	r1, [r0, #28]
90010b08:	4620      	mov	r0, r4
90010b0a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90010b0c:	4798      	blx	r3
90010b0e:	6823      	ldr	r3, [r4, #0]
90010b10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010b12:	e006      	b.n	90010b22 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90010b14:	6823      	ldr	r3, [r4, #0]
90010b16:	7f01      	ldrb	r1, [r0, #28]
90010b18:	4620      	mov	r0, r4
90010b1a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90010b1c:	4798      	blx	r3
90010b1e:	6823      	ldr	r3, [r4, #0]
90010b20:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010b22:	4629      	mov	r1, r5
90010b24:	4620      	mov	r0, r4
90010b26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010b2a:	4718      	bx	r3
90010b2c:	6823      	ldr	r3, [r4, #0]
90010b2e:	4620      	mov	r0, r4
90010b30:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90010b32:	4798      	blx	r3
90010b34:	e7f3      	b.n	90010b1e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90010b36 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90010b36:	4770      	bx	lr

90010b38 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90010b38:	4770      	bx	lr

90010b3a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90010b3a:	4770      	bx	lr

90010b3c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90010b3c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90010b40:	b510      	push	{r4, lr}
90010b42:	1ad2      	subs	r2, r2, r3
90010b44:	2a00      	cmp	r2, #0
90010b46:	bfdc      	itt	le
90010b48:	6884      	ldrle	r4, [r0, #8]
90010b4a:	1912      	addle	r2, r2, r4
90010b4c:	2a01      	cmp	r2, #1
90010b4e:	dd16      	ble.n	90010b7e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90010b50:	6842      	ldr	r2, [r0, #4]
90010b52:	2424      	movs	r4, #36	@ 0x24
90010b54:	fb04 2303 	mla	r3, r4, r3, r2
90010b58:	f101 0220 	add.w	r2, r1, #32
90010b5c:	f851 4b04 	ldr.w	r4, [r1], #4
90010b60:	4291      	cmp	r1, r2
90010b62:	f843 4b04 	str.w	r4, [r3], #4
90010b66:	d1f9      	bne.n	90010b5c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90010b68:	780a      	ldrb	r2, [r1, #0]
90010b6a:	701a      	strb	r2, [r3, #0]
90010b6c:	68c3      	ldr	r3, [r0, #12]
90010b6e:	6882      	ldr	r2, [r0, #8]
90010b70:	f3bf 8f5b 	dmb	ish
90010b74:	3301      	adds	r3, #1
90010b76:	429a      	cmp	r2, r3
90010b78:	bfd8      	it	le
90010b7a:	1a9b      	suble	r3, r3, r2
90010b7c:	60c3      	str	r3, [r0, #12]
90010b7e:	bd10      	pop	{r4, pc}

90010b80 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90010b80:	6903      	ldr	r3, [r0, #16]
90010b82:	6882      	ldr	r2, [r0, #8]
90010b84:	f3bf 8f5b 	dmb	ish
90010b88:	3301      	adds	r3, #1
90010b8a:	429a      	cmp	r2, r3
90010b8c:	bfd8      	it	le
90010b8e:	1a9b      	suble	r3, r3, r2
90010b90:	6103      	str	r3, [r0, #16]
90010b92:	4770      	bx	lr

90010b94 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90010b94:	b570      	push	{r4, r5, r6, lr}
90010b96:	4604      	mov	r4, r0
90010b98:	460e      	mov	r6, r1
90010b9a:	6860      	ldr	r0, [r4, #4]
90010b9c:	6803      	ldr	r3, [r0, #0]
90010b9e:	685b      	ldr	r3, [r3, #4]
90010ba0:	4798      	blx	r3
90010ba2:	2800      	cmp	r0, #0
90010ba4:	d1f9      	bne.n	90010b9a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90010ba6:	4d0d      	ldr	r5, [pc, #52]	@ (90010bdc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90010ba8:	6828      	ldr	r0, [r5, #0]
90010baa:	6803      	ldr	r3, [r0, #0]
90010bac:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90010bae:	4798      	blx	r3
90010bb0:	f7f1 fbca 	bl	90002348 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90010bb4:	6828      	ldr	r0, [r5, #0]
90010bb6:	2101      	movs	r1, #1
90010bb8:	f7ff ff12 	bl	900109e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010bbc:	6860      	ldr	r0, [r4, #4]
90010bbe:	4631      	mov	r1, r6
90010bc0:	6803      	ldr	r3, [r0, #0]
90010bc2:	689b      	ldr	r3, [r3, #8]
90010bc4:	4798      	blx	r3
90010bc6:	6823      	ldr	r3, [r4, #0]
90010bc8:	4620      	mov	r0, r4
90010bca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010bcc:	4798      	blx	r3
90010bce:	6828      	ldr	r0, [r5, #0]
90010bd0:	6803      	ldr	r3, [r0, #0]
90010bd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010bd6:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90010bd8:	4718      	bx	r3
90010bda:	bf00      	nop
90010bdc:	240218b4 	.word	0x240218b4

90010be0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90010be0:	b508      	push	{r3, lr}
90010be2:	f7f1 fba3 	bl	9000232c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010be6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90010bea:	f7f1 bba7 	b.w	9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90010bee <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90010bee:	b510      	push	{r4, lr}
90010bf0:	4604      	mov	r4, r0
90010bf2:	2114      	movs	r1, #20
90010bf4:	f017 f848 	bl	90027c88 <_ZdlPvj>
90010bf8:	4620      	mov	r0, r4
90010bfa:	bd10      	pop	{r4, pc}

90010bfc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90010bfc:	b570      	push	{r4, r5, r6, lr}
90010bfe:	4604      	mov	r4, r0
90010c00:	6840      	ldr	r0, [r0, #4]
90010c02:	6803      	ldr	r3, [r0, #0]
90010c04:	681b      	ldr	r3, [r3, #0]
90010c06:	4798      	blx	r3
90010c08:	4605      	mov	r5, r0
90010c0a:	b930      	cbnz	r0, 90010c1a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010c0c:	7a23      	ldrb	r3, [r4, #8]
90010c0e:	b123      	cbz	r3, 90010c1a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010c10:	6860      	ldr	r0, [r4, #4]
90010c12:	6803      	ldr	r3, [r0, #0]
90010c14:	695b      	ldr	r3, [r3, #20]
90010c16:	4798      	blx	r3
90010c18:	7225      	strb	r5, [r4, #8]
90010c1a:	6860      	ldr	r0, [r4, #4]
90010c1c:	6803      	ldr	r3, [r0, #0]
90010c1e:	681b      	ldr	r3, [r3, #0]
90010c20:	4798      	blx	r3
90010c22:	b928      	cbnz	r0, 90010c30 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90010c24:	6823      	ldr	r3, [r4, #0]
90010c26:	4620      	mov	r0, r4
90010c28:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010c2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010c2e:	4718      	bx	r3
90010c30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010c34:	f7f1 bb90 	b.w	90002358 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90010c38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90010c38:	b510      	push	{r4, lr}
90010c3a:	6082      	str	r2, [r0, #8]
90010c3c:	2200      	movs	r2, #0
90010c3e:	4c03      	ldr	r4, [pc, #12]	@ (90010c4c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90010c40:	e9c0 2203 	strd	r2, r2, [r0, #12]
90010c44:	e9c0 4100 	strd	r4, r1, [r0]
90010c48:	bd10      	pop	{r4, pc}
90010c4a:	bf00      	nop
90010c4c:	9002bebc 	.word	0x9002bebc

90010c50 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90010c50:	6840      	ldr	r0, [r0, #4]
90010c52:	6803      	ldr	r3, [r0, #0]
90010c54:	681b      	ldr	r3, [r3, #0]
90010c56:	4718      	bx	r3

90010c58 <_ZN8touchgfxL10applyNoiseEiihhh>:
90010c58:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90010c5c:	fb80 0101 	smull	r0, r1, r0, r1
90010c60:	4f21      	ldr	r7, [pc, #132]	@ (90010ce8 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90010c62:	461c      	mov	r4, r3
90010c64:	4616      	mov	r6, r2
90010c66:	fba0 bc07 	umull	fp, ip, r0, r7
90010c6a:	f89d 5018 	ldrb.w	r5, [sp, #24]
90010c6e:	fb07 cc01 	mla	ip, r7, r1, ip
90010c72:	fbab 010b 	umull	r0, r1, fp, fp
90010c76:	fb0b f70c 	mul.w	r7, fp, ip
90010c7a:	fb00 f30c 	mul.w	r3, r0, ip
90010c7e:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90010c82:	fb0b 3301 	mla	r3, fp, r1, r3
90010c86:	fba0 010b 	umull	r0, r1, r0, fp
90010c8a:	4419      	add	r1, r3
90010c8c:	a314      	add	r3, pc, #80	@ (adr r3, 90010ce0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
90010c8e:	e9d3 2300 	ldrd	r2, r3, [r3]
90010c92:	f7ef fd31 	bl	900006f8 <__aeabi_ldivmod>
90010c96:	2ef7      	cmp	r6, #247	@ 0xf7
90010c98:	b290      	uxth	r0, r2
90010c9a:	bf9e      	ittt	ls
90010c9c:	f002 0207 	andls.w	r2, r2, #7
90010ca0:	18b6      	addls	r6, r6, r2
90010ca2:	b2f6      	uxtbls	r6, r6
90010ca4:	2cfb      	cmp	r4, #251	@ 0xfb
90010ca6:	bf9e      	ittt	ls
90010ca8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
90010cac:	18e4      	addls	r4, r4, r3
90010cae:	b2e4      	uxtbls	r4, r4
90010cb0:	2df7      	cmp	r5, #247	@ 0xf7
90010cb2:	bf98      	it	ls
90010cb4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
90010cb8:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90010cbc:	bf98      	it	ls
90010cbe:	182d      	addls	r5, r5, r0
90010cc0:	480a      	ldr	r0, [pc, #40]	@ (90010cec <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
90010cc2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90010cc6:	ea00 2006 	and.w	r0, r0, r6, lsl #8
90010cca:	bf98      	it	ls
90010ccc:	b2ed      	uxtbls	r5, r5
90010cce:	4304      	orrs	r4, r0
90010cd0:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
90010cd4:	b280      	uxth	r0, r0
90010cd6:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
90010cda:	bf00      	nop
90010cdc:	f3af 8000 	nop.w
90010ce0:	797a8d77 	.word	0x797a8d77
90010ce4:	00000000 	.word	0x00000000
90010ce8:	00ec4ba7 	.word	0x00ec4ba7
90010cec:	fffff800 	.word	0xfffff800

90010cf0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
90010cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010cf4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90010cf8:	4605      	mov	r5, r0
90010cfa:	ed2d 8b02 	vpush	{d8}
90010cfe:	b087      	sub	sp, #28
90010d00:	7c41      	ldrb	r1, [r0, #17]
90010d02:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
90010d06:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
90010d0a:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
90010d0e:	2900      	cmp	r1, #0
90010d10:	f000 809a 	beq.w	90010e48 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
90010d14:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90010d18:	ed90 7a08 	vldr	s14, [r0, #32]
90010d1c:	454a      	cmp	r2, r9
90010d1e:	68c0      	ldr	r0, [r0, #12]
90010d20:	db25      	blt.n	90010d6e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
90010d22:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90010d26:	f640 72fc 	movw	r2, #4092	@ 0xffc
90010d2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010d2e:	bfc8      	it	gt
90010d30:	2200      	movgt	r2, #0
90010d32:	5882      	ldr	r2, [r0, r2]
90010d34:	2100      	movs	r1, #0
90010d36:	ea4f 2812 	mov.w	r8, r2, lsr #8
90010d3a:	7c2d      	ldrb	r5, [r5, #16]
90010d3c:	0950      	lsrs	r0, r2, #5
90010d3e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
90010d42:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
90010d46:	eb04 0746 	add.w	r7, r4, r6, lsl #1
90010d4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90010d4e:	2d00      	cmp	r5, #0
90010d50:	d044      	beq.n	90010ddc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90010d52:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90010d56:	d141      	bne.n	90010ddc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90010d58:	bb61      	cbnz	r1, 90010db4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
90010d5a:	ea4e 0000 	orr.w	r0, lr, r0
90010d5e:	ea4c 0500 	orr.w	r5, ip, r0
90010d62:	42bc      	cmp	r4, r7
90010d64:	f080 8214 	bcs.w	90011190 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90010d68:	f824 5b02 	strh.w	r5, [r4], #2
90010d6c:	e7f9      	b.n	90010d62 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
90010d6e:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
90010d72:	454f      	cmp	r7, r9
90010d74:	dc08      	bgt.n	90010d88 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
90010d76:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90010d7a:	f640 72fc 	movw	r2, #4092	@ 0xffc
90010d7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010d82:	bfd8      	it	le
90010d84:	2200      	movle	r2, #0
90010d86:	e7d4      	b.n	90010d32 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90010d88:	eba9 0202 	sub.w	r2, r9, r2
90010d8c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90010d90:	ee07 2a90 	vmov	s15, r2
90010d94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010d98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90010d9c:	ee67 7a87 	vmul.f32	s15, s15, s14
90010da0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90010da4:	ee17 2a90 	vmov	r2, s15
90010da8:	bfd8      	it	le
90010daa:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
90010dae:	0092      	lsls	r2, r2, #2
90010db0:	5882      	ldr	r2, [r0, r2]
90010db2:	e7c0      	b.n	90010d36 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
90010db4:	b2d5      	uxtb	r5, r2
90010db6:	f3c2 4a07 	ubfx	sl, r2, #16, #8
90010dba:	fa5f f888 	uxtb.w	r8, r8
90010dbe:	461e      	mov	r6, r3
90010dc0:	42bc      	cmp	r4, r7
90010dc2:	f080 81e5 	bcs.w	90011190 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90010dc6:	4630      	mov	r0, r6
90010dc8:	9500      	str	r5, [sp, #0]
90010dca:	4643      	mov	r3, r8
90010dcc:	4652      	mov	r2, sl
90010dce:	4649      	mov	r1, r9
90010dd0:	3601      	adds	r6, #1
90010dd2:	f7ff ff41 	bl	90010c58 <_ZN8touchgfxL10applyNoiseEiihhh>
90010dd6:	f824 0b02 	strh.w	r0, [r4], #2
90010dda:	e7f1      	b.n	90010dc0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
90010ddc:	0e12      	lsrs	r2, r2, #24
90010dde:	26ff      	movs	r6, #255	@ 0xff
90010de0:	fb02 f20a 	mul.w	r2, r2, sl
90010de4:	1c53      	adds	r3, r2, #1
90010de6:	eb03 2222 	add.w	r2, r3, r2, asr #8
90010dea:	1212      	asrs	r2, r2, #8
90010dec:	fb02 f50c 	mul.w	r5, r2, ip
90010df0:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 900111a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90010df4:	fb02 f10e 	mul.w	r1, r2, lr
90010df8:	4350      	muls	r0, r2
90010dfa:	43d2      	mvns	r2, r2
90010dfc:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90010e00:	42bc      	cmp	r4, r7
90010e02:	f080 81c5 	bcs.w	90011190 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90010e06:	f8b4 e000 	ldrh.w	lr, [r4]
90010e0a:	ea0e 030c 	and.w	r3, lr, ip
90010e0e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90010e12:	f00e 0e1f 	and.w	lr, lr, #31
90010e16:	fb02 1303 	mla	r3, r2, r3, r1
90010e1a:	fb02 0808 	mla	r8, r2, r8, r0
90010e1e:	fb02 5e0e 	mla	lr, r2, lr, r5
90010e22:	fb93 f3f6 	sdiv	r3, r3, r6
90010e26:	fb98 f8f6 	sdiv	r8, r8, r6
90010e2a:	fb9e fef6 	sdiv	lr, lr, r6
90010e2e:	ea03 030c 	and.w	r3, r3, ip
90010e32:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90010e36:	f00e 0e1f 	and.w	lr, lr, #31
90010e3a:	ea43 0308 	orr.w	r3, r3, r8
90010e3e:	ea43 030e 	orr.w	r3, r3, lr
90010e42:	f824 3b02 	strh.w	r3, [r4], #2
90010e46:	e7db      	b.n	90010e00 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90010e48:	7c82      	ldrb	r2, [r0, #18]
90010e4a:	2a00      	cmp	r2, #0
90010e4c:	d04f      	beq.n	90010eee <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
90010e4e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90010e52:	ee07 2a90 	vmov	s15, r2
90010e56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90010e5a:	ee07 3a10 	vmov	s14, r3
90010e5e:	461f      	mov	r7, r3
90010e60:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90010e64:	eef4 6ae7 	vcmpe.f32	s13, s15
90010e68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010e6c:	f200 8095 	bhi.w	90010f9a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90010e70:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90010e74:	f640 71fc 	movw	r1, #4092	@ 0xffc
90010e78:	68ea      	ldr	r2, [r5, #12]
90010e7a:	f895 c010 	ldrb.w	ip, [r5, #16]
90010e7e:	ee37 7a87 	vadd.f32	s14, s15, s14
90010e82:	ee37 7a66 	vsub.f32	s14, s14, s13
90010e86:	ee06 6a90 	vmov	s13, r6
90010e8a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90010e8e:	eeb4 7ae6 	vcmpe.f32	s14, s13
90010e92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010e96:	bf4a      	itet	mi
90010e98:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
90010e9c:	9602      	strpl	r6, [sp, #8]
90010e9e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
90010ea2:	ed95 7a08 	vldr	s14, [r5, #32]
90010ea6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90010eaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010eae:	bfc8      	it	gt
90010eb0:	2100      	movgt	r1, #0
90010eb2:	5852      	ldr	r2, [r2, r1]
90010eb4:	9902      	ldr	r1, [sp, #8]
90010eb6:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90010eba:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90010ebe:	0950      	lsrs	r0, r2, #5
90010ec0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
90010ec4:	9103      	str	r1, [sp, #12]
90010ec6:	f3c2 01c4 	ubfx	r1, r2, #3, #5
90010eca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90010ece:	f1bc 0f00 	cmp.w	ip, #0
90010ed2:	d024      	beq.n	90010f1e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90010ed4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90010ed8:	d121      	bne.n	90010f1e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90010eda:	ea4b 0b00 	orr.w	fp, fp, r0
90010ede:	ea41 010b 	orr.w	r1, r1, fp
90010ee2:	9a03      	ldr	r2, [sp, #12]
90010ee4:	4294      	cmp	r4, r2
90010ee6:	d255      	bcs.n	90010f94 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90010ee8:	f824 1b02 	strh.w	r1, [r4], #2
90010eec:	e7f9      	b.n	90010ee2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
90010eee:	ee07 9a10 	vmov	s14, r9
90010ef2:	edd0 7a06 	vldr	s15, [r0, #24]
90010ef6:	edd0 6a05 	vldr	s13, [r0, #20]
90010efa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90010efe:	ee37 7a67 	vsub.f32	s14, s14, s15
90010f02:	eec7 7a26 	vdiv.f32	s15, s14, s13
90010f06:	ed90 7a08 	vldr	s14, [r0, #32]
90010f0a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90010f0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010f12:	bf44      	itt	mi
90010f14:	ed90 7a07 	vldrmi	s14, [r0, #28]
90010f18:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
90010f1c:	e79d      	b.n	90010e5a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
90010f1e:	0e12      	lsrs	r2, r2, #24
90010f20:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 900111a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90010f24:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90010f28:	fb02 f20a 	mul.w	r2, r2, sl
90010f2c:	f102 0c01 	add.w	ip, r2, #1
90010f30:	eb0c 2222 	add.w	r2, ip, r2, asr #8
90010f34:	1212      	asrs	r2, r2, #8
90010f36:	4350      	muls	r0, r2
90010f38:	4351      	muls	r1, r2
90010f3a:	fb02 fb0b 	mul.w	fp, r2, fp
90010f3e:	43d2      	mvns	r2, r2
90010f40:	9004      	str	r0, [sp, #16]
90010f42:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90010f46:	9105      	str	r1, [sp, #20]
90010f48:	9903      	ldr	r1, [sp, #12]
90010f4a:	428c      	cmp	r4, r1
90010f4c:	d222      	bcs.n	90010f94 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90010f4e:	8820      	ldrh	r0, [r4, #0]
90010f50:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
90010f54:	ea00 0c08 	and.w	ip, r0, r8
90010f58:	460f      	mov	r7, r1
90010f5a:	9904      	ldr	r1, [sp, #16]
90010f5c:	fb02 bc0c 	mla	ip, r2, ip, fp
90010f60:	fb02 1107 	mla	r1, r2, r7, r1
90010f64:	fb9c fcfe 	sdiv	ip, ip, lr
90010f68:	fb91 f1fe 	sdiv	r1, r1, lr
90010f6c:	ea0c 0c08 	and.w	ip, ip, r8
90010f70:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90010f74:	ea4c 0101 	orr.w	r1, ip, r1
90010f78:	f000 0c1f 	and.w	ip, r0, #31
90010f7c:	9805      	ldr	r0, [sp, #20]
90010f7e:	fb02 0c0c 	mla	ip, r2, ip, r0
90010f82:	fb9c fcfe 	sdiv	ip, ip, lr
90010f86:	f00c 0c1f 	and.w	ip, ip, #31
90010f8a:	ea41 010c 	orr.w	r1, r1, ip
90010f8e:	f824 1b02 	strh.w	r1, [r4], #2
90010f92:	e7d9      	b.n	90010f48 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
90010f94:	9a02      	ldr	r2, [sp, #8]
90010f96:	441a      	add	r2, r3
90010f98:	4617      	mov	r7, r2
90010f9a:	441e      	add	r6, r3
90010f9c:	b236      	sxth	r6, r6
90010f9e:	42be      	cmp	r6, r7
90010fa0:	f340 80f6 	ble.w	90011190 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90010fa4:	ed95 7a07 	vldr	s14, [r5, #28]
90010fa8:	ee06 7a90 	vmov	s13, r7
90010fac:	ee37 7a87 	vadd.f32	s14, s15, s14
90010fb0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90010fb4:	eeb4 7ae6 	vcmpe.f32	s14, s13
90010fb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010fbc:	f340 80b2 	ble.w	90011124 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
90010fc0:	ee06 6a10 	vmov	s12, r6
90010fc4:	ee76 7ae7 	vsub.f32	s15, s13, s15
90010fc8:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 9001119c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
90010fcc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90010fd0:	7c2b      	ldrb	r3, [r5, #16]
90010fd2:	eeb4 7ac6 	vcmpe.f32	s14, s12
90010fd6:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 900111a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
90010fda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010fde:	bfd6      	itet	le
90010fe0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
90010fe4:	46b0      	movgt	r8, r6
90010fe6:	ee17 8a10 	vmovle	r8, s14
90010fea:	ed95 7a08 	vldr	s14, [r5, #32]
90010fee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90010ff2:	eba8 0707 	sub.w	r7, r8, r7
90010ff6:	eb04 0747 	add.w	r7, r4, r7, lsl #1
90010ffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010ffe:	fe38 8a06 	vselgt.f32	s16, s16, s12
90011002:	eea7 8a27 	vfma.f32	s16, s14, s15
90011006:	b1db      	cbz	r3, 90011040 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90011008:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001100c:	d118      	bne.n	90011040 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
9001100e:	42bc      	cmp	r4, r7
90011010:	d262      	bcs.n	900110d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90011012:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011016:	68eb      	ldr	r3, [r5, #12]
90011018:	4649      	mov	r1, r9
9001101a:	ee17 0a90 	vmov	r0, s15
9001101e:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
90011022:	b2d3      	uxtb	r3, r2
90011024:	9300      	str	r3, [sp, #0]
90011026:	f3c2 2307 	ubfx	r3, r2, #8, #8
9001102a:	f3c2 4207 	ubfx	r2, r2, #16, #8
9001102e:	f7ff fe13 	bl	90010c58 <_ZN8touchgfxL10applyNoiseEiihhh>
90011032:	f824 0b02 	strh.w	r0, [r4], #2
90011036:	edd5 7a08 	vldr	s15, [r5, #32]
9001103a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001103e:	e7e6      	b.n	9001100e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90011040:	f8df b160 	ldr.w	fp, [pc, #352]	@ 900111a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011044:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90011048:	42bc      	cmp	r4, r7
9001104a:	d245      	bcs.n	900110d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
9001104c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011050:	68eb      	ldr	r3, [r5, #12]
90011052:	f8b4 e000 	ldrh.w	lr, [r4]
90011056:	ee17 2a90 	vmov	r2, s15
9001105a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001105e:	0e13      	lsrs	r3, r2, #24
90011060:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
90011064:	fb03 f30a 	mul.w	r3, r3, sl
90011068:	b289      	uxth	r1, r1
9001106a:	1c58      	adds	r0, r3, #1
9001106c:	eb00 2023 	add.w	r0, r0, r3, asr #8
90011070:	ea0e 030b 	and.w	r3, lr, fp
90011074:	1200      	asrs	r0, r0, #8
90011076:	ea6f 0c00 	mvn.w	ip, r0
9001107a:	fa5f fc8c 	uxtb.w	ip, ip
9001107e:	fb0c f303 	mul.w	r3, ip, r3
90011082:	fb00 3101 	mla	r1, r0, r1, r3
90011086:	fb91 f1f9 	sdiv	r1, r1, r9
9001108a:	ea01 030b 	and.w	r3, r1, fp
9001108e:	9302      	str	r3, [sp, #8]
90011090:	0953      	lsrs	r3, r2, #5
90011092:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90011096:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001109a:	4619      	mov	r1, r3
9001109c:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
900110a0:	f00e 0e1f 	and.w	lr, lr, #31
900110a4:	fb0c f303 	mul.w	r3, ip, r3
900110a8:	fb0c fc0e 	mul.w	ip, ip, lr
900110ac:	fb00 3301 	mla	r3, r0, r1, r3
900110b0:	9902      	ldr	r1, [sp, #8]
900110b2:	fb00 c002 	mla	r0, r0, r2, ip
900110b6:	fb93 f3f9 	sdiv	r3, r3, r9
900110ba:	fb90 f0f9 	sdiv	r0, r0, r9
900110be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900110c2:	f000 001f 	and.w	r0, r0, #31
900110c6:	4319      	orrs	r1, r3
900110c8:	4301      	orrs	r1, r0
900110ca:	f824 1b02 	strh.w	r1, [r4], #2
900110ce:	edd5 7a08 	vldr	s15, [r5, #32]
900110d2:	ee38 8a27 	vadd.f32	s16, s16, s15
900110d6:	e7b7      	b.n	90011048 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
900110d8:	4546      	cmp	r6, r8
900110da:	dd59      	ble.n	90011190 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900110dc:	edd5 7a08 	vldr	s15, [r5, #32]
900110e0:	f640 73fc 	movw	r3, #4092	@ 0xffc
900110e4:	68ea      	ldr	r2, [r5, #12]
900110e6:	eba6 0608 	sub.w	r6, r6, r8
900110ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900110ee:	7c29      	ldrb	r1, [r5, #16]
900110f0:	eb04 0646 	add.w	r6, r4, r6, lsl #1
900110f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900110f8:	bfd8      	it	le
900110fa:	2300      	movle	r3, #0
900110fc:	58d2      	ldr	r2, [r2, r3]
900110fe:	0a10      	lsrs	r0, r2, #8
90011100:	f3c2 07c4 	ubfx	r7, r2, #3, #5
90011104:	0953      	lsrs	r3, r2, #5
90011106:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9001110a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001110e:	b159      	cbz	r1, 90011128 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011110:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011114:	d108      	bne.n	90011128 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011116:	4318      	orrs	r0, r3
90011118:	4338      	orrs	r0, r7
9001111a:	42b4      	cmp	r4, r6
9001111c:	d238      	bcs.n	90011190 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001111e:	f824 0b02 	strh.w	r0, [r4], #2
90011122:	e7fa      	b.n	9001111a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90011124:	46b8      	mov	r8, r7
90011126:	e7d9      	b.n	900110dc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90011128:	0e12      	lsrs	r2, r2, #24
9001112a:	f8df c078 	ldr.w	ip, [pc, #120]	@ 900111a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001112e:	fb02 f10a 	mul.w	r1, r2, sl
90011132:	1c4a      	adds	r2, r1, #1
90011134:	eb02 2221 	add.w	r2, r2, r1, asr #8
90011138:	1212      	asrs	r2, r2, #8
9001113a:	fb02 f507 	mul.w	r5, r2, r7
9001113e:	27ff      	movs	r7, #255	@ 0xff
90011140:	4350      	muls	r0, r2
90011142:	4353      	muls	r3, r2
90011144:	43d2      	mvns	r2, r2
90011146:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001114a:	42b4      	cmp	r4, r6
9001114c:	d220      	bcs.n	90011190 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001114e:	f8b4 e000 	ldrh.w	lr, [r4]
90011152:	ea0e 010c 	and.w	r1, lr, ip
90011156:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
9001115a:	f00e 0e1f 	and.w	lr, lr, #31
9001115e:	fb02 0101 	mla	r1, r2, r1, r0
90011162:	fb02 3808 	mla	r8, r2, r8, r3
90011166:	fb02 5e0e 	mla	lr, r2, lr, r5
9001116a:	fb91 f1f7 	sdiv	r1, r1, r7
9001116e:	fb98 f8f7 	sdiv	r8, r8, r7
90011172:	fb9e fef7 	sdiv	lr, lr, r7
90011176:	ea01 010c 	and.w	r1, r1, ip
9001117a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001117e:	f00e 0e1f 	and.w	lr, lr, #31
90011182:	ea41 0108 	orr.w	r1, r1, r8
90011186:	ea41 010e 	orr.w	r1, r1, lr
9001118a:	f824 1b02 	strh.w	r1, [r4], #2
9001118e:	e7dc      	b.n	9001114a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90011190:	b007      	add	sp, #28
90011192:	ecbd 8b02 	vpop	{d8}
90011196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001119a:	bf00      	nop
9001119c:	00000000 	.word	0x00000000
900111a0:	447ffffe 	.word	0x447ffffe
900111a4:	fffff800 	.word	0xfffff800

900111a8 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
900111a8:	4770      	bx	lr

900111aa <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
900111aa:	4770      	bx	lr

900111ac <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
900111ac:	b510      	push	{r4, lr}
900111ae:	4604      	mov	r4, r0
900111b0:	2124      	movs	r1, #36	@ 0x24
900111b2:	f016 fd69 	bl	90027c88 <_ZdlPvj>
900111b6:	4620      	mov	r0, r4
900111b8:	bd10      	pop	{r4, pc}
	...

900111bc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900111bc:	094a      	lsrs	r2, r1, #5
900111be:	4b06      	ldr	r3, [pc, #24]	@ (900111d8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
900111c0:	60c1      	str	r1, [r0, #12]
900111c2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
900111c6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900111ca:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900111ce:	4313      	orrs	r3, r2
900111d0:	4319      	orrs	r1, r3
900111d2:	8201      	strh	r1, [r0, #16]
900111d4:	4770      	bx	lr
900111d6:	bf00      	nop
900111d8:	fffff800 	.word	0xfffff800

900111dc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900111dc:	f1a0 0008 	sub.w	r0, r0, #8
900111e0:	e7ec      	b.n	900111bc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
900111e2:	bf00      	nop

900111e4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
900111e4:	b508      	push	{r3, lr}
900111e6:	4b05      	ldr	r3, [pc, #20]	@ (900111fc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
900111e8:	6818      	ldr	r0, [r3, #0]
900111ea:	6803      	ldr	r3, [r0, #0]
900111ec:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
900111f0:	4798      	blx	r3
900111f2:	1e43      	subs	r3, r0, #1
900111f4:	4258      	negs	r0, r3
900111f6:	4158      	adcs	r0, r3
900111f8:	bd08      	pop	{r3, pc}
900111fa:	bf00      	nop
900111fc:	240218b4 	.word	0x240218b4

90011200 <_ZN8touchgfx13PainterRGB565D1Ev>:
90011200:	4770      	bx	lr

90011202 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90011202:	3808      	subs	r0, #8
90011204:	4770      	bx	lr

90011206 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90011206:	b430      	push	{r4, r5}
90011208:	eb01 0442 	add.w	r4, r1, r2, lsl #1
9001120c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90011210:	8a02      	ldrh	r2, [r0, #16]
90011212:	f89d 3010 	ldrb.w	r3, [sp, #16]
90011216:	4629      	mov	r1, r5
90011218:	9202      	str	r2, [sp, #8]
9001121a:	68c2      	ldr	r2, [r0, #12]
9001121c:	4620      	mov	r0, r4
9001121e:	bc30      	pop	{r4, r5}
90011220:	f7f1 bb90 	b.w	90002944 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90011224 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90011224:	f7f1 bb6a 	b.w	900028fc <_ZN8touchgfx5paint8tearDownEv>

90011228 <_ZN8touchgfx13PainterRGB565D0Ev>:
90011228:	b510      	push	{r4, lr}
9001122a:	4604      	mov	r4, r0
9001122c:	2114      	movs	r1, #20
9001122e:	f016 fd2b 	bl	90027c88 <_ZdlPvj>
90011232:	4620      	mov	r0, r4
90011234:	bd10      	pop	{r4, pc}

90011236 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90011236:	f1a0 0008 	sub.w	r0, r0, #8
9001123a:	e7f5      	b.n	90011228 <_ZN8touchgfx13PainterRGB565D0Ev>

9001123c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
9001123c:	2300      	movs	r3, #0
9001123e:	84c3      	strh	r3, [r0, #38]	@ 0x26
90011240:	8503      	strh	r3, [r0, #40]	@ 0x28
90011242:	8543      	strh	r3, [r0, #42]	@ 0x2a
90011244:	8583      	strh	r3, [r0, #44]	@ 0x2c
90011246:	6980      	ldr	r0, [r0, #24]
90011248:	b110      	cbz	r0, 90011250 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
9001124a:	6803      	ldr	r3, [r0, #0]
9001124c:	691b      	ldr	r3, [r3, #16]
9001124e:	4718      	bx	r3
90011250:	4770      	bx	lr

90011252 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90011252:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90011256:	4770      	bx	lr

90011258 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90011258:	b538      	push	{r3, r4, r5, lr}
9001125a:	0e0b      	lsrs	r3, r1, #24
9001125c:	4604      	mov	r4, r0
9001125e:	460d      	mov	r5, r1
90011260:	7783      	strb	r3, [r0, #30]
90011262:	6803      	ldr	r3, [r0, #0]
90011264:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011266:	4798      	blx	r3
90011268:	6803      	ldr	r3, [r0, #0]
9001126a:	4629      	mov	r1, r5
9001126c:	689b      	ldr	r3, [r3, #8]
9001126e:	4798      	blx	r3
90011270:	6823      	ldr	r3, [r4, #0]
90011272:	4620      	mov	r0, r4
90011274:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90011276:	4798      	blx	r3
90011278:	61a0      	str	r0, [r4, #24]
9001127a:	bd38      	pop	{r3, r4, r5, pc}

9001127c <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
9001127c:	7741      	strb	r1, [r0, #29]
9001127e:	4770      	bx	lr

90011280 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90011280:	b530      	push	{r4, r5, lr}
90011282:	460d      	mov	r5, r1
90011284:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90011288:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001128a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001128c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001128e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011290:	682b      	ldr	r3, [r5, #0]
90011292:	6023      	str	r3, [r4, #0]
90011294:	bd30      	pop	{r4, r5, pc}

90011296 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90011296:	b538      	push	{r3, r4, r5, lr}
90011298:	4604      	mov	r4, r0
9001129a:	1d03      	adds	r3, r0, #4
9001129c:	6808      	ldr	r0, [r1, #0]
9001129e:	2500      	movs	r5, #0
900112a0:	6849      	ldr	r1, [r1, #4]
900112a2:	c303      	stmia	r3!, {r0, r1}
900112a4:	6813      	ldr	r3, [r2, #0]
900112a6:	f104 0034 	add.w	r0, r4, #52	@ 0x34
900112aa:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
900112ae:	6853      	ldr	r3, [r2, #4]
900112b0:	61a5      	str	r5, [r4, #24]
900112b2:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
900112b6:	f005 fba7 	bl	90016a08 <_ZN8touchgfx9Matrix3x35resetEv>
900112ba:	23ff      	movs	r3, #255	@ 0xff
900112bc:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
900112c0:	7763      	strb	r3, [r4, #29]
900112c2:	77a3      	strb	r3, [r4, #30]
900112c4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
900112c8:	6323      	str	r3, [r4, #48]	@ 0x30
900112ca:	2301      	movs	r3, #1
900112cc:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
900112d0:	bd38      	pop	{r3, r4, r5, pc}
	...

900112d4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
900112d4:	ee70 7a41 	vsub.f32	s15, s0, s2
900112d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900112dc:	eef5 7a40 	vcmp.f32	s15, #0.0
900112e0:	4605      	mov	r5, r0
900112e2:	ed2d 8b0a 	vpush	{d8-d12}
900112e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900112ea:	b086      	sub	sp, #24
900112ec:	eeb0 ba40 	vmov.f32	s22, s0
900112f0:	6802      	ldr	r2, [r0, #0]
900112f2:	eef0 ba60 	vmov.f32	s23, s1
900112f6:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
900112fa:	eef0 aa41 	vmov.f32	s21, s2
900112fe:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
90011300:	eeb0 aa61 	vmov.f32	s20, s3
90011304:	eeb0 ca42 	vmov.f32	s24, s4
90011308:	eef0 ca62 	vmov.f32	s25, s5
9001130c:	d112      	bne.n	90011334 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
9001130e:	ee70 7ae1 	vsub.f32	s15, s1, s3
90011312:	eef5 7a40 	vcmp.f32	s15, #0.0
90011316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001131a:	d10b      	bne.n	90011334 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
9001131c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90011320:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90011322:	3901      	subs	r1, #1
90011324:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90011328:	b006      	add	sp, #24
9001132a:	ecbd 8b0a 	vpop	{d8-d12}
9001132e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90011332:	4710      	bx	r2
90011334:	23ff      	movs	r3, #255	@ 0xff
90011336:	4628      	mov	r0, r5
90011338:	f105 0834 	add.w	r8, r5, #52	@ 0x34
9001133c:	77ab      	strb	r3, [r5, #30]
9001133e:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90011340:	4798      	blx	r3
90011342:	eeb0 0a4b 	vmov.f32	s0, s22
90011346:	eef0 0a6b 	vmov.f32	s1, s23
9001134a:	4604      	mov	r4, r0
9001134c:	4640      	mov	r0, r8
9001134e:	f005 fc0a 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011352:	eef0 8a40 	vmov.f32	s17, s0
90011356:	ed8d 0a00 	vstr	s0, [sp]
9001135a:	eeb0 0a6a 	vmov.f32	s0, s21
9001135e:	eef0 9a60 	vmov.f32	s19, s1
90011362:	edcd 0a01 	vstr	s1, [sp, #4]
90011366:	4640      	mov	r0, r8
90011368:	eef0 0a4a 	vmov.f32	s1, s20
9001136c:	f005 fbfb 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011370:	eef4 8a40 	vcmp.f32	s17, s0
90011374:	eeb0 8a40 	vmov.f32	s16, s0
90011378:	ed8d 0a02 	vstr	s0, [sp, #8]
9001137c:	eeb0 9a60 	vmov.f32	s18, s1
90011380:	edcd 0a03 	vstr	s1, [sp, #12]
90011384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011388:	eef4 9a60 	vcmp.f32	s19, s1
9001138c:	bf0c      	ite	eq
9001138e:	2301      	moveq	r3, #1
90011390:	2300      	movne	r3, #0
90011392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011396:	eef4 8a40 	vcmp.f32	s17, s0
9001139a:	7463      	strb	r3, [r4, #17]
9001139c:	bf0c      	ite	eq
9001139e:	2301      	moveq	r3, #1
900113a0:	2300      	movne	r3, #0
900113a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900113a6:	74a3      	strb	r3, [r4, #18]
900113a8:	d024      	beq.n	900113f4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
900113aa:	eef4 9a60 	vcmp.f32	s19, s1
900113ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900113b2:	d01f      	beq.n	900113f4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
900113b4:	ee3a aa6b 	vsub.f32	s20, s20, s23
900113b8:	4640      	mov	r0, r8
900113ba:	ee7a aacb 	vsub.f32	s21, s21, s22
900113be:	eeb0 0a4b 	vmov.f32	s0, s22
900113c2:	eeca 7a2c 	vdiv.f32	s15, s20, s25
900113c6:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
900113ca:	eef0 0a6b 	vmov.f32	s1, s23
900113ce:	eea7 0acc 	vfms.f32	s0, s15, s24
900113d2:	eeec 0a87 	vfma.f32	s1, s25, s14
900113d6:	f005 fbc6 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900113da:	ed8d 0a04 	vstr	s0, [sp, #16]
900113de:	ee30 0a68 	vsub.f32	s0, s0, s17
900113e2:	eeb5 0a40 	vcmp.f32	s0, #0.0
900113e6:	edcd 0a05 	vstr	s1, [sp, #20]
900113ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900113ee:	d121      	bne.n	90011434 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x160>
900113f0:	2301      	movs	r3, #1
900113f2:	74a3      	strb	r3, [r4, #18]
900113f4:	7c63      	ldrb	r3, [r4, #17]
900113f6:	2b00      	cmp	r3, #0
900113f8:	d051      	beq.n	9001149e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ca>
900113fa:	ee39 7a69 	vsub.f32	s14, s18, s19
900113fe:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 900114f4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90011402:	eef4 9ac9 	vcmpe.f32	s19, s18
90011406:	eec6 7a87 	vdiv.f32	s15, s13, s14
9001140a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001140e:	edc4 7a08 	vstr	s15, [r4, #32]
90011412:	eefd 7ac9 	vcvt.s32.f32	s15, s18
90011416:	ee17 3a90 	vmov	r3, s15
9001141a:	eefd 7ae9 	vcvt.s32.f32	s15, s19
9001141e:	b21a      	sxth	r2, r3
90011420:	ee17 3a90 	vmov	r3, s15
90011424:	bf48      	it	mi
90011426:	8122      	strhmi	r2, [r4, #8]
90011428:	b21b      	sxth	r3, r3
9001142a:	bf56      	itet	pl
9001142c:	80e2      	strhpl	r2, [r4, #6]
9001142e:	80e3      	strhmi	r3, [r4, #6]
90011430:	8123      	strhpl	r3, [r4, #8]
90011432:	e02c      	b.n	9001148e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90011434:	ee70 0ae9 	vsub.f32	s1, s1, s19
90011438:	eec0 7a80 	vdiv.f32	s15, s1, s0
9001143c:	eef5 7a40 	vcmp.f32	s15, #0.0
90011440:	edc4 7a05 	vstr	s15, [r4, #20]
90011444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011448:	d102      	bne.n	90011450 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17c>
9001144a:	2301      	movs	r3, #1
9001144c:	7463      	strb	r3, [r4, #17]
9001144e:	e7d1      	b.n	900113f4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90011450:	eeb0 7a69 	vmov.f32	s14, s19
90011454:	ee39 9a69 	vsub.f32	s18, s18, s19
90011458:	ee38 8a68 	vsub.f32	s16, s16, s17
9001145c:	eea8 7ae7 	vfms.f32	s14, s17, s15
90011460:	ed84 7a06 	vstr	s14, [r4, #24]
90011464:	ee89 7a27 	vdiv.f32	s14, s18, s15
90011468:	ee38 8a47 	vsub.f32	s16, s16, s14
9001146c:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 900114f8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x224>
90011470:	eec7 7a08 	vdiv.f32	s15, s14, s16
90011474:	ed84 8a07 	vstr	s16, [r4, #28]
90011478:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
9001147c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011480:	edc4 7a08 	vstr	s15, [r4, #32]
90011484:	d503      	bpl.n	9001148e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90011486:	eeb1 8a48 	vneg.f32	s16, s16
9001148a:	ed84 8a07 	vstr	s16, [r4, #28]
9001148e:	60e7      	str	r7, [r4, #12]
90011490:	7426      	strb	r6, [r4, #16]
90011492:	61ac      	str	r4, [r5, #24]
90011494:	b006      	add	sp, #24
90011496:	ecbd 8b0a 	vpop	{d8-d12}
9001149a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001149e:	7ca3      	ldrb	r3, [r4, #18]
900114a0:	2b00      	cmp	r3, #0
900114a2:	d0f4      	beq.n	9001148e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
900114a4:	ee38 7a68 	vsub.f32	s14, s16, s17
900114a8:	eddf 6a12 	vldr	s13, [pc, #72]	@ 900114f4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
900114ac:	eef4 8ac8 	vcmpe.f32	s17, s16
900114b0:	eec6 7a87 	vdiv.f32	s15, s13, s14
900114b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900114b8:	edc4 7a08 	vstr	s15, [r4, #32]
900114bc:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900114c0:	ee17 3a90 	vmov	r3, s15
900114c4:	eefd 7ae8 	vcvt.s32.f32	s15, s17
900114c8:	b21a      	sxth	r2, r3
900114ca:	ee17 3a90 	vmov	r3, s15
900114ce:	bf48      	it	mi
900114d0:	8122      	strhmi	r2, [r4, #8]
900114d2:	b21b      	sxth	r3, r3
900114d4:	bf56      	itet	pl
900114d6:	80e2      	strhpl	r2, [r4, #6]
900114d8:	80e3      	strhmi	r3, [r4, #6]
900114da:	8123      	strhpl	r3, [r4, #8]
900114dc:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900114e0:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
900114e4:	1a9b      	subs	r3, r3, r2
900114e6:	ee07 3a90 	vmov	s15, r3
900114ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900114ee:	edc4 7a07 	vstr	s15, [r4, #28]
900114f2:	e7cc      	b.n	9001148e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
900114f4:	447ffffe 	.word	0x447ffffe
900114f8:	44800000 	.word	0x44800000

900114fc <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
900114fc:	b510      	push	{r4, lr}
900114fe:	ed2d 8b02 	vpush	{d8}
90011502:	eef0 8a62 	vmov.f32	s17, s5
90011506:	2100      	movs	r1, #0
90011508:	4604      	mov	r4, r0
9001150a:	eeb0 8a42 	vmov.f32	s16, s4
9001150e:	f016 f92d 	bl	9002776c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90011512:	eef0 7a68 	vmov.f32	s15, s17
90011516:	6823      	ldr	r3, [r4, #0]
90011518:	4620      	mov	r0, r4
9001151a:	689b      	ldr	r3, [r3, #8]
9001151c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011520:	ee17 2a90 	vmov	r2, s15
90011524:	eef0 7a48 	vmov.f32	s15, s16
90011528:	ecbd 8b02 	vpop	{d8}
9001152c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011534:	ee17 1a90 	vmov	r1, s15
90011538:	4718      	bx	r3

9001153a <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
9001153a:	b510      	push	{r4, lr}
9001153c:	ed2d 8b02 	vpush	{d8}
90011540:	eef0 8a63 	vmov.f32	s17, s7
90011544:	2100      	movs	r1, #0
90011546:	4604      	mov	r4, r0
90011548:	eeb0 8a43 	vmov.f32	s16, s6
9001154c:	f016 f9d0 	bl	900278f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90011550:	eef0 7a68 	vmov.f32	s15, s17
90011554:	6823      	ldr	r3, [r4, #0]
90011556:	4620      	mov	r0, r4
90011558:	689b      	ldr	r3, [r3, #8]
9001155a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001155e:	ee17 2a90 	vmov	r2, s15
90011562:	eef0 7a48 	vmov.f32	s15, s16
90011566:	ecbd 8b02 	vpop	{d8}
9001156a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001156e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011572:	ee17 1a90 	vmov	r1, s15
90011576:	4718      	bx	r3

90011578 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90011578:	b513      	push	{r0, r1, r4, lr}
9001157a:	4604      	mov	r4, r0
9001157c:	6f40      	ldr	r0, [r0, #116]	@ 0x74
9001157e:	f005 faf2 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011582:	eef0 7a60 	vmov.f32	s15, s1
90011586:	4620      	mov	r0, r4
90011588:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001158c:	ee17 2a90 	vmov	r2, s15
90011590:	eef0 7a40 	vmov.f32	s15, s0
90011594:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011598:	ee17 1a90 	vmov	r1, s15
9001159c:	b002      	add	sp, #8
9001159e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900115a2:	f016 b83d 	b.w	90027620 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
900115a6:	b513      	push	{r0, r1, r4, lr}
900115a8:	4604      	mov	r4, r0
900115aa:	6f40      	ldr	r0, [r0, #116]	@ 0x74
900115ac:	f005 fadb 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900115b0:	eef0 7a60 	vmov.f32	s15, s1
900115b4:	4620      	mov	r0, r4
900115b6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900115ba:	ee17 2a90 	vmov	r2, s15
900115be:	eef0 7a40 	vmov.f32	s15, s0
900115c2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900115c6:	ee17 1a90 	vmov	r1, s15
900115ca:	b002      	add	sp, #8
900115cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900115d0:	f016 b873 	b.w	900276ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

900115d4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
900115d4:	b5f0      	push	{r4, r5, r6, r7, lr}
900115d6:	2400      	movs	r4, #0
900115d8:	9f07      	ldr	r7, [sp, #28]
900115da:	f04f 0e01 	mov.w	lr, #1
900115de:	4626      	mov	r6, r4
900115e0:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
900115e4:	4463      	add	r3, ip
900115e6:	4563      	cmp	r3, ip
900115e8:	d02d      	beq.n	90011646 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
900115ea:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
900115ee:	2d06      	cmp	r5, #6
900115f0:	d8f9      	bhi.n	900115e6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900115f2:	fa0e f505 	lsl.w	r5, lr, r5
900115f6:	f015 0f66 	tst.w	r5, #102	@ 0x66
900115fa:	d10d      	bne.n	90011618 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
900115fc:	f015 0f10 	tst.w	r5, #16
90011600:	d117      	bne.n	90011632 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90011602:	072d      	lsls	r5, r5, #28
90011604:	d5ef      	bpl.n	900115e6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011606:	3801      	subs	r0, #1
90011608:	b91e      	cbnz	r6, 90011612 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
9001160a:	eb07 0580 	add.w	r5, r7, r0, lsl #2
9001160e:	682d      	ldr	r5, [r5, #0]
90011610:	600d      	str	r5, [r1, #0]
90011612:	b96c      	cbnz	r4, 90011630 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011614:	2601      	movs	r6, #1
90011616:	e7e6      	b.n	900115e6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011618:	b926      	cbnz	r6, 90011624 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
9001161a:	eb07 0380 	add.w	r3, r7, r0, lsl #2
9001161e:	f853 3c08 	ldr.w	r3, [r3, #-8]
90011622:	600b      	str	r3, [r1, #0]
90011624:	b924      	cbnz	r4, 90011630 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011626:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9001162a:	f850 3c04 	ldr.w	r3, [r0, #-4]
9001162e:	6013      	str	r3, [r2, #0]
90011630:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011632:	3801      	subs	r0, #1
90011634:	b91c      	cbnz	r4, 9001163e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90011636:	eb07 0480 	add.w	r4, r7, r0, lsl #2
9001163a:	6824      	ldr	r4, [r4, #0]
9001163c:	6014      	str	r4, [r2, #0]
9001163e:	2e00      	cmp	r6, #0
90011640:	d1f6      	bne.n	90011630 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011642:	2401      	movs	r4, #1
90011644:	e7cf      	b.n	900115e6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011646:	b90e      	cbnz	r6, 9001164c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90011648:	2300      	movs	r3, #0
9001164a:	600b      	str	r3, [r1, #0]
9001164c:	2c00      	cmp	r4, #0
9001164e:	d1ef      	bne.n	90011630 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011650:	2300      	movs	r3, #0
90011652:	e7ec      	b.n	9001162e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90011654 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90011654:	b538      	push	{r3, r4, r5, lr}
90011656:	ed2d 8b0a 	vpush	{d8-d12}
9001165a:	eef0 ba40 	vmov.f32	s23, s0
9001165e:	4604      	mov	r4, r0
90011660:	eeb0 ca60 	vmov.f32	s24, s1
90011664:	460d      	mov	r5, r1
90011666:	eef0 aa41 	vmov.f32	s21, s2
9001166a:	eeb0 ba61 	vmov.f32	s22, s3
9001166e:	eeb0 9a42 	vmov.f32	s18, s4
90011672:	eef0 9a62 	vmov.f32	s19, s5
90011676:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
9001167a:	ee7b 8a29 	vadd.f32	s17, s22, s19
9001167e:	ee3a 8a89 	vadd.f32	s16, s21, s18
90011682:	ee68 8a8a 	vmul.f32	s17, s17, s20
90011686:	ee28 8a0a 	vmul.f32	s16, s16, s20
9001168a:	ee3c 0a68 	vsub.f32	s0, s24, s17
9001168e:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90011692:	ee20 0a00 	vmul.f32	s0, s0, s0
90011696:	eea7 0aa7 	vfma.f32	s0, s15, s15
9001169a:	f016 fb1f 	bl	90027cdc <sqrtf>
9001169e:	eeb5 0a40 	vcmp.f32	s0, #0.0
900116a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900116a6:	d12e      	bne.n	90011706 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
900116a8:	ee79 7a6a 	vsub.f32	s15, s18, s21
900116ac:	ee39 7acb 	vsub.f32	s14, s19, s22
900116b0:	eeb0 8a6a 	vmov.f32	s16, s21
900116b4:	eef0 8a4b 	vmov.f32	s17, s22
900116b8:	eea7 8a8a 	vfma.f32	s16, s15, s20
900116bc:	eee7 8a0a 	vfma.f32	s17, s14, s20
900116c0:	eea7 8a0a 	vfma.f32	s16, s14, s20
900116c4:	eee7 8aca 	vfms.f32	s17, s15, s20
900116c8:	2d02      	cmp	r5, #2
900116ca:	dc2f      	bgt.n	9001172c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
900116cc:	3501      	adds	r5, #1
900116ce:	eef0 1a4b 	vmov.f32	s3, s22
900116d2:	eeb0 1a6a 	vmov.f32	s2, s21
900116d6:	4620      	mov	r0, r4
900116d8:	4629      	mov	r1, r5
900116da:	eef0 2a68 	vmov.f32	s5, s17
900116de:	eeb0 2a48 	vmov.f32	s4, s16
900116e2:	eef0 0a4c 	vmov.f32	s1, s24
900116e6:	eeb0 0a6b 	vmov.f32	s0, s23
900116ea:	f7ff ffb3 	bl	90011654 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900116ee:	eef0 0a68 	vmov.f32	s1, s17
900116f2:	eeb0 0a48 	vmov.f32	s0, s16
900116f6:	4620      	mov	r0, r4
900116f8:	f7ff ff55 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900116fc:	eeb0 ba68 	vmov.f32	s22, s17
90011700:	eef0 aa48 	vmov.f32	s21, s16
90011704:	e7b9      	b.n	9001167a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90011706:	ee38 8a6b 	vsub.f32	s16, s16, s23
9001170a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
9001170e:	ee78 8acc 	vsub.f32	s17, s17, s24
90011712:	ee28 7a27 	vmul.f32	s14, s16, s15
90011716:	ee68 7aa7 	vmul.f32	s15, s17, s15
9001171a:	ee87 8a00 	vdiv.f32	s16, s14, s0
9001171e:	eec7 8a80 	vdiv.f32	s17, s15, s0
90011722:	ee3b 8a88 	vadd.f32	s16, s23, s16
90011726:	ee7c 8a28 	vadd.f32	s17, s24, s17
9001172a:	e7cd      	b.n	900116c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
9001172c:	eef0 0a68 	vmov.f32	s1, s17
90011730:	4620      	mov	r0, r4
90011732:	eeb0 0a48 	vmov.f32	s0, s16
90011736:	f7ff ff36 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001173a:	ecbd 8b0a 	vpop	{d8-d12}
9001173e:	bd38      	pop	{r3, r4, r5, pc}

90011740 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90011740:	b510      	push	{r4, lr}
90011742:	ed2d 8b0a 	vpush	{d8-d12}
90011746:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
9001174a:	4604      	mov	r4, r0
9001174c:	eeb0 ca40 	vmov.f32	s24, s0
90011750:	2b02      	cmp	r3, #2
90011752:	eeb0 9a60 	vmov.f32	s18, s1
90011756:	eef0 9a41 	vmov.f32	s19, s2
9001175a:	eef0 8a61 	vmov.f32	s17, s3
9001175e:	eeb0 ba42 	vmov.f32	s22, s4
90011762:	eef0 ba62 	vmov.f32	s23, s5
90011766:	eeb0 aa43 	vmov.f32	s20, s6
9001176a:	eef0 aa63 	vmov.f32	s21, s7
9001176e:	eeb0 8a44 	vmov.f32	s16, s8
90011772:	eef0 ca64 	vmov.f32	s25, s9
90011776:	d12c      	bne.n	900117d2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90011778:	eef0 0a62 	vmov.f32	s1, s5
9001177c:	eeb0 0a42 	vmov.f32	s0, s4
90011780:	f7ff ff11 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011784:	ee79 9acb 	vsub.f32	s19, s19, s22
90011788:	ee7a caec 	vsub.f32	s25, s21, s25
9001178c:	ee78 8aeb 	vsub.f32	s17, s17, s23
90011790:	ee3a 8a48 	vsub.f32	s16, s20, s16
90011794:	ee69 9aac 	vmul.f32	s19, s19, s25
90011798:	ee28 8a88 	vmul.f32	s16, s17, s16
9001179c:	eef4 9ac8 	vcmpe.f32	s19, s16
900117a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900117a4:	db0f      	blt.n	900117c6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
900117a6:	2101      	movs	r1, #1
900117a8:	eef0 2a6a 	vmov.f32	s5, s21
900117ac:	eeb0 2a4a 	vmov.f32	s4, s20
900117b0:	4620      	mov	r0, r4
900117b2:	eef0 1a6b 	vmov.f32	s3, s23
900117b6:	eeb0 1a4b 	vmov.f32	s2, s22
900117ba:	eef0 0a49 	vmov.f32	s1, s18
900117be:	eeb0 0a4c 	vmov.f32	s0, s24
900117c2:	f7ff ff47 	bl	90011654 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900117c6:	eef0 0a6a 	vmov.f32	s1, s21
900117ca:	4620      	mov	r0, r4
900117cc:	eeb0 0a4a 	vmov.f32	s0, s20
900117d0:	e035      	b.n	9001183e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
900117d2:	2b01      	cmp	r3, #1
900117d4:	d138      	bne.n	90011848 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900117d6:	ee31 4ae2 	vsub.f32	s8, s3, s5
900117da:	ee33 6a48 	vsub.f32	s12, s6, s16
900117de:	ee71 7a42 	vsub.f32	s15, s2, s4
900117e2:	ee73 6ae4 	vsub.f32	s13, s7, s9
900117e6:	ee26 7a44 	vnmul.f32	s14, s12, s8
900117ea:	eea7 7aa6 	vfma.f32	s14, s15, s13
900117ee:	eeb5 7a40 	vcmp.f32	s14, #0.0
900117f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900117f6:	d027      	beq.n	90011848 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900117f8:	ee28 8a63 	vnmul.f32	s16, s16, s7
900117fc:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90011800:	eea4 8a83 	vfma.f32	s16, s9, s6
90011804:	eee1 8a22 	vfma.f32	s17, s2, s5
90011808:	ee68 7a67 	vnmul.f32	s15, s16, s15
9001180c:	ee28 8a44 	vnmul.f32	s16, s16, s8
90011810:	eee6 7a28 	vfma.f32	s15, s12, s17
90011814:	eea6 8aa8 	vfma.f32	s16, s13, s17
90011818:	ee87 0a87 	vdiv.f32	s0, s15, s14
9001181c:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90011820:	eec8 0a07 	vdiv.f32	s1, s16, s14
90011824:	ee3c ca40 	vsub.f32	s24, s24, s0
90011828:	ee39 9a60 	vsub.f32	s18, s18, s1
9001182c:	ee29 9a09 	vmul.f32	s18, s18, s18
90011830:	eeac 9a0c 	vfma.f32	s18, s24, s24
90011834:	eef4 7ac9 	vcmpe.f32	s15, s18
90011838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001183c:	db04      	blt.n	90011848 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
9001183e:	f7ff feb2 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011842:	ecbd 8b0a 	vpop	{d8-d12}
90011846:	bd10      	pop	{r4, pc}
90011848:	eef0 0a6b 	vmov.f32	s1, s23
9001184c:	4620      	mov	r0, r4
9001184e:	eeb0 0a4b 	vmov.f32	s0, s22
90011852:	f7ff fea8 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011856:	e7b6      	b.n	900117c6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90011858 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90011858:	b510      	push	{r4, lr}
9001185a:	ed2d 8b0c 	vpush	{d8-d13}
9001185e:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
90011862:	4604      	mov	r4, r0
90011864:	eeb0 9a40 	vmov.f32	s18, s0
90011868:	eef0 9a60 	vmov.f32	s19, s1
9001186c:	eef0 aa41 	vmov.f32	s21, s2
90011870:	eeb0 ba61 	vmov.f32	s22, s3
90011874:	b933      	cbnz	r3, 90011884 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90011876:	f7ff fe96 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001187a:	eef0 0a4b 	vmov.f32	s1, s22
9001187e:	eeb0 0a6a 	vmov.f32	s0, s21
90011882:	e015      	b.n	900118b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90011884:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90011888:	2b02      	cmp	r3, #2
9001188a:	ee71 8a40 	vsub.f32	s17, s2, s0
9001188e:	ee31 8ae0 	vsub.f32	s16, s3, s1
90011892:	ee68 8aa7 	vmul.f32	s17, s17, s15
90011896:	ee28 8a27 	vmul.f32	s16, s16, s15
9001189a:	d10f      	bne.n	900118bc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
9001189c:	ee70 0ae8 	vsub.f32	s1, s1, s17
900118a0:	ee30 0a08 	vadd.f32	s0, s0, s16
900118a4:	f7ff fe7f 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900118a8:	ee7b 0a68 	vsub.f32	s1, s22, s17
900118ac:	ee3a 0a88 	vadd.f32	s0, s21, s16
900118b0:	4620      	mov	r0, r4
900118b2:	f7ff fe78 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900118b6:	ecbd 8b0c 	vpop	{d8-d13}
900118ba:	bd10      	pop	{r4, pc}
900118bc:	f7ff fe73 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900118c0:	eef0 0a69 	vmov.f32	s1, s19
900118c4:	eeb0 0a49 	vmov.f32	s0, s18
900118c8:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 900119f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
900118cc:	eeb1 aa68 	vneg.f32	s20, s17
900118d0:	eddf ba4a 	vldr	s23, [pc, #296]	@ 900119fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
900118d4:	eee8 0a27 	vfma.f32	s1, s16, s15
900118d8:	4620      	mov	r0, r4
900118da:	eea8 0aa7 	vfma.f32	s0, s17, s15
900118de:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90011a00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
900118e2:	eddf ca48 	vldr	s25, [pc, #288]	@ 90011a04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
900118e6:	ed9f da48 	vldr	s26, [pc, #288]	@ 90011a08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
900118ea:	eeea 0a2b 	vfma.f32	s1, s20, s23
900118ee:	eea8 0a2b 	vfma.f32	s0, s16, s23
900118f2:	f7ff fe58 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900118f6:	eef0 0a69 	vmov.f32	s1, s19
900118fa:	eeb0 0a49 	vmov.f32	s0, s18
900118fe:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90011a0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
90011902:	4620      	mov	r0, r4
90011904:	eee8 0a27 	vfma.f32	s1, s16, s15
90011908:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001190c:	eeea 0a0c 	vfma.f32	s1, s20, s24
90011910:	eea8 0a0c 	vfma.f32	s0, s16, s24
90011914:	f7ff fe47 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011918:	eef0 0a69 	vmov.f32	s1, s19
9001191c:	eeb0 0a49 	vmov.f32	s0, s18
90011920:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90011a10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90011924:	4620      	mov	r0, r4
90011926:	eee8 0a27 	vfma.f32	s1, s16, s15
9001192a:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001192e:	eeea 0a2c 	vfma.f32	s1, s20, s25
90011932:	eea8 0a2c 	vfma.f32	s0, s16, s25
90011936:	f7ff fe36 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001193a:	eef0 0a69 	vmov.f32	s1, s19
9001193e:	eeb0 0a49 	vmov.f32	s0, s18
90011942:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90011a14 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90011946:	4620      	mov	r0, r4
90011948:	eee8 0a27 	vfma.f32	s1, s16, s15
9001194c:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011950:	eeea 0a0d 	vfma.f32	s1, s20, s26
90011954:	eea8 0a0d 	vfma.f32	s0, s16, s26
90011958:	f7ff fe25 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001195c:	ee79 0a88 	vadd.f32	s1, s19, s16
90011960:	ee39 0a28 	vadd.f32	s0, s18, s17
90011964:	4620      	mov	r0, r4
90011966:	ee70 0ae8 	vsub.f32	s1, s1, s17
9001196a:	ee30 0a08 	vadd.f32	s0, s0, s16
9001196e:	f7ff fe1a 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011972:	eef0 0a69 	vmov.f32	s1, s19
90011976:	eeb0 0a49 	vmov.f32	s0, s18
9001197a:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90011a18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
9001197e:	4620      	mov	r0, r4
90011980:	eee8 0a27 	vfma.f32	s1, s16, s15
90011984:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011988:	eeea 0a0d 	vfma.f32	s1, s20, s26
9001198c:	eea8 0a0d 	vfma.f32	s0, s16, s26
90011990:	f7ff fe09 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011994:	eef0 0a69 	vmov.f32	s1, s19
90011998:	eeb0 0a49 	vmov.f32	s0, s18
9001199c:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90011a1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
900119a0:	4620      	mov	r0, r4
900119a2:	eee8 0a27 	vfma.f32	s1, s16, s15
900119a6:	eea8 0aa7 	vfma.f32	s0, s17, s15
900119aa:	eeea 0a2c 	vfma.f32	s1, s20, s25
900119ae:	eea8 0a2c 	vfma.f32	s0, s16, s25
900119b2:	f7ff fdf8 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900119b6:	eef0 0a69 	vmov.f32	s1, s19
900119ba:	eeb0 0a49 	vmov.f32	s0, s18
900119be:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90011a20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
900119c2:	4620      	mov	r0, r4
900119c4:	eee8 0a27 	vfma.f32	s1, s16, s15
900119c8:	eea8 0aa7 	vfma.f32	s0, s17, s15
900119cc:	eeea 0a0c 	vfma.f32	s1, s20, s24
900119d0:	eea8 0a0c 	vfma.f32	s0, s16, s24
900119d4:	f7ff fde7 	bl	900115a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900119d8:	eef0 0a69 	vmov.f32	s1, s19
900119dc:	eeb0 0a49 	vmov.f32	s0, s18
900119e0:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90011a24 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
900119e4:	4620      	mov	r0, r4
900119e6:	eee8 0a27 	vfma.f32	s1, s16, s15
900119ea:	eea8 0aa7 	vfma.f32	s0, s17, s15
900119ee:	eeea 0a2b 	vfma.f32	s1, s20, s23
900119f2:	eea8 0a2b 	vfma.f32	s0, s16, s23
900119f6:	e73e      	b.n	90011876 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
900119f8:	3d23d70a 	.word	0x3d23d70a
900119fc:	3e8f5c29 	.word	0x3e8f5c29
90011a00:	3f19999a 	.word	0x3f19999a
90011a04:	3f4ccccd 	.word	0x3f4ccccd
90011a08:	3f75c28f 	.word	0x3f75c28f
90011a0c:	3e4ccccd 	.word	0x3e4ccccd
90011a10:	3ecccccd 	.word	0x3ecccccd
90011a14:	3f3851ec 	.word	0x3f3851ec
90011a18:	3fa3d70a 	.word	0x3fa3d70a
90011a1c:	3fcccccd 	.word	0x3fcccccd
90011a20:	3fe66666 	.word	0x3fe66666
90011a24:	3ffae148 	.word	0x3ffae148

90011a28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90011a28:	b570      	push	{r4, r5, r6, lr}
90011a2a:	ed2d 8b06 	vpush	{d8-d10}
90011a2e:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90011a32:	eef0 aa40 	vmov.f32	s21, s0
90011a36:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90011a3a:	4604      	mov	r4, r0
90011a3c:	ee30 8ac8 	vsub.f32	s16, s1, s16
90011a40:	ee30 9a49 	vsub.f32	s18, s0, s18
90011a44:	eeb0 aa60 	vmov.f32	s20, s1
90011a48:	ee28 0a08 	vmul.f32	s0, s16, s16
90011a4c:	eea9 0a09 	vfma.f32	s0, s18, s18
90011a50:	f016 f944 	bl	90027cdc <sqrtf>
90011a54:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90011a58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a5c:	dd36      	ble.n	90011acc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90011a5e:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90011a62:	2600      	movs	r6, #0
90011a64:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90011a68:	eec0 6a27 	vdiv.f32	s13, s0, s15
90011a6c:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90011a70:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90011a74:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90011a78:	eec8 8a26 	vdiv.f32	s17, s16, s13
90011a7c:	ee89 8a26 	vdiv.f32	s16, s18, s13
90011a80:	ee70 9a28 	vadd.f32	s19, s0, s17
90011a84:	ee78 8aaa 	vadd.f32	s17, s17, s21
90011a88:	ee30 9ac8 	vsub.f32	s18, s1, s16
90011a8c:	ee3a 8a48 	vsub.f32	s16, s20, s16
90011a90:	b1fd      	cbz	r5, 90011ad2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
90011a92:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90011a96:	eef0 0a49 	vmov.f32	s1, s18
90011a9a:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
90011a9e:	eeb0 0a69 	vmov.f32	s0, s19
90011aa2:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
90011aa6:	4620      	mov	r0, r4
90011aa8:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
90011aac:	f7ff fd64 	bl	90011578 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90011ab0:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
90011ab4:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
90011ab8:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
90011abc:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
90011ac0:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
90011ac4:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
90011ac8:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
90011acc:	ecbd 8b06 	vpop	{d8-d10}
90011ad0:	bd70      	pop	{r4, r5, r6, pc}
90011ad2:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
90011ad6:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90011ada:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90011ade:	b16b      	cbz	r3, 90011afc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
90011ae0:	eef0 1a49 	vmov.f32	s3, s18
90011ae4:	4620      	mov	r0, r4
90011ae6:	eeb0 1a69 	vmov.f32	s2, s19
90011aea:	eef0 0a62 	vmov.f32	s1, s5
90011aee:	eeb0 0a42 	vmov.f32	s0, s4
90011af2:	f7ff feb1 	bl	90011858 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90011af6:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
90011afa:	e7db      	b.n	90011ab4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90011afc:	eef0 4a48 	vmov.f32	s9, s16
90011b00:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90011b04:	eeb0 4a68 	vmov.f32	s8, s17
90011b08:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90011b0c:	eef0 3a49 	vmov.f32	s7, s18
90011b10:	4620      	mov	r0, r4
90011b12:	eeb0 3a69 	vmov.f32	s6, s19
90011b16:	f7ff fe13 	bl	90011740 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90011b1a:	e7cb      	b.n	90011ab4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90011b1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90011b1c:	ee07 2a90 	vmov	s15, r2
90011b20:	ee07 1a10 	vmov	s14, r1
90011b24:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90011b28:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90011b3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90011b2c:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90011b30:	ee60 0aa7 	vmul.f32	s1, s1, s15
90011b34:	ee20 0a27 	vmul.f32	s0, s0, s15
90011b38:	f7ff bf76 	b.w	90011a28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90011b3c:	3d000000 	.word	0x3d000000

90011b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90011b40:	b538      	push	{r3, r4, r5, lr}
90011b42:	ed2d 8b02 	vpush	{d8}
90011b46:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90011b4a:	4604      	mov	r4, r0
90011b4c:	b31d      	cbz	r5, 90011b96 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90011b4e:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
90011b52:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90011b56:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90011b5a:	ee78 8a67 	vsub.f32	s17, s16, s15
90011b5e:	ee38 8a27 	vadd.f32	s16, s16, s15
90011b62:	eef0 0a68 	vmov.f32	s1, s17
90011b66:	f7ff fd07 	bl	90011578 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90011b6a:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90011b6e:	eef0 1a48 	vmov.f32	s3, s16
90011b72:	4620      	mov	r0, r4
90011b74:	eeb0 0a41 	vmov.f32	s0, s2
90011b78:	eef0 0a68 	vmov.f32	s1, s17
90011b7c:	f7ff fe6c 	bl	90011858 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90011b80:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90011b84:	eef0 1a68 	vmov.f32	s3, s17
90011b88:	4620      	mov	r0, r4
90011b8a:	eef0 0a48 	vmov.f32	s1, s16
90011b8e:	eeb0 0a41 	vmov.f32	s0, s2
90011b92:	f7ff fe61 	bl	90011858 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90011b96:	4628      	mov	r0, r5
90011b98:	ecbd 8b02 	vpop	{d8}
90011b9c:	bd38      	pop	{r3, r4, r5, pc}

90011b9e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
90011b9e:	b510      	push	{r4, lr}
90011ba0:	ed2d 8b02 	vpush	{d8}
90011ba4:	4604      	mov	r4, r0
90011ba6:	eeb0 8a40 	vmov.f32	s16, s0
90011baa:	eef0 8a60 	vmov.f32	s17, s1
90011bae:	f7ff ffc7 	bl	90011b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90011bb2:	b9d0      	cbnz	r0, 90011bea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
90011bb4:	4620      	mov	r0, r4
90011bb6:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
90011bba:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
90011bbe:	eef0 0a68 	vmov.f32	s1, s17
90011bc2:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
90011bc6:	eeb0 0a48 	vmov.f32	s0, s16
90011bca:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
90011bce:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90011bd2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90011bd6:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90011bda:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90011bde:	f7ff fdaf 	bl	90011740 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90011be2:	2001      	movs	r0, #1
90011be4:	ecbd 8b02 	vpop	{d8}
90011be8:	bd10      	pop	{r4, pc}
90011bea:	2000      	movs	r0, #0
90011bec:	e7fa      	b.n	90011be4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

90011bee <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
90011bee:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
90011bf2:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
90011bf6:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
90011bfa:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
90011bfe:	f7ff be2b 	b.w	90011858 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90011c04 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90011c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011c08:	b089      	sub	sp, #36	@ 0x24
90011c0a:	461c      	mov	r4, r3
90011c0c:	4682      	mov	sl, r0
90011c0e:	4615      	mov	r5, r2
90011c10:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90011c14:	f10d 0820 	add.w	r8, sp, #32
90011c18:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90011c1a:	9304      	str	r3, [sp, #16]
90011c1c:	2300      	movs	r3, #0
90011c1e:	9105      	str	r1, [sp, #20]
90011c20:	9306      	str	r3, [sp, #24]
90011c22:	f848 3d04 	str.w	r3, [r8, #-4]!
90011c26:	9b04      	ldr	r3, [sp, #16]
90011c28:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90011c2c:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
90011c30:	9b05      	ldr	r3, [sp, #20]
90011c32:	429d      	cmp	r5, r3
90011c34:	d96d      	bls.n	90011d12 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90011c36:	3d01      	subs	r5, #1
90011c38:	f819 3005 	ldrb.w	r3, [r9, r5]
90011c3c:	2b06      	cmp	r3, #6
90011c3e:	d8f7      	bhi.n	90011c30 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90011c40:	a201      	add	r2, pc, #4	@ (adr r2, 90011c48 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
90011c42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90011c46:	bf00      	nop
90011c48:	90011c67 	.word	0x90011c67
90011c4c:	90011c31 	.word	0x90011c31
90011c50:	90011c65 	.word	0x90011c65
90011c54:	90011c89 	.word	0x90011c89
90011c58:	90011c89 	.word	0x90011c89
90011c5c:	90011c8d 	.word	0x90011c8d
90011c60:	90011ccd 	.word	0x90011ccd
90011c64:	3c02      	subs	r4, #2
90011c66:	4650      	mov	r0, sl
90011c68:	9400      	str	r4, [sp, #0]
90011c6a:	462b      	mov	r3, r5
90011c6c:	4642      	mov	r2, r8
90011c6e:	a906      	add	r1, sp, #24
90011c70:	e9cd 9701 	strd	r9, r7, [sp, #4]
90011c74:	f7ff fcae 	bl	900115d4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90011c78:	eddd 0a07 	vldr	s1, [sp, #28]
90011c7c:	ed9d 0a06 	vldr	s0, [sp, #24]
90011c80:	4630      	mov	r0, r6
90011c82:	f7ff fed1 	bl	90011a28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90011c86:	e7d3      	b.n	90011c30 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90011c88:	3c01      	subs	r4, #1
90011c8a:	e7ec      	b.n	90011c66 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90011c8c:	f1a4 0b04 	sub.w	fp, r4, #4
90011c90:	3c02      	subs	r4, #2
90011c92:	4650      	mov	r0, sl
90011c94:	462b      	mov	r3, r5
90011c96:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90011c9a:	f8cd b000 	str.w	fp, [sp]
90011c9e:	4642      	mov	r2, r8
90011ca0:	a906      	add	r1, sp, #24
90011ca2:	e9cd 9701 	strd	r9, r7, [sp, #4]
90011ca6:	f7ff fc95 	bl	900115d4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90011caa:	eddd 2a07 	vldr	s5, [sp, #28]
90011cae:	ed9d 2a06 	vldr	s4, [sp, #24]
90011cb2:	4630      	mov	r0, r6
90011cb4:	ed54 1a01 	vldr	s3, [r4, #-4]
90011cb8:	ed14 1a02 	vldr	s2, [r4, #-8]
90011cbc:	edd4 0a01 	vldr	s1, [r4, #4]
90011cc0:	ed94 0a00 	vldr	s0, [r4]
90011cc4:	f7ff fc1a 	bl	900114fc <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90011cc8:	465c      	mov	r4, fp
90011cca:	e7b1      	b.n	90011c30 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90011ccc:	f1a4 0b06 	sub.w	fp, r4, #6
90011cd0:	3c02      	subs	r4, #2
90011cd2:	4650      	mov	r0, sl
90011cd4:	462b      	mov	r3, r5
90011cd6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90011cda:	f8cd b000 	str.w	fp, [sp]
90011cde:	4642      	mov	r2, r8
90011ce0:	a906      	add	r1, sp, #24
90011ce2:	e9cd 9701 	strd	r9, r7, [sp, #4]
90011ce6:	f7ff fc75 	bl	900115d4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90011cea:	eddd 3a07 	vldr	s7, [sp, #28]
90011cee:	ed9d 3a06 	vldr	s6, [sp, #24]
90011cf2:	4630      	mov	r0, r6
90011cf4:	ed54 2a03 	vldr	s5, [r4, #-12]
90011cf8:	ed14 2a04 	vldr	s4, [r4, #-16]
90011cfc:	ed54 1a01 	vldr	s3, [r4, #-4]
90011d00:	ed14 1a02 	vldr	s2, [r4, #-8]
90011d04:	edd4 0a01 	vldr	s1, [r4, #4]
90011d08:	ed94 0a00 	vldr	s0, [r4]
90011d0c:	f7ff fc15 	bl	9001153a <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90011d10:	e7da      	b.n	90011cc8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
90011d12:	9b04      	ldr	r3, [sp, #16]
90011d14:	b113      	cbz	r3, 90011d1c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
90011d16:	4630      	mov	r0, r6
90011d18:	f7ff ff69 	bl	90011bee <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90011d1c:	b009      	add	sp, #36	@ 0x24
90011d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011d22:	bf00      	nop

90011d24 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90011d24:	eef0 7a60 	vmov.f32	s15, s1
90011d28:	6803      	ldr	r3, [r0, #0]
90011d2a:	689b      	ldr	r3, [r3, #8]
90011d2c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011d30:	ee17 2a90 	vmov	r2, s15
90011d34:	eef0 7a40 	vmov.f32	s15, s0
90011d38:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011d3c:	ee17 1a90 	vmov	r1, s15
90011d40:	4718      	bx	r3
	...

90011d44 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90011d44:	4b04      	ldr	r3, [pc, #16]	@ (90011d58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
90011d46:	b510      	push	{r4, lr}
90011d48:	4604      	mov	r4, r0
90011d4a:	f840 3b14 	str.w	r3, [r0], #20
90011d4e:	f000 ff6d 	bl	90012c2c <_ZN8touchgfx7OutlineD1Ev>
90011d52:	4620      	mov	r0, r4
90011d54:	bd10      	pop	{r4, pc}
90011d56:	bf00      	nop
90011d58:	9002c6e8 	.word	0x9002c6e8

90011d5c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90011d5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011d60:	ed2d 8b04 	vpush	{d8-d9}
90011d64:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90011d68:	b0b5      	sub	sp, #212	@ 0xd4
90011d6a:	4605      	mov	r5, r0
90011d6c:	468b      	mov	fp, r1
90011d6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90011d72:	9206      	str	r2, [sp, #24]
90011d74:	461e      	mov	r6, r3
90011d76:	2400      	movs	r4, #0
90011d78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011d7c:	f240 814f 	bls.w	9001201e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
90011d80:	23ff      	movs	r3, #255	@ 0xff
90011d82:	1d02      	adds	r2, r0, #4
90011d84:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90012024 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90011d88:	f04f 0800 	mov.w	r8, #0
90011d8c:	9300      	str	r3, [sp, #0]
90011d8e:	af08      	add	r7, sp, #32
90011d90:	6981      	ldr	r1, [r0, #24]
90011d92:	a808      	add	r0, sp, #32
90011d94:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
90011d96:	eef0 9a49 	vmov.f32	s19, s18
90011d9a:	f015 faf5 	bl	90027388 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90011d9e:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
90011da2:	4ba1      	ldr	r3, [pc, #644]	@ (90012028 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
90011da4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90011da8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90011dac:	2201      	movs	r2, #1
90011dae:	9308      	str	r3, [sp, #32]
90011db0:	f105 0334 	add.w	r3, r5, #52	@ 0x34
90011db4:	edd5 6a08 	vldr	s13, [r5, #32]
90011db8:	eeb0 8a49 	vmov.f32	s16, s18
90011dbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011dc0:	9325      	str	r3, [sp, #148]	@ 0x94
90011dc2:	f04f 0300 	mov.w	r3, #0
90011dc6:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
90011dca:	7f6a      	ldrb	r2, [r5, #29]
90011dcc:	eef0 8a49 	vmov.f32	s17, s18
90011dd0:	bf48      	it	mi
90011dd2:	eef1 7a67 	vnegmi.f32	s15, s15
90011dd6:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
90011dda:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
90011dde:	46c1      	mov	r9, r8
90011de0:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
90011de4:	f04f 0a01 	mov.w	sl, #1
90011de8:	ee67 7a87 	vmul.f32	s15, s15, s14
90011dec:	7fab      	ldrb	r3, [r5, #30]
90011dee:	942a      	str	r4, [sp, #168]	@ 0xa8
90011df0:	435a      	muls	r2, r3
90011df2:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
90011df6:	ee26 7aa7 	vmul.f32	s14, s13, s15
90011dfa:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
90011dfe:	1c53      	adds	r3, r2, #1
90011e00:	942b      	str	r4, [sp, #172]	@ 0xac
90011e02:	942c      	str	r4, [sp, #176]	@ 0xb0
90011e04:	ee27 7a26 	vmul.f32	s14, s14, s13
90011e08:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90011e0c:	942d      	str	r4, [sp, #180]	@ 0xb4
90011e0e:	942e      	str	r4, [sp, #184]	@ 0xb8
90011e10:	f3c3 2307 	ubfx	r3, r3, #8, #8
90011e14:	ee67 7a27 	vmul.f32	s15, s14, s15
90011e18:	942f      	str	r4, [sp, #188]	@ 0xbc
90011e1a:	9430      	str	r4, [sp, #192]	@ 0xc0
90011e1c:	9431      	str	r4, [sp, #196]	@ 0xc4
90011e1e:	9432      	str	r4, [sp, #200]	@ 0xc8
90011e20:	9433      	str	r4, [sp, #204]	@ 0xcc
90011e22:	4644      	mov	r4, r8
90011e24:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90011e28:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90011e2c:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
90011e30:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90011e34:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90011e38:	9b06      	ldr	r3, [sp, #24]
90011e3a:	454b      	cmp	r3, r9
90011e3c:	f000 80cc 	beq.w	90011fd8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
90011e40:	f109 0301 	add.w	r3, r9, #1
90011e44:	9305      	str	r3, [sp, #20]
90011e46:	f81b 3009 	ldrb.w	r3, [fp, r9]
90011e4a:	2b06      	cmp	r3, #6
90011e4c:	d839      	bhi.n	90011ec2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90011e4e:	e8df f003 	tbb	[pc, r3]
90011e52:	3b04      	.short	0x3b04
90011e54:	817c6f60 	.word	0x817c6f60
90011e58:	a0          	.byte	0xa0
90011e59:	00          	.byte	0x00
90011e5a:	45c1      	cmp	r9, r8
90011e5c:	d92b      	bls.n	90011eb6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90011e5e:	eef0 0a49 	vmov.f32	s1, s18
90011e62:	4638      	mov	r0, r7
90011e64:	eeb0 0a69 	vmov.f32	s0, s19
90011e68:	f7ff fdde 	bl	90011a28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90011e6c:	4638      	mov	r0, r7
90011e6e:	f7ff fe67 	bl	90011b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90011e72:	4681      	mov	r9, r0
90011e74:	b9f8      	cbnz	r0, 90011eb6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90011e76:	eef0 0a49 	vmov.f32	s1, s18
90011e7a:	4638      	mov	r0, r7
90011e7c:	eeb0 0a69 	vmov.f32	s0, s19
90011e80:	f7ff fe8d 	bl	90011b9e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90011e84:	4628      	mov	r0, r5
90011e86:	4623      	mov	r3, r4
90011e88:	9a05      	ldr	r2, [sp, #20]
90011e8a:	4641      	mov	r1, r8
90011e8c:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90011e90:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
90011e94:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90011e98:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90011e9c:	e9cd 9702 	strd	r9, r7, [sp, #8]
90011ea0:	e9cd b600 	strd	fp, r6, [sp]
90011ea4:	f7ff feae 	bl	90011c04 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90011ea8:	eef0 0a49 	vmov.f32	s1, s18
90011eac:	eeb0 0a69 	vmov.f32	s0, s19
90011eb0:	4638      	mov	r0, r7
90011eb2:	f7ff fe74 	bl	90011b9e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
90011eb6:	eeb0 8a49 	vmov.f32	s16, s18
90011eba:	f8dd 8014 	ldr.w	r8, [sp, #20]
90011ebe:	eef0 8a69 	vmov.f32	s17, s19
90011ec2:	f8dd 9014 	ldr.w	r9, [sp, #20]
90011ec6:	e7b7      	b.n	90011e38 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
90011ec8:	45c1      	cmp	r9, r8
90011eca:	d90d      	bls.n	90011ee8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90011ecc:	4638      	mov	r0, r7
90011ece:	f7ff fe37 	bl	90011b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90011ed2:	b948      	cbnz	r0, 90011ee8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90011ed4:	4623      	mov	r3, r4
90011ed6:	464a      	mov	r2, r9
90011ed8:	4641      	mov	r1, r8
90011eda:	4628      	mov	r0, r5
90011edc:	e9cd a702 	strd	sl, r7, [sp, #8]
90011ee0:	e9cd b600 	strd	fp, r6, [sp]
90011ee4:	f7ff fe8e 	bl	90011c04 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90011ee8:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90011eec:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90011ef0:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90011ef4:	3402      	adds	r4, #2
90011ef6:	edd3 8a00 	vldr	s17, [r3]
90011efa:	46c8      	mov	r8, r9
90011efc:	ed93 8a01 	vldr	s16, [r3, #4]
90011f00:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
90011f04:	eef0 9a68 	vmov.f32	s19, s17
90011f08:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90011f0c:	eeb0 9a48 	vmov.f32	s18, s16
90011f10:	e7d7      	b.n	90011ec2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90011f12:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90011f16:	4638      	mov	r0, r7
90011f18:	3402      	adds	r4, #2
90011f1a:	edd3 8a00 	vldr	s17, [r3]
90011f1e:	ed93 8a01 	vldr	s16, [r3, #4]
90011f22:	eeb0 0a68 	vmov.f32	s0, s17
90011f26:	eef0 0a48 	vmov.f32	s1, s16
90011f2a:	f7ff fd7d 	bl	90011a28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90011f2e:	e7c8      	b.n	90011ec2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90011f30:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90011f34:	edd3 8a00 	vldr	s17, [r3]
90011f38:	eef0 0a48 	vmov.f32	s1, s16
90011f3c:	4638      	mov	r0, r7
90011f3e:	eeb0 0a68 	vmov.f32	s0, s17
90011f42:	3401      	adds	r4, #1
90011f44:	f7ff fd70 	bl	90011a28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90011f48:	e7bb      	b.n	90011ec2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90011f4a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90011f4e:	ed93 8a00 	vldr	s16, [r3]
90011f52:	e7f1      	b.n	90011f38 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
90011f54:	00a3      	lsls	r3, r4, #2
90011f56:	eef0 0a48 	vmov.f32	s1, s16
90011f5a:	eeb0 0a68 	vmov.f32	s0, s17
90011f5e:	4638      	mov	r0, r7
90011f60:	f103 0208 	add.w	r2, r3, #8
90011f64:	f103 090c 	add.w	r9, r3, #12
90011f68:	4433      	add	r3, r6
90011f6a:	3404      	adds	r4, #4
90011f6c:	4432      	add	r2, r6
90011f6e:	44b1      	add	r9, r6
90011f70:	edd3 1a01 	vldr	s3, [r3, #4]
90011f74:	ed92 2a00 	vldr	s4, [r2]
90011f78:	edd9 2a00 	vldr	s5, [r9]
90011f7c:	ed93 1a00 	vldr	s2, [r3]
90011f80:	9207      	str	r2, [sp, #28]
90011f82:	f7ff fabb 	bl	900114fc <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90011f86:	9a07      	ldr	r2, [sp, #28]
90011f88:	ed99 8a00 	vldr	s16, [r9]
90011f8c:	edd2 8a00 	vldr	s17, [r2]
90011f90:	e797      	b.n	90011ec2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90011f92:	00a3      	lsls	r3, r4, #2
90011f94:	eef0 0a48 	vmov.f32	s1, s16
90011f98:	eeb0 0a68 	vmov.f32	s0, s17
90011f9c:	4638      	mov	r0, r7
90011f9e:	f103 0210 	add.w	r2, r3, #16
90011fa2:	f103 0914 	add.w	r9, r3, #20
90011fa6:	4433      	add	r3, r6
90011fa8:	3406      	adds	r4, #6
90011faa:	4432      	add	r2, r6
90011fac:	44b1      	add	r9, r6
90011fae:	edd3 2a03 	vldr	s5, [r3, #12]
90011fb2:	ed92 3a00 	vldr	s6, [r2]
90011fb6:	edd9 3a00 	vldr	s7, [r9]
90011fba:	ed93 2a02 	vldr	s4, [r3, #8]
90011fbe:	edd3 1a01 	vldr	s3, [r3, #4]
90011fc2:	ed93 1a00 	vldr	s2, [r3]
90011fc6:	9207      	str	r2, [sp, #28]
90011fc8:	f7ff fab7 	bl	9001153a <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90011fcc:	9a07      	ldr	r2, [sp, #28]
90011fce:	ed99 8a00 	vldr	s16, [r9]
90011fd2:	edd2 8a00 	vldr	s17, [r2]
90011fd6:	e774      	b.n	90011ec2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90011fd8:	9b06      	ldr	r3, [sp, #24]
90011fda:	af08      	add	r7, sp, #32
90011fdc:	4543      	cmp	r3, r8
90011fde:	d90f      	bls.n	90012000 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90011fe0:	4638      	mov	r0, r7
90011fe2:	f7ff fdad 	bl	90011b40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90011fe6:	b958      	cbnz	r0, 90012000 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90011fe8:	2301      	movs	r3, #1
90011fea:	9703      	str	r7, [sp, #12]
90011fec:	f8cd b000 	str.w	fp, [sp]
90011ff0:	4641      	mov	r1, r8
90011ff2:	9a06      	ldr	r2, [sp, #24]
90011ff4:	4628      	mov	r0, r5
90011ff6:	e9cd 6301 	strd	r6, r3, [sp, #4]
90011ffa:	4623      	mov	r3, r4
90011ffc:	f7ff fe02 	bl	90011c04 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012000:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
90012004:	4638      	mov	r0, r7
90012006:	f015 fa53 	bl	900274b0 <_ZN8touchgfx6Canvas6renderEh>
9001200a:	4604      	mov	r4, r0
9001200c:	4638      	mov	r0, r7
9001200e:	f7ff fe99 	bl	90011d44 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90012012:	4620      	mov	r0, r4
90012014:	b035      	add	sp, #212	@ 0xd4
90012016:	ecbd 8b04 	vpop	{d8-d9}
9001201a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001201e:	2401      	movs	r4, #1
90012020:	e7f7      	b.n	90012012 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
90012022:	bf00      	nop
90012024:	00000000 	.word	0x00000000
90012028:	9002bf38 	.word	0x9002bf38

9001202c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
9001202c:	b510      	push	{r4, lr}
9001202e:	4604      	mov	r4, r0
90012030:	f7ff fe88 	bl	90011d44 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90012034:	21b0      	movs	r1, #176	@ 0xb0
90012036:	4620      	mov	r0, r4
90012038:	f015 fe26 	bl	90027c88 <_ZdlPvj>
9001203c:	4620      	mov	r0, r4
9001203e:	bd10      	pop	{r4, pc}

90012040 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90012040:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012044:	4698      	mov	r8, r3
90012046:	23ff      	movs	r3, #255	@ 0xff
90012048:	4607      	mov	r7, r0
9001204a:	4689      	mov	r9, r1
9001204c:	4692      	mov	sl, r2
9001204e:	1d02      	adds	r2, r0, #4
90012050:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90012054:	2400      	movs	r4, #0
90012056:	44ca      	add	sl, r9
90012058:	ed2d 8b06 	vpush	{d8-d10}
9001205c:	b0aa      	sub	sp, #168	@ 0xa8
9001205e:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90012264 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012062:	9300      	str	r3, [sp, #0]
90012064:	eef0 8a48 	vmov.f32	s17, s16
90012068:	6981      	ldr	r1, [r0, #24]
9001206a:	a80d      	add	r0, sp, #52	@ 0x34
9001206c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
9001206e:	f015 f98b 	bl	90027388 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90012072:	7f3b      	ldrb	r3, [r7, #28]
90012074:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90012264 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012078:	4628      	mov	r0, r5
9001207a:	1e5a      	subs	r2, r3, #1
9001207c:	eeb0 0a60 	vmov.f32	s0, s1
90012080:	4253      	negs	r3, r2
90012082:	4153      	adcs	r3, r2
90012084:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90012088:	f004 fd6d 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001208c:	eeb0 9a40 	vmov.f32	s18, s0
90012090:	eef0 9a60 	vmov.f32	s19, s1
90012094:	45ca      	cmp	sl, r9
90012096:	f000 80cd 	beq.w	90012234 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
9001209a:	f819 3b01 	ldrb.w	r3, [r9], #1
9001209e:	2b06      	cmp	r3, #6
900120a0:	d8f8      	bhi.n	90012094 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900120a2:	e8df f003 	tbb	[pc, r3]
900120a6:	0804      	.short	0x0804
900120a8:	58533f2a 	.word	0x58533f2a
900120ac:	8a          	.byte	0x8a
900120ad:	00          	.byte	0x00
900120ae:	a80d      	add	r0, sp, #52	@ 0x34
900120b0:	f015 f9dc 	bl	9002746c <_ZN8touchgfx6Canvas5closeEv>
900120b4:	e7ee      	b.n	90012094 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900120b6:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900120ba:	4628      	mov	r0, r5
900120bc:	ed93 8a01 	vldr	s16, [r3, #4]
900120c0:	edd3 8a00 	vldr	s17, [r3]
900120c4:	eef0 0a48 	vmov.f32	s1, s16
900120c8:	eeb0 0a68 	vmov.f32	s0, s17
900120cc:	f004 fd4b 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900120d0:	a80d      	add	r0, sp, #52	@ 0x34
900120d2:	eef0 7a60 	vmov.f32	s15, s1
900120d6:	eeb0 9a40 	vmov.f32	s18, s0
900120da:	eef0 9a60 	vmov.f32	s19, s1
900120de:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900120e2:	ee17 2a90 	vmov	r2, s15
900120e6:	eef0 7a40 	vmov.f32	s15, s0
900120ea:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900120ee:	ee17 1a90 	vmov	r1, s15
900120f2:	f015 fa95 	bl	90027620 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900120f6:	3402      	adds	r4, #2
900120f8:	e7cc      	b.n	90012094 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900120fa:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900120fe:	4628      	mov	r0, r5
90012100:	edd3 8a00 	vldr	s17, [r3]
90012104:	ed93 8a01 	vldr	s16, [r3, #4]
90012108:	eeb0 0a68 	vmov.f32	s0, s17
9001210c:	eef0 0a48 	vmov.f32	s1, s16
90012110:	f004 fd29 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012114:	a80d      	add	r0, sp, #52	@ 0x34
90012116:	eeb0 9a40 	vmov.f32	s18, s0
9001211a:	eef0 9a60 	vmov.f32	s19, s1
9001211e:	f7ff fe01 	bl	90011d24 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90012122:	e7e8      	b.n	900120f6 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90012124:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012128:	edd3 8a00 	vldr	s17, [r3]
9001212c:	eef0 0a48 	vmov.f32	s1, s16
90012130:	4628      	mov	r0, r5
90012132:	eeb0 0a68 	vmov.f32	s0, s17
90012136:	3401      	adds	r4, #1
90012138:	f004 fd15 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001213c:	a80d      	add	r0, sp, #52	@ 0x34
9001213e:	eef0 9a60 	vmov.f32	s19, s1
90012142:	eeb0 9a40 	vmov.f32	s18, s0
90012146:	f7ff fded 	bl	90011d24 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9001214a:	e7a3      	b.n	90012094 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001214c:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012150:	ed93 8a00 	vldr	s16, [r3]
90012154:	e7ea      	b.n	9001212c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90012156:	1ca3      	adds	r3, r4, #2
90012158:	4628      	mov	r0, r5
9001215a:	3404      	adds	r4, #4
9001215c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90012160:	ed53 0a01 	vldr	s1, [r3, #-4]
90012164:	ed13 0a02 	vldr	s0, [r3, #-8]
90012168:	edd3 8a00 	vldr	s17, [r3]
9001216c:	ed93 8a01 	vldr	s16, [r3, #4]
90012170:	f004 fcf9 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012174:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90012178:	eeb0 0a68 	vmov.f32	s0, s17
9001217c:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90012180:	eef0 0a48 	vmov.f32	s1, s16
90012184:	4628      	mov	r0, r5
90012186:	f004 fcee 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001218a:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
9001218e:	eef0 2a60 	vmov.f32	s5, s1
90012192:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90012196:	eeb0 2a40 	vmov.f32	s4, s0
9001219a:	a80d      	add	r0, sp, #52	@ 0x34
9001219c:	eeb0 aa40 	vmov.f32	s20, s0
900121a0:	eef0 aa60 	vmov.f32	s21, s1
900121a4:	eeb0 0a49 	vmov.f32	s0, s18
900121a8:	eef0 0a69 	vmov.f32	s1, s19
900121ac:	f7ff f9a6 	bl	900114fc <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900121b0:	eef0 9a6a 	vmov.f32	s19, s21
900121b4:	eeb0 9a4a 	vmov.f32	s18, s20
900121b8:	e76c      	b.n	90012094 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900121ba:	1d26      	adds	r6, r4, #4
900121bc:	4628      	mov	r0, r5
900121be:	3406      	adds	r4, #6
900121c0:	eb08 0686 	add.w	r6, r8, r6, lsl #2
900121c4:	ed56 0a03 	vldr	s1, [r6, #-12]
900121c8:	ed16 0a04 	vldr	s0, [r6, #-16]
900121cc:	edd6 8a00 	vldr	s17, [r6]
900121d0:	ed96 8a01 	vldr	s16, [r6, #4]
900121d4:	f004 fcc7 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900121d8:	ed8d 0a07 	vstr	s0, [sp, #28]
900121dc:	4628      	mov	r0, r5
900121de:	ed16 0a02 	vldr	s0, [r6, #-8]
900121e2:	edcd 0a08 	vstr	s1, [sp, #32]
900121e6:	ed56 0a01 	vldr	s1, [r6, #-4]
900121ea:	f004 fcbc 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900121ee:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
900121f2:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
900121f6:	eeb0 0a68 	vmov.f32	s0, s17
900121fa:	eef0 0a48 	vmov.f32	s1, s16
900121fe:	4628      	mov	r0, r5
90012200:	f004 fcb1 	bl	90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012204:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90012208:	eeb0 3a40 	vmov.f32	s6, s0
9001220c:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90012210:	eef0 3a60 	vmov.f32	s7, s1
90012214:	eddd 1a08 	vldr	s3, [sp, #32]
90012218:	eeb0 aa40 	vmov.f32	s20, s0
9001221c:	ed9d 1a07 	vldr	s2, [sp, #28]
90012220:	eef0 aa60 	vmov.f32	s21, s1
90012224:	a80d      	add	r0, sp, #52	@ 0x34
90012226:	eef0 0a69 	vmov.f32	s1, s19
9001222a:	eeb0 0a49 	vmov.f32	s0, s18
9001222e:	f7ff f984 	bl	9001153a <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012232:	e7bd      	b.n	900121b0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90012234:	7f7b      	ldrb	r3, [r7, #29]
90012236:	a80d      	add	r0, sp, #52	@ 0x34
90012238:	7fb9      	ldrb	r1, [r7, #30]
9001223a:	4359      	muls	r1, r3
9001223c:	1c4b      	adds	r3, r1, #1
9001223e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90012242:	f3c1 2107 	ubfx	r1, r1, #8, #8
90012246:	f015 f933 	bl	900274b0 <_ZN8touchgfx6Canvas6renderEh>
9001224a:	4b07      	ldr	r3, [pc, #28]	@ (90012268 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
9001224c:	4604      	mov	r4, r0
9001224e:	a812      	add	r0, sp, #72	@ 0x48
90012250:	930d      	str	r3, [sp, #52]	@ 0x34
90012252:	f000 fceb 	bl	90012c2c <_ZN8touchgfx7OutlineD1Ev>
90012256:	4620      	mov	r0, r4
90012258:	b02a      	add	sp, #168	@ 0xa8
9001225a:	ecbd 8b06 	vpop	{d8-d10}
9001225e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90012262:	bf00      	nop
90012264:	00000000 	.word	0x00000000
90012268:	9002c6e8 	.word	0x9002c6e8

9001226c <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
9001226c:	b410      	push	{r4}
9001226e:	7f04      	ldrb	r4, [r0, #28]
90012270:	b11c      	cbz	r4, 9001227a <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90012272:	f85d 4b04 	ldr.w	r4, [sp], #4
90012276:	f7ff bee3 	b.w	90012040 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
9001227a:	f85d 4b04 	ldr.w	r4, [sp], #4
9001227e:	f7ff bd6d 	b.w	90011d5c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

90012282 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90012282:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90012286:	4691      	mov	r9, r2
90012288:	4602      	mov	r2, r0
9001228a:	4606      	mov	r6, r0
9001228c:	4688      	mov	r8, r1
9001228e:	f852 0f26 	ldr.w	r0, [r2, #38]!
90012292:	469a      	mov	sl, r3
90012294:	ab02      	add	r3, sp, #8
90012296:	af02      	add	r7, sp, #8
90012298:	6851      	ldr	r1, [r2, #4]
9001229a:	c303      	stmia	r3!, {r0, r1}
9001229c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900122a0:	2b00      	cmp	r3, #0
900122a2:	dd2f      	ble.n	90012304 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
900122a4:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
900122a8:	2c00      	cmp	r4, #0
900122aa:	dd2b      	ble.n	90012304 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
900122ac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900122b0:	441c      	add	r4, r3
900122b2:	b2a4      	uxth	r4, r4
900122b4:	b225      	sxth	r5, r4
900122b6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
900122ba:	42ab      	cmp	r3, r5
900122bc:	da22      	bge.n	90012304 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
900122be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900122c0:	464a      	mov	r2, r9
900122c2:	9701      	str	r7, [sp, #4]
900122c4:	4641      	mov	r1, r8
900122c6:	9300      	str	r3, [sp, #0]
900122c8:	4630      	mov	r0, r6
900122ca:	4653      	mov	r3, sl
900122cc:	f7ff ffce 	bl	9001226c <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
900122d0:	b940      	cbnz	r0, 900122e4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
900122d2:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900122d6:	2b01      	cmp	r3, #1
900122d8:	d004      	beq.n	900122e4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
900122da:	3301      	adds	r3, #1
900122dc:	105b      	asrs	r3, r3, #1
900122de:	f8ad 300e 	strh.w	r3, [sp, #14]
900122e2:	e7ec      	b.n	900122be <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
900122e4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
900122e8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900122ec:	4413      	add	r3, r2
900122ee:	b29b      	uxth	r3, r3
900122f0:	441a      	add	r2, r3
900122f2:	f8ad 300a 	strh.w	r3, [sp, #10]
900122f6:	b212      	sxth	r2, r2
900122f8:	4295      	cmp	r5, r2
900122fa:	dadc      	bge.n	900122b6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
900122fc:	1ae3      	subs	r3, r4, r3
900122fe:	f8ad 300e 	strh.w	r3, [sp, #14]
90012302:	e7d8      	b.n	900122b6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
90012304:	b004      	add	sp, #16
90012306:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001230c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
9001230c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001230e:	6803      	ldr	r3, [r0, #0]
90012310:	460d      	mov	r5, r1
90012312:	4604      	mov	r4, r0
90012314:	4601      	mov	r1, r0
90012316:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90012318:	a802      	add	r0, sp, #8
9001231a:	4798      	blx	r3
9001231c:	6828      	ldr	r0, [r5, #0]
9001231e:	6869      	ldr	r1, [r5, #4]
90012320:	466b      	mov	r3, sp
90012322:	c303      	stmia	r3!, {r0, r1}
90012324:	4668      	mov	r0, sp
90012326:	4619      	mov	r1, r3
90012328:	f7fd f992 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9001232c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9001232e:	b188      	cbz	r0, 90012354 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012330:	6803      	ldr	r3, [r0, #0]
90012332:	1d21      	adds	r1, r4, #4
90012334:	68db      	ldr	r3, [r3, #12]
90012336:	4798      	blx	r3
90012338:	b160      	cbz	r0, 90012354 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001233a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001233e:	2b00      	cmp	r3, #0
90012340:	dd08      	ble.n	90012354 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012342:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90012346:	2d00      	cmp	r5, #0
90012348:	dd04      	ble.n	90012354 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001234a:	4a2b      	ldr	r2, [pc, #172]	@ (900123f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
9001234c:	7812      	ldrb	r2, [r2, #0]
9001234e:	b11a      	cbz	r2, 90012358 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90012350:	2a01      	cmp	r2, #1
90012352:	d029      	beq.n	900123a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90012354:	b004      	add	sp, #16
90012356:	bd70      	pop	{r4, r5, r6, pc}
90012358:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001235c:	441d      	add	r5, r3
9001235e:	b2ad      	uxth	r5, r5
90012360:	b22e      	sxth	r6, r5
90012362:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90012366:	42b3      	cmp	r3, r6
90012368:	daf4      	bge.n	90012354 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001236a:	6823      	ldr	r3, [r4, #0]
9001236c:	4669      	mov	r1, sp
9001236e:	4620      	mov	r0, r4
90012370:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90012372:	4798      	blx	r3
90012374:	b940      	cbnz	r0, 90012388 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012376:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9001237a:	2b01      	cmp	r3, #1
9001237c:	d004      	beq.n	90012388 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001237e:	3301      	adds	r3, #1
90012380:	105b      	asrs	r3, r3, #1
90012382:	f8ad 3006 	strh.w	r3, [sp, #6]
90012386:	e7f0      	b.n	9001236a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90012388:	f8bd 2006 	ldrh.w	r2, [sp, #6]
9001238c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012390:	4413      	add	r3, r2
90012392:	b29b      	uxth	r3, r3
90012394:	441a      	add	r2, r3
90012396:	f8ad 3002 	strh.w	r3, [sp, #2]
9001239a:	b212      	sxth	r2, r2
9001239c:	4296      	cmp	r6, r2
9001239e:	dae0      	bge.n	90012362 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900123a0:	1aeb      	subs	r3, r5, r3
900123a2:	f8ad 3006 	strh.w	r3, [sp, #6]
900123a6:	e7dc      	b.n	90012362 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900123a8:	f8bd 5000 	ldrh.w	r5, [sp]
900123ac:	441d      	add	r5, r3
900123ae:	b2ad      	uxth	r5, r5
900123b0:	b22e      	sxth	r6, r5
900123b2:	f9bd 3000 	ldrsh.w	r3, [sp]
900123b6:	42b3      	cmp	r3, r6
900123b8:	dacc      	bge.n	90012354 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900123ba:	6823      	ldr	r3, [r4, #0]
900123bc:	4669      	mov	r1, sp
900123be:	4620      	mov	r0, r4
900123c0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900123c2:	4798      	blx	r3
900123c4:	b940      	cbnz	r0, 900123d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900123c6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900123ca:	2b01      	cmp	r3, #1
900123cc:	d004      	beq.n	900123d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900123ce:	3301      	adds	r3, #1
900123d0:	105b      	asrs	r3, r3, #1
900123d2:	f8ad 3004 	strh.w	r3, [sp, #4]
900123d6:	e7f0      	b.n	900123ba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
900123d8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900123dc:	f8bd 3000 	ldrh.w	r3, [sp]
900123e0:	4413      	add	r3, r2
900123e2:	b29b      	uxth	r3, r3
900123e4:	441a      	add	r2, r3
900123e6:	f8ad 3000 	strh.w	r3, [sp]
900123ea:	b212      	sxth	r2, r2
900123ec:	4296      	cmp	r6, r2
900123ee:	dae0      	bge.n	900123b2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900123f0:	1aeb      	subs	r3, r5, r3
900123f2:	f8ad 3004 	strh.w	r3, [sp, #4]
900123f6:	e7dc      	b.n	900123b2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900123f8:	240218ac 	.word	0x240218ac

900123fc <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
900123fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900123fe:	6803      	ldr	r3, [r0, #0]
90012400:	4604      	mov	r4, r0
90012402:	4601      	mov	r1, r0
90012404:	4668      	mov	r0, sp
90012406:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90012408:	4798      	blx	r3
9001240a:	2100      	movs	r1, #0
9001240c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012410:	4668      	mov	r0, sp
90012412:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012416:	9102      	str	r1, [sp, #8]
90012418:	a902      	add	r1, sp, #8
9001241a:	f8ad 200c 	strh.w	r2, [sp, #12]
9001241e:	f8ad 300e 	strh.w	r3, [sp, #14]
90012422:	f7fd f915 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
90012426:	6823      	ldr	r3, [r4, #0]
90012428:	4669      	mov	r1, sp
9001242a:	4620      	mov	r0, r4
9001242c:	691b      	ldr	r3, [r3, #16]
9001242e:	4798      	blx	r3
90012430:	b004      	add	sp, #16
90012432:	bd10      	pop	{r4, pc}

90012434 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90012434:	2101      	movs	r1, #1
90012436:	2200      	movs	r2, #0
90012438:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
9001243c:	490a      	ldr	r1, [pc, #40]	@ (90012468 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
9001243e:	8082      	strh	r2, [r0, #4]
90012440:	6001      	str	r1, [r0, #0]
90012442:	21ff      	movs	r1, #255	@ 0xff
90012444:	80c2      	strh	r2, [r0, #6]
90012446:	8102      	strh	r2, [r0, #8]
90012448:	8142      	strh	r2, [r0, #10]
9001244a:	8182      	strh	r2, [r0, #12]
9001244c:	81c2      	strh	r2, [r0, #14]
9001244e:	8202      	strh	r2, [r0, #16]
90012450:	8242      	strh	r2, [r0, #18]
90012452:	61c2      	str	r2, [r0, #28]
90012454:	8402      	strh	r2, [r0, #32]
90012456:	8442      	strh	r2, [r0, #34]	@ 0x22
90012458:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
9001245c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90012460:	6282      	str	r2, [r0, #40]	@ 0x28
90012462:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012466:	4770      	bx	lr
90012468:	9002bf98 	.word	0x9002bf98

9001246c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
9001246c:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90012470:	4770      	bx	lr

90012472 <_ZN8touchgfx12ToggleButtonD1Ev>:
90012472:	4770      	bx	lr

90012474 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
90012474:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90012478:	b133      	cbz	r3, 90012488 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
9001247a:	790b      	ldrb	r3, [r1, #4]
9001247c:	2b01      	cmp	r3, #1
9001247e:	bf01      	itttt	eq
90012480:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
90012482:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
90012484:	8603      	strheq	r3, [r0, #48]	@ 0x30
90012486:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
90012488:	f015 bbda 	b.w	90027c40 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

9001248c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
9001248c:	8813      	ldrh	r3, [r2, #0]
9001248e:	8683      	strh	r3, [r0, #52]	@ 0x34
90012490:	f000 ba31 	b.w	900128f6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

90012494 <_ZN8touchgfx12ToggleButtonD0Ev>:
90012494:	b510      	push	{r4, lr}
90012496:	4604      	mov	r4, r0
90012498:	2138      	movs	r1, #56	@ 0x38
9001249a:	f015 fbf5 	bl	90027c88 <_ZdlPvj>
9001249e:	4620      	mov	r0, r4
900124a0:	bd10      	pop	{r4, pc}

900124a2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
900124a2:	b510      	push	{r4, lr}
900124a4:	4604      	mov	r4, r0
900124a6:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900124a8:	b150      	cbz	r0, 900124c0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900124aa:	6803      	ldr	r3, [r0, #0]
900124ac:	68db      	ldr	r3, [r3, #12]
900124ae:	4798      	blx	r3
900124b0:	b130      	cbz	r0, 900124c0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900124b2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900124b4:	4621      	mov	r1, r4
900124b6:	6803      	ldr	r3, [r0, #0]
900124b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900124bc:	689b      	ldr	r3, [r3, #8]
900124be:	4718      	bx	r3
900124c0:	bd10      	pop	{r4, pc}

900124c2 <_ZNK8touchgfx6Button17invalidateContentEv>:
900124c2:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
900124c6:	b12a      	cbz	r2, 900124d4 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900124c8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900124cc:	b112      	cbz	r2, 900124d4 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900124ce:	6803      	ldr	r3, [r0, #0]
900124d0:	695b      	ldr	r3, [r3, #20]
900124d2:	4718      	bx	r3
900124d4:	4770      	bx	lr

900124d6 <_ZN8touchgfx12ToggleButton10forceStateEb>:
900124d6:	8e83      	ldrh	r3, [r0, #52]	@ 0x34
900124d8:	b129      	cbz	r1, 900124e6 <_ZN8touchgfx12ToggleButton10forceStateEb+0x10>
900124da:	8dc2      	ldrh	r2, [r0, #46]	@ 0x2e
900124dc:	429a      	cmp	r2, r3
900124de:	d007      	beq.n	900124f0 <_ZN8touchgfx12ToggleButton10forceStateEb+0x1a>
900124e0:	8602      	strh	r2, [r0, #48]	@ 0x30
900124e2:	85c3      	strh	r3, [r0, #46]	@ 0x2e
900124e4:	4770      	bx	lr
900124e6:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
900124e8:	429a      	cmp	r2, r3
900124ea:	bf1c      	itt	ne
900124ec:	85c2      	strhne	r2, [r0, #46]	@ 0x2e
900124ee:	8603      	strhne	r3, [r0, #48]	@ 0x30
900124f0:	4770      	bx	lr

900124f2 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
900124f2:	b508      	push	{r3, lr}
900124f4:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
900124f8:	b10b      	cbz	r3, 900124fe <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
900124fa:	f7f0 fc75 	bl	90002de8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900124fe:	bd08      	pop	{r3, pc}

90012500 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
90012500:	6803      	ldr	r3, [r0, #0]
90012502:	f64f 71fe 	movw	r1, #65534	@ 0xfffe
90012506:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
90012508:	4718      	bx	r3

9001250a <_ZN8touchgfx14SnapshotWidgetD1Ev>:
9001250a:	4770      	bx	lr

9001250c <_ZN8touchgfx14SnapshotWidgetD0Ev>:
9001250c:	b510      	push	{r4, lr}
9001250e:	4604      	mov	r4, r0
90012510:	212c      	movs	r1, #44	@ 0x2c
90012512:	f015 fbb9 	bl	90027c88 <_ZdlPvj>
90012516:	4620      	mov	r0, r4
90012518:	bd10      	pop	{r4, pc}

9001251a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
9001251a:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
9001251e:	2bff      	cmp	r3, #255	@ 0xff
90012520:	b510      	push	{r4, lr}
90012522:	d104      	bne.n	9001252e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
90012524:	8cca      	ldrh	r2, [r1, #38]	@ 0x26
90012526:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001252a:	429a      	cmp	r2, r3
9001252c:	d105      	bne.n	9001253a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
9001252e:	2300      	movs	r3, #0
90012530:	8003      	strh	r3, [r0, #0]
90012532:	8043      	strh	r3, [r0, #2]
90012534:	8083      	strh	r3, [r0, #4]
90012536:	80c3      	strh	r3, [r0, #6]
90012538:	bd10      	pop	{r4, pc}
9001253a:	2300      	movs	r3, #0
9001253c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
90012540:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
90012544:	8003      	strh	r3, [r0, #0]
90012546:	8043      	strh	r3, [r0, #2]
90012548:	8084      	strh	r4, [r0, #4]
9001254a:	80c2      	strh	r2, [r0, #6]
9001254c:	e7f4      	b.n	90012538 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

9001254e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
9001254e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012552:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
90012556:	b087      	sub	sp, #28
90012558:	4604      	mov	r4, r0
9001255a:	4689      	mov	r9, r1
9001255c:	b363      	cbz	r3, 900125b8 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
9001255e:	8cc2      	ldrh	r2, [r0, #38]	@ 0x26
90012560:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90012564:	429a      	cmp	r2, r3
90012566:	d027      	beq.n	900125b8 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90012568:	ad06      	add	r5, sp, #24
9001256a:	2700      	movs	r7, #0
9001256c:	f825 2d0c 	strh.w	r2, [r5, #-12]!
90012570:	4628      	mov	r0, r5
90012572:	f006 fb33 	bl	90018bdc <_ZNK8touchgfx6Bitmap8getWidthEv>
90012576:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001257a:	a904      	add	r1, sp, #16
9001257c:	f8ad 0014 	strh.w	r0, [sp, #20]
90012580:	f8ad 3016 	strh.w	r3, [sp, #22]
90012584:	4620      	mov	r0, r4
90012586:	6823      	ldr	r3, [r4, #0]
90012588:	9704      	str	r7, [sp, #16]
9001258a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001258c:	4798      	blx	r3
9001258e:	f7fd fe1b 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
90012592:	6803      	ldr	r3, [r0, #0]
90012594:	4606      	mov	r6, r0
90012596:	4628      	mov	r0, r5
90012598:	f8d3 800c 	ldr.w	r8, [r3, #12]
9001259c:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
9001259e:	f8ad 300c 	strh.w	r3, [sp, #12]
900125a2:	f006 fc0d 	bl	90018dc0 <_ZNK8touchgfx6Bitmap7getDataEv>
900125a6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
900125aa:	4601      	mov	r1, r0
900125ac:	9701      	str	r7, [sp, #4]
900125ae:	aa04      	add	r2, sp, #16
900125b0:	9300      	str	r3, [sp, #0]
900125b2:	4630      	mov	r0, r6
900125b4:	464b      	mov	r3, r9
900125b6:	47c0      	blx	r8
900125b8:	b007      	add	sp, #28
900125ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

900125be <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
900125be:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900125c0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900125c4:	460d      	mov	r5, r1
900125c6:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
900125ca:	2100      	movs	r1, #0
900125cc:	f8ad 3006 	strh.w	r3, [sp, #6]
900125d0:	4604      	mov	r4, r0
900125d2:	6803      	ldr	r3, [r0, #0]
900125d4:	f8ad 2004 	strh.w	r2, [sp, #4]
900125d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900125da:	9100      	str	r1, [sp, #0]
900125dc:	4669      	mov	r1, sp
900125de:	4798      	blx	r3
900125e0:	4621      	mov	r1, r4
900125e2:	a802      	add	r0, sp, #8
900125e4:	f003 ffa4 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900125e8:	f7fd fdee 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
900125ec:	6803      	ldr	r3, [r0, #0]
900125ee:	aa02      	add	r2, sp, #8
900125f0:	4669      	mov	r1, sp
900125f2:	695e      	ldr	r6, [r3, #20]
900125f4:	462b      	mov	r3, r5
900125f6:	47b0      	blx	r6
900125f8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900125fc:	2800      	cmp	r0, #0
900125fe:	bf08      	it	eq
90012600:	461d      	moveq	r5, r3
90012602:	84e5      	strh	r5, [r4, #38]	@ 0x26
90012604:	b004      	add	sp, #16
90012606:	bd70      	pop	{r4, r5, r6, pc}

90012608 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
90012608:	2200      	movs	r2, #0
9001260a:	8082      	strh	r2, [r0, #4]
9001260c:	80c2      	strh	r2, [r0, #6]
9001260e:	8102      	strh	r2, [r0, #8]
90012610:	8142      	strh	r2, [r0, #10]
90012612:	8182      	strh	r2, [r0, #12]
90012614:	81c2      	strh	r2, [r0, #14]
90012616:	8202      	strh	r2, [r0, #16]
90012618:	8242      	strh	r2, [r0, #18]
9001261a:	61c2      	str	r2, [r0, #28]
9001261c:	8402      	strh	r2, [r0, #32]
9001261e:	8442      	strh	r2, [r0, #34]	@ 0x22
90012620:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90012624:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012628:	2201      	movs	r2, #1
9001262a:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
9001262e:	4a04      	ldr	r2, [pc, #16]	@ (90012640 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
90012630:	6002      	str	r2, [r0, #0]
90012632:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90012636:	84c2      	strh	r2, [r0, #38]	@ 0x26
90012638:	f880 2028 	strb.w	r2, [r0, #40]	@ 0x28
9001263c:	4770      	bx	lr
9001263e:	bf00      	nop
90012640:	9002c084 	.word	0x9002c084

90012644 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90012644:	4b07      	ldr	r3, [pc, #28]	@ (90012664 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90012646:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90012648:	881b      	ldrh	r3, [r3, #0]
9001264a:	4293      	cmp	r3, r2
9001264c:	bf81      	itttt	hi
9001264e:	4b06      	ldrhi	r3, [pc, #24]	@ (90012668 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90012650:	681b      	ldrhi	r3, [r3, #0]
90012652:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90012656:	7858      	ldrbhi	r0, [r3, #1]
90012658:	bf8c      	ite	hi
9001265a:	f000 0003 	andhi.w	r0, r0, #3
9001265e:	2000      	movls	r0, #0
90012660:	4770      	bx	lr
90012662:	bf00      	nop
90012664:	24021910 	.word	0x24021910
90012668:	2402190c 	.word	0x2402190c

9001266c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
9001266c:	4b11      	ldr	r3, [pc, #68]	@ (900126b4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
9001266e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012672:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90012674:	4604      	mov	r4, r0
90012676:	881b      	ldrh	r3, [r3, #0]
90012678:	428b      	cmp	r3, r1
9001267a:	d918      	bls.n	900126ae <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
9001267c:	6803      	ldr	r3, [r0, #0]
9001267e:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90012680:	4b0d      	ldr	r3, [pc, #52]	@ (900126b8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90012682:	6818      	ldr	r0, [r3, #0]
90012684:	f7f3 fa5e 	bl	90005b44 <_ZNK8touchgfx5Texts7getTextEt>
90012688:	6823      	ldr	r3, [r4, #0]
9001268a:	4606      	mov	r6, r0
9001268c:	4620      	mov	r0, r4
9001268e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90012690:	4798      	blx	r3
90012692:	6823      	ldr	r3, [r4, #0]
90012694:	4607      	mov	r7, r0
90012696:	4620      	mov	r0, r4
90012698:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9001269c:	4798      	blx	r3
9001269e:	463a      	mov	r2, r7
900126a0:	4603      	mov	r3, r0
900126a2:	4631      	mov	r1, r6
900126a4:	4620      	mov	r0, r4
900126a6:	46ac      	mov	ip, r5
900126a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900126ac:	4760      	bx	ip
900126ae:	2000      	movs	r0, #0
900126b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900126b4:	24021910 	.word	0x24021910
900126b8:	24021918 	.word	0x24021918

900126bc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
900126bc:	4b18      	ldr	r3, [pc, #96]	@ (90012720 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
900126be:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
900126c2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900126c4:	4604      	mov	r4, r0
900126c6:	881b      	ldrh	r3, [r3, #0]
900126c8:	428b      	cmp	r3, r1
900126ca:	d926      	bls.n	9001271a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
900126cc:	4b15      	ldr	r3, [pc, #84]	@ (90012724 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
900126ce:	681b      	ldr	r3, [r3, #0]
900126d0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
900126d4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
900126d8:	4b13      	ldr	r3, [pc, #76]	@ (90012728 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
900126da:	7855      	ldrb	r5, [r2, #1]
900126dc:	681b      	ldr	r3, [r3, #0]
900126de:	f3c5 0581 	ubfx	r5, r5, #2, #2
900126e2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
900126e6:	6833      	ldr	r3, [r6, #0]
900126e8:	69df      	ldr	r7, [r3, #28]
900126ea:	4b10      	ldr	r3, [pc, #64]	@ (9001272c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
900126ec:	6818      	ldr	r0, [r3, #0]
900126ee:	f7f3 fa29 	bl	90005b44 <_ZNK8touchgfx5Texts7getTextEt>
900126f2:	6823      	ldr	r3, [r4, #0]
900126f4:	4680      	mov	r8, r0
900126f6:	4620      	mov	r0, r4
900126f8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900126fa:	4798      	blx	r3
900126fc:	6823      	ldr	r3, [r4, #0]
900126fe:	4681      	mov	r9, r0
90012700:	4620      	mov	r0, r4
90012702:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90012706:	4798      	blx	r3
90012708:	464b      	mov	r3, r9
9001270a:	9000      	str	r0, [sp, #0]
9001270c:	4642      	mov	r2, r8
9001270e:	4629      	mov	r1, r5
90012710:	4630      	mov	r0, r6
90012712:	47b8      	blx	r7
90012714:	b003      	add	sp, #12
90012716:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001271a:	2000      	movs	r0, #0
9001271c:	e7fa      	b.n	90012714 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
9001271e:	bf00      	nop
90012720:	24021910 	.word	0x24021910
90012724:	2402190c 	.word	0x2402190c
90012728:	24021914 	.word	0x24021914
9001272c:	24021918 	.word	0x24021918

90012730 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90012730:	b40e      	push	{r1, r2, r3}
90012732:	4b30      	ldr	r3, [pc, #192]	@ (900127f4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90012734:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012738:	881a      	ldrh	r2, [r3, #0]
9001273a:	b09d      	sub	sp, #116	@ 0x74
9001273c:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
9001273e:	4604      	mov	r4, r0
90012740:	429a      	cmp	r2, r3
90012742:	d954      	bls.n	900127ee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90012744:	aa26      	add	r2, sp, #152	@ 0x98
90012746:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 900127f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9001274a:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 900127fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
9001274e:	9202      	str	r2, [sp, #8]
90012750:	f8d9 2000 	ldr.w	r2, [r9]
90012754:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90012758:	f8d8 3000 	ldr.w	r3, [r8]
9001275c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90012760:	682b      	ldr	r3, [r5, #0]
90012762:	4628      	mov	r0, r5
90012764:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012766:	4798      	blx	r3
90012768:	4606      	mov	r6, r0
9001276a:	b207      	sxth	r7, r0
9001276c:	a803      	add	r0, sp, #12
9001276e:	f004 fec2 	bl	900174f6 <_ZN8touchgfx12TextProviderC1Ev>
90012772:	682b      	ldr	r3, [r5, #0]
90012774:	4628      	mov	r0, r5
90012776:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90012778:	4798      	blx	r3
9001277a:	682b      	ldr	r3, [r5, #0]
9001277c:	4682      	mov	sl, r0
9001277e:	4628      	mov	r0, r5
90012780:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90012782:	4798      	blx	r3
90012784:	4653      	mov	r3, sl
90012786:	9000      	str	r0, [sp, #0]
90012788:	a803      	add	r0, sp, #12
9001278a:	9a02      	ldr	r2, [sp, #8]
9001278c:	9925      	ldr	r1, [sp, #148]	@ 0x94
9001278e:	f004 ff05 	bl	9001759c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90012792:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90012794:	f8d9 3000 	ldr.w	r3, [r9]
90012798:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
9001279c:	8925      	ldrh	r5, [r4, #8]
9001279e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
900127a2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
900127a6:	eba5 050c 	sub.w	r5, r5, ip
900127aa:	784a      	ldrb	r2, [r1, #1]
900127ac:	f8d8 3000 	ldr.w	r3, [r8]
900127b0:	b22d      	sxth	r5, r5
900127b2:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
900127b6:	f3c2 0281 	ubfx	r2, r2, #2, #2
900127ba:	9500      	str	r5, [sp, #0]
900127bc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
900127c0:	a803      	add	r0, sp, #12
900127c2:	f002 f90d 	bl	900149e0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
900127c6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
900127ca:	b203      	sxth	r3, r0
900127cc:	18b9      	adds	r1, r7, r2
900127ce:	2900      	cmp	r1, #0
900127d0:	dd0b      	ble.n	900127ea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
900127d2:	3b01      	subs	r3, #1
900127d4:	fb13 f302 	smulbb	r3, r3, r2
900127d8:	fb16 3300 	smlabb	r3, r6, r0, r3
900127dc:	b21f      	sxth	r7, r3
900127de:	4638      	mov	r0, r7
900127e0:	b01d      	add	sp, #116	@ 0x74
900127e2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900127e6:	b003      	add	sp, #12
900127e8:	4770      	bx	lr
900127ea:	2b00      	cmp	r3, #0
900127ec:	dcf7      	bgt.n	900127de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900127ee:	2700      	movs	r7, #0
900127f0:	e7f5      	b.n	900127de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
900127f2:	bf00      	nop
900127f4:	24021910 	.word	0x24021910
900127f8:	2402190c 	.word	0x2402190c
900127fc:	24021914 	.word	0x24021914

90012800 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90012800:	b538      	push	{r3, r4, r5, lr}
90012802:	4b0e      	ldr	r3, [pc, #56]	@ (9001283c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90012804:	4604      	mov	r4, r0
90012806:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90012808:	881b      	ldrh	r3, [r3, #0]
9001280a:	429a      	cmp	r2, r3
9001280c:	d214      	bcs.n	90012838 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
9001280e:	6803      	ldr	r3, [r0, #0]
90012810:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90012812:	4798      	blx	r3
90012814:	6823      	ldr	r3, [r4, #0]
90012816:	4605      	mov	r5, r0
90012818:	4620      	mov	r0, r4
9001281a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
9001281c:	4798      	blx	r3
9001281e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90012822:	b22d      	sxth	r5, r5
90012824:	4601      	mov	r1, r0
90012826:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9001282a:	bf06      	itte	eq
9001282c:	4602      	moveq	r2, r0
9001282e:	4629      	moveq	r1, r5
90012830:	462a      	movne	r2, r5
90012832:	4620      	mov	r0, r4
90012834:	f7fd f933 	bl	9000fa9e <_ZN8touchgfx8Drawable14setWidthHeightEss>
90012838:	bd38      	pop	{r3, r4, r5, pc}
9001283a:	bf00      	nop
9001283c:	24021910 	.word	0x24021910

90012840 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90012840:	b530      	push	{r4, r5, lr}
90012842:	888b      	ldrh	r3, [r1, #4]
90012844:	b085      	sub	sp, #20
90012846:	4604      	mov	r4, r0
90012848:	8583      	strh	r3, [r0, #44]	@ 0x2c
9001284a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001284e:	b923      	cbnz	r3, 9001285a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012850:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90012854:	b90b      	cbnz	r3, 9001285a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012856:	f7ff ffd3 	bl	90012800 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001285a:	6823      	ldr	r3, [r4, #0]
9001285c:	466d      	mov	r5, sp
9001285e:	4621      	mov	r1, r4
90012860:	343c      	adds	r4, #60	@ 0x3c
90012862:	4628      	mov	r0, r5
90012864:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90012868:	4798      	blx	r3
9001286a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9001286e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90012872:	b005      	add	sp, #20
90012874:	bd30      	pop	{r4, r5, pc}

90012876 <_ZNK8touchgfx3Box12getSolidRectEv>:
90012876:	2300      	movs	r3, #0
90012878:	8083      	strh	r3, [r0, #4]
9001287a:	80c3      	strh	r3, [r0, #6]
9001287c:	8003      	strh	r3, [r0, #0]
9001287e:	8043      	strh	r3, [r0, #2]
90012880:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
90012884:	2bff      	cmp	r3, #255	@ 0xff
90012886:	bf01      	itttt	eq
90012888:	890b      	ldrheq	r3, [r1, #8]
9001288a:	8083      	strheq	r3, [r0, #4]
9001288c:	894b      	ldrheq	r3, [r1, #10]
9001288e:	80c3      	strheq	r3, [r0, #6]
90012890:	4770      	bx	lr
	...

90012894 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90012894:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012896:	4604      	mov	r4, r0
90012898:	466b      	mov	r3, sp
9001289a:	6808      	ldr	r0, [r1, #0]
9001289c:	6849      	ldr	r1, [r1, #4]
9001289e:	c303      	stmia	r3!, {r0, r1}
900128a0:	6823      	ldr	r3, [r4, #0]
900128a2:	4669      	mov	r1, sp
900128a4:	4620      	mov	r0, r4
900128a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900128a8:	4798      	blx	r3
900128aa:	4b08      	ldr	r3, [pc, #32]	@ (900128cc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
900128ac:	681b      	ldr	r3, [r3, #0]
900128ae:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900128b2:	b10a      	cbz	r2, 900128b8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
900128b4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900128b6:	b900      	cbnz	r0, 900128ba <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
900128b8:	6898      	ldr	r0, [r3, #8]
900128ba:	6803      	ldr	r3, [r0, #0]
900128bc:	4669      	mov	r1, sp
900128be:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900128c0:	6a1d      	ldr	r5, [r3, #32]
900128c2:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
900128c6:	47a8      	blx	r5
900128c8:	b003      	add	sp, #12
900128ca:	bd30      	pop	{r4, r5, pc}
900128cc:	240218b4 	.word	0x240218b4

900128d0 <_ZN8touchgfx3BoxD1Ev>:
900128d0:	4770      	bx	lr

900128d2 <_ZN8touchgfx3BoxD0Ev>:
900128d2:	b510      	push	{r4, lr}
900128d4:	4604      	mov	r4, r0
900128d6:	212c      	movs	r1, #44	@ 0x2c
900128d8:	f015 f9d6 	bl	90027c88 <_ZdlPvj>
900128dc:	4620      	mov	r0, r4
900128de:	bd10      	pop	{r4, pc}

900128e0 <_ZNK8touchgfx3Box17invalidateContentEv>:
900128e0:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
900128e4:	b12a      	cbz	r2, 900128f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900128e6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900128ea:	b112      	cbz	r2, 900128f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900128ec:	6803      	ldr	r3, [r0, #0]
900128ee:	695b      	ldr	r3, [r3, #20]
900128f0:	4718      	bx	r3
900128f2:	4770      	bx	lr

900128f4 <_ZN8touchgfx6ButtonD1Ev>:
900128f4:	4770      	bx	lr

900128f6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
900128f6:	b570      	push	{r4, r5, r6, lr}
900128f8:	880b      	ldrh	r3, [r1, #0]
900128fa:	4605      	mov	r5, r0
900128fc:	4604      	mov	r4, r0
900128fe:	85c3      	strh	r3, [r0, #46]	@ 0x2e
90012900:	8813      	ldrh	r3, [r2, #0]
90012902:	f825 3f30 	strh.w	r3, [r5, #48]!
90012906:	4628      	mov	r0, r5
90012908:	f006 f968 	bl	90018bdc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001290c:	4606      	mov	r6, r0
9001290e:	4628      	mov	r0, r5
90012910:	f006 f998 	bl	90018c44 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012914:	6823      	ldr	r3, [r4, #0]
90012916:	4605      	mov	r5, r0
90012918:	4631      	mov	r1, r6
9001291a:	4620      	mov	r0, r4
9001291c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001291e:	4798      	blx	r3
90012920:	6823      	ldr	r3, [r4, #0]
90012922:	4629      	mov	r1, r5
90012924:	4620      	mov	r0, r4
90012926:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012928:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001292c:	4718      	bx	r3

9001292e <_ZN8touchgfx6ButtonD0Ev>:
9001292e:	b510      	push	{r4, lr}
90012930:	4604      	mov	r4, r0
90012932:	2134      	movs	r1, #52	@ 0x34
90012934:	f015 f9a8 	bl	90027c88 <_ZdlPvj>
90012938:	4620      	mov	r0, r4
9001293a:	bd10      	pop	{r4, pc}

9001293c <_ZNK8touchgfx6Button12getSolidRectEv>:
9001293c:	b510      	push	{r4, lr}
9001293e:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
90012942:	4604      	mov	r4, r0
90012944:	2bff      	cmp	r3, #255	@ 0xff
90012946:	d006      	beq.n	90012956 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90012948:	2300      	movs	r3, #0
9001294a:	8003      	strh	r3, [r0, #0]
9001294c:	8043      	strh	r3, [r0, #2]
9001294e:	8083      	strh	r3, [r0, #4]
90012950:	80c3      	strh	r3, [r0, #6]
90012952:	4620      	mov	r0, r4
90012954:	bd10      	pop	{r4, pc}
90012956:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
9001295a:	b11b      	cbz	r3, 90012964 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
9001295c:	3130      	adds	r1, #48	@ 0x30
9001295e:	f006 f9a5 	bl	90018cac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012962:	e7f6      	b.n	90012952 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90012964:	312e      	adds	r1, #46	@ 0x2e
90012966:	e7fa      	b.n	9001295e <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

90012968 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90012968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001296c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90012970:	b08a      	sub	sp, #40	@ 0x28
90012972:	4604      	mov	r4, r0
90012974:	4688      	mov	r8, r1
90012976:	2b00      	cmp	r3, #0
90012978:	d066      	beq.n	90012a48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9001297a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
9001297c:	a805      	add	r0, sp, #20
9001297e:	f8ad 3014 	strh.w	r3, [sp, #20]
90012982:	f006 f92b 	bl	90018bdc <_ZNK8touchgfx6Bitmap8getWidthEv>
90012986:	4607      	mov	r7, r0
90012988:	a805      	add	r0, sp, #20
9001298a:	f006 f95b 	bl	90018c44 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001298e:	f9b8 6000 	ldrsh.w	r6, [r8]
90012992:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90012996:	2300      	movs	r3, #0
90012998:	4432      	add	r2, r6
9001299a:	9306      	str	r3, [sp, #24]
9001299c:	b292      	uxth	r2, r2
9001299e:	fa0f fc82 	sxth.w	ip, r2
900129a2:	459c      	cmp	ip, r3
900129a4:	dd52      	ble.n	90012a4c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900129a6:	42b7      	cmp	r7, r6
900129a8:	dd50      	ble.n	90012a4c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900129aa:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
900129ae:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900129b2:	442b      	add	r3, r5
900129b4:	b29b      	uxth	r3, r3
900129b6:	b219      	sxth	r1, r3
900129b8:	2900      	cmp	r1, #0
900129ba:	dd47      	ble.n	90012a4c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900129bc:	42a8      	cmp	r0, r5
900129be:	dd45      	ble.n	90012a4c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900129c0:	4567      	cmp	r7, ip
900129c2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
900129c6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900129ca:	bfb8      	it	lt
900129cc:	b2ba      	uxthlt	r2, r7
900129ce:	4288      	cmp	r0, r1
900129d0:	f8ad 6018 	strh.w	r6, [sp, #24]
900129d4:	bfb8      	it	lt
900129d6:	b283      	uxthlt	r3, r0
900129d8:	1b92      	subs	r2, r2, r6
900129da:	f8ad 501a 	strh.w	r5, [sp, #26]
900129de:	1b5b      	subs	r3, r3, r5
900129e0:	f8ad 201c 	strh.w	r2, [sp, #28]
900129e4:	f8ad 301e 	strh.w	r3, [sp, #30]
900129e8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900129ec:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900129f0:	429a      	cmp	r2, r3
900129f2:	d026      	beq.n	90012a42 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900129f4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900129f8:	2b00      	cmp	r3, #0
900129fa:	dd22      	ble.n	90012a42 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900129fc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90012a00:	2b00      	cmp	r3, #0
90012a02:	dd1e      	ble.n	90012a42 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90012a04:	2300      	movs	r3, #0
90012a06:	a908      	add	r1, sp, #32
90012a08:	4620      	mov	r0, r4
90012a0a:	e9cd 3308 	strd	r3, r3, [sp, #32]
90012a0e:	6823      	ldr	r3, [r4, #0]
90012a10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012a12:	4798      	blx	r3
90012a14:	4b0f      	ldr	r3, [pc, #60]	@ (90012a54 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90012a16:	681b      	ldr	r3, [r3, #0]
90012a18:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90012a1c:	b10a      	cbz	r2, 90012a22 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90012a1e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90012a20:	b900      	cbnz	r0, 90012a24 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90012a22:	6898      	ldr	r0, [r3, #8]
90012a24:	2501      	movs	r5, #1
90012a26:	6801      	ldr	r1, [r0, #0]
90012a28:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
90012a2c:	9502      	str	r5, [sp, #8]
90012a2e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
90012a32:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90012a36:	9401      	str	r4, [sp, #4]
90012a38:	ac06      	add	r4, sp, #24
90012a3a:	9400      	str	r4, [sp, #0]
90012a3c:	688c      	ldr	r4, [r1, #8]
90012a3e:	a905      	add	r1, sp, #20
90012a40:	47a0      	blx	r4
90012a42:	b00a      	add	sp, #40	@ 0x28
90012a44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012a48:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
90012a4a:	e797      	b.n	9001297c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90012a4c:	2300      	movs	r3, #0
90012a4e:	9307      	str	r3, [sp, #28]
90012a50:	e7ca      	b.n	900129e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90012a52:	bf00      	nop
90012a54:	240218b4 	.word	0x240218b4

90012a58 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90012a58:	4b30      	ldr	r3, [pc, #192]	@ (90012b1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90012a5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012a5e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90012a60:	b08d      	sub	sp, #52	@ 0x34
90012a62:	881b      	ldrh	r3, [r3, #0]
90012a64:	4604      	mov	r4, r0
90012a66:	460f      	mov	r7, r1
90012a68:	4293      	cmp	r3, r2
90012a6a:	d954      	bls.n	90012b16 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90012a6c:	4b2c      	ldr	r3, [pc, #176]	@ (90012b20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90012a6e:	6819      	ldr	r1, [r3, #0]
90012a70:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90012a74:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90012a78:	4a2a      	ldr	r2, [pc, #168]	@ (90012b24 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90012a7a:	6812      	ldr	r2, [r2, #0]
90012a7c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90012a80:	2900      	cmp	r1, #0
90012a82:	d048      	beq.n	90012b16 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90012a84:	785a      	ldrb	r2, [r3, #1]
90012a86:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90012a8a:	f3c2 0801 	ubfx	r8, r2, #0, #2
90012a8e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90012a92:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90012a96:	4b24      	ldr	r3, [pc, #144]	@ (90012b28 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90012a98:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
90012a9c:	681a      	ldr	r2, [r3, #0]
90012a9e:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
90012aa2:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
90012aa6:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
90012aaa:	6b26      	ldr	r6, [r4, #48]	@ 0x30
90012aac:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
90012ab0:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
90012ab4:	9107      	str	r1, [sp, #28]
90012ab6:	f88d 8020 	strb.w	r8, [sp, #32]
90012aba:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
90012abe:	9609      	str	r6, [sp, #36]	@ 0x24
90012ac0:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
90012ac4:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
90012ac8:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
90012acc:	b10b      	cbz	r3, 90012ad2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90012ace:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
90012ad0:	b905      	cbnz	r5, 90012ad4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90012ad2:	6895      	ldr	r5, [r2, #8]
90012ad4:	ae05      	add	r6, sp, #20
90012ad6:	4621      	mov	r1, r4
90012ad8:	4630      	mov	r0, r6
90012ada:	f003 fd29 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012ade:	4b13      	ldr	r3, [pc, #76]	@ (90012b2c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90012ae0:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90012ae2:	6818      	ldr	r0, [r3, #0]
90012ae4:	f7f3 f82e 	bl	90005b44 <_ZNK8touchgfx5Texts7getTextEt>
90012ae8:	6823      	ldr	r3, [r4, #0]
90012aea:	4680      	mov	r8, r0
90012aec:	4620      	mov	r0, r4
90012aee:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90012af0:	4798      	blx	r3
90012af2:	6823      	ldr	r3, [r4, #0]
90012af4:	4681      	mov	r9, r0
90012af6:	4620      	mov	r0, r4
90012af8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90012afc:	4798      	blx	r3
90012afe:	ab07      	add	r3, sp, #28
90012b00:	f8cd 8004 	str.w	r8, [sp, #4]
90012b04:	9300      	str	r3, [sp, #0]
90012b06:	463b      	mov	r3, r7
90012b08:	e9cd 9002 	strd	r9, r0, [sp, #8]
90012b0c:	4628      	mov	r0, r5
90012b0e:	e896 0006 	ldmia.w	r6, {r1, r2}
90012b12:	f7f2 ffc7 	bl	90005aa4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90012b16:	b00d      	add	sp, #52	@ 0x34
90012b18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012b1c:	24021910 	.word	0x24021910
90012b20:	2402190c 	.word	0x2402190c
90012b24:	24021914 	.word	0x24021914
90012b28:	240218b4 	.word	0x240218b4
90012b2c:	24021918 	.word	0x24021918

90012b30 <_ZN8touchgfx5ImageD1Ev>:
90012b30:	4770      	bx	lr

90012b32 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90012b32:	b570      	push	{r4, r5, r6, lr}
90012b34:	880b      	ldrh	r3, [r1, #0]
90012b36:	460d      	mov	r5, r1
90012b38:	4604      	mov	r4, r0
90012b3a:	84c3      	strh	r3, [r0, #38]	@ 0x26
90012b3c:	4608      	mov	r0, r1
90012b3e:	f006 f84d 	bl	90018bdc <_ZNK8touchgfx6Bitmap8getWidthEv>
90012b42:	4606      	mov	r6, r0
90012b44:	4628      	mov	r0, r5
90012b46:	f006 f87d 	bl	90018c44 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012b4a:	6823      	ldr	r3, [r4, #0]
90012b4c:	4605      	mov	r5, r0
90012b4e:	4631      	mov	r1, r6
90012b50:	4620      	mov	r0, r4
90012b52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012b54:	4798      	blx	r3
90012b56:	6823      	ldr	r3, [r4, #0]
90012b58:	4629      	mov	r1, r5
90012b5a:	4620      	mov	r0, r4
90012b5c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012b5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012b62:	4718      	bx	r3

90012b64 <_ZN8touchgfx5ImageD0Ev>:
90012b64:	b510      	push	{r4, lr}
90012b66:	4604      	mov	r4, r0
90012b68:	212c      	movs	r1, #44	@ 0x2c
90012b6a:	f015 f88d 	bl	90027c88 <_ZdlPvj>
90012b6e:	4620      	mov	r0, r4
90012b70:	bd10      	pop	{r4, pc}

90012b72 <_ZNK8touchgfx5Image12getSolidRectEv>:
90012b72:	b510      	push	{r4, lr}
90012b74:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90012b78:	4604      	mov	r4, r0
90012b7a:	2bff      	cmp	r3, #255	@ 0xff
90012b7c:	d006      	beq.n	90012b8c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90012b7e:	2300      	movs	r3, #0
90012b80:	8003      	strh	r3, [r0, #0]
90012b82:	8043      	strh	r3, [r0, #2]
90012b84:	8083      	strh	r3, [r0, #4]
90012b86:	80c3      	strh	r3, [r0, #6]
90012b88:	4620      	mov	r0, r4
90012b8a:	bd10      	pop	{r4, pc}
90012b8c:	3126      	adds	r1, #38	@ 0x26
90012b8e:	f006 f88d 	bl	90018cac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012b92:	e7f9      	b.n	90012b88 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90012b94 <_ZNK8touchgfx5Image17invalidateContentEv>:
90012b94:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90012b98:	b12a      	cbz	r2, 90012ba6 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012b9a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90012b9e:	b112      	cbz	r2, 90012ba6 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012ba0:	6803      	ldr	r3, [r0, #0]
90012ba2:	695b      	ldr	r3, [r3, #20]
90012ba4:	4718      	bx	r3
90012ba6:	4770      	bx	lr

90012ba8 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90012ba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012bac:	4604      	mov	r4, r0
90012bae:	b088      	sub	sp, #32
90012bb0:	2500      	movs	r5, #0
90012bb2:	460f      	mov	r7, r1
90012bb4:	f854 3b26 	ldr.w	r3, [r4], #38
90012bb8:	a904      	add	r1, sp, #16
90012bba:	4606      	mov	r6, r0
90012bbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012bbe:	e9cd 5504 	strd	r5, r5, [sp, #16]
90012bc2:	4798      	blx	r3
90012bc4:	4620      	mov	r0, r4
90012bc6:	f006 f809 	bl	90018bdc <_ZNK8touchgfx6Bitmap8getWidthEv>
90012bca:	4680      	mov	r8, r0
90012bcc:	4620      	mov	r0, r4
90012bce:	f006 f839 	bl	90018c44 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012bd2:	9506      	str	r5, [sp, #24]
90012bd4:	ad06      	add	r5, sp, #24
90012bd6:	f8ad 001e 	strh.w	r0, [sp, #30]
90012bda:	4639      	mov	r1, r7
90012bdc:	f8ad 801c 	strh.w	r8, [sp, #28]
90012be0:	4628      	mov	r0, r5
90012be2:	f7fc fd35 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
90012be6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90012bea:	2b00      	cmp	r3, #0
90012bec:	dd19      	ble.n	90012c22 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90012bee:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90012bf2:	2b00      	cmp	r3, #0
90012bf4:	dd15      	ble.n	90012c22 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90012bf6:	4b0c      	ldr	r3, [pc, #48]	@ (90012c28 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90012bf8:	681b      	ldr	r3, [r3, #0]
90012bfa:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90012bfe:	b10a      	cbz	r2, 90012c04 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90012c00:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90012c02:	b900      	cbnz	r0, 90012c06 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90012c04:	6898      	ldr	r0, [r3, #8]
90012c06:	2701      	movs	r7, #1
90012c08:	6801      	ldr	r1, [r0, #0]
90012c0a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90012c0e:	9702      	str	r7, [sp, #8]
90012c10:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
90012c14:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90012c18:	e9cd 5600 	strd	r5, r6, [sp]
90012c1c:	688d      	ldr	r5, [r1, #8]
90012c1e:	4621      	mov	r1, r4
90012c20:	47a8      	blx	r5
90012c22:	b008      	add	sp, #32
90012c24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012c28:	240218b4 	.word	0x240218b4

90012c2c <_ZN8touchgfx7OutlineD1Ev>:
90012c2c:	4770      	bx	lr

90012c2e <_ZN8touchgfx7OutlineD0Ev>:
90012c2e:	b510      	push	{r4, lr}
90012c30:	4604      	mov	r4, r0
90012c32:	2130      	movs	r1, #48	@ 0x30
90012c34:	f015 f828 	bl	90027c88 <_ZdlPvj>
90012c38:	4620      	mov	r0, r4
90012c3a:	bd10      	pop	{r4, pc}

90012c3c <_ZN8touchgfx7Outline5resetEv>:
90012c3c:	b510      	push	{r4, lr}
90012c3e:	4604      	mov	r4, r0
90012c40:	f000 fe72 	bl	90013928 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90012c44:	60e0      	str	r0, [r4, #12]
90012c46:	f000 fe75 	bl	90013934 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90012c4a:	68e3      	ldr	r3, [r4, #12]
90012c4c:	08c0      	lsrs	r0, r0, #3
90012c4e:	2200      	movs	r2, #0
90012c50:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90012c54:	6123      	str	r3, [r4, #16]
90012c56:	3801      	subs	r0, #1
90012c58:	60a2      	str	r2, [r4, #8]
90012c5a:	6060      	str	r0, [r4, #4]
90012c5c:	8019      	strh	r1, [r3, #0]
90012c5e:	8059      	strh	r1, [r3, #2]
90012c60:	809a      	strh	r2, [r3, #4]
90012c62:	80da      	strh	r2, [r3, #6]
90012c64:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90012c66:	f023 0301 	bic.w	r3, r3, #1
90012c6a:	f043 0302 	orr.w	r3, r3, #2
90012c6e:	6263      	str	r3, [r4, #36]	@ 0x24
90012c70:	bd10      	pop	{r4, pc}
	...

90012c74 <_ZN8touchgfx7OutlineC1Ev>:
90012c74:	4b0a      	ldr	r3, [pc, #40]	@ (90012ca0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90012c76:	b510      	push	{r4, lr}
90012c78:	6003      	str	r3, [r0, #0]
90012c7a:	2300      	movs	r3, #0
90012c7c:	4604      	mov	r4, r0
90012c7e:	6243      	str	r3, [r0, #36]	@ 0x24
90012c80:	e9c0 3301 	strd	r3, r3, [r0, #4]
90012c84:	e9c0 3303 	strd	r3, r3, [r0, #12]
90012c88:	e9c0 3305 	strd	r3, r3, [r0, #20]
90012c8c:	e9c0 3307 	strd	r3, r3, [r0, #28]
90012c90:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90012c94:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90012c98:	f7ff ffd0 	bl	90012c3c <_ZN8touchgfx7Outline5resetEv>
90012c9c:	4620      	mov	r0, r4
90012c9e:	bd10      	pop	{r4, pc}
90012ca0:	9002c23c 	.word	0x9002c23c

90012ca4 <_ZN8touchgfx7Outline10renderLineEiiii>:
90012ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012ca8:	b093      	sub	sp, #76	@ 0x4c
90012caa:	1156      	asrs	r6, r2, #5
90012cac:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90012cae:	9305      	str	r3, [sp, #20]
90012cb0:	1153      	asrs	r3, r2, #5
90012cb2:	f004 051f 	and.w	r5, r4, #31
90012cb6:	9303      	str	r3, [sp, #12]
90012cb8:	1163      	asrs	r3, r4, #5
90012cba:	9504      	str	r5, [sp, #16]
90012cbc:	1165      	asrs	r5, r4, #5
90012cbe:	9306      	str	r3, [sp, #24]
90012cc0:	f002 031f 	and.w	r3, r2, #31
90012cc4:	42ae      	cmp	r6, r5
90012cc6:	f040 80f4 	bne.w	90012eb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90012cca:	9c04      	ldr	r4, [sp, #16]
90012ccc:	9a05      	ldr	r2, [sp, #20]
90012cce:	42a3      	cmp	r3, r4
90012cd0:	ea4f 1e62 	mov.w	lr, r2, asr #5
90012cd4:	6902      	ldr	r2, [r0, #16]
90012cd6:	d125      	bne.n	90012d24 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90012cd8:	f9b2 3000 	ldrsh.w	r3, [r2]
90012cdc:	459e      	cmp	lr, r3
90012cde:	d103      	bne.n	90012ce8 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90012ce0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90012ce4:	429e      	cmp	r6, r3
90012ce6:	d035      	beq.n	90012d54 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012ce8:	88d1      	ldrh	r1, [r2, #6]
90012cea:	8893      	ldrh	r3, [r2, #4]
90012cec:	430b      	orrs	r3, r1
90012cee:	d010      	beq.n	90012d12 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012cf0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90012cf4:	2b00      	cmp	r3, #0
90012cf6:	db0c      	blt.n	90012d12 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012cf8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90012cfa:	428b      	cmp	r3, r1
90012cfc:	da09      	bge.n	90012d12 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012cfe:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90012d02:	428b      	cmp	r3, r1
90012d04:	f103 0301 	add.w	r3, r3, #1
90012d08:	bf38      	it	cc
90012d0a:	3208      	addcc	r2, #8
90012d0c:	6083      	str	r3, [r0, #8]
90012d0e:	bf38      	it	cc
90012d10:	6102      	strcc	r2, [r0, #16]
90012d12:	6903      	ldr	r3, [r0, #16]
90012d14:	9a03      	ldr	r2, [sp, #12]
90012d16:	f8a3 e000 	strh.w	lr, [r3]
90012d1a:	805a      	strh	r2, [r3, #2]
90012d1c:	2200      	movs	r2, #0
90012d1e:	809a      	strh	r2, [r3, #4]
90012d20:	80da      	strh	r2, [r3, #6]
90012d22:	e017      	b.n	90012d54 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012d24:	9c05      	ldr	r4, [sp, #20]
90012d26:	114e      	asrs	r6, r1, #5
90012d28:	f001 0c1f 	and.w	ip, r1, #31
90012d2c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90012d30:	f004 041f 	and.w	r4, r4, #31
90012d34:	4576      	cmp	r6, lr
90012d36:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90012d3a:	9402      	str	r4, [sp, #8]
90012d3c:	9c04      	ldr	r4, [sp, #16]
90012d3e:	eba4 0403 	sub.w	r4, r4, r3
90012d42:	d10a      	bne.n	90012d5a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90012d44:	9b02      	ldr	r3, [sp, #8]
90012d46:	44a0      	add	r8, r4
90012d48:	449c      	add	ip, r3
90012d4a:	f8a2 8004 	strh.w	r8, [r2, #4]
90012d4e:	fb04 a40c 	mla	r4, r4, ip, sl
90012d52:	80d4      	strh	r4, [r2, #6]
90012d54:	b013      	add	sp, #76	@ 0x4c
90012d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012d5a:	9d05      	ldr	r5, [sp, #20]
90012d5c:	1a69      	subs	r1, r5, r1
90012d5e:	bf51      	iteee	pl
90012d60:	f1cc 0520 	rsbpl	r5, ip, #32
90012d64:	fb04 f40c 	mulmi.w	r4, r4, ip
90012d68:	4249      	negmi	r1, r1
90012d6a:	2500      	movmi	r5, #0
90012d6c:	bf5d      	ittte	pl
90012d6e:	436c      	mulpl	r4, r5
90012d70:	2520      	movpl	r5, #32
90012d72:	f04f 0901 	movpl.w	r9, #1
90012d76:	f04f 39ff 	movmi.w	r9, #4294967295
90012d7a:	9501      	str	r5, [sp, #4]
90012d7c:	9f01      	ldr	r7, [sp, #4]
90012d7e:	444e      	add	r6, r9
90012d80:	fb94 f5f1 	sdiv	r5, r4, r1
90012d84:	fb01 4415 	mls	r4, r1, r5, r4
90012d88:	44bc      	add	ip, r7
90012d8a:	2c00      	cmp	r4, #0
90012d8c:	bfbc      	itt	lt
90012d8e:	f105 35ff 	addlt.w	r5, r5, #4294967295
90012d92:	1864      	addlt	r4, r4, r1
90012d94:	44a8      	add	r8, r5
90012d96:	fb05 ac0c 	mla	ip, r5, ip, sl
90012d9a:	f8a2 8004 	strh.w	r8, [r2, #4]
90012d9e:	f8a2 c006 	strh.w	ip, [r2, #6]
90012da2:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012da6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90012daa:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90012dae:	ea58 0202 	orrs.w	r2, r8, r2
90012db2:	d011      	beq.n	90012dd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012db4:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90012db8:	f1b8 0f00 	cmp.w	r8, #0
90012dbc:	db0c      	blt.n	90012dd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012dbe:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90012dc0:	4590      	cmp	r8, r2
90012dc2:	da09      	bge.n	90012dd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012dc4:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90012dc8:	4590      	cmp	r8, r2
90012dca:	bf3c      	itt	cc
90012dcc:	f10c 0208 	addcc.w	r2, ip, #8
90012dd0:	6102      	strcc	r2, [r0, #16]
90012dd2:	f108 0201 	add.w	r2, r8, #1
90012dd6:	6082      	str	r2, [r0, #8]
90012dd8:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012ddc:	2700      	movs	r7, #0
90012dde:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90012de2:	45b6      	cmp	lr, r6
90012de4:	f8ac 6000 	strh.w	r6, [ip]
90012de8:	442b      	add	r3, r5
90012dea:	f8ac 2002 	strh.w	r2, [ip, #2]
90012dee:	f8ac 7004 	strh.w	r7, [ip, #4]
90012df2:	f8ac 7006 	strh.w	r7, [ip, #6]
90012df6:	d04b      	beq.n	90012e90 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90012df8:	9f04      	ldr	r7, [sp, #16]
90012dfa:	1a64      	subs	r4, r4, r1
90012dfc:	f04f 0a00 	mov.w	sl, #0
90012e00:	1aff      	subs	r7, r7, r3
90012e02:	443d      	add	r5, r7
90012e04:	016d      	lsls	r5, r5, #5
90012e06:	fb95 f8f1 	sdiv	r8, r5, r1
90012e0a:	fb01 5518 	mls	r5, r1, r8, r5
90012e0e:	2d00      	cmp	r5, #0
90012e10:	bfbc      	itt	lt
90012e12:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012e16:	186d      	addlt	r5, r5, r1
90012e18:	f108 0701 	add.w	r7, r8, #1
90012e1c:	9703      	str	r7, [sp, #12]
90012e1e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012e22:	1964      	adds	r4, r4, r5
90012e24:	444e      	add	r6, r9
90012e26:	bf54      	ite	pl
90012e28:	9f03      	ldrpl	r7, [sp, #12]
90012e2a:	4647      	movmi	r7, r8
90012e2c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90012e30:	bf58      	it	pl
90012e32:	1a64      	subpl	r4, r4, r1
90012e34:	443b      	add	r3, r7
90012e36:	44bb      	add	fp, r7
90012e38:	f8ac b004 	strh.w	fp, [ip, #4]
90012e3c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012e40:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012e44:	f8ac b006 	strh.w	fp, [ip, #6]
90012e48:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012e4c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012e50:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012e54:	ea5b 0707 	orrs.w	r7, fp, r7
90012e58:	d011      	beq.n	90012e7e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012e5a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90012e5e:	f1bb 0f00 	cmp.w	fp, #0
90012e62:	db0c      	blt.n	90012e7e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012e64:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90012e66:	45bb      	cmp	fp, r7
90012e68:	da09      	bge.n	90012e7e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012e6a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90012e6e:	45bb      	cmp	fp, r7
90012e70:	bf3c      	itt	cc
90012e72:	f10c 0708 	addcc.w	r7, ip, #8
90012e76:	6107      	strcc	r7, [r0, #16]
90012e78:	f10b 0701 	add.w	r7, fp, #1
90012e7c:	6087      	str	r7, [r0, #8]
90012e7e:	6907      	ldr	r7, [r0, #16]
90012e80:	45b6      	cmp	lr, r6
90012e82:	803e      	strh	r6, [r7, #0]
90012e84:	807a      	strh	r2, [r7, #2]
90012e86:	f8a7 a004 	strh.w	sl, [r7, #4]
90012e8a:	f8a7 a006 	strh.w	sl, [r7, #6]
90012e8e:	d1c6      	bne.n	90012e1e <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90012e90:	9a04      	ldr	r2, [sp, #16]
90012e92:	1ad3      	subs	r3, r2, r3
90012e94:	6902      	ldr	r2, [r0, #16]
90012e96:	8891      	ldrh	r1, [r2, #4]
90012e98:	88d6      	ldrh	r6, [r2, #6]
90012e9a:	4419      	add	r1, r3
90012e9c:	8091      	strh	r1, [r2, #4]
90012e9e:	9902      	ldr	r1, [sp, #8]
90012ea0:	f101 0c20 	add.w	ip, r1, #32
90012ea4:	9901      	ldr	r1, [sp, #4]
90012ea6:	ebac 0c01 	sub.w	ip, ip, r1
90012eaa:	fb03 630c 	mla	r3, r3, ip, r6
90012eae:	80d3      	strh	r3, [r2, #6]
90012eb0:	e750      	b.n	90012d54 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012eb2:	9d05      	ldr	r5, [sp, #20]
90012eb4:	1aa2      	subs	r2, r4, r2
90012eb6:	eba5 0501 	sub.w	r5, r5, r1
90012eba:	9202      	str	r2, [sp, #8]
90012ebc:	9508      	str	r5, [sp, #32]
90012ebe:	f140 8128 	bpl.w	90013112 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90012ec2:	9a03      	ldr	r2, [sp, #12]
90012ec4:	2a00      	cmp	r2, #0
90012ec6:	f6ff af45 	blt.w	90012d54 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012eca:	9a02      	ldr	r2, [sp, #8]
90012ecc:	f04f 34ff 	mov.w	r4, #4294967295
90012ed0:	4252      	negs	r2, r2
90012ed2:	940b      	str	r4, [sp, #44]	@ 0x2c
90012ed4:	2400      	movs	r4, #0
90012ed6:	9202      	str	r2, [sp, #8]
90012ed8:	9a06      	ldr	r2, [sp, #24]
90012eda:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90012ede:	9206      	str	r2, [sp, #24]
90012ee0:	462a      	mov	r2, r5
90012ee2:	435a      	muls	r2, r3
90012ee4:	9401      	str	r4, [sp, #4]
90012ee6:	9c02      	ldr	r4, [sp, #8]
90012ee8:	9d02      	ldr	r5, [sp, #8]
90012eea:	fb92 f4f4 	sdiv	r4, r2, r4
90012eee:	fb05 2214 	mls	r2, r5, r4, r2
90012ef2:	2a00      	cmp	r2, #0
90012ef4:	9207      	str	r2, [sp, #28]
90012ef6:	bfbc      	itt	lt
90012ef8:	1952      	addlt	r2, r2, r5
90012efa:	f104 34ff 	addlt.w	r4, r4, #4294967295
90012efe:	6905      	ldr	r5, [r0, #16]
90012f00:	bfb8      	it	lt
90012f02:	9207      	strlt	r2, [sp, #28]
90012f04:	eb04 0901 	add.w	r9, r4, r1
90012f08:	9a01      	ldr	r2, [sp, #4]
90012f0a:	ea4f 1669 	mov.w	r6, r9, asr #5
90012f0e:	429a      	cmp	r2, r3
90012f10:	f040 8111 	bne.w	90013136 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90012f14:	f9b5 3000 	ldrsh.w	r3, [r5]
90012f18:	429e      	cmp	r6, r3
90012f1a:	d104      	bne.n	90012f26 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90012f1c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90012f20:	9a03      	ldr	r2, [sp, #12]
90012f22:	429a      	cmp	r2, r3
90012f24:	d01b      	beq.n	90012f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012f26:	88ea      	ldrh	r2, [r5, #6]
90012f28:	88ab      	ldrh	r3, [r5, #4]
90012f2a:	4313      	orrs	r3, r2
90012f2c:	d010      	beq.n	90012f50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012f2e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90012f32:	2a00      	cmp	r2, #0
90012f34:	db0c      	blt.n	90012f50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012f36:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90012f38:	429a      	cmp	r2, r3
90012f3a:	da09      	bge.n	90012f50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012f3c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90012f40:	429a      	cmp	r2, r3
90012f42:	f102 0201 	add.w	r2, r2, #1
90012f46:	bf38      	it	cc
90012f48:	3508      	addcc	r5, #8
90012f4a:	6082      	str	r2, [r0, #8]
90012f4c:	bf38      	it	cc
90012f4e:	6105      	strcc	r5, [r0, #16]
90012f50:	6903      	ldr	r3, [r0, #16]
90012f52:	9a03      	ldr	r2, [sp, #12]
90012f54:	801e      	strh	r6, [r3, #0]
90012f56:	805a      	strh	r2, [r3, #2]
90012f58:	2200      	movs	r2, #0
90012f5a:	809a      	strh	r2, [r3, #4]
90012f5c:	80da      	strh	r2, [r3, #6]
90012f5e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90012f60:	9a03      	ldr	r2, [sp, #12]
90012f62:	6901      	ldr	r1, [r0, #16]
90012f64:	441a      	add	r2, r3
90012f66:	f9b1 3000 	ldrsh.w	r3, [r1]
90012f6a:	42b3      	cmp	r3, r6
90012f6c:	d103      	bne.n	90012f76 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90012f6e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90012f72:	429a      	cmp	r2, r3
90012f74:	d01a      	beq.n	90012fac <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90012f76:	88cc      	ldrh	r4, [r1, #6]
90012f78:	888b      	ldrh	r3, [r1, #4]
90012f7a:	4323      	orrs	r3, r4
90012f7c:	d010      	beq.n	90012fa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012f7e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90012f82:	2c00      	cmp	r4, #0
90012f84:	db0c      	blt.n	90012fa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012f86:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90012f88:	429c      	cmp	r4, r3
90012f8a:	da09      	bge.n	90012fa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012f8c:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90012f90:	429c      	cmp	r4, r3
90012f92:	f104 0401 	add.w	r4, r4, #1
90012f96:	bf38      	it	cc
90012f98:	3108      	addcc	r1, #8
90012f9a:	6084      	str	r4, [r0, #8]
90012f9c:	bf38      	it	cc
90012f9e:	6101      	strcc	r1, [r0, #16]
90012fa0:	6903      	ldr	r3, [r0, #16]
90012fa2:	2100      	movs	r1, #0
90012fa4:	801e      	strh	r6, [r3, #0]
90012fa6:	805a      	strh	r2, [r3, #2]
90012fa8:	8099      	strh	r1, [r3, #4]
90012faa:	80d9      	strh	r1, [r3, #6]
90012fac:	9b06      	ldr	r3, [sp, #24]
90012fae:	4293      	cmp	r3, r2
90012fb0:	f000 8082 	beq.w	900130b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90012fb4:	9b08      	ldr	r3, [sp, #32]
90012fb6:	9902      	ldr	r1, [sp, #8]
90012fb8:	015b      	lsls	r3, r3, #5
90012fba:	9c02      	ldr	r4, [sp, #8]
90012fbc:	fb93 f1f1 	sdiv	r1, r3, r1
90012fc0:	fb04 3311 	mls	r3, r4, r1, r3
90012fc4:	9103      	str	r1, [sp, #12]
90012fc6:	2b00      	cmp	r3, #0
90012fc8:	9308      	str	r3, [sp, #32]
90012fca:	da04      	bge.n	90012fd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90012fcc:	1e4b      	subs	r3, r1, #1
90012fce:	9303      	str	r3, [sp, #12]
90012fd0:	9b08      	ldr	r3, [sp, #32]
90012fd2:	4423      	add	r3, r4
90012fd4:	9308      	str	r3, [sp, #32]
90012fd6:	9b07      	ldr	r3, [sp, #28]
90012fd8:	464f      	mov	r7, r9
90012fda:	9902      	ldr	r1, [sp, #8]
90012fdc:	2600      	movs	r6, #0
90012fde:	1a5b      	subs	r3, r3, r1
90012fe0:	9307      	str	r3, [sp, #28]
90012fe2:	9b01      	ldr	r3, [sp, #4]
90012fe4:	f1c3 0320 	rsb	r3, r3, #32
90012fe8:	930e      	str	r3, [sp, #56]	@ 0x38
90012fea:	990e      	ldr	r1, [sp, #56]	@ 0x38
90012fec:	9b01      	ldr	r3, [sp, #4]
90012fee:	1a5b      	subs	r3, r3, r1
90012ff0:	930a      	str	r3, [sp, #40]	@ 0x28
90012ff2:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90012ff6:	185b      	adds	r3, r3, r1
90012ff8:	bf58      	it	pl
90012ffa:	9902      	ldrpl	r1, [sp, #8]
90012ffc:	9307      	str	r3, [sp, #28]
90012ffe:	bf57      	itett	pl
90013000:	1a5b      	subpl	r3, r3, r1
90013002:	9903      	ldrmi	r1, [sp, #12]
90013004:	9307      	strpl	r3, [sp, #28]
90013006:	9b03      	ldrpl	r3, [sp, #12]
90013008:	bf58      	it	pl
9001300a:	1c59      	addpl	r1, r3, #1
9001300c:	2a00      	cmp	r2, #0
9001300e:	4489      	add	r9, r1
90013010:	ea4f 1a69 	mov.w	sl, r9, asr #5
90013014:	db2e      	blt.n	90013074 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013016:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013018:	4293      	cmp	r3, r2
9001301a:	dd2b      	ble.n	90013074 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001301c:	9c01      	ldr	r4, [sp, #4]
9001301e:	6905      	ldr	r5, [r0, #16]
90013020:	46a0      	mov	r8, r4
90013022:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90013024:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90013028:	45a0      	cmp	r8, r4
9001302a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001302e:	f040 814c 	bne.w	900132ca <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90013032:	f9b5 1000 	ldrsh.w	r1, [r5]
90013036:	4551      	cmp	r1, sl
90013038:	d103      	bne.n	90013042 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
9001303a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001303e:	4291      	cmp	r1, r2
90013040:	d018      	beq.n	90013074 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013042:	ea5c 010e 	orrs.w	r1, ip, lr
90013046:	d00f      	beq.n	90013068 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013048:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001304c:	2900      	cmp	r1, #0
9001304e:	db0b      	blt.n	90013068 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013050:	428b      	cmp	r3, r1
90013052:	dd09      	ble.n	90013068 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013054:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90013058:	4299      	cmp	r1, r3
9001305a:	f101 0101 	add.w	r1, r1, #1
9001305e:	bf38      	it	cc
90013060:	3508      	addcc	r5, #8
90013062:	6081      	str	r1, [r0, #8]
90013064:	bf38      	it	cc
90013066:	6105      	strcc	r5, [r0, #16]
90013068:	6903      	ldr	r3, [r0, #16]
9001306a:	f8a3 a000 	strh.w	sl, [r3]
9001306e:	805a      	strh	r2, [r3, #2]
90013070:	809e      	strh	r6, [r3, #4]
90013072:	80de      	strh	r6, [r3, #6]
90013074:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013076:	6901      	ldr	r1, [r0, #16]
90013078:	441a      	add	r2, r3
9001307a:	88cc      	ldrh	r4, [r1, #6]
9001307c:	888b      	ldrh	r3, [r1, #4]
9001307e:	4323      	orrs	r3, r4
90013080:	d010      	beq.n	900130a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013082:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013086:	2c00      	cmp	r4, #0
90013088:	db0c      	blt.n	900130a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001308a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001308c:	429c      	cmp	r4, r3
9001308e:	da09      	bge.n	900130a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013090:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013094:	429c      	cmp	r4, r3
90013096:	f104 0401 	add.w	r4, r4, #1
9001309a:	bf38      	it	cc
9001309c:	3108      	addcc	r1, #8
9001309e:	6084      	str	r4, [r0, #8]
900130a0:	bf38      	it	cc
900130a2:	6101      	strcc	r1, [r0, #16]
900130a4:	6903      	ldr	r3, [r0, #16]
900130a6:	464f      	mov	r7, r9
900130a8:	f8a3 a000 	strh.w	sl, [r3]
900130ac:	805a      	strh	r2, [r3, #2]
900130ae:	809e      	strh	r6, [r3, #4]
900130b0:	80de      	strh	r6, [r3, #6]
900130b2:	9b06      	ldr	r3, [sp, #24]
900130b4:	4293      	cmp	r3, r2
900130b6:	d19c      	bne.n	90012ff2 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
900130b8:	9b01      	ldr	r3, [sp, #4]
900130ba:	6907      	ldr	r7, [r0, #16]
900130bc:	f1c3 0620 	rsb	r6, r3, #32
900130c0:	9b05      	ldr	r3, [sp, #20]
900130c2:	ea4f 1e63 	mov.w	lr, r3, asr #5
900130c6:	9b04      	ldr	r3, [sp, #16]
900130c8:	429e      	cmp	r6, r3
900130ca:	f040 81c7 	bne.w	9001345c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900130ce:	f9b7 3000 	ldrsh.w	r3, [r7]
900130d2:	459e      	cmp	lr, r3
900130d4:	d104      	bne.n	900130e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900130d6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900130da:	429a      	cmp	r2, r3
900130dc:	f43f ae3a 	beq.w	90012d54 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900130e0:	88f9      	ldrh	r1, [r7, #6]
900130e2:	88bb      	ldrh	r3, [r7, #4]
900130e4:	430b      	orrs	r3, r1
900130e6:	d010      	beq.n	9001310a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900130e8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900130ec:	2b00      	cmp	r3, #0
900130ee:	db0c      	blt.n	9001310a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900130f0:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
900130f2:	428b      	cmp	r3, r1
900130f4:	da09      	bge.n	9001310a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900130f6:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900130fa:	428b      	cmp	r3, r1
900130fc:	f103 0301 	add.w	r3, r3, #1
90013100:	bf38      	it	cc
90013102:	3708      	addcc	r7, #8
90013104:	6083      	str	r3, [r0, #8]
90013106:	bf38      	it	cc
90013108:	6107      	strcc	r7, [r0, #16]
9001310a:	6903      	ldr	r3, [r0, #16]
9001310c:	f8a3 e000 	strh.w	lr, [r3]
90013110:	e603      	b.n	90012d1a <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90013112:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90013114:	9c03      	ldr	r4, [sp, #12]
90013116:	42a2      	cmp	r2, r4
90013118:	f6ff ae1c 	blt.w	90012d54 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001311c:	9c06      	ldr	r4, [sp, #24]
9001311e:	42a2      	cmp	r2, r4
90013120:	9c08      	ldr	r4, [sp, #32]
90013122:	bfbc      	itt	lt
90013124:	3201      	addlt	r2, #1
90013126:	9206      	strlt	r2, [sp, #24]
90013128:	f1c3 0220 	rsb	r2, r3, #32
9001312c:	4362      	muls	r2, r4
9001312e:	2401      	movs	r4, #1
90013130:	940b      	str	r4, [sp, #44]	@ 0x2c
90013132:	2420      	movs	r4, #32
90013134:	e6d6      	b.n	90012ee4 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90013136:	ea4f 1861 	mov.w	r8, r1, asr #5
9001313a:	f009 021f 	and.w	r2, r9, #31
9001313e:	f001 011f 	and.w	r1, r1, #31
90013142:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90013146:	920c      	str	r2, [sp, #48]	@ 0x30
90013148:	45b0      	cmp	r8, r6
9001314a:	9a01      	ldr	r2, [sp, #4]
9001314c:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90013150:	eba2 0203 	sub.w	r2, r2, r3
90013154:	d108      	bne.n	90013168 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90013156:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90013158:	4496      	add	lr, r2
9001315a:	4419      	add	r1, r3
9001315c:	f8a5 e004 	strh.w	lr, [r5, #4]
90013160:	fb02 a101 	mla	r1, r2, r1, sl
90013164:	80e9      	strh	r1, [r5, #6]
90013166:	e6fa      	b.n	90012f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013168:	2c00      	cmp	r4, #0
9001316a:	f2c0 80a7 	blt.w	900132bc <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
9001316e:	2701      	movs	r7, #1
90013170:	f1c1 0c20 	rsb	ip, r1, #32
90013174:	970a      	str	r7, [sp, #40]	@ 0x28
90013176:	2720      	movs	r7, #32
90013178:	fb02 f20c 	mul.w	r2, r2, ip
9001317c:	9709      	str	r7, [sp, #36]	@ 0x24
9001317e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90013180:	fb92 fcf4 	sdiv	ip, r2, r4
90013184:	fb04 221c 	mls	r2, r4, ip, r2
90013188:	4439      	add	r1, r7
9001318a:	2a00      	cmp	r2, #0
9001318c:	bfbc      	itt	lt
9001318e:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90013192:	1912      	addlt	r2, r2, r4
90013194:	fb0c a101 	mla	r1, ip, r1, sl
90013198:	44e6      	add	lr, ip
9001319a:	80e9      	strh	r1, [r5, #6]
9001319c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9001319e:	f8a5 e004 	strh.w	lr, [r5, #4]
900131a2:	eb08 0501 	add.w	r5, r8, r1
900131a6:	6901      	ldr	r1, [r0, #16]
900131a8:	f8b1 8006 	ldrh.w	r8, [r1, #6]
900131ac:	f8b1 e004 	ldrh.w	lr, [r1, #4]
900131b0:	ea58 070e 	orrs.w	r7, r8, lr
900131b4:	d010      	beq.n	900131d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900131b6:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
900131ba:	f1be 0f00 	cmp.w	lr, #0
900131be:	db0b      	blt.n	900131d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900131c0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900131c2:	45be      	cmp	lr, r7
900131c4:	da08      	bge.n	900131d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900131c6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900131ca:	45be      	cmp	lr, r7
900131cc:	bf3c      	itt	cc
900131ce:	3108      	addcc	r1, #8
900131d0:	6101      	strcc	r1, [r0, #16]
900131d2:	f10e 0101 	add.w	r1, lr, #1
900131d6:	6081      	str	r1, [r0, #8]
900131d8:	6901      	ldr	r1, [r0, #16]
900131da:	f04f 0e00 	mov.w	lr, #0
900131de:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
900131e2:	42ae      	cmp	r6, r5
900131e4:	800d      	strh	r5, [r1, #0]
900131e6:	4463      	add	r3, ip
900131e8:	f8a1 8002 	strh.w	r8, [r1, #2]
900131ec:	f8a1 e004 	strh.w	lr, [r1, #4]
900131f0:	f8a1 e006 	strh.w	lr, [r1, #6]
900131f4:	d053      	beq.n	9001329e <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
900131f6:	9901      	ldr	r1, [sp, #4]
900131f8:	1b12      	subs	r2, r2, r4
900131fa:	1ac9      	subs	r1, r1, r3
900131fc:	4461      	add	r1, ip
900131fe:	0149      	lsls	r1, r1, #5
90013200:	fb91 fef4 	sdiv	lr, r1, r4
90013204:	fb04 111e 	mls	r1, r4, lr, r1
90013208:	2900      	cmp	r1, #0
9001320a:	bfbc      	itt	lt
9001320c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90013210:	1909      	addlt	r1, r1, r4
90013212:	f10e 0701 	add.w	r7, lr, #1
90013216:	970d      	str	r7, [sp, #52]	@ 0x34
90013218:	f8d0 a010 	ldr.w	sl, [r0, #16]
9001321c:	1852      	adds	r2, r2, r1
9001321e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90013220:	bf54      	ite	pl
90013222:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90013226:	46f4      	movmi	ip, lr
90013228:	f8ba b004 	ldrh.w	fp, [sl, #4]
9001322c:	bf58      	it	pl
9001322e:	1b12      	subpl	r2, r2, r4
90013230:	4463      	add	r3, ip
90013232:	443d      	add	r5, r7
90013234:	44e3      	add	fp, ip
90013236:	f8aa b004 	strh.w	fp, [sl, #4]
9001323a:	f8ba b006 	ldrh.w	fp, [sl, #6]
9001323e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90013242:	f8aa b006 	strh.w	fp, [sl, #6]
90013246:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001324a:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001324e:	f8bc a004 	ldrh.w	sl, [ip, #4]
90013252:	ea5b 070a 	orrs.w	r7, fp, sl
90013256:	d014      	beq.n	90013282 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013258:	f9bc a002 	ldrsh.w	sl, [ip, #2]
9001325c:	f1ba 0f00 	cmp.w	sl, #0
90013260:	db0f      	blt.n	90013282 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013262:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013264:	45ba      	cmp	sl, r7
90013266:	da0c      	bge.n	90013282 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013268:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
9001326c:	45ba      	cmp	sl, r7
9001326e:	f10a 0a01 	add.w	sl, sl, #1
90013272:	bf38      	it	cc
90013274:	f10c 0c08 	addcc.w	ip, ip, #8
90013278:	f8c0 a008 	str.w	sl, [r0, #8]
9001327c:	bf38      	it	cc
9001327e:	f8c0 c010 	strcc.w	ip, [r0, #16]
90013282:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013286:	f04f 0700 	mov.w	r7, #0
9001328a:	42ae      	cmp	r6, r5
9001328c:	f8ac 5000 	strh.w	r5, [ip]
90013290:	f8ac 8002 	strh.w	r8, [ip, #2]
90013294:	f8ac 7004 	strh.w	r7, [ip, #4]
90013298:	f8ac 7006 	strh.w	r7, [ip, #6]
9001329c:	d1bc      	bne.n	90013218 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
9001329e:	6904      	ldr	r4, [r0, #16]
900132a0:	9a01      	ldr	r2, [sp, #4]
900132a2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900132a4:	1ad3      	subs	r3, r2, r3
900132a6:	88a2      	ldrh	r2, [r4, #4]
900132a8:	3120      	adds	r1, #32
900132aa:	441a      	add	r2, r3
900132ac:	80a2      	strh	r2, [r4, #4]
900132ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900132b0:	1a89      	subs	r1, r1, r2
900132b2:	88e2      	ldrh	r2, [r4, #6]
900132b4:	fb03 2301 	mla	r3, r3, r1, r2
900132b8:	80e3      	strh	r3, [r4, #6]
900132ba:	e650      	b.n	90012f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900132bc:	f04f 37ff 	mov.w	r7, #4294967295
900132c0:	434a      	muls	r2, r1
900132c2:	4264      	negs	r4, r4
900132c4:	970a      	str	r7, [sp, #40]	@ 0x28
900132c6:	2700      	movs	r7, #0
900132c8:	e758      	b.n	9001317c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900132ca:	ea4f 1867 	mov.w	r8, r7, asr #5
900132ce:	f009 031f 	and.w	r3, r9, #31
900132d2:	f007 071f 	and.w	r7, r7, #31
900132d6:	fa1f fc8c 	uxth.w	ip, ip
900132da:	45d0      	cmp	r8, sl
900132dc:	930f      	str	r3, [sp, #60]	@ 0x3c
900132de:	fa1f fe8e 	uxth.w	lr, lr
900132e2:	d10a      	bne.n	900132fa <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
900132e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900132e6:	449c      	add	ip, r3
900132e8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900132ea:	441f      	add	r7, r3
900132ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900132ee:	f8a5 c004 	strh.w	ip, [r5, #4]
900132f2:	fb03 e707 	mla	r7, r3, r7, lr
900132f6:	80ef      	strh	r7, [r5, #6]
900132f8:	e6bc      	b.n	90013074 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900132fa:	2900      	cmp	r1, #0
900132fc:	f2c0 80a6 	blt.w	9001344c <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90013300:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90013302:	f1c7 0320 	rsb	r3, r7, #32
90013306:	4363      	muls	r3, r4
90013308:	2401      	movs	r4, #1
9001330a:	940d      	str	r4, [sp, #52]	@ 0x34
9001330c:	2420      	movs	r4, #32
9001330e:	940c      	str	r4, [sp, #48]	@ 0x30
90013310:	fb93 f4f1 	sdiv	r4, r3, r1
90013314:	fb01 3b14 	mls	fp, r1, r4, r3
90013318:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001331a:	f1bb 0f00 	cmp.w	fp, #0
9001331e:	441f      	add	r7, r3
90013320:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90013322:	bfbc      	itt	lt
90013324:	f104 34ff 	addlt.w	r4, r4, #4294967295
90013328:	448b      	addlt	fp, r1
9001332a:	fb04 e707 	mla	r7, r4, r7, lr
9001332e:	44a4      	add	ip, r4
90013330:	80ef      	strh	r7, [r5, #6]
90013332:	f8a5 c004 	strh.w	ip, [r5, #4]
90013336:	eb08 0503 	add.w	r5, r8, r3
9001333a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001333e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90013342:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013346:	ea5e 0307 	orrs.w	r3, lr, r7
9001334a:	d011      	beq.n	90013370 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001334c:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90013350:	f1be 0f00 	cmp.w	lr, #0
90013354:	db0c      	blt.n	90013370 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90013356:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013358:	45be      	cmp	lr, r7
9001335a:	da09      	bge.n	90013370 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001335c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90013360:	45be      	cmp	lr, r7
90013362:	bf3c      	itt	cc
90013364:	f10c 0708 	addcc.w	r7, ip, #8
90013368:	6107      	strcc	r7, [r0, #16]
9001336a:	f10e 0701 	add.w	r7, lr, #1
9001336e:	6087      	str	r7, [r0, #8]
90013370:	6907      	ldr	r7, [r0, #16]
90013372:	b213      	sxth	r3, r2
90013374:	4555      	cmp	r5, sl
90013376:	9310      	str	r3, [sp, #64]	@ 0x40
90013378:	807b      	strh	r3, [r7, #2]
9001337a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001337c:	803d      	strh	r5, [r7, #0]
9001337e:	80be      	strh	r6, [r7, #4]
90013380:	eb04 0c03 	add.w	ip, r4, r3
90013384:	80fe      	strh	r6, [r7, #6]
90013386:	d050      	beq.n	9001342a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90013388:	9b01      	ldr	r3, [sp, #4]
9001338a:	eba3 070c 	sub.w	r7, r3, ip
9001338e:	ebab 0301 	sub.w	r3, fp, r1
90013392:	443c      	add	r4, r7
90013394:	9309      	str	r3, [sp, #36]	@ 0x24
90013396:	0164      	lsls	r4, r4, #5
90013398:	fb94 f8f1 	sdiv	r8, r4, r1
9001339c:	fb01 4418 	mls	r4, r1, r8, r4
900133a0:	2c00      	cmp	r4, #0
900133a2:	bfbc      	itt	lt
900133a4:	f108 38ff 	addlt.w	r8, r8, #4294967295
900133a8:	1864      	addlt	r4, r4, r1
900133aa:	f108 0701 	add.w	r7, r8, #1
900133ae:	9711      	str	r7, [sp, #68]	@ 0x44
900133b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900133b2:	f8d0 e010 	ldr.w	lr, [r0, #16]
900133b6:	191b      	adds	r3, r3, r4
900133b8:	f8be b004 	ldrh.w	fp, [lr, #4]
900133bc:	bf54      	ite	pl
900133be:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
900133c0:	4647      	movmi	r7, r8
900133c2:	9309      	str	r3, [sp, #36]	@ 0x24
900133c4:	bf58      	it	pl
900133c6:	1a5b      	subpl	r3, r3, r1
900133c8:	44bb      	add	fp, r7
900133ca:	44bc      	add	ip, r7
900133cc:	bf58      	it	pl
900133ce:	9309      	strpl	r3, [sp, #36]	@ 0x24
900133d0:	f8ae b004 	strh.w	fp, [lr, #4]
900133d4:	f8be b006 	ldrh.w	fp, [lr, #6]
900133d8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900133dc:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
900133de:	f8ae b006 	strh.w	fp, [lr, #6]
900133e2:	443d      	add	r5, r7
900133e4:	f8d0 e010 	ldr.w	lr, [r0, #16]
900133e8:	f8be b006 	ldrh.w	fp, [lr, #6]
900133ec:	f8be 7004 	ldrh.w	r7, [lr, #4]
900133f0:	ea5b 0307 	orrs.w	r3, fp, r7
900133f4:	d011      	beq.n	9001341a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900133f6:	f9be b002 	ldrsh.w	fp, [lr, #2]
900133fa:	f1bb 0f00 	cmp.w	fp, #0
900133fe:	db0c      	blt.n	9001341a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013400:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013402:	45bb      	cmp	fp, r7
90013404:	da09      	bge.n	9001341a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013406:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001340a:	45bb      	cmp	fp, r7
9001340c:	bf3c      	itt	cc
9001340e:	f10e 0708 	addcc.w	r7, lr, #8
90013412:	6107      	strcc	r7, [r0, #16]
90013414:	f10b 0701 	add.w	r7, fp, #1
90013418:	6087      	str	r7, [r0, #8]
9001341a:	6907      	ldr	r7, [r0, #16]
9001341c:	4555      	cmp	r5, sl
9001341e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90013420:	803d      	strh	r5, [r7, #0]
90013422:	807b      	strh	r3, [r7, #2]
90013424:	80be      	strh	r6, [r7, #4]
90013426:	80fe      	strh	r6, [r7, #6]
90013428:	d1c2      	bne.n	900133b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001342a:	9b01      	ldr	r3, [sp, #4]
9001342c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001342e:	eba3 0c0c 	sub.w	ip, r3, ip
90013432:	6903      	ldr	r3, [r0, #16]
90013434:	3720      	adds	r7, #32
90013436:	8899      	ldrh	r1, [r3, #4]
90013438:	4461      	add	r1, ip
9001343a:	8099      	strh	r1, [r3, #4]
9001343c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001343e:	1a7f      	subs	r7, r7, r1
90013440:	88d9      	ldrh	r1, [r3, #6]
90013442:	fb0c 1c07 	mla	ip, ip, r7, r1
90013446:	f8a3 c006 	strh.w	ip, [r3, #6]
9001344a:	e613      	b.n	90013074 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001344c:	f04f 34ff 	mov.w	r4, #4294967295
90013450:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90013452:	4249      	negs	r1, r1
90013454:	940d      	str	r4, [sp, #52]	@ 0x34
90013456:	2400      	movs	r4, #0
90013458:	437b      	muls	r3, r7
9001345a:	e758      	b.n	9001330e <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
9001345c:	9905      	ldr	r1, [sp, #20]
9001345e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90013462:	f009 0c1f 	and.w	ip, r9, #31
90013466:	f8b7 8004 	ldrh.w	r8, [r7, #4]
9001346a:	f001 011f 	and.w	r1, r1, #31
9001346e:	45f3      	cmp	fp, lr
90013470:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90013474:	9102      	str	r1, [sp, #8]
90013476:	9904      	ldr	r1, [sp, #16]
90013478:	eba1 0406 	sub.w	r4, r1, r6
9001347c:	d108      	bne.n	90013490 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
9001347e:	9b02      	ldr	r3, [sp, #8]
90013480:	44a0      	add	r8, r4
90013482:	449c      	add	ip, r3
90013484:	f8a7 8004 	strh.w	r8, [r7, #4]
90013488:	fb04 a40c 	mla	r4, r4, ip, sl
9001348c:	80fc      	strh	r4, [r7, #6]
9001348e:	e461      	b.n	90012d54 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013490:	9905      	ldr	r1, [sp, #20]
90013492:	ebb1 0109 	subs.w	r1, r1, r9
90013496:	bf51      	iteee	pl
90013498:	f1cc 0520 	rsbpl	r5, ip, #32
9001349c:	fb04 f40c 	mulmi.w	r4, r4, ip
900134a0:	4249      	negmi	r1, r1
900134a2:	2500      	movmi	r5, #0
900134a4:	bf5d      	ittte	pl
900134a6:	436c      	mulpl	r4, r5
900134a8:	2520      	movpl	r5, #32
900134aa:	f04f 0901 	movpl.w	r9, #1
900134ae:	f04f 39ff 	movmi.w	r9, #4294967295
900134b2:	9501      	str	r5, [sp, #4]
900134b4:	9b01      	ldr	r3, [sp, #4]
900134b6:	fb94 f5f1 	sdiv	r5, r4, r1
900134ba:	fb01 4415 	mls	r4, r1, r5, r4
900134be:	449c      	add	ip, r3
900134c0:	eb0b 0309 	add.w	r3, fp, r9
900134c4:	2c00      	cmp	r4, #0
900134c6:	bfbc      	itt	lt
900134c8:	f105 35ff 	addlt.w	r5, r5, #4294967295
900134cc:	1864      	addlt	r4, r4, r1
900134ce:	44a8      	add	r8, r5
900134d0:	fb05 ac0c 	mla	ip, r5, ip, sl
900134d4:	f8a7 8004 	strh.w	r8, [r7, #4]
900134d8:	f8a7 c006 	strh.w	ip, [r7, #6]
900134dc:	f8d0 c010 	ldr.w	ip, [r0, #16]
900134e0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
900134e4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900134e8:	ea58 0707 	orrs.w	r7, r8, r7
900134ec:	d011      	beq.n	90013512 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900134ee:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900134f2:	f1b8 0f00 	cmp.w	r8, #0
900134f6:	db0c      	blt.n	90013512 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900134f8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900134fa:	45b8      	cmp	r8, r7
900134fc:	da09      	bge.n	90013512 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900134fe:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90013502:	45b8      	cmp	r8, r7
90013504:	bf3c      	itt	cc
90013506:	f10c 0708 	addcc.w	r7, ip, #8
9001350a:	6107      	strcc	r7, [r0, #16]
9001350c:	f108 0701 	add.w	r7, r8, #1
90013510:	6087      	str	r7, [r0, #8]
90013512:	6907      	ldr	r7, [r0, #16]
90013514:	f04f 0c00 	mov.w	ip, #0
90013518:	b212      	sxth	r2, r2
9001351a:	459e      	cmp	lr, r3
9001351c:	803b      	strh	r3, [r7, #0]
9001351e:	442e      	add	r6, r5
90013520:	807a      	strh	r2, [r7, #2]
90013522:	f8a7 c004 	strh.w	ip, [r7, #4]
90013526:	f8a7 c006 	strh.w	ip, [r7, #6]
9001352a:	d04b      	beq.n	900135c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
9001352c:	9f04      	ldr	r7, [sp, #16]
9001352e:	1a64      	subs	r4, r4, r1
90013530:	f04f 0a00 	mov.w	sl, #0
90013534:	1bbf      	subs	r7, r7, r6
90013536:	443d      	add	r5, r7
90013538:	016d      	lsls	r5, r5, #5
9001353a:	fb95 f8f1 	sdiv	r8, r5, r1
9001353e:	fb01 5518 	mls	r5, r1, r8, r5
90013542:	4565      	cmp	r5, ip
90013544:	bfbc      	itt	lt
90013546:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001354a:	186d      	addlt	r5, r5, r1
9001354c:	f108 0701 	add.w	r7, r8, #1
90013550:	9703      	str	r7, [sp, #12]
90013552:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013556:	1964      	adds	r4, r4, r5
90013558:	444b      	add	r3, r9
9001355a:	bf54      	ite	pl
9001355c:	9f03      	ldrpl	r7, [sp, #12]
9001355e:	4647      	movmi	r7, r8
90013560:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013564:	bf58      	it	pl
90013566:	1a64      	subpl	r4, r4, r1
90013568:	443e      	add	r6, r7
9001356a:	44bb      	add	fp, r7
9001356c:	f8ac b004 	strh.w	fp, [ip, #4]
90013570:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013574:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013578:	f8ac b006 	strh.w	fp, [ip, #6]
9001357c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013580:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013584:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013588:	ea5b 0707 	orrs.w	r7, fp, r7
9001358c:	d011      	beq.n	900135b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001358e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90013592:	f1bb 0f00 	cmp.w	fp, #0
90013596:	db0c      	blt.n	900135b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90013598:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001359a:	45bb      	cmp	fp, r7
9001359c:	da09      	bge.n	900135b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001359e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900135a2:	45bb      	cmp	fp, r7
900135a4:	bf3c      	itt	cc
900135a6:	f10c 0708 	addcc.w	r7, ip, #8
900135aa:	6107      	strcc	r7, [r0, #16]
900135ac:	f10b 0701 	add.w	r7, fp, #1
900135b0:	6087      	str	r7, [r0, #8]
900135b2:	6907      	ldr	r7, [r0, #16]
900135b4:	459e      	cmp	lr, r3
900135b6:	803b      	strh	r3, [r7, #0]
900135b8:	807a      	strh	r2, [r7, #2]
900135ba:	f8a7 a004 	strh.w	sl, [r7, #4]
900135be:	f8a7 a006 	strh.w	sl, [r7, #6]
900135c2:	d1c6      	bne.n	90013552 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
900135c4:	9b04      	ldr	r3, [sp, #16]
900135c6:	1b9e      	subs	r6, r3, r6
900135c8:	6903      	ldr	r3, [r0, #16]
900135ca:	889a      	ldrh	r2, [r3, #4]
900135cc:	4432      	add	r2, r6
900135ce:	809a      	strh	r2, [r3, #4]
900135d0:	9a02      	ldr	r2, [sp, #8]
900135d2:	f102 0c20 	add.w	ip, r2, #32
900135d6:	9a01      	ldr	r2, [sp, #4]
900135d8:	ebac 0c02 	sub.w	ip, ip, r2
900135dc:	88da      	ldrh	r2, [r3, #6]
900135de:	fb06 260c 	mla	r6, r6, ip, r2
900135e2:	80de      	strh	r6, [r3, #6]
900135e4:	f7ff bbb6 	b.w	90012d54 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

900135e8 <_ZN8touchgfx7Outline6lineToEii>:
900135e8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900135ea:	079b      	lsls	r3, r3, #30
900135ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900135ee:	460e      	mov	r6, r1
900135f0:	4615      	mov	r5, r2
900135f2:	d511      	bpl.n	90013618 <_ZN8touchgfx7Outline6lineToEii+0x30>
900135f4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
900135f8:	ea86 0701 	eor.w	r7, r6, r1
900135fc:	ea85 0302 	eor.w	r3, r5, r2
90013600:	433b      	orrs	r3, r7
90013602:	d009      	beq.n	90013618 <_ZN8touchgfx7Outline6lineToEii+0x30>
90013604:	4633      	mov	r3, r6
90013606:	9500      	str	r5, [sp, #0]
90013608:	f7ff fb4c 	bl	90012ca4 <_ZN8touchgfx7Outline10renderLineEiiii>
9001360c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001360e:	f043 0301 	orr.w	r3, r3, #1
90013612:	e9c0 6505 	strd	r6, r5, [r0, #20]
90013616:	6243      	str	r3, [r0, #36]	@ 0x24
90013618:	b003      	add	sp, #12
9001361a:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001361c <_ZN8touchgfx7Outline6moveToEii>:
9001361c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001361e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013620:	4615      	mov	r5, r2
90013622:	4604      	mov	r4, r0
90013624:	460e      	mov	r6, r1
90013626:	079a      	lsls	r2, r3, #30
90013628:	d401      	bmi.n	9001362e <_ZN8touchgfx7Outline6moveToEii+0x12>
9001362a:	f7ff fb07 	bl	90012c3c <_ZN8touchgfx7Outline5resetEv>
9001362e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013630:	07db      	lsls	r3, r3, #31
90013632:	d504      	bpl.n	9001363e <_ZN8touchgfx7Outline6moveToEii+0x22>
90013634:	4620      	mov	r0, r4
90013636:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
9001363a:	f7ff ffd5 	bl	900135e8 <_ZN8touchgfx7Outline6lineToEii>
9001363e:	6923      	ldr	r3, [r4, #16]
90013640:	1170      	asrs	r0, r6, #5
90013642:	1169      	asrs	r1, r5, #5
90013644:	f9b3 2000 	ldrsh.w	r2, [r3]
90013648:	4290      	cmp	r0, r2
9001364a:	d103      	bne.n	90013654 <_ZN8touchgfx7Outline6moveToEii+0x38>
9001364c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013650:	4291      	cmp	r1, r2
90013652:	d01a      	beq.n	9001368a <_ZN8touchgfx7Outline6moveToEii+0x6e>
90013654:	88df      	ldrh	r7, [r3, #6]
90013656:	889a      	ldrh	r2, [r3, #4]
90013658:	433a      	orrs	r2, r7
9001365a:	d010      	beq.n	9001367e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001365c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013660:	2a00      	cmp	r2, #0
90013662:	db0c      	blt.n	9001367e <_ZN8touchgfx7Outline6moveToEii+0x62>
90013664:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90013666:	42ba      	cmp	r2, r7
90013668:	da09      	bge.n	9001367e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001366a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
9001366e:	42ba      	cmp	r2, r7
90013670:	f102 0201 	add.w	r2, r2, #1
90013674:	bf38      	it	cc
90013676:	3308      	addcc	r3, #8
90013678:	60a2      	str	r2, [r4, #8]
9001367a:	bf38      	it	cc
9001367c:	6123      	strcc	r3, [r4, #16]
9001367e:	6923      	ldr	r3, [r4, #16]
90013680:	2200      	movs	r2, #0
90013682:	8018      	strh	r0, [r3, #0]
90013684:	8059      	strh	r1, [r3, #2]
90013686:	809a      	strh	r2, [r3, #4]
90013688:	80da      	strh	r2, [r3, #6]
9001368a:	6166      	str	r6, [r4, #20]
9001368c:	6225      	str	r5, [r4, #32]
9001368e:	e9c4 5606 	strd	r5, r6, [r4, #24]
90013692:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90013694 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90013694:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013698:	b0d0      	sub	sp, #320	@ 0x140
9001369a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
9001369e:	466c      	mov	r4, sp
900136a0:	4627      	mov	r7, r4
900136a2:	1a0d      	subs	r5, r1, r0
900136a4:	f100 0308 	add.w	r3, r0, #8
900136a8:	2d48      	cmp	r5, #72	@ 0x48
900136aa:	f340 80d5 	ble.w	90013858 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900136ae:	112d      	asrs	r5, r5, #4
900136b0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900136b4:	f9b0 9000 	ldrsh.w	r9, [r0]
900136b8:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
900136bc:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
900136c0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900136c4:	6816      	ldr	r6, [r2, #0]
900136c6:	6006      	str	r6, [r0, #0]
900136c8:	6856      	ldr	r6, [r2, #4]
900136ca:	6046      	str	r6, [r0, #4]
900136cc:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900136d0:	f8a2 8002 	strh.w	r8, [r2, #2]
900136d4:	f8a2 e004 	strh.w	lr, [r2, #4]
900136d8:	f8a2 c006 	strh.w	ip, [r2, #6]
900136dc:	f1a1 0208 	sub.w	r2, r1, #8
900136e0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900136e4:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
900136e8:	4565      	cmp	r5, ip
900136ea:	db06      	blt.n	900136fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
900136ec:	d119      	bne.n	90013722 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900136ee:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
900136f2:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
900136f6:	42ae      	cmp	r6, r5
900136f8:	dd13      	ble.n	90013722 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900136fa:	460e      	mov	r6, r1
900136fc:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90013700:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90013704:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013708:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
9001370c:	601d      	str	r5, [r3, #0]
9001370e:	6875      	ldr	r5, [r6, #4]
90013710:	605d      	str	r5, [r3, #4]
90013712:	f821 9c08 	strh.w	r9, [r1, #-8]
90013716:	f821 cc06 	strh.w	ip, [r1, #-6]
9001371a:	f821 8c04 	strh.w	r8, [r1, #-4]
9001371e:	f821 ec02 	strh.w	lr, [r1, #-2]
90013722:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013726:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001372a:	42ae      	cmp	r6, r5
9001372c:	db06      	blt.n	9001373c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
9001372e:	d116      	bne.n	9001375e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90013730:	f9b0 c000 	ldrsh.w	ip, [r0]
90013734:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90013738:	45ac      	cmp	ip, r5
9001373a:	da10      	bge.n	9001375e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
9001373c:	681d      	ldr	r5, [r3, #0]
9001373e:	f9b0 8000 	ldrsh.w	r8, [r0]
90013742:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013746:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001374a:	6005      	str	r5, [r0, #0]
9001374c:	685d      	ldr	r5, [r3, #4]
9001374e:	f8a0 8008 	strh.w	r8, [r0, #8]
90013752:	6045      	str	r5, [r0, #4]
90013754:	8146      	strh	r6, [r0, #10]
90013756:	f8a0 e00c 	strh.w	lr, [r0, #12]
9001375a:	f8a0 c00e 	strh.w	ip, [r0, #14]
9001375e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013762:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013766:	4565      	cmp	r5, ip
90013768:	db06      	blt.n	90013778 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
9001376a:	d119      	bne.n	900137a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001376c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90013770:	f9b0 5000 	ldrsh.w	r5, [r0]
90013774:	42ae      	cmp	r6, r5
90013776:	da13      	bge.n	900137a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013778:	460e      	mov	r6, r1
9001377a:	f9b0 9000 	ldrsh.w	r9, [r0]
9001377e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90013782:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013786:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
9001378a:	6005      	str	r5, [r0, #0]
9001378c:	6875      	ldr	r5, [r6, #4]
9001378e:	6045      	str	r5, [r0, #4]
90013790:	f821 9c08 	strh.w	r9, [r1, #-8]
90013794:	f821 cc06 	strh.w	ip, [r1, #-6]
90013798:	f821 8c04 	strh.w	r8, [r1, #-4]
9001379c:	f821 ec02 	strh.w	lr, [r1, #-2]
900137a0:	3308      	adds	r3, #8
900137a2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900137a6:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900137aa:	45e6      	cmp	lr, ip
900137ac:	dbf8      	blt.n	900137a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900137ae:	d105      	bne.n	900137bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900137b0:	f9b3 6000 	ldrsh.w	r6, [r3]
900137b4:	f9b0 5000 	ldrsh.w	r5, [r0]
900137b8:	42ae      	cmp	r6, r5
900137ba:	dbf1      	blt.n	900137a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900137bc:	4615      	mov	r5, r2
900137be:	3a08      	subs	r2, #8
900137c0:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
900137c4:	45b4      	cmp	ip, r6
900137c6:	dbf9      	blt.n	900137bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900137c8:	d105      	bne.n	900137d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
900137ca:	f9b0 8000 	ldrsh.w	r8, [r0]
900137ce:	f9b2 6000 	ldrsh.w	r6, [r2]
900137d2:	45b0      	cmp	r8, r6
900137d4:	dbf2      	blt.n	900137bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900137d6:	4293      	cmp	r3, r2
900137d8:	f1a5 0608 	sub.w	r6, r5, #8
900137dc:	d816      	bhi.n	9001380c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
900137de:	f8d6 c000 	ldr.w	ip, [r6]
900137e2:	f9b3 a000 	ldrsh.w	sl, [r3]
900137e6:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
900137ea:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
900137ee:	f8c3 c000 	str.w	ip, [r3]
900137f2:	f8d6 c004 	ldr.w	ip, [r6, #4]
900137f6:	f8c3 c004 	str.w	ip, [r3, #4]
900137fa:	f825 ac08 	strh.w	sl, [r5, #-8]
900137fe:	f825 ec06 	strh.w	lr, [r5, #-6]
90013802:	f825 9c04 	strh.w	r9, [r5, #-4]
90013806:	f825 8c02 	strh.w	r8, [r5, #-2]
9001380a:	e7c9      	b.n	900137a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001380c:	f8d6 e000 	ldr.w	lr, [r6]
90013810:	f9b0 a000 	ldrsh.w	sl, [r0]
90013814:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90013818:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
9001381c:	f8c0 e000 	str.w	lr, [r0]
90013820:	f8d6 e004 	ldr.w	lr, [r6, #4]
90013824:	1a16      	subs	r6, r2, r0
90013826:	f8c0 e004 	str.w	lr, [r0, #4]
9001382a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001382e:	f825 cc06 	strh.w	ip, [r5, #-6]
90013832:	f825 9c04 	strh.w	r9, [r5, #-4]
90013836:	f825 8c02 	strh.w	r8, [r5, #-2]
9001383a:	1acd      	subs	r5, r1, r3
9001383c:	10ed      	asrs	r5, r5, #3
9001383e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90013842:	bfb5      	itete	lt
90013844:	e9c4 0200 	strdlt	r0, r2, [r4]
90013848:	e9c4 3100 	strdge	r3, r1, [r4]
9001384c:	460a      	movlt	r2, r1
9001384e:	4603      	movge	r3, r0
90013850:	3408      	adds	r4, #8
90013852:	4618      	mov	r0, r3
90013854:	4611      	mov	r1, r2
90013856:	e724      	b.n	900136a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013858:	4299      	cmp	r1, r3
9001385a:	d927      	bls.n	900138ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
9001385c:	f1a3 0210 	sub.w	r2, r3, #16
90013860:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90013864:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90013868:	45ac      	cmp	ip, r5
9001386a:	db06      	blt.n	9001387a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
9001386c:	d11c      	bne.n	900138a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001386e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90013872:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90013876:	42ae      	cmp	r6, r5
90013878:	da16      	bge.n	900138a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001387a:	4615      	mov	r5, r2
9001387c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90013880:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90013884:	3a08      	subs	r2, #8
90013886:	f855 6f08 	ldr.w	r6, [r5, #8]!
9001388a:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
9001388e:	6196      	str	r6, [r2, #24]
90013890:	42a8      	cmp	r0, r5
90013892:	686e      	ldr	r6, [r5, #4]
90013894:	f8a2 9010 	strh.w	r9, [r2, #16]
90013898:	61d6      	str	r6, [r2, #28]
9001389a:	f8a2 c012 	strh.w	ip, [r2, #18]
9001389e:	f8a2 8014 	strh.w	r8, [r2, #20]
900138a2:	f8a2 e016 	strh.w	lr, [r2, #22]
900138a6:	d1db      	bne.n	90013860 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
900138a8:	3308      	adds	r3, #8
900138aa:	e7d5      	b.n	90013858 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900138ac:	42bc      	cmp	r4, r7
900138ae:	d903      	bls.n	900138b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900138b0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900138b4:	3c08      	subs	r4, #8
900138b6:	e6f4      	b.n	900136a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900138b8:	b050      	add	sp, #320	@ 0x140
900138ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900138be <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900138be:	b510      	push	{r4, lr}
900138c0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900138c2:	4604      	mov	r4, r0
900138c4:	07da      	lsls	r2, r3, #31
900138c6:	d507      	bpl.n	900138d8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
900138c8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
900138cc:	f7ff fe8c 	bl	900135e8 <_ZN8touchgfx7Outline6lineToEii>
900138d0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900138d2:	f023 0301 	bic.w	r3, r3, #1
900138d6:	6243      	str	r3, [r0, #36]	@ 0x24
900138d8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900138da:	079b      	lsls	r3, r3, #30
900138dc:	d521      	bpl.n	90013922 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
900138de:	6923      	ldr	r3, [r4, #16]
900138e0:	88d9      	ldrh	r1, [r3, #6]
900138e2:	889a      	ldrh	r2, [r3, #4]
900138e4:	430a      	orrs	r2, r1
900138e6:	d010      	beq.n	9001390a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900138e8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900138ec:	2a00      	cmp	r2, #0
900138ee:	db0c      	blt.n	9001390a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900138f0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900138f2:	428a      	cmp	r2, r1
900138f4:	da09      	bge.n	9001390a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900138f6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
900138fa:	4291      	cmp	r1, r2
900138fc:	f102 0201 	add.w	r2, r2, #1
90013900:	bf88      	it	hi
90013902:	3308      	addhi	r3, #8
90013904:	60a2      	str	r2, [r4, #8]
90013906:	bf88      	it	hi
90013908:	6123      	strhi	r3, [r4, #16]
9001390a:	68a1      	ldr	r1, [r4, #8]
9001390c:	b129      	cbz	r1, 9001391a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
9001390e:	6863      	ldr	r3, [r4, #4]
90013910:	4299      	cmp	r1, r3
90013912:	d802      	bhi.n	9001391a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013914:	68e0      	ldr	r0, [r4, #12]
90013916:	f7ff febd 	bl	90013694 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
9001391a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001391c:	f023 0302 	bic.w	r3, r3, #2
90013920:	6263      	str	r3, [r4, #36]	@ 0x24
90013922:	68e0      	ldr	r0, [r4, #12]
90013924:	bd10      	pop	{r4, pc}
	...

90013928 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90013928:	4b01      	ldr	r3, [pc, #4]	@ (90013930 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
9001392a:	6818      	ldr	r0, [r3, #0]
9001392c:	4770      	bx	lr
9001392e:	bf00      	nop
90013930:	240218bc 	.word	0x240218bc

90013934 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90013934:	4b01      	ldr	r3, [pc, #4]	@ (9001393c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90013936:	6818      	ldr	r0, [r3, #0]
90013938:	4770      	bx	lr
9001393a:	bf00      	nop
9001393c:	240218c0 	.word	0x240218c0

90013940 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90013940:	b510      	push	{r4, lr}
90013942:	6803      	ldr	r3, [r0, #0]
90013944:	460c      	mov	r4, r1
90013946:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013948:	4798      	blx	r3
9001394a:	1b03      	subs	r3, r0, r4
9001394c:	4258      	negs	r0, r3
9001394e:	4158      	adcs	r0, r3
90013950:	bd10      	pop	{r4, pc}
	...

90013954 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90013954:	4b01      	ldr	r3, [pc, #4]	@ (9001395c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90013956:	6019      	str	r1, [r3, #0]
90013958:	4770      	bx	lr
9001395a:	bf00      	nop
9001395c:	240218c4 	.word	0x240218c4

90013960 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90013960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013964:	4696      	mov	lr, r2
90013966:	b097      	sub	sp, #92	@ 0x5c
90013968:	4605      	mov	r5, r0
9001396a:	4614      	mov	r4, r2
9001396c:	460e      	mov	r6, r1
9001396e:	461f      	mov	r7, r3
90013970:	f10d 0c1c 	add.w	ip, sp, #28
90013974:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90013978:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
9001397c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90013980:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013984:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013988:	f8de 3000 	ldr.w	r3, [lr]
9001398c:	f104 0e14 	add.w	lr, r4, #20
90013990:	f8cc 3000 	str.w	r3, [ip]
90013994:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90013998:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001399c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900139a0:	f8de 3000 	ldr.w	r3, [lr]
900139a4:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
900139a8:	f8cc 3000 	str.w	r3, [ip]
900139ac:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
900139b0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900139b4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900139b8:	f8de 3000 	ldr.w	r3, [lr]
900139bc:	4631      	mov	r1, r6
900139be:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900139c0:	4628      	mov	r0, r5
900139c2:	f8cc 3000 	str.w	r3, [ip]
900139c6:	682b      	ldr	r3, [r5, #0]
900139c8:	9201      	str	r2, [sp, #4]
900139ca:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900139cc:	f8cd 8008 	str.w	r8, [sp, #8]
900139d0:	9200      	str	r2, [sp, #0]
900139d2:	aa07      	add	r2, sp, #28
900139d4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900139d8:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
900139dc:	463b      	mov	r3, r7
900139de:	47d8      	blx	fp
900139e0:	46a6      	mov	lr, r4
900139e2:	f10d 0c1c 	add.w	ip, sp, #28
900139e6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900139ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900139ee:	f8de 3000 	ldr.w	r3, [lr]
900139f2:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
900139f6:	343c      	adds	r4, #60	@ 0x3c
900139f8:	f8cc 3000 	str.w	r3, [ip]
900139fc:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90013a00:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013a04:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013a08:	f8de 3000 	ldr.w	r3, [lr]
90013a0c:	f8cc 3000 	str.w	r3, [ip]
90013a10:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90013a14:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90013a16:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013a1a:	6823      	ldr	r3, [r4, #0]
90013a1c:	4631      	mov	r1, r6
90013a1e:	4628      	mov	r0, r5
90013a20:	f8cc 3000 	str.w	r3, [ip]
90013a24:	682b      	ldr	r3, [r5, #0]
90013a26:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013a2a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90013a2c:	f8cd 8008 	str.w	r8, [sp, #8]
90013a30:	9201      	str	r2, [sp, #4]
90013a32:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90013a34:	9200      	str	r2, [sp, #0]
90013a36:	aa07      	add	r2, sp, #28
90013a38:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90013a3a:	463b      	mov	r3, r7
90013a3c:	47a0      	blx	r4
90013a3e:	b017      	add	sp, #92	@ 0x5c
90013a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90013a44 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90013a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013a48:	b08d      	sub	sp, #52	@ 0x34
90013a4a:	4688      	mov	r8, r1
90013a4c:	f8d3 c000 	ldr.w	ip, [r3]
90013a50:	9916      	ldr	r1, [sp, #88]	@ 0x58
90013a52:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
90013a56:	680f      	ldr	r7, [r1, #0]
90013a58:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90013a5c:	eba7 070c 	sub.w	r7, r7, ip
90013a60:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90013a64:	edd3 6a07 	vldr	s13, [r3, #28]
90013a68:	42bc      	cmp	r4, r7
90013a6a:	9918      	ldr	r1, [sp, #96]	@ 0x60
90013a6c:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90013a70:	bfa8      	it	ge
90013a72:	463c      	movge	r4, r7
90013a74:	f9b1 9000 	ldrsh.w	r9, [r1]
90013a78:	f9ba 1000 	ldrsh.w	r1, [sl]
90013a7c:	ee07 4a90 	vmov	s15, r4
90013a80:	eb09 0e0c 	add.w	lr, r9, ip
90013a84:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90013a88:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90013a8c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90013a90:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90013a94:	4571      	cmp	r1, lr
90013a96:	ee25 4a04 	vmul.f32	s8, s10, s8
90013a9a:	ee65 4a24 	vmul.f32	s9, s10, s9
90013a9e:	ee25 5a27 	vmul.f32	s10, s10, s15
90013aa2:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90013aa6:	ee71 0aa4 	vadd.f32	s1, s3, s9
90013aaa:	ee32 1a05 	vadd.f32	s2, s4, s10
90013aae:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90013ab2:	ee36 0a84 	vadd.f32	s0, s13, s8
90013ab6:	ee61 1a87 	vmul.f32	s3, s3, s14
90013aba:	ee22 2a07 	vmul.f32	s4, s4, s14
90013abe:	f340 808c 	ble.w	90013bda <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90013ac2:	eba1 060e 	sub.w	r6, r1, lr
90013ac6:	fb96 f5f4 	sdiv	r5, r6, r4
90013aca:	ee07 5a10 	vmov	s14, r5
90013ace:	2d00      	cmp	r5, #0
90013ad0:	fb04 6615 	mls	r6, r4, r5, r6
90013ad4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90013ad8:	eea7 0a04 	vfma.f32	s0, s14, s8
90013adc:	eee7 0a24 	vfma.f32	s1, s14, s9
90013ae0:	eea7 1a05 	vfma.f32	s2, s14, s10
90013ae4:	dd12      	ble.n	90013b0c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90013ae6:	ee70 6a44 	vsub.f32	s13, s0, s8
90013aea:	ee70 1ae4 	vsub.f32	s3, s1, s9
90013aee:	ee31 2a45 	vsub.f32	s4, s2, s10
90013af2:	eef5 6a40 	vcmp.f32	s13, #0.0
90013af6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013afa:	bf14      	ite	ne
90013afc:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90013b00:	eeb0 7a67 	vmoveq.f32	s14, s15
90013b04:	ee61 1a87 	vmul.f32	s3, s3, s14
90013b08:	ee22 2a07 	vmul.f32	s4, s4, s14
90013b0c:	fb05 f204 	mul.w	r2, r5, r4
90013b10:	1abf      	subs	r7, r7, r2
90013b12:	4494      	add	ip, r2
90013b14:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90013b18:	4411      	add	r1, r2
90013b1a:	eb09 020c 	add.w	r2, r9, ip
90013b1e:	b209      	sxth	r1, r1
90013b20:	443a      	add	r2, r7
90013b22:	428a      	cmp	r2, r1
90013b24:	bfc4      	itt	gt
90013b26:	eba1 0209 	subgt.w	r2, r1, r9
90013b2a:	eba2 070c 	subgt.w	r7, r2, ip
90013b2e:	2f00      	cmp	r7, #0
90013b30:	dd50      	ble.n	90013bd4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90013b32:	fb97 f1f4 	sdiv	r1, r7, r4
90013b36:	fb04 7211 	mls	r2, r4, r1, r7
90013b3a:	b90a      	cbnz	r2, 90013b40 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90013b3c:	3901      	subs	r1, #1
90013b3e:	4622      	mov	r2, r4
90013b40:	eec7 3a80 	vdiv.f32	s7, s15, s0
90013b44:	6840      	ldr	r0, [r0, #4]
90013b46:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90013b4a:	44b6      	add	lr, r6
90013b4c:	f8d0 a000 	ldr.w	sl, [r0]
90013b50:	2900      	cmp	r1, #0
90013b52:	bfcc      	ite	gt
90013b54:	46a1      	movgt	r9, r4
90013b56:	4691      	movle	r9, r2
90013b58:	900b      	str	r0, [sp, #44]	@ 0x2c
90013b5a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90013b5c:	fb04 e505 	mla	r5, r4, r5, lr
90013b60:	eef0 6a42 	vmov.f32	s13, s4
90013b64:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90013b68:	9008      	str	r0, [sp, #32]
90013b6a:	eeb0 7a61 	vmov.f32	s14, s3
90013b6e:	9818      	ldr	r0, [sp, #96]	@ 0x60
90013b70:	695b      	ldr	r3, [r3, #20]
90013b72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90013b76:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90013b7a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90013b7e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90013b80:	445b      	add	r3, fp
90013b82:	9307      	str	r3, [sp, #28]
90013b84:	ee16 3a90 	vmov	r3, s13
90013b88:	e9cd 8505 	strd	r8, r5, [sp, #20]
90013b8c:	ee60 2aa3 	vmul.f32	s5, s1, s7
90013b90:	ee21 3a23 	vmul.f32	s6, s2, s7
90013b94:	ee72 7ae1 	vsub.f32	s15, s5, s3
90013b98:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013b9c:	ee17 7a90 	vmov	r7, s15
90013ba0:	ee73 7a42 	vsub.f32	s15, s6, s4
90013ba4:	fb97 f7f4 	sdiv	r7, r7, r4
90013ba8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013bac:	ee17 ca90 	vmov	ip, s15
90013bb0:	fb9c fcf4 	sdiv	ip, ip, r4
90013bb4:	fb0c 3306 	mla	r3, ip, r6, r3
90013bb8:	9302      	str	r3, [sp, #8]
90013bba:	ee17 3a10 	vmov	r3, s14
90013bbe:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90013bc2:	fb07 3706 	mla	r7, r7, r6, r3
90013bc6:	eba9 0306 	sub.w	r3, r9, r6
90013bca:	e9cd 4700 	strd	r4, r7, [sp]
90013bce:	f8da 4008 	ldr.w	r4, [sl, #8]
90013bd2:	47a0      	blx	r4
90013bd4:	b00d      	add	sp, #52	@ 0x34
90013bd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013bda:	2500      	movs	r5, #0
90013bdc:	462e      	mov	r6, r5
90013bde:	e799      	b.n	90013b14 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90013be0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90013be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013be4:	b0db      	sub	sp, #364	@ 0x16c
90013be6:	461d      	mov	r5, r3
90013be8:	4614      	mov	r4, r2
90013bea:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90013bee:	910f      	str	r1, [sp, #60]	@ 0x3c
90013bf0:	4629      	mov	r1, r5
90013bf2:	930a      	str	r3, [sp, #40]	@ 0x28
90013bf4:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90013bf8:	9009      	str	r0, [sp, #36]	@ 0x24
90013bfa:	930b      	str	r3, [sp, #44]	@ 0x2c
90013bfc:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90013c00:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90013c04:	9310      	str	r3, [sp, #64]	@ 0x40
90013c06:	6803      	ldr	r3, [r0, #0]
90013c08:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90013c0a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90013c0e:	47b8      	blx	r7
90013c10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90013c12:	6058      	str	r0, [r3, #4]
90013c14:	2800      	cmp	r0, #0
90013c16:	f000 83a1 	beq.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013c1a:	682b      	ldr	r3, [r5, #0]
90013c1c:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90013c20:	ed94 7a02 	vldr	s14, [r4, #8]
90013c24:	9314      	str	r3, [sp, #80]	@ 0x50
90013c26:	686b      	ldr	r3, [r5, #4]
90013c28:	eeb4 7ae7 	vcmpe.f32	s14, s15
90013c2c:	9315      	str	r3, [sp, #84]	@ 0x54
90013c2e:	4bc1      	ldr	r3, [pc, #772]	@ (90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90013c30:	7819      	ldrb	r1, [r3, #0]
90013c32:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90013c36:	2900      	cmp	r1, #0
90013c38:	bf16      	itet	ne
90013c3a:	4619      	movne	r1, r3
90013c3c:	4611      	moveq	r1, r2
90013c3e:	4613      	movne	r3, r2
90013c40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013c44:	9116      	str	r1, [sp, #88]	@ 0x58
90013c46:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90013c4a:	f240 8387 	bls.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013c4e:	ed94 7a07 	vldr	s14, [r4, #28]
90013c52:	eeb4 7ae7 	vcmpe.f32	s14, s15
90013c56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013c5a:	f240 837f 	bls.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013c5e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90013c62:	eeb4 7ae7 	vcmpe.f32	s14, s15
90013c66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013c6a:	f240 8377 	bls.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013c6e:	6822      	ldr	r2, [r4, #0]
90013c70:	4bb1      	ldr	r3, [pc, #708]	@ (90013f38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90013c72:	429a      	cmp	r2, r3
90013c74:	f2c0 8372 	blt.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013c78:	49b0      	ldr	r1, [pc, #704]	@ (90013f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90013c7a:	6963      	ldr	r3, [r4, #20]
90013c7c:	428a      	cmp	r2, r1
90013c7e:	f300 836d 	bgt.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013c82:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90013c86:	48ae      	ldr	r0, [pc, #696]	@ (90013f40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90013c88:	33ff      	adds	r3, #255	@ 0xff
90013c8a:	4283      	cmp	r3, r0
90013c8c:	f200 8366 	bhi.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013c90:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90013c92:	4dac      	ldr	r5, [pc, #688]	@ (90013f44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90013c94:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90013c98:	33ff      	adds	r3, #255	@ 0xff
90013c9a:	42ab      	cmp	r3, r5
90013c9c:	f200 835e 	bhi.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013ca0:	6862      	ldr	r2, [r4, #4]
90013ca2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90013ca6:	33ff      	adds	r3, #255	@ 0xff
90013ca8:	4283      	cmp	r3, r0
90013caa:	f200 8357 	bhi.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013cae:	69a1      	ldr	r1, [r4, #24]
90013cb0:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90013cb4:	33ff      	adds	r3, #255	@ 0xff
90013cb6:	4283      	cmp	r3, r0
90013cb8:	f200 8350 	bhi.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013cbc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90013cbe:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90013cc2:	30ff      	adds	r0, #255	@ 0xff
90013cc4:	42a8      	cmp	r0, r5
90013cc6:	f200 8349 	bhi.w	9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013cca:	428a      	cmp	r2, r1
90013ccc:	f280 8110 	bge.w	90013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90013cd0:	429a      	cmp	r2, r3
90013cd2:	f300 8119 	bgt.w	90013f08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90013cd6:	4299      	cmp	r1, r3
90013cd8:	f280 811d 	bge.w	90013f16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90013cdc:	2502      	movs	r5, #2
90013cde:	2701      	movs	r7, #1
90013ce0:	46a9      	mov	r9, r5
90013ce2:	46b8      	mov	r8, r7
90013ce4:	f04f 0a00 	mov.w	sl, #0
90013ce8:	4621      	mov	r1, r4
90013cea:	a849      	add	r0, sp, #292	@ 0x124
90013cec:	f004 f934 	bl	90017f58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90013cf0:	4622      	mov	r2, r4
90013cf2:	4653      	mov	r3, sl
90013cf4:	a949      	add	r1, sp, #292	@ 0x124
90013cf6:	f8cd 9000 	str.w	r9, [sp]
90013cfa:	a819      	add	r0, sp, #100	@ 0x64
90013cfc:	f004 fa5c 	bl	900181b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013d00:	4622      	mov	r2, r4
90013d02:	4653      	mov	r3, sl
90013d04:	a949      	add	r1, sp, #292	@ 0x124
90013d06:	f8cd 8000 	str.w	r8, [sp]
90013d0a:	a829      	add	r0, sp, #164	@ 0xa4
90013d0c:	f004 fa54 	bl	900181b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013d10:	4643      	mov	r3, r8
90013d12:	4622      	mov	r2, r4
90013d14:	a949      	add	r1, sp, #292	@ 0x124
90013d16:	f8cd 9000 	str.w	r9, [sp]
90013d1a:	a839      	add	r0, sp, #228	@ 0xe4
90013d1c:	f004 fa4c 	bl	900181b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013d20:	42af      	cmp	r7, r5
90013d22:	af12      	add	r7, sp, #72	@ 0x48
90013d24:	bfb7      	itett	lt
90013d26:	2300      	movlt	r3, #0
90013d28:	2301      	movge	r3, #1
90013d2a:	ad29      	addlt	r5, sp, #164	@ 0xa4
90013d2c:	ac19      	addlt	r4, sp, #100	@ 0x64
90013d2e:	bfb1      	iteee	lt
90013d30:	930e      	strlt	r3, [sp, #56]	@ 0x38
90013d32:	ad19      	addge	r5, sp, #100	@ 0x64
90013d34:	930e      	strge	r3, [sp, #56]	@ 0x38
90013d36:	ac29      	addge	r4, sp, #164	@ 0xa4
90013d38:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90013d3a:	e893 0003 	ldmia.w	r3, {r0, r1}
90013d3e:	e887 0003 	stmia.w	r7, {r0, r1}
90013d42:	b928      	cbnz	r0, 90013d50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90013d44:	4b80      	ldr	r3, [pc, #512]	@ (90013f48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90013d46:	6818      	ldr	r0, [r3, #0]
90013d48:	6803      	ldr	r3, [r0, #0]
90013d4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90013d4c:	4798      	blx	r3
90013d4e:	6038      	str	r0, [r7, #0]
90013d50:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90013d52:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90013d56:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90013d5a:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90013d5c:	930c      	str	r3, [sp, #48]	@ 0x30
90013d5e:	990c      	ldr	r1, [sp, #48]	@ 0x30
90013d60:	6963      	ldr	r3, [r4, #20]
90013d62:	440b      	add	r3, r1
90013d64:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90013d68:	4408      	add	r0, r1
90013d6a:	b200      	sxth	r0, r0
90013d6c:	4283      	cmp	r3, r0
90013d6e:	900d      	str	r0, [sp, #52]	@ 0x34
90013d70:	f280 80dd 	bge.w	90013f2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90013d74:	428b      	cmp	r3, r1
90013d76:	da08      	bge.n	90013d8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013d78:	2a00      	cmp	r2, #0
90013d7a:	dd06      	ble.n	90013d8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013d7c:	1acb      	subs	r3, r1, r3
90013d7e:	429a      	cmp	r2, r3
90013d80:	f2c0 80e4 	blt.w	90013f4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90013d84:	2b00      	cmp	r3, #0
90013d86:	f300 80e2 	bgt.w	90013f4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90013d8a:	6967      	ldr	r7, [r4, #20]
90013d8c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90013d90:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90013d92:	443b      	add	r3, r7
90013d94:	461f      	mov	r7, r3
90013d96:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90013d98:	1bdf      	subs	r7, r3, r7
90013d9a:	4297      	cmp	r7, r2
90013d9c:	bfa8      	it	ge
90013d9e:	4617      	movge	r7, r2
90013da0:	2f00      	cmp	r7, #0
90013da2:	f340 8166 	ble.w	90014072 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90013da6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90013da8:	6829      	ldr	r1, [r5, #0]
90013daa:	f9b3 2000 	ldrsh.w	r2, [r3]
90013dae:	f9bb 3000 	ldrsh.w	r3, [fp]
90013db2:	4411      	add	r1, r2
90013db4:	6820      	ldr	r0, [r4, #0]
90013db6:	4299      	cmp	r1, r3
90013db8:	dd1a      	ble.n	90013df0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90013dba:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90013dbe:	4402      	add	r2, r0
90013dc0:	440b      	add	r3, r1
90013dc2:	b21b      	sxth	r3, r3
90013dc4:	429a      	cmp	r2, r3
90013dc6:	dc13      	bgt.n	90013df0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90013dc8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90013dca:	a912      	add	r1, sp, #72	@ 0x48
90013dcc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90013dce:	9809      	ldr	r0, [sp, #36]	@ 0x24
90013dd0:	681b      	ldr	r3, [r3, #0]
90013dd2:	9206      	str	r2, [sp, #24]
90013dd4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90013dd6:	9500      	str	r5, [sp, #0]
90013dd8:	9205      	str	r2, [sp, #20]
90013dda:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90013ddc:	e9cd b203 	strd	fp, r2, [sp, #12]
90013de0:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90013de2:	e9cd 8201 	strd	r8, r2, [sp, #4]
90013de6:	aa49      	add	r2, sp, #292	@ 0x124
90013de8:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90013dec:	4623      	mov	r3, r4
90013dee:	47c8      	blx	r9
90013df0:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90013df4:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90013df8:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90013dfc:	ee37 7a27 	vadd.f32	s14, s14, s15
90013e00:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90013e04:	68a1      	ldr	r1, [r4, #8]
90013e06:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013e0a:	ed94 6a08 	vldr	s12, [r4, #32]
90013e0e:	edd4 6a07 	vldr	s13, [r4, #28]
90013e12:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90013e16:	ee76 6a86 	vadd.f32	s13, s13, s12
90013e1a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90013e1e:	e9d4 2300 	ldrd	r2, r3, [r4]
90013e22:	edc4 6a07 	vstr	s13, [r4, #28]
90013e26:	441a      	add	r2, r3
90013e28:	6963      	ldr	r3, [r4, #20]
90013e2a:	3301      	adds	r3, #1
90013e2c:	6022      	str	r2, [r4, #0]
90013e2e:	6163      	str	r3, [r4, #20]
90013e30:	69a3      	ldr	r3, [r4, #24]
90013e32:	3b01      	subs	r3, #1
90013e34:	61a3      	str	r3, [r4, #24]
90013e36:	6923      	ldr	r3, [r4, #16]
90013e38:	440b      	add	r3, r1
90013e3a:	68e1      	ldr	r1, [r4, #12]
90013e3c:	428b      	cmp	r3, r1
90013e3e:	6123      	str	r3, [r4, #16]
90013e40:	db15      	blt.n	90013e6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90013e42:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90013e46:	3201      	adds	r2, #1
90013e48:	1a5b      	subs	r3, r3, r1
90013e4a:	ee76 6a26 	vadd.f32	s13, s12, s13
90013e4e:	6022      	str	r2, [r4, #0]
90013e50:	6123      	str	r3, [r4, #16]
90013e52:	edc4 6a07 	vstr	s13, [r4, #28]
90013e56:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90013e5a:	ee36 7a87 	vadd.f32	s14, s13, s14
90013e5e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90013e62:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90013e66:	ee77 7a27 	vadd.f32	s15, s14, s15
90013e6a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90013e6e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90013e72:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90013e76:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90013e7a:	ee37 7a27 	vadd.f32	s14, s14, s15
90013e7e:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90013e82:	68a9      	ldr	r1, [r5, #8]
90013e84:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013e88:	ed95 6a08 	vldr	s12, [r5, #32]
90013e8c:	edd5 6a07 	vldr	s13, [r5, #28]
90013e90:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90013e94:	ee76 6a86 	vadd.f32	s13, s13, s12
90013e98:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90013e9c:	e9d5 2300 	ldrd	r2, r3, [r5]
90013ea0:	edc5 6a07 	vstr	s13, [r5, #28]
90013ea4:	441a      	add	r2, r3
90013ea6:	696b      	ldr	r3, [r5, #20]
90013ea8:	3301      	adds	r3, #1
90013eaa:	602a      	str	r2, [r5, #0]
90013eac:	616b      	str	r3, [r5, #20]
90013eae:	69ab      	ldr	r3, [r5, #24]
90013eb0:	3b01      	subs	r3, #1
90013eb2:	61ab      	str	r3, [r5, #24]
90013eb4:	692b      	ldr	r3, [r5, #16]
90013eb6:	440b      	add	r3, r1
90013eb8:	68e9      	ldr	r1, [r5, #12]
90013eba:	428b      	cmp	r3, r1
90013ebc:	612b      	str	r3, [r5, #16]
90013ebe:	db15      	blt.n	90013eec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90013ec0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90013ec4:	3201      	adds	r2, #1
90013ec6:	1a5b      	subs	r3, r3, r1
90013ec8:	ee76 6a26 	vadd.f32	s13, s12, s13
90013ecc:	602a      	str	r2, [r5, #0]
90013ece:	612b      	str	r3, [r5, #16]
90013ed0:	edc5 6a07 	vstr	s13, [r5, #28]
90013ed4:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90013ed8:	ee36 7a87 	vadd.f32	s14, s13, s14
90013edc:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90013ee0:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90013ee4:	ee77 7a27 	vadd.f32	s15, s14, s15
90013ee8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90013eec:	3f01      	subs	r7, #1
90013eee:	e757      	b.n	90013da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90013ef0:	4299      	cmp	r1, r3
90013ef2:	dc13      	bgt.n	90013f1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90013ef4:	429a      	cmp	r2, r3
90013ef6:	da14      	bge.n	90013f22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90013ef8:	2502      	movs	r5, #2
90013efa:	2703      	movs	r7, #3
90013efc:	f04f 0800 	mov.w	r8, #0
90013f00:	46a9      	mov	r9, r5
90013f02:	f04f 0a01 	mov.w	sl, #1
90013f06:	e6ef      	b.n	90013ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90013f08:	2501      	movs	r5, #1
90013f0a:	2700      	movs	r7, #0
90013f0c:	46a9      	mov	r9, r5
90013f0e:	46b8      	mov	r8, r7
90013f10:	f04f 0a02 	mov.w	sl, #2
90013f14:	e6e8      	b.n	90013ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90013f16:	2501      	movs	r5, #1
90013f18:	2702      	movs	r7, #2
90013f1a:	e6e1      	b.n	90013ce0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90013f1c:	2500      	movs	r5, #0
90013f1e:	2701      	movs	r7, #1
90013f20:	e7f4      	b.n	90013f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90013f22:	2702      	movs	r7, #2
90013f24:	2503      	movs	r5, #3
90013f26:	f04f 0900 	mov.w	r9, #0
90013f2a:	46b8      	mov	r8, r7
90013f2c:	e7e9      	b.n	90013f02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90013f2e:	4613      	mov	r3, r2
90013f30:	e728      	b.n	90013d84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90013f32:	bf00      	nop
90013f34:	240218ac 	.word	0x240218ac
90013f38:	fffd8f01 	.word	0xfffd8f01
90013f3c:	00027100 	.word	0x00027100
90013f40:	0004e1ff 	.word	0x0004e1ff
90013f44:	0004e1fe 	.word	0x0004e1fe
90013f48:	240218b4 	.word	0x240218b4
90013f4c:	4613      	mov	r3, r2
90013f4e:	992b      	ldr	r1, [sp, #172]	@ 0xac
90013f50:	469e      	mov	lr, r3
90013f52:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90013f54:	469c      	mov	ip, r3
90013f56:	9111      	str	r1, [sp, #68]	@ 0x44
90013f58:	f04f 0900 	mov.w	r9, #0
90013f5c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90013f60:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90013f64:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90013f68:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90013f6c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90013f70:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90013f74:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90013f78:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90013f7c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90013f80:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90013f84:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90013f88:	f1bc 0f00 	cmp.w	ip, #0
90013f8c:	d147      	bne.n	9001401e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90013f8e:	eb03 0c07 	add.w	ip, r3, r7
90013f92:	1ad7      	subs	r7, r2, r3
90013f94:	f1b9 0f00 	cmp.w	r9, #0
90013f98:	d009      	beq.n	90013fae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90013f9a:	9029      	str	r0, [sp, #164]	@ 0xa4
90013f9c:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90013fa0:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90013fa4:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90013fa8:	912d      	str	r1, [sp, #180]	@ 0xb4
90013faa:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
90013fae:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90013fb0:	f04f 0800 	mov.w	r8, #0
90013fb4:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90013fb8:	9111      	str	r1, [sp, #68]	@ 0x44
90013fba:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90013fbe:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90013fc2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90013fc6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90013fca:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90013fce:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90013fd2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90013fd6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90013fda:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90013fde:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90013fe2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90013fe6:	f1be 0f00 	cmp.w	lr, #0
90013fea:	d031      	beq.n	90014050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90013fec:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90013fee:	4450      	add	r0, sl
90013ff0:	ee76 6aa4 	vadd.f32	s13, s13, s9
90013ff4:	4431      	add	r1, r6
90013ff6:	ee37 7a04 	vadd.f32	s14, s14, s8
90013ffa:	ee77 7aa3 	vadd.f32	s15, s15, s7
90013ffe:	4549      	cmp	r1, r9
90014000:	db08      	blt.n	90014014 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90014002:	ee77 7a85 	vadd.f32	s15, s15, s10
90014006:	3001      	adds	r0, #1
90014008:	ee76 6aa5 	vadd.f32	s13, s13, s11
9001400c:	eba1 0109 	sub.w	r1, r1, r9
90014010:	ee37 7a06 	vadd.f32	s14, s14, s12
90014014:	f10e 3eff 	add.w	lr, lr, #4294967295
90014018:	f04f 0801 	mov.w	r8, #1
9001401c:	e7e3      	b.n	90013fe6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
9001401e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90014020:	4450      	add	r0, sl
90014022:	ee37 7a24 	vadd.f32	s14, s14, s9
90014026:	4431      	add	r1, r6
90014028:	ee77 7a84 	vadd.f32	s15, s15, s8
9001402c:	ee76 6aa3 	vadd.f32	s13, s13, s7
90014030:	4541      	cmp	r1, r8
90014032:	db08      	blt.n	90014046 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90014034:	ee76 6a85 	vadd.f32	s13, s13, s10
90014038:	3001      	adds	r0, #1
9001403a:	ee37 7a25 	vadd.f32	s14, s14, s11
9001403e:	eba1 0108 	sub.w	r1, r1, r8
90014042:	ee77 7a86 	vadd.f32	s15, s15, s12
90014046:	f10c 3cff 	add.w	ip, ip, #4294967295
9001404a:	f04f 0901 	mov.w	r9, #1
9001404e:	e79b      	b.n	90013f88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90014050:	449c      	add	ip, r3
90014052:	1aff      	subs	r7, r7, r3
90014054:	f1b8 0f00 	cmp.w	r8, #0
90014058:	d009      	beq.n	9001406e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
9001405a:	9019      	str	r0, [sp, #100]	@ 0x64
9001405c:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90014060:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90014064:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90014068:	911d      	str	r1, [sp, #116]	@ 0x74
9001406a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
9001406e:	1ad2      	subs	r2, r2, r3
90014070:	e68b      	b.n	90013d8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014072:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90014074:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90014076:	2b00      	cmp	r3, #0
90014078:	f000 80d1 	beq.w	9001421e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
9001407c:	ad19      	add	r5, sp, #100	@ 0x64
9001407e:	ac39      	add	r4, sp, #228	@ 0xe4
90014080:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014082:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014086:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001408a:	930c      	str	r3, [sp, #48]	@ 0x30
9001408c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001408e:	6963      	ldr	r3, [r4, #20]
90014090:	440b      	add	r3, r1
90014092:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90014096:	4408      	add	r0, r1
90014098:	b200      	sxth	r0, r0
9001409a:	4283      	cmp	r3, r0
9001409c:	900d      	str	r0, [sp, #52]	@ 0x34
9001409e:	f280 80c1 	bge.w	90014224 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900140a2:	428b      	cmp	r3, r1
900140a4:	da08      	bge.n	900140b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900140a6:	2a00      	cmp	r2, #0
900140a8:	dd06      	ble.n	900140b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900140aa:	1acb      	subs	r3, r1, r3
900140ac:	429a      	cmp	r2, r3
900140ae:	f2c0 80bb 	blt.w	90014228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
900140b2:	2b00      	cmp	r3, #0
900140b4:	f300 80b9 	bgt.w	9001422a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
900140b8:	6967      	ldr	r7, [r4, #20]
900140ba:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
900140be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900140c0:	443b      	add	r3, r7
900140c2:	461f      	mov	r7, r3
900140c4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900140c6:	1bdf      	subs	r7, r3, r7
900140c8:	4297      	cmp	r7, r2
900140ca:	bfa8      	it	ge
900140cc:	4617      	movge	r7, r2
900140ce:	2f00      	cmp	r7, #0
900140d0:	f340 813c 	ble.w	9001434c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
900140d4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900140d6:	6829      	ldr	r1, [r5, #0]
900140d8:	f9b3 2000 	ldrsh.w	r2, [r3]
900140dc:	f9bb 3000 	ldrsh.w	r3, [fp]
900140e0:	4411      	add	r1, r2
900140e2:	6820      	ldr	r0, [r4, #0]
900140e4:	4299      	cmp	r1, r3
900140e6:	dd1a      	ble.n	9001411e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
900140e8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
900140ec:	4402      	add	r2, r0
900140ee:	440b      	add	r3, r1
900140f0:	b21b      	sxth	r3, r3
900140f2:	429a      	cmp	r2, r3
900140f4:	dc13      	bgt.n	9001411e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
900140f6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900140f8:	a912      	add	r1, sp, #72	@ 0x48
900140fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900140fc:	9809      	ldr	r0, [sp, #36]	@ 0x24
900140fe:	681b      	ldr	r3, [r3, #0]
90014100:	9206      	str	r2, [sp, #24]
90014102:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90014104:	9500      	str	r5, [sp, #0]
90014106:	9205      	str	r2, [sp, #20]
90014108:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001410a:	e9cd b203 	strd	fp, r2, [sp, #12]
9001410e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90014110:	e9cd 8201 	strd	r8, r2, [sp, #4]
90014114:	aa49      	add	r2, sp, #292	@ 0x124
90014116:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
9001411a:	4623      	mov	r3, r4
9001411c:	47c8      	blx	r9
9001411e:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90014122:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90014126:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
9001412a:	ee37 7a27 	vadd.f32	s14, s14, s15
9001412e:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90014132:	68a1      	ldr	r1, [r4, #8]
90014134:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014138:	ed94 6a08 	vldr	s12, [r4, #32]
9001413c:	edd4 6a07 	vldr	s13, [r4, #28]
90014140:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014144:	ee76 6a86 	vadd.f32	s13, s13, s12
90014148:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
9001414c:	e9d4 2300 	ldrd	r2, r3, [r4]
90014150:	edc4 6a07 	vstr	s13, [r4, #28]
90014154:	441a      	add	r2, r3
90014156:	6963      	ldr	r3, [r4, #20]
90014158:	3301      	adds	r3, #1
9001415a:	6022      	str	r2, [r4, #0]
9001415c:	6163      	str	r3, [r4, #20]
9001415e:	69a3      	ldr	r3, [r4, #24]
90014160:	3b01      	subs	r3, #1
90014162:	61a3      	str	r3, [r4, #24]
90014164:	6923      	ldr	r3, [r4, #16]
90014166:	440b      	add	r3, r1
90014168:	68e1      	ldr	r1, [r4, #12]
9001416a:	428b      	cmp	r3, r1
9001416c:	6123      	str	r3, [r4, #16]
9001416e:	db15      	blt.n	9001419c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90014170:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90014174:	3201      	adds	r2, #1
90014176:	1a5b      	subs	r3, r3, r1
90014178:	ee76 6a26 	vadd.f32	s13, s12, s13
9001417c:	6022      	str	r2, [r4, #0]
9001417e:	6123      	str	r3, [r4, #16]
90014180:	edc4 6a07 	vstr	s13, [r4, #28]
90014184:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90014188:	ee36 7a87 	vadd.f32	s14, s13, s14
9001418c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014190:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90014194:	ee77 7a27 	vadd.f32	s15, s14, s15
90014198:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
9001419c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
900141a0:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
900141a4:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
900141a8:	ee37 7a27 	vadd.f32	s14, s14, s15
900141ac:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
900141b0:	68a9      	ldr	r1, [r5, #8]
900141b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
900141b6:	ed95 6a08 	vldr	s12, [r5, #32]
900141ba:	edd5 6a07 	vldr	s13, [r5, #28]
900141be:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900141c2:	ee76 6a86 	vadd.f32	s13, s13, s12
900141c6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900141ca:	e9d5 2300 	ldrd	r2, r3, [r5]
900141ce:	edc5 6a07 	vstr	s13, [r5, #28]
900141d2:	441a      	add	r2, r3
900141d4:	696b      	ldr	r3, [r5, #20]
900141d6:	3301      	adds	r3, #1
900141d8:	602a      	str	r2, [r5, #0]
900141da:	616b      	str	r3, [r5, #20]
900141dc:	69ab      	ldr	r3, [r5, #24]
900141de:	3b01      	subs	r3, #1
900141e0:	61ab      	str	r3, [r5, #24]
900141e2:	692b      	ldr	r3, [r5, #16]
900141e4:	440b      	add	r3, r1
900141e6:	68e9      	ldr	r1, [r5, #12]
900141e8:	428b      	cmp	r3, r1
900141ea:	612b      	str	r3, [r5, #16]
900141ec:	db15      	blt.n	9001421a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
900141ee:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
900141f2:	3201      	adds	r2, #1
900141f4:	1a5b      	subs	r3, r3, r1
900141f6:	ee76 6a26 	vadd.f32	s13, s12, s13
900141fa:	602a      	str	r2, [r5, #0]
900141fc:	612b      	str	r3, [r5, #16]
900141fe:	edc5 6a07 	vstr	s13, [r5, #28]
90014202:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90014206:	ee36 7a87 	vadd.f32	s14, s13, s14
9001420a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001420e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90014212:	ee77 7a27 	vadd.f32	s15, s14, s15
90014216:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
9001421a:	3f01      	subs	r7, #1
9001421c:	e757      	b.n	900140ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
9001421e:	ad39      	add	r5, sp, #228	@ 0xe4
90014220:	ac19      	add	r4, sp, #100	@ 0x64
90014222:	e72d      	b.n	90014080 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90014224:	4613      	mov	r3, r2
90014226:	e744      	b.n	900140b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90014228:	4613      	mov	r3, r2
9001422a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
9001422c:	469e      	mov	lr, r3
9001422e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
90014232:	461f      	mov	r7, r3
90014234:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90014238:	f04f 0900 	mov.w	r9, #0
9001423c:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90014240:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
90014244:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90014248:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
9001424c:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90014250:	993d      	ldr	r1, [sp, #244]	@ 0xf4
90014252:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
90014256:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
9001425a:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
9001425e:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
90014262:	960e      	str	r6, [sp, #56]	@ 0x38
90014264:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
90014268:	2f00      	cmp	r7, #0
9001426a:	d146      	bne.n	900142fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
9001426c:	449c      	add	ip, r3
9001426e:	1ad7      	subs	r7, r2, r3
90014270:	f1b9 0f00 	cmp.w	r9, #0
90014274:	d009      	beq.n	9001428a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90014276:	9039      	str	r0, [sp, #228]	@ 0xe4
90014278:	913d      	str	r1, [sp, #244]	@ 0xf4
9001427a:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
9001427e:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
90014282:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
90014286:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
9001428a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
9001428c:	f04f 0800 	mov.w	r8, #0
90014290:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90014294:	910e      	str	r1, [sp, #56]	@ 0x38
90014296:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
9001429a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
9001429e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900142a2:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900142a6:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900142aa:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900142ae:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900142b2:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900142b6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
900142ba:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
900142be:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
900142c2:	f1be 0f00 	cmp.w	lr, #0
900142c6:	d030      	beq.n	9001432a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
900142c8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
900142ca:	4450      	add	r0, sl
900142cc:	ee76 6aa4 	vadd.f32	s13, s13, s9
900142d0:	4431      	add	r1, r6
900142d2:	ee37 7a04 	vadd.f32	s14, s14, s8
900142d6:	ee77 7aa3 	vadd.f32	s15, s15, s7
900142da:	4549      	cmp	r1, r9
900142dc:	db08      	blt.n	900142f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
900142de:	ee77 7a85 	vadd.f32	s15, s15, s10
900142e2:	3001      	adds	r0, #1
900142e4:	ee76 6aa5 	vadd.f32	s13, s13, s11
900142e8:	eba1 0109 	sub.w	r1, r1, r9
900142ec:	ee37 7a06 	vadd.f32	s14, s14, s12
900142f0:	f10e 3eff 	add.w	lr, lr, #4294967295
900142f4:	f04f 0801 	mov.w	r8, #1
900142f8:	e7e3      	b.n	900142c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
900142fa:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
900142fc:	4450      	add	r0, sl
900142fe:	ee37 7a24 	vadd.f32	s14, s14, s9
90014302:	4431      	add	r1, r6
90014304:	ee77 7a84 	vadd.f32	s15, s15, s8
90014308:	ee76 6aa3 	vadd.f32	s13, s13, s7
9001430c:	4541      	cmp	r1, r8
9001430e:	db08      	blt.n	90014322 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90014310:	ee76 6a85 	vadd.f32	s13, s13, s10
90014314:	3001      	adds	r0, #1
90014316:	ee37 7a25 	vadd.f32	s14, s14, s11
9001431a:	eba1 0108 	sub.w	r1, r1, r8
9001431e:	ee77 7a86 	vadd.f32	s15, s15, s12
90014322:	3f01      	subs	r7, #1
90014324:	f04f 0901 	mov.w	r9, #1
90014328:	e79e      	b.n	90014268 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
9001432a:	449c      	add	ip, r3
9001432c:	1aff      	subs	r7, r7, r3
9001432e:	f1b8 0f00 	cmp.w	r8, #0
90014332:	d009      	beq.n	90014348 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90014334:	9019      	str	r0, [sp, #100]	@ 0x64
90014336:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
9001433a:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
9001433e:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90014342:	911d      	str	r1, [sp, #116]	@ 0x74
90014344:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90014348:	1ad2      	subs	r2, r2, r3
9001434a:	e6b5      	b.n	900140b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001434c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001434e:	681b      	ldr	r3, [r3, #0]
90014350:	b923      	cbnz	r3, 9001435c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014352:	4b04      	ldr	r3, [pc, #16]	@ (90014364 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90014354:	6818      	ldr	r0, [r3, #0]
90014356:	6803      	ldr	r3, [r0, #0]
90014358:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001435a:	4798      	blx	r3
9001435c:	b05b      	add	sp, #364	@ 0x16c
9001435e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014362:	bf00      	nop
90014364:	240218b4 	.word	0x240218b4

90014368 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90014368:	b570      	push	{r4, r5, r6, lr}
9001436a:	4604      	mov	r4, r0
9001436c:	2500      	movs	r5, #0
9001436e:	9805      	ldr	r0, [sp, #20]
90014370:	f89d 601c 	ldrb.w	r6, [sp, #28]
90014374:	6061      	str	r1, [r4, #4]
90014376:	8263      	strh	r3, [r4, #18]
90014378:	f89d 1010 	ldrb.w	r1, [sp, #16]
9001437c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90014380:	8025      	strh	r5, [r4, #0]
90014382:	7221      	strb	r1, [r4, #8]
90014384:	7266      	strb	r6, [r4, #9]
90014386:	60e0      	str	r0, [r4, #12]
90014388:	8222      	strh	r2, [r4, #16]
9001438a:	82a3      	strh	r3, [r4, #20]
9001438c:	82e5      	strh	r5, [r4, #22]
9001438e:	8325      	strh	r5, [r4, #24]
90014390:	8365      	strh	r5, [r4, #26]
90014392:	83a5      	strh	r5, [r4, #28]
90014394:	83e5      	strh	r5, [r4, #30]
90014396:	8425      	strh	r5, [r4, #32]
90014398:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
9001439c:	b32e      	cbz	r6, 900143ea <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001439e:	6803      	ldr	r3, [r0, #0]
900143a0:	695b      	ldr	r3, [r3, #20]
900143a2:	4798      	blx	r3
900143a4:	4606      	mov	r6, r0
900143a6:	b300      	cbz	r0, 900143ea <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900143a8:	68e0      	ldr	r0, [r4, #12]
900143aa:	4631      	mov	r1, r6
900143ac:	6803      	ldr	r3, [r0, #0]
900143ae:	68db      	ldr	r3, [r3, #12]
900143b0:	4798      	blx	r3
900143b2:	4605      	mov	r5, r0
900143b4:	b1c8      	cbz	r0, 900143ea <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900143b6:	7b43      	ldrb	r3, [r0, #13]
900143b8:	7a82      	ldrb	r2, [r0, #10]
900143ba:	005b      	lsls	r3, r3, #1
900143bc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900143c0:	4313      	orrs	r3, r2
900143c2:	8423      	strh	r3, [r4, #32]
900143c4:	7a63      	ldrb	r3, [r4, #9]
900143c6:	2b06      	cmp	r3, #6
900143c8:	d10f      	bne.n	900143ea <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900143ca:	68e0      	ldr	r0, [r4, #12]
900143cc:	462a      	mov	r2, r5
900143ce:	4631      	mov	r1, r6
900143d0:	6803      	ldr	r3, [r0, #0]
900143d2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900143d4:	4798      	blx	r3
900143d6:	7b6b      	ldrb	r3, [r5, #13]
900143d8:	005b      	lsls	r3, r3, #1
900143da:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900143de:	7aab      	ldrb	r3, [r5, #10]
900143e0:	4313      	orrs	r3, r2
900143e2:	4418      	add	r0, r3
900143e4:	8c23      	ldrh	r3, [r4, #32]
900143e6:	4418      	add	r0, r3
900143e8:	8420      	strh	r0, [r4, #32]
900143ea:	4620      	mov	r0, r4
900143ec:	bd70      	pop	{r4, r5, r6, pc}

900143ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
900143ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900143f2:	2400      	movs	r4, #0
900143f4:	b085      	sub	sp, #20
900143f6:	4681      	mov	r9, r0
900143f8:	4688      	mov	r8, r1
900143fa:	4692      	mov	sl, r2
900143fc:	469b      	mov	fp, r3
900143fe:	4627      	mov	r7, r4
90014400:	4625      	mov	r5, r4
90014402:	4626      	mov	r6, r4
90014404:	4554      	cmp	r4, sl
90014406:	da2a      	bge.n	9001445e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90014408:	2300      	movs	r3, #0
9001440a:	9303      	str	r3, [sp, #12]
9001440c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014410:	429d      	cmp	r5, r3
90014412:	d004      	beq.n	9001441e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90014414:	f242 030b 	movw	r3, #8203	@ 0x200b
90014418:	429d      	cmp	r5, r3
9001441a:	bf18      	it	ne
9001441c:	462f      	movne	r7, r5
9001441e:	ab03      	add	r3, sp, #12
90014420:	4642      	mov	r2, r8
90014422:	4659      	mov	r1, fp
90014424:	4648      	mov	r0, r9
90014426:	f003 fbad 	bl	90017b84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001442a:	4605      	mov	r5, r0
9001442c:	b1b8      	cbz	r0, 9001445e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001442e:	280a      	cmp	r0, #10
90014430:	d015      	beq.n	9001445e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90014432:	9a03      	ldr	r2, [sp, #12]
90014434:	b18a      	cbz	r2, 9001445a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90014436:	7b50      	ldrb	r0, [r2, #13]
90014438:	4639      	mov	r1, r7
9001443a:	7a93      	ldrb	r3, [r2, #10]
9001443c:	0040      	lsls	r0, r0, #1
9001443e:	8895      	ldrh	r5, [r2, #4]
90014440:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90014444:	4303      	orrs	r3, r0
90014446:	4640      	mov	r0, r8
90014448:	9301      	str	r3, [sp, #4]
9001444a:	f8d8 3000 	ldr.w	r3, [r8]
9001444e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90014450:	4798      	blx	r3
90014452:	9b01      	ldr	r3, [sp, #4]
90014454:	4418      	add	r0, r3
90014456:	4406      	add	r6, r0
90014458:	b2b6      	uxth	r6, r6
9001445a:	3401      	adds	r4, #1
9001445c:	e7d2      	b.n	90014404 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
9001445e:	4630      	mov	r0, r6
90014460:	b005      	add	sp, #20
90014462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90014466 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90014466:	2a02      	cmp	r2, #2
90014468:	b530      	push	{r4, r5, lr}
9001446a:	d011      	beq.n	90014490 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
9001446c:	2a03      	cmp	r2, #3
9001446e:	d01c      	beq.n	900144aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90014470:	2a01      	cmp	r2, #1
90014472:	d10c      	bne.n	9001448e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90014474:	888b      	ldrh	r3, [r1, #4]
90014476:	8801      	ldrh	r1, [r0, #0]
90014478:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
9001447c:	1a5b      	subs	r3, r3, r1
9001447e:	8844      	ldrh	r4, [r0, #2]
90014480:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90014484:	1a9b      	subs	r3, r3, r2
90014486:	8004      	strh	r4, [r0, #0]
90014488:	8081      	strh	r1, [r0, #4]
9001448a:	8043      	strh	r3, [r0, #2]
9001448c:	80c2      	strh	r2, [r0, #6]
9001448e:	bd30      	pop	{r4, r5, pc}
90014490:	88cb      	ldrh	r3, [r1, #6]
90014492:	8842      	ldrh	r2, [r0, #2]
90014494:	1a9b      	subs	r3, r3, r2
90014496:	88c2      	ldrh	r2, [r0, #6]
90014498:	1a9b      	subs	r3, r3, r2
9001449a:	888a      	ldrh	r2, [r1, #4]
9001449c:	8801      	ldrh	r1, [r0, #0]
9001449e:	8043      	strh	r3, [r0, #2]
900144a0:	1a52      	subs	r2, r2, r1
900144a2:	8881      	ldrh	r1, [r0, #4]
900144a4:	1a52      	subs	r2, r2, r1
900144a6:	8002      	strh	r2, [r0, #0]
900144a8:	e7f1      	b.n	9001448e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900144aa:	88cb      	ldrh	r3, [r1, #6]
900144ac:	8841      	ldrh	r1, [r0, #2]
900144ae:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900144b2:	1a5b      	subs	r3, r3, r1
900144b4:	f9b0 5000 	ldrsh.w	r5, [r0]
900144b8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
900144bc:	1a9b      	subs	r3, r3, r2
900144be:	8045      	strh	r5, [r0, #2]
900144c0:	8082      	strh	r2, [r0, #4]
900144c2:	8003      	strh	r3, [r0, #0]
900144c4:	80c4      	strh	r4, [r0, #6]
900144c6:	e7e2      	b.n	9001448e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

900144c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
900144c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900144cc:	b09f      	sub	sp, #124	@ 0x7c
900144ce:	920f      	str	r2, [sp, #60]	@ 0x3c
900144d0:	9312      	str	r3, [sp, #72]	@ 0x48
900144d2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900144d4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900144d6:	8812      	ldrh	r2, [r2, #0]
900144d8:	889b      	ldrh	r3, [r3, #4]
900144da:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900144dc:	4413      	add	r3, r2
900144de:	900e      	str	r0, [sp, #56]	@ 0x38
900144e0:	6828      	ldr	r0, [r5, #0]
900144e2:	b21b      	sxth	r3, r3
900144e4:	9117      	str	r1, [sp, #92]	@ 0x5c
900144e6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
900144ea:	9311      	str	r3, [sp, #68]	@ 0x44
900144ec:	6803      	ldr	r3, [r0, #0]
900144ee:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
900144f2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900144f4:	4798      	blx	r3
900144f6:	682b      	ldr	r3, [r5, #0]
900144f8:	9013      	str	r0, [sp, #76]	@ 0x4c
900144fa:	7b1a      	ldrb	r2, [r3, #12]
900144fc:	7adb      	ldrb	r3, [r3, #11]
900144fe:	9215      	str	r2, [sp, #84]	@ 0x54
90014500:	9316      	str	r3, [sp, #88]	@ 0x58
90014502:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
90014506:	2c00      	cmp	r4, #0
90014508:	d067      	beq.n	900145da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
9001450a:	7c2b      	ldrb	r3, [r5, #16]
9001450c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
9001450e:	2b06      	cmp	r3, #6
90014510:	bf14      	ite	ne
90014512:	2301      	movne	r3, #1
90014514:	2302      	moveq	r3, #2
90014516:	4413      	add	r3, r2
90014518:	f04f 0900 	mov.w	r9, #0
9001451c:	9310      	str	r3, [sp, #64]	@ 0x40
9001451e:	464c      	mov	r4, r9
90014520:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
90014524:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90014528:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001452a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001452c:	4293      	cmp	r3, r2
9001452e:	f280 808b 	bge.w	90014648 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90014532:	2300      	movs	r3, #0
90014534:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90014538:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
9001453c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014540:	429c      	cmp	r4, r3
90014542:	d006      	beq.n	90014552 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
90014544:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014546:	f242 020b 	movw	r2, #8203	@ 0x200b
9001454a:	4294      	cmp	r4, r2
9001454c:	bf18      	it	ne
9001454e:	4623      	movne	r3, r4
90014550:	930c      	str	r3, [sp, #48]	@ 0x30
90014552:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014554:	992d      	ldr	r1, [sp, #180]	@ 0xb4
90014556:	682a      	ldr	r2, [r5, #0]
90014558:	428b      	cmp	r3, r1
9001455a:	db40      	blt.n	900145de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
9001455c:	6813      	ldr	r3, [r2, #0]
9001455e:	4610      	mov	r0, r2
90014560:	695b      	ldr	r3, [r3, #20]
90014562:	4798      	blx	r3
90014564:	4604      	mov	r4, r0
90014566:	6828      	ldr	r0, [r5, #0]
90014568:	aa1d      	add	r2, sp, #116	@ 0x74
9001456a:	4621      	mov	r1, r4
9001456c:	6803      	ldr	r3, [r0, #0]
9001456e:	689f      	ldr	r7, [r3, #8]
90014570:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90014574:	47b8      	blx	r7
90014576:	901c      	str	r0, [sp, #112]	@ 0x70
90014578:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001457c:	429c      	cmp	r4, r3
9001457e:	f000 80eb 	beq.w	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014582:	f242 030b 	movw	r3, #8203	@ 0x200b
90014586:	429c      	cmp	r4, r3
90014588:	f000 80e6 	beq.w	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001458c:	2c00      	cmp	r4, #0
9001458e:	f000 810d 	beq.w	900147ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90014592:	2c0a      	cmp	r4, #10
90014594:	d05e      	beq.n	90014654 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90014596:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90014598:	b36a      	cbz	r2, 900145f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
9001459a:	8894      	ldrh	r4, [r2, #4]
9001459c:	f1bb 0f00 	cmp.w	fp, #0
900145a0:	d03a      	beq.n	90014618 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
900145a2:	f892 900d 	ldrb.w	r9, [r2, #13]
900145a6:	f1bb 0f01 	cmp.w	fp, #1
900145aa:	ea4f 0949 	mov.w	r9, r9, lsl #1
900145ae:	f409 7380 	and.w	r3, r9, #256	@ 0x100
900145b2:	f892 900a 	ldrb.w	r9, [r2, #10]
900145b6:	ea49 0903 	orr.w	r9, r9, r3
900145ba:	d133      	bne.n	90014624 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
900145bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900145be:	eba6 0609 	sub.w	r6, r6, r9
900145c2:	2b00      	cmp	r3, #0
900145c4:	d14d      	bne.n	90014662 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
900145c6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
900145c8:	eb09 0306 	add.w	r3, r9, r6
900145cc:	4413      	add	r3, r2
900145ce:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900145d0:	f9b2 2000 	ldrsh.w	r2, [r2]
900145d4:	4293      	cmp	r3, r2
900145d6:	da4e      	bge.n	90014676 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900145d8:	e036      	b.n	90014648 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900145da:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900145dc:	e79c      	b.n	90014518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
900145de:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900145e2:	4659      	mov	r1, fp
900145e4:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900145e6:	9301      	str	r3, [sp, #4]
900145e8:	ab1d      	add	r3, sp, #116	@ 0x74
900145ea:	9300      	str	r3, [sp, #0]
900145ec:	ab1c      	add	r3, sp, #112	@ 0x70
900145ee:	f003 fb12 	bl	90017c16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
900145f2:	4604      	mov	r4, r0
900145f4:	e7c0      	b.n	90014578 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
900145f6:	6828      	ldr	r0, [r5, #0]
900145f8:	6803      	ldr	r3, [r0, #0]
900145fa:	691b      	ldr	r3, [r3, #16]
900145fc:	4798      	blx	r3
900145fe:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014602:	4298      	cmp	r0, r3
90014604:	f000 80a8 	beq.w	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014608:	f242 030b 	movw	r3, #8203	@ 0x200b
9001460c:	4298      	cmp	r0, r3
9001460e:	f000 80a3 	beq.w	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014612:	f1bb 0f00 	cmp.w	fp, #0
90014616:	d100      	bne.n	9001461a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90014618:	444e      	add	r6, r9
9001461a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
9001461c:	2a00      	cmp	r2, #0
9001461e:	d1c0      	bne.n	900145a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90014620:	4691      	mov	r9, r2
90014622:	e099      	b.n	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014624:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014626:	2b00      	cmp	r3, #0
90014628:	f000 80c2 	beq.w	900147b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
9001462c:	f1bb 0f00 	cmp.w	fp, #0
90014630:	d117      	bne.n	90014662 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90014632:	6828      	ldr	r0, [r5, #0]
90014634:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014636:	6803      	ldr	r3, [r0, #0]
90014638:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001463a:	4798      	blx	r3
9001463c:	4406      	add	r6, r0
9001463e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90014640:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90014642:	1af3      	subs	r3, r6, r3
90014644:	4293      	cmp	r3, r2
90014646:	dd16      	ble.n	90014676 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90014648:	2c00      	cmp	r4, #0
9001464a:	f000 80af 	beq.w	900147ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001464e:	2c0a      	cmp	r4, #10
90014650:	f040 809d 	bne.w	9001478e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
90014654:	240a      	movs	r4, #10
90014656:	fab4 f084 	clz	r0, r4
9001465a:	0940      	lsrs	r0, r0, #5
9001465c:	b01f      	add	sp, #124	@ 0x7c
9001465e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014662:	6828      	ldr	r0, [r5, #0]
90014664:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014666:	6803      	ldr	r3, [r0, #0]
90014668:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001466a:	4798      	blx	r3
9001466c:	f1bb 0f01 	cmp.w	fp, #1
90014670:	eba6 0600 	sub.w	r6, r6, r0
90014674:	d0a7      	beq.n	900145c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90014676:	981c      	ldr	r0, [sp, #112]	@ 0x70
90014678:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001467a:	f990 1009 	ldrsb.w	r1, [r0, #9]
9001467e:	f9b3 8000 	ldrsh.w	r8, [r3]
90014682:	7b43      	ldrb	r3, [r0, #13]
90014684:	4431      	add	r1, r6
90014686:	015b      	lsls	r3, r3, #5
90014688:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001468c:	7983      	ldrb	r3, [r0, #6]
9001468e:	4313      	orrs	r3, r2
90014690:	440b      	add	r3, r1
90014692:	4543      	cmp	r3, r8
90014694:	db60      	blt.n	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014696:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90014698:	4299      	cmp	r1, r3
9001469a:	da5d      	bge.n	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001469c:	6828      	ldr	r0, [r5, #0]
9001469e:	45b0      	cmp	r8, r6
900146a0:	6803      	ldr	r3, [r0, #0]
900146a2:	bfcc      	ite	gt
900146a4:	eba8 0806 	subgt.w	r8, r8, r6
900146a8:	f04f 0800 	movle.w	r8, #0
900146ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900146ae:	bfc8      	it	gt
900146b0:	fa1f f888 	uxthgt.w	r8, r8
900146b4:	4798      	blx	r3
900146b6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900146b8:	7b53      	ldrb	r3, [r2, #13]
900146ba:	00d9      	lsls	r1, r3, #3
900146bc:	f401 7780 	and.w	r7, r1, #256	@ 0x100
900146c0:	7a11      	ldrb	r1, [r2, #8]
900146c2:	4339      	orrs	r1, r7
900146c4:	065f      	lsls	r7, r3, #25
900146c6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
900146c8:	bf48      	it	mi
900146ca:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
900146ce:	4407      	add	r7, r0
900146d0:	bf48      	it	mi
900146d2:	b209      	sxthmi	r1, r1
900146d4:	1a7f      	subs	r7, r7, r1
900146d6:	9929      	ldr	r1, [sp, #164]	@ 0xa4
900146d8:	b2bf      	uxth	r7, r7
900146da:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
900146de:	fa0f fa87 	sxth.w	sl, r7
900146e2:	4551      	cmp	r1, sl
900146e4:	dd3c      	ble.n	90014760 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
900146e6:	011b      	lsls	r3, r3, #4
900146e8:	79d0      	ldrb	r0, [r2, #7]
900146ea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900146ee:	4303      	orrs	r3, r0
900146f0:	449a      	add	sl, r3
900146f2:	4551      	cmp	r1, sl
900146f4:	dc30      	bgt.n	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900146f6:	1bcf      	subs	r7, r1, r7
900146f8:	468a      	mov	sl, r1
900146fa:	b23f      	sxth	r7, r7
900146fc:	9219      	str	r2, [sp, #100]	@ 0x64
900146fe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90014700:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90014702:	6828      	ldr	r0, [r5, #0]
90014704:	2a00      	cmp	r2, #0
90014706:	d12d      	bne.n	90014764 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90014708:	9318      	str	r3, [sp, #96]	@ 0x60
9001470a:	b2bf      	uxth	r7, r7
9001470c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001470e:	6819      	ldr	r1, [r3, #0]
90014710:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
90014712:	6801      	ldr	r1, [r0, #0]
90014714:	9314      	str	r3, [sp, #80]	@ 0x50
90014716:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90014718:	4788      	blx	r1
9001471a:	79a9      	ldrb	r1, [r5, #6]
9001471c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001471e:	910b      	str	r1, [sp, #44]	@ 0x2c
90014720:	7ba9      	ldrb	r1, [r5, #14]
90014722:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90014724:	910a      	str	r1, [sp, #40]	@ 0x28
90014726:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
9001472a:	9109      	str	r1, [sp, #36]	@ 0x24
9001472c:	68a9      	ldr	r1, [r5, #8]
9001472e:	9306      	str	r3, [sp, #24]
90014730:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90014732:	9205      	str	r2, [sp, #20]
90014734:	9304      	str	r3, [sp, #16]
90014736:	f8cd a004 	str.w	sl, [sp, #4]
9001473a:	e9cd 8702 	strd	r8, r7, [sp, #8]
9001473e:	44b0      	add	r8, r6
90014740:	9f14      	ldr	r7, [sp, #80]	@ 0x50
90014742:	fa0f f388 	sxth.w	r3, r8
90014746:	9300      	str	r3, [sp, #0]
90014748:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001474a:	e9cd 0107 	strd	r0, r1, [sp, #28]
9001474e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90014750:	681a      	ldr	r2, [r3, #0]
90014752:	980e      	ldr	r0, [sp, #56]	@ 0x38
90014754:	685b      	ldr	r3, [r3, #4]
90014756:	47b8      	blx	r7
90014758:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001475a:	3301      	adds	r3, #1
9001475c:	930d      	str	r3, [sp, #52]	@ 0x34
9001475e:	e6e3      	b.n	90014528 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90014760:	2700      	movs	r7, #0
90014762:	e7cb      	b.n	900146fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
90014764:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90014766:	f8d2 c008 	ldr.w	ip, [r2, #8]
9001476a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001476c:	f8dc 1000 	ldr.w	r1, [ip]
90014770:	e9cd 6204 	strd	r6, r2, [sp, #16]
90014774:	79aa      	ldrb	r2, [r5, #6]
90014776:	9203      	str	r2, [sp, #12]
90014778:	7baa      	ldrb	r2, [r5, #14]
9001477a:	9202      	str	r2, [sp, #8]
9001477c:	68aa      	ldr	r2, [r5, #8]
9001477e:	e9cd 0200 	strd	r0, r2, [sp]
90014782:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90014784:	4660      	mov	r0, ip
90014786:	688f      	ldr	r7, [r1, #8]
90014788:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001478a:	47b8      	blx	r7
9001478c:	e7e4      	b.n	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001478e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90014790:	3501      	adds	r5, #1
90014792:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90014794:	429d      	cmp	r5, r3
90014796:	f6bf af5e 	bge.w	90014656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
9001479a:	4659      	mov	r1, fp
9001479c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001479e:	f7f1 f92f 	bl	90005a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900147a2:	4604      	mov	r4, r0
900147a4:	b110      	cbz	r0, 900147ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900147a6:	280a      	cmp	r0, #10
900147a8:	d1f2      	bne.n	90014790 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
900147aa:	e753      	b.n	90014654 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900147ac:	2400      	movs	r4, #0
900147ae:	e752      	b.n	90014656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900147b0:	f1bb 0f00 	cmp.w	fp, #0
900147b4:	f43f af43 	beq.w	9001463e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
900147b8:	e75d      	b.n	90014676 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

900147ba <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
900147ba:	b530      	push	{r4, r5, lr}
900147bc:	8ac4      	ldrh	r4, [r0, #22]
900147be:	8b45      	ldrh	r5, [r0, #26]
900147c0:	8343      	strh	r3, [r0, #26]
900147c2:	442c      	add	r4, r5
900147c4:	1ae4      	subs	r4, r4, r3
900147c6:	8b83      	ldrh	r3, [r0, #28]
900147c8:	82c4      	strh	r4, [r0, #22]
900147ca:	8b04      	ldrh	r4, [r0, #24]
900147cc:	4422      	add	r2, r4
900147ce:	440c      	add	r4, r1
900147d0:	1a59      	subs	r1, r3, r1
900147d2:	83c2      	strh	r2, [r0, #30]
900147d4:	8304      	strh	r4, [r0, #24]
900147d6:	8381      	strh	r1, [r0, #28]
900147d8:	bd30      	pop	{r4, r5, pc}

900147da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
900147da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900147de:	4604      	mov	r4, r0
900147e0:	8a47      	ldrh	r7, [r0, #18]
900147e2:	68c0      	ldr	r0, [r0, #12]
900147e4:	b085      	sub	sp, #20
900147e6:	6803      	ldr	r3, [r0, #0]
900147e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900147ea:	4798      	blx	r3
900147ec:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
900147f0:	7a63      	ldrb	r3, [r4, #9]
900147f2:	eb06 0640 	add.w	r6, r6, r0, lsl #1
900147f6:	3b01      	subs	r3, #1
900147f8:	42b7      	cmp	r7, r6
900147fa:	bfac      	ite	ge
900147fc:	f04f 0900 	movge.w	r9, #0
90014800:	f04f 0901 	movlt.w	r9, #1
90014804:	2b05      	cmp	r3, #5
90014806:	d804      	bhi.n	90014812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90014808:	e8df f003 	tbb	[pc, r3]
9001480c:	470f0854 	.word	0x470f0854
90014810:	4c4c      	.short	0x4c4c
90014812:	2500      	movs	r5, #0
90014814:	46a9      	mov	r9, r5
90014816:	462e      	mov	r6, r5
90014818:	462f      	mov	r7, r5
9001481a:	e00e      	b.n	9001483a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001481c:	42b7      	cmp	r7, r6
9001481e:	f04f 0500 	mov.w	r5, #0
90014822:	bfb4      	ite	lt
90014824:	2600      	movlt	r6, #0
90014826:	2601      	movge	r6, #1
90014828:	e7f6      	b.n	90014818 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001482a:	42b7      	cmp	r7, r6
9001482c:	464d      	mov	r5, r9
9001482e:	f04f 0900 	mov.w	r9, #0
90014832:	bfb4      	ite	lt
90014834:	2600      	movlt	r6, #0
90014836:	2601      	movge	r6, #1
90014838:	464f      	mov	r7, r9
9001483a:	f04f 0800 	mov.w	r8, #0
9001483e:	f8a4 8016 	strh.w	r8, [r4, #22]
90014842:	f8a4 8018 	strh.w	r8, [r4, #24]
90014846:	f8cd 8004 	str.w	r8, [sp, #4]
9001484a:	2300      	movs	r3, #0
9001484c:	9303      	str	r3, [sp, #12]
9001484e:	8823      	ldrh	r3, [r4, #0]
90014850:	2b20      	cmp	r3, #32
90014852:	d033      	beq.n	900148bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
90014854:	f242 010b 	movw	r1, #8203	@ 0x200b
90014858:	1a5a      	subs	r2, r3, r1
9001485a:	f1d2 0a00 	rsbs	sl, r2, #0
9001485e:	eb4a 0a02 	adc.w	sl, sl, r2
90014862:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90014866:	4293      	cmp	r3, r2
90014868:	d008      	beq.n	9001487c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001486a:	428b      	cmp	r3, r1
9001486c:	9a01      	ldr	r2, [sp, #4]
9001486e:	bf0e      	itee	eq
90014870:	f04f 0a01 	moveq.w	sl, #1
90014874:	461a      	movne	r2, r3
90014876:	f04f 0a00 	movne.w	sl, #0
9001487a:	9201      	str	r2, [sp, #4]
9001487c:	ab03      	add	r3, sp, #12
9001487e:	68e2      	ldr	r2, [r4, #12]
90014880:	7a21      	ldrb	r1, [r4, #8]
90014882:	6860      	ldr	r0, [r4, #4]
90014884:	f003 f97e 	bl	90017b84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90014888:	8020      	strh	r0, [r4, #0]
9001488a:	b9d8      	cbnz	r0, 900148c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
9001488c:	8ba2      	ldrh	r2, [r4, #28]
9001488e:	2300      	movs	r3, #0
90014890:	4611      	mov	r1, r2
90014892:	4620      	mov	r0, r4
90014894:	f7ff ff91 	bl	900147ba <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014898:	e06e      	b.n	90014978 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001489a:	2500      	movs	r5, #0
9001489c:	2701      	movs	r7, #1
9001489e:	46a9      	mov	r9, r5
900148a0:	462e      	mov	r6, r5
900148a2:	e7ca      	b.n	9001483a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900148a4:	42b7      	cmp	r7, r6
900148a6:	f04f 0500 	mov.w	r5, #0
900148aa:	bfb4      	ite	lt
900148ac:	2700      	movlt	r7, #0
900148ae:	2701      	movge	r7, #1
900148b0:	462e      	mov	r6, r5
900148b2:	e7c2      	b.n	9001483a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900148b4:	2500      	movs	r5, #0
900148b6:	2601      	movs	r6, #1
900148b8:	46a9      	mov	r9, r5
900148ba:	e7ad      	b.n	90014818 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900148bc:	9301      	str	r3, [sp, #4]
900148be:	f04f 0a01 	mov.w	sl, #1
900148c2:	e7db      	b.n	9001487c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900148c4:	8b63      	ldrh	r3, [r4, #26]
900148c6:	280a      	cmp	r0, #10
900148c8:	f103 0301 	add.w	r3, r3, #1
900148cc:	8363      	strh	r3, [r4, #26]
900148ce:	d0dd      	beq.n	9001488c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
900148d0:	9a03      	ldr	r2, [sp, #12]
900148d2:	bb62      	cbnz	r2, 9001492e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
900148d4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900148d8:	4298      	cmp	r0, r3
900148da:	d003      	beq.n	900148e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900148dc:	f242 030b 	movw	r3, #8203	@ 0x200b
900148e0:	4298      	cmp	r0, r3
900148e2:	d1b2      	bne.n	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900148e4:	8823      	ldrh	r3, [r4, #0]
900148e6:	8ba1      	ldrh	r1, [r4, #28]
900148e8:	2b20      	cmp	r3, #32
900148ea:	d003      	beq.n	900148f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
900148ec:	f242 000b 	movw	r0, #8203	@ 0x200b
900148f0:	4283      	cmp	r3, r0
900148f2:	d131      	bne.n	90014958 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
900148f4:	f1ba 0f00 	cmp.w	sl, #0
900148f8:	bf0a      	itet	eq
900148fa:	4688      	moveq	r8, r1
900148fc:	4650      	movne	r0, sl
900148fe:	2001      	moveq	r0, #1
90014900:	440a      	add	r2, r1
90014902:	8b23      	ldrh	r3, [r4, #24]
90014904:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90014908:	b292      	uxth	r2, r2
9001490a:	83a2      	strh	r2, [r4, #28]
9001490c:	4413      	add	r3, r2
9001490e:	f1b9 0f00 	cmp.w	r9, #0
90014912:	d102      	bne.n	9001491a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90014914:	2d00      	cmp	r5, #0
90014916:	d042      	beq.n	9001499e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90014918:	b300      	cbz	r0, 9001495c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
9001491a:	8c21      	ldrh	r1, [r4, #32]
9001491c:	4419      	add	r1, r3
9001491e:	458c      	cmp	ip, r1
90014920:	da37      	bge.n	90014992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90014922:	8ae1      	ldrh	r1, [r4, #22]
90014924:	2900      	cmp	r1, #0
90014926:	d034      	beq.n	90014992 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90014928:	4563      	cmp	r3, ip
9001492a:	dd8e      	ble.n	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001492c:	e01d      	b.n	9001496a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
9001492e:	8893      	ldrh	r3, [r2, #4]
90014930:	9901      	ldr	r1, [sp, #4]
90014932:	8023      	strh	r3, [r4, #0]
90014934:	f892 b00d 	ldrb.w	fp, [r2, #13]
90014938:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
9001493c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90014940:	f892 b00a 	ldrb.w	fp, [r2, #10]
90014944:	ea4b 0b00 	orr.w	fp, fp, r0
90014948:	68e0      	ldr	r0, [r4, #12]
9001494a:	6803      	ldr	r3, [r0, #0]
9001494c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001494e:	4798      	blx	r3
90014950:	eb0b 0200 	add.w	r2, fp, r0
90014954:	b292      	uxth	r2, r2
90014956:	e7c5      	b.n	900148e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90014958:	2000      	movs	r0, #0
9001495a:	e7d1      	b.n	90014900 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
9001495c:	4563      	cmp	r3, ip
9001495e:	f77f af74 	ble.w	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014962:	8ae3      	ldrh	r3, [r4, #22]
90014964:	2b00      	cmp	r3, #0
90014966:	f43f af70 	beq.w	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001496a:	2301      	movs	r3, #1
9001496c:	8c22      	ldrh	r2, [r4, #32]
9001496e:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
90014972:	8be3      	ldrh	r3, [r4, #30]
90014974:	4413      	add	r3, r2
90014976:	83e3      	strh	r3, [r4, #30]
90014978:	68e0      	ldr	r0, [r4, #12]
9001497a:	6803      	ldr	r3, [r0, #0]
9001497c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001497e:	4798      	blx	r3
90014980:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90014984:	4418      	add	r0, r3
90014986:	8a63      	ldrh	r3, [r4, #18]
90014988:	1a18      	subs	r0, r3, r0
9001498a:	8260      	strh	r0, [r4, #18]
9001498c:	b005      	add	sp, #20
9001498e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014992:	2300      	movs	r3, #0
90014994:	4611      	mov	r1, r2
90014996:	4620      	mov	r0, r4
90014998:	f7ff ff0f 	bl	900147ba <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9001499c:	e755      	b.n	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001499e:	4563      	cmp	r3, ip
900149a0:	dd14      	ble.n	900149cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
900149a2:	b117      	cbz	r7, 900149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
900149a4:	2301      	movs	r3, #1
900149a6:	460a      	mov	r2, r1
900149a8:	e772      	b.n	90014890 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
900149aa:	2e00      	cmp	r6, #0
900149ac:	f43f af4d 	beq.w	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900149b0:	2800      	cmp	r0, #0
900149b2:	f47f af4a 	bne.w	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900149b6:	f1ba 0f00 	cmp.w	sl, #0
900149ba:	d002      	beq.n	900149c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
900149bc:	2301      	movs	r3, #1
900149be:	4642      	mov	r2, r8
900149c0:	e767      	b.n	90014892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
900149c2:	8ae3      	ldrh	r3, [r4, #22]
900149c4:	2b00      	cmp	r3, #0
900149c6:	f43f af40 	beq.w	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900149ca:	e7d5      	b.n	90014978 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900149cc:	2800      	cmp	r0, #0
900149ce:	f47f af3c 	bne.w	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900149d2:	f1ba 0f00 	cmp.w	sl, #0
900149d6:	f43f af38 	beq.w	9001484a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900149da:	2301      	movs	r3, #1
900149dc:	4642      	mov	r2, r8
900149de:	e7da      	b.n	90014996 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

900149e0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
900149e0:	b5f0      	push	{r4, r5, r6, r7, lr}
900149e2:	4605      	mov	r5, r0
900149e4:	b08f      	sub	sp, #60	@ 0x3c
900149e6:	4617      	mov	r7, r2
900149e8:	461c      	mov	r4, r3
900149ea:	460e      	mov	r6, r1
900149ec:	b1d1      	cbz	r1, 90014a24 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
900149ee:	681b      	ldr	r3, [r3, #0]
900149f0:	4620      	mov	r0, r4
900149f2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900149f4:	4798      	blx	r3
900149f6:	4240      	negs	r0, r0
900149f8:	9603      	str	r6, [sp, #12]
900149fa:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900149fe:	b200      	sxth	r0, r0
90014a00:	9700      	str	r7, [sp, #0]
90014a02:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
90014a06:	4629      	mov	r1, r5
90014a08:	e9cd 4001 	strd	r4, r0, [sp, #4]
90014a0c:	2401      	movs	r4, #1
90014a0e:	a805      	add	r0, sp, #20
90014a10:	f7ff fcaa 	bl	90014368 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90014a14:	a805      	add	r0, sp, #20
90014a16:	f7ff fee0 	bl	900147da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014a1a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90014a1e:	b163      	cbz	r3, 90014a3a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90014a20:	3401      	adds	r4, #1
90014a22:	e7f7      	b.n	90014a14 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90014a24:	2401      	movs	r4, #1
90014a26:	f003 f979 	bl	90017d1c <_ZN8touchgfx12TextProvider11getNextCharEv>
90014a2a:	280a      	cmp	r0, #10
90014a2c:	4628      	mov	r0, r5
90014a2e:	bf08      	it	eq
90014a30:	3401      	addeq	r4, #1
90014a32:	f003 f973 	bl	90017d1c <_ZN8touchgfx12TextProvider11getNextCharEv>
90014a36:	2800      	cmp	r0, #0
90014a38:	d1f7      	bne.n	90014a2a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90014a3a:	b2a0      	uxth	r0, r4
90014a3c:	b00f      	add	sp, #60	@ 0x3c
90014a3e:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014a40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90014a40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014a44:	b0e3      	sub	sp, #396	@ 0x18c
90014a46:	461c      	mov	r4, r3
90014a48:	4683      	mov	fp, r0
90014a4a:	4688      	mov	r8, r1
90014a4c:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
90014a4e:	2b00      	cmp	r3, #0
90014a50:	f000 8112 	beq.w	90014c78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014a54:	6823      	ldr	r3, [r4, #0]
90014a56:	2b00      	cmp	r3, #0
90014a58:	f000 810e 	beq.w	90014c78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014a5c:	7ba3      	ldrb	r3, [r4, #14]
90014a5e:	2b00      	cmp	r3, #0
90014a60:	f000 810a 	beq.w	90014c78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014a64:	ad0a      	add	r5, sp, #40	@ 0x28
90014a66:	6810      	ldr	r0, [r2, #0]
90014a68:	6851      	ldr	r1, [r2, #4]
90014a6a:	462b      	mov	r3, r5
90014a6c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90014a70:	c303      	stmia	r3!, {r0, r1}
90014a72:	2100      	movs	r1, #0
90014a74:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90014a78:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90014a7c:	4628      	mov	r0, r5
90014a7e:	910c      	str	r1, [sp, #48]	@ 0x30
90014a80:	a90c      	add	r1, sp, #48	@ 0x30
90014a82:	79a2      	ldrb	r2, [r4, #6]
90014a84:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90014a88:	f7ff fced 	bl	90014466 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90014a8c:	a90c      	add	r1, sp, #48	@ 0x30
90014a8e:	79a2      	ldrb	r2, [r4, #6]
90014a90:	4608      	mov	r0, r1
90014a92:	f7ff fce8 	bl	90014466 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90014a96:	a817      	add	r0, sp, #92	@ 0x5c
90014a98:	f002 fd2d 	bl	900174f6 <_ZN8touchgfx12TextProviderC1Ev>
90014a9c:	6820      	ldr	r0, [r4, #0]
90014a9e:	6803      	ldr	r3, [r0, #0]
90014aa0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90014aa2:	4798      	blx	r3
90014aa4:	4606      	mov	r6, r0
90014aa6:	6820      	ldr	r0, [r4, #0]
90014aa8:	6803      	ldr	r3, [r0, #0]
90014aaa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90014aac:	4798      	blx	r3
90014aae:	4633      	mov	r3, r6
90014ab0:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90014ab2:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90014ab4:	9000      	str	r0, [sp, #0]
90014ab6:	a817      	add	r0, sp, #92	@ 0x5c
90014ab8:	f002 fd70 	bl	9001759c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014abc:	6820      	ldr	r0, [r4, #0]
90014abe:	f894 a004 	ldrb.w	sl, [r4, #4]
90014ac2:	6803      	ldr	r3, [r0, #0]
90014ac4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014ac6:	4798      	blx	r3
90014ac8:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90014acc:	6823      	ldr	r3, [r4, #0]
90014ace:	4607      	mov	r7, r0
90014ad0:	4406      	add	r6, r0
90014ad2:	a830      	add	r0, sp, #192	@ 0xc0
90014ad4:	f893 9009 	ldrb.w	r9, [r3, #9]
90014ad8:	f002 fd0d 	bl	900174f6 <_ZN8touchgfx12TextProviderC1Ev>
90014adc:	7c23      	ldrb	r3, [r4, #16]
90014ade:	b17b      	cbz	r3, 90014b00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90014ae0:	6820      	ldr	r0, [r4, #0]
90014ae2:	6803      	ldr	r3, [r0, #0]
90014ae4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90014ae6:	4798      	blx	r3
90014ae8:	9009      	str	r0, [sp, #36]	@ 0x24
90014aea:	6820      	ldr	r0, [r4, #0]
90014aec:	6802      	ldr	r2, [r0, #0]
90014aee:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90014af0:	4790      	blx	r2
90014af2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014af4:	9000      	str	r0, [sp, #0]
90014af6:	a830      	add	r0, sp, #192	@ 0xc0
90014af8:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90014afa:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90014afc:	f002 fd4e 	bl	9001759c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014b00:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90014b04:	a80e      	add	r0, sp, #56	@ 0x38
90014b06:	7be2      	ldrb	r2, [r4, #15]
90014b08:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90014b0c:	1a8a      	subs	r2, r1, r2
90014b0e:	7c21      	ldrb	r1, [r4, #16]
90014b10:	9103      	str	r1, [sp, #12]
90014b12:	b292      	uxth	r2, r2
90014b14:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90014b18:	9102      	str	r1, [sp, #8]
90014b1a:	6821      	ldr	r1, [r4, #0]
90014b1c:	9101      	str	r1, [sp, #4]
90014b1e:	7961      	ldrb	r1, [r4, #5]
90014b20:	9100      	str	r1, [sp, #0]
90014b22:	a930      	add	r1, sp, #192	@ 0xc0
90014b24:	f7ff fc20 	bl	90014368 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90014b28:	2e00      	cmp	r6, #0
90014b2a:	dc5b      	bgt.n	90014be4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90014b2c:	af17      	add	r7, sp, #92	@ 0x5c
90014b2e:	f04f 0900 	mov.w	r9, #0
90014b32:	7c23      	ldrb	r3, [r4, #16]
90014b34:	2b00      	cmp	r3, #0
90014b36:	f000 80b1 	beq.w	90014c9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90014b3a:	a80e      	add	r0, sp, #56	@ 0x38
90014b3c:	f7ff fe4d 	bl	900147da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014b40:	f1ba 0f00 	cmp.w	sl, #0
90014b44:	f000 80a5 	beq.w	90014c92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90014b48:	7c23      	ldrb	r3, [r4, #16]
90014b4a:	2264      	movs	r2, #100	@ 0x64
90014b4c:	4639      	mov	r1, r7
90014b4e:	a849      	add	r0, sp, #292	@ 0x124
90014b50:	9309      	str	r3, [sp, #36]	@ 0x24
90014b52:	f013 ffe4 	bl	90028b1e <memcpy>
90014b56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014b58:	2b00      	cmp	r3, #0
90014b5a:	f000 80a7 	beq.w	90014cac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90014b5e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90014b62:	7922      	ldrb	r2, [r4, #4]
90014b64:	2a01      	cmp	r2, #1
90014b66:	f040 808a 	bne.w	90014c7e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90014b6a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90014b6e:	1ac0      	subs	r0, r0, r3
90014b70:	2302      	movs	r3, #2
90014b72:	fb90 f0f3 	sdiv	r0, r0, r3
90014b76:	b200      	sxth	r0, r0
90014b78:	7c23      	ldrb	r3, [r4, #16]
90014b7a:	2b00      	cmp	r3, #0
90014b7c:	f000 808b 	beq.w	90014c96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90014b80:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90014b84:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90014b88:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90014b8c:	e9cd 2105 	strd	r2, r1, [sp, #20]
90014b90:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90014b94:	2100      	movs	r1, #0
90014b96:	4410      	add	r0, r2
90014b98:	4642      	mov	r2, r8
90014b9a:	b200      	sxth	r0, r0
90014b9c:	e9cd 9703 	strd	r9, r7, [sp, #12]
90014ba0:	9000      	str	r0, [sp, #0]
90014ba2:	4658      	mov	r0, fp
90014ba4:	e9cd 5401 	strd	r5, r4, [sp, #4]
90014ba8:	f7ff fc8e 	bl	900144c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90014bac:	2800      	cmp	r0, #0
90014bae:	d163      	bne.n	90014c78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014bb0:	b2b2      	uxth	r2, r6
90014bb2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90014bb6:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90014bba:	4413      	add	r3, r2
90014bbc:	1a8a      	subs	r2, r1, r2
90014bbe:	b21b      	sxth	r3, r3
90014bc0:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90014bc4:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90014bc8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90014bcc:	2a00      	cmp	r2, #0
90014bce:	d153      	bne.n	90014c78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014bd0:	6822      	ldr	r2, [r4, #0]
90014bd2:	8869      	ldrh	r1, [r5, #2]
90014bd4:	7a12      	ldrb	r2, [r2, #8]
90014bd6:	1a9b      	subs	r3, r3, r2
90014bd8:	88ea      	ldrh	r2, [r5, #6]
90014bda:	440a      	add	r2, r1
90014bdc:	b212      	sxth	r2, r2
90014bde:	4293      	cmp	r3, r2
90014be0:	dda7      	ble.n	90014b32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90014be2:	e049      	b.n	90014c78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014be4:	7c23      	ldrb	r3, [r4, #16]
90014be6:	444f      	add	r7, r9
90014be8:	b1c3      	cbz	r3, 90014c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90014bea:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90014bee:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90014bf2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014bf6:	443b      	add	r3, r7
90014bf8:	4293      	cmp	r3, r2
90014bfa:	da97      	bge.n	90014b2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014bfc:	a80e      	add	r0, sp, #56	@ 0x38
90014bfe:	f7ff fdec 	bl	900147da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014c02:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
90014c06:	3b01      	subs	r3, #1
90014c08:	b29b      	uxth	r3, r3
90014c0a:	454b      	cmp	r3, r9
90014c0c:	9309      	str	r3, [sp, #36]	@ 0x24
90014c0e:	d021      	beq.n	90014c54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90014c10:	7961      	ldrb	r1, [r4, #5]
90014c12:	a817      	add	r0, sp, #92	@ 0x5c
90014c14:	f7f0 fef4 	bl	90005a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90014c18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014c1a:	e7f4      	b.n	90014c06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90014c1c:	fa1f f986 	uxth.w	r9, r6
90014c20:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90014c24:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014c28:	443b      	add	r3, r7
90014c2a:	4293      	cmp	r3, r2
90014c2c:	f6bf af7e 	bge.w	90014b2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014c30:	a817      	add	r0, sp, #92	@ 0x5c
90014c32:	f003 f873 	bl	90017d1c <_ZN8touchgfx12TextProvider11getNextCharEv>
90014c36:	b1f8      	cbz	r0, 90014c78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014c38:	280a      	cmp	r0, #10
90014c3a:	d1f1      	bne.n	90014c20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90014c3c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90014c40:	444b      	add	r3, r9
90014c42:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90014c46:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90014c4a:	eba3 0309 	sub.w	r3, r3, r9
90014c4e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90014c52:	e7e5      	b.n	90014c20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90014c54:	b2b3      	uxth	r3, r6
90014c56:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90014c5a:	441a      	add	r2, r3
90014c5c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90014c60:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90014c64:	1ad3      	subs	r3, r2, r3
90014c66:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90014c6a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90014c6e:	b11b      	cbz	r3, 90014c78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014c70:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90014c74:	2b00      	cmp	r3, #0
90014c76:	d0ba      	beq.n	90014bee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90014c78:	b063      	add	sp, #396	@ 0x18c
90014c7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014c7e:	2a02      	cmp	r2, #2
90014c80:	d105      	bne.n	90014c8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90014c82:	7be2      	ldrb	r2, [r4, #15]
90014c84:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90014c88:	1a80      	subs	r0, r0, r2
90014c8a:	1ac0      	subs	r0, r0, r3
90014c8c:	e773      	b.n	90014b76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90014c8e:	2000      	movs	r0, #0
90014c90:	e772      	b.n	90014b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90014c92:	7be0      	ldrb	r0, [r4, #15]
90014c94:	e770      	b.n	90014b78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90014c96:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90014c9a:	e773      	b.n	90014b84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90014c9c:	f1ba 0f00 	cmp.w	sl, #0
90014ca0:	d0f7      	beq.n	90014c92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90014ca2:	2264      	movs	r2, #100	@ 0x64
90014ca4:	4639      	mov	r1, r7
90014ca6:	a849      	add	r0, sp, #292	@ 0x124
90014ca8:	f013 ff39 	bl	90028b1e <memcpy>
90014cac:	2300      	movs	r3, #0
90014cae:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90014cb2:	6821      	ldr	r1, [r4, #0]
90014cb4:	a849      	add	r0, sp, #292	@ 0x124
90014cb6:	f7ff fb9a 	bl	900143ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014cba:	b203      	sxth	r3, r0
90014cbc:	e751      	b.n	90014b62 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90014cbe <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90014cbe:	2b03      	cmp	r3, #3
90014cc0:	d818      	bhi.n	90014cf4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90014cc2:	e8df f003 	tbb	[pc, r3]
90014cc6:	0602      	.short	0x0602
90014cc8:	130d      	.short	0x130d
90014cca:	f9b0 2000 	ldrsh.w	r2, [r0]
90014cce:	1850      	adds	r0, r2, r1
90014cd0:	4770      	bx	lr
90014cd2:	8803      	ldrh	r3, [r0, #0]
90014cd4:	8880      	ldrh	r0, [r0, #4]
90014cd6:	4418      	add	r0, r3
90014cd8:	b200      	sxth	r0, r0
90014cda:	1a80      	subs	r0, r0, r2
90014cdc:	3801      	subs	r0, #1
90014cde:	4770      	bx	lr
90014ce0:	8803      	ldrh	r3, [r0, #0]
90014ce2:	8880      	ldrh	r0, [r0, #4]
90014ce4:	4418      	add	r0, r3
90014ce6:	b200      	sxth	r0, r0
90014ce8:	1a40      	subs	r0, r0, r1
90014cea:	e7f7      	b.n	90014cdc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90014cec:	f9b0 0000 	ldrsh.w	r0, [r0]
90014cf0:	4410      	add	r0, r2
90014cf2:	4770      	bx	lr
90014cf4:	2000      	movs	r0, #0
90014cf6:	4770      	bx	lr

90014cf8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90014cf8:	2b03      	cmp	r3, #3
90014cfa:	d817      	bhi.n	90014d2c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90014cfc:	e8df f003 	tbb	[pc, r3]
90014d00:	10090602 	.word	0x10090602
90014d04:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014d08:	1850      	adds	r0, r2, r1
90014d0a:	4770      	bx	lr
90014d0c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014d10:	e7fa      	b.n	90014d08 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90014d12:	8843      	ldrh	r3, [r0, #2]
90014d14:	88c0      	ldrh	r0, [r0, #6]
90014d16:	4418      	add	r0, r3
90014d18:	b200      	sxth	r0, r0
90014d1a:	1a80      	subs	r0, r0, r2
90014d1c:	3801      	subs	r0, #1
90014d1e:	4770      	bx	lr
90014d20:	8843      	ldrh	r3, [r0, #2]
90014d22:	88c0      	ldrh	r0, [r0, #6]
90014d24:	4418      	add	r0, r3
90014d26:	b200      	sxth	r0, r0
90014d28:	1a40      	subs	r0, r0, r1
90014d2a:	e7f7      	b.n	90014d1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90014d2c:	2000      	movs	r0, #0
90014d2e:	4770      	bx	lr

90014d30 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90014d30:	4b01      	ldr	r3, [pc, #4]	@ (90014d38 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90014d32:	2200      	movs	r2, #0
90014d34:	601a      	str	r2, [r3, #0]
90014d36:	4770      	bx	lr
90014d38:	240218c4 	.word	0x240218c4

90014d3c <_ZN8touchgfx16TouchCalibration4clzuEm>:
90014d3c:	4603      	mov	r3, r0
90014d3e:	b1c8      	cbz	r0, 90014d74 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90014d40:	0c02      	lsrs	r2, r0, #16
90014d42:	0412      	lsls	r2, r2, #16
90014d44:	b9a2      	cbnz	r2, 90014d70 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90014d46:	0403      	lsls	r3, r0, #16
90014d48:	2010      	movs	r0, #16
90014d4a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90014d4e:	bf04      	itt	eq
90014d50:	021b      	lsleq	r3, r3, #8
90014d52:	3008      	addeq	r0, #8
90014d54:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90014d58:	bf04      	itt	eq
90014d5a:	011b      	lsleq	r3, r3, #4
90014d5c:	3004      	addeq	r0, #4
90014d5e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90014d62:	bf04      	itt	eq
90014d64:	009b      	lsleq	r3, r3, #2
90014d66:	3002      	addeq	r0, #2
90014d68:	2b00      	cmp	r3, #0
90014d6a:	db04      	blt.n	90014d76 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90014d6c:	3001      	adds	r0, #1
90014d6e:	4770      	bx	lr
90014d70:	2000      	movs	r0, #0
90014d72:	e7ea      	b.n	90014d4a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90014d74:	2020      	movs	r0, #32
90014d76:	4770      	bx	lr

90014d78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90014d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014d7c:	b087      	sub	sp, #28
90014d7e:	460d      	mov	r5, r1
90014d80:	4616      	mov	r6, r2
90014d82:	4698      	mov	r8, r3
90014d84:	4601      	mov	r1, r0
90014d86:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90014d8a:	b120      	cbz	r0, 90014d96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014d8c:	b11a      	cbz	r2, 90014d96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014d8e:	2d1f      	cmp	r5, #31
90014d90:	d801      	bhi.n	90014d96 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014d92:	2b1f      	cmp	r3, #31
90014d94:	d904      	bls.n	90014da0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90014d96:	2000      	movs	r0, #0
90014d98:	6038      	str	r0, [r7, #0]
90014d9a:	b007      	add	sp, #28
90014d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014da0:	b97d      	cbnz	r5, 90014dc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90014da2:	b143      	cbz	r3, 90014db6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90014da4:	4602      	mov	r2, r0
90014da6:	462b      	mov	r3, r5
90014da8:	4641      	mov	r1, r8
90014daa:	4630      	mov	r0, r6
90014dac:	e9cd 4700 	strd	r4, r7, [sp]
90014db0:	f7ff ffe2 	bl	90014d78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014db4:	e7f1      	b.n	90014d9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014db6:	f04f 33ff 	mov.w	r3, #4294967295
90014dba:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90014dbe:	603b      	str	r3, [r7, #0]
90014dc0:	e7eb      	b.n	90014d9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014dc2:	fa32 fa05 	lsrs.w	sl, r2, r5
90014dc6:	d106      	bne.n	90014dd6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90014dc8:	4346      	muls	r6, r0
90014dca:	fbb6 f0f4 	udiv	r0, r6, r4
90014dce:	fb04 6610 	mls	r6, r4, r0, r6
90014dd2:	603e      	str	r6, [r7, #0]
90014dd4:	e7e1      	b.n	90014d9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014dd6:	2201      	movs	r2, #1
90014dd8:	fa00 fb05 	lsl.w	fp, r0, r5
90014ddc:	40aa      	lsls	r2, r5
90014dde:	fbbb f9f4 	udiv	r9, fp, r4
90014de2:	3a01      	subs	r2, #1
90014de4:	fb0a f309 	mul.w	r3, sl, r9
90014de8:	fb04 b919 	mls	r9, r4, r9, fp
90014dec:	4016      	ands	r6, r2
90014dee:	9303      	str	r3, [sp, #12]
90014df0:	4630      	mov	r0, r6
90014df2:	f7ff ffa3 	bl	90014d3c <_ZN8touchgfx16TouchCalibration4clzuEm>
90014df6:	462b      	mov	r3, r5
90014df8:	460a      	mov	r2, r1
90014dfa:	4601      	mov	r1, r0
90014dfc:	4630      	mov	r0, r6
90014dfe:	e9cd 4700 	strd	r4, r7, [sp]
90014e02:	f7ff ffb9 	bl	90014d78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014e06:	4606      	mov	r6, r0
90014e08:	4648      	mov	r0, r9
90014e0a:	eb05 0108 	add.w	r1, r5, r8
90014e0e:	f7ff ff95 	bl	90014d3c <_ZN8touchgfx16TouchCalibration4clzuEm>
90014e12:	ab05      	add	r3, sp, #20
90014e14:	464a      	mov	r2, r9
90014e16:	e9cd 4300 	strd	r4, r3, [sp]
90014e1a:	4603      	mov	r3, r0
90014e1c:	4650      	mov	r0, sl
90014e1e:	f7ff ffab 	bl	90014d78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014e22:	6839      	ldr	r1, [r7, #0]
90014e24:	9a05      	ldr	r2, [sp, #20]
90014e26:	9b03      	ldr	r3, [sp, #12]
90014e28:	4411      	add	r1, r2
90014e2a:	fbb1 f2f4 	udiv	r2, r1, r4
90014e2e:	18d3      	adds	r3, r2, r3
90014e30:	fb04 1412 	mls	r4, r4, r2, r1
90014e34:	441e      	add	r6, r3
90014e36:	603c      	str	r4, [r7, #0]
90014e38:	4430      	add	r0, r6
90014e3a:	e7ae      	b.n	90014d9a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90014e3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90014e3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014e40:	b085      	sub	sp, #20
90014e42:	f1b0 0900 	subs.w	r9, r0, #0
90014e46:	461d      	mov	r5, r3
90014e48:	4617      	mov	r7, r2
90014e4a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90014e4c:	bfbb      	ittet	lt
90014e4e:	f1c9 0900 	rsblt	r9, r9, #0
90014e52:	f04f 36ff 	movlt.w	r6, #4294967295
90014e56:	2601      	movge	r6, #1
90014e58:	6823      	ldrlt	r3, [r4, #0]
90014e5a:	bfbc      	itt	lt
90014e5c:	425b      	neglt	r3, r3
90014e5e:	6023      	strlt	r3, [r4, #0]
90014e60:	2a00      	cmp	r2, #0
90014e62:	da04      	bge.n	90014e6e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90014e64:	6823      	ldr	r3, [r4, #0]
90014e66:	4257      	negs	r7, r2
90014e68:	4276      	negs	r6, r6
90014e6a:	425b      	negs	r3, r3
90014e6c:	6023      	str	r3, [r4, #0]
90014e6e:	2d00      	cmp	r5, #0
90014e70:	4638      	mov	r0, r7
90014e72:	bfba      	itte	lt
90014e74:	426d      	neglt	r5, r5
90014e76:	f04f 38ff 	movlt.w	r8, #4294967295
90014e7a:	f04f 0801 	movge.w	r8, #1
90014e7e:	f7ff ff5d 	bl	90014d3c <_ZN8touchgfx16TouchCalibration4clzuEm>
90014e82:	ab03      	add	r3, sp, #12
90014e84:	463a      	mov	r2, r7
90014e86:	e9cd 5300 	strd	r5, r3, [sp]
90014e8a:	4603      	mov	r3, r0
90014e8c:	4648      	mov	r0, r9
90014e8e:	f7ff ff73 	bl	90014d78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014e92:	6823      	ldr	r3, [r4, #0]
90014e94:	9a03      	ldr	r2, [sp, #12]
90014e96:	4546      	cmp	r6, r8
90014e98:	441a      	add	r2, r3
90014e9a:	fb92 f3f5 	sdiv	r3, r2, r5
90014e9e:	4418      	add	r0, r3
90014ea0:	fb05 2313 	mls	r3, r5, r3, r2
90014ea4:	bf18      	it	ne
90014ea6:	4240      	negne	r0, r0
90014ea8:	1c72      	adds	r2, r6, #1
90014eaa:	6023      	str	r3, [r4, #0]
90014eac:	d105      	bne.n	90014eba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90014eae:	2b00      	cmp	r3, #0
90014eb0:	f1c3 0200 	rsb	r2, r3, #0
90014eb4:	db0b      	blt.n	90014ece <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90014eb6:	6022      	str	r2, [r4, #0]
90014eb8:	e006      	b.n	90014ec8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014eba:	2e01      	cmp	r6, #1
90014ebc:	d104      	bne.n	90014ec8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014ebe:	2b00      	cmp	r3, #0
90014ec0:	da02      	bge.n	90014ec8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014ec2:	442b      	add	r3, r5
90014ec4:	3801      	subs	r0, #1
90014ec6:	6023      	str	r3, [r4, #0]
90014ec8:	b005      	add	sp, #20
90014eca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014ece:	3801      	subs	r0, #1
90014ed0:	1b52      	subs	r2, r2, r5
90014ed2:	e7f0      	b.n	90014eb6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90014ed4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90014ed4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90014ed8:	4c1c      	ldr	r4, [pc, #112]	@ (90014f4c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90014eda:	4605      	mov	r5, r0
90014edc:	6807      	ldr	r7, [r0, #0]
90014ede:	69a3      	ldr	r3, [r4, #24]
90014ee0:	b92b      	cbnz	r3, 90014eee <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90014ee2:	6840      	ldr	r0, [r0, #4]
90014ee4:	e9c5 7000 	strd	r7, r0, [r5]
90014ee8:	b004      	add	sp, #16
90014eea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014eee:	f04f 0802 	mov.w	r8, #2
90014ef2:	68a2      	ldr	r2, [r4, #8]
90014ef4:	ae04      	add	r6, sp, #16
90014ef6:	6820      	ldr	r0, [r4, #0]
90014ef8:	fb93 f1f8 	sdiv	r1, r3, r8
90014efc:	440a      	add	r2, r1
90014efe:	69e1      	ldr	r1, [r4, #28]
90014f00:	f846 2d04 	str.w	r2, [r6, #-4]!
90014f04:	463a      	mov	r2, r7
90014f06:	9600      	str	r6, [sp, #0]
90014f08:	f7ff ff98 	bl	90014e3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014f0c:	69a3      	ldr	r3, [r4, #24]
90014f0e:	4607      	mov	r7, r0
90014f10:	686a      	ldr	r2, [r5, #4]
90014f12:	6a21      	ldr	r1, [r4, #32]
90014f14:	9600      	str	r6, [sp, #0]
90014f16:	6860      	ldr	r0, [r4, #4]
90014f18:	f7ff ff90 	bl	90014e3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014f1c:	69a3      	ldr	r3, [r4, #24]
90014f1e:	6962      	ldr	r2, [r4, #20]
90014f20:	4407      	add	r7, r0
90014f22:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90014f24:	9600      	str	r6, [sp, #0]
90014f26:	68e0      	ldr	r0, [r4, #12]
90014f28:	fb93 f8f8 	sdiv	r8, r3, r8
90014f2c:	4442      	add	r2, r8
90014f2e:	9203      	str	r2, [sp, #12]
90014f30:	682a      	ldr	r2, [r5, #0]
90014f32:	f7ff ff83 	bl	90014e3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014f36:	4680      	mov	r8, r0
90014f38:	9600      	str	r6, [sp, #0]
90014f3a:	69a3      	ldr	r3, [r4, #24]
90014f3c:	686a      	ldr	r2, [r5, #4]
90014f3e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90014f40:	6920      	ldr	r0, [r4, #16]
90014f42:	f7ff ff7b 	bl	90014e3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014f46:	4440      	add	r0, r8
90014f48:	e7cc      	b.n	90014ee4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90014f4a:	bf00      	nop
90014f4c:	240218c8 	.word	0x240218c8

90014f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90014f50:	4b07      	ldr	r3, [pc, #28]	@ (90014f70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90014f52:	781b      	ldrb	r3, [r3, #0]
90014f54:	2b01      	cmp	r3, #1
90014f56:	d109      	bne.n	90014f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90014f58:	f9b1 3000 	ldrsh.w	r3, [r1]
90014f5c:	f9b0 2000 	ldrsh.w	r2, [r0]
90014f60:	8003      	strh	r3, [r0, #0]
90014f62:	4b04      	ldr	r3, [pc, #16]	@ (90014f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90014f64:	881b      	ldrh	r3, [r3, #0]
90014f66:	3b01      	subs	r3, #1
90014f68:	1a9b      	subs	r3, r3, r2
90014f6a:	800b      	strh	r3, [r1, #0]
90014f6c:	4770      	bx	lr
90014f6e:	bf00      	nop
90014f70:	240218ac 	.word	0x240218ac
90014f74:	240218a8 	.word	0x240218a8

90014f78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90014f78:	4b07      	ldr	r3, [pc, #28]	@ (90014f98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90014f7a:	b510      	push	{r4, lr}
90014f7c:	781b      	ldrb	r3, [r3, #0]
90014f7e:	2b01      	cmp	r3, #1
90014f80:	d108      	bne.n	90014f94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90014f82:	4b06      	ldr	r3, [pc, #24]	@ (90014f9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90014f84:	880c      	ldrh	r4, [r1, #0]
90014f86:	881b      	ldrh	r3, [r3, #0]
90014f88:	f9b0 2000 	ldrsh.w	r2, [r0]
90014f8c:	3b01      	subs	r3, #1
90014f8e:	1b1b      	subs	r3, r3, r4
90014f90:	8003      	strh	r3, [r0, #0]
90014f92:	800a      	strh	r2, [r1, #0]
90014f94:	bd10      	pop	{r4, pc}
90014f96:	bf00      	nop
90014f98:	240218ac 	.word	0x240218ac
90014f9c:	240218a8 	.word	0x240218a8

90014fa0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90014fa0:	4b0a      	ldr	r3, [pc, #40]	@ (90014fcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90014fa2:	b510      	push	{r4, lr}
90014fa4:	781b      	ldrb	r3, [r3, #0]
90014fa6:	2b01      	cmp	r3, #1
90014fa8:	d10e      	bne.n	90014fc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90014faa:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90014fae:	8843      	ldrh	r3, [r0, #2]
90014fb0:	f9b0 4000 	ldrsh.w	r4, [r0]
90014fb4:	18ca      	adds	r2, r1, r3
90014fb6:	4b06      	ldr	r3, [pc, #24]	@ (90014fd0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90014fb8:	8044      	strh	r4, [r0, #2]
90014fba:	881b      	ldrh	r3, [r3, #0]
90014fbc:	1a9b      	subs	r3, r3, r2
90014fbe:	8003      	strh	r3, [r0, #0]
90014fc0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014fc4:	8081      	strh	r1, [r0, #4]
90014fc6:	80c3      	strh	r3, [r0, #6]
90014fc8:	bd10      	pop	{r4, pc}
90014fca:	bf00      	nop
90014fcc:	240218ac 	.word	0x240218ac
90014fd0:	240218a8 	.word	0x240218a8

90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90014fd4:	4b08      	ldr	r3, [pc, #32]	@ (90014ff8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90014fd6:	781b      	ldrb	r3, [r3, #0]
90014fd8:	2b01      	cmp	r3, #1
90014fda:	d10c      	bne.n	90014ff6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90014fdc:	8803      	ldrh	r3, [r0, #0]
90014fde:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90014fe2:	8842      	ldrh	r2, [r0, #2]
90014fe4:	8002      	strh	r2, [r0, #0]
90014fe6:	185a      	adds	r2, r3, r1
90014fe8:	4b04      	ldr	r3, [pc, #16]	@ (90014ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90014fea:	881b      	ldrh	r3, [r3, #0]
90014fec:	1a9b      	subs	r3, r3, r2
90014fee:	8043      	strh	r3, [r0, #2]
90014ff0:	88c3      	ldrh	r3, [r0, #6]
90014ff2:	80c1      	strh	r1, [r0, #6]
90014ff4:	8083      	strh	r3, [r0, #4]
90014ff6:	4770      	bx	lr
90014ff8:	240218ac 	.word	0x240218ac
90014ffc:	240218a8 	.word	0x240218a8

90015000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90015000:	4b07      	ldr	r3, [pc, #28]	@ (90015020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90015002:	b510      	push	{r4, lr}
90015004:	781b      	ldrb	r3, [r3, #0]
90015006:	2b01      	cmp	r3, #1
90015008:	d108      	bne.n	9001501c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
9001500a:	f9b1 3000 	ldrsh.w	r3, [r1]
9001500e:	f9b0 4000 	ldrsh.w	r4, [r0]
90015012:	8003      	strh	r3, [r0, #0]
90015014:	8893      	ldrh	r3, [r2, #4]
90015016:	3b01      	subs	r3, #1
90015018:	1b1b      	subs	r3, r3, r4
9001501a:	800b      	strh	r3, [r1, #0]
9001501c:	bd10      	pop	{r4, pc}
9001501e:	bf00      	nop
90015020:	240218ac 	.word	0x240218ac

90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90015024:	4b0a      	ldr	r3, [pc, #40]	@ (90015050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90015026:	460a      	mov	r2, r1
90015028:	b510      	push	{r4, lr}
9001502a:	781b      	ldrb	r3, [r3, #0]
9001502c:	2b01      	cmp	r3, #1
9001502e:	d10d      	bne.n	9001504c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90015030:	8881      	ldrh	r1, [r0, #4]
90015032:	8803      	ldrh	r3, [r0, #0]
90015034:	440b      	add	r3, r1
90015036:	4601      	mov	r1, r0
90015038:	3b01      	subs	r3, #1
9001503a:	f821 3b02 	strh.w	r3, [r1], #2
9001503e:	f7ff ffdf 	bl	90015000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90015042:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015046:	88c2      	ldrh	r2, [r0, #6]
90015048:	80c3      	strh	r3, [r0, #6]
9001504a:	8082      	strh	r2, [r0, #4]
9001504c:	bd10      	pop	{r4, pc}
9001504e:	bf00      	nop
90015050:	240218ac 	.word	0x240218ac

90015054 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90015054:	4770      	bx	lr
	...

90015058 <_ZN8touchgfx11Application13requestRedrawEv>:
90015058:	4b06      	ldr	r3, [pc, #24]	@ (90015074 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
9001505a:	2100      	movs	r1, #0
9001505c:	f9b3 2000 	ldrsh.w	r2, [r3]
90015060:	4b05      	ldr	r3, [pc, #20]	@ (90015078 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90015062:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90015066:	f9b3 3000 	ldrsh.w	r3, [r3]
9001506a:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
9001506e:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90015072:	4770      	bx	lr
90015074:	240218a8 	.word	0x240218a8
90015078:	240218aa 	.word	0x240218aa

9001507c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
9001507c:	4b03      	ldr	r3, [pc, #12]	@ (9001508c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
9001507e:	6818      	ldr	r0, [r3, #0]
90015080:	b110      	cbz	r0, 90015088 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90015082:	6803      	ldr	r3, [r0, #0]
90015084:	699b      	ldr	r3, [r3, #24]
90015086:	4718      	bx	r3
90015088:	4770      	bx	lr
9001508a:	bf00      	nop
9001508c:	240218f8 	.word	0x240218f8

90015090 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90015090:	4770      	bx	lr
	...

90015094 <_ZN8touchgfx11Application4drawEv>:
90015094:	4b09      	ldr	r3, [pc, #36]	@ (900150bc <_ZN8touchgfx11Application4drawEv+0x28>)
90015096:	b507      	push	{r0, r1, r2, lr}
90015098:	f9b3 2000 	ldrsh.w	r2, [r3]
9001509c:	2100      	movs	r1, #0
9001509e:	4b08      	ldr	r3, [pc, #32]	@ (900150c0 <_ZN8touchgfx11Application4drawEv+0x2c>)
900150a0:	9100      	str	r1, [sp, #0]
900150a2:	4669      	mov	r1, sp
900150a4:	f9b3 3000 	ldrsh.w	r3, [r3]
900150a8:	f8ad 2004 	strh.w	r2, [sp, #4]
900150ac:	f8ad 3006 	strh.w	r3, [sp, #6]
900150b0:	6803      	ldr	r3, [r0, #0]
900150b2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900150b4:	4798      	blx	r3
900150b6:	b003      	add	sp, #12
900150b8:	f85d fb04 	ldr.w	pc, [sp], #4
900150bc:	240218a8 	.word	0x240218a8
900150c0:	240218aa 	.word	0x240218aa

900150c4 <_ZN8touchgfx11Application10invalidateEv>:
900150c4:	4b09      	ldr	r3, [pc, #36]	@ (900150ec <_ZN8touchgfx11Application10invalidateEv+0x28>)
900150c6:	b082      	sub	sp, #8
900150c8:	2100      	movs	r1, #0
900150ca:	f9b3 2000 	ldrsh.w	r2, [r3]
900150ce:	4b08      	ldr	r3, [pc, #32]	@ (900150f0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
900150d0:	f8ad 2004 	strh.w	r2, [sp, #4]
900150d4:	aa02      	add	r2, sp, #8
900150d6:	f9b3 3000 	ldrsh.w	r3, [r3]
900150da:	9100      	str	r1, [sp, #0]
900150dc:	f8ad 3006 	strh.w	r3, [sp, #6]
900150e0:	6803      	ldr	r3, [r0, #0]
900150e2:	e912 0006 	ldmdb	r2, {r1, r2}
900150e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900150e8:	b002      	add	sp, #8
900150ea:	4718      	bx	r3
900150ec:	240218a8 	.word	0x240218a8
900150f0:	240218aa 	.word	0x240218aa

900150f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
900150f4:	4b03      	ldr	r3, [pc, #12]	@ (90015104 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
900150f6:	6818      	ldr	r0, [r3, #0]
900150f8:	b110      	cbz	r0, 90015100 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
900150fa:	6803      	ldr	r3, [r0, #0]
900150fc:	69db      	ldr	r3, [r3, #28]
900150fe:	4718      	bx	r3
90015100:	4770      	bx	lr
90015102:	bf00      	nop
90015104:	240218f8 	.word	0x240218f8

90015108 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90015108:	4b03      	ldr	r3, [pc, #12]	@ (90015118 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
9001510a:	6818      	ldr	r0, [r3, #0]
9001510c:	b110      	cbz	r0, 90015114 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
9001510e:	6803      	ldr	r3, [r0, #0]
90015110:	6a1b      	ldr	r3, [r3, #32]
90015112:	4718      	bx	r3
90015114:	4770      	bx	lr
90015116:	bf00      	nop
90015118:	240218f8 	.word	0x240218f8

9001511c <_ZN8touchgfx11Application16clearCachedAreasEv>:
9001511c:	2300      	movs	r3, #0
9001511e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
90015122:	4770      	bx	lr

90015124 <_ZN8touchgfx11Application14handleKeyEventEh>:
90015124:	4b03      	ldr	r3, [pc, #12]	@ (90015134 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90015126:	6818      	ldr	r0, [r3, #0]
90015128:	b110      	cbz	r0, 90015130 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
9001512a:	6803      	ldr	r3, [r0, #0]
9001512c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001512e:	4718      	bx	r3
90015130:	4770      	bx	lr
90015132:	bf00      	nop
90015134:	240218f8 	.word	0x240218f8

90015138 <_ZN8touchgfx11ApplicationD1Ev>:
90015138:	4770      	bx	lr

9001513a <_ZN8touchgfx11ApplicationD0Ev>:
9001513a:	b510      	push	{r4, lr}
9001513c:	4604      	mov	r4, r0
9001513e:	f44f 719e 	mov.w	r1, #316	@ 0x13c
90015142:	f012 fda1 	bl	90027c88 <_ZdlPvj>
90015146:	4620      	mov	r0, r4
90015148:	bd10      	pop	{r4, pc}

9001514a <_ZNK8touchgfx4Rect9intersectERKS0_>:
9001514a:	b510      	push	{r4, lr}
9001514c:	f9b1 4000 	ldrsh.w	r4, [r1]
90015150:	888a      	ldrh	r2, [r1, #4]
90015152:	f9b0 3000 	ldrsh.w	r3, [r0]
90015156:	4422      	add	r2, r4
90015158:	b212      	sxth	r2, r2
9001515a:	4293      	cmp	r3, r2
9001515c:	da15      	bge.n	9001518a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001515e:	8882      	ldrh	r2, [r0, #4]
90015160:	4413      	add	r3, r2
90015162:	b21b      	sxth	r3, r3
90015164:	429c      	cmp	r4, r3
90015166:	da10      	bge.n	9001518a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90015168:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
9001516c:	88c9      	ldrh	r1, [r1, #6]
9001516e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90015172:	4419      	add	r1, r3
90015174:	b209      	sxth	r1, r1
90015176:	428a      	cmp	r2, r1
90015178:	da07      	bge.n	9001518a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001517a:	88c0      	ldrh	r0, [r0, #6]
9001517c:	4410      	add	r0, r2
9001517e:	b200      	sxth	r0, r0
90015180:	4283      	cmp	r3, r0
90015182:	bfac      	ite	ge
90015184:	2000      	movge	r0, #0
90015186:	2001      	movlt	r0, #1
90015188:	bd10      	pop	{r4, pc}
9001518a:	2000      	movs	r0, #0
9001518c:	e7fc      	b.n	90015188 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

9001518e <_ZN8touchgfx4Rect10restrictToEss>:
9001518e:	f9b0 3000 	ldrsh.w	r3, [r0]
90015192:	2b00      	cmp	r3, #0
90015194:	b510      	push	{r4, lr}
90015196:	da04      	bge.n	900151a2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90015198:	8884      	ldrh	r4, [r0, #4]
9001519a:	4423      	add	r3, r4
9001519c:	8083      	strh	r3, [r0, #4]
9001519e:	2300      	movs	r3, #0
900151a0:	8003      	strh	r3, [r0, #0]
900151a2:	f9b0 4000 	ldrsh.w	r4, [r0]
900151a6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900151aa:	1b09      	subs	r1, r1, r4
900151ac:	428b      	cmp	r3, r1
900151ae:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900151b2:	bfc8      	it	gt
900151b4:	8081      	strhgt	r1, [r0, #4]
900151b6:	2b00      	cmp	r3, #0
900151b8:	da04      	bge.n	900151c4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
900151ba:	88c1      	ldrh	r1, [r0, #6]
900151bc:	440b      	add	r3, r1
900151be:	80c3      	strh	r3, [r0, #6]
900151c0:	2300      	movs	r3, #0
900151c2:	8043      	strh	r3, [r0, #2]
900151c4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
900151c8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
900151cc:	1a52      	subs	r2, r2, r1
900151ce:	4293      	cmp	r3, r2
900151d0:	bfc8      	it	gt
900151d2:	80c2      	strhgt	r2, [r0, #6]
900151d4:	bd10      	pop	{r4, pc}
	...

900151d8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
900151d8:	4b10      	ldr	r3, [pc, #64]	@ (9001521c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
900151da:	b510      	push	{r4, lr}
900151dc:	460c      	mov	r4, r1
900151de:	f9b3 2000 	ldrsh.w	r2, [r3]
900151e2:	4b0f      	ldr	r3, [pc, #60]	@ (90015220 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
900151e4:	4620      	mov	r0, r4
900151e6:	f9b3 1000 	ldrsh.w	r1, [r3]
900151ea:	f7ff ffd0 	bl	9001518e <_ZN8touchgfx4Rect10restrictToEss>
900151ee:	4b0d      	ldr	r3, [pc, #52]	@ (90015224 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
900151f0:	6818      	ldr	r0, [r3, #0]
900151f2:	b190      	cbz	r0, 9001521a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
900151f4:	6803      	ldr	r3, [r0, #0]
900151f6:	4621      	mov	r1, r4
900151f8:	689b      	ldr	r3, [r3, #8]
900151fa:	4798      	blx	r3
900151fc:	4b0a      	ldr	r3, [pc, #40]	@ (90015228 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
900151fe:	6818      	ldr	r0, [r3, #0]
90015200:	b118      	cbz	r0, 9001520a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90015202:	6803      	ldr	r3, [r0, #0]
90015204:	4621      	mov	r1, r4
90015206:	689b      	ldr	r3, [r3, #8]
90015208:	4798      	blx	r3
9001520a:	4b08      	ldr	r3, [pc, #32]	@ (9001522c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
9001520c:	4621      	mov	r1, r4
9001520e:	6818      	ldr	r0, [r3, #0]
90015210:	6803      	ldr	r3, [r0, #0]
90015212:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90015216:	69db      	ldr	r3, [r3, #28]
90015218:	4718      	bx	r3
9001521a:	bd10      	pop	{r4, pc}
9001521c:	240218aa 	.word	0x240218aa
90015220:	240218a8 	.word	0x240218a8
90015224:	240218f8 	.word	0x240218f8
90015228:	240218f4 	.word	0x240218f4
9001522c:	240218b4 	.word	0x240218b4

90015230 <_ZNK8touchgfx4Rect8includesERKS0_>:
90015230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015232:	4606      	mov	r6, r0
90015234:	4608      	mov	r0, r1
90015236:	460f      	mov	r7, r1
90015238:	f7fa fa4d 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001523c:	b9e8      	cbnz	r0, 9001527a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001523e:	f9b7 5000 	ldrsh.w	r5, [r7]
90015242:	f9b6 4000 	ldrsh.w	r4, [r6]
90015246:	42a5      	cmp	r5, r4
90015248:	db17      	blt.n	9001527a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001524a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
9001524e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90015252:	429a      	cmp	r2, r3
90015254:	db11      	blt.n	9001527a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90015256:	88b9      	ldrh	r1, [r7, #4]
90015258:	440d      	add	r5, r1
9001525a:	88b1      	ldrh	r1, [r6, #4]
9001525c:	440c      	add	r4, r1
9001525e:	b22d      	sxth	r5, r5
90015260:	b224      	sxth	r4, r4
90015262:	42a5      	cmp	r5, r4
90015264:	dc09      	bgt.n	9001527a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90015266:	88f8      	ldrh	r0, [r7, #6]
90015268:	4410      	add	r0, r2
9001526a:	88f2      	ldrh	r2, [r6, #6]
9001526c:	4413      	add	r3, r2
9001526e:	b200      	sxth	r0, r0
90015270:	b21b      	sxth	r3, r3
90015272:	4298      	cmp	r0, r3
90015274:	bfcc      	ite	gt
90015276:	2000      	movgt	r0, #0
90015278:	2001      	movle	r0, #1
9001527a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001527c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
9001527c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001527e:	4604      	mov	r4, r0
90015280:	4608      	mov	r0, r1
90015282:	460d      	mov	r5, r1
90015284:	f7fa fa27 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90015288:	b978      	cbnz	r0, 900152aa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001528a:	4620      	mov	r0, r4
9001528c:	f7fa fa23 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90015290:	f9b5 6000 	ldrsh.w	r6, [r5]
90015294:	b150      	cbz	r0, 900152ac <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90015296:	8026      	strh	r6, [r4, #0]
90015298:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001529c:	8063      	strh	r3, [r4, #2]
9001529e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900152a2:	80a3      	strh	r3, [r4, #4]
900152a4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900152a8:	80e3      	strh	r3, [r4, #6]
900152aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900152ac:	f9b4 1000 	ldrsh.w	r1, [r4]
900152b0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900152b4:	42b1      	cmp	r1, r6
900152b6:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
900152ba:	f8b5 c004 	ldrh.w	ip, [r5, #4]
900152be:	460f      	mov	r7, r1
900152c0:	88ed      	ldrh	r5, [r5, #6]
900152c2:	bfa8      	it	ge
900152c4:	4637      	movge	r7, r6
900152c6:	4293      	cmp	r3, r2
900152c8:	4618      	mov	r0, r3
900152ca:	4466      	add	r6, ip
900152cc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900152d0:	bfa8      	it	ge
900152d2:	4610      	movge	r0, r2
900152d4:	442a      	add	r2, r5
900152d6:	88e5      	ldrh	r5, [r4, #6]
900152d8:	4461      	add	r1, ip
900152da:	b236      	sxth	r6, r6
900152dc:	8027      	strh	r7, [r4, #0]
900152de:	442b      	add	r3, r5
900152e0:	b209      	sxth	r1, r1
900152e2:	b212      	sxth	r2, r2
900152e4:	8060      	strh	r0, [r4, #2]
900152e6:	b21b      	sxth	r3, r3
900152e8:	428e      	cmp	r6, r1
900152ea:	bfac      	ite	ge
900152ec:	ebc7 0106 	rsbge	r1, r7, r6
900152f0:	ebc7 0101 	rsblt	r1, r7, r1
900152f4:	429a      	cmp	r2, r3
900152f6:	bfac      	ite	ge
900152f8:	ebc0 0202 	rsbge	r2, r0, r2
900152fc:	ebc0 0203 	rsblt	r2, r0, r3
90015300:	80a1      	strh	r1, [r4, #4]
90015302:	80e2      	strh	r2, [r4, #6]
90015304:	e7d1      	b.n	900152aa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90015308 <_ZN8touchgfx11Application11getInstanceEv>:
90015308:	4b01      	ldr	r3, [pc, #4]	@ (90015310 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001530a:	6818      	ldr	r0, [r3, #0]
9001530c:	4770      	bx	lr
9001530e:	bf00      	nop
90015310:	24021908 	.word	0x24021908

90015314 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90015314:	2300      	movs	r3, #0
90015316:	b510      	push	{r4, lr}
90015318:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
9001531c:	4604      	mov	r4, r0
9001531e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90015322:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90015326:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
9001532a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
9001532e:	429a      	cmp	r2, r3
90015330:	d90e      	bls.n	90015350 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90015332:	18e2      	adds	r2, r4, r3
90015334:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
90015338:	b122      	cbz	r2, 90015344 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
9001533a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001533e:	6803      	ldr	r3, [r0, #0]
90015340:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90015342:	4798      	blx	r3
90015344:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90015348:	3301      	adds	r3, #1
9001534a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001534e:	e7ea      	b.n	90015326 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90015350:	bd10      	pop	{r4, pc}

90015352 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90015352:	2300      	movs	r3, #0
90015354:	f100 0284 	add.w	r2, r0, #132	@ 0x84
90015358:	30a4      	adds	r0, #164	@ 0xa4
9001535a:	f820 3c24 	strh.w	r3, [r0, #-36]
9001535e:	f802 3b01 	strb.w	r3, [r2], #1
90015362:	4282      	cmp	r2, r0
90015364:	d1fb      	bne.n	9001535e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90015366:	4770      	bx	lr

90015368 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90015368:	b570      	push	{r4, r5, r6, lr}
9001536a:	4c0b      	ldr	r4, [pc, #44]	@ (90015398 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
9001536c:	4605      	mov	r5, r0
9001536e:	460e      	mov	r6, r1
90015370:	6820      	ldr	r0, [r4, #0]
90015372:	b110      	cbz	r0, 9001537a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90015374:	6803      	ldr	r3, [r0, #0]
90015376:	695b      	ldr	r3, [r3, #20]
90015378:	4798      	blx	r3
9001537a:	1d28      	adds	r0, r5, #4
9001537c:	f7ff ffe9 	bl	90015352 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90015380:	6026      	str	r6, [r4, #0]
90015382:	6833      	ldr	r3, [r6, #0]
90015384:	4630      	mov	r0, r6
90015386:	68db      	ldr	r3, [r3, #12]
90015388:	4798      	blx	r3
9001538a:	682b      	ldr	r3, [r5, #0]
9001538c:	4628      	mov	r0, r5
9001538e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015390:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015394:	4718      	bx	r3
90015396:	bf00      	nop
90015398:	240218f8 	.word	0x240218f8

9001539c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
9001539c:	2300      	movs	r3, #0
9001539e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
900153a2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
900153a6:	461a      	mov	r2, r3
900153a8:	b5f0      	push	{r4, r5, r6, r7, lr}
900153aa:	461c      	mov	r4, r3
900153ac:	461d      	mov	r5, r3
900153ae:	459c      	cmp	ip, r3
900153b0:	dd1a      	ble.n	900153e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
900153b2:	18c6      	adds	r6, r0, r3
900153b4:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
900153b8:	b16e      	cbz	r6, 900153d6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
900153ba:	429a      	cmp	r2, r3
900153bc:	d008      	beq.n	900153d0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
900153be:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
900153c2:	fa1f fe82 	uxth.w	lr, r2
900153c6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
900153ca:	1887      	adds	r7, r0, r2
900153cc:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
900153d0:	3201      	adds	r2, #1
900153d2:	3301      	adds	r3, #1
900153d4:	e7eb      	b.n	900153ae <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
900153d6:	4299      	cmp	r1, r3
900153d8:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
900153dc:	bfa8      	it	ge
900153de:	3501      	addge	r5, #1
900153e0:	429e      	cmp	r6, r3
900153e2:	bfc8      	it	gt
900153e4:	3401      	addgt	r4, #1
900153e6:	e7f4      	b.n	900153d2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
900153e8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
900153ec:	1b49      	subs	r1, r1, r5
900153ee:	1b1b      	subs	r3, r3, r4
900153f0:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
900153f4:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900153f8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900153fc:	4293      	cmp	r3, r2
900153fe:	dd03      	ble.n	90015408 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90015400:	3b01      	subs	r3, #1
90015402:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
90015406:	e7f7      	b.n	900153f8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90015408:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

9001540c <_ZN8touchgfx11Application15handleTickEventEv>:
9001540c:	b570      	push	{r4, r5, r6, lr}
9001540e:	4d16      	ldr	r5, [pc, #88]	@ (90015468 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90015410:	4604      	mov	r4, r0
90015412:	6828      	ldr	r0, [r5, #0]
90015414:	b140      	cbz	r0, 90015428 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90015416:	7a03      	ldrb	r3, [r0, #8]
90015418:	b933      	cbnz	r3, 90015428 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001541a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
9001541e:	6803      	ldr	r3, [r0, #0]
90015420:	689b      	ldr	r3, [r3, #8]
90015422:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015426:	4718      	bx	r3
90015428:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
9001542c:	4e0f      	ldr	r6, [pc, #60]	@ (9001546c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
9001542e:	b973      	cbnz	r3, 9001544e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90015430:	b168      	cbz	r0, 9001544e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90015432:	7a03      	ldrb	r3, [r0, #8]
90015434:	b15b      	cbz	r3, 9001544e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90015436:	6830      	ldr	r0, [r6, #0]
90015438:	b110      	cbz	r0, 90015440 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
9001543a:	6803      	ldr	r3, [r0, #0]
9001543c:	691b      	ldr	r3, [r3, #16]
9001543e:	4798      	blx	r3
90015440:	6828      	ldr	r0, [r5, #0]
90015442:	6803      	ldr	r3, [r0, #0]
90015444:	68db      	ldr	r3, [r3, #12]
90015446:	4798      	blx	r3
90015448:	2301      	movs	r3, #1
9001544a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
9001544e:	3404      	adds	r4, #4
90015450:	4620      	mov	r0, r4
90015452:	f7ff ff5f 	bl	90015314 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90015456:	4620      	mov	r0, r4
90015458:	f7ff ffa0 	bl	9001539c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001545c:	6830      	ldr	r0, [r6, #0]
9001545e:	b110      	cbz	r0, 90015466 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90015460:	6803      	ldr	r3, [r0, #0]
90015462:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90015464:	e7dd      	b.n	90015422 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90015466:	bd70      	pop	{r4, r5, r6, pc}
90015468:	240218fc 	.word	0x240218fc
9001546c:	240218f8 	.word	0x240218f8

90015470 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90015470:	4603      	mov	r3, r0
90015472:	f100 0140 	add.w	r1, r0, #64	@ 0x40
90015476:	2200      	movs	r2, #0
90015478:	801a      	strh	r2, [r3, #0]
9001547a:	3308      	adds	r3, #8
9001547c:	f823 2c06 	strh.w	r2, [r3, #-6]
90015480:	f823 2c04 	strh.w	r2, [r3, #-4]
90015484:	f823 2c02 	strh.w	r2, [r3, #-2]
90015488:	428b      	cmp	r3, r1
9001548a:	d1f5      	bne.n	90015478 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
9001548c:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90015490:	4770      	bx	lr
	...

90015494 <_ZN8touchgfx11ApplicationC1Ev>:
90015494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015496:	4b1d      	ldr	r3, [pc, #116]	@ (9001550c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90015498:	4606      	mov	r6, r0
9001549a:	4604      	mov	r4, r0
9001549c:	2500      	movs	r5, #0
9001549e:	f846 3b04 	str.w	r3, [r6], #4
900154a2:	22a8      	movs	r2, #168	@ 0xa8
900154a4:	2100      	movs	r1, #0
900154a6:	4630      	mov	r0, r6
900154a8:	f013 fa02 	bl	900288b0 <memset>
900154ac:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
900154b0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900154b4:	4f16      	ldr	r7, [pc, #88]	@ (90015510 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900154b6:	f7ff ffdb 	bl	90015470 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900154ba:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
900154be:	f7ff ffd7 	bl	90015470 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900154c2:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
900154c6:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
900154ca:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
900154ce:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
900154d2:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
900154d6:	490f      	ldr	r1, [pc, #60]	@ (90015514 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
900154d8:	480f      	ldr	r0, [pc, #60]	@ (90015518 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
900154da:	f011 fd45 	bl	90026f68 <CRC_Lock>
900154de:	4b0f      	ldr	r3, [pc, #60]	@ (9001551c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
900154e0:	b158      	cbz	r0, 900154fa <_ZN8touchgfx11ApplicationC1Ev+0x66>
900154e2:	801d      	strh	r5, [r3, #0]
900154e4:	2300      	movs	r3, #0
900154e6:	4a0e      	ldr	r2, [pc, #56]	@ (90015520 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
900154e8:	4630      	mov	r0, r6
900154ea:	6013      	str	r3, [r2, #0]
900154ec:	4a0d      	ldr	r2, [pc, #52]	@ (90015524 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
900154ee:	603b      	str	r3, [r7, #0]
900154f0:	6013      	str	r3, [r2, #0]
900154f2:	f7ff ff2e 	bl	90015352 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900154f6:	4620      	mov	r0, r4
900154f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900154fa:	f44f 6280 	mov.w	r2, #1024	@ 0x400
900154fe:	2002      	movs	r0, #2
90015500:	801a      	strh	r2, [r3, #0]
90015502:	6038      	str	r0, [r7, #0]
90015504:	f001 fe4a 	bl	9001719c <_ZN8touchgfx6Screen4drawEv>
90015508:	e7ec      	b.n	900154e4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
9001550a:	bf00      	nop
9001550c:	9002c24c 	.word	0x9002c24c
90015510:	240218f8 	.word	0x240218f8
90015514:	b5e8b5cd 	.word	0xb5e8b5cd
90015518:	f407a5c2 	.word	0xf407a5c2
9001551c:	24000088 	.word	0x24000088
90015520:	24021908 	.word	0x24021908
90015524:	240218fc 	.word	0x240218fc

90015528 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90015528:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
9001552c:	3b01      	subs	r3, #1
9001552e:	b29b      	uxth	r3, r3
90015530:	428b      	cmp	r3, r1
90015532:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
90015536:	b510      	push	{r4, lr}
90015538:	d908      	bls.n	9001554c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001553a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001553e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90015542:	681a      	ldr	r2, [r3, #0]
90015544:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90015548:	685a      	ldr	r2, [r3, #4]
9001554a:	6062      	str	r2, [r4, #4]
9001554c:	bd10      	pop	{r4, pc}
	...

90015550 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90015550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015554:	b08f      	sub	sp, #60	@ 0x3c
90015556:	4b8f      	ldr	r3, [pc, #572]	@ (90015794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90015558:	4683      	mov	fp, r0
9001555a:	ac0a      	add	r4, sp, #40	@ 0x28
9001555c:	e884 0006 	stmia.w	r4, {r1, r2}
90015560:	f9b3 2000 	ldrsh.w	r2, [r3]
90015564:	4620      	mov	r0, r4
90015566:	4b8c      	ldr	r3, [pc, #560]	@ (90015798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90015568:	f9b3 1000 	ldrsh.w	r1, [r3]
9001556c:	f7ff fe0f 	bl	9001518e <_ZN8touchgfx4Rect10restrictToEss>
90015570:	4620      	mov	r0, r4
90015572:	f7fa f8b0 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90015576:	2800      	cmp	r0, #0
90015578:	d16a      	bne.n	90015650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001557a:	9403      	str	r4, [sp, #12]
9001557c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90015580:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90015584:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90015588:	9301      	str	r3, [sp, #4]
9001558a:	35a4      	adds	r5, #164	@ 0xa4
9001558c:	b15c      	cbz	r4, 900155a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001558e:	4629      	mov	r1, r5
90015590:	9803      	ldr	r0, [sp, #12]
90015592:	f7ff fe4d 	bl	90015230 <_ZNK8touchgfx4Rect8includesERKS0_>
90015596:	3c01      	subs	r4, #1
90015598:	b118      	cbz	r0, 900155a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001559a:	b2a1      	uxth	r1, r4
9001559c:	9801      	ldr	r0, [sp, #4]
9001559e:	f7ff ffc3 	bl	90015528 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900155a2:	3d08      	subs	r5, #8
900155a4:	e7f2      	b.n	9001558c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
900155a6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
900155aa:	f10a 33ff 	add.w	r3, sl, #4294967295
900155ae:	f8cd a010 	str.w	sl, [sp, #16]
900155b2:	9302      	str	r3, [sp, #8]
900155b4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900155b8:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
900155bc:	9306      	str	r3, [sp, #24]
900155be:	445c      	add	r4, fp
900155c0:	2500      	movs	r5, #0
900155c2:	4626      	mov	r6, r4
900155c4:	f8cd a014 	str.w	sl, [sp, #20]
900155c8:	462f      	mov	r7, r5
900155ca:	9b05      	ldr	r3, [sp, #20]
900155cc:	2b00      	cmp	r3, #0
900155ce:	d073      	beq.n	900156b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
900155d0:	9903      	ldr	r1, [sp, #12]
900155d2:	4630      	mov	r0, r6
900155d4:	f7ff fdb9 	bl	9001514a <_ZNK8touchgfx4Rect9intersectERKS0_>
900155d8:	b350      	cbz	r0, 90015630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900155da:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
900155de:	f9b6 c000 	ldrsh.w	ip, [r6]
900155e2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
900155e6:	45e6      	cmp	lr, ip
900155e8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900155ec:	db33      	blt.n	90015656 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900155ee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900155f2:	88b3      	ldrh	r3, [r6, #4]
900155f4:	4472      	add	r2, lr
900155f6:	4463      	add	r3, ip
900155f8:	b212      	sxth	r2, r2
900155fa:	b21b      	sxth	r3, r3
900155fc:	429a      	cmp	r2, r3
900155fe:	dc2a      	bgt.n	90015656 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90015600:	fa1f f289 	uxth.w	r2, r9
90015604:	88f3      	ldrh	r3, [r6, #6]
90015606:	45c8      	cmp	r8, r9
90015608:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
9001560c:	4413      	add	r3, r2
9001560e:	fa1f fc88 	uxth.w	ip, r8
90015612:	b29b      	uxth	r3, r3
90015614:	fa0f fe83 	sxth.w	lr, r3
90015618:	db0f      	blt.n	9001563a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001561a:	eba3 030c 	sub.w	r3, r3, ip
9001561e:	1ac9      	subs	r1, r1, r3
90015620:	b209      	sxth	r1, r1
90015622:	2900      	cmp	r1, #0
90015624:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90015628:	dd12      	ble.n	90015650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001562a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
9001562e:	4605      	mov	r5, r0
90015630:	9b05      	ldr	r3, [sp, #20]
90015632:	3e08      	subs	r6, #8
90015634:	3b01      	subs	r3, #1
90015636:	9305      	str	r3, [sp, #20]
90015638:	e7c7      	b.n	900155ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
9001563a:	4461      	add	r1, ip
9001563c:	b209      	sxth	r1, r1
9001563e:	4571      	cmp	r1, lr
90015640:	dc38      	bgt.n	900156b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015642:	eba2 020c 	sub.w	r2, r2, ip
90015646:	b212      	sxth	r2, r2
90015648:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001564c:	2a00      	cmp	r2, #0
9001564e:	dcee      	bgt.n	9001562e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90015650:	b00f      	add	sp, #60	@ 0x3c
90015652:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015656:	45c8      	cmp	r8, r9
90015658:	db2c      	blt.n	900156b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001565a:	88f3      	ldrh	r3, [r6, #6]
9001565c:	4499      	add	r9, r3
9001565e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90015662:	4498      	add	r8, r3
90015664:	fa0f f989 	sxth.w	r9, r9
90015668:	fa0f f888 	sxth.w	r8, r8
9001566c:	45c1      	cmp	r9, r8
9001566e:	db21      	blt.n	900156b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015670:	fa1f f28c 	uxth.w	r2, ip
90015674:	88b3      	ldrh	r3, [r6, #4]
90015676:	45e6      	cmp	lr, ip
90015678:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001567c:	4413      	add	r3, r2
9001567e:	fa1f f88e 	uxth.w	r8, lr
90015682:	b29b      	uxth	r3, r3
90015684:	fa0f f983 	sxth.w	r9, r3
90015688:	db0a      	blt.n	900156a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
9001568a:	eba3 0308 	sub.w	r3, r3, r8
9001568e:	1ac9      	subs	r1, r1, r3
90015690:	b209      	sxth	r1, r1
90015692:	2900      	cmp	r1, #0
90015694:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90015698:	ddda      	ble.n	90015650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001569a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
9001569e:	e7c6      	b.n	9001562e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
900156a0:	4441      	add	r1, r8
900156a2:	b209      	sxth	r1, r1
900156a4:	4549      	cmp	r1, r9
900156a6:	dc05      	bgt.n	900156b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900156a8:	eba2 0208 	sub.w	r2, r2, r8
900156ac:	b212      	sxth	r2, r2
900156ae:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900156b2:	e7cb      	b.n	9001564c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
900156b4:	4607      	mov	r7, r0
900156b6:	e7bb      	b.n	90015630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900156b8:	2d00      	cmp	r5, #0
900156ba:	d181      	bne.n	900155c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
900156bc:	2f00      	cmp	r7, #0
900156be:	f000 81dd 	beq.w	90015a7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900156c2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
900156c6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
900156ca:	b2b3      	uxth	r3, r6
900156cc:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
900156d0:	9305      	str	r3, [sp, #20]
900156d2:	9a05      	ldr	r2, [sp, #20]
900156d4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
900156d8:	4413      	add	r3, r2
900156da:	b2ba      	uxth	r2, r7
900156dc:	4492      	add	sl, r2
900156de:	b29b      	uxth	r3, r3
900156e0:	fa1f fa8a 	uxth.w	sl, sl
900156e4:	fa0f f883 	sxth.w	r8, r3
900156e8:	fa0f f98a 	sxth.w	r9, sl
900156ec:	e9cd 2307 	strd	r2, r3, [sp, #28]
900156f0:	9b04      	ldr	r3, [sp, #16]
900156f2:	2b00      	cmp	r3, #0
900156f4:	d052      	beq.n	9001579c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
900156f6:	9903      	ldr	r1, [sp, #12]
900156f8:	4620      	mov	r0, r4
900156fa:	f7ff fd26 	bl	9001514a <_ZNK8touchgfx4Rect9intersectERKS0_>
900156fe:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90015702:	b1c0      	cbz	r0, 90015736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015704:	f9b4 e000 	ldrsh.w	lr, [r4]
90015708:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001570c:	4576      	cmp	r6, lr
9001570e:	dc22      	bgt.n	90015756 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90015710:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90015714:	44f4      	add	ip, lr
90015716:	fa0f fc8c 	sxth.w	ip, ip
9001571a:	45e0      	cmp	r8, ip
9001571c:	db1b      	blt.n	90015756 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001571e:	428f      	cmp	r7, r1
90015720:	fa1f fc81 	uxth.w	ip, r1
90015724:	88e1      	ldrh	r1, [r4, #6]
90015726:	dc0d      	bgt.n	90015744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90015728:	ebaa 0c0c 	sub.w	ip, sl, ip
9001572c:	f8a4 9002 	strh.w	r9, [r4, #2]
90015730:	eba1 010c 	sub.w	r1, r1, ip
90015734:	80e1      	strh	r1, [r4, #6]
90015736:	4628      	mov	r0, r5
90015738:	9904      	ldr	r1, [sp, #16]
9001573a:	3c08      	subs	r4, #8
9001573c:	4605      	mov	r5, r0
9001573e:	3901      	subs	r1, #1
90015740:	9104      	str	r1, [sp, #16]
90015742:	e7d3      	b.n	900156ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90015744:	4461      	add	r1, ip
90015746:	b209      	sxth	r1, r1
90015748:	4549      	cmp	r1, r9
9001574a:	dcf5      	bgt.n	90015738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001574c:	eba2 0c0c 	sub.w	ip, r2, ip
90015750:	f8a4 c006 	strh.w	ip, [r4, #6]
90015754:	e7ef      	b.n	90015736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015756:	428f      	cmp	r7, r1
90015758:	dcee      	bgt.n	90015738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001575a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001575e:	4461      	add	r1, ip
90015760:	b209      	sxth	r1, r1
90015762:	4589      	cmp	r9, r1
90015764:	dbe8      	blt.n	90015738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015766:	4576      	cmp	r6, lr
90015768:	fa1f fc8e 	uxth.w	ip, lr
9001576c:	88a1      	ldrh	r1, [r4, #4]
9001576e:	dc07      	bgt.n	90015780 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90015770:	eba3 0c0c 	sub.w	ip, r3, ip
90015774:	f8a4 8000 	strh.w	r8, [r4]
90015778:	eba1 010c 	sub.w	r1, r1, ip
9001577c:	80a1      	strh	r1, [r4, #4]
9001577e:	e7da      	b.n	90015736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015780:	4461      	add	r1, ip
90015782:	b209      	sxth	r1, r1
90015784:	4588      	cmp	r8, r1
90015786:	dbd7      	blt.n	90015738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015788:	9905      	ldr	r1, [sp, #20]
9001578a:	eba1 0c0c 	sub.w	ip, r1, ip
9001578e:	f8a4 c004 	strh.w	ip, [r4, #4]
90015792:	e7d0      	b.n	90015736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015794:	240218aa 	.word	0x240218aa
90015798:	240218a8 	.word	0x240218a8
9001579c:	2d00      	cmp	r5, #0
9001579e:	f000 816d 	beq.w	90015a7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900157a2:	9b06      	ldr	r3, [sp, #24]
900157a4:	445b      	add	r3, fp
900157a6:	461c      	mov	r4, r3
900157a8:	9b02      	ldr	r3, [sp, #8]
900157aa:	3301      	adds	r3, #1
900157ac:	f000 8166 	beq.w	90015a7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900157b0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
900157b4:	9803      	ldr	r0, [sp, #12]
900157b6:	4629      	mov	r1, r5
900157b8:	f7ff fd3a 	bl	90015230 <_ZNK8touchgfx4Rect8includesERKS0_>
900157bc:	b120      	cbz	r0, 900157c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
900157be:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900157c2:	9801      	ldr	r0, [sp, #4]
900157c4:	f7ff feb0 	bl	90015528 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900157c8:	9903      	ldr	r1, [sp, #12]
900157ca:	4628      	mov	r0, r5
900157cc:	f7ff fcbd 	bl	9001514a <_ZNK8touchgfx4Rect9intersectERKS0_>
900157d0:	2800      	cmp	r0, #0
900157d2:	f000 809c 	beq.w	9001590e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
900157d6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
900157da:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
900157de:	fa1f f189 	uxth.w	r1, r9
900157e2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900157e6:	9309      	str	r3, [sp, #36]	@ 0x24
900157e8:	eb01 0c03 	add.w	ip, r1, r3
900157ec:	b283      	uxth	r3, r0
900157ee:	4548      	cmp	r0, r9
900157f0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
900157f4:	fa1f fa8c 	uxth.w	sl, ip
900157f8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
900157fc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90015800:	eb03 050c 	add.w	r5, r3, ip
90015804:	b2ad      	uxth	r5, r5
90015806:	9505      	str	r5, [sp, #20]
90015808:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
9001580c:	9504      	str	r5, [sp, #16]
9001580e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
90015812:	f340 8099 	ble.w	90015948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90015816:	1a5b      	subs	r3, r3, r1
90015818:	4596      	cmp	lr, r2
9001581a:	fa0f f08a 	sxth.w	r0, sl
9001581e:	b29b      	uxth	r3, r3
90015820:	b21e      	sxth	r6, r3
90015822:	dd2e      	ble.n	90015882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90015824:	9f02      	ldr	r7, [sp, #8]
90015826:	fa1f fe8e 	uxth.w	lr, lr
9001582a:	b292      	uxth	r2, r2
9001582c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90015830:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90015834:	9f04      	ldr	r7, [sp, #16]
90015836:	ebae 0102 	sub.w	r1, lr, r2
9001583a:	44a6      	add	lr, r4
9001583c:	1a3f      	subs	r7, r7, r0
9001583e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
90015842:	b289      	uxth	r1, r1
90015844:	4402      	add	r2, r0
90015846:	fa0f fe8e 	sxth.w	lr, lr
9001584a:	b20d      	sxth	r5, r1
9001584c:	b212      	sxth	r2, r2
9001584e:	436f      	muls	r7, r5
90015850:	ebae 0202 	sub.w	r2, lr, r2
90015854:	4372      	muls	r2, r6
90015856:	4297      	cmp	r7, r2
90015858:	db09      	blt.n	9001586e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001585a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
9001585e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
90015862:	449c      	add	ip, r3
90015864:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90015868:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001586c:	e686      	b.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001586e:	4421      	add	r1, r4
90015870:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90015874:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90015878:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001587c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90015880:	e67c      	b.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015882:	9f04      	ldr	r7, [sp, #16]
90015884:	42b8      	cmp	r0, r7
90015886:	da27      	bge.n	900158d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90015888:	9902      	ldr	r1, [sp, #8]
9001588a:	1a3f      	subs	r7, r7, r0
9001588c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
90015890:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90015894:	eb05 010e 	add.w	r1, r5, lr
90015898:	fa1f f881 	uxth.w	r8, r1
9001589c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
900158a0:	4411      	add	r1, r2
900158a2:	fa0f f988 	sxth.w	r9, r8
900158a6:	eba2 020e 	sub.w	r2, r2, lr
900158aa:	eba1 0108 	sub.w	r1, r1, r8
900158ae:	4372      	muls	r2, r6
900158b0:	b289      	uxth	r1, r1
900158b2:	fa0f f881 	sxth.w	r8, r1
900158b6:	fb08 f707 	mul.w	r7, r8, r7
900158ba:	42ba      	cmp	r2, r7
900158bc:	dc06      	bgt.n	900158cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
900158be:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
900158c2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
900158c6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
900158ca:	e7ca      	b.n	90015862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
900158cc:	4429      	add	r1, r5
900158ce:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
900158d2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900158d6:	e651      	b.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900158d8:	9805      	ldr	r0, [sp, #20]
900158da:	2d06      	cmp	r5, #6
900158dc:	ebaa 0000 	sub.w	r0, sl, r0
900158e0:	b280      	uxth	r0, r0
900158e2:	fa0f fe80 	sxth.w	lr, r0
900158e6:	d817      	bhi.n	90015918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
900158e8:	9b04      	ldr	r3, [sp, #16]
900158ea:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
900158ee:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900158f2:	1c6b      	adds	r3, r5, #1
900158f4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
900158f8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
900158fc:	9b01      	ldr	r3, [sp, #4]
900158fe:	9801      	ldr	r0, [sp, #4]
90015900:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015904:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90015908:	805a      	strh	r2, [r3, #2]
9001590a:	809e      	strh	r6, [r3, #4]
9001590c:	80d9      	strh	r1, [r3, #6]
9001590e:	9b02      	ldr	r3, [sp, #8]
90015910:	3c08      	subs	r4, #8
90015912:	3b01      	subs	r3, #1
90015914:	9302      	str	r3, [sp, #8]
90015916:	e747      	b.n	900157a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90015918:	9a02      	ldr	r2, [sp, #8]
9001591a:	45b6      	cmp	lr, r6
9001591c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015920:	db0d      	blt.n	9001593e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90015922:	449c      	add	ip, r3
90015924:	445a      	add	r2, fp
90015926:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
9001592a:	fa1f fc8c 	uxth.w	ip, ip
9001592e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
90015932:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90015936:	448c      	add	ip, r1
90015938:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
9001593c:	e61e      	b.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001593e:	445a      	add	r2, fp
90015940:	4484      	add	ip, r0
90015942:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
90015946:	e78f      	b.n	90015868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015948:	fa1f f18e 	uxth.w	r1, lr
9001594c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90015950:	b293      	uxth	r3, r2
90015952:	4596      	cmp	lr, r2
90015954:	eb01 0806 	add.w	r8, r1, r6
90015958:	9306      	str	r3, [sp, #24]
9001595a:	fa1f f888 	uxth.w	r8, r8
9001595e:	9f06      	ldr	r7, [sp, #24]
90015960:	fa0f f388 	sxth.w	r3, r8
90015964:	9307      	str	r3, [sp, #28]
90015966:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
9001596a:	443b      	add	r3, r7
9001596c:	b29b      	uxth	r3, r3
9001596e:	9308      	str	r3, [sp, #32]
90015970:	da24      	bge.n	900159bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90015972:	9905      	ldr	r1, [sp, #20]
90015974:	eba3 0308 	sub.w	r3, r3, r8
90015978:	eba2 020e 	sub.w	r2, r2, lr
9001597c:	eba9 0000 	sub.w	r0, r9, r0
90015980:	ebaa 0401 	sub.w	r4, sl, r1
90015984:	b29b      	uxth	r3, r3
90015986:	b2a4      	uxth	r4, r4
90015988:	b219      	sxth	r1, r3
9001598a:	b225      	sxth	r5, r4
9001598c:	4348      	muls	r0, r1
9001598e:	436a      	muls	r2, r5
90015990:	4282      	cmp	r2, r0
90015992:	9a02      	ldr	r2, [sp, #8]
90015994:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015998:	445a      	add	r2, fp
9001599a:	dc06      	bgt.n	900159aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
9001599c:	9b07      	ldr	r3, [sp, #28]
9001599e:	44a4      	add	ip, r4
900159a0:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
900159a4:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
900159a8:	e75e      	b.n	90015868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900159aa:	9904      	ldr	r1, [sp, #16]
900159ac:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
900159b0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
900159b4:	4433      	add	r3, r6
900159b6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900159ba:	e5df      	b.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900159bc:	9f06      	ldr	r7, [sp, #24]
900159be:	9b04      	ldr	r3, [sp, #16]
900159c0:	1bc9      	subs	r1, r1, r7
900159c2:	fa0f f78a 	sxth.w	r7, sl
900159c6:	b289      	uxth	r1, r1
900159c8:	429f      	cmp	r7, r3
900159ca:	fa0f fe81 	sxth.w	lr, r1
900159ce:	dd23      	ble.n	90015a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
900159d0:	9a05      	ldr	r2, [sp, #20]
900159d2:	eba9 0000 	sub.w	r0, r9, r0
900159d6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
900159da:	ebaa 0202 	sub.w	r2, sl, r2
900159de:	9d07      	ldr	r5, [sp, #28]
900159e0:	fb0e f000 	mul.w	r0, lr, r0
900159e4:	b292      	uxth	r2, r2
900159e6:	eba5 0a03 	sub.w	sl, r5, r3
900159ea:	9b02      	ldr	r3, [sp, #8]
900159ec:	b214      	sxth	r4, r2
900159ee:	00db      	lsls	r3, r3, #3
900159f0:	fb04 fa0a 	mul.w	sl, r4, sl
900159f4:	445b      	add	r3, fp
900159f6:	4550      	cmp	r0, sl
900159f8:	db03      	blt.n	90015a02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
900159fa:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
900159fe:	4494      	add	ip, r2
90015a00:	e732      	b.n	90015868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015a02:	9a04      	ldr	r2, [sp, #16]
90015a04:	4431      	add	r1, r6
90015a06:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90015a0a:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90015a0e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
90015a12:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90015a16:	e75c      	b.n	900158d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90015a18:	9b08      	ldr	r3, [sp, #32]
90015a1a:	2d06      	cmp	r5, #6
90015a1c:	eba3 0308 	sub.w	r3, r3, r8
90015a20:	b29b      	uxth	r3, r3
90015a22:	b218      	sxth	r0, r3
90015a24:	d813      	bhi.n	90015a4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90015a26:	9b07      	ldr	r3, [sp, #28]
90015a28:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90015a2c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90015a30:	1c6b      	adds	r3, r5, #1
90015a32:	9901      	ldr	r1, [sp, #4]
90015a34:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90015a38:	9b01      	ldr	r3, [sp, #4]
90015a3a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90015a3e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015a42:	805a      	strh	r2, [r3, #2]
90015a44:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90015a46:	f8a3 e006 	strh.w	lr, [r3, #6]
90015a4a:	809a      	strh	r2, [r3, #4]
90015a4c:	e75f      	b.n	9001590e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90015a4e:	9c02      	ldr	r4, [sp, #8]
90015a50:	4570      	cmp	r0, lr
90015a52:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90015a56:	db0d      	blt.n	90015a74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90015a58:	4431      	add	r1, r6
90015a5a:	9b06      	ldr	r3, [sp, #24]
90015a5c:	445c      	add	r4, fp
90015a5e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90015a62:	b289      	uxth	r1, r1
90015a64:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90015a68:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90015a6c:	4419      	add	r1, r3
90015a6e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90015a72:	e583      	b.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015a74:	445c      	add	r4, fp
90015a76:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90015a7a:	e79b      	b.n	900159b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90015a7c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90015a80:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90015a84:	1e65      	subs	r5, r4, #1
90015a86:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90015a8a:	b2ad      	uxth	r5, r5
90015a8c:	42b5      	cmp	r5, r6
90015a8e:	d044      	beq.n	90015b1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90015a90:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90015a94:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90015a98:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90015a9c:	4282      	cmp	r2, r0
90015a9e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
90015aa2:	d11f      	bne.n	90015ae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015aa4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90015aa8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90015aac:	459c      	cmp	ip, r3
90015aae:	d119      	bne.n	90015ae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015ab0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90015ab4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90015ab8:	19d8      	adds	r0, r3, r7
90015aba:	b200      	sxth	r0, r0
90015abc:	4288      	cmp	r0, r1
90015abe:	d109      	bne.n	90015ad4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90015ac0:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90015ac4:	4413      	add	r3, r2
90015ac6:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90015aca:	4629      	mov	r1, r5
90015acc:	9801      	ldr	r0, [sp, #4]
90015ace:	f7ff fd2b 	bl	90015528 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015ad2:	e003      	b.n	90015adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015ad4:	4411      	add	r1, r2
90015ad6:	b209      	sxth	r1, r1
90015ad8:	42b9      	cmp	r1, r7
90015ada:	d0f3      	beq.n	90015ac4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90015adc:	3d01      	subs	r5, #1
90015ade:	3c08      	subs	r4, #8
90015ae0:	b2ad      	uxth	r5, r5
90015ae2:	e7d3      	b.n	90015a8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90015ae4:	42b9      	cmp	r1, r7
90015ae6:	d1f9      	bne.n	90015adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015ae8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90015aec:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90015af0:	4299      	cmp	r1, r3
90015af2:	d1f3      	bne.n	90015adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015af4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90015af8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90015afc:	181f      	adds	r7, r3, r0
90015afe:	b23f      	sxth	r7, r7
90015b00:	42ba      	cmp	r2, r7
90015b02:	d105      	bne.n	90015b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90015b04:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90015b08:	440b      	add	r3, r1
90015b0a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90015b0e:	e7dc      	b.n	90015aca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90015b10:	440a      	add	r2, r1
90015b12:	b212      	sxth	r2, r2
90015b14:	4290      	cmp	r0, r2
90015b16:	d1e1      	bne.n	90015adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015b18:	e7f6      	b.n	90015b08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90015b1a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90015b1e:	2e07      	cmp	r6, #7
90015b20:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90015b24:	d812      	bhi.n	90015b4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90015b26:	1c75      	adds	r5, r6, #1
90015b28:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90015b2c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90015b30:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90015b34:	9d01      	ldr	r5, [sp, #4]
90015b36:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90015b3a:	442c      	add	r4, r5
90015b3c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90015b40:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90015b44:	8061      	strh	r1, [r4, #2]
90015b46:	80a2      	strh	r2, [r4, #4]
90015b48:	80e3      	strh	r3, [r4, #6]
90015b4a:	e581      	b.n	90015650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90015b4c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90015b50:	3e01      	subs	r6, #1
90015b52:	445c      	add	r4, fp
90015b54:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90015b58:	f04f 37ff 	mov.w	r7, #4294967295
90015b5c:	2500      	movs	r5, #0
90015b5e:	9305      	str	r3, [sp, #20]
90015b60:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90015b64:	1e72      	subs	r2, r6, #1
90015b66:	9302      	str	r3, [sp, #8]
90015b68:	4691      	mov	r9, r2
90015b6a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90015b6e:	9304      	str	r3, [sp, #16]
90015b70:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90015b74:	f1b9 3fff 	cmp.w	r9, #4294967295
90015b78:	6818      	ldr	r0, [r3, #0]
90015b7a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90015b7e:	9207      	str	r2, [sp, #28]
90015b80:	bf16      	itet	ne
90015b82:	9905      	ldrne	r1, [sp, #20]
90015b84:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90015b88:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90015b8c:	9306      	str	r3, [sp, #24]
90015b8e:	f8be 1006 	ldrh.w	r1, [lr, #6]
90015b92:	f8be 8004 	ldrh.w	r8, [lr, #4]
90015b96:	fb18 f801 	smulbb	r8, r8, r1
90015b9a:	6859      	ldr	r1, [r3, #4]
90015b9c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90015ba0:	4671      	mov	r1, lr
90015ba2:	a80c      	add	r0, sp, #48	@ 0x30
90015ba4:	f7ff fb6a 	bl	9001527c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015ba8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90015bac:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90015bb0:	f04f 0c08 	mov.w	ip, #8
90015bb4:	9b04      	ldr	r3, [sp, #16]
90015bb6:	9a02      	ldr	r2, [sp, #8]
90015bb8:	fb10 f001 	smulbb	r0, r0, r1
90015bbc:	fb02 8803 	mla	r8, r2, r3, r8
90015bc0:	eba0 0108 	sub.w	r1, r0, r8
90015bc4:	fb90 f0fc 	sdiv	r0, r0, ip
90015bc8:	4288      	cmp	r0, r1
90015bca:	dc20      	bgt.n	90015c0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90015bcc:	4551      	cmp	r1, sl
90015bce:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90015bd2:	da03      	bge.n	90015bdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90015bd4:	b1d9      	cbz	r1, 90015c0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90015bd6:	468a      	mov	sl, r1
90015bd8:	464f      	mov	r7, r9
90015bda:	4635      	mov	r5, r6
90015bdc:	f109 39ff 	add.w	r9, r9, #4294967295
90015be0:	f119 0f02 	cmn.w	r9, #2
90015be4:	d1c6      	bne.n	90015b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90015be6:	4616      	mov	r6, r2
90015be8:	3201      	adds	r2, #1
90015bea:	f1a4 0408 	sub.w	r4, r4, #8
90015bee:	d1b7      	bne.n	90015b60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90015bf0:	9b01      	ldr	r3, [sp, #4]
90015bf2:	b2ac      	uxth	r4, r5
90015bf4:	00ed      	lsls	r5, r5, #3
90015bf6:	1958      	adds	r0, r3, r5
90015bf8:	1c7b      	adds	r3, r7, #1
90015bfa:	d10b      	bne.n	90015c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90015bfc:	4601      	mov	r1, r0
90015bfe:	9803      	ldr	r0, [sp, #12]
90015c00:	f7ff fb3c 	bl	9001527c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015c04:	4621      	mov	r1, r4
90015c06:	9801      	ldr	r0, [sp, #4]
90015c08:	f7ff fc8e 	bl	90015528 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015c0c:	e4b6      	b.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015c0e:	464f      	mov	r7, r9
90015c10:	4635      	mov	r5, r6
90015c12:	e7ed      	b.n	90015bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90015c14:	9b01      	ldr	r3, [sp, #4]
90015c16:	00ff      	lsls	r7, r7, #3
90015c18:	445d      	add	r5, fp
90015c1a:	19d9      	adds	r1, r3, r7
90015c1c:	445f      	add	r7, fp
90015c1e:	f7ff fb2d 	bl	9001527c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015c22:	9b03      	ldr	r3, [sp, #12]
90015c24:	cb03      	ldmia	r3!, {r0, r1}
90015c26:	9b03      	ldr	r3, [sp, #12]
90015c28:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90015c2c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90015c30:	f855 0fac 	ldr.w	r0, [r5, #172]!
90015c34:	6869      	ldr	r1, [r5, #4]
90015c36:	c303      	stmia	r3!, {r0, r1}
90015c38:	e7e4      	b.n	90015c04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90015c3a:	bf00      	nop

90015c3c <_ZN8touchgfx11Application15drawCachedAreasEv>:
90015c3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015c40:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90015c44:	b09b      	sub	sp, #108	@ 0x6c
90015c46:	4604      	mov	r4, r0
90015c48:	4630      	mov	r0, r6
90015c4a:	f7f9 fd44 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90015c4e:	4605      	mov	r5, r0
90015c50:	b948      	cbnz	r0, 90015c66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90015c52:	6823      	ldr	r3, [r4, #0]
90015c54:	4620      	mov	r0, r4
90015c56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90015c58:	e896 0006 	ldmia.w	r6, {r1, r2}
90015c5c:	4798      	blx	r3
90015c5e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90015c62:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90015c66:	4bc5      	ldr	r3, [pc, #788]	@ (90015f7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90015c68:	681b      	ldr	r3, [r3, #0]
90015c6a:	2b00      	cmp	r3, #0
90015c6c:	d03f      	beq.n	90015cee <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90015c6e:	4dc4      	ldr	r5, [pc, #784]	@ (90015f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90015c70:	4628      	mov	r0, r5
90015c72:	f7f9 fd30 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90015c76:	4606      	mov	r6, r0
90015c78:	2800      	cmp	r0, #0
90015c7a:	d138      	bne.n	90015cee <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90015c7c:	4628      	mov	r0, r5
90015c7e:	f7ff f98f 	bl	90014fa0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015c82:	6823      	ldr	r3, [r4, #0]
90015c84:	6829      	ldr	r1, [r5, #0]
90015c86:	4620      	mov	r0, r4
90015c88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90015c8a:	686a      	ldr	r2, [r5, #4]
90015c8c:	4798      	blx	r3
90015c8e:	802e      	strh	r6, [r5, #0]
90015c90:	806e      	strh	r6, [r5, #2]
90015c92:	80ae      	strh	r6, [r5, #4]
90015c94:	80ee      	strh	r6, [r5, #6]
90015c96:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
90015c9a:	4dba      	ldr	r5, [pc, #744]	@ (90015f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90015c9c:	4640      	mov	r0, r8
90015c9e:	f7ff fbe7 	bl	90015470 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015ca2:	882e      	ldrh	r6, [r5, #0]
90015ca4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
90015ca8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90015cac:	4633      	mov	r3, r6
90015cae:	42bb      	cmp	r3, r7
90015cb0:	d224      	bcs.n	90015cfc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90015cb2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
90015cb6:	2907      	cmp	r1, #7
90015cb8:	d816      	bhi.n	90015ce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90015cba:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90015cbe:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90015cc2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90015cc6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90015cca:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90015cce:	1c4a      	adds	r2, r1, #1
90015cd0:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
90015cd4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90015cd8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90015cdc:	f8a2 a002 	strh.w	sl, [r2, #2]
90015ce0:	f8a2 e004 	strh.w	lr, [r2, #4]
90015ce4:	f8a2 c006 	strh.w	ip, [r2, #6]
90015ce8:	3301      	adds	r3, #1
90015cea:	b29b      	uxth	r3, r3
90015cec:	e7df      	b.n	90015cae <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90015cee:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90015cf2:	2b00      	cmp	r3, #0
90015cf4:	d1cf      	bne.n	90015c96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90015cf6:	b01b      	add	sp, #108	@ 0x6c
90015cf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015cfc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90015d00:	42b3      	cmp	r3, r6
90015d02:	d90c      	bls.n	90015d1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90015d04:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90015d08:	6822      	ldr	r2, [r4, #0]
90015d0a:	3601      	adds	r6, #1
90015d0c:	4620      	mov	r0, r4
90015d0e:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90015d10:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90015d14:	b2b6      	uxth	r6, r6
90015d16:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90015d1a:	47b8      	blx	r7
90015d1c:	e7ee      	b.n	90015cfc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90015d1e:	4a9a      	ldr	r2, [pc, #616]	@ (90015f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90015d20:	6813      	ldr	r3, [r2, #0]
90015d22:	4691      	mov	r9, r2
90015d24:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
90015d28:	2b01      	cmp	r3, #1
90015d2a:	f040 80e0 	bne.w	90015eee <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
90015d2e:	8829      	ldrh	r1, [r5, #0]
90015d30:	2600      	movs	r6, #0
90015d32:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
90015d36:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90015d3a:	33ae      	adds	r3, #174	@ 0xae
90015d3c:	428f      	cmp	r7, r1
90015d3e:	f103 0308 	add.w	r3, r3, #8
90015d42:	dd0a      	ble.n	90015d5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90015d44:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90015d48:	3101      	adds	r1, #1
90015d4a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90015d4e:	4402      	add	r2, r0
90015d50:	b212      	sxth	r2, r2
90015d52:	4296      	cmp	r6, r2
90015d54:	bfb8      	it	lt
90015d56:	4616      	movlt	r6, r2
90015d58:	e7f0      	b.n	90015d3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90015d5a:	4b8c      	ldr	r3, [pc, #560]	@ (90015f8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90015d5c:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 90015f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90015d60:	881b      	ldrh	r3, [r3, #0]
90015d62:	2b0f      	cmp	r3, #15
90015d64:	bf8c      	ite	hi
90015d66:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90015d6a:	f04f 0b01 	movls.w	fp, #1
90015d6e:	2300      	movs	r3, #0
90015d70:	e9cd 3305 	strd	r3, r3, [sp, #20]
90015d74:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90015d78:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90015d7c:	4b82      	ldr	r3, [pc, #520]	@ (90015f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90015d7e:	4438      	add	r0, r7
90015d80:	b207      	sxth	r7, r0
90015d82:	6818      	ldr	r0, [r3, #0]
90015d84:	42b7      	cmp	r7, r6
90015d86:	6803      	ldr	r3, [r0, #0]
90015d88:	f280 8083 	bge.w	90015e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90015d8c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90015d90:	4798      	blx	r3
90015d92:	eb07 030b 	add.w	r3, r7, fp
90015d96:	4298      	cmp	r0, r3
90015d98:	da07      	bge.n	90015daa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90015d9a:	42b0      	cmp	r0, r6
90015d9c:	da05      	bge.n	90015daa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90015d9e:	4287      	cmp	r7, r0
90015da0:	dd6c      	ble.n	90015e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90015da2:	2f00      	cmp	r7, #0
90015da4:	dd6a      	ble.n	90015e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90015da6:	4630      	mov	r0, r6
90015da8:	e004      	b.n	90015db4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90015daa:	4287      	cmp	r7, r0
90015dac:	dcfb      	bgt.n	90015da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90015dae:	42b0      	cmp	r0, r6
90015db0:	bfa8      	it	ge
90015db2:	4630      	movge	r0, r6
90015db4:	4b76      	ldr	r3, [pc, #472]	@ (90015f90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90015db6:	1bc0      	subs	r0, r0, r7
90015db8:	2200      	movs	r2, #0
90015dba:	f8ad 7016 	strh.w	r7, [sp, #22]
90015dbe:	f9b3 3000 	ldrsh.w	r3, [r3]
90015dc2:	882f      	ldrh	r7, [r5, #0]
90015dc4:	f8ad 2014 	strh.w	r2, [sp, #20]
90015dc8:	f8ad 3018 	strh.w	r3, [sp, #24]
90015dcc:	f8ad 001a 	strh.w	r0, [sp, #26]
90015dd0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90015dd4:	42bb      	cmp	r3, r7
90015dd6:	d9cd      	bls.n	90015d74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90015dd8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90015ddc:	ab07      	add	r3, sp, #28
90015dde:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015de2:	6851      	ldr	r1, [r2, #4]
90015de4:	c303      	stmia	r3!, {r0, r1}
90015de6:	a905      	add	r1, sp, #20
90015de8:	a807      	add	r0, sp, #28
90015dea:	f7ff f9ae 	bl	9001514a <_ZNK8touchgfx4Rect9intersectERKS0_>
90015dee:	2800      	cmp	r0, #0
90015df0:	d04c      	beq.n	90015e8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90015df2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90015df6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90015dfa:	f8bd a020 	ldrh.w	sl, [sp, #32]
90015dfe:	4686      	mov	lr, r0
90015e00:	4290      	cmp	r0, r2
90015e02:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90015e06:	4450      	add	r0, sl
90015e08:	f8bd a018 	ldrh.w	sl, [sp, #24]
90015e0c:	bfb8      	it	lt
90015e0e:	4696      	movlt	lr, r2
90015e10:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90015e14:	4452      	add	r2, sl
90015e16:	b280      	uxth	r0, r0
90015e18:	4299      	cmp	r1, r3
90015e1a:	468c      	mov	ip, r1
90015e1c:	b292      	uxth	r2, r2
90015e1e:	9302      	str	r3, [sp, #8]
90015e20:	bfb8      	it	lt
90015e22:	469c      	movlt	ip, r3
90015e24:	b203      	sxth	r3, r0
90015e26:	fa0f fa82 	sxth.w	sl, r2
90015e2a:	f8ad e01c 	strh.w	lr, [sp, #28]
90015e2e:	f8ad c01e 	strh.w	ip, [sp, #30]
90015e32:	4553      	cmp	r3, sl
90015e34:	bfb8      	it	lt
90015e36:	4602      	movlt	r2, r0
90015e38:	9b02      	ldr	r3, [sp, #8]
90015e3a:	eba2 020e 	sub.w	r2, r2, lr
90015e3e:	f8ad 2020 	strh.w	r2, [sp, #32]
90015e42:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90015e46:	4411      	add	r1, r2
90015e48:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90015e4c:	4413      	add	r3, r2
90015e4e:	b289      	uxth	r1, r1
90015e50:	b29b      	uxth	r3, r3
90015e52:	b208      	sxth	r0, r1
90015e54:	b21a      	sxth	r2, r3
90015e56:	4290      	cmp	r0, r2
90015e58:	bfb8      	it	lt
90015e5a:	460b      	movlt	r3, r1
90015e5c:	eba3 030c 	sub.w	r3, r3, ip
90015e60:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90015e64:	a807      	add	r0, sp, #28
90015e66:	f7f9 fc36 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90015e6a:	b920      	cbnz	r0, 90015e76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90015e6c:	6823      	ldr	r3, [r4, #0]
90015e6e:	a907      	add	r1, sp, #28
90015e70:	4620      	mov	r0, r4
90015e72:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90015e74:	4798      	blx	r3
90015e76:	3701      	adds	r7, #1
90015e78:	b2bf      	uxth	r7, r7
90015e7a:	e7a9      	b.n	90015dd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90015e7c:	f8d9 0000 	ldr.w	r0, [r9]
90015e80:	2101      	movs	r1, #1
90015e82:	6803      	ldr	r3, [r0, #0]
90015e84:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90015e88:	4798      	blx	r3
90015e8a:	e773      	b.n	90015d74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90015e8c:	e9cd 0007 	strd	r0, r0, [sp, #28]
90015e90:	e7e8      	b.n	90015e64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90015e92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90015e94:	4798      	blx	r3
90015e96:	4b3f      	ldr	r3, [pc, #252]	@ (90015f94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90015e98:	781b      	ldrb	r3, [r3, #0]
90015e9a:	2b00      	cmp	r3, #0
90015e9c:	f43f af2b 	beq.w	90015cf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015ea0:	2300      	movs	r3, #0
90015ea2:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90015ea6:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90015eaa:	882b      	ldrh	r3, [r5, #0]
90015eac:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
90015eb0:	42ab      	cmp	r3, r5
90015eb2:	f4bf af20 	bcs.w	90015cf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015eb6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90015eba:	2907      	cmp	r1, #7
90015ebc:	d814      	bhi.n	90015ee8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90015ebe:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90015ec2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90015ec6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90015eca:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90015ece:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90015ed2:	1c4a      	adds	r2, r1, #1
90015ed4:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90015ed8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90015edc:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90015ee0:	f8a2 c002 	strh.w	ip, [r2, #2]
90015ee4:	8097      	strh	r7, [r2, #4]
90015ee6:	80d6      	strh	r6, [r2, #6]
90015ee8:	3301      	adds	r3, #1
90015eea:	b29b      	uxth	r3, r3
90015eec:	e7e0      	b.n	90015eb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90015eee:	2b02      	cmp	r3, #2
90015ef0:	f040 8133 	bne.w	9001615a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90015ef4:	4b28      	ldr	r3, [pc, #160]	@ (90015f98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90015ef6:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90015efa:	781b      	ldrb	r3, [r3, #0]
90015efc:	2b01      	cmp	r3, #1
90015efe:	f000 8098 	beq.w	90016032 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015f02:	882a      	ldrh	r2, [r5, #0]
90015f04:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
90015f08:	3201      	adds	r2, #1
90015f0a:	b292      	uxth	r2, r2
90015f0c:	2900      	cmp	r1, #0
90015f0e:	d0c2      	beq.n	90015e96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015f10:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
90015f14:	4694      	mov	ip, r2
90015f16:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
90015f1a:	f04f 0900 	mov.w	r9, #0
90015f1e:	441e      	add	r6, r3
90015f20:	b236      	sxth	r6, r6
90015f22:	fa1f f38c 	uxth.w	r3, ip
90015f26:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90015f2a:	4299      	cmp	r1, r3
90015f2c:	f240 80be 	bls.w	900160ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90015f30:	4427      	add	r7, r4
90015f32:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90015f36:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
90015f3a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
90015f3e:	4283      	cmp	r3, r0
90015f40:	f340 80a0 	ble.w	90016084 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90015f44:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
90015f48:	46e1      	mov	r9, ip
90015f4a:	4406      	add	r6, r0
90015f4c:	b236      	sxth	r6, r6
90015f4e:	429e      	cmp	r6, r3
90015f50:	bfa8      	it	ge
90015f52:	461e      	movge	r6, r3
90015f54:	f10c 0c01 	add.w	ip, ip, #1
90015f58:	e7e3      	b.n	90015f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
90015f5a:	d10a      	bne.n	90015f72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90015f5c:	4562      	cmp	r2, ip
90015f5e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
90015f62:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
90015f66:	bfb8      	it	lt
90015f68:	4662      	movlt	r2, ip
90015f6a:	4288      	cmp	r0, r1
90015f6c:	bfb8      	it	lt
90015f6e:	461f      	movlt	r7, r3
90015f70:	e086      	b.n	90016080 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90015f72:	428a      	cmp	r2, r1
90015f74:	bfb8      	it	lt
90015f76:	460a      	movlt	r2, r1
90015f78:	e082      	b.n	90016080 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90015f7a:	bf00      	nop
90015f7c:	240218f4 	.word	0x240218f4
90015f80:	24021900 	.word	0x24021900
90015f84:	24000088 	.word	0x24000088
90015f88:	240218b4 	.word	0x240218b4
90015f8c:	240218aa 	.word	0x240218aa
90015f90:	240218a8 	.word	0x240218a8
90015f94:	240218b2 	.word	0x240218b2
90015f98:	240218ac 	.word	0x240218ac
90015f9c:	19a1      	adds	r1, r4, r6
90015f9e:	ab07      	add	r3, sp, #28
90015fa0:	f851 0fac 	ldr.w	r0, [r1, #172]!
90015fa4:	6849      	ldr	r1, [r1, #4]
90015fa6:	c303      	stmia	r3!, {r0, r1}
90015fa8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90015fac:	a807      	add	r0, sp, #28
90015fae:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015fb2:	2b13      	cmp	r3, #19
90015fb4:	440b      	add	r3, r1
90015fb6:	bfd8      	it	le
90015fb8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90015fbc:	1a9b      	subs	r3, r3, r2
90015fbe:	f8ad 201c 	strh.w	r2, [sp, #28]
90015fc2:	f8ad 3020 	strh.w	r3, [sp, #32]
90015fc6:	f7ff f805 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90015fca:	a807      	add	r0, sp, #28
90015fcc:	f7f9 fb83 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90015fd0:	bb78      	cbnz	r0, 90016032 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015fd2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
90015fd6:	4426      	add	r6, r4
90015fd8:	f8d9 0000 	ldr.w	r0, [r9]
90015fdc:	f1bc 0f14 	cmp.w	ip, #20
90015fe0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90015fe4:	f8d0 e000 	ldr.w	lr, [r0]
90015fe8:	bfa8      	it	ge
90015fea:	f04f 0c14 	movge.w	ip, #20
90015fee:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90015ff2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015ff6:	fa1f fc8c 	uxth.w	ip, ip
90015ffa:	f8cd c000 	str.w	ip, [sp]
90015ffe:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
90016002:	47d8      	blx	fp
90016004:	4683      	mov	fp, r0
90016006:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001600a:	a807      	add	r0, sp, #28
9001600c:	f7fe ffc8 	bl	90014fa0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90016010:	6823      	ldr	r3, [r4, #0]
90016012:	4620      	mov	r0, r4
90016014:	a907      	add	r1, sp, #28
90016016:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016018:	4798      	blx	r3
9001601a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
9001601e:	eba0 000b 	sub.w	r0, r0, fp
90016022:	b200      	sxth	r0, r0
90016024:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
90016028:	b918      	cbnz	r0, 90016032 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001602a:	b2b9      	uxth	r1, r7
9001602c:	4650      	mov	r0, sl
9001602e:	f7ff fa7b 	bl	90015528 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016032:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
90016036:	f1bb 0f00 	cmp.w	fp, #0
9001603a:	f43f af2c 	beq.w	90015e96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001603e:	882b      	ldrh	r3, [r5, #0]
90016040:	2700      	movs	r7, #0
90016042:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
90016046:	3301      	adds	r3, #1
90016048:	b29b      	uxth	r3, r3
9001604a:	b299      	uxth	r1, r3
9001604c:	00fe      	lsls	r6, r7, #3
9001604e:	458b      	cmp	fp, r1
90016050:	d9a4      	bls.n	90015f9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90016052:	4426      	add	r6, r4
90016054:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90016058:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
9001605c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
90016060:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
90016064:	4408      	add	r0, r1
90016066:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
9001606a:	4461      	add	r1, ip
9001606c:	b200      	sxth	r0, r0
9001606e:	b209      	sxth	r1, r1
90016070:	4288      	cmp	r0, r1
90016072:	f6bf af72 	bge.w	90015f5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90016076:	4584      	cmp	ip, r0
90016078:	4662      	mov	r2, ip
9001607a:	461f      	mov	r7, r3
9001607c:	bfb8      	it	lt
9001607e:	4602      	movlt	r2, r0
90016080:	3301      	adds	r3, #1
90016082:	e7e2      	b.n	9001604a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90016084:	d10e      	bne.n	900160a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90016086:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
9001608a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
9001608e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
90016092:	4473      	add	r3, lr
90016094:	b21b      	sxth	r3, r3
90016096:	429e      	cmp	r6, r3
90016098:	bfa8      	it	ge
9001609a:	461e      	movge	r6, r3
9001609c:	4287      	cmp	r7, r0
9001609e:	bfb8      	it	lt
900160a0:	46e1      	movlt	r9, ip
900160a2:	e757      	b.n	90015f54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
900160a4:	4286      	cmp	r6, r0
900160a6:	bfa8      	it	ge
900160a8:	4606      	movge	r6, r0
900160aa:	e753      	b.n	90015f54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
900160ac:	eb0a 0007 	add.w	r0, sl, r7
900160b0:	4427      	add	r7, r4
900160b2:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
900160b6:	f1bb 0f13 	cmp.w	fp, #19
900160ba:	bfdc      	itt	le
900160bc:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
900160c0:	445e      	addle	r6, fp
900160c2:	e9cd 2102 	strd	r2, r1, [sp, #8]
900160c6:	bfd8      	it	le
900160c8:	b236      	sxthle	r6, r6
900160ca:	f7f9 fb04 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
900160ce:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
900160d2:	2800      	cmp	r0, #0
900160d4:	f47f af1a 	bne.w	90015f0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
900160d8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
900160dc:	fa1f fb8b 	uxth.w	fp, fp
900160e0:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
900160e4:	1ab6      	subs	r6, r6, r2
900160e6:	4829      	ldr	r0, [pc, #164]	@ (9001618c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
900160e8:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
900160ec:	2e14      	cmp	r6, #20
900160ee:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
900160f2:	6800      	ldr	r0, [r0, #0]
900160f4:	bfa8      	it	ge
900160f6:	2614      	movge	r6, #20
900160f8:	f8ad 101c 	strh.w	r1, [sp, #28]
900160fc:	f8ad 201e 	strh.w	r2, [sp, #30]
90016100:	b289      	uxth	r1, r1
90016102:	f8ad 3020 	strh.w	r3, [sp, #32]
90016106:	b2b6      	uxth	r6, r6
90016108:	f8d0 c000 	ldr.w	ip, [r0]
9001610c:	b292      	uxth	r2, r2
9001610e:	455e      	cmp	r6, fp
90016110:	bf94      	ite	ls
90016112:	9600      	strls	r6, [sp, #0]
90016114:	f8cd b000 	strhi.w	fp, [sp]
90016118:	b29b      	uxth	r3, r3
9001611a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
9001611e:	47b0      	blx	r6
90016120:	6823      	ldr	r3, [r4, #0]
90016122:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
90016126:	a907      	add	r1, sp, #28
90016128:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001612a:	4620      	mov	r0, r4
9001612c:	4798      	blx	r3
9001612e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
90016132:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
90016136:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
9001613a:	1a5b      	subs	r3, r3, r1
9001613c:	440a      	add	r2, r1
9001613e:	b21b      	sxth	r3, r3
90016140:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
90016144:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
90016148:	2b00      	cmp	r3, #0
9001614a:	f47f aeda 	bne.w	90015f02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001614e:	fa1f f189 	uxth.w	r1, r9
90016152:	4650      	mov	r0, sl
90016154:	f7ff f9e8 	bl	90015528 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016158:	e6d3      	b.n	90015f02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001615a:	882e      	ldrh	r6, [r5, #0]
9001615c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016160:	42b3      	cmp	r3, r6
90016162:	f67f ae98 	bls.w	90015e96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90016166:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
9001616a:	ab07      	add	r3, sp, #28
9001616c:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016170:	6851      	ldr	r1, [r2, #4]
90016172:	c303      	stmia	r3!, {r0, r1}
90016174:	a807      	add	r0, sp, #28
90016176:	f7f9 faae 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001617a:	b920      	cbnz	r0, 90016186 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
9001617c:	6823      	ldr	r3, [r4, #0]
9001617e:	a907      	add	r1, sp, #28
90016180:	4620      	mov	r0, r4
90016182:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016184:	4798      	blx	r3
90016186:	3601      	adds	r6, #1
90016188:	b2b6      	uxth	r6, r6
9001618a:	e7e7      	b.n	9001615c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
9001618c:	240218b4 	.word	0x240218b4

90016190 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90016190:	4b03      	ldr	r3, [pc, #12]	@ (900161a0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90016192:	2200      	movs	r2, #0
90016194:	801a      	strh	r2, [r3, #0]
90016196:	805a      	strh	r2, [r3, #2]
90016198:	809a      	strh	r2, [r3, #4]
9001619a:	80da      	strh	r2, [r3, #6]
9001619c:	4770      	bx	lr
9001619e:	bf00      	nop
900161a0:	24021900 	.word	0x24021900

900161a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
900161a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900161a8:	b09d      	sub	sp, #116	@ 0x74
900161aa:	4606      	mov	r6, r0
900161ac:	4614      	mov	r4, r2
900161ae:	468a      	mov	sl, r1
900161b0:	a803      	add	r0, sp, #12
900161b2:	461d      	mov	r5, r3
900161b4:	f001 f99f 	bl	900174f6 <_ZN8touchgfx12TextProviderC1Ev>
900161b8:	6833      	ldr	r3, [r6, #0]
900161ba:	4630      	mov	r0, r6
900161bc:	f242 0b0b 	movw	fp, #8203	@ 0x200b
900161c0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900161c2:	4798      	blx	r3
900161c4:	6833      	ldr	r3, [r6, #0]
900161c6:	4607      	mov	r7, r0
900161c8:	4630      	mov	r0, r6
900161ca:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900161cc:	4798      	blx	r3
900161ce:	462a      	mov	r2, r5
900161d0:	2500      	movs	r5, #0
900161d2:	4621      	mov	r1, r4
900161d4:	9000      	str	r0, [sp, #0]
900161d6:	463b      	mov	r3, r7
900161d8:	462c      	mov	r4, r5
900161da:	46a9      	mov	r9, r5
900161dc:	46a8      	mov	r8, r5
900161de:	a803      	add	r0, sp, #12
900161e0:	f001 f9dc 	bl	9001759c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900161e4:	2300      	movs	r3, #0
900161e6:	9302      	str	r3, [sp, #8]
900161e8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900161ec:	429c      	cmp	r4, r3
900161ee:	d002      	beq.n	900161f6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
900161f0:	455c      	cmp	r4, fp
900161f2:	bf18      	it	ne
900161f4:	4625      	movne	r5, r4
900161f6:	ab02      	add	r3, sp, #8
900161f8:	4632      	mov	r2, r6
900161fa:	4651      	mov	r1, sl
900161fc:	a803      	add	r0, sp, #12
900161fe:	f001 fcc1 	bl	90017b84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016202:	4604      	mov	r4, r0
90016204:	b108      	cbz	r0, 9001620a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90016206:	280a      	cmp	r0, #10
90016208:	d10a      	bne.n	90016220 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001620a:	45c1      	cmp	r9, r8
9001620c:	bf38      	it	cc
9001620e:	46c1      	movcc	r9, r8
90016210:	f04f 0800 	mov.w	r8, #0
90016214:	2c00      	cmp	r4, #0
90016216:	d1e5      	bne.n	900161e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90016218:	4648      	mov	r0, r9
9001621a:	b01d      	add	sp, #116	@ 0x74
9001621c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016220:	9a02      	ldr	r2, [sp, #8]
90016222:	2a00      	cmp	r2, #0
90016224:	d0de      	beq.n	900161e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90016226:	7b57      	ldrb	r7, [r2, #13]
90016228:	4629      	mov	r1, r5
9001622a:	6833      	ldr	r3, [r6, #0]
9001622c:	007f      	lsls	r7, r7, #1
9001622e:	8894      	ldrh	r4, [r2, #4]
90016230:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016232:	f407 7080 	and.w	r0, r7, #256	@ 0x100
90016236:	7a97      	ldrb	r7, [r2, #10]
90016238:	4307      	orrs	r7, r0
9001623a:	4630      	mov	r0, r6
9001623c:	4798      	blx	r3
9001623e:	4438      	add	r0, r7
90016240:	4480      	add	r8, r0
90016242:	fa1f f888 	uxth.w	r8, r8
90016246:	e7e5      	b.n	90016214 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90016248 <_ZNK8touchgfx4Font12getCharWidthEt>:
90016248:	b508      	push	{r3, lr}
9001624a:	6803      	ldr	r3, [r0, #0]
9001624c:	68db      	ldr	r3, [r3, #12]
9001624e:	4798      	blx	r3
90016250:	b128      	cbz	r0, 9001625e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90016252:	7b43      	ldrb	r3, [r0, #13]
90016254:	7a80      	ldrb	r0, [r0, #10]
90016256:	005b      	lsls	r3, r3, #1
90016258:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001625c:	4318      	orrs	r0, r3
9001625e:	bd08      	pop	{r3, pc}

90016260 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90016260:	b40e      	push	{r1, r2, r3}
90016262:	b5f0      	push	{r4, r5, r6, r7, lr}
90016264:	b09e      	sub	sp, #120	@ 0x78
90016266:	4605      	mov	r5, r0
90016268:	ab23      	add	r3, sp, #140	@ 0x8c
9001626a:	a805      	add	r0, sp, #20
9001626c:	f853 4b04 	ldr.w	r4, [r3], #4
90016270:	9303      	str	r3, [sp, #12]
90016272:	f001 f940 	bl	900174f6 <_ZN8touchgfx12TextProviderC1Ev>
90016276:	682b      	ldr	r3, [r5, #0]
90016278:	4628      	mov	r0, r5
9001627a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001627c:	4798      	blx	r3
9001627e:	682b      	ldr	r3, [r5, #0]
90016280:	4606      	mov	r6, r0
90016282:	4628      	mov	r0, r5
90016284:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016286:	4798      	blx	r3
90016288:	4633      	mov	r3, r6
9001628a:	4621      	mov	r1, r4
9001628c:	ae1e      	add	r6, sp, #120	@ 0x78
9001628e:	2400      	movs	r4, #0
90016290:	9000      	str	r0, [sp, #0]
90016292:	9a03      	ldr	r2, [sp, #12]
90016294:	a805      	add	r0, sp, #20
90016296:	f001 f981 	bl	9001759c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001629a:	f846 4d68 	str.w	r4, [r6, #-104]!
9001629e:	462a      	mov	r2, r5
900162a0:	4633      	mov	r3, r6
900162a2:	4621      	mov	r1, r4
900162a4:	a805      	add	r0, sp, #20
900162a6:	f001 fc6d 	bl	90017b84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900162aa:	b300      	cbz	r0, 900162ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
900162ac:	280a      	cmp	r0, #10
900162ae:	d01a      	beq.n	900162e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900162b0:	9f04      	ldr	r7, [sp, #16]
900162b2:	b1c7      	cbz	r7, 900162e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900162b4:	7b78      	ldrb	r0, [r7, #13]
900162b6:	7a3b      	ldrb	r3, [r7, #8]
900162b8:	00c1      	lsls	r1, r0, #3
900162ba:	88ea      	ldrh	r2, [r5, #6]
900162bc:	f401 7180 	and.w	r1, r1, #256	@ 0x100
900162c0:	4319      	orrs	r1, r3
900162c2:	0643      	lsls	r3, r0, #25
900162c4:	ea4f 1000 	mov.w	r0, r0, lsl #4
900162c8:	bf48      	it	mi
900162ca:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
900162ce:	f400 7080 	and.w	r0, r0, #256	@ 0x100
900162d2:	bf48      	it	mi
900162d4:	b219      	sxthmi	r1, r3
900162d6:	79fb      	ldrb	r3, [r7, #7]
900162d8:	4303      	orrs	r3, r0
900162da:	4413      	add	r3, r2
900162dc:	1a5b      	subs	r3, r3, r1
900162de:	b21b      	sxth	r3, r3
900162e0:	429c      	cmp	r4, r3
900162e2:	bfb8      	it	lt
900162e4:	461c      	movlt	r4, r3
900162e6:	4633      	mov	r3, r6
900162e8:	462a      	mov	r2, r5
900162ea:	2100      	movs	r1, #0
900162ec:	e7da      	b.n	900162a4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
900162ee:	b2a0      	uxth	r0, r4
900162f0:	b01e      	add	sp, #120	@ 0x78
900162f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900162f6:	b003      	add	sp, #12
900162f8:	4770      	bx	lr

900162fa <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
900162fa:	7a43      	ldrb	r3, [r0, #9]
900162fc:	8880      	ldrh	r0, [r0, #4]
900162fe:	4418      	add	r0, r3
90016300:	b280      	uxth	r0, r0
90016302:	4770      	bx	lr

90016304 <_ZNK8touchgfx4Font13getFontHeightEv>:
90016304:	6803      	ldr	r3, [r0, #0]
90016306:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90016308:	4718      	bx	r3

9001630a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001630a:	b40e      	push	{r1, r2, r3}
9001630c:	b570      	push	{r4, r5, r6, lr}
9001630e:	b09d      	sub	sp, #116	@ 0x74
90016310:	4604      	mov	r4, r0
90016312:	ab21      	add	r3, sp, #132	@ 0x84
90016314:	a803      	add	r0, sp, #12
90016316:	f853 5b04 	ldr.w	r5, [r3], #4
9001631a:	9302      	str	r3, [sp, #8]
9001631c:	f001 f8eb 	bl	900174f6 <_ZN8touchgfx12TextProviderC1Ev>
90016320:	6823      	ldr	r3, [r4, #0]
90016322:	4620      	mov	r0, r4
90016324:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016326:	4798      	blx	r3
90016328:	6823      	ldr	r3, [r4, #0]
9001632a:	4606      	mov	r6, r0
9001632c:	4620      	mov	r0, r4
9001632e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016330:	2401      	movs	r4, #1
90016332:	4798      	blx	r3
90016334:	4633      	mov	r3, r6
90016336:	9000      	str	r0, [sp, #0]
90016338:	4629      	mov	r1, r5
9001633a:	9a02      	ldr	r2, [sp, #8]
9001633c:	a803      	add	r0, sp, #12
9001633e:	f001 f92d 	bl	9001759c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016342:	a803      	add	r0, sp, #12
90016344:	f001 fcea 	bl	90017d1c <_ZN8touchgfx12TextProvider11getNextCharEv>
90016348:	b2a3      	uxth	r3, r4
9001634a:	b138      	cbz	r0, 9001635c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001634c:	280a      	cmp	r0, #10
9001634e:	a803      	add	r0, sp, #12
90016350:	bf04      	itt	eq
90016352:	3301      	addeq	r3, #1
90016354:	b21c      	sxtheq	r4, r3
90016356:	f001 fce1 	bl	90017d1c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001635a:	e7f5      	b.n	90016348 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001635c:	4618      	mov	r0, r3
9001635e:	b01d      	add	sp, #116	@ 0x74
90016360:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016364:	b003      	add	sp, #12
90016366:	4770      	bx	lr

90016368 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90016368:	b40e      	push	{r1, r2, r3}
9001636a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001636c:	b09e      	sub	sp, #120	@ 0x78
9001636e:	4604      	mov	r4, r0
90016370:	ab23      	add	r3, sp, #140	@ 0x8c
90016372:	a805      	add	r0, sp, #20
90016374:	f853 5b04 	ldr.w	r5, [r3], #4
90016378:	9303      	str	r3, [sp, #12]
9001637a:	f001 f8bc 	bl	900174f6 <_ZN8touchgfx12TextProviderC1Ev>
9001637e:	6823      	ldr	r3, [r4, #0]
90016380:	4620      	mov	r0, r4
90016382:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016384:	4798      	blx	r3
90016386:	6823      	ldr	r3, [r4, #0]
90016388:	4606      	mov	r6, r0
9001638a:	4620      	mov	r0, r4
9001638c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001638e:	4798      	blx	r3
90016390:	4633      	mov	r3, r6
90016392:	4629      	mov	r1, r5
90016394:	9000      	str	r0, [sp, #0]
90016396:	9a03      	ldr	r2, [sp, #12]
90016398:	a805      	add	r0, sp, #20
9001639a:	f001 f8ff 	bl	9001759c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001639e:	ad1e      	add	r5, sp, #120	@ 0x78
900163a0:	2100      	movs	r1, #0
900163a2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
900163a6:	4622      	mov	r2, r4
900163a8:	a805      	add	r0, sp, #20
900163aa:	f845 1d68 	str.w	r1, [r5, #-104]!
900163ae:	462b      	mov	r3, r5
900163b0:	f001 fbe8 	bl	90017b84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900163b4:	b1d8      	cbz	r0, 900163ee <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900163b6:	280a      	cmp	r0, #10
900163b8:	d012      	beq.n	900163e0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900163ba:	9804      	ldr	r0, [sp, #16]
900163bc:	b180      	cbz	r0, 900163e0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900163be:	7b47      	ldrb	r7, [r0, #13]
900163c0:	88e2      	ldrh	r2, [r4, #6]
900163c2:	00fb      	lsls	r3, r7, #3
900163c4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900163c8:	7a03      	ldrb	r3, [r0, #8]
900163ca:	430b      	orrs	r3, r1
900163cc:	0679      	lsls	r1, r7, #25
900163ce:	bf44      	itt	mi
900163d0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900163d4:	b21b      	sxthmi	r3, r3
900163d6:	1ad3      	subs	r3, r2, r3
900163d8:	b21b      	sxth	r3, r3
900163da:	429e      	cmp	r6, r3
900163dc:	bfa8      	it	ge
900163de:	461e      	movge	r6, r3
900163e0:	462b      	mov	r3, r5
900163e2:	4622      	mov	r2, r4
900163e4:	2100      	movs	r1, #0
900163e6:	a805      	add	r0, sp, #20
900163e8:	f001 fbcc 	bl	90017b84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900163ec:	e7e2      	b.n	900163b4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
900163ee:	4630      	mov	r0, r6
900163f0:	b01e      	add	sp, #120	@ 0x78
900163f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900163f6:	b003      	add	sp, #12
900163f8:	4770      	bx	lr

900163fa <_ZNK8touchgfx8Drawable10invalidateEv>:
900163fa:	b513      	push	{r0, r1, r4, lr}
900163fc:	6803      	ldr	r3, [r0, #0]
900163fe:	2400      	movs	r4, #0
90016400:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90016404:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016408:	f8ad 1004 	strh.w	r1, [sp, #4]
9001640c:	4669      	mov	r1, sp
9001640e:	691b      	ldr	r3, [r3, #16]
90016410:	9400      	str	r4, [sp, #0]
90016412:	f8ad 2006 	strh.w	r2, [sp, #6]
90016416:	4798      	blx	r3
90016418:	b002      	add	sp, #8
9001641a:	bd10      	pop	{r4, pc}

9001641c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001641c:	b538      	push	{r3, r4, r5, lr}
9001641e:	680b      	ldr	r3, [r1, #0]
90016420:	460c      	mov	r4, r1
90016422:	4605      	mov	r5, r0
90016424:	68db      	ldr	r3, [r3, #12]
90016426:	4798      	blx	r3
90016428:	6823      	ldr	r3, [r4, #0]
9001642a:	4620      	mov	r0, r4
9001642c:	4629      	mov	r1, r5
9001642e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016430:	4798      	blx	r3
90016432:	4628      	mov	r0, r5
90016434:	bd38      	pop	{r3, r4, r5, pc}

90016436 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90016436:	b410      	push	{r4}
90016438:	880a      	ldrh	r2, [r1, #0]
9001643a:	8884      	ldrh	r4, [r0, #4]
9001643c:	4422      	add	r2, r4
9001643e:	800a      	strh	r2, [r1, #0]
90016440:	884a      	ldrh	r2, [r1, #2]
90016442:	88c4      	ldrh	r4, [r0, #6]
90016444:	4422      	add	r2, r4
90016446:	804a      	strh	r2, [r1, #2]
90016448:	6940      	ldr	r0, [r0, #20]
9001644a:	b120      	cbz	r0, 90016456 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001644c:	6803      	ldr	r3, [r0, #0]
9001644e:	f85d 4b04 	ldr.w	r4, [sp], #4
90016452:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016454:	4718      	bx	r3
90016456:	f85d 4b04 	ldr.w	r4, [sp], #4
9001645a:	4770      	bx	lr

9001645c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001645c:	b570      	push	{r4, r5, r6, lr}
9001645e:	8882      	ldrh	r2, [r0, #4]
90016460:	460c      	mov	r4, r1
90016462:	880b      	ldrh	r3, [r1, #0]
90016464:	4605      	mov	r5, r0
90016466:	4413      	add	r3, r2
90016468:	800b      	strh	r3, [r1, #0]
9001646a:	884b      	ldrh	r3, [r1, #2]
9001646c:	88c2      	ldrh	r2, [r0, #6]
9001646e:	4413      	add	r3, r2
90016470:	804b      	strh	r3, [r1, #2]
90016472:	1d01      	adds	r1, r0, #4
90016474:	4620      	mov	r0, r4
90016476:	f7f9 f8eb 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9001647a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001647e:	2b00      	cmp	r3, #0
90016480:	dd0b      	ble.n	9001649a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90016482:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90016486:	2b00      	cmp	r3, #0
90016488:	dd07      	ble.n	9001649a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001648a:	6968      	ldr	r0, [r5, #20]
9001648c:	b128      	cbz	r0, 9001649a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001648e:	6803      	ldr	r3, [r0, #0]
90016490:	4621      	mov	r1, r4
90016492:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90016494:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016498:	4718      	bx	r3
9001649a:	bd70      	pop	{r4, r5, r6, pc}

9001649c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001649c:	b570      	push	{r4, r5, r6, lr}
9001649e:	8882      	ldrh	r2, [r0, #4]
900164a0:	460c      	mov	r4, r1
900164a2:	880b      	ldrh	r3, [r1, #0]
900164a4:	4605      	mov	r5, r0
900164a6:	4413      	add	r3, r2
900164a8:	800b      	strh	r3, [r1, #0]
900164aa:	884b      	ldrh	r3, [r1, #2]
900164ac:	88c2      	ldrh	r2, [r0, #6]
900164ae:	4413      	add	r3, r2
900164b0:	804b      	strh	r3, [r1, #2]
900164b2:	1d01      	adds	r1, r0, #4
900164b4:	4620      	mov	r0, r4
900164b6:	f7f9 f8cb 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
900164ba:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900164be:	2b00      	cmp	r3, #0
900164c0:	dd19      	ble.n	900164f6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900164c2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900164c6:	2b00      	cmp	r3, #0
900164c8:	dd15      	ble.n	900164f6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900164ca:	6968      	ldr	r0, [r5, #20]
900164cc:	b128      	cbz	r0, 900164da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
900164ce:	6803      	ldr	r3, [r0, #0]
900164d0:	4621      	mov	r1, r4
900164d2:	691b      	ldr	r3, [r3, #16]
900164d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900164d8:	4718      	bx	r3
900164da:	4b07      	ldr	r3, [pc, #28]	@ (900164f8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
900164dc:	681b      	ldr	r3, [r3, #0]
900164de:	3304      	adds	r3, #4
900164e0:	429d      	cmp	r5, r3
900164e2:	d108      	bne.n	900164f6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900164e4:	f7fe ff10 	bl	90015308 <_ZN8touchgfx11Application11getInstanceEv>
900164e8:	6803      	ldr	r3, [r0, #0]
900164ea:	6821      	ldr	r1, [r4, #0]
900164ec:	6862      	ldr	r2, [r4, #4]
900164ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900164f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900164f4:	4718      	bx	r3
900164f6:	bd70      	pop	{r4, r5, r6, pc}
900164f8:	240218f8 	.word	0x240218f8

900164fc <_ZN8touchgfx8Drawable12moveRelativeEss>:
900164fc:	b570      	push	{r4, r5, r6, lr}
900164fe:	4604      	mov	r4, r0
90016500:	4616      	mov	r6, r2
90016502:	460d      	mov	r5, r1
90016504:	b901      	cbnz	r1, 90016508 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90016506:	b192      	cbz	r2, 9001652e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90016508:	6823      	ldr	r3, [r4, #0]
9001650a:	4620      	mov	r0, r4
9001650c:	699b      	ldr	r3, [r3, #24]
9001650e:	4798      	blx	r3
90016510:	88e2      	ldrh	r2, [r4, #6]
90016512:	88a1      	ldrh	r1, [r4, #4]
90016514:	4620      	mov	r0, r4
90016516:	4432      	add	r2, r6
90016518:	4429      	add	r1, r5
9001651a:	b212      	sxth	r2, r2
9001651c:	b209      	sxth	r1, r1
9001651e:	f7f9 fab1 	bl	9000fa84 <_ZN8touchgfx8Drawable5setXYEss>
90016522:	6823      	ldr	r3, [r4, #0]
90016524:	4620      	mov	r0, r4
90016526:	699b      	ldr	r3, [r3, #24]
90016528:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001652c:	4718      	bx	r3
9001652e:	bd70      	pop	{r4, r5, r6, pc}

90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90016530:	b510      	push	{r4, lr}
90016532:	2300      	movs	r3, #0
90016534:	4604      	mov	r4, r0
90016536:	4608      	mov	r0, r1
90016538:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001653c:	8023      	strh	r3, [r4, #0]
9001653e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016542:	8063      	strh	r3, [r4, #2]
90016544:	6803      	ldr	r3, [r0, #0]
90016546:	80a1      	strh	r1, [r4, #4]
90016548:	4621      	mov	r1, r4
9001654a:	80e2      	strh	r2, [r4, #6]
9001654c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001654e:	4798      	blx	r3
90016550:	4620      	mov	r0, r4
90016552:	bd10      	pop	{r4, pc}

90016554 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
90016554:	4770      	bx	lr

90016556 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
90016556:	b510      	push	{r4, lr}
90016558:	4604      	mov	r4, r0
9001655a:	211c      	movs	r1, #28
9001655c:	f011 fb94 	bl	90027c88 <_ZdlPvj>
90016560:	4620      	mov	r0, r4
90016562:	bd10      	pop	{r4, pc}

90016564 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
90016564:	4a04      	ldr	r2, [pc, #16]	@ (90016578 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
90016566:	6002      	str	r2, [r0, #0]
90016568:	2200      	movs	r2, #0
9001656a:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001656e:	e9c0 2203 	strd	r2, r2, [r0, #12]
90016572:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016576:	4770      	bx	lr
90016578:	9002c308 	.word	0x9002c308

9001657c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
9001657c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016580:	4604      	mov	r4, r0
90016582:	b087      	sub	sp, #28
90016584:	4696      	mov	lr, r2
90016586:	6880      	ldr	r0, [r0, #8]
90016588:	8b22      	ldrh	r2, [r4, #24]
9001658a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
9001658e:	9105      	str	r1, [sp, #20]
90016590:	1c51      	adds	r1, r2, #1
90016592:	8321      	strh	r1, [r4, #24]
90016594:	2101      	movs	r1, #1
90016596:	5481      	strb	r1, [r0, r2]
90016598:	4689      	mov	r9, r1
9001659a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001659e:	8b60      	ldrh	r0, [r4, #26]
900165a0:	ee06 2a90 	vmov	s13, r2
900165a4:	68e2      	ldr	r2, [r4, #12]
900165a6:	1845      	adds	r5, r0, r1
900165a8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900165ac:	eb02 0280 	add.w	r2, r2, r0, lsl #2
900165b0:	8365      	strh	r5, [r4, #26]
900165b2:	edc2 6a00 	vstr	s13, [r2]
900165b6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900165ba:	8b60      	ldrh	r0, [r4, #26]
900165bc:	ee07 2a10 	vmov	s14, r2
900165c0:	68e2      	ldr	r2, [r4, #12]
900165c2:	1845      	adds	r5, r0, r1
900165c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900165c8:	eb02 0280 	add.w	r2, r2, r0, lsl #2
900165cc:	8365      	strh	r5, [r4, #26]
900165ce:	1d18      	adds	r0, r3, #4
900165d0:	460d      	mov	r5, r1
900165d2:	ed82 7a00 	vstr	s14, [r2]
900165d6:	f8be 2000 	ldrh.w	r2, [lr]
900165da:	9203      	str	r2, [sp, #12]
900165dc:	2200      	movs	r2, #0
900165de:	4613      	mov	r3, r2
900165e0:	4694      	mov	ip, r2
900165e2:	9201      	str	r2, [sp, #4]
900165e4:	9202      	str	r2, [sp, #8]
900165e6:	f8b4 8018 	ldrh.w	r8, [r4, #24]
900165ea:	9e05      	ldr	r6, [sp, #20]
900165ec:	f108 0701 	add.w	r7, r8, #1
900165f0:	f8d4 a008 	ldr.w	sl, [r4, #8]
900165f4:	428e      	cmp	r6, r1
900165f6:	b2bf      	uxth	r7, r7
900165f8:	eb0a 0b08 	add.w	fp, sl, r8
900165fc:	f340 80b6 	ble.w	9001676c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
90016600:	9b03      	ldr	r3, [sp, #12]
90016602:	f9b0 c000 	ldrsh.w	ip, [r0]
90016606:	fa43 fb05 	asr.w	fp, r3, r5
9001660a:	f00b 0b01 	and.w	fp, fp, #1
9001660e:	fa5f f38b 	uxtb.w	r3, fp
90016612:	9304      	str	r3, [sp, #16]
90016614:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90016618:	f1bb 0f00 	cmp.w	fp, #0
9001661c:	d057      	beq.n	900166ce <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
9001661e:	ee07 ca90 	vmov	s15, ip
90016622:	8327      	strh	r7, [r4, #24]
90016624:	eef8 5ae7 	vcvt.f32.s32	s11, s15
90016628:	ee07 3a90 	vmov	s15, r3
9001662c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016630:	f1b9 0f00 	cmp.w	r9, #0
90016634:	d028      	beq.n	90016688 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
90016636:	f04f 0602 	mov.w	r6, #2
9001663a:	f80a 6008 	strb.w	r6, [sl, r8]
9001663e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016642:	68e7      	ldr	r7, [r4, #12]
90016644:	f108 0901 	add.w	r9, r8, #1
90016648:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001664c:	f8a4 901a 	strh.w	r9, [r4, #26]
90016650:	edc7 5a00 	vstr	s11, [r7]
90016654:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016658:	68e7      	ldr	r7, [r4, #12]
9001665a:	f108 0901 	add.w	r9, r8, #1
9001665e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016662:	f8a4 901a 	strh.w	r9, [r4, #26]
90016666:	edc7 7a00 	vstr	s15, [r7]
9001666a:	3501      	adds	r5, #1
9001666c:	2d10      	cmp	r5, #16
9001666e:	d106      	bne.n	9001667e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
90016670:	9d02      	ldr	r5, [sp, #8]
90016672:	3501      	adds	r5, #1
90016674:	9502      	str	r5, [sp, #8]
90016676:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
9001667a:	9503      	str	r5, [sp, #12]
9001667c:	2500      	movs	r5, #0
9001667e:	3101      	adds	r1, #1
90016680:	3004      	adds	r0, #4
90016682:	f8dd 9010 	ldr.w	r9, [sp, #16]
90016686:	e7ae      	b.n	900165e6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
90016688:	f04f 0605 	mov.w	r6, #5
9001668c:	ed9d 5a01 	vldr	s10, [sp, #4]
90016690:	f80a 6008 	strb.w	r6, [sl, r8]
90016694:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90016698:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001669c:	68e7      	ldr	r7, [r4, #12]
9001669e:	f108 0901 	add.w	r9, r8, #1
900166a2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900166a6:	f8a4 901a 	strh.w	r9, [r4, #26]
900166aa:	ed87 5a00 	vstr	s10, [r7]
900166ae:	ee05 2a10 	vmov	s10, r2
900166b2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900166b6:	68e7      	ldr	r7, [r4, #12]
900166b8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
900166bc:	f108 0901 	add.w	r9, r8, #1
900166c0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900166c4:	f8a4 901a 	strh.w	r9, [r4, #26]
900166c8:	ed87 5a00 	vstr	s10, [r7]
900166cc:	e7b7      	b.n	9001663e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
900166ce:	f1b9 0f00 	cmp.w	r9, #0
900166d2:	d147      	bne.n	90016764 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
900166d4:	f04f 0605 	mov.w	r6, #5
900166d8:	eddd 7a01 	vldr	s15, [sp, #4]
900166dc:	8327      	strh	r7, [r4, #24]
900166de:	f80a 6008 	strb.w	r6, [sl, r8]
900166e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900166e6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900166ea:	68e7      	ldr	r7, [r4, #12]
900166ec:	f108 0901 	add.w	r9, r8, #1
900166f0:	9e01      	ldr	r6, [sp, #4]
900166f2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900166f6:	f8a4 901a 	strh.w	r9, [r4, #26]
900166fa:	4466      	add	r6, ip
900166fc:	edc7 7a00 	vstr	s15, [r7]
90016700:	ee07 2a90 	vmov	s15, r2
90016704:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016708:	441a      	add	r2, r3
9001670a:	68e7      	ldr	r7, [r4, #12]
9001670c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016710:	f108 0901 	add.w	r9, r8, #1
90016714:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016718:	f8a4 901a 	strh.w	r9, [r4, #26]
9001671c:	edc7 7a00 	vstr	s15, [r7]
90016720:	ee07 6a90 	vmov	s15, r6
90016724:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016728:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001672c:	68e7      	ldr	r7, [r4, #12]
9001672e:	f108 0901 	add.w	r9, r8, #1
90016732:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016736:	ee67 7a86 	vmul.f32	s15, s15, s12
9001673a:	f8a4 901a 	strh.w	r9, [r4, #26]
9001673e:	edc7 7a00 	vstr	s15, [r7]
90016742:	ee07 2a90 	vmov	s15, r2
90016746:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001674a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001674e:	68e7      	ldr	r7, [r4, #12]
90016750:	f108 0901 	add.w	r9, r8, #1
90016754:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016758:	ee67 7a86 	vmul.f32	s15, s15, s12
9001675c:	f8a4 901a 	strh.w	r9, [r4, #26]
90016760:	edc7 7a00 	vstr	s15, [r7]
90016764:	461a      	mov	r2, r3
90016766:	f8cd c004 	str.w	ip, [sp, #4]
9001676a:	e77e      	b.n	9001666a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
9001676c:	f1b9 0f00 	cmp.w	r9, #0
90016770:	d028      	beq.n	900167c4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
90016772:	ee07 ca90 	vmov	s15, ip
90016776:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001677a:	eef4 6a67 	vcmp.f32	s13, s15
9001677e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016782:	d108      	bne.n	90016796 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
90016784:	ee07 3a90 	vmov	s15, r3
90016788:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001678c:	eeb4 7a67 	vcmp.f32	s14, s15
90016790:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016794:	d016      	beq.n	900167c4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
90016796:	2302      	movs	r3, #2
90016798:	8327      	strh	r7, [r4, #24]
9001679a:	f88b 3000 	strb.w	r3, [fp]
9001679e:	8b62      	ldrh	r2, [r4, #26]
900167a0:	68e3      	ldr	r3, [r4, #12]
900167a2:	1c51      	adds	r1, r2, #1
900167a4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900167a8:	8361      	strh	r1, [r4, #26]
900167aa:	edc3 6a00 	vstr	s13, [r3]
900167ae:	8b62      	ldrh	r2, [r4, #26]
900167b0:	68e3      	ldr	r3, [r4, #12]
900167b2:	1c51      	adds	r1, r2, #1
900167b4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900167b8:	8361      	strh	r1, [r4, #26]
900167ba:	ed83 7a00 	vstr	s14, [r3]
900167be:	b007      	add	sp, #28
900167c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900167c4:	2305      	movs	r3, #5
900167c6:	eddd 7a01 	vldr	s15, [sp, #4]
900167ca:	8327      	strh	r7, [r4, #24]
900167cc:	f88b 3000 	strb.w	r3, [fp]
900167d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900167d4:	8b61      	ldrh	r1, [r4, #26]
900167d6:	68e3      	ldr	r3, [r4, #12]
900167d8:	1c4d      	adds	r5, r1, #1
900167da:	eb03 0381 	add.w	r3, r3, r1, lsl #2
900167de:	8365      	strh	r5, [r4, #26]
900167e0:	edc3 7a00 	vstr	s15, [r3]
900167e4:	ee07 2a90 	vmov	s15, r2
900167e8:	8b61      	ldrh	r1, [r4, #26]
900167ea:	68e3      	ldr	r3, [r4, #12]
900167ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900167f0:	1c4d      	adds	r5, r1, #1
900167f2:	eb03 0381 	add.w	r3, r3, r1, lsl #2
900167f6:	8365      	strh	r5, [r4, #26]
900167f8:	edc3 7a00 	vstr	s15, [r3]
900167fc:	e7cf      	b.n	9001679e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

90016800 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90016800:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90016804:	4604      	mov	r4, r0
90016806:	b08e      	sub	sp, #56	@ 0x38
90016808:	4699      	mov	r9, r3
9001680a:	4688      	mov	r8, r1
9001680c:	4615      	mov	r5, r2
9001680e:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90016810:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
90016814:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
90016816:	f7ec fe6d 	bl	900034f4 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
9001681a:	6060      	str	r0, [r4, #4]
9001681c:	f1b9 0f00 	cmp.w	r9, #0
90016820:	f000 80e8 	beq.w	900169f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90016824:	2800      	cmp	r0, #0
90016826:	f000 80e5 	beq.w	900169f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001682a:	a805      	add	r0, sp, #20
9001682c:	f000 f8f9 	bl	90016a22 <_ZN8touchgfx9Matrix3x3C1Ev>
90016830:	6833      	ldr	r3, [r6, #0]
90016832:	4630      	mov	r0, r6
90016834:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
90016836:	4798      	blx	r3
90016838:	a805      	add	r0, sp, #20
9001683a:	eef0 0a40 	vmov.f32	s1, s0
9001683e:	f000 f8f4 	bl	90016a2a <_ZN8touchgfx9Matrix3x35scaleEff>
90016842:	6860      	ldr	r0, [r4, #4]
90016844:	f1ba 0f03 	cmp.w	sl, #3
90016848:	d83b      	bhi.n	900168c2 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
9001684a:	e8df f00a 	tbb	[pc, sl]
9001684e:	1002      	.short	0x1002
90016850:	9f71      	.short	0x9f71
90016852:	6803      	ldr	r3, [r0, #0]
90016854:	462a      	mov	r2, r5
90016856:	4641      	mov	r1, r8
90016858:	689b      	ldr	r3, [r3, #8]
9001685a:	4798      	blx	r3
9001685c:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90016860:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90016864:	ee07 7a90 	vmov	s15, r7
90016868:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
9001686c:	e026      	b.n	900168bc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
9001686e:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90016872:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90016876:	8869      	ldrh	r1, [r5, #2]
90016878:	1a9b      	subs	r3, r3, r2
9001687a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001687e:	aa03      	add	r2, sp, #12
90016880:	1a5b      	subs	r3, r3, r1
90016882:	4641      	mov	r1, r8
90016884:	f8ad 300c 	strh.w	r3, [sp, #12]
90016888:	882b      	ldrh	r3, [r5, #0]
9001688a:	f8ad 300e 	strh.w	r3, [sp, #14]
9001688e:	88ab      	ldrh	r3, [r5, #4]
90016890:	f8ad 3012 	strh.w	r3, [sp, #18]
90016894:	6803      	ldr	r3, [r0, #0]
90016896:	689b      	ldr	r3, [r3, #8]
90016898:	4798      	blx	r3
9001689a:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 900169fc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
9001689e:	a805      	add	r0, sp, #20
900168a0:	f000 f8e8 	bl	90016a74 <_ZN8touchgfx9Matrix3x36rotateEf>
900168a4:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
900168a8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
900168aa:	ee07 7a90 	vmov	s15, r7
900168ae:	1a9b      	subs	r3, r3, r2
900168b0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
900168b4:	ee00 3a10 	vmov	s0, r3
900168b8:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
900168bc:	a805      	add	r0, sp, #20
900168be:	f000 f927 	bl	90016b10 <_ZN8touchgfx9Matrix3x39translateEff>
900168c2:	6860      	ldr	r0, [r4, #4]
900168c4:	a905      	add	r1, sp, #20
900168c6:	2500      	movs	r5, #0
900168c8:	f109 0602 	add.w	r6, r9, #2
900168cc:	6803      	ldr	r3, [r0, #0]
900168ce:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900168d0:	4798      	blx	r3
900168d2:	6860      	ldr	r0, [r4, #4]
900168d4:	9917      	ldr	r1, [sp, #92]	@ 0x5c
900168d6:	6803      	ldr	r3, [r0, #0]
900168d8:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
900168dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900168de:	4798      	blx	r3
900168e0:	6860      	ldr	r0, [r4, #4]
900168e2:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
900168e6:	6803      	ldr	r3, [r0, #0]
900168e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900168ea:	4798      	blx	r3
900168ec:	6860      	ldr	r0, [r4, #4]
900168ee:	2101      	movs	r1, #1
900168f0:	6803      	ldr	r3, [r0, #0]
900168f2:	68db      	ldr	r3, [r3, #12]
900168f4:	4798      	blx	r3
900168f6:	f8b9 7000 	ldrh.w	r7, [r9]
900168fa:	f104 0310 	add.w	r3, r4, #16
900168fe:	61a5      	str	r5, [r4, #24]
90016900:	f104 0208 	add.w	r2, r4, #8
90016904:	f104 0114 	add.w	r1, r4, #20
90016908:	f104 000c 	add.w	r0, r4, #12
9001690c:	f7ef f93c 	bl	90005b88 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90016910:	42af      	cmp	r7, r5
90016912:	dd60      	ble.n	900169d6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
90016914:	8831      	ldrh	r1, [r6, #0]
90016916:	1cb2      	adds	r2, r6, #2
90016918:	4620      	mov	r0, r4
9001691a:	3501      	adds	r5, #1
9001691c:	f101 030f 	add.w	r3, r1, #15
90016920:	f3c3 1307 	ubfx	r3, r3, #4, #8
90016924:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90016928:	f7ff fe28 	bl	9001657c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
9001692c:	4606      	mov	r6, r0
9001692e:	e7ef      	b.n	90016910 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90016930:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90016934:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90016938:	8829      	ldrh	r1, [r5, #0]
9001693a:	1a9b      	subs	r3, r3, r2
9001693c:	f8ad 2010 	strh.w	r2, [sp, #16]
90016940:	aa03      	add	r2, sp, #12
90016942:	1a5b      	subs	r3, r3, r1
90016944:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016948:	886d      	ldrh	r5, [r5, #2]
9001694a:	f8ad 300c 	strh.w	r3, [sp, #12]
9001694e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90016952:	f8ad 1012 	strh.w	r1, [sp, #18]
90016956:	1a5b      	subs	r3, r3, r1
90016958:	4641      	mov	r1, r8
9001695a:	1b5b      	subs	r3, r3, r5
9001695c:	f8ad 300e 	strh.w	r3, [sp, #14]
90016960:	6803      	ldr	r3, [r0, #0]
90016962:	689b      	ldr	r3, [r3, #8]
90016964:	4798      	blx	r3
90016966:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90016a00 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
9001696a:	a805      	add	r0, sp, #20
9001696c:	f000 f882 	bl	90016a74 <_ZN8touchgfx9Matrix3x36rotateEf>
90016970:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016974:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90016976:	1a9b      	subs	r3, r3, r2
90016978:	ee00 3a90 	vmov	s1, r3
9001697c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90016980:	1bdb      	subs	r3, r3, r7
90016982:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90016986:	ee00 3a10 	vmov	s0, r3
9001698a:	e795      	b.n	900168b8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
9001698c:	886b      	ldrh	r3, [r5, #2]
9001698e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90016992:	f8ad 300c 	strh.w	r3, [sp, #12]
90016996:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001699a:	8829      	ldrh	r1, [r5, #0]
9001699c:	1a9b      	subs	r3, r3, r2
9001699e:	f8ad 2012 	strh.w	r2, [sp, #18]
900169a2:	aa03      	add	r2, sp, #12
900169a4:	1a5b      	subs	r3, r3, r1
900169a6:	4641      	mov	r1, r8
900169a8:	f8ad 300e 	strh.w	r3, [sp, #14]
900169ac:	88eb      	ldrh	r3, [r5, #6]
900169ae:	f8ad 3010 	strh.w	r3, [sp, #16]
900169b2:	6803      	ldr	r3, [r0, #0]
900169b4:	689b      	ldr	r3, [r3, #8]
900169b6:	4798      	blx	r3
900169b8:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90016a04 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
900169bc:	a805      	add	r0, sp, #20
900169be:	f000 f859 	bl	90016a74 <_ZN8touchgfx9Matrix3x36rotateEf>
900169c2:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900169c6:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
900169ca:	1bdb      	subs	r3, r3, r7
900169cc:	ee00 3a90 	vmov	s1, r3
900169d0:	eef8 0ae0 	vcvt.f32.s32	s1, s1
900169d4:	e748      	b.n	90016868 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
900169d6:	6860      	ldr	r0, [r4, #4]
900169d8:	2100      	movs	r1, #0
900169da:	8b22      	ldrh	r2, [r4, #24]
900169dc:	6803      	ldr	r3, [r0, #0]
900169de:	9101      	str	r1, [sp, #4]
900169e0:	8b61      	ldrh	r1, [r4, #26]
900169e2:	9100      	str	r1, [sp, #0]
900169e4:	6a1d      	ldr	r5, [r3, #32]
900169e6:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
900169ea:	47a8      	blx	r5
900169ec:	6860      	ldr	r0, [r4, #4]
900169ee:	6803      	ldr	r3, [r0, #0]
900169f0:	69db      	ldr	r3, [r3, #28]
900169f2:	4798      	blx	r3
900169f4:	b00e      	add	sp, #56	@ 0x38
900169f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900169fa:	bf00      	nop
900169fc:	42b40000 	.word	0x42b40000
90016a00:	43340000 	.word	0x43340000
90016a04:	43870000 	.word	0x43870000

90016a08 <_ZN8touchgfx9Matrix3x35resetEv>:
90016a08:	2300      	movs	r3, #0
90016a0a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90016a0e:	6043      	str	r3, [r0, #4]
90016a10:	6002      	str	r2, [r0, #0]
90016a12:	6083      	str	r3, [r0, #8]
90016a14:	60c3      	str	r3, [r0, #12]
90016a16:	6102      	str	r2, [r0, #16]
90016a18:	6143      	str	r3, [r0, #20]
90016a1a:	6183      	str	r3, [r0, #24]
90016a1c:	61c3      	str	r3, [r0, #28]
90016a1e:	6202      	str	r2, [r0, #32]
90016a20:	4770      	bx	lr

90016a22 <_ZN8touchgfx9Matrix3x3C1Ev>:
90016a22:	b508      	push	{r3, lr}
90016a24:	f7ff fff0 	bl	90016a08 <_ZN8touchgfx9Matrix3x35resetEv>
90016a28:	bd08      	pop	{r3, pc}

90016a2a <_ZN8touchgfx9Matrix3x35scaleEff>:
90016a2a:	edd0 7a00 	vldr	s15, [r0]
90016a2e:	ee67 7a80 	vmul.f32	s15, s15, s0
90016a32:	edc0 7a00 	vstr	s15, [r0]
90016a36:	edd0 7a01 	vldr	s15, [r0, #4]
90016a3a:	ee67 7a80 	vmul.f32	s15, s15, s0
90016a3e:	edc0 7a01 	vstr	s15, [r0, #4]
90016a42:	edd0 7a02 	vldr	s15, [r0, #8]
90016a46:	ee27 0a80 	vmul.f32	s0, s15, s0
90016a4a:	edd0 7a03 	vldr	s15, [r0, #12]
90016a4e:	ee67 7aa0 	vmul.f32	s15, s15, s1
90016a52:	ed80 0a02 	vstr	s0, [r0, #8]
90016a56:	edc0 7a03 	vstr	s15, [r0, #12]
90016a5a:	edd0 7a04 	vldr	s15, [r0, #16]
90016a5e:	ee67 7aa0 	vmul.f32	s15, s15, s1
90016a62:	edc0 7a04 	vstr	s15, [r0, #16]
90016a66:	edd0 7a05 	vldr	s15, [r0, #20]
90016a6a:	ee67 0aa0 	vmul.f32	s1, s15, s1
90016a6e:	edc0 0a05 	vstr	s1, [r0, #20]
90016a72:	4770      	bx	lr

90016a74 <_ZN8touchgfx9Matrix3x36rotateEf>:
90016a74:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90016b08 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90016a78:	ee20 0a27 	vmul.f32	s0, s0, s15
90016a7c:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90016b0c <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90016a80:	b510      	push	{r4, lr}
90016a82:	ed2d 8b02 	vpush	{d8}
90016a86:	eec0 8a27 	vdiv.f32	s17, s0, s15
90016a8a:	4604      	mov	r4, r0
90016a8c:	eeb0 0a68 	vmov.f32	s0, s17
90016a90:	f011 fa32 	bl	90027ef8 <cosf>
90016a94:	eeb0 8a40 	vmov.f32	s16, s0
90016a98:	eeb0 0a68 	vmov.f32	s0, s17
90016a9c:	f011 f968 	bl	90027d70 <sinf>
90016aa0:	edd4 6a03 	vldr	s13, [r4, #12]
90016aa4:	edd4 4a00 	vldr	s9, [r4]
90016aa8:	ee60 7a66 	vnmul.f32	s15, s0, s13
90016aac:	ed94 7a04 	vldr	s14, [r4, #16]
90016ab0:	ed94 5a01 	vldr	s10, [r4, #4]
90016ab4:	ee66 6a88 	vmul.f32	s13, s13, s16
90016ab8:	edd4 5a02 	vldr	s11, [r4, #8]
90016abc:	eee8 7a24 	vfma.f32	s15, s16, s9
90016ac0:	eee0 6a24 	vfma.f32	s13, s0, s9
90016ac4:	edc4 7a00 	vstr	s15, [r4]
90016ac8:	ee60 7a47 	vnmul.f32	s15, s0, s14
90016acc:	ee27 7a08 	vmul.f32	s14, s14, s16
90016ad0:	edc4 6a03 	vstr	s13, [r4, #12]
90016ad4:	eee8 7a05 	vfma.f32	s15, s16, s10
90016ad8:	eea0 7a05 	vfma.f32	s14, s0, s10
90016adc:	edc4 7a01 	vstr	s15, [r4, #4]
90016ae0:	edd4 7a05 	vldr	s15, [r4, #20]
90016ae4:	ed84 7a04 	vstr	s14, [r4, #16]
90016ae8:	ee20 6a67 	vnmul.f32	s12, s0, s15
90016aec:	ee67 7a88 	vmul.f32	s15, s15, s16
90016af0:	eea8 6a25 	vfma.f32	s12, s16, s11
90016af4:	eee0 7a25 	vfma.f32	s15, s0, s11
90016af8:	ecbd 8b02 	vpop	{d8}
90016afc:	ed84 6a02 	vstr	s12, [r4, #8]
90016b00:	edc4 7a05 	vstr	s15, [r4, #20]
90016b04:	bd10      	pop	{r4, pc}
90016b06:	bf00      	nop
90016b08:	40490fdb 	.word	0x40490fdb
90016b0c:	43340000 	.word	0x43340000

90016b10 <_ZN8touchgfx9Matrix3x39translateEff>:
90016b10:	ed90 6a06 	vldr	s12, [r0, #24]
90016b14:	edd0 7a00 	vldr	s15, [r0]
90016b18:	edd0 6a07 	vldr	s13, [r0, #28]
90016b1c:	eee6 7a00 	vfma.f32	s15, s12, s0
90016b20:	ed90 7a08 	vldr	s14, [r0, #32]
90016b24:	edc0 7a00 	vstr	s15, [r0]
90016b28:	edd0 7a01 	vldr	s15, [r0, #4]
90016b2c:	eee6 7a80 	vfma.f32	s15, s13, s0
90016b30:	edc0 7a01 	vstr	s15, [r0, #4]
90016b34:	edd0 7a02 	vldr	s15, [r0, #8]
90016b38:	eee7 7a00 	vfma.f32	s15, s14, s0
90016b3c:	edc0 7a02 	vstr	s15, [r0, #8]
90016b40:	edd0 7a03 	vldr	s15, [r0, #12]
90016b44:	eee6 7a20 	vfma.f32	s15, s12, s1
90016b48:	edc0 7a03 	vstr	s15, [r0, #12]
90016b4c:	edd0 7a04 	vldr	s15, [r0, #16]
90016b50:	eee6 7aa0 	vfma.f32	s15, s13, s1
90016b54:	edc0 7a04 	vstr	s15, [r0, #16]
90016b58:	edd0 7a05 	vldr	s15, [r0, #20]
90016b5c:	eee7 7a20 	vfma.f32	s15, s14, s1
90016b60:	edc0 7a05 	vstr	s15, [r0, #20]
90016b64:	4770      	bx	lr

90016b66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90016b66:	edd0 6a01 	vldr	s13, [r0, #4]
90016b6a:	b084      	sub	sp, #16
90016b6c:	edd0 7a04 	vldr	s15, [r0, #16]
90016b70:	ed90 7a03 	vldr	s14, [r0, #12]
90016b74:	ee60 7aa7 	vmul.f32	s15, s1, s15
90016b78:	ee60 0aa6 	vmul.f32	s1, s1, s13
90016b7c:	edd0 6a00 	vldr	s13, [r0]
90016b80:	eee7 7a00 	vfma.f32	s15, s14, s0
90016b84:	ed90 7a05 	vldr	s14, [r0, #20]
90016b88:	eee6 0a80 	vfma.f32	s1, s13, s0
90016b8c:	ed90 0a02 	vldr	s0, [r0, #8]
90016b90:	ee30 0a80 	vadd.f32	s0, s1, s0
90016b94:	ee77 0a87 	vadd.f32	s1, s15, s14
90016b98:	b004      	add	sp, #16
90016b9a:	4770      	bx	lr

90016b9c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90016b9c:	b530      	push	{r4, r5, lr}
90016b9e:	8083      	strh	r3, [r0, #4]
90016ba0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90016ba4:	f89d 5018 	ldrb.w	r5, [sp, #24]
90016ba8:	80c3      	strh	r3, [r0, #6]
90016baa:	f89d 3010 	ldrb.w	r3, [sp, #16]
90016bae:	6141      	str	r1, [r0, #20]
90016bb0:	7203      	strb	r3, [r0, #8]
90016bb2:	f89d 3014 	ldrb.w	r3, [sp, #20]
90016bb6:	8302      	strh	r2, [r0, #24]
90016bb8:	7243      	strb	r3, [r0, #9]
90016bba:	7a83      	ldrb	r3, [r0, #10]
90016bbc:	f365 0306 	bfi	r3, r5, #0, #7
90016bc0:	f89d 501c 	ldrb.w	r5, [sp, #28]
90016bc4:	f365 13c7 	bfi	r3, r5, #7, #1
90016bc8:	7283      	strb	r3, [r0, #10]
90016bca:	f89d 3020 	ldrb.w	r3, [sp, #32]
90016bce:	72c3      	strb	r3, [r0, #11]
90016bd0:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90016bd4:	7303      	strb	r3, [r0, #12]
90016bd6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90016bda:	81c3      	strh	r3, [r0, #14]
90016bdc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90016be0:	8203      	strh	r3, [r0, #16]
90016be2:	4b01      	ldr	r3, [pc, #4]	@ (90016be8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90016be4:	6003      	str	r3, [r0, #0]
90016be6:	bd30      	pop	{r4, r5, pc}
90016be8:	9002c31c 	.word	0x9002c31c

90016bec <_ZNK8touchgfx9ConstFont4findEt>:
90016bec:	b5f0      	push	{r4, r5, r6, r7, lr}
90016bee:	6944      	ldr	r4, [r0, #20]
90016bf0:	b3bc      	cbz	r4, 90016c62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016bf2:	88a3      	ldrh	r3, [r4, #4]
90016bf4:	8b02      	ldrh	r2, [r0, #24]
90016bf6:	1acb      	subs	r3, r1, r3
90016bf8:	f102 32ff 	add.w	r2, r2, #4294967295
90016bfc:	d431      	bmi.n	90016c62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016bfe:	4293      	cmp	r3, r2
90016c00:	dd0c      	ble.n	90016c1c <_ZNK8touchgfx9ConstFont4findEt+0x30>
90016c02:	230e      	movs	r3, #14
90016c04:	fb03 4302 	mla	r3, r3, r2, r4
90016c08:	889b      	ldrh	r3, [r3, #4]
90016c0a:	1a5b      	subs	r3, r3, r1
90016c0c:	1ad3      	subs	r3, r2, r3
90016c0e:	429a      	cmp	r2, r3
90016c10:	db27      	blt.n	90016c62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016c12:	2b00      	cmp	r3, #0
90016c14:	bfbc      	itt	lt
90016c16:	2302      	movlt	r3, #2
90016c18:	fb92 f3f3 	sdivlt	r3, r2, r3
90016c1c:	2500      	movs	r5, #0
90016c1e:	260e      	movs	r6, #14
90016c20:	4295      	cmp	r5, r2
90016c22:	dc1e      	bgt.n	90016c62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016c24:	fb06 4003 	mla	r0, r6, r3, r4
90016c28:	8887      	ldrh	r7, [r0, #4]
90016c2a:	42b9      	cmp	r1, r7
90016c2c:	d01a      	beq.n	90016c64 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90016c2e:	d20d      	bcs.n	90016c4c <_ZNK8touchgfx9ConstFont4findEt+0x60>
90016c30:	1e5a      	subs	r2, r3, #1
90016c32:	4295      	cmp	r5, r2
90016c34:	dc15      	bgt.n	90016c62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016c36:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90016c3a:	1a5b      	subs	r3, r3, r1
90016c3c:	1ad3      	subs	r3, r2, r3
90016c3e:	429a      	cmp	r2, r3
90016c40:	db0f      	blt.n	90016c62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016c42:	429d      	cmp	r5, r3
90016c44:	ddec      	ble.n	90016c20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016c46:	1953      	adds	r3, r2, r5
90016c48:	105b      	asrs	r3, r3, #1
90016c4a:	e7e9      	b.n	90016c20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016c4c:	1c5d      	adds	r5, r3, #1
90016c4e:	42aa      	cmp	r2, r5
90016c50:	db07      	blt.n	90016c62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016c52:	8a43      	ldrh	r3, [r0, #18]
90016c54:	1acb      	subs	r3, r1, r3
90016c56:	442b      	add	r3, r5
90016c58:	429d      	cmp	r5, r3
90016c5a:	dc02      	bgt.n	90016c62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016c5c:	429a      	cmp	r2, r3
90016c5e:	dadf      	bge.n	90016c20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016c60:	e7f1      	b.n	90016c46 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90016c62:	2000      	movs	r0, #0
90016c64:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016c66 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90016c66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016c68:	4604      	mov	r4, r0
90016c6a:	4617      	mov	r7, r2
90016c6c:	461e      	mov	r6, r3
90016c6e:	b911      	cbnz	r1, 90016c76 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90016c70:	2500      	movs	r5, #0
90016c72:	4628      	mov	r0, r5
90016c74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016c76:	290a      	cmp	r1, #10
90016c78:	d0fa      	beq.n	90016c70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016c7a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90016c7e:	4291      	cmp	r1, r2
90016c80:	d0f6      	beq.n	90016c70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016c82:	f242 020b 	movw	r2, #8203	@ 0x200b
90016c86:	4291      	cmp	r1, r2
90016c88:	d0f2      	beq.n	90016c70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016c8a:	f7ff ffaf 	bl	90016bec <_ZNK8touchgfx9ConstFont4findEt>
90016c8e:	4605      	mov	r5, r0
90016c90:	b950      	cbnz	r0, 90016ca8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90016c92:	6823      	ldr	r3, [r4, #0]
90016c94:	4620      	mov	r0, r4
90016c96:	691b      	ldr	r3, [r3, #16]
90016c98:	4798      	blx	r3
90016c9a:	4601      	mov	r1, r0
90016c9c:	4620      	mov	r0, r4
90016c9e:	f7ff ffa5 	bl	90016bec <_ZNK8touchgfx9ConstFont4findEt>
90016ca2:	4605      	mov	r5, r0
90016ca4:	2800      	cmp	r0, #0
90016ca6:	d0e3      	beq.n	90016c70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016ca8:	6823      	ldr	r3, [r4, #0]
90016caa:	4629      	mov	r1, r5
90016cac:	4620      	mov	r0, r4
90016cae:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90016cb0:	4798      	blx	r3
90016cb2:	6038      	str	r0, [r7, #0]
90016cb4:	6823      	ldr	r3, [r4, #0]
90016cb6:	4620      	mov	r0, r4
90016cb8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90016cba:	4798      	blx	r3
90016cbc:	7030      	strb	r0, [r6, #0]
90016cbe:	e7d8      	b.n	90016c72 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90016cc0 <_ZN8touchgfx4clzuEm>:
90016cc0:	4603      	mov	r3, r0
90016cc2:	b1c8      	cbz	r0, 90016cf8 <_ZN8touchgfx4clzuEm+0x38>
90016cc4:	0c02      	lsrs	r2, r0, #16
90016cc6:	0412      	lsls	r2, r2, #16
90016cc8:	b9a2      	cbnz	r2, 90016cf4 <_ZN8touchgfx4clzuEm+0x34>
90016cca:	0403      	lsls	r3, r0, #16
90016ccc:	2010      	movs	r0, #16
90016cce:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90016cd2:	bf04      	itt	eq
90016cd4:	021b      	lsleq	r3, r3, #8
90016cd6:	3008      	addeq	r0, #8
90016cd8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90016cdc:	bf04      	itt	eq
90016cde:	011b      	lsleq	r3, r3, #4
90016ce0:	3004      	addeq	r0, #4
90016ce2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90016ce6:	bf04      	itt	eq
90016ce8:	009b      	lsleq	r3, r3, #2
90016cea:	3002      	addeq	r0, #2
90016cec:	2b00      	cmp	r3, #0
90016cee:	db04      	blt.n	90016cfa <_ZN8touchgfx4clzuEm+0x3a>
90016cf0:	3001      	adds	r0, #1
90016cf2:	4770      	bx	lr
90016cf4:	2000      	movs	r0, #0
90016cf6:	e7ea      	b.n	90016cce <_ZN8touchgfx4clzuEm+0xe>
90016cf8:	2020      	movs	r0, #32
90016cfa:	4770      	bx	lr

90016cfc <_ZN8touchgfx7muldivuEmmmRm>:
90016cfc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90016d00:	460f      	mov	r7, r1
90016d02:	4615      	mov	r5, r2
90016d04:	461e      	mov	r6, r3
90016d06:	4601      	mov	r1, r0
90016d08:	b100      	cbz	r0, 90016d0c <_ZN8touchgfx7muldivuEmmmRm+0x10>
90016d0a:	b927      	cbnz	r7, 90016d16 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90016d0c:	2000      	movs	r0, #0
90016d0e:	6030      	str	r0, [r6, #0]
90016d10:	b002      	add	sp, #8
90016d12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90016d16:	f7ff ffd3 	bl	90016cc0 <_ZN8touchgfx4clzuEm>
90016d1a:	b980      	cbnz	r0, 90016d3e <_ZN8touchgfx7muldivuEmmmRm+0x42>
90016d1c:	4638      	mov	r0, r7
90016d1e:	f7ff ffcf 	bl	90016cc0 <_ZN8touchgfx4clzuEm>
90016d22:	2800      	cmp	r0, #0
90016d24:	dd05      	ble.n	90016d32 <_ZN8touchgfx7muldivuEmmmRm+0x36>
90016d26:	4633      	mov	r3, r6
90016d28:	462a      	mov	r2, r5
90016d2a:	4638      	mov	r0, r7
90016d2c:	f7ff ffe6 	bl	90016cfc <_ZN8touchgfx7muldivuEmmmRm>
90016d30:	e7ee      	b.n	90016d10 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90016d32:	f04f 33ff 	mov.w	r3, #4294967295
90016d36:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90016d3a:	6033      	str	r3, [r6, #0]
90016d3c:	e7e8      	b.n	90016d10 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90016d3e:	fa37 f800 	lsrs.w	r8, r7, r0
90016d42:	fb07 f301 	mul.w	r3, r7, r1
90016d46:	d105      	bne.n	90016d54 <_ZN8touchgfx7muldivuEmmmRm+0x58>
90016d48:	fbb3 f0f5 	udiv	r0, r3, r5
90016d4c:	fb05 3510 	mls	r5, r5, r0, r3
90016d50:	6035      	str	r5, [r6, #0]
90016d52:	e7dd      	b.n	90016d10 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90016d54:	2301      	movs	r3, #1
90016d56:	fa01 fa00 	lsl.w	sl, r1, r0
90016d5a:	462a      	mov	r2, r5
90016d5c:	fa03 f000 	lsl.w	r0, r3, r0
90016d60:	4633      	mov	r3, r6
90016d62:	fbba f9f5 	udiv	r9, sl, r5
90016d66:	3801      	subs	r0, #1
90016d68:	fb08 f409 	mul.w	r4, r8, r9
90016d6c:	4038      	ands	r0, r7
90016d6e:	f7ff ffc5 	bl	90016cfc <_ZN8touchgfx7muldivuEmmmRm>
90016d72:	462a      	mov	r2, r5
90016d74:	4607      	mov	r7, r0
90016d76:	ab01      	add	r3, sp, #4
90016d78:	fb05 a119 	mls	r1, r5, r9, sl
90016d7c:	4640      	mov	r0, r8
90016d7e:	f7ff ffbd 	bl	90016cfc <_ZN8touchgfx7muldivuEmmmRm>
90016d82:	9b01      	ldr	r3, [sp, #4]
90016d84:	6832      	ldr	r2, [r6, #0]
90016d86:	441a      	add	r2, r3
90016d88:	fbb2 f3f5 	udiv	r3, r2, r5
90016d8c:	441c      	add	r4, r3
90016d8e:	fb05 2513 	mls	r5, r5, r3, r2
90016d92:	443c      	add	r4, r7
90016d94:	4420      	add	r0, r4
90016d96:	e7db      	b.n	90016d50 <_ZN8touchgfx7muldivuEmmmRm+0x54>

90016d98 <_ZN8touchgfx6muldivElllRl>:
90016d98:	b573      	push	{r0, r1, r4, r5, r6, lr}
90016d9a:	2800      	cmp	r0, #0
90016d9c:	461e      	mov	r6, r3
90016d9e:	bfba      	itte	lt
90016da0:	4240      	neglt	r0, r0
90016da2:	f04f 34ff 	movlt.w	r4, #4294967295
90016da6:	2401      	movge	r4, #1
90016da8:	2900      	cmp	r1, #0
90016daa:	bfbc      	itt	lt
90016dac:	4249      	neglt	r1, r1
90016dae:	4264      	neglt	r4, r4
90016db0:	2a00      	cmp	r2, #0
90016db2:	bfb6      	itet	lt
90016db4:	4265      	neglt	r5, r4
90016db6:	4625      	movge	r5, r4
90016db8:	4252      	neglt	r2, r2
90016dba:	4288      	cmp	r0, r1
90016dbc:	bfc2      	ittt	gt
90016dbe:	4603      	movgt	r3, r0
90016dc0:	4608      	movgt	r0, r1
90016dc2:	4619      	movgt	r1, r3
90016dc4:	ab01      	add	r3, sp, #4
90016dc6:	f7ff ff99 	bl	90016cfc <_ZN8touchgfx7muldivuEmmmRm>
90016dca:	9b01      	ldr	r3, [sp, #4]
90016dcc:	4368      	muls	r0, r5
90016dce:	435c      	muls	r4, r3
90016dd0:	6034      	str	r4, [r6, #0]
90016dd2:	b002      	add	sp, #8
90016dd4:	bd70      	pop	{r4, r5, r6, pc}

90016dd6 <_ZN8touchgfx6muldivElll>:
90016dd6:	b573      	push	{r0, r1, r4, r5, r6, lr}
90016dd8:	4606      	mov	r6, r0
90016dda:	ab01      	add	r3, sp, #4
90016ddc:	460d      	mov	r5, r1
90016dde:	4614      	mov	r4, r2
90016de0:	f7ff ffda 	bl	90016d98 <_ZN8touchgfx6muldivElllRl>
90016de4:	2e00      	cmp	r6, #0
90016de6:	db20      	blt.n	90016e2a <_ZN8touchgfx6muldivElll+0x54>
90016de8:	bf14      	ite	ne
90016dea:	2301      	movne	r3, #1
90016dec:	2300      	moveq	r3, #0
90016dee:	2d00      	cmp	r5, #0
90016df0:	db1e      	blt.n	90016e30 <_ZN8touchgfx6muldivElll+0x5a>
90016df2:	bf14      	ite	ne
90016df4:	2201      	movne	r2, #1
90016df6:	2200      	moveq	r2, #0
90016df8:	2c00      	cmp	r4, #0
90016dfa:	fb03 f202 	mul.w	r2, r3, r2
90016dfe:	db1a      	blt.n	90016e36 <_ZN8touchgfx6muldivElll+0x60>
90016e00:	bf14      	ite	ne
90016e02:	2301      	movne	r3, #1
90016e04:	2300      	moveq	r3, #0
90016e06:	4353      	muls	r3, r2
90016e08:	2b01      	cmp	r3, #1
90016e0a:	d117      	bne.n	90016e3c <_ZN8touchgfx6muldivElll+0x66>
90016e0c:	2c00      	cmp	r4, #0
90016e0e:	9b01      	ldr	r3, [sp, #4]
90016e10:	bfb8      	it	lt
90016e12:	4264      	neglt	r4, r4
90016e14:	2b00      	cmp	r3, #0
90016e16:	f104 0401 	add.w	r4, r4, #1
90016e1a:	bfb8      	it	lt
90016e1c:	425b      	neglt	r3, r3
90016e1e:	ebb3 0f64 	cmp.w	r3, r4, asr #1
90016e22:	db00      	blt.n	90016e26 <_ZN8touchgfx6muldivElll+0x50>
90016e24:	3001      	adds	r0, #1
90016e26:	b002      	add	sp, #8
90016e28:	bd70      	pop	{r4, r5, r6, pc}
90016e2a:	f04f 33ff 	mov.w	r3, #4294967295
90016e2e:	e7de      	b.n	90016dee <_ZN8touchgfx6muldivElll+0x18>
90016e30:	f04f 32ff 	mov.w	r2, #4294967295
90016e34:	e7e0      	b.n	90016df8 <_ZN8touchgfx6muldivElll+0x22>
90016e36:	f04f 33ff 	mov.w	r3, #4294967295
90016e3a:	e7e4      	b.n	90016e06 <_ZN8touchgfx6muldivElll+0x30>
90016e3c:	3301      	adds	r3, #1
90016e3e:	d1f2      	bne.n	90016e26 <_ZN8touchgfx6muldivElll+0x50>
90016e40:	9b01      	ldr	r3, [sp, #4]
90016e42:	2c00      	cmp	r4, #0
90016e44:	bfb8      	it	lt
90016e46:	4264      	neglt	r4, r4
90016e48:	2b00      	cmp	r3, #0
90016e4a:	bfb8      	it	lt
90016e4c:	425b      	neglt	r3, r3
90016e4e:	ebb3 0f64 	cmp.w	r3, r4, asr #1
90016e52:	bfc8      	it	gt
90016e54:	f100 30ff 	addgt.w	r0, r0, #4294967295
90016e58:	e7e5      	b.n	90016e26 <_ZN8touchgfx6muldivElll+0x50>

90016e5a <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90016e5a:	2000      	movs	r0, #0
90016e5c:	4770      	bx	lr

90016e5e <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90016e5e:	2001      	movs	r0, #1
90016e60:	4770      	bx	lr

90016e62 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90016e62:	2002      	movs	r0, #2
90016e64:	4770      	bx	lr

90016e66 <_ZN8touchgfx6ScreenD1Ev>:
90016e66:	4770      	bx	lr

90016e68 <_ZN8touchgfx6Screen11setupScreenEv>:
90016e68:	4770      	bx	lr

90016e6a <_ZN8touchgfx12GestureEventD1Ev>:
90016e6a:	4770      	bx	lr

90016e6c <_ZN8touchgfx9DragEventD1Ev>:
90016e6c:	4770      	bx	lr

90016e6e <_ZN8touchgfx10ClickEventD1Ev>:
90016e6e:	4770      	bx	lr

90016e70 <_ZN8touchgfx10ClickEventD0Ev>:
90016e70:	b510      	push	{r4, lr}
90016e72:	4604      	mov	r4, r0
90016e74:	210c      	movs	r1, #12
90016e76:	f010 ff07 	bl	90027c88 <_ZdlPvj>
90016e7a:	4620      	mov	r0, r4
90016e7c:	bd10      	pop	{r4, pc}

90016e7e <_ZN8touchgfx9DragEventD0Ev>:
90016e7e:	b510      	push	{r4, lr}
90016e80:	4604      	mov	r4, r0
90016e82:	2110      	movs	r1, #16
90016e84:	f010 ff00 	bl	90027c88 <_ZdlPvj>
90016e88:	4620      	mov	r0, r4
90016e8a:	bd10      	pop	{r4, pc}

90016e8c <_ZN8touchgfx12GestureEventD0Ev>:
90016e8c:	b510      	push	{r4, lr}
90016e8e:	4604      	mov	r4, r0
90016e90:	210c      	movs	r1, #12
90016e92:	f010 fef9 	bl	90027c88 <_ZdlPvj>
90016e96:	4620      	mov	r0, r4
90016e98:	bd10      	pop	{r4, pc}

90016e9a <_ZN8touchgfx6ScreenD0Ev>:
90016e9a:	b510      	push	{r4, lr}
90016e9c:	4604      	mov	r4, r0
90016e9e:	213c      	movs	r1, #60	@ 0x3c
90016ea0:	f010 fef2 	bl	90027c88 <_ZdlPvj>
90016ea4:	4620      	mov	r0, r4
90016ea6:	bd10      	pop	{r4, pc}

90016ea8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90016ea8:	b530      	push	{r4, r5, lr}
90016eaa:	460d      	mov	r5, r1
90016eac:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90016eae:	b087      	sub	sp, #28
90016eb0:	4604      	mov	r4, r0
90016eb2:	b301      	cbz	r1, 90016ef6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90016eb4:	a801      	add	r0, sp, #4
90016eb6:	f7ff fb3b 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016eba:	892a      	ldrh	r2, [r5, #8]
90016ebc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90016ec0:	7928      	ldrb	r0, [r5, #4]
90016ec2:	1ad2      	subs	r2, r2, r3
90016ec4:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90016ec6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016eca:	441a      	add	r2, r3
90016ecc:	896b      	ldrh	r3, [r5, #10]
90016ece:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90016ed2:	f88d 0010 	strb.w	r0, [sp, #16]
90016ed6:	1b5b      	subs	r3, r3, r5
90016ed8:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
90016eda:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90016edc:	442b      	add	r3, r5
90016ede:	4d07      	ldr	r5, [pc, #28]	@ (90016efc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90016ee0:	f8ad 1012 	strh.w	r1, [sp, #18]
90016ee4:	a903      	add	r1, sp, #12
90016ee6:	9503      	str	r5, [sp, #12]
90016ee8:	f8ad 2014 	strh.w	r2, [sp, #20]
90016eec:	f8ad 3016 	strh.w	r3, [sp, #22]
90016ef0:	6803      	ldr	r3, [r0, #0]
90016ef2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016ef4:	4798      	blx	r3
90016ef6:	b007      	add	sp, #28
90016ef8:	bd30      	pop	{r4, r5, pc}
90016efa:	bf00      	nop
90016efc:	9002c3ac 	.word	0x9002c3ac

90016f00 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90016f00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016f04:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90016f06:	b08a      	sub	sp, #40	@ 0x28
90016f08:	4604      	mov	r4, r0
90016f0a:	460d      	mov	r5, r1
90016f0c:	b113      	cbz	r3, 90016f14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90016f0e:	790b      	ldrb	r3, [r1, #4]
90016f10:	2b00      	cmp	r3, #0
90016f12:	d044      	beq.n	90016f9e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016f14:	f104 0804 	add.w	r8, r4, #4
90016f18:	a803      	add	r0, sp, #12
90016f1a:	4641      	mov	r1, r8
90016f1c:	f7ff fb08 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016f20:	792b      	ldrb	r3, [r5, #4]
90016f22:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90016f26:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90016f2a:	b983      	cbnz	r3, 90016f4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90016f2c:	f104 0336 	add.w	r3, r4, #54	@ 0x36
90016f30:	892a      	ldrh	r2, [r5, #8]
90016f32:	88e9      	ldrh	r1, [r5, #6]
90016f34:	4640      	mov	r0, r8
90016f36:	1b92      	subs	r2, r2, r6
90016f38:	9301      	str	r3, [sp, #4]
90016f3a:	1bc9      	subs	r1, r1, r7
90016f3c:	f104 0334 	add.w	r3, r4, #52	@ 0x34
90016f40:	b212      	sxth	r2, r2
90016f42:	9300      	str	r3, [sp, #0]
90016f44:	b209      	sxth	r1, r1
90016f46:	f104 0330 	add.w	r3, r4, #48	@ 0x30
90016f4a:	f7f8 fa9f 	bl	9000f48c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90016f4e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90016f50:	b329      	cbz	r1, 90016f9e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016f52:	a805      	add	r0, sp, #20
90016f54:	f7ff faec 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016f58:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90016f5c:	792b      	ldrb	r3, [r5, #4]
90016f5e:	a907      	add	r1, sp, #28
90016f60:	1abf      	subs	r7, r7, r2
90016f62:	88ea      	ldrh	r2, [r5, #6]
90016f64:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90016f66:	4417      	add	r7, r2
90016f68:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
90016f6a:	f88d 3020 	strb.w	r3, [sp, #32]
90016f6e:	4417      	add	r7, r2
90016f70:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90016f74:	1ab6      	subs	r6, r6, r2
90016f76:	892a      	ldrh	r2, [r5, #8]
90016f78:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90016f7c:	4416      	add	r6, r2
90016f7e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90016f80:	4416      	add	r6, r2
90016f82:	4a08      	ldr	r2, [pc, #32]	@ (90016fa4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90016f84:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
90016f88:	2600      	movs	r6, #0
90016f8a:	9207      	str	r2, [sp, #28]
90016f8c:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
90016f90:	6803      	ldr	r3, [r0, #0]
90016f92:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016f94:	4798      	blx	r3
90016f96:	792b      	ldrb	r3, [r5, #4]
90016f98:	b10b      	cbz	r3, 90016f9e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016f9a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
90016f9e:	b00a      	add	sp, #40	@ 0x28
90016fa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016fa4:	9002c384 	.word	0x9002c384

90016fa8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90016fa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016fac:	460c      	mov	r4, r1
90016fae:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90016fb0:	b088      	sub	sp, #32
90016fb2:	4605      	mov	r5, r0
90016fb4:	2900      	cmp	r1, #0
90016fb6:	d06d      	beq.n	90017094 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90016fb8:	4668      	mov	r0, sp
90016fba:	f7ff fab9 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016fbe:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
90016fc0:	88e3      	ldrh	r3, [r4, #6]
90016fc2:	f9bd 8000 	ldrsh.w	r8, [sp]
90016fc6:	440b      	add	r3, r1
90016fc8:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90016fcc:	b21b      	sxth	r3, r3
90016fce:	4543      	cmp	r3, r8
90016fd0:	db31      	blt.n	90017036 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016fd2:	f8bd c004 	ldrh.w	ip, [sp, #4]
90016fd6:	44c4      	add	ip, r8
90016fd8:	fa0f fc8c 	sxth.w	ip, ip
90016fdc:	4563      	cmp	r3, ip
90016fde:	da2a      	bge.n	90017036 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016fe0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
90016fe2:	8926      	ldrh	r6, [r4, #8]
90016fe4:	4416      	add	r6, r2
90016fe6:	b236      	sxth	r6, r6
90016fe8:	42be      	cmp	r6, r7
90016fea:	db24      	blt.n	90017036 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016fec:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90016ff0:	4438      	add	r0, r7
90016ff2:	b200      	sxth	r0, r0
90016ff4:	4286      	cmp	r6, r0
90016ff6:	da1e      	bge.n	90017036 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016ff8:	8963      	ldrh	r3, [r4, #10]
90016ffa:	4419      	add	r1, r3
90016ffc:	b209      	sxth	r1, r1
90016ffe:	4541      	cmp	r1, r8
90017000:	db08      	blt.n	90017014 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017002:	4561      	cmp	r1, ip
90017004:	da06      	bge.n	90017014 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017006:	89a3      	ldrh	r3, [r4, #12]
90017008:	441a      	add	r2, r3
9001700a:	b212      	sxth	r2, r2
9001700c:	42ba      	cmp	r2, r7
9001700e:	db01      	blt.n	90017014 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017010:	4282      	cmp	r2, r0
90017012:	db10      	blt.n	90017036 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017014:	4b21      	ldr	r3, [pc, #132]	@ (9001709c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90017016:	a904      	add	r1, sp, #16
90017018:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001701a:	9304      	str	r3, [sp, #16]
9001701c:	2302      	movs	r3, #2
9001701e:	f88d 3014 	strb.w	r3, [sp, #20]
90017022:	2300      	movs	r3, #0
90017024:	f8ad 3016 	strh.w	r3, [sp, #22]
90017028:	f8ad 3018 	strh.w	r3, [sp, #24]
9001702c:	f8ad 301a 	strh.w	r3, [sp, #26]
90017030:	6803      	ldr	r3, [r0, #0]
90017032:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017034:	4798      	blx	r3
90017036:	1d29      	adds	r1, r5, #4
90017038:	a802      	add	r0, sp, #8
9001703a:	f7ff fa79 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001703e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90017042:	88e0      	ldrh	r0, [r4, #6]
90017044:	eba3 0808 	sub.w	r8, r3, r8
90017048:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001704c:	7921      	ldrb	r1, [r4, #4]
9001704e:	fa1f f888 	uxth.w	r8, r8
90017052:	1bdf      	subs	r7, r3, r7
90017054:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
90017058:	b2bb      	uxth	r3, r7
9001705a:	4440      	add	r0, r8
9001705c:	8922      	ldrh	r2, [r4, #8]
9001705e:	8967      	ldrh	r7, [r4, #10]
90017060:	4460      	add	r0, ip
90017062:	89a4      	ldrh	r4, [r4, #12]
90017064:	441a      	add	r2, r3
90017066:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
90017068:	44b8      	add	r8, r7
9001706a:	4423      	add	r3, r4
9001706c:	f8ad 0016 	strh.w	r0, [sp, #22]
90017070:	4432      	add	r2, r6
90017072:	44e0      	add	r8, ip
90017074:	4433      	add	r3, r6
90017076:	4c0a      	ldr	r4, [pc, #40]	@ (900170a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90017078:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001707a:	f88d 1014 	strb.w	r1, [sp, #20]
9001707e:	a904      	add	r1, sp, #16
90017080:	9404      	str	r4, [sp, #16]
90017082:	f8ad 2018 	strh.w	r2, [sp, #24]
90017086:	f8ad 801a 	strh.w	r8, [sp, #26]
9001708a:	f8ad 301c 	strh.w	r3, [sp, #28]
9001708e:	6803      	ldr	r3, [r0, #0]
90017090:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90017092:	4798      	blx	r3
90017094:	b008      	add	sp, #32
90017096:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001709a:	bf00      	nop
9001709c:	9002c384 	.word	0x9002c384
900170a0:	9002c398 	.word	0x9002c398

900170a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900170a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900170a6:	4604      	mov	r4, r0
900170a8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900170ac:	3201      	adds	r2, #1
900170ae:	d112      	bne.n	900170d6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900170b0:	2500      	movs	r5, #0
900170b2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900170b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900170ba:	6803      	ldr	r3, [r0, #0]
900170bc:	9500      	str	r5, [sp, #0]
900170be:	466d      	mov	r5, sp
900170c0:	f8ad 1004 	strh.w	r1, [sp, #4]
900170c4:	f8ad 2006 	strh.w	r2, [sp, #6]
900170c8:	4629      	mov	r1, r5
900170ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900170cc:	4798      	blx	r3
900170ce:	e895 0003 	ldmia.w	r5, {r0, r1}
900170d2:	e884 0003 	stmia.w	r4, {r0, r1}
900170d6:	4620      	mov	r0, r4
900170d8:	b003      	add	sp, #12
900170da:	bd30      	pop	{r4, r5, pc}

900170dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900170dc:	b513      	push	{r0, r1, r4, lr}
900170de:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900170e2:	4604      	mov	r4, r0
900170e4:	3301      	adds	r3, #1
900170e6:	d109      	bne.n	900170fc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
900170e8:	4601      	mov	r1, r0
900170ea:	4668      	mov	r0, sp
900170ec:	f7ff fa20 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900170f0:	f8bd 3000 	ldrh.w	r3, [sp]
900170f4:	8423      	strh	r3, [r4, #32]
900170f6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900170fa:	8463      	strh	r3, [r4, #34]	@ 0x22
900170fc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90017100:	b002      	add	sp, #8
90017102:	bd10      	pop	{r4, pc}

90017104 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90017104:	b513      	push	{r0, r1, r4, lr}
90017106:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
9001710a:	4604      	mov	r4, r0
9001710c:	3301      	adds	r3, #1
9001710e:	d109      	bne.n	90017124 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90017110:	4601      	mov	r1, r0
90017112:	4668      	mov	r0, sp
90017114:	f7ff fa0c 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017118:	f8bd 3000 	ldrh.w	r3, [sp]
9001711c:	8423      	strh	r3, [r4, #32]
9001711e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017122:	8463      	strh	r3, [r4, #34]	@ 0x22
90017124:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
90017128:	b002      	add	sp, #8
9001712a:	bd10      	pop	{r4, pc}

9001712c <_ZN8touchgfx6ScreenC1Ev>:
9001712c:	b570      	push	{r4, r5, r6, lr}
9001712e:	4b17      	ldr	r3, [pc, #92]	@ (9001718c <_ZN8touchgfx6ScreenC1Ev+0x60>)
90017130:	4605      	mov	r5, r0
90017132:	4a17      	ldr	r2, [pc, #92]	@ (90017190 <_ZN8touchgfx6ScreenC1Ev+0x64>)
90017134:	2101      	movs	r1, #1
90017136:	f845 3b04 	str.w	r3, [r5], #4
9001713a:	2300      	movs	r3, #0
9001713c:	6042      	str	r2, [r0, #4]
9001713e:	4604      	mov	r4, r0
90017140:	8103      	strh	r3, [r0, #8]
90017142:	8143      	strh	r3, [r0, #10]
90017144:	8183      	strh	r3, [r0, #12]
90017146:	81c3      	strh	r3, [r0, #14]
90017148:	8203      	strh	r3, [r0, #16]
9001714a:	8243      	strh	r3, [r0, #18]
9001714c:	8283      	strh	r3, [r0, #20]
9001714e:	82c3      	strh	r3, [r0, #22]
90017150:	6203      	str	r3, [r0, #32]
90017152:	8483      	strh	r3, [r0, #36]	@ 0x24
90017154:	84c3      	strh	r3, [r0, #38]	@ 0x26
90017156:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001715a:	6343      	str	r3, [r0, #52]	@ 0x34
9001715c:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
90017160:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
90017164:	e9c0 3306 	strd	r3, r3, [r0, #24]
90017168:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
9001716c:	4b09      	ldr	r3, [pc, #36]	@ (90017194 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001716e:	4628      	mov	r0, r5
90017170:	f9b3 6000 	ldrsh.w	r6, [r3]
90017174:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90017176:	4a08      	ldr	r2, [pc, #32]	@ (90017198 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90017178:	f9b2 1000 	ldrsh.w	r1, [r2]
9001717c:	4798      	blx	r3
9001717e:	6863      	ldr	r3, [r4, #4]
90017180:	4628      	mov	r0, r5
90017182:	4631      	mov	r1, r6
90017184:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90017186:	4798      	blx	r3
90017188:	4620      	mov	r0, r4
9001718a:	bd70      	pop	{r4, r5, r6, pc}
9001718c:	9002c3c0 	.word	0x9002c3c0
90017190:	9002bd54 	.word	0x9002bd54
90017194:	240218aa 	.word	0x240218aa
90017198:	240218a8 	.word	0x240218a8

9001719c <_ZN8touchgfx6Screen4drawEv>:
9001719c:	4b09      	ldr	r3, [pc, #36]	@ (900171c4 <_ZN8touchgfx6Screen4drawEv+0x28>)
9001719e:	b507      	push	{r0, r1, r2, lr}
900171a0:	f9b3 2000 	ldrsh.w	r2, [r3]
900171a4:	2100      	movs	r1, #0
900171a6:	4b08      	ldr	r3, [pc, #32]	@ (900171c8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900171a8:	9100      	str	r1, [sp, #0]
900171aa:	4669      	mov	r1, sp
900171ac:	f9b3 3000 	ldrsh.w	r3, [r3]
900171b0:	f8ad 2004 	strh.w	r2, [sp, #4]
900171b4:	f8ad 3006 	strh.w	r3, [sp, #6]
900171b8:	6803      	ldr	r3, [r0, #0]
900171ba:	689b      	ldr	r3, [r3, #8]
900171bc:	4798      	blx	r3
900171be:	b003      	add	sp, #12
900171c0:	f85d fb04 	ldr.w	pc, [sp], #4
900171c4:	240218a8 	.word	0x240218a8
900171c8:	240218aa 	.word	0x240218aa

900171cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900171cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900171d0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900171d4:	b089      	sub	sp, #36	@ 0x24
900171d6:	4680      	mov	r8, r0
900171d8:	460c      	mov	r4, r1
900171da:	2b00      	cmp	r3, #0
900171dc:	4615      	mov	r5, r2
900171de:	dd0e      	ble.n	900171fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900171e0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900171e4:	2b00      	cmp	r3, #0
900171e6:	dd0a      	ble.n	900171fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900171e8:	4628      	mov	r0, r5
900171ea:	f7ff ff5b 	bl	900170a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900171ee:	4621      	mov	r1, r4
900171f0:	f7fd ffab 	bl	9001514a <_ZNK8touchgfx4Rect9intersectERKS0_>
900171f4:	69eb      	ldr	r3, [r5, #28]
900171f6:	b928      	cbnz	r0, 90017204 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
900171f8:	461d      	mov	r5, r3
900171fa:	2b00      	cmp	r3, #0
900171fc:	d1f4      	bne.n	900171e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
900171fe:	b009      	add	sp, #36	@ 0x24
90017200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017204:	ae04      	add	r6, sp, #16
90017206:	2b00      	cmp	r3, #0
90017208:	f000 80b5 	beq.w	90017376 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001720c:	682b      	ldr	r3, [r5, #0]
9001720e:	4629      	mov	r1, r5
90017210:	a802      	add	r0, sp, #8
90017212:	68db      	ldr	r3, [r3, #12]
90017214:	4798      	blx	r3
90017216:	4628      	mov	r0, r5
90017218:	f7ff ff60 	bl	900170dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001721c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90017220:	4407      	add	r7, r0
90017222:	4628      	mov	r0, r5
90017224:	f7ff ff6e 	bl	90017104 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90017228:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001722c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90017230:	b23f      	sxth	r7, r7
90017232:	4418      	add	r0, r3
90017234:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90017238:	4621      	mov	r1, r4
9001723a:	f8ad 2014 	strh.w	r2, [sp, #20]
9001723e:	f8ad 0012 	strh.w	r0, [sp, #18]
90017242:	4630      	mov	r0, r6
90017244:	f8ad 3016 	strh.w	r3, [sp, #22]
90017248:	f8ad 7010 	strh.w	r7, [sp, #16]
9001724c:	f7f8 fa00 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
90017250:	4628      	mov	r0, r5
90017252:	f7ff ff27 	bl	900170a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017256:	ab06      	add	r3, sp, #24
90017258:	4602      	mov	r2, r0
9001725a:	e896 0003 	ldmia.w	r6, {r0, r1}
9001725e:	e883 0003 	stmia.w	r3, {r0, r1}
90017262:	4611      	mov	r1, r2
90017264:	4618      	mov	r0, r3
90017266:	f7f8 f9f3 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9001726a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001726e:	f9b4 1000 	ldrsh.w	r1, [r4]
90017272:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90017276:	4299      	cmp	r1, r3
90017278:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
9001727c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90017280:	d10b      	bne.n	9001729a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017282:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90017286:	4552      	cmp	r2, sl
90017288:	d107      	bne.n	9001729a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001728a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001728e:	455a      	cmp	r2, fp
90017290:	d103      	bne.n	9001729a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017292:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90017296:	454a      	cmp	r2, r9
90017298:	d06d      	beq.n	90017376 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001729a:	f1bb 0f00 	cmp.w	fp, #0
9001729e:	dd65      	ble.n	9001736c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900172a0:	f1b9 0f00 	cmp.w	r9, #0
900172a4:	dd62      	ble.n	9001736c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900172a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900172aa:	fa1f f08a 	uxth.w	r0, sl
900172ae:	4552      	cmp	r2, sl
900172b0:	9000      	str	r0, [sp, #0]
900172b2:	da12      	bge.n	900172da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
900172b4:	9301      	str	r3, [sp, #4]
900172b6:	9b00      	ldr	r3, [sp, #0]
900172b8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900172bc:	f8ad 2012 	strh.w	r2, [sp, #18]
900172c0:	1a9a      	subs	r2, r3, r2
900172c2:	f8ad 1010 	strh.w	r1, [sp, #16]
900172c6:	4631      	mov	r1, r6
900172c8:	f8ad 0014 	strh.w	r0, [sp, #20]
900172cc:	4640      	mov	r0, r8
900172ce:	f8ad 2016 	strh.w	r2, [sp, #22]
900172d2:	69ea      	ldr	r2, [r5, #28]
900172d4:	f7ff ff7a 	bl	900171cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900172d8:	9b01      	ldr	r3, [sp, #4]
900172da:	f9b4 2000 	ldrsh.w	r2, [r4]
900172de:	b29f      	uxth	r7, r3
900172e0:	429a      	cmp	r2, r3
900172e2:	da0d      	bge.n	90017300 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900172e4:	f8ad 2010 	strh.w	r2, [sp, #16]
900172e8:	1aba      	subs	r2, r7, r2
900172ea:	f8ad a012 	strh.w	sl, [sp, #18]
900172ee:	4631      	mov	r1, r6
900172f0:	f8ad 2014 	strh.w	r2, [sp, #20]
900172f4:	4640      	mov	r0, r8
900172f6:	f8ad 9016 	strh.w	r9, [sp, #22]
900172fa:	69ea      	ldr	r2, [r5, #28]
900172fc:	f7ff ff66 	bl	900171cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017300:	8822      	ldrh	r2, [r4, #0]
90017302:	445f      	add	r7, fp
90017304:	88a3      	ldrh	r3, [r4, #4]
90017306:	b2bf      	uxth	r7, r7
90017308:	4413      	add	r3, r2
9001730a:	b23a      	sxth	r2, r7
9001730c:	b29b      	uxth	r3, r3
9001730e:	b219      	sxth	r1, r3
90017310:	4291      	cmp	r1, r2
90017312:	dd0d      	ble.n	90017330 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90017314:	1bdb      	subs	r3, r3, r7
90017316:	f8ad 2010 	strh.w	r2, [sp, #16]
9001731a:	f8ad a012 	strh.w	sl, [sp, #18]
9001731e:	4631      	mov	r1, r6
90017320:	f8ad 3014 	strh.w	r3, [sp, #20]
90017324:	4640      	mov	r0, r8
90017326:	f8ad 9016 	strh.w	r9, [sp, #22]
9001732a:	69ea      	ldr	r2, [r5, #28]
9001732c:	f7ff ff4e 	bl	900171cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017330:	88e2      	ldrh	r2, [r4, #6]
90017332:	8863      	ldrh	r3, [r4, #2]
90017334:	4413      	add	r3, r2
90017336:	9a00      	ldr	r2, [sp, #0]
90017338:	444a      	add	r2, r9
9001733a:	b29b      	uxth	r3, r3
9001733c:	fa1f f982 	uxth.w	r9, r2
90017340:	b219      	sxth	r1, r3
90017342:	fa0f f289 	sxth.w	r2, r9
90017346:	428a      	cmp	r2, r1
90017348:	da15      	bge.n	90017376 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001734a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001734e:	eba3 0309 	sub.w	r3, r3, r9
90017352:	f9b4 0000 	ldrsh.w	r0, [r4]
90017356:	f8ad 1014 	strh.w	r1, [sp, #20]
9001735a:	4631      	mov	r1, r6
9001735c:	f8ad 0010 	strh.w	r0, [sp, #16]
90017360:	f8ad 2012 	strh.w	r2, [sp, #18]
90017364:	f8ad 3016 	strh.w	r3, [sp, #22]
90017368:	69ea      	ldr	r2, [r5, #28]
9001736a:	e001      	b.n	90017370 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
9001736c:	69ea      	ldr	r2, [r5, #28]
9001736e:	4621      	mov	r1, r4
90017370:	4640      	mov	r0, r8
90017372:	f7ff ff2b 	bl	900171cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017376:	4628      	mov	r0, r5
90017378:	f7ff fe94 	bl	900170a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001737c:	6861      	ldr	r1, [r4, #4]
9001737e:	4602      	mov	r2, r0
90017380:	4633      	mov	r3, r6
90017382:	6820      	ldr	r0, [r4, #0]
90017384:	c303      	stmia	r3!, {r0, r1}
90017386:	4611      	mov	r1, r2
90017388:	4630      	mov	r0, r6
9001738a:	f7f8 f961 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9001738e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90017392:	2b00      	cmp	r3, #0
90017394:	f77f af33 	ble.w	900171fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017398:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001739c:	2b00      	cmp	r3, #0
9001739e:	f77f af2e 	ble.w	900171fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900173a2:	4628      	mov	r0, r5
900173a4:	f7ff fe9a 	bl	900170dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900173a8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
900173ac:	1a18      	subs	r0, r3, r0
900173ae:	f8ad 0010 	strh.w	r0, [sp, #16]
900173b2:	4628      	mov	r0, r5
900173b4:	f7ff fea6 	bl	90017104 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900173b8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900173bc:	4631      	mov	r1, r6
900173be:	1a18      	subs	r0, r3, r0
900173c0:	f8ad 0012 	strh.w	r0, [sp, #18]
900173c4:	4628      	mov	r0, r5
900173c6:	682b      	ldr	r3, [r5, #0]
900173c8:	689b      	ldr	r3, [r3, #8]
900173ca:	4798      	blx	r3
900173cc:	e717      	b.n	900171fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

900173ce <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
900173ce:	b570      	push	{r4, r5, r6, lr}
900173d0:	1d06      	adds	r6, r0, #4
900173d2:	b086      	sub	sp, #24
900173d4:	460c      	mov	r4, r1
900173d6:	2300      	movs	r3, #0
900173d8:	4631      	mov	r1, r6
900173da:	4605      	mov	r5, r0
900173dc:	a802      	add	r0, sp, #8
900173de:	9301      	str	r3, [sp, #4]
900173e0:	f7ff f8a6 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900173e4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900173e8:	8822      	ldrh	r2, [r4, #0]
900173ea:	f8bd 100a 	ldrh.w	r1, [sp, #10]
900173ee:	1ad2      	subs	r2, r2, r3
900173f0:	8863      	ldrh	r3, [r4, #2]
900173f2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900173f6:	1a5b      	subs	r3, r3, r1
900173f8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900173fc:	f8ad 2010 	strh.w	r2, [sp, #16]
90017400:	aa01      	add	r2, sp, #4
90017402:	f8ad 0014 	strh.w	r0, [sp, #20]
90017406:	4630      	mov	r0, r6
90017408:	f8ad 1016 	strh.w	r1, [sp, #22]
9001740c:	a904      	add	r1, sp, #16
9001740e:	f8ad 3012 	strh.w	r3, [sp, #18]
90017412:	f7f8 f9f5 	bl	9000f800 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90017416:	9a01      	ldr	r2, [sp, #4]
90017418:	b11a      	cbz	r2, 90017422 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
9001741a:	4621      	mov	r1, r4
9001741c:	4628      	mov	r0, r5
9001741e:	f7ff fed5 	bl	900171cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017422:	b006      	add	sp, #24
90017424:	bd70      	pop	{r4, r5, r6, pc}

90017426 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90017426:	4602      	mov	r2, r0
90017428:	b530      	push	{r4, r5, lr}
9001742a:	4604      	mov	r4, r0
9001742c:	b085      	sub	sp, #20
9001742e:	f852 0f08 	ldr.w	r0, [r2, #8]!
90017432:	460d      	mov	r5, r1
90017434:	466b      	mov	r3, sp
90017436:	6851      	ldr	r1, [r2, #4]
90017438:	c303      	stmia	r3!, {r0, r1}
9001743a:	4629      	mov	r1, r5
9001743c:	4668      	mov	r0, sp
9001743e:	f7f8 f907 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
90017442:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90017446:	b12b      	cbz	r3, 90017454 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90017448:	4669      	mov	r1, sp
9001744a:	4620      	mov	r0, r4
9001744c:	f7ff ffbf 	bl	900173ce <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90017450:	b005      	add	sp, #20
90017452:	bd30      	pop	{r4, r5, pc}
90017454:	3404      	adds	r4, #4
90017456:	a802      	add	r0, sp, #8
90017458:	4621      	mov	r1, r4
9001745a:	f7ff f869 	bl	90016530 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001745e:	f8bd 3000 	ldrh.w	r3, [sp]
90017462:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90017466:	4669      	mov	r1, sp
90017468:	4620      	mov	r0, r4
9001746a:	1a9b      	subs	r3, r3, r2
9001746c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90017470:	f8ad 3000 	strh.w	r3, [sp]
90017474:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017478:	1a9b      	subs	r3, r3, r2
9001747a:	f8ad 3002 	strh.w	r3, [sp, #2]
9001747e:	f7f8 f986 	bl	9000f78e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90017482:	e7e5      	b.n	90017450 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90017484 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90017484:	460b      	mov	r3, r1
90017486:	680a      	ldr	r2, [r1, #0]
90017488:	1d01      	adds	r1, r0, #4
9001748a:	6992      	ldr	r2, [r2, #24]
9001748c:	4618      	mov	r0, r3
9001748e:	4710      	bx	r2

90017490 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90017490:	4298      	cmp	r0, r3
90017492:	d200      	bcs.n	90017496 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
90017494:	b913      	cbnz	r3, 9001749c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
90017496:	440a      	add	r2, r1
90017498:	b210      	sxth	r0, r2
9001749a:	4770      	bx	lr
9001749c:	ee07 0a90 	vmov	s15, r0
900174a0:	eef8 6a67 	vcvt.f32.u32	s13, s15
900174a4:	ee07 3a90 	vmov	s15, r3
900174a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900174ac:	ee86 7aa7 	vdiv.f32	s14, s13, s15
900174b0:	ee07 2a90 	vmov	s15, r2
900174b4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900174b8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
900174bc:	ee07 1a90 	vmov	s15, r1
900174c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900174c4:	ee37 7a66 	vsub.f32	s14, s14, s13
900174c8:	ee67 5a07 	vmul.f32	s11, s14, s14
900174cc:	eee5 6a87 	vfma.f32	s13, s11, s14
900174d0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
900174d4:	eee6 7a26 	vfma.f32	s15, s12, s13
900174d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900174dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900174e0:	bfcc      	ite	gt
900174e2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
900174e6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
900174ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900174ee:	ee17 3a90 	vmov	r3, s15
900174f2:	b218      	sxth	r0, r3
900174f4:	4770      	bx	lr

900174f6 <_ZN8touchgfx12TextProviderC1Ev>:
900174f6:	b538      	push	{r3, r4, r5, lr}
900174f8:	2500      	movs	r5, #0
900174fa:	2302      	movs	r3, #2
900174fc:	4604      	mov	r4, r0
900174fe:	220e      	movs	r2, #14
90017500:	7403      	strb	r3, [r0, #16]
90017502:	4629      	mov	r1, r5
90017504:	6145      	str	r5, [r0, #20]
90017506:	7605      	strb	r5, [r0, #24]
90017508:	83c5      	strh	r5, [r0, #30]
9001750a:	8405      	strh	r5, [r0, #32]
9001750c:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001750e:	8705      	strh	r5, [r0, #56]	@ 0x38
90017510:	87c5      	strh	r5, [r0, #62]	@ 0x3e
90017512:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
90017516:	e9c0 5500 	strd	r5, r5, [r0]
9001751a:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
9001751e:	304c      	adds	r0, #76	@ 0x4c
90017520:	f011 f9c6 	bl	900288b0 <memset>
90017524:	2301      	movs	r3, #1
90017526:	4620      	mov	r0, r4
90017528:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
9001752c:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017530:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
90017534:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
90017538:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
9001753c:	f7ee fab0 	bl	90005aa0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90017540:	4620      	mov	r0, r4
90017542:	bd38      	pop	{r3, r4, r5, pc}

90017544 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90017544:	b530      	push	{r4, r5, lr}
90017546:	2500      	movs	r5, #0
90017548:	2401      	movs	r4, #1
9001754a:	6843      	ldr	r3, [r0, #4]
9001754c:	b913      	cbnz	r3, 90017554 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001754e:	6803      	ldr	r3, [r0, #0]
90017550:	b313      	cbz	r3, 90017598 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90017552:	6043      	str	r3, [r0, #4]
90017554:	7e03      	ldrb	r3, [r0, #24]
90017556:	b143      	cbz	r3, 9001756a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90017558:	6943      	ldr	r3, [r0, #20]
9001755a:	b12b      	cbz	r3, 90017568 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001755c:	881a      	ldrh	r2, [r3, #0]
9001755e:	b11a      	cbz	r2, 90017568 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90017560:	1c9a      	adds	r2, r3, #2
90017562:	6142      	str	r2, [r0, #20]
90017564:	8818      	ldrh	r0, [r3, #0]
90017566:	bd30      	pop	{r4, r5, pc}
90017568:	7605      	strb	r5, [r0, #24]
9001756a:	6843      	ldr	r3, [r0, #4]
9001756c:	8819      	ldrh	r1, [r3, #0]
9001756e:	b199      	cbz	r1, 90017598 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90017570:	1c9a      	adds	r2, r3, #2
90017572:	2902      	cmp	r1, #2
90017574:	6042      	str	r2, [r0, #4]
90017576:	d1f5      	bne.n	90017564 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90017578:	7c03      	ldrb	r3, [r0, #16]
9001757a:	2b01      	cmp	r3, #1
9001757c:	d8e5      	bhi.n	9001754a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001757e:	1c5a      	adds	r2, r3, #1
90017580:	3302      	adds	r3, #2
90017582:	7402      	strb	r2, [r0, #16]
90017584:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90017588:	6143      	str	r3, [r0, #20]
9001758a:	2b00      	cmp	r3, #0
9001758c:	d0dd      	beq.n	9001754a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001758e:	881b      	ldrh	r3, [r3, #0]
90017590:	2b00      	cmp	r3, #0
90017592:	d0da      	beq.n	9001754a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017594:	7604      	strb	r4, [r0, #24]
90017596:	e7d8      	b.n	9001754a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017598:	2000      	movs	r0, #0
9001759a:	e7e4      	b.n	90017566 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001759c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001759c:	6001      	str	r1, [r0, #0]
9001759e:	2100      	movs	r1, #0
900175a0:	b430      	push	{r4, r5}
900175a2:	6041      	str	r1, [r0, #4]
900175a4:	6815      	ldr	r5, [r2, #0]
900175a6:	6085      	str	r5, [r0, #8]
900175a8:	6852      	ldr	r2, [r2, #4]
900175aa:	6443      	str	r3, [r0, #68]	@ 0x44
900175ac:	9b02      	ldr	r3, [sp, #8]
900175ae:	60c2      	str	r2, [r0, #12]
900175b0:	7401      	strb	r1, [r0, #16]
900175b2:	6141      	str	r1, [r0, #20]
900175b4:	7601      	strb	r1, [r0, #24]
900175b6:	8701      	strh	r1, [r0, #56]	@ 0x38
900175b8:	8401      	strh	r1, [r0, #32]
900175ba:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
900175be:	6483      	str	r3, [r0, #72]	@ 0x48
900175c0:	bc30      	pop	{r4, r5}
900175c2:	f7ee ba6d 	b.w	90005aa0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

900175c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
900175c6:	b5f0      	push	{r4, r5, r6, r7, lr}
900175c8:	4605      	mov	r5, r0
900175ca:	4608      	mov	r0, r1
900175cc:	b1f1      	cbz	r1, 9001760c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
900175ce:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
900175d2:	460b      	mov	r3, r1
900175d4:	f101 0708 	add.w	r7, r1, #8
900175d8:	4622      	mov	r2, r4
900175da:	6818      	ldr	r0, [r3, #0]
900175dc:	3308      	adds	r3, #8
900175de:	f853 1c04 	ldr.w	r1, [r3, #-4]
900175e2:	4626      	mov	r6, r4
900175e4:	42bb      	cmp	r3, r7
900175e6:	c603      	stmia	r6!, {r0, r1}
900175e8:	4634      	mov	r4, r6
900175ea:	d1f6      	bne.n	900175da <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
900175ec:	6818      	ldr	r0, [r3, #0]
900175ee:	6030      	str	r0, [r6, #0]
900175f0:	4610      	mov	r0, r2
900175f2:	889b      	ldrh	r3, [r3, #4]
900175f4:	80b3      	strh	r3, [r6, #4]
900175f6:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900175fa:	015b      	lsls	r3, r3, #5
900175fc:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90017600:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
90017604:	430b      	orrs	r3, r1
90017606:	425b      	negs	r3, r3
90017608:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001760c:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001760e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001760e:	b538      	push	{r3, r4, r5, lr}
90017610:	460c      	mov	r4, r1
90017612:	6811      	ldr	r1, [r2, #0]
90017614:	4610      	mov	r0, r2
90017616:	68cd      	ldr	r5, [r1, #12]
90017618:	4619      	mov	r1, r3
9001761a:	47a8      	blx	r5
9001761c:	2800      	cmp	r0, #0
9001761e:	bf08      	it	eq
90017620:	4620      	moveq	r0, r4
90017622:	bd38      	pop	{r3, r4, r5, pc}

90017624 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90017624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017628:	468c      	mov	ip, r1
9001762a:	4604      	mov	r4, r0
9001762c:	4615      	mov	r5, r2
9001762e:	b942      	cbnz	r2, 90017642 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
90017630:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
90017634:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
90017638:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
9001763c:	4628      	mov	r0, r5
9001763e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017642:	7b50      	ldrb	r0, [r2, #13]
90017644:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
90017648:	8893      	ldrh	r3, [r2, #4]
9001764a:	0106      	lsls	r6, r0, #4
9001764c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90017650:	79ee      	ldrb	r6, [r5, #7]
90017652:	4316      	orrs	r6, r2
90017654:	185a      	adds	r2, r3, r1
90017656:	b291      	uxth	r1, r2
90017658:	b2b7      	uxth	r7, r6
9001765a:	291d      	cmp	r1, #29
9001765c:	d87f      	bhi.n	9001775e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
9001765e:	2201      	movs	r2, #1
90017660:	10f6      	asrs	r6, r6, #3
90017662:	408a      	lsls	r2, r1
90017664:	4974      	ldr	r1, [pc, #464]	@ (90017838 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90017666:	420a      	tst	r2, r1
90017668:	d12e      	bne.n	900176c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001766a:	f412 7f60 	tst.w	r2, #896	@ 0x380
9001766e:	d076      	beq.n	9001775e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90017670:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
90017674:	462b      	mov	r3, r5
90017676:	f105 0e08 	add.w	lr, r5, #8
9001767a:	4615      	mov	r5, r2
9001767c:	6818      	ldr	r0, [r3, #0]
9001767e:	3308      	adds	r3, #8
90017680:	f853 1c04 	ldr.w	r1, [r3, #-4]
90017684:	4694      	mov	ip, r2
90017686:	4573      	cmp	r3, lr
90017688:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001768c:	4662      	mov	r2, ip
9001768e:	d1f5      	bne.n	9001767c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90017690:	6818      	ldr	r0, [r3, #0]
90017692:	f8cc 0000 	str.w	r0, [ip]
90017696:	889b      	ldrh	r3, [r3, #4]
90017698:	f8ac 3004 	strh.w	r3, [ip, #4]
9001769c:	b2b3      	uxth	r3, r6
9001769e:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
900176a2:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
900176a6:	1aca      	subs	r2, r1, r3
900176a8:	1bcf      	subs	r7, r1, r7
900176aa:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
900176ae:	b292      	uxth	r2, r2
900176b0:	1afb      	subs	r3, r7, r3
900176b2:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
900176b6:	10d2      	asrs	r2, r2, #3
900176b8:	f002 0260 	and.w	r2, r2, #96	@ 0x60
900176bc:	4302      	orrs	r2, r0
900176be:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
900176c2:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
900176c6:	e7b9      	b.n	9001763c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
900176c8:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
900176cc:	462b      	mov	r3, r5
900176ce:	f105 0808 	add.w	r8, r5, #8
900176d2:	4615      	mov	r5, r2
900176d4:	6818      	ldr	r0, [r3, #0]
900176d6:	3308      	adds	r3, #8
900176d8:	f853 1c04 	ldr.w	r1, [r3, #-4]
900176dc:	4696      	mov	lr, r2
900176de:	4543      	cmp	r3, r8
900176e0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900176e4:	4672      	mov	r2, lr
900176e6:	d1f5      	bne.n	900176d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
900176e8:	6818      	ldr	r0, [r3, #0]
900176ea:	f8ce 0000 	str.w	r0, [lr]
900176ee:	889b      	ldrh	r3, [r3, #4]
900176f0:	f8ae 3004 	strh.w	r3, [lr, #4]
900176f4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
900176f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900176fa:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
900176fc:	f640 6333 	movw	r3, #3635	@ 0xe33
90017700:	4299      	cmp	r1, r3
90017702:	d111      	bne.n	90017728 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
90017704:	f8dc 3000 	ldr.w	r3, [ip]
90017708:	4660      	mov	r0, ip
9001770a:	68db      	ldr	r3, [r3, #12]
9001770c:	4798      	blx	r3
9001770e:	7b41      	ldrb	r1, [r0, #13]
90017710:	00cb      	lsls	r3, r1, #3
90017712:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017716:	7a03      	ldrb	r3, [r0, #8]
90017718:	4313      	orrs	r3, r2
9001771a:	064a      	lsls	r2, r1, #25
9001771c:	bf44      	itt	mi
9001771e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017722:	b21b      	sxthmi	r3, r3
90017724:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017728:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
9001772c:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90017730:	443b      	add	r3, r7
90017732:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90017736:	4433      	add	r3, r6
90017738:	b29b      	uxth	r3, r3
9001773a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001773e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017742:	10db      	asrs	r3, r3, #3
90017744:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017748:	4313      	orrs	r3, r2
9001774a:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
9001774e:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90017752:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
90017756:	1a9b      	subs	r3, r3, r2
90017758:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
9001775c:	e76e      	b.n	9001763c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
9001775e:	f023 0204 	bic.w	r2, r3, #4
90017762:	f640 611b 	movw	r1, #3611	@ 0xe1b
90017766:	428a      	cmp	r2, r1
90017768:	d003      	beq.n	90017772 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
9001776a:	f640 621d 	movw	r2, #3613	@ 0xe1d
9001776e:	4293      	cmp	r3, r2
90017770:	d120      	bne.n	900177b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x190>
90017772:	3b01      	subs	r3, #1
90017774:	4662      	mov	r2, ip
90017776:	4629      	mov	r1, r5
90017778:	4620      	mov	r0, r4
9001777a:	b29b      	uxth	r3, r3
9001777c:	f7ff ff47 	bl	9001760e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90017780:	7b41      	ldrb	r1, [r0, #13]
90017782:	00cb      	lsls	r3, r1, #3
90017784:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017788:	7a03      	ldrb	r3, [r0, #8]
9001778a:	0648      	lsls	r0, r1, #25
9001778c:	ea43 0302 	orr.w	r3, r3, r2
90017790:	bf44      	itt	mi
90017792:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017796:	b21b      	sxthmi	r3, r3
90017798:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001779c:	7b6b      	ldrb	r3, [r5, #13]
9001779e:	7aaa      	ldrb	r2, [r5, #10]
900177a0:	005b      	lsls	r3, r3, #1
900177a2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900177a6:	4313      	orrs	r3, r2
900177a8:	115a      	asrs	r2, r3, #5
900177aa:	eb02 0393 	add.w	r3, r2, r3, lsr #2
900177ae:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
900177b2:	e032      	b.n	9001781a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
900177b4:	00c2      	lsls	r2, r0, #3
900177b6:	f402 7180 	and.w	r1, r2, #256	@ 0x100
900177ba:	7a2a      	ldrb	r2, [r5, #8]
900177bc:	430a      	orrs	r2, r1
900177be:	0641      	lsls	r1, r0, #25
900177c0:	f640 6109 	movw	r1, #3593	@ 0xe09
900177c4:	bf44      	itt	mi
900177c6:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
900177ca:	b212      	sxthmi	r2, r2
900177cc:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
900177d0:	f023 0210 	bic.w	r2, r3, #16
900177d4:	428a      	cmp	r2, r1
900177d6:	d003      	beq.n	900177e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
900177d8:	f640 6213 	movw	r2, #3603	@ 0xe13
900177dc:	4293      	cmp	r3, r2
900177de:	d129      	bne.n	90017834 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>
900177e0:	7b6e      	ldrb	r6, [r5, #13]
900177e2:	4629      	mov	r1, r5
900177e4:	4620      	mov	r0, r4
900177e6:	0076      	lsls	r6, r6, #1
900177e8:	f406 7280 	and.w	r2, r6, #256	@ 0x100
900177ec:	7aae      	ldrb	r6, [r5, #10]
900177ee:	4316      	orrs	r6, r2
900177f0:	f640 6213 	movw	r2, #3603	@ 0xe13
900177f4:	4293      	cmp	r3, r2
900177f6:	4662      	mov	r2, ip
900177f8:	bf16      	itet	ne
900177fa:	f103 33ff 	addne.w	r3, r3, #4294967295
900177fe:	f640 630c 	movweq	r3, #3596	@ 0xe0c
90017802:	b29b      	uxthne	r3, r3
90017804:	f7ff ff03 	bl	9001760e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90017808:	7b43      	ldrb	r3, [r0, #13]
9001780a:	7a82      	ldrb	r2, [r0, #10]
9001780c:	005b      	lsls	r3, r3, #1
9001780e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017812:	4313      	orrs	r3, r2
90017814:	1af6      	subs	r6, r6, r3
90017816:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
9001781a:	7b69      	ldrb	r1, [r5, #13]
9001781c:	00cb      	lsls	r3, r1, #3
9001781e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017822:	7a2b      	ldrb	r3, [r5, #8]
90017824:	4313      	orrs	r3, r2
90017826:	064a      	lsls	r2, r1, #25
90017828:	bf44      	itt	mi
9001782a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001782e:	b21b      	sxthmi	r3, r3
90017830:	1bdb      	subs	r3, r3, r7
90017832:	e746      	b.n	900176c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90017834:	2300      	movs	r3, #0
90017836:	e7ba      	b.n	900177ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18a>
90017838:	3fc00079 	.word	0x3fc00079

9001783c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001783c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017840:	4604      	mov	r4, r0
90017842:	b942      	cbnz	r2, 90017856 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90017844:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90017848:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
9001784c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90017850:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90017854:	e047      	b.n	900178e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90017856:	7b51      	ldrb	r1, [r2, #13]
90017858:	8893      	ldrh	r3, [r2, #4]
9001785a:	010d      	lsls	r5, r1, #4
9001785c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
90017860:	79d5      	ldrb	r5, [r2, #7]
90017862:	4305      	orrs	r5, r0
90017864:	2d04      	cmp	r5, #4
90017866:	bfcc      	ite	gt
90017868:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001786c:	f04f 0e01 	movle.w	lr, #1
90017870:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
90017874:	f200 80ab 	bhi.w	900179ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90017878:	f240 60e7 	movw	r0, #1767	@ 0x6e7
9001787c:	4283      	cmp	r3, r0
9001787e:	d216      	bcs.n	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017880:	f240 605b 	movw	r0, #1627	@ 0x65b
90017884:	4283      	cmp	r3, r0
90017886:	d859      	bhi.n	9001793c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90017888:	f240 6057 	movw	r0, #1623	@ 0x657
9001788c:	4283      	cmp	r3, r0
9001788e:	d20e      	bcs.n	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017890:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90017894:	d24a      	bcs.n	9001792c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90017896:	f240 604e 	movw	r0, #1614	@ 0x64e
9001789a:	4283      	cmp	r3, r0
9001789c:	d207      	bcs.n	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001789e:	f240 601a 	movw	r0, #1562	@ 0x61a
900178a2:	4283      	cmp	r3, r0
900178a4:	d02a      	beq.n	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900178a6:	d821      	bhi.n	900178ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
900178a8:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
900178ac:	d35b      	bcc.n	90017966 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900178ae:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
900178b2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900178b6:	f040 80d0 	bne.w	90017a5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900178ba:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
900178be:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900178c2:	f040 80ca 	bne.w	90017a5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900178c6:	00cb      	lsls	r3, r1, #3
900178c8:	0649      	lsls	r1, r1, #25
900178ca:	f403 7080 	and.w	r0, r3, #256	@ 0x100
900178ce:	7a13      	ldrb	r3, [r2, #8]
900178d0:	ea43 0300 	orr.w	r3, r3, r0
900178d4:	bf44      	itt	mi
900178d6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900178da:	b21b      	sxthmi	r3, r3
900178dc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
900178e0:	1b5d      	subs	r5, r3, r5
900178e2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900178e6:	4610      	mov	r0, r2
900178e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900178ec:	f240 604b 	movw	r0, #1611	@ 0x64b
900178f0:	4283      	cmp	r3, r0
900178f2:	d338      	bcc.n	90017966 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900178f4:	f240 604c 	movw	r0, #1612	@ 0x64c
900178f8:	4283      	cmp	r3, r0
900178fa:	d9d8      	bls.n	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900178fc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
90017900:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
90017904:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017908:	f040 80f3 	bne.w	90017af2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001790c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017910:	f040 80ef 	bne.w	90017af2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90017914:	00cb      	lsls	r3, r1, #3
90017916:	064e      	lsls	r6, r1, #25
90017918:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001791c:	7a13      	ldrb	r3, [r2, #8]
9001791e:	ea43 0300 	orr.w	r3, r3, r0
90017922:	bf44      	itt	mi
90017924:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017928:	b21b      	sxthmi	r3, r3
9001792a:	e7d9      	b.n	900178e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001792c:	f240 6054 	movw	r0, #1620	@ 0x654
90017930:	4283      	cmp	r3, r0
90017932:	d8e3      	bhi.n	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017934:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90017938:	d9e0      	bls.n	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001793a:	e7b8      	b.n	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001793c:	f240 6074 	movw	r0, #1652	@ 0x674
90017940:	4283      	cmp	r3, r0
90017942:	d0b4      	beq.n	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017944:	d82d      	bhi.n	900179a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90017946:	f240 605e 	movw	r0, #1630	@ 0x65e
9001794a:	4283      	cmp	r3, r0
9001794c:	d804      	bhi.n	90017958 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001794e:	f240 605d 	movw	r0, #1629	@ 0x65d
90017952:	4283      	cmp	r3, r0
90017954:	d3d2      	bcc.n	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017956:	e7aa      	b.n	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017958:	f240 605f 	movw	r0, #1631	@ 0x65f
9001795c:	4283      	cmp	r3, r0
9001795e:	d0cd      	beq.n	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017960:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
90017964:	d0a3      	beq.n	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017966:	00cb      	lsls	r3, r1, #3
90017968:	0649      	lsls	r1, r1, #25
9001796a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001796e:	7a13      	ldrb	r3, [r2, #8]
90017970:	ea43 0300 	orr.w	r3, r3, r0
90017974:	bf44      	itt	mi
90017976:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001797a:	b21b      	sxthmi	r3, r3
9001797c:	1b5d      	subs	r5, r3, r5
9001797e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017982:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017986:	7b53      	ldrb	r3, [r2, #13]
90017988:	015b      	lsls	r3, r3, #5
9001798a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001798e:	7993      	ldrb	r3, [r2, #6]
90017990:	430b      	orrs	r3, r1
90017992:	2105      	movs	r1, #5
90017994:	005b      	lsls	r3, r3, #1
90017996:	fb93 f3f1 	sdiv	r3, r3, r1
9001799a:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001799e:	440b      	add	r3, r1
900179a0:	e756      	b.n	90017850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
900179a2:	f240 60e2 	movw	r0, #1762	@ 0x6e2
900179a6:	4283      	cmp	r3, r0
900179a8:	d809      	bhi.n	900179be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
900179aa:	f240 60df 	movw	r0, #1759	@ 0x6df
900179ae:	4283      	cmp	r3, r0
900179b0:	f4bf af7d 	bcs.w	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900179b4:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
900179b8:	2b05      	cmp	r3, #5
900179ba:	d8d4      	bhi.n	90017966 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900179bc:	e777      	b.n	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900179be:	f240 60e3 	movw	r0, #1763	@ 0x6e3
900179c2:	4283      	cmp	r3, r0
900179c4:	d09a      	beq.n	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900179c6:	f240 60e4 	movw	r0, #1764	@ 0x6e4
900179ca:	4283      	cmp	r3, r0
900179cc:	e7ca      	b.n	90017964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
900179ce:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
900179d2:	d22b      	bcs.n	90017a2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
900179d4:	f640 00ed 	movw	r0, #2285	@ 0x8ed
900179d8:	4283      	cmp	r3, r0
900179da:	d28f      	bcs.n	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900179dc:	f640 00e5 	movw	r0, #2277	@ 0x8e5
900179e0:	4283      	cmp	r3, r0
900179e2:	d816      	bhi.n	90017a12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
900179e4:	f640 00e4 	movw	r0, #2276	@ 0x8e4
900179e8:	4283      	cmp	r3, r0
900179ea:	f4bf af60 	bcs.w	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900179ee:	f240 60ec 	movw	r0, #1772	@ 0x6ec
900179f2:	4283      	cmp	r3, r0
900179f4:	d80a      	bhi.n	90017a0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
900179f6:	f240 60eb 	movw	r0, #1771	@ 0x6eb
900179fa:	4283      	cmp	r3, r0
900179fc:	f4bf af57 	bcs.w	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017a00:	f240 60ea 	movw	r0, #1770	@ 0x6ea
90017a04:	4283      	cmp	r3, r0
90017a06:	f43f af79 	beq.w	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017a0a:	e7ac      	b.n	90017966 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017a0c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
90017a10:	e7f8      	b.n	90017a04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90017a12:	f640 00e8 	movw	r0, #2280	@ 0x8e8
90017a16:	4283      	cmp	r3, r0
90017a18:	d802      	bhi.n	90017a20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90017a1a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
90017a1e:	e798      	b.n	90017952 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90017a20:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90017a24:	4283      	cmp	r3, r0
90017a26:	f47f af42 	bne.w	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017a2a:	e767      	b.n	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017a2c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
90017a30:	4283      	cmp	r3, r0
90017a32:	f43f af63 	beq.w	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017a36:	d802      	bhi.n	90017a3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90017a38:	f640 00f2 	movw	r0, #2290	@ 0x8f2
90017a3c:	e7f2      	b.n	90017a24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90017a3e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
90017a42:	4283      	cmp	r3, r0
90017a44:	d805      	bhi.n	90017a52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90017a46:	f640 00f9 	movw	r0, #2297	@ 0x8f9
90017a4a:	4283      	cmp	r3, r0
90017a4c:	f4ff af2f 	bcc.w	900178ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017a50:	e754      	b.n	900178fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017a52:	f640 00fe 	movw	r0, #2302	@ 0x8fe
90017a56:	4283      	cmp	r3, r0
90017a58:	e7af      	b.n	900179ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90017a5a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90017a5e:	4617      	mov	r7, r2
90017a60:	f102 0808 	add.w	r8, r2, #8
90017a64:	4666      	mov	r6, ip
90017a66:	6838      	ldr	r0, [r7, #0]
90017a68:	3708      	adds	r7, #8
90017a6a:	f857 1c04 	ldr.w	r1, [r7, #-4]
90017a6e:	46e6      	mov	lr, ip
90017a70:	4547      	cmp	r7, r8
90017a72:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90017a76:	46f4      	mov	ip, lr
90017a78:	d1f5      	bne.n	90017a66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90017a7a:	6838      	ldr	r0, [r7, #0]
90017a7c:	f8ce 0000 	str.w	r0, [lr]
90017a80:	88b9      	ldrh	r1, [r7, #4]
90017a82:	f8ae 1004 	strh.w	r1, [lr, #4]
90017a86:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90017a8a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017a8e:	d009      	beq.n	90017aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90017a90:	7b51      	ldrb	r1, [r2, #13]
90017a92:	7992      	ldrb	r2, [r2, #6]
90017a94:	0149      	lsls	r1, r1, #5
90017a96:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90017a9a:	4311      	orrs	r1, r2
90017a9c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90017aa0:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90017aa4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017aa8:	b2ad      	uxth	r5, r5
90017aaa:	d00d      	beq.n	90017ac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90017aac:	442b      	add	r3, r5
90017aae:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90017ab2:	b29b      	uxth	r3, r3
90017ab4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90017ab8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017abc:	10db      	asrs	r3, r3, #3
90017abe:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017ac2:	4313      	orrs	r3, r2
90017ac4:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90017ac8:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90017acc:	00cb      	lsls	r3, r1, #3
90017ace:	064f      	lsls	r7, r1, #25
90017ad0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017ad4:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90017ad8:	ea43 0302 	orr.w	r3, r3, r2
90017adc:	bf44      	itt	mi
90017ade:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017ae2:	b21b      	sxthmi	r3, r3
90017ae4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017ae8:	1b5b      	subs	r3, r3, r5
90017aea:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90017aee:	4632      	mov	r2, r6
90017af0:	e6f9      	b.n	900178e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90017af2:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90017af6:	4617      	mov	r7, r2
90017af8:	f102 0908 	add.w	r9, r2, #8
90017afc:	4666      	mov	r6, ip
90017afe:	6838      	ldr	r0, [r7, #0]
90017b00:	3708      	adds	r7, #8
90017b02:	f857 1c04 	ldr.w	r1, [r7, #-4]
90017b06:	46e0      	mov	r8, ip
90017b08:	454f      	cmp	r7, r9
90017b0a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90017b0e:	46c4      	mov	ip, r8
90017b10:	d1f5      	bne.n	90017afe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90017b12:	6838      	ldr	r0, [r7, #0]
90017b14:	f8c8 0000 	str.w	r0, [r8]
90017b18:	88b9      	ldrh	r1, [r7, #4]
90017b1a:	f8a8 1004 	strh.w	r1, [r8, #4]
90017b1e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90017b22:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017b26:	d009      	beq.n	90017b3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90017b28:	7b51      	ldrb	r1, [r2, #13]
90017b2a:	7992      	ldrb	r2, [r2, #6]
90017b2c:	0149      	lsls	r1, r1, #5
90017b2e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90017b32:	4311      	orrs	r1, r2
90017b34:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90017b38:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90017b3c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90017b40:	d00e      	beq.n	90017b60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90017b42:	eba3 030e 	sub.w	r3, r3, lr
90017b46:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90017b4a:	b29b      	uxth	r3, r3
90017b4c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90017b50:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017b54:	10db      	asrs	r3, r3, #3
90017b56:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017b5a:	4313      	orrs	r3, r2
90017b5c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90017b60:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90017b64:	00cb      	lsls	r3, r1, #3
90017b66:	0648      	lsls	r0, r1, #25
90017b68:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017b6c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90017b70:	ea43 0302 	orr.w	r3, r3, r2
90017b74:	bf44      	itt	mi
90017b76:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017b7a:	b21b      	sxthmi	r3, r3
90017b7c:	1b5d      	subs	r5, r3, r5
90017b7e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017b82:	e7b4      	b.n	90017aee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90017b84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90017b84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017b88:	461e      	mov	r6, r3
90017b8a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017b8c:	4604      	mov	r4, r0
90017b8e:	4617      	mov	r7, r2
90017b90:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017b94:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017b98:	f7ed ff32 	bl	90005a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017b9c:	4605      	mov	r5, r0
90017b9e:	b918      	cbnz	r0, 90017ba8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90017ba0:	6030      	str	r0, [r6, #0]
90017ba2:	4628      	mov	r0, r5
90017ba4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017ba8:	683b      	ldr	r3, [r7, #0]
90017baa:	4601      	mov	r1, r0
90017bac:	4638      	mov	r0, r7
90017bae:	68db      	ldr	r3, [r3, #12]
90017bb0:	4798      	blx	r3
90017bb2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90017bb6:	4602      	mov	r2, r0
90017bb8:	6030      	str	r0, [r6, #0]
90017bba:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90017bbe:	d213      	bcs.n	90017be8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90017bc0:	4643      	mov	r3, r8
90017bc2:	4639      	mov	r1, r7
90017bc4:	4620      	mov	r0, r4
90017bc6:	f7ff fe39 	bl	9001783c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90017bca:	6030      	str	r0, [r6, #0]
90017bcc:	6833      	ldr	r3, [r6, #0]
90017bce:	b143      	cbz	r3, 90017be2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90017bd0:	7b5a      	ldrb	r2, [r3, #13]
90017bd2:	7a9b      	ldrb	r3, [r3, #10]
90017bd4:	0052      	lsls	r2, r2, #1
90017bd6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90017bda:	4313      	orrs	r3, r2
90017bdc:	bf0c      	ite	eq
90017bde:	2301      	moveq	r3, #1
90017be0:	2300      	movne	r3, #0
90017be2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90017be6:	e7dc      	b.n	90017ba2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90017be8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90017bec:	b29b      	uxth	r3, r3
90017bee:	2b7f      	cmp	r3, #127	@ 0x7f
90017bf0:	d804      	bhi.n	90017bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90017bf2:	4639      	mov	r1, r7
90017bf4:	4620      	mov	r0, r4
90017bf6:	f7ff fd15 	bl	90017624 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90017bfa:	e7e6      	b.n	90017bca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90017bfc:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90017c00:	2b00      	cmp	r3, #0
90017c02:	d0e3      	beq.n	90017bcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017c04:	f640 1302 	movw	r3, #2306	@ 0x902
90017c08:	429d      	cmp	r5, r3
90017c0a:	d1df      	bne.n	90017bcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017c0c:	4601      	mov	r1, r0
90017c0e:	4620      	mov	r0, r4
90017c10:	f7ff fcd9 	bl	900175c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017c14:	e7d9      	b.n	90017bca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90017c16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90017c16:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90017c1a:	461e      	mov	r6, r3
90017c1c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017c1e:	4604      	mov	r4, r0
90017c20:	4617      	mov	r7, r2
90017c22:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017c26:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017c2a:	f7ed fee9 	bl	90005a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017c2e:	4605      	mov	r5, r0
90017c30:	b918      	cbnz	r0, 90017c3a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90017c32:	6030      	str	r0, [r6, #0]
90017c34:	4628      	mov	r0, r5
90017c36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90017c3a:	683b      	ldr	r3, [r7, #0]
90017c3c:	4601      	mov	r1, r0
90017c3e:	4638      	mov	r0, r7
90017c40:	f8d3 9008 	ldr.w	r9, [r3, #8]
90017c44:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90017c48:	47c8      	blx	r9
90017c4a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90017c4e:	4602      	mov	r2, r0
90017c50:	6030      	str	r0, [r6, #0]
90017c52:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90017c56:	d213      	bcs.n	90017c80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90017c58:	4643      	mov	r3, r8
90017c5a:	4639      	mov	r1, r7
90017c5c:	4620      	mov	r0, r4
90017c5e:	f7ff fded 	bl	9001783c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90017c62:	6030      	str	r0, [r6, #0]
90017c64:	6833      	ldr	r3, [r6, #0]
90017c66:	b143      	cbz	r3, 90017c7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90017c68:	7b5a      	ldrb	r2, [r3, #13]
90017c6a:	7a9b      	ldrb	r3, [r3, #10]
90017c6c:	0052      	lsls	r2, r2, #1
90017c6e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90017c72:	4313      	orrs	r3, r2
90017c74:	bf0c      	ite	eq
90017c76:	2301      	moveq	r3, #1
90017c78:	2300      	movne	r3, #0
90017c7a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90017c7e:	e7d9      	b.n	90017c34 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90017c80:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90017c84:	b29b      	uxth	r3, r3
90017c86:	2b7f      	cmp	r3, #127	@ 0x7f
90017c88:	d804      	bhi.n	90017c94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90017c8a:	4639      	mov	r1, r7
90017c8c:	4620      	mov	r0, r4
90017c8e:	f7ff fcc9 	bl	90017624 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90017c92:	e7e6      	b.n	90017c62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90017c94:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90017c98:	2b00      	cmp	r3, #0
90017c9a:	d0e3      	beq.n	90017c64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90017c9c:	f640 1302 	movw	r3, #2306	@ 0x902
90017ca0:	429d      	cmp	r5, r3
90017ca2:	d1df      	bne.n	90017c64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90017ca4:	4601      	mov	r1, r0
90017ca6:	4620      	mov	r0, r4
90017ca8:	f7ff fc8d 	bl	900175c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017cac:	e7d9      	b.n	90017c62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90017cae <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90017cae:	b510      	push	{r4, lr}
90017cb0:	4604      	mov	r4, r0
90017cb2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
90017cb6:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90017cb8:	b1e1      	cbz	r1, 90017cf4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017cba:	2b0a      	cmp	r3, #10
90017cbc:	d02d      	beq.n	90017d1a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90017cbe:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
90017cc0:	3901      	subs	r1, #1
90017cc2:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90017cc6:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
90017cc8:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
90017ccc:	1c51      	adds	r1, r2, #1
90017cce:	b289      	uxth	r1, r1
90017cd0:	2901      	cmp	r1, #1
90017cd2:	bf8a      	itet	hi
90017cd4:	f102 32ff 	addhi.w	r2, r2, #4294967295
90017cd8:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
90017cda:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
90017cdc:	1c5a      	adds	r2, r3, #1
90017cde:	8722      	strh	r2, [r4, #56]	@ 0x38
90017ce0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90017ce2:	4413      	add	r3, r2
90017ce4:	b29b      	uxth	r3, r3
90017ce6:	2b09      	cmp	r3, #9
90017ce8:	bf88      	it	hi
90017cea:	3b0a      	subhi	r3, #10
90017cec:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017cf0:	8458      	strh	r0, [r3, #34]	@ 0x22
90017cf2:	e7de      	b.n	90017cb2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90017cf4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90017cf6:	2b0a      	cmp	r3, #10
90017cf8:	d00f      	beq.n	90017d1a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90017cfa:	4620      	mov	r0, r4
90017cfc:	f7ff fc22 	bl	90017544 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90017d00:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90017d02:	1c5a      	adds	r2, r3, #1
90017d04:	8722      	strh	r2, [r4, #56]	@ 0x38
90017d06:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90017d08:	4413      	add	r3, r2
90017d0a:	b29b      	uxth	r3, r3
90017d0c:	2b09      	cmp	r3, #9
90017d0e:	bf88      	it	hi
90017d10:	3b0a      	subhi	r3, #10
90017d12:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017d16:	8458      	strh	r0, [r3, #34]	@ 0x22
90017d18:	e7ec      	b.n	90017cf4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017d1a:	bd10      	pop	{r4, pc}

90017d1c <_ZN8touchgfx12TextProvider11getNextCharEv>:
90017d1c:	b538      	push	{r3, r4, r5, lr}
90017d1e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017d20:	4604      	mov	r4, r0
90017d22:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90017d26:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
90017d28:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
90017d2a:	3a01      	subs	r2, #1
90017d2c:	8702      	strh	r2, [r0, #56]	@ 0x38
90017d2e:	1c5a      	adds	r2, r3, #1
90017d30:	b292      	uxth	r2, r2
90017d32:	2a09      	cmp	r2, #9
90017d34:	bf8a      	itet	hi
90017d36:	3b09      	subhi	r3, #9
90017d38:	86c2      	strhls	r2, [r0, #54]	@ 0x36
90017d3a:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
90017d3c:	f7ff ffb7 	bl	90017cae <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90017d40:	8c23      	ldrh	r3, [r4, #32]
90017d42:	2b01      	cmp	r3, #1
90017d44:	bf9c      	itt	ls
90017d46:	3301      	addls	r3, #1
90017d48:	8423      	strhls	r3, [r4, #32]
90017d4a:	8be3      	ldrh	r3, [r4, #30]
90017d4c:	b90b      	cbnz	r3, 90017d52 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90017d4e:	2302      	movs	r3, #2
90017d50:	83e3      	strh	r3, [r4, #30]
90017d52:	8be3      	ldrh	r3, [r4, #30]
90017d54:	4628      	mov	r0, r5
90017d56:	3b01      	subs	r3, #1
90017d58:	b29b      	uxth	r3, r3
90017d5a:	83e3      	strh	r3, [r4, #30]
90017d5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90017d60:	8365      	strh	r5, [r4, #26]
90017d62:	bd38      	pop	{r3, r4, r5, pc}

90017d64 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90017d64:	428a      	cmp	r2, r1
90017d66:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017d6a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90017d6c:	d932      	bls.n	90017dd4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90017d6e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90017d70:	1a54      	subs	r4, r2, r1
90017d72:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
90017d76:	19ee      	adds	r6, r5, r7
90017d78:	fa1f fe84 	uxth.w	lr, r4
90017d7c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90017d80:	3e01      	subs	r6, #1
90017d82:	b2b4      	uxth	r4, r6
90017d84:	eba4 090e 	sub.w	r9, r4, lr
90017d88:	fa1f f989 	uxth.w	r9, r9
90017d8c:	2c09      	cmp	r4, #9
90017d8e:	4626      	mov	r6, r4
90017d90:	bf88      	it	hi
90017d92:	f1a4 060a 	subhi.w	r6, r4, #10
90017d96:	f1bc 0f00 	cmp.w	ip, #0
90017d9a:	f104 34ff 	add.w	r4, r4, #4294967295
90017d9e:	bf08      	it	eq
90017da0:	f04f 0c02 	moveq.w	ip, #2
90017da4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90017da8:	b2a4      	uxth	r4, r4
90017daa:	f10c 3cff 	add.w	ip, ip, #4294967295
90017dae:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
90017db2:	454c      	cmp	r4, r9
90017db4:	fa1f fc8c 	uxth.w	ip, ip
90017db8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90017dbc:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
90017dc0:	d1e4      	bne.n	90017d8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
90017dc2:	eba5 050e 	sub.w	r5, r5, lr
90017dc6:	eb0e 0408 	add.w	r4, lr, r8
90017dca:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
90017dce:	8705      	strh	r5, [r0, #56]	@ 0x38
90017dd0:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
90017dd4:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
90017dd6:	250a      	movs	r5, #10
90017dd8:	1a64      	subs	r4, r4, r1
90017dda:	4439      	add	r1, r7
90017ddc:	b289      	uxth	r1, r1
90017dde:	8704      	strh	r4, [r0, #56]	@ 0x38
90017de0:	2909      	cmp	r1, #9
90017de2:	bf88      	it	hi
90017de4:	390a      	subhi	r1, #10
90017de6:	86c1      	strh	r1, [r0, #54]	@ 0x36
90017de8:	b18a      	cbz	r2, 90017e0e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90017dea:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
90017dec:	3a01      	subs	r2, #1
90017dee:	3101      	adds	r1, #1
90017df0:	b292      	uxth	r2, r2
90017df2:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90017df6:	8701      	strh	r1, [r0, #56]	@ 0x38
90017df8:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90017dfa:	b901      	cbnz	r1, 90017dfe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90017dfc:	86c5      	strh	r5, [r0, #54]	@ 0x36
90017dfe:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90017e00:	3901      	subs	r1, #1
90017e02:	b289      	uxth	r1, r1
90017e04:	86c1      	strh	r1, [r0, #54]	@ 0x36
90017e06:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90017e0a:	844c      	strh	r4, [r1, #34]	@ 0x22
90017e0c:	e7ec      	b.n	90017de8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
90017e0e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017e12:	f7ff bf4c 	b.w	90017cae <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90017e16 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90017e16:	b570      	push	{r4, r5, r6, lr}
90017e18:	2500      	movs	r5, #0
90017e1a:	4295      	cmp	r5, r2
90017e1c:	d011      	beq.n	90017e42 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90017e1e:	8bc4      	ldrh	r4, [r0, #30]
90017e20:	f831 6b02 	ldrh.w	r6, [r1], #2
90017e24:	4414      	add	r4, r2
90017e26:	3c01      	subs	r4, #1
90017e28:	1b64      	subs	r4, r4, r5
90017e2a:	b2a4      	uxth	r4, r4
90017e2c:	2c01      	cmp	r4, #1
90017e2e:	bf88      	it	hi
90017e30:	3c02      	subhi	r4, #2
90017e32:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90017e36:	8b64      	ldrh	r4, [r4, #26]
90017e38:	42b4      	cmp	r4, r6
90017e3a:	d117      	bne.n	90017e6c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90017e3c:	3501      	adds	r5, #1
90017e3e:	b2ad      	uxth	r5, r5
90017e40:	e7eb      	b.n	90017e1a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90017e42:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90017e46:	2400      	movs	r4, #0
90017e48:	4413      	add	r3, r2
90017e4a:	b2a2      	uxth	r2, r4
90017e4c:	429a      	cmp	r2, r3
90017e4e:	da0f      	bge.n	90017e70 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90017e50:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
90017e52:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90017e56:	3401      	adds	r4, #1
90017e58:	4432      	add	r2, r6
90017e5a:	b292      	uxth	r2, r2
90017e5c:	2a09      	cmp	r2, #9
90017e5e:	bf88      	it	hi
90017e60:	3a0a      	subhi	r2, #10
90017e62:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90017e66:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
90017e68:	42aa      	cmp	r2, r5
90017e6a:	d0ee      	beq.n	90017e4a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90017e6c:	2000      	movs	r0, #0
90017e6e:	bd70      	pop	{r4, r5, r6, pc}
90017e70:	2001      	movs	r0, #1
90017e72:	e7fc      	b.n	90017e6e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90017e74 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90017e74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017e78:	4605      	mov	r5, r0
90017e7a:	4616      	mov	r6, r2
90017e7c:	1c8c      	adds	r4, r1, #2
90017e7e:	8809      	ldrh	r1, [r1, #0]
90017e80:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90017e84:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90017e88:	42b3      	cmp	r3, r6
90017e8a:	d124      	bne.n	90017ed6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90017e8c:	f3c1 2903 	ubfx	r9, r1, #8, #4
90017e90:	f3c1 1803 	ubfx	r8, r1, #4, #4
90017e94:	f001 070f 	and.w	r7, r1, #15
90017e98:	4652      	mov	r2, sl
90017e9a:	f8cd 8000 	str.w	r8, [sp]
90017e9e:	464b      	mov	r3, r9
90017ea0:	4621      	mov	r1, r4
90017ea2:	4628      	mov	r0, r5
90017ea4:	f7ff ffb7 	bl	90017e16 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90017ea8:	4683      	mov	fp, r0
90017eaa:	b168      	cbz	r0, 90017ec8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90017eac:	eb0a 0109 	add.w	r1, sl, r9
90017eb0:	463a      	mov	r2, r7
90017eb2:	4628      	mov	r0, r5
90017eb4:	4441      	add	r1, r8
90017eb6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90017eba:	4649      	mov	r1, r9
90017ebc:	f7ff ff52 	bl	90017d64 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90017ec0:	4658      	mov	r0, fp
90017ec2:	b003      	add	sp, #12
90017ec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017ec8:	eb07 010a 	add.w	r1, r7, sl
90017ecc:	4449      	add	r1, r9
90017ece:	4441      	add	r1, r8
90017ed0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90017ed4:	e7d2      	b.n	90017e7c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90017ed6:	f04f 0b00 	mov.w	fp, #0
90017eda:	e7f1      	b.n	90017ec0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90017edc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90017edc:	b570      	push	{r4, r5, r6, lr}
90017ede:	8810      	ldrh	r0, [r2, #0]
90017ee0:	4298      	cmp	r0, r3
90017ee2:	d817      	bhi.n	90017f14 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017ee4:	1e48      	subs	r0, r1, #1
90017ee6:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90017eea:	4298      	cmp	r0, r3
90017eec:	d312      	bcc.n	90017f14 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017eee:	2400      	movs	r4, #0
90017ef0:	428c      	cmp	r4, r1
90017ef2:	d20f      	bcs.n	90017f14 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017ef4:	1860      	adds	r0, r4, r1
90017ef6:	1040      	asrs	r0, r0, #1
90017ef8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90017efc:	0085      	lsls	r5, r0, #2
90017efe:	42b3      	cmp	r3, r6
90017f00:	d902      	bls.n	90017f08 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90017f02:	3001      	adds	r0, #1
90017f04:	b284      	uxth	r4, r0
90017f06:	e7f3      	b.n	90017ef0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90017f08:	d201      	bcs.n	90017f0e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90017f0a:	b281      	uxth	r1, r0
90017f0c:	e7f0      	b.n	90017ef0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90017f0e:	442a      	add	r2, r5
90017f10:	8850      	ldrh	r0, [r2, #2]
90017f12:	bd70      	pop	{r4, r5, r6, pc}
90017f14:	2000      	movs	r0, #0
90017f16:	e7fc      	b.n	90017f12 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90017f18 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90017f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017f1c:	6c45      	ldr	r5, [r0, #68]	@ 0x44
90017f1e:	4604      	mov	r4, r0
90017f20:	260b      	movs	r6, #11
90017f22:	886f      	ldrh	r7, [r5, #2]
90017f24:	087f      	lsrs	r7, r7, #1
90017f26:	3e01      	subs	r6, #1
90017f28:	d013      	beq.n	90017f52 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90017f2a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90017f2c:	462a      	mov	r2, r5
90017f2e:	4639      	mov	r1, r7
90017f30:	4620      	mov	r0, r4
90017f32:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017f36:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017f3a:	4643      	mov	r3, r8
90017f3c:	f7ff ffce 	bl	90017edc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90017f40:	b138      	cbz	r0, 90017f52 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90017f42:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90017f46:	4642      	mov	r2, r8
90017f48:	4620      	mov	r0, r4
90017f4a:	f7ff ff93 	bl	90017e74 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90017f4e:	2800      	cmp	r0, #0
90017f50:	d1e9      	bne.n	90017f26 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90017f52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90017f58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90017f58:	b570      	push	{r4, r5, r6, lr}
90017f5a:	694a      	ldr	r2, [r1, #20]
90017f5c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90017f5e:	684b      	ldr	r3, [r1, #4]
90017f60:	1b54      	subs	r4, r2, r5
90017f62:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90017f64:	f000 8106 	beq.w	90018174 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90017f68:	1b9b      	subs	r3, r3, r6
90017f6a:	d003      	beq.n	90017f74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90017f6c:	4363      	muls	r3, r4
90017f6e:	2210      	movs	r2, #16
90017f70:	fb93 f3f2 	sdiv	r3, r3, r2
90017f74:	680c      	ldr	r4, [r1, #0]
90017f76:	698a      	ldr	r2, [r1, #24]
90017f78:	1b65      	subs	r5, r4, r5
90017f7a:	f000 80fd 	beq.w	90018178 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90017f7e:	1b92      	subs	r2, r2, r6
90017f80:	d003      	beq.n	90017f8a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90017f82:	436a      	muls	r2, r5
90017f84:	2410      	movs	r4, #16
90017f86:	fb92 f2f4 	sdiv	r2, r2, r4
90017f8a:	1a9b      	subs	r3, r3, r2
90017f8c:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 900181b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90017f90:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90017f94:	460a      	mov	r2, r1
90017f96:	ee07 3a90 	vmov	s15, r3
90017f9a:	f100 040c 	add.w	r4, r0, #12
90017f9e:	4603      	mov	r3, r0
90017fa0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017fa4:	ee67 7a84 	vmul.f32	s15, s15, s8
90017fa8:	ee87 3a27 	vdiv.f32	s6, s14, s15
90017fac:	eeb1 6a43 	vneg.f32	s12, s6
90017fb0:	edd2 7a02 	vldr	s15, [r2, #8]
90017fb4:	3214      	adds	r2, #20
90017fb6:	eec7 6a27 	vdiv.f32	s13, s14, s15
90017fba:	ece3 6a01 	vstmia	r3!, {s13}
90017fbe:	429c      	cmp	r4, r3
90017fc0:	ed52 7a02 	vldr	s15, [r2, #-8]
90017fc4:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017fc8:	edc3 7a02 	vstr	s15, [r3, #8]
90017fcc:	ed52 7a01 	vldr	s15, [r2, #-4]
90017fd0:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017fd4:	edc3 7a05 	vstr	s15, [r3, #20]
90017fd8:	d1ea      	bne.n	90017fb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90017fda:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90017fdc:	698b      	ldr	r3, [r1, #24]
90017fde:	edd0 4a02 	vldr	s9, [r0, #8]
90017fe2:	1a9b      	subs	r3, r3, r2
90017fe4:	edd0 3a00 	vldr	s7, [r0]
90017fe8:	edd0 6a01 	vldr	s13, [r0, #4]
90017fec:	ee07 3a90 	vmov	s15, r3
90017ff0:	684b      	ldr	r3, [r1, #4]
90017ff2:	ee76 6ae4 	vsub.f32	s13, s13, s9
90017ff6:	ed90 5a05 	vldr	s10, [r0, #20]
90017ffa:	1a9b      	subs	r3, r3, r2
90017ffc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018000:	ee73 4ae4 	vsub.f32	s9, s7, s9
90018004:	ed90 2a03 	vldr	s4, [r0, #12]
90018008:	ee07 3a10 	vmov	s14, r3
9001800c:	edd0 5a04 	vldr	s11, [r0, #16]
90018010:	ee67 7a84 	vmul.f32	s15, s15, s8
90018014:	ed90 1a07 	vldr	s2, [r0, #28]
90018018:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001801c:	edd0 2a06 	vldr	s5, [r0, #24]
90018020:	ee75 5ac5 	vsub.f32	s11, s11, s10
90018024:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90018028:	ee27 7a04 	vmul.f32	s14, s14, s8
9001802c:	ee32 5a45 	vsub.f32	s10, s4, s10
90018030:	eee6 7a87 	vfma.f32	s15, s13, s14
90018034:	ee67 7a83 	vmul.f32	s15, s15, s6
90018038:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
9001803c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001803e:	694a      	ldr	r2, [r1, #20]
90018040:	1b13      	subs	r3, r2, r4
90018042:	ee07 3a10 	vmov	s14, r3
90018046:	680b      	ldr	r3, [r1, #0]
90018048:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001804c:	1b1b      	subs	r3, r3, r4
9001804e:	ee27 7a04 	vmul.f32	s14, s14, s8
90018052:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90018056:	ee07 3a10 	vmov	s14, r3
9001805a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001805e:	ee27 7a04 	vmul.f32	s14, s14, s8
90018062:	eee6 4a87 	vfma.f32	s9, s13, s14
90018066:	ee64 4a86 	vmul.f32	s9, s9, s12
9001806a:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
9001806e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90018070:	698b      	ldr	r3, [r1, #24]
90018072:	1a9b      	subs	r3, r3, r2
90018074:	ee06 3a90 	vmov	s13, r3
90018078:	684b      	ldr	r3, [r1, #4]
9001807a:	1a9b      	subs	r3, r3, r2
9001807c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90018080:	ee07 3a10 	vmov	s14, r3
90018084:	ee66 6a84 	vmul.f32	s13, s13, s8
90018088:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001808c:	ee65 6a66 	vnmul.f32	s13, s10, s13
90018090:	ee27 7a04 	vmul.f32	s14, s14, s8
90018094:	eee5 6a87 	vfma.f32	s13, s11, s14
90018098:	ee66 6a83 	vmul.f32	s13, s13, s6
9001809c:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
900180a0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
900180a2:	694a      	ldr	r2, [r1, #20]
900180a4:	1b13      	subs	r3, r2, r4
900180a6:	ee07 3a10 	vmov	s14, r3
900180aa:	680b      	ldr	r3, [r1, #0]
900180ac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900180b0:	1b1b      	subs	r3, r3, r4
900180b2:	ee27 7a04 	vmul.f32	s14, s14, s8
900180b6:	ee25 5a47 	vnmul.f32	s10, s10, s14
900180ba:	ee07 3a10 	vmov	s14, r3
900180be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900180c2:	ee27 7a04 	vmul.f32	s14, s14, s8
900180c6:	eea5 5a87 	vfma.f32	s10, s11, s14
900180ca:	edd0 5a08 	vldr	s11, [r0, #32]
900180ce:	ee31 1a65 	vsub.f32	s2, s2, s11
900180d2:	ee72 5ae5 	vsub.f32	s11, s5, s11
900180d6:	ee25 5a06 	vmul.f32	s10, s10, s12
900180da:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
900180de:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
900180e0:	698b      	ldr	r3, [r1, #24]
900180e2:	1a9b      	subs	r3, r3, r2
900180e4:	ee07 3a10 	vmov	s14, r3
900180e8:	684b      	ldr	r3, [r1, #4]
900180ea:	1a9b      	subs	r3, r3, r2
900180ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900180f0:	ee01 3a90 	vmov	s3, r3
900180f4:	ee27 7a04 	vmul.f32	s14, s14, s8
900180f8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
900180fc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90018100:	ee61 1a84 	vmul.f32	s3, s3, s8
90018104:	eea1 7a21 	vfma.f32	s14, s2, s3
90018108:	ee27 7a03 	vmul.f32	s14, s14, s6
9001810c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
90018110:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90018112:	694a      	ldr	r2, [r1, #20]
90018114:	1b13      	subs	r3, r2, r4
90018116:	ee03 3a10 	vmov	s6, r3
9001811a:	680b      	ldr	r3, [r1, #0]
9001811c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90018120:	1b1b      	subs	r3, r3, r4
90018122:	ee23 3a04 	vmul.f32	s6, s6, s8
90018126:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001812a:	ee03 3a10 	vmov	s6, r3
9001812e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90018132:	ee23 4a04 	vmul.f32	s8, s6, s8
90018136:	eee1 5a04 	vfma.f32	s11, s2, s8
9001813a:	ee25 6a86 	vmul.f32	s12, s11, s12
9001813e:	ee62 5a67 	vnmul.f32	s11, s4, s15
90018142:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
90018146:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001814a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001814e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018152:	dd13      	ble.n	9001817c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90018154:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90018158:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001815c:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001815e:	eee3 7a87 	vfma.f32	s15, s7, s14
90018162:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90018166:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001816a:	dd15      	ble.n	90018198 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001816c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90018170:	6403      	str	r3, [r0, #64]	@ 0x40
90018172:	bd70      	pop	{r4, r5, r6, pc}
90018174:	4623      	mov	r3, r4
90018176:	e6fd      	b.n	90017f74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90018178:	462a      	mov	r2, r5
9001817a:	e706      	b.n	90017f8a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001817c:	d502      	bpl.n	90018184 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001817e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
90018182:	e7e9      	b.n	90018158 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
90018184:	ee22 2a64 	vnmul.f32	s4, s4, s9
90018188:	eea3 2a85 	vfma.f32	s4, s7, s10
9001818c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
90018190:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018194:	dade      	bge.n	90018154 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
90018196:	e7f2      	b.n	9001817e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
90018198:	d502      	bpl.n	900181a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001819a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001819e:	e7e7      	b.n	90018170 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
900181a0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
900181a4:	eee3 4a86 	vfma.f32	s9, s7, s12
900181a8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
900181ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900181b0:	dadc      	bge.n	9001816c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
900181b2:	e7f2      	b.n	9001819a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
900181b4:	3d800000 	.word	0x3d800000

900181b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
900181b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900181bc:	2714      	movs	r7, #20
900181be:	435f      	muls	r7, r3
900181c0:	eb02 0c07 	add.w	ip, r2, r7
900181c4:	f8dc 5004 	ldr.w	r5, [ip, #4]
900181c8:	f115 0e0f 	adds.w	lr, r5, #15
900181cc:	f100 80a2 	bmi.w	90018314 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
900181d0:	ea4f 1e2e 	mov.w	lr, lr, asr #4
900181d4:	9c08      	ldr	r4, [sp, #32]
900181d6:	2614      	movs	r6, #20
900181d8:	f8c0 e014 	str.w	lr, [r0, #20]
900181dc:	4366      	muls	r6, r4
900181de:	eb02 0806 	add.w	r8, r2, r6
900181e2:	f8d8 5004 	ldr.w	r5, [r8, #4]
900181e6:	f115 040f 	adds.w	r4, r5, #15
900181ea:	f100 809f 	bmi.w	9001832c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
900181ee:	1124      	asrs	r4, r4, #4
900181f0:	eba4 040e 	sub.w	r4, r4, lr
900181f4:	6184      	str	r4, [r0, #24]
900181f6:	2c00      	cmp	r4, #0
900181f8:	f000 808a 	beq.w	90018310 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
900181fc:	f8dc 9004 	ldr.w	r9, [ip, #4]
90018200:	f8d8 4004 	ldr.w	r4, [r8, #4]
90018204:	5995      	ldr	r5, [r2, r6]
90018206:	eba4 0809 	sub.w	r8, r4, r9
9001820a:	59d4      	ldr	r4, [r2, r7]
9001820c:	eba5 0a04 	sub.w	sl, r5, r4
90018210:	ea4f 1608 	mov.w	r6, r8, lsl #4
90018214:	ea4f 150a 	mov.w	r5, sl, lsl #4
90018218:	fb0e fe05 	mul.w	lr, lr, r5
9001821c:	fb0a ee19 	mls	lr, sl, r9, lr
90018220:	fb08 e404 	mla	r4, r8, r4, lr
90018224:	3c01      	subs	r4, #1
90018226:	19a4      	adds	r4, r4, r6
90018228:	f100 808c 	bmi.w	90018344 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001822c:	fb94 fef6 	sdiv	lr, r4, r6
90018230:	fb06 441e 	mls	r4, r6, lr, r4
90018234:	f8c0 e000 	str.w	lr, [r0]
90018238:	6104      	str	r4, [r0, #16]
9001823a:	2d00      	cmp	r5, #0
9001823c:	f2c0 8095 	blt.w	9001836a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
90018240:	fb95 f4f6 	sdiv	r4, r5, r6
90018244:	fb06 5514 	mls	r5, r6, r4, r5
90018248:	6044      	str	r4, [r0, #4]
9001824a:	6085      	str	r5, [r0, #8]
9001824c:	60c6      	str	r6, [r0, #12]
9001824e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90018252:	f8dc 4004 	ldr.w	r4, [ip, #4]
90018256:	6945      	ldr	r5, [r0, #20]
90018258:	59d2      	ldr	r2, [r2, r7]
9001825a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001825e:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001838c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
90018262:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
90018266:	ee07 4a10 	vmov	s14, r4
9001826a:	6804      	ldr	r4, [r0, #0]
9001826c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
90018270:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018274:	ee07 2a90 	vmov	s15, r2
90018278:	ee27 7a26 	vmul.f32	s14, s14, s13
9001827c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018280:	ee67 7aa6 	vmul.f32	s15, s15, s13
90018284:	edd3 6a00 	vldr	s13, [r3]
90018288:	eee6 6a07 	vfma.f32	s13, s12, s14
9001828c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
90018290:	eee6 6a27 	vfma.f32	s13, s12, s15
90018294:	edc0 6a07 	vstr	s13, [r0, #28]
90018298:	edd0 6a01 	vldr	s13, [r0, #4]
9001829c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
900182a0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900182a4:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
900182a8:	eea6 6aa5 	vfma.f32	s12, s13, s11
900182ac:	ed80 6a08 	vstr	s12, [r0, #32]
900182b0:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
900182b2:	6242      	str	r2, [r0, #36]	@ 0x24
900182b4:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
900182b8:	ed93 6a03 	vldr	s12, [r3, #12]
900182bc:	eea5 6a87 	vfma.f32	s12, s11, s14
900182c0:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
900182c4:	eea5 6aa7 	vfma.f32	s12, s11, s15
900182c8:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
900182cc:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
900182d0:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
900182d4:	eea6 6aa5 	vfma.f32	s12, s13, s11
900182d8:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
900182dc:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
900182de:	6302      	str	r2, [r0, #48]	@ 0x30
900182e0:	ed93 6a06 	vldr	s12, [r3, #24]
900182e4:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
900182e8:	eea5 6a87 	vfma.f32	s12, s11, s14
900182ec:	eeb0 7a46 	vmov.f32	s14, s12
900182f0:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
900182f4:	eea6 7a27 	vfma.f32	s14, s12, s15
900182f8:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
900182fc:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
90018300:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
90018304:	eee6 7a87 	vfma.f32	s15, s13, s14
90018308:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001830c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001830e:	63c3      	str	r3, [r0, #60]	@ 0x3c
90018310:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018314:	2410      	movs	r4, #16
90018316:	f1c5 0501 	rsb	r5, r5, #1
9001831a:	fb9e fef4 	sdiv	lr, lr, r4
9001831e:	f015 050f 	ands.w	r5, r5, #15
90018322:	bf18      	it	ne
90018324:	2501      	movne	r5, #1
90018326:	ebae 0e05 	sub.w	lr, lr, r5
9001832a:	e753      	b.n	900181d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001832c:	f04f 0910 	mov.w	r9, #16
90018330:	f1c5 0501 	rsb	r5, r5, #1
90018334:	fb94 f4f9 	sdiv	r4, r4, r9
90018338:	f015 050f 	ands.w	r5, r5, #15
9001833c:	bf18      	it	ne
9001833e:	2501      	movne	r5, #1
90018340:	1b64      	subs	r4, r4, r5
90018342:	e755      	b.n	900181f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90018344:	4264      	negs	r4, r4
90018346:	fb94 fef6 	sdiv	lr, r4, r6
9001834a:	f1ce 0800 	rsb	r8, lr, #0
9001834e:	fb06 441e 	mls	r4, r6, lr, r4
90018352:	f8c0 8000 	str.w	r8, [r0]
90018356:	6104      	str	r4, [r0, #16]
90018358:	2c00      	cmp	r4, #0
9001835a:	f43f af6e 	beq.w	9001823a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001835e:	ea6f 0e0e 	mvn.w	lr, lr
90018362:	1b34      	subs	r4, r6, r4
90018364:	f8c0 e000 	str.w	lr, [r0]
90018368:	e766      	b.n	90018238 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001836a:	426d      	negs	r5, r5
9001836c:	fb95 f4f6 	sdiv	r4, r5, r6
90018370:	f1c4 0e00 	rsb	lr, r4, #0
90018374:	fb06 5514 	mls	r5, r6, r4, r5
90018378:	f8c0 e004 	str.w	lr, [r0, #4]
9001837c:	6085      	str	r5, [r0, #8]
9001837e:	2d00      	cmp	r5, #0
90018380:	f43f af64 	beq.w	9001824c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
90018384:	43e4      	mvns	r4, r4
90018386:	1b75      	subs	r5, r6, r5
90018388:	6044      	str	r4, [r0, #4]
9001838a:	e75e      	b.n	9001824a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001838c:	3d800000 	.word	0x3d800000

90018390 <_ZN8touchgfx7Unicode6strlenEPKt>:
90018390:	4602      	mov	r2, r0
90018392:	b148      	cbz	r0, 900183a8 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
90018394:	2300      	movs	r3, #0
90018396:	b298      	uxth	r0, r3
90018398:	3301      	adds	r3, #1
9001839a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001839e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
900183a2:	2900      	cmp	r1, #0
900183a4:	d1f7      	bne.n	90018396 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
900183a6:	4770      	bx	lr
900183a8:	4770      	bx	lr

900183aa <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
900183aa:	b530      	push	{r4, r5, lr}
900183ac:	4604      	mov	r4, r0
900183ae:	b159      	cbz	r1, 900183c8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
900183b0:	b148      	cbz	r0, 900183c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900183b2:	2300      	movs	r3, #0
900183b4:	b298      	uxth	r0, r3
900183b6:	4282      	cmp	r2, r0
900183b8:	d905      	bls.n	900183c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900183ba:	5ccd      	ldrb	r5, [r1, r3]
900183bc:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
900183c0:	3301      	adds	r3, #1
900183c2:	2d00      	cmp	r5, #0
900183c4:	d1f6      	bne.n	900183b4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
900183c6:	bd30      	pop	{r4, r5, pc}
900183c8:	4608      	mov	r0, r1
900183ca:	e7fc      	b.n	900183c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

900183cc <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
900183cc:	b5f0      	push	{r4, r5, r6, r7, lr}
900183ce:	b08b      	sub	sp, #44	@ 0x2c
900183d0:	468c      	mov	ip, r1
900183d2:	4604      	mov	r4, r0
900183d4:	2100      	movs	r1, #0
900183d6:	261f      	movs	r6, #31
900183d8:	af01      	add	r7, sp, #4
900183da:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
900183de:	1e71      	subs	r1, r6, #1
900183e0:	fb94 fef3 	sdiv	lr, r4, r3
900183e4:	fb03 441e 	mls	r4, r3, lr, r4
900183e8:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
900183ec:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
900183f0:	b2ec      	uxtb	r4, r5
900183f2:	2d09      	cmp	r5, #9
900183f4:	bfd4      	ite	le
900183f6:	3430      	addle	r4, #48	@ 0x30
900183f8:	3457      	addgt	r4, #87	@ 0x57
900183fa:	b2e4      	uxtb	r4, r4
900183fc:	55bc      	strb	r4, [r7, r6]
900183fe:	4674      	mov	r4, lr
90018400:	b974      	cbnz	r4, 90018420 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
90018402:	2800      	cmp	r0, #0
90018404:	da05      	bge.n	90018412 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
90018406:	ab0a      	add	r3, sp, #40	@ 0x28
90018408:	4419      	add	r1, r3
9001840a:	232d      	movs	r3, #45	@ 0x2d
9001840c:	f801 3c24 	strb.w	r3, [r1, #-36]
90018410:	1eb1      	subs	r1, r6, #2
90018412:	3101      	adds	r1, #1
90018414:	4660      	mov	r0, ip
90018416:	4439      	add	r1, r7
90018418:	f7ff ffc7 	bl	900183aa <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001841c:	b00b      	add	sp, #44	@ 0x2c
9001841e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90018420:	460e      	mov	r6, r1
90018422:	e7dc      	b.n	900183de <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90018424 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90018424:	b5f0      	push	{r4, r5, r6, r7, lr}
90018426:	468c      	mov	ip, r1
90018428:	b08b      	sub	sp, #44	@ 0x2c
9001842a:	2100      	movs	r1, #0
9001842c:	ae01      	add	r6, sp, #4
9001842e:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
90018432:	211f      	movs	r1, #31
90018434:	fbb0 f7f3 	udiv	r7, r0, r3
90018438:	fb03 0517 	mls	r5, r3, r7, r0
9001843c:	4638      	mov	r0, r7
9001843e:	b2ec      	uxtb	r4, r5
90018440:	2d09      	cmp	r5, #9
90018442:	bfd4      	ite	le
90018444:	3430      	addle	r4, #48	@ 0x30
90018446:	3457      	addgt	r4, #87	@ 0x57
90018448:	b2e4      	uxtb	r4, r4
9001844a:	558c      	strb	r4, [r1, r6]
9001844c:	1e4c      	subs	r4, r1, #1
9001844e:	b92f      	cbnz	r7, 9001845c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
90018450:	4431      	add	r1, r6
90018452:	4660      	mov	r0, ip
90018454:	f7ff ffa9 	bl	900183aa <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90018458:	b00b      	add	sp, #44	@ 0x2c
9001845a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001845c:	4621      	mov	r1, r4
9001845e:	e7e9      	b.n	90018434 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

90018460 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
90018460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018464:	b085      	sub	sp, #20
90018466:	4691      	mov	r9, r2
90018468:	6802      	ldr	r2, [r0, #0]
9001846a:	4688      	mov	r8, r1
9001846c:	461c      	mov	r4, r3
9001846e:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
90018472:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
90018476:	4683      	mov	fp, r0
90018478:	4610      	mov	r0, r2
9001847a:	9103      	str	r1, [sp, #12]
9001847c:	9302      	str	r3, [sp, #8]
9001847e:	9201      	str	r2, [sp, #4]
90018480:	f7ff ff86 	bl	90018390 <_ZN8touchgfx7Unicode6strlenEPKt>
90018484:	f1b8 0f00 	cmp.w	r8, #0
90018488:	bf0c      	ite	eq
9001848a:	4684      	moveq	ip, r0
9001848c:	f100 0c01 	addne.w	ip, r0, #1
90018490:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
90018494:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
90018498:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001849a:	fa1f fc8c 	uxth.w	ip, ip
9001849e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900184a0:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
900184a4:	9903      	ldr	r1, [sp, #12]
900184a6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
900184aa:	d041      	beq.n	90018530 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900184ac:	d834      	bhi.n	90018518 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
900184ae:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
900184b2:	d059      	beq.n	90018568 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
900184b4:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
900184b8:	d03a      	beq.n	90018530 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900184ba:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
900184be:	d034      	beq.n	9001852a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
900184c0:	2400      	movs	r4, #0
900184c2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
900184c6:	3a01      	subs	r2, #1
900184c8:	b169      	cbz	r1, 900184e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900184ca:	9911      	ldr	r1, [sp, #68]	@ 0x44
900184cc:	458c      	cmp	ip, r1
900184ce:	da09      	bge.n	900184e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
900184d0:	eba1 010c 	sub.w	r1, r1, ip
900184d4:	b289      	uxth	r1, r1
900184d6:	b933      	cbnz	r3, 900184e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900184d8:	2e00      	cmp	r6, #0
900184da:	d051      	beq.n	90018580 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
900184dc:	2800      	cmp	r0, #0
900184de:	d04f      	beq.n	90018580 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
900184e0:	440c      	add	r4, r1
900184e2:	b2a4      	uxth	r4, r4
900184e4:	2100      	movs	r1, #0
900184e6:	682b      	ldr	r3, [r5, #0]
900184e8:	4293      	cmp	r3, r2
900184ea:	da07      	bge.n	900184fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
900184ec:	f1b8 0f00 	cmp.w	r8, #0
900184f0:	d004      	beq.n	900184fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
900184f2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
900184f6:	682b      	ldr	r3, [r5, #0]
900184f8:	3301      	adds	r3, #1
900184fa:	602b      	str	r3, [r5, #0]
900184fc:	2730      	movs	r7, #48	@ 0x30
900184fe:	2c00      	cmp	r4, #0
90018500:	d04e      	beq.n	900185a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90018502:	682e      	ldr	r6, [r5, #0]
90018504:	3c01      	subs	r4, #1
90018506:	42b2      	cmp	r2, r6
90018508:	b2a4      	uxth	r4, r4
9001850a:	dd49      	ble.n	900185a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001850c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90018510:	682b      	ldr	r3, [r5, #0]
90018512:	3301      	adds	r3, #1
90018514:	602b      	str	r3, [r5, #0]
90018516:	e7f2      	b.n	900184fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90018518:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
9001851c:	d01d      	beq.n	9001855a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001851e:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
90018522:	d002      	beq.n	9001852a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90018524:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
90018528:	e7c9      	b.n	900184be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001852a:	4684      	mov	ip, r0
9001852c:	f04f 0800 	mov.w	r8, #0
90018530:	2c00      	cmp	r4, #0
90018532:	d0c6      	beq.n	900184c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90018534:	b947      	cbnz	r7, 90018548 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90018536:	2801      	cmp	r0, #1
90018538:	d106      	bne.n	90018548 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001853a:	8814      	ldrh	r4, [r2, #0]
9001853c:	2c30      	cmp	r4, #48	@ 0x30
9001853e:	bf02      	ittt	eq
90018540:	3202      	addeq	r2, #2
90018542:	4638      	moveq	r0, r7
90018544:	f8cb 2000 	streq.w	r2, [fp]
90018548:	45bc      	cmp	ip, r7
9001854a:	da14      	bge.n	90018576 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001854c:	b2bf      	uxth	r7, r7
9001854e:	eba7 040c 	sub.w	r4, r7, ip
90018552:	46bc      	mov	ip, r7
90018554:	b2a4      	uxth	r4, r4
90018556:	2600      	movs	r6, #0
90018558:	e7b3      	b.n	900184c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001855a:	4684      	mov	ip, r0
9001855c:	b16c      	cbz	r4, 9001857a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001855e:	42b8      	cmp	r0, r7
90018560:	dd00      	ble.n	90018564 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
90018562:	b2b8      	uxth	r0, r7
90018564:	2400      	movs	r4, #0
90018566:	e003      	b.n	90018570 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90018568:	f04f 0c01 	mov.w	ip, #1
9001856c:	2400      	movs	r4, #0
9001856e:	4660      	mov	r0, ip
90018570:	4626      	mov	r6, r4
90018572:	46a0      	mov	r8, r4
90018574:	e7a5      	b.n	900184c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90018576:	2400      	movs	r4, #0
90018578:	e7ed      	b.n	90018556 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001857a:	4626      	mov	r6, r4
9001857c:	46a0      	mov	r8, r4
9001857e:	e7a0      	b.n	900184c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90018580:	2900      	cmp	r1, #0
90018582:	d0b0      	beq.n	900184e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90018584:	2720      	movs	r7, #32
90018586:	682e      	ldr	r6, [r5, #0]
90018588:	2900      	cmp	r1, #0
9001858a:	d0ac      	beq.n	900184e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001858c:	3901      	subs	r1, #1
9001858e:	4296      	cmp	r6, r2
90018590:	b289      	uxth	r1, r1
90018592:	daa7      	bge.n	900184e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90018594:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90018598:	682b      	ldr	r3, [r5, #0]
9001859a:	3301      	adds	r3, #1
9001859c:	602b      	str	r3, [r5, #0]
9001859e:	e7f2      	b.n	90018586 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
900185a0:	b188      	cbz	r0, 900185c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900185a2:	682b      	ldr	r3, [r5, #0]
900185a4:	3801      	subs	r0, #1
900185a6:	429a      	cmp	r2, r3
900185a8:	b280      	uxth	r0, r0
900185aa:	dd0c      	ble.n	900185c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900185ac:	f8db 3000 	ldr.w	r3, [fp]
900185b0:	1c9c      	adds	r4, r3, #2
900185b2:	f8cb 4000 	str.w	r4, [fp]
900185b6:	881c      	ldrh	r4, [r3, #0]
900185b8:	682b      	ldr	r3, [r5, #0]
900185ba:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
900185be:	682b      	ldr	r3, [r5, #0]
900185c0:	3301      	adds	r3, #1
900185c2:	602b      	str	r3, [r5, #0]
900185c4:	e7ec      	b.n	900185a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
900185c6:	2620      	movs	r6, #32
900185c8:	b151      	cbz	r1, 900185e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
900185ca:	6828      	ldr	r0, [r5, #0]
900185cc:	3901      	subs	r1, #1
900185ce:	4282      	cmp	r2, r0
900185d0:	b289      	uxth	r1, r1
900185d2:	dd05      	ble.n	900185e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
900185d4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
900185d8:	682b      	ldr	r3, [r5, #0]
900185da:	3301      	adds	r3, #1
900185dc:	602b      	str	r3, [r5, #0]
900185de:	e7f3      	b.n	900185c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
900185e0:	b005      	add	sp, #20
900185e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900185e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
900185e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900185ea:	2400      	movs	r4, #0
900185ec:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
900185f0:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
900185f4:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
900185f8:	8014      	strh	r4, [r2, #0]
900185fa:	701c      	strb	r4, [r3, #0]
900185fc:	f888 4000 	strb.w	r4, [r8]
90018600:	f88c 4000 	strb.w	r4, [ip]
90018604:	f88e 4000 	strb.w	r4, [lr]
90018608:	703c      	strb	r4, [r7, #0]
9001860a:	6804      	ldr	r4, [r0, #0]
9001860c:	b1a4      	cbz	r4, 90018638 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001860e:	8824      	ldrh	r4, [r4, #0]
90018610:	f04f 0901 	mov.w	r9, #1
90018614:	b314      	cbz	r4, 9001865c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90018616:	2c2b      	cmp	r4, #43	@ 0x2b
90018618:	d001      	beq.n	9001861e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001861a:	2c20      	cmp	r4, #32
9001861c:	d110      	bne.n	90018640 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001861e:	8014      	strh	r4, [r2, #0]
90018620:	6804      	ldr	r4, [r0, #0]
90018622:	b10c      	cbz	r4, 90018628 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90018624:	3402      	adds	r4, #2
90018626:	6004      	str	r4, [r0, #0]
90018628:	680c      	ldr	r4, [r1, #0]
9001862a:	b10c      	cbz	r4, 90018630 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001862c:	3401      	adds	r4, #1
9001862e:	600c      	str	r4, [r1, #0]
90018630:	6804      	ldr	r4, [r0, #0]
90018632:	b17c      	cbz	r4, 90018654 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90018634:	8824      	ldrh	r4, [r4, #0]
90018636:	e7ed      	b.n	90018614 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90018638:	680c      	ldr	r4, [r1, #0]
9001863a:	b17c      	cbz	r4, 9001865c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001863c:	7824      	ldrb	r4, [r4, #0]
9001863e:	e7e7      	b.n	90018610 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
90018640:	2c2d      	cmp	r4, #45	@ 0x2d
90018642:	d102      	bne.n	9001864a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90018644:	f883 9000 	strb.w	r9, [r3]
90018648:	e7ea      	b.n	90018620 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001864a:	2c23      	cmp	r4, #35	@ 0x23
9001864c:	d107      	bne.n	9001865e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001864e:	f888 9000 	strb.w	r9, [r8]
90018652:	e7e5      	b.n	90018620 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90018654:	680c      	ldr	r4, [r1, #0]
90018656:	b10c      	cbz	r4, 9001865c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90018658:	7824      	ldrb	r4, [r4, #0]
9001865a:	e7db      	b.n	90018614 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001865c:	2400      	movs	r4, #0
9001865e:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
90018662:	2b09      	cmp	r3, #9
90018664:	d901      	bls.n	9001866a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90018666:	2c2a      	cmp	r4, #42	@ 0x2a
90018668:	d122      	bne.n	900186b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001866a:	2301      	movs	r3, #1
9001866c:	2c30      	cmp	r4, #48	@ 0x30
9001866e:	f88e 3000 	strb.w	r3, [lr]
90018672:	d10d      	bne.n	90018690 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90018674:	f88c 3000 	strb.w	r3, [ip]
90018678:	6803      	ldr	r3, [r0, #0]
9001867a:	b10b      	cbz	r3, 90018680 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001867c:	3302      	adds	r3, #2
9001867e:	6003      	str	r3, [r0, #0]
90018680:	680b      	ldr	r3, [r1, #0]
90018682:	b10b      	cbz	r3, 90018688 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
90018684:	3301      	adds	r3, #1
90018686:	600b      	str	r3, [r1, #0]
90018688:	6803      	ldr	r3, [r0, #0]
9001868a:	2b00      	cmp	r3, #0
9001868c:	d02f      	beq.n	900186ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001868e:	881c      	ldrh	r4, [r3, #0]
90018690:	2c2a      	cmp	r4, #42	@ 0x2a
90018692:	d135      	bne.n	90018700 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90018694:	f04f 33ff 	mov.w	r3, #4294967295
90018698:	6033      	str	r3, [r6, #0]
9001869a:	6803      	ldr	r3, [r0, #0]
9001869c:	b10b      	cbz	r3, 900186a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001869e:	3302      	adds	r3, #2
900186a0:	6003      	str	r3, [r0, #0]
900186a2:	680b      	ldr	r3, [r1, #0]
900186a4:	b10b      	cbz	r3, 900186aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
900186a6:	3301      	adds	r3, #1
900186a8:	600b      	str	r3, [r1, #0]
900186aa:	6803      	ldr	r3, [r0, #0]
900186ac:	b31b      	cbz	r3, 900186f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
900186ae:	881c      	ldrh	r4, [r3, #0]
900186b0:	2c2e      	cmp	r4, #46	@ 0x2e
900186b2:	d11a      	bne.n	900186ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900186b4:	2301      	movs	r3, #1
900186b6:	703b      	strb	r3, [r7, #0]
900186b8:	6803      	ldr	r3, [r0, #0]
900186ba:	b10b      	cbz	r3, 900186c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
900186bc:	3302      	adds	r3, #2
900186be:	6003      	str	r3, [r0, #0]
900186c0:	680b      	ldr	r3, [r1, #0]
900186c2:	b10b      	cbz	r3, 900186c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
900186c4:	3301      	adds	r3, #1
900186c6:	600b      	str	r3, [r1, #0]
900186c8:	6803      	ldr	r3, [r0, #0]
900186ca:	2b00      	cmp	r3, #0
900186cc:	d036      	beq.n	9001873c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
900186ce:	881b      	ldrh	r3, [r3, #0]
900186d0:	2b2a      	cmp	r3, #42	@ 0x2a
900186d2:	d137      	bne.n	90018744 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
900186d4:	f04f 33ff 	mov.w	r3, #4294967295
900186d8:	602b      	str	r3, [r5, #0]
900186da:	6803      	ldr	r3, [r0, #0]
900186dc:	b10b      	cbz	r3, 900186e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
900186de:	3302      	adds	r3, #2
900186e0:	6003      	str	r3, [r0, #0]
900186e2:	680b      	ldr	r3, [r1, #0]
900186e4:	b10b      	cbz	r3, 900186ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900186e6:	3301      	adds	r3, #1
900186e8:	600b      	str	r3, [r1, #0]
900186ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900186ee:	680c      	ldr	r4, [r1, #0]
900186f0:	b134      	cbz	r4, 90018700 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
900186f2:	7824      	ldrb	r4, [r4, #0]
900186f4:	e7cc      	b.n	90018690 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
900186f6:	680b      	ldr	r3, [r1, #0]
900186f8:	2b00      	cmp	r3, #0
900186fa:	d0f6      	beq.n	900186ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900186fc:	781c      	ldrb	r4, [r3, #0]
900186fe:	e7d7      	b.n	900186b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90018700:	2300      	movs	r3, #0
90018702:	220a      	movs	r2, #10
90018704:	6033      	str	r3, [r6, #0]
90018706:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001870a:	fa1f f38c 	uxth.w	r3, ip
9001870e:	2b09      	cmp	r3, #9
90018710:	d8ce      	bhi.n	900186b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90018712:	6833      	ldr	r3, [r6, #0]
90018714:	fb02 c303 	mla	r3, r2, r3, ip
90018718:	6033      	str	r3, [r6, #0]
9001871a:	6803      	ldr	r3, [r0, #0]
9001871c:	b10b      	cbz	r3, 90018722 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001871e:	3302      	adds	r3, #2
90018720:	6003      	str	r3, [r0, #0]
90018722:	680b      	ldr	r3, [r1, #0]
90018724:	b10b      	cbz	r3, 9001872a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90018726:	3301      	adds	r3, #1
90018728:	600b      	str	r3, [r1, #0]
9001872a:	6803      	ldr	r3, [r0, #0]
9001872c:	b10b      	cbz	r3, 90018732 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001872e:	881c      	ldrh	r4, [r3, #0]
90018730:	e7e9      	b.n	90018706 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90018732:	680c      	ldr	r4, [r1, #0]
90018734:	2c00      	cmp	r4, #0
90018736:	d0e6      	beq.n	90018706 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90018738:	7824      	ldrb	r4, [r4, #0]
9001873a:	e7e4      	b.n	90018706 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001873c:	680b      	ldr	r3, [r1, #0]
9001873e:	b10b      	cbz	r3, 90018744 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90018740:	781b      	ldrb	r3, [r3, #0]
90018742:	e7c5      	b.n	900186d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90018744:	2200      	movs	r2, #0
90018746:	240a      	movs	r4, #10
90018748:	602a      	str	r2, [r5, #0]
9001874a:	3b30      	subs	r3, #48	@ 0x30
9001874c:	682a      	ldr	r2, [r5, #0]
9001874e:	b29e      	uxth	r6, r3
90018750:	2e09      	cmp	r6, #9
90018752:	d813      	bhi.n	9001877c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90018754:	fb04 3302 	mla	r3, r4, r2, r3
90018758:	602b      	str	r3, [r5, #0]
9001875a:	6803      	ldr	r3, [r0, #0]
9001875c:	b10b      	cbz	r3, 90018762 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001875e:	3302      	adds	r3, #2
90018760:	6003      	str	r3, [r0, #0]
90018762:	680b      	ldr	r3, [r1, #0]
90018764:	b10b      	cbz	r3, 9001876a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90018766:	3301      	adds	r3, #1
90018768:	600b      	str	r3, [r1, #0]
9001876a:	6803      	ldr	r3, [r0, #0]
9001876c:	b10b      	cbz	r3, 90018772 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001876e:	881b      	ldrh	r3, [r3, #0]
90018770:	e7eb      	b.n	9001874a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90018772:	680b      	ldr	r3, [r1, #0]
90018774:	2b00      	cmp	r3, #0
90018776:	d0e8      	beq.n	9001874a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90018778:	781b      	ldrb	r3, [r3, #0]
9001877a:	e7e6      	b.n	9001874a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001877c:	2a06      	cmp	r2, #6
9001877e:	bfa8      	it	ge
90018780:	2206      	movge	r2, #6
90018782:	602a      	str	r2, [r5, #0]
90018784:	e7b1      	b.n	900186ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

90018786 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
90018786:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001878a:	b0a3      	sub	sp, #140	@ 0x8c
9001878c:	2600      	movs	r6, #0
9001878e:	4607      	mov	r7, r0
90018790:	4688      	mov	r8, r1
90018792:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
90018796:	4631      	mov	r1, r6
90018798:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
9001879a:	4648      	mov	r0, r9
9001879c:	960d      	str	r6, [sp, #52]	@ 0x34
9001879e:	e9cd 3208 	strd	r3, r2, [sp, #32]
900187a2:	2242      	movs	r2, #66	@ 0x42
900187a4:	f010 f884 	bl	900288b0 <memset>
900187a8:	b15f      	cbz	r7, 900187c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
900187aa:	f108 3aff 	add.w	sl, r8, #4294967295
900187ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900187b0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900187b2:	b152      	cbz	r2, 900187ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
900187b4:	8812      	ldrh	r2, [r2, #0]
900187b6:	b10a      	cbz	r2, 900187bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900187b8:	459a      	cmp	sl, r3
900187ba:	dc2e      	bgt.n	9001881a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
900187bc:	2200      	movs	r2, #0
900187be:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
900187c2:	4638      	mov	r0, r7
900187c4:	b023      	add	sp, #140	@ 0x8c
900187c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900187ca:	9a08      	ldr	r2, [sp, #32]
900187cc:	2a00      	cmp	r2, #0
900187ce:	d0f5      	beq.n	900187bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900187d0:	7812      	ldrb	r2, [r2, #0]
900187d2:	e7f0      	b.n	900187b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
900187d4:	2d00      	cmp	r5, #0
900187d6:	d0ea      	beq.n	900187ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
900187d8:	782a      	ldrb	r2, [r5, #0]
900187da:	b142      	cbz	r2, 900187ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
900187dc:	2a25      	cmp	r2, #37	@ 0x25
900187de:	d001      	beq.n	900187e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
900187e0:	459a      	cmp	sl, r3
900187e2:	dc08      	bgt.n	900187f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
900187e4:	f1bb 0f00 	cmp.w	fp, #0
900187e8:	d121      	bne.n	9001882e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
900187ea:	2d00      	cmp	r5, #0
900187ec:	d0df      	beq.n	900187ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
900187ee:	782a      	ldrb	r2, [r5, #0]
900187f0:	f04f 0b00 	mov.w	fp, #0
900187f4:	e01d      	b.n	90018832 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
900187f6:	f1bb 0f00 	cmp.w	fp, #0
900187fa:	d077      	beq.n	900188ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
900187fc:	f8bb 2000 	ldrh.w	r2, [fp]
90018800:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90018804:	f1bb 0f00 	cmp.w	fp, #0
90018808:	d002      	beq.n	90018810 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001880a:	f10b 0202 	add.w	r2, fp, #2
9001880e:	9209      	str	r2, [sp, #36]	@ 0x24
90018810:	b10d      	cbz	r5, 90018816 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90018812:	3501      	adds	r5, #1
90018814:	9508      	str	r5, [sp, #32]
90018816:	3301      	adds	r3, #1
90018818:	930d      	str	r3, [sp, #52]	@ 0x34
9001881a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001881c:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90018820:	f1bb 0f00 	cmp.w	fp, #0
90018824:	d0d6      	beq.n	900187d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90018826:	f8bb 2000 	ldrh.w	r2, [fp]
9001882a:	2a00      	cmp	r2, #0
9001882c:	d1d6      	bne.n	900187dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001882e:	f8bb 2000 	ldrh.w	r2, [fp]
90018832:	2a00      	cmp	r2, #0
90018834:	d0bb      	beq.n	900187ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90018836:	459a      	cmp	sl, r3
90018838:	ddb9      	ble.n	900187ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001883a:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
9001883e:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
90018842:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
90018846:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001884a:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
9001884e:	960e      	str	r6, [sp, #56]	@ 0x38
90018850:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
90018854:	960f      	str	r6, [sp, #60]	@ 0x3c
90018856:	f1bb 0f00 	cmp.w	fp, #0
9001885a:	d002      	beq.n	90018862 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001885c:	f10b 0302 	add.w	r3, fp, #2
90018860:	9309      	str	r3, [sp, #36]	@ 0x24
90018862:	b10d      	cbz	r5, 90018868 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90018864:	1c6b      	adds	r3, r5, #1
90018866:	9308      	str	r3, [sp, #32]
90018868:	ab0f      	add	r3, sp, #60	@ 0x3c
9001886a:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
9001886e:	a908      	add	r1, sp, #32
90018870:	a809      	add	r0, sp, #36	@ 0x24
90018872:	9305      	str	r3, [sp, #20]
90018874:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
90018878:	9304      	str	r3, [sp, #16]
9001887a:	ab0e      	add	r3, sp, #56	@ 0x38
9001887c:	9303      	str	r3, [sp, #12]
9001887e:	ab0c      	add	r3, sp, #48	@ 0x30
90018880:	9302      	str	r3, [sp, #8]
90018882:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
90018886:	9301      	str	r3, [sp, #4]
90018888:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
9001888c:	9300      	str	r3, [sp, #0]
9001888e:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
90018892:	f7ff fea8 	bl	900185e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
90018896:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018898:	2b00      	cmp	r3, #0
9001889a:	bfbf      	itttt	lt
9001889c:	6823      	ldrlt	r3, [r4, #0]
9001889e:	3404      	addlt	r4, #4
900188a0:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900188a4:	930e      	strlt	r3, [sp, #56]	@ 0x38
900188a6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900188a8:	2b00      	cmp	r3, #0
900188aa:	bfbe      	ittt	lt
900188ac:	6823      	ldrlt	r3, [r4, #0]
900188ae:	3404      	addlt	r4, #4
900188b0:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900188b4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900188b8:	bfb8      	it	lt
900188ba:	930f      	strlt	r3, [sp, #60]	@ 0x3c
900188bc:	b1d9      	cbz	r1, 900188f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
900188be:	880b      	ldrh	r3, [r1, #0]
900188c0:	2b69      	cmp	r3, #105	@ 0x69
900188c2:	d01f      	beq.n	90018904 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900188c4:	d82f      	bhi.n	90018926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
900188c6:	2b58      	cmp	r3, #88	@ 0x58
900188c8:	d01c      	beq.n	90018904 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900188ca:	d818      	bhi.n	900188fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
900188cc:	2b25      	cmp	r3, #37	@ 0x25
900188ce:	d034      	beq.n	9001893a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
900188d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900188d2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
900188d6:	f1bb 0f00 	cmp.w	fp, #0
900188da:	f000 80b7 	beq.w	90018a4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
900188de:	f8bb 5000 	ldrh.w	r5, [fp]
900188e2:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
900188e6:	3301      	adds	r3, #1
900188e8:	930d      	str	r3, [sp, #52]	@ 0x34
900188ea:	e029      	b.n	90018940 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
900188ec:	b10d      	cbz	r5, 900188f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
900188ee:	782a      	ldrb	r2, [r5, #0]
900188f0:	e786      	b.n	90018800 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
900188f2:	462a      	mov	r2, r5
900188f4:	e784      	b.n	90018800 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
900188f6:	2a00      	cmp	r2, #0
900188f8:	d0ea      	beq.n	900188d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
900188fa:	7813      	ldrb	r3, [r2, #0]
900188fc:	e7e0      	b.n	900188c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
900188fe:	3b63      	subs	r3, #99	@ 0x63
90018900:	2b01      	cmp	r3, #1
90018902:	d8e5      	bhi.n	900188d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90018904:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
90018908:	b329      	cbz	r1, 90018956 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001890a:	880b      	ldrh	r3, [r1, #0]
9001890c:	2b69      	cmp	r3, #105	@ 0x69
9001890e:	d063      	beq.n	900189d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90018910:	d825      	bhi.n	9001895e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
90018912:	2b63      	cmp	r3, #99	@ 0x63
90018914:	d038      	beq.n	90018988 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90018916:	2b64      	cmp	r3, #100	@ 0x64
90018918:	d05e      	beq.n	900189d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001891a:	2b58      	cmp	r3, #88	@ 0x58
9001891c:	d07a      	beq.n	90018a14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001891e:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
90018922:	4625      	mov	r5, r4
90018924:	e036      	b.n	90018994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018926:	2b73      	cmp	r3, #115	@ 0x73
90018928:	d0ec      	beq.n	90018904 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001892a:	d802      	bhi.n	90018932 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001892c:	2b6f      	cmp	r3, #111	@ 0x6f
9001892e:	d1cf      	bne.n	900188d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90018930:	e7e8      	b.n	90018904 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90018932:	2b75      	cmp	r3, #117	@ 0x75
90018934:	d0e6      	beq.n	90018904 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90018936:	2b78      	cmp	r3, #120	@ 0x78
90018938:	e7f9      	b.n	9001892e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001893a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001893c:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90018940:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018942:	b10b      	cbz	r3, 90018948 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90018944:	3302      	adds	r3, #2
90018946:	9309      	str	r3, [sp, #36]	@ 0x24
90018948:	9b08      	ldr	r3, [sp, #32]
9001894a:	2b00      	cmp	r3, #0
9001894c:	f43f af2f 	beq.w	900187ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90018950:	3301      	adds	r3, #1
90018952:	9308      	str	r3, [sp, #32]
90018954:	e72b      	b.n	900187ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90018956:	2a00      	cmp	r2, #0
90018958:	d0e1      	beq.n	9001891e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001895a:	7813      	ldrb	r3, [r2, #0]
9001895c:	e7d6      	b.n	9001890c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001895e:	2b73      	cmp	r3, #115	@ 0x73
90018960:	d036      	beq.n	900189d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
90018962:	d807      	bhi.n	90018974 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90018964:	2b6f      	cmp	r3, #111	@ 0x6f
90018966:	d1da      	bne.n	9001891e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90018968:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001896a:	1d25      	adds	r5, r4, #4
9001896c:	2308      	movs	r3, #8
9001896e:	eba8 0202 	sub.w	r2, r8, r2
90018972:	e049      	b.n	90018a08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90018974:	2b75      	cmp	r3, #117	@ 0x75
90018976:	d042      	beq.n	900189fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90018978:	2b78      	cmp	r3, #120	@ 0x78
9001897a:	d1d0      	bne.n	9001891e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001897c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001897e:	1d25      	adds	r5, r4, #4
90018980:	2310      	movs	r3, #16
90018982:	eba8 0202 	sub.w	r2, r8, r2
90018986:	e03f      	b.n	90018a08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90018988:	6823      	ldr	r3, [r4, #0]
9001898a:	1d25      	adds	r5, r4, #4
9001898c:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
90018990:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
90018994:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018996:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
9001899a:	2b00      	cmp	r3, #0
9001899c:	d051      	beq.n	90018a42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001899e:	881a      	ldrh	r2, [r3, #0]
900189a0:	a80d      	add	r0, sp, #52	@ 0x34
900189a2:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
900189a6:	462c      	mov	r4, r5
900189a8:	9005      	str	r0, [sp, #20]
900189aa:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
900189ae:	9004      	str	r0, [sp, #16]
900189b0:	980e      	ldr	r0, [sp, #56]	@ 0x38
900189b2:	9003      	str	r0, [sp, #12]
900189b4:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
900189b8:	9002      	str	r0, [sp, #8]
900189ba:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900189bc:	9001      	str	r0, [sp, #4]
900189be:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
900189c2:	e9cd 8706 	strd	r8, r7, [sp, #24]
900189c6:	9000      	str	r0, [sp, #0]
900189c8:	a810      	add	r0, sp, #64	@ 0x40
900189ca:	f7ff fd49 	bl	90018460 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
900189ce:	e7b7      	b.n	90018940 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
900189d0:	1d25      	adds	r5, r4, #4
900189d2:	6823      	ldr	r3, [r4, #0]
900189d4:	9310      	str	r3, [sp, #64]	@ 0x40
900189d6:	e7dd      	b.n	90018994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
900189d8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
900189da:	230a      	movs	r3, #10
900189dc:	4649      	mov	r1, r9
900189de:	6820      	ldr	r0, [r4, #0]
900189e0:	eba8 0202 	sub.w	r2, r8, r2
900189e4:	1d25      	adds	r5, r4, #4
900189e6:	b292      	uxth	r2, r2
900189e8:	f7ff fcf0 	bl	900183cc <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
900189ec:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900189f0:	2b2d      	cmp	r3, #45	@ 0x2d
900189f2:	d1cf      	bne.n	90018994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
900189f4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900189f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900189fa:	3302      	adds	r3, #2
900189fc:	e7ea      	b.n	900189d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
900189fe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90018a00:	1d25      	adds	r5, r4, #4
90018a02:	230a      	movs	r3, #10
90018a04:	eba8 0202 	sub.w	r2, r8, r2
90018a08:	b292      	uxth	r2, r2
90018a0a:	4649      	mov	r1, r9
90018a0c:	6820      	ldr	r0, [r4, #0]
90018a0e:	f7ff fd09 	bl	90018424 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90018a12:	e7bf      	b.n	90018994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018a14:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90018a16:	2310      	movs	r3, #16
90018a18:	4649      	mov	r1, r9
90018a1a:	6820      	ldr	r0, [r4, #0]
90018a1c:	eba8 0202 	sub.w	r2, r8, r2
90018a20:	1d25      	adds	r5, r4, #4
90018a22:	b292      	uxth	r2, r2
90018a24:	f7ff fcfe 	bl	90018424 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90018a28:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
90018a2c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90018a30:	2b00      	cmp	r3, #0
90018a32:	d0af      	beq.n	90018994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018a34:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
90018a38:	2919      	cmp	r1, #25
90018a3a:	d8f7      	bhi.n	90018a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90018a3c:	3b20      	subs	r3, #32
90018a3e:	8013      	strh	r3, [r2, #0]
90018a40:	e7f4      	b.n	90018a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90018a42:	9a08      	ldr	r2, [sp, #32]
90018a44:	2a00      	cmp	r2, #0
90018a46:	d0ab      	beq.n	900189a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90018a48:	7812      	ldrb	r2, [r2, #0]
90018a4a:	e7a9      	b.n	900189a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90018a4c:	2d00      	cmp	r5, #0
90018a4e:	f43f af48 	beq.w	900188e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
90018a52:	782d      	ldrb	r5, [r5, #0]
90018a54:	e745      	b.n	900188e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90018a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90018a56:	b507      	push	{r0, r1, r2, lr}
90018a58:	9300      	str	r3, [sp, #0]
90018a5a:	4613      	mov	r3, r2
90018a5c:	2200      	movs	r2, #0
90018a5e:	f7ff fe92 	bl	90018786 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
90018a62:	b003      	add	sp, #12
90018a64:	f85d fb04 	ldr.w	pc, [sp], #4

90018a68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90018a68:	b40c      	push	{r2, r3}
90018a6a:	b507      	push	{r0, r1, r2, lr}
90018a6c:	ab04      	add	r3, sp, #16
90018a6e:	f853 2b04 	ldr.w	r2, [r3], #4
90018a72:	9301      	str	r3, [sp, #4]
90018a74:	f7ff ffef 	bl	90018a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90018a78:	b003      	add	sp, #12
90018a7a:	f85d eb04 	ldr.w	lr, [sp], #4
90018a7e:	b002      	add	sp, #8
90018a80:	4770      	bx	lr
	...

90018a84 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90018a84:	4b01      	ldr	r3, [pc, #4]	@ (90018a8c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90018a86:	6018      	str	r0, [r3, #0]
90018a88:	4770      	bx	lr
90018a8a:	bf00      	nop
90018a8c:	2402191c 	.word	0x2402191c

90018a90 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90018a90:	4b06      	ldr	r3, [pc, #24]	@ (90018aac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90018a92:	881a      	ldrh	r2, [r3, #0]
90018a94:	4282      	cmp	r2, r0
90018a96:	d807      	bhi.n	90018aa8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90018a98:	4b05      	ldr	r3, [pc, #20]	@ (90018ab0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90018a9a:	881b      	ldrh	r3, [r3, #0]
90018a9c:	4413      	add	r3, r2
90018a9e:	4298      	cmp	r0, r3
90018aa0:	bfac      	ite	ge
90018aa2:	2000      	movge	r0, #0
90018aa4:	2001      	movlt	r0, #1
90018aa6:	4770      	bx	lr
90018aa8:	2000      	movs	r0, #0
90018aaa:	4770      	bx	lr
90018aac:	2402193c 	.word	0x2402193c
90018ab0:	24021940 	.word	0x24021940

90018ab4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90018ab4:	b508      	push	{r3, lr}
90018ab6:	4601      	mov	r1, r0
90018ab8:	f7ff ffea 	bl	90018a90 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90018abc:	b118      	cbz	r0, 90018ac6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
90018abe:	4b02      	ldr	r3, [pc, #8]	@ (90018ac8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
90018ac0:	681b      	ldr	r3, [r3, #0]
90018ac2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90018ac6:	bd08      	pop	{r3, pc}
90018ac8:	24021920 	.word	0x24021920

90018acc <_ZN8touchgfx6Bitmap10clearCacheEv>:
90018acc:	b5f0      	push	{r4, r5, r6, r7, lr}
90018ace:	4c24      	ldr	r4, [pc, #144]	@ (90018b60 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
90018ad0:	6823      	ldr	r3, [r4, #0]
90018ad2:	2b00      	cmp	r3, #0
90018ad4:	d042      	beq.n	90018b5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90018ad6:	4a23      	ldr	r2, [pc, #140]	@ (90018b64 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90018ad8:	4d23      	ldr	r5, [pc, #140]	@ (90018b68 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90018ada:	8811      	ldrh	r1, [r2, #0]
90018adc:	f8b5 c000 	ldrh.w	ip, [r5]
90018ae0:	4822      	ldr	r0, [pc, #136]	@ (90018b6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
90018ae2:	4461      	add	r1, ip
90018ae4:	1c4a      	adds	r2, r1, #1
90018ae6:	008f      	lsls	r7, r1, #2
90018ae8:	f022 0201 	bic.w	r2, r2, #1
90018aec:	19de      	adds	r6, r3, r7
90018aee:	0412      	lsls	r2, r2, #16
90018af0:	6006      	str	r6, [r0, #0]
90018af2:	4e1f      	ldr	r6, [pc, #124]	@ (90018b70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
90018af4:	0c12      	lsrs	r2, r2, #16
90018af6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
90018afa:	19da      	adds	r2, r3, r7
90018afc:	6032      	str	r2, [r6, #0]
90018afe:	220e      	movs	r2, #14
90018b00:	fb02 f20c 	mul.w	r2, r2, ip
90018b04:	3203      	adds	r2, #3
90018b06:	f022 0203 	bic.w	r2, r2, #3
90018b0a:	443a      	add	r2, r7
90018b0c:	4f19      	ldr	r7, [pc, #100]	@ (90018b74 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
90018b0e:	4413      	add	r3, r2
90018b10:	603b      	str	r3, [r7, #0]
90018b12:	2300      	movs	r3, #0
90018b14:	4f18      	ldr	r7, [pc, #96]	@ (90018b78 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90018b16:	469c      	mov	ip, r3
90018b18:	803b      	strh	r3, [r7, #0]
90018b1a:	4f18      	ldr	r7, [pc, #96]	@ (90018b7c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90018b1c:	683f      	ldr	r7, [r7, #0]
90018b1e:	1aba      	subs	r2, r7, r2
90018b20:	4f17      	ldr	r7, [pc, #92]	@ (90018b80 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
90018b22:	603a      	str	r2, [r7, #0]
90018b24:	f64f 77ff 	movw	r7, #65535	@ 0xffff
90018b28:	4a16      	ldr	r2, [pc, #88]	@ (90018b84 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90018b2a:	8013      	strh	r3, [r2, #0]
90018b2c:	428b      	cmp	r3, r1
90018b2e:	d10d      	bne.n	90018b4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
90018b30:	882d      	ldrh	r5, [r5, #0]
90018b32:	2300      	movs	r3, #0
90018b34:	6830      	ldr	r0, [r6, #0]
90018b36:	240e      	movs	r4, #14
90018b38:	429d      	cmp	r5, r3
90018b3a:	d90f      	bls.n	90018b5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90018b3c:	fb04 0203 	mla	r2, r4, r3, r0
90018b40:	3301      	adds	r3, #1
90018b42:	7b11      	ldrb	r1, [r2, #12]
90018b44:	f36f 1145 	bfc	r1, #5, #1
90018b48:	7311      	strb	r1, [r2, #12]
90018b4a:	e7f5      	b.n	90018b38 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90018b4c:	6822      	ldr	r2, [r4, #0]
90018b4e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
90018b52:	6802      	ldr	r2, [r0, #0]
90018b54:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90018b58:	3301      	adds	r3, #1
90018b5a:	e7e7      	b.n	90018b2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90018b5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90018b5e:	bf00      	nop
90018b60:	24021920 	.word	0x24021920
90018b64:	2402193c 	.word	0x2402193c
90018b68:	24021940 	.word	0x24021940
90018b6c:	24021934 	.word	0x24021934
90018b70:	24021924 	.word	0x24021924
90018b74:	2402192c 	.word	0x2402192c
90018b78:	2402193e 	.word	0x2402193e
90018b7c:	24021928 	.word	0x24021928
90018b80:	24021938 	.word	0x24021938
90018b84:	24021930 	.word	0x24021930

90018b88 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90018b88:	4b06      	ldr	r3, [pc, #24]	@ (90018ba4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
90018b8a:	681b      	ldr	r3, [r3, #0]
90018b8c:	b943      	cbnz	r3, 90018ba0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90018b8e:	b139      	cbz	r1, 90018ba0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90018b90:	4b05      	ldr	r3, [pc, #20]	@ (90018ba8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
90018b92:	801a      	strh	r2, [r3, #0]
90018b94:	4b05      	ldr	r3, [pc, #20]	@ (90018bac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90018b96:	6019      	str	r1, [r3, #0]
90018b98:	4b05      	ldr	r3, [pc, #20]	@ (90018bb0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90018b9a:	6018      	str	r0, [r3, #0]
90018b9c:	f7ff bf96 	b.w	90018acc <_ZN8touchgfx6Bitmap10clearCacheEv>
90018ba0:	4770      	bx	lr
90018ba2:	bf00      	nop
90018ba4:	2402192c 	.word	0x2402192c
90018ba8:	24021940 	.word	0x24021940
90018bac:	24021928 	.word	0x24021928
90018bb0:	24021920 	.word	0x24021920

90018bb4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90018bb4:	b470      	push	{r4, r5, r6}
90018bb6:	4c07      	ldr	r4, [pc, #28]	@ (90018bd4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90018bb8:	4605      	mov	r5, r0
90018bba:	4610      	mov	r0, r2
90018bbc:	9a03      	ldr	r2, [sp, #12]
90018bbe:	6826      	ldr	r6, [r4, #0]
90018bc0:	b936      	cbnz	r6, 90018bd0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
90018bc2:	6025      	str	r5, [r4, #0]
90018bc4:	4c04      	ldr	r4, [pc, #16]	@ (90018bd8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90018bc6:	8021      	strh	r1, [r4, #0]
90018bc8:	4619      	mov	r1, r3
90018bca:	bc70      	pop	{r4, r5, r6}
90018bcc:	f7ff bfdc 	b.w	90018b88 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
90018bd0:	bc70      	pop	{r4, r5, r6}
90018bd2:	4770      	bx	lr
90018bd4:	24021944 	.word	0x24021944
90018bd8:	2402193c 	.word	0x2402193c

90018bdc <_ZNK8touchgfx6Bitmap8getWidthEv>:
90018bdc:	4a12      	ldr	r2, [pc, #72]	@ (90018c28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
90018bde:	8803      	ldrh	r3, [r0, #0]
90018be0:	8812      	ldrh	r2, [r2, #0]
90018be2:	4293      	cmp	r3, r2
90018be4:	d207      	bcs.n	90018bf6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90018be6:	4a11      	ldr	r2, [pc, #68]	@ (90018c2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90018be8:	2114      	movs	r1, #20
90018bea:	6812      	ldr	r2, [r2, #0]
90018bec:	fb01 2303 	mla	r3, r1, r3, r2
90018bf0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90018bf4:	4770      	bx	lr
90018bf6:	490e      	ldr	r1, [pc, #56]	@ (90018c30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90018bf8:	8809      	ldrh	r1, [r1, #0]
90018bfa:	4411      	add	r1, r2
90018bfc:	428b      	cmp	r3, r1
90018bfe:	da04      	bge.n	90018c0a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
90018c00:	1a9b      	subs	r3, r3, r2
90018c02:	4a0c      	ldr	r2, [pc, #48]	@ (90018c34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
90018c04:	210e      	movs	r1, #14
90018c06:	6812      	ldr	r2, [r2, #0]
90018c08:	e7f0      	b.n	90018bec <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
90018c0a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90018c0e:	4293      	cmp	r3, r2
90018c10:	d108      	bne.n	90018c24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
90018c12:	4b09      	ldr	r3, [pc, #36]	@ (90018c38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90018c14:	781b      	ldrb	r3, [r3, #0]
90018c16:	b91b      	cbnz	r3, 90018c20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
90018c18:	4b08      	ldr	r3, [pc, #32]	@ (90018c3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90018c1a:	f9b3 0000 	ldrsh.w	r0, [r3]
90018c1e:	4770      	bx	lr
90018c20:	4b07      	ldr	r3, [pc, #28]	@ (90018c40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
90018c22:	e7fa      	b.n	90018c1a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90018c24:	2000      	movs	r0, #0
90018c26:	4770      	bx	lr
90018c28:	2402193c 	.word	0x2402193c
90018c2c:	24021944 	.word	0x24021944
90018c30:	24021940 	.word	0x24021940
90018c34:	24021924 	.word	0x24021924
90018c38:	240218ac 	.word	0x240218ac
90018c3c:	240218ae 	.word	0x240218ae
90018c40:	240218b0 	.word	0x240218b0

90018c44 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90018c44:	4a12      	ldr	r2, [pc, #72]	@ (90018c90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90018c46:	8803      	ldrh	r3, [r0, #0]
90018c48:	8812      	ldrh	r2, [r2, #0]
90018c4a:	4293      	cmp	r3, r2
90018c4c:	d207      	bcs.n	90018c5e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
90018c4e:	4a11      	ldr	r2, [pc, #68]	@ (90018c94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
90018c50:	2114      	movs	r1, #20
90018c52:	6812      	ldr	r2, [r2, #0]
90018c54:	fb01 2303 	mla	r3, r1, r3, r2
90018c58:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90018c5c:	4770      	bx	lr
90018c5e:	490e      	ldr	r1, [pc, #56]	@ (90018c98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
90018c60:	8809      	ldrh	r1, [r1, #0]
90018c62:	4411      	add	r1, r2
90018c64:	428b      	cmp	r3, r1
90018c66:	da04      	bge.n	90018c72 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90018c68:	1a9b      	subs	r3, r3, r2
90018c6a:	4a0c      	ldr	r2, [pc, #48]	@ (90018c9c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90018c6c:	210e      	movs	r1, #14
90018c6e:	6812      	ldr	r2, [r2, #0]
90018c70:	e7f0      	b.n	90018c54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
90018c72:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90018c76:	4293      	cmp	r3, r2
90018c78:	d108      	bne.n	90018c8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
90018c7a:	4b09      	ldr	r3, [pc, #36]	@ (90018ca0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90018c7c:	781b      	ldrb	r3, [r3, #0]
90018c7e:	b91b      	cbnz	r3, 90018c88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
90018c80:	4b08      	ldr	r3, [pc, #32]	@ (90018ca4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
90018c82:	f9b3 0000 	ldrsh.w	r0, [r3]
90018c86:	4770      	bx	lr
90018c88:	4b07      	ldr	r3, [pc, #28]	@ (90018ca8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
90018c8a:	e7fa      	b.n	90018c82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
90018c8c:	2000      	movs	r0, #0
90018c8e:	4770      	bx	lr
90018c90:	2402193c 	.word	0x2402193c
90018c94:	24021944 	.word	0x24021944
90018c98:	24021940 	.word	0x24021940
90018c9c:	24021924 	.word	0x24021924
90018ca0:	240218ac 	.word	0x240218ac
90018ca4:	240218b0 	.word	0x240218b0
90018ca8:	240218ae 	.word	0x240218ae

90018cac <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90018cac:	4a22      	ldr	r2, [pc, #136]	@ (90018d38 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
90018cae:	b530      	push	{r4, r5, lr}
90018cb0:	880b      	ldrh	r3, [r1, #0]
90018cb2:	8812      	ldrh	r2, [r2, #0]
90018cb4:	4293      	cmp	r3, r2
90018cb6:	d213      	bcs.n	90018ce0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90018cb8:	4a20      	ldr	r2, [pc, #128]	@ (90018d3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
90018cba:	2114      	movs	r1, #20
90018cbc:	6812      	ldr	r2, [r2, #0]
90018cbe:	fb01 2303 	mla	r3, r1, r3, r2
90018cc2:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90018cc6:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90018cca:	8a1a      	ldrh	r2, [r3, #16]
90018ccc:	8a5b      	ldrh	r3, [r3, #18]
90018cce:	f3c2 020c 	ubfx	r2, r2, #0, #13
90018cd2:	8004      	strh	r4, [r0, #0]
90018cd4:	f3c3 030c 	ubfx	r3, r3, #0, #13
90018cd8:	8041      	strh	r1, [r0, #2]
90018cda:	8082      	strh	r2, [r0, #4]
90018cdc:	80c3      	strh	r3, [r0, #6]
90018cde:	e024      	b.n	90018d2a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
90018ce0:	4917      	ldr	r1, [pc, #92]	@ (90018d40 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
90018ce2:	8809      	ldrh	r1, [r1, #0]
90018ce4:	4411      	add	r1, r2
90018ce6:	428b      	cmp	r3, r1
90018ce8:	da10      	bge.n	90018d0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
90018cea:	1a9b      	subs	r3, r3, r2
90018cec:	220e      	movs	r2, #14
90018cee:	4353      	muls	r3, r2
90018cf0:	4a14      	ldr	r2, [pc, #80]	@ (90018d44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
90018cf2:	6811      	ldr	r1, [r2, #0]
90018cf4:	18ca      	adds	r2, r1, r3
90018cf6:	5ecd      	ldrsh	r5, [r1, r3]
90018cf8:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
90018cfc:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
90018d00:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
90018d04:	8005      	strh	r5, [r0, #0]
90018d06:	8044      	strh	r4, [r0, #2]
90018d08:	8081      	strh	r1, [r0, #4]
90018d0a:	e7e7      	b.n	90018cdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90018d0c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90018d10:	4293      	cmp	r3, r2
90018d12:	d10b      	bne.n	90018d2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
90018d14:	4b0c      	ldr	r3, [pc, #48]	@ (90018d48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
90018d16:	f9b3 1000 	ldrsh.w	r1, [r3]
90018d1a:	4b0c      	ldr	r3, [pc, #48]	@ (90018d4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
90018d1c:	8081      	strh	r1, [r0, #4]
90018d1e:	f9b3 2000 	ldrsh.w	r2, [r3]
90018d22:	2300      	movs	r3, #0
90018d24:	80c2      	strh	r2, [r0, #6]
90018d26:	8003      	strh	r3, [r0, #0]
90018d28:	8043      	strh	r3, [r0, #2]
90018d2a:	bd30      	pop	{r4, r5, pc}
90018d2c:	2300      	movs	r3, #0
90018d2e:	8003      	strh	r3, [r0, #0]
90018d30:	8043      	strh	r3, [r0, #2]
90018d32:	8083      	strh	r3, [r0, #4]
90018d34:	e7d2      	b.n	90018cdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90018d36:	bf00      	nop
90018d38:	2402193c 	.word	0x2402193c
90018d3c:	24021944 	.word	0x24021944
90018d40:	24021940 	.word	0x24021940
90018d44:	24021924 	.word	0x24021924
90018d48:	240218a8 	.word	0x240218a8
90018d4c:	240218aa 	.word	0x240218aa

90018d50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90018d50:	4a17      	ldr	r2, [pc, #92]	@ (90018db0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90018d52:	8803      	ldrh	r3, [r0, #0]
90018d54:	8812      	ldrh	r2, [r2, #0]
90018d56:	4293      	cmp	r3, r2
90018d58:	d213      	bcs.n	90018d82 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
90018d5a:	4a16      	ldr	r2, [pc, #88]	@ (90018db4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
90018d5c:	2114      	movs	r1, #20
90018d5e:	6812      	ldr	r2, [r2, #0]
90018d60:	fb01 2303 	mla	r3, r1, r3, r2
90018d64:	8a1a      	ldrh	r2, [r3, #16]
90018d66:	8919      	ldrh	r1, [r3, #8]
90018d68:	f3c2 020c 	ubfx	r2, r2, #0, #13
90018d6c:	428a      	cmp	r2, r1
90018d6e:	db1d      	blt.n	90018dac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018d70:	8a58      	ldrh	r0, [r3, #18]
90018d72:	f3c0 000c 	ubfx	r0, r0, #0, #13
90018d76:	895b      	ldrh	r3, [r3, #10]
90018d78:	4298      	cmp	r0, r3
90018d7a:	bfac      	ite	ge
90018d7c:	2000      	movge	r0, #0
90018d7e:	2001      	movlt	r0, #1
90018d80:	4770      	bx	lr
90018d82:	490d      	ldr	r1, [pc, #52]	@ (90018db8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90018d84:	8809      	ldrh	r1, [r1, #0]
90018d86:	4411      	add	r1, r2
90018d88:	428b      	cmp	r3, r1
90018d8a:	da0d      	bge.n	90018da8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
90018d8c:	1a9b      	subs	r3, r3, r2
90018d8e:	4a0b      	ldr	r2, [pc, #44]	@ (90018dbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90018d90:	210e      	movs	r1, #14
90018d92:	6812      	ldr	r2, [r2, #0]
90018d94:	fb01 2303 	mla	r3, r1, r3, r2
90018d98:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
90018d9c:	891a      	ldrh	r2, [r3, #8]
90018d9e:	4291      	cmp	r1, r2
90018da0:	db04      	blt.n	90018dac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018da2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90018da6:	e7e6      	b.n	90018d76 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
90018da8:	2000      	movs	r0, #0
90018daa:	4770      	bx	lr
90018dac:	2001      	movs	r0, #1
90018dae:	4770      	bx	lr
90018db0:	2402193c 	.word	0x2402193c
90018db4:	24021944 	.word	0x24021944
90018db8:	24021940 	.word	0x24021940
90018dbc:	24021924 	.word	0x24021924

90018dc0 <_ZNK8touchgfx6Bitmap7getDataEv>:
90018dc0:	4a12      	ldr	r2, [pc, #72]	@ (90018e0c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90018dc2:	8803      	ldrh	r3, [r0, #0]
90018dc4:	8811      	ldrh	r1, [r2, #0]
90018dc6:	428b      	cmp	r3, r1
90018dc8:	d20b      	bcs.n	90018de2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
90018dca:	4a11      	ldr	r2, [pc, #68]	@ (90018e10 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90018dcc:	6812      	ldr	r2, [r2, #0]
90018dce:	b112      	cbz	r2, 90018dd6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90018dd0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90018dd4:	b9c0      	cbnz	r0, 90018e08 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
90018dd6:	4a0f      	ldr	r2, [pc, #60]	@ (90018e14 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90018dd8:	6811      	ldr	r1, [r2, #0]
90018dda:	2214      	movs	r2, #20
90018ddc:	4353      	muls	r3, r2
90018dde:	58c8      	ldr	r0, [r1, r3]
90018de0:	4770      	bx	lr
90018de2:	4a0d      	ldr	r2, [pc, #52]	@ (90018e18 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
90018de4:	8812      	ldrh	r2, [r2, #0]
90018de6:	440a      	add	r2, r1
90018de8:	4293      	cmp	r3, r2
90018dea:	da04      	bge.n	90018df6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
90018dec:	4a08      	ldr	r2, [pc, #32]	@ (90018e10 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90018dee:	6812      	ldr	r2, [r2, #0]
90018df0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90018df4:	4770      	bx	lr
90018df6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90018dfa:	4293      	cmp	r3, r2
90018dfc:	d103      	bne.n	90018e06 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
90018dfe:	4b07      	ldr	r3, [pc, #28]	@ (90018e1c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
90018e00:	681b      	ldr	r3, [r3, #0]
90018e02:	6c58      	ldr	r0, [r3, #68]	@ 0x44
90018e04:	4770      	bx	lr
90018e06:	2000      	movs	r0, #0
90018e08:	4770      	bx	lr
90018e0a:	bf00      	nop
90018e0c:	2402193c 	.word	0x2402193c
90018e10:	24021920 	.word	0x24021920
90018e14:	24021944 	.word	0x24021944
90018e18:	24021940 	.word	0x24021940
90018e1c:	240218b4 	.word	0x240218b4

90018e20 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
90018e20:	4b24      	ldr	r3, [pc, #144]	@ (90018eb4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
90018e22:	8802      	ldrh	r2, [r0, #0]
90018e24:	8818      	ldrh	r0, [r3, #0]
90018e26:	4282      	cmp	r2, r0
90018e28:	d221      	bcs.n	90018e6e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
90018e2a:	4b23      	ldr	r3, [pc, #140]	@ (90018eb8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
90018e2c:	6819      	ldr	r1, [r3, #0]
90018e2e:	2314      	movs	r3, #20
90018e30:	fb03 1302 	mla	r3, r3, r2, r1
90018e34:	6858      	ldr	r0, [r3, #4]
90018e36:	2800      	cmp	r0, #0
90018e38:	d03a      	beq.n	90018eb0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90018e3a:	4920      	ldr	r1, [pc, #128]	@ (90018ebc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90018e3c:	6809      	ldr	r1, [r1, #0]
90018e3e:	2900      	cmp	r1, #0
90018e40:	d036      	beq.n	90018eb0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90018e42:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
90018e46:	2900      	cmp	r1, #0
90018e48:	d032      	beq.n	90018eb0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90018e4a:	891a      	ldrh	r2, [r3, #8]
90018e4c:	8958      	ldrh	r0, [r3, #10]
90018e4e:	4350      	muls	r0, r2
90018e50:	7c5a      	ldrb	r2, [r3, #17]
90018e52:	7cdb      	ldrb	r3, [r3, #19]
90018e54:	0952      	lsrs	r2, r2, #5
90018e56:	f3c3 1342 	ubfx	r3, r3, #5, #3
90018e5a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
90018e5e:	2b0b      	cmp	r3, #11
90018e60:	bf18      	it	ne
90018e62:	0040      	lslne	r0, r0, #1
90018e64:	3003      	adds	r0, #3
90018e66:	f020 0003 	bic.w	r0, r0, #3
90018e6a:	4408      	add	r0, r1
90018e6c:	4770      	bx	lr
90018e6e:	4b14      	ldr	r3, [pc, #80]	@ (90018ec0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90018e70:	881b      	ldrh	r3, [r3, #0]
90018e72:	4403      	add	r3, r0
90018e74:	429a      	cmp	r2, r3
90018e76:	da1a      	bge.n	90018eae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90018e78:	4b12      	ldr	r3, [pc, #72]	@ (90018ec4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
90018e7a:	1a10      	subs	r0, r2, r0
90018e7c:	210e      	movs	r1, #14
90018e7e:	681b      	ldr	r3, [r3, #0]
90018e80:	fb01 3000 	mla	r0, r1, r0, r3
90018e84:	7b03      	ldrb	r3, [r0, #12]
90018e86:	f003 031f 	and.w	r3, r3, #31
90018e8a:	2b0b      	cmp	r3, #11
90018e8c:	d10b      	bne.n	90018ea6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
90018e8e:	8903      	ldrh	r3, [r0, #8]
90018e90:	8940      	ldrh	r0, [r0, #10]
90018e92:	4358      	muls	r0, r3
90018e94:	4b09      	ldr	r3, [pc, #36]	@ (90018ebc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90018e96:	3003      	adds	r0, #3
90018e98:	6819      	ldr	r1, [r3, #0]
90018e9a:	f020 0303 	bic.w	r3, r0, #3
90018e9e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
90018ea2:	4418      	add	r0, r3
90018ea4:	4770      	bx	lr
90018ea6:	2b0d      	cmp	r3, #13
90018ea8:	d101      	bne.n	90018eae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90018eaa:	300d      	adds	r0, #13
90018eac:	4770      	bx	lr
90018eae:	2000      	movs	r0, #0
90018eb0:	4770      	bx	lr
90018eb2:	bf00      	nop
90018eb4:	2402193c 	.word	0x2402193c
90018eb8:	24021944 	.word	0x24021944
90018ebc:	24021920 	.word	0x24021920
90018ec0:	24021940 	.word	0x24021940
90018ec4:	24021924 	.word	0x24021924

90018ec8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
90018ec8:	4b1f      	ldr	r3, [pc, #124]	@ (90018f48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
90018eca:	b510      	push	{r4, lr}
90018ecc:	8802      	ldrh	r2, [r0, #0]
90018ece:	881b      	ldrh	r3, [r3, #0]
90018ed0:	429a      	cmp	r2, r3
90018ed2:	d21a      	bcs.n	90018f0a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
90018ed4:	4b1d      	ldr	r3, [pc, #116]	@ (90018f4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
90018ed6:	2114      	movs	r1, #20
90018ed8:	681b      	ldr	r3, [r3, #0]
90018eda:	fb01 3102 	mla	r1, r1, r2, r3
90018ede:	7c4b      	ldrb	r3, [r1, #17]
90018ee0:	0958      	lsrs	r0, r3, #5
90018ee2:	7ccb      	ldrb	r3, [r1, #19]
90018ee4:	491a      	ldr	r1, [pc, #104]	@ (90018f50 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
90018ee6:	f3c3 1342 	ubfx	r3, r3, #5, #3
90018eea:	6809      	ldr	r1, [r1, #0]
90018eec:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
90018ef0:	b2d8      	uxtb	r0, r3
90018ef2:	b149      	cbz	r1, 90018f08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
90018ef4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90018ef8:	b132      	cbz	r2, 90018f08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
90018efa:	2b0e      	cmp	r3, #14
90018efc:	d021      	beq.n	90018f42 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
90018efe:	280f      	cmp	r0, #15
90018f00:	d01d      	beq.n	90018f3e <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
90018f02:	2810      	cmp	r0, #16
90018f04:	bf08      	it	eq
90018f06:	2002      	moveq	r0, #2
90018f08:	bd10      	pop	{r4, pc}
90018f0a:	4912      	ldr	r1, [pc, #72]	@ (90018f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
90018f0c:	8809      	ldrh	r1, [r1, #0]
90018f0e:	4419      	add	r1, r3
90018f10:	428a      	cmp	r2, r1
90018f12:	da09      	bge.n	90018f28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
90018f14:	1ad3      	subs	r3, r2, r3
90018f16:	4a10      	ldr	r2, [pc, #64]	@ (90018f58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
90018f18:	210e      	movs	r1, #14
90018f1a:	6812      	ldr	r2, [r2, #0]
90018f1c:	fb01 2303 	mla	r3, r1, r3, r2
90018f20:	7b18      	ldrb	r0, [r3, #12]
90018f22:	f000 001f 	and.w	r0, r0, #31
90018f26:	e7ef      	b.n	90018f08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
90018f28:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
90018f2c:	429a      	cmp	r2, r3
90018f2e:	d108      	bne.n	90018f42 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
90018f30:	f7f7 f94a 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
90018f34:	6803      	ldr	r3, [r0, #0]
90018f36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90018f3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018f3c:	4718      	bx	r3
90018f3e:	2001      	movs	r0, #1
90018f40:	e7e2      	b.n	90018f08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
90018f42:	2000      	movs	r0, #0
90018f44:	e7e0      	b.n	90018f08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
90018f46:	bf00      	nop
90018f48:	2402193c 	.word	0x2402193c
90018f4c:	24021944 	.word	0x24021944
90018f50:	24021920 	.word	0x24021920
90018f54:	24021940 	.word	0x24021940
90018f58:	24021924 	.word	0x24021924

90018f5c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
90018f5c:	2010      	movs	r0, #16
90018f5e:	4770      	bx	lr

90018f60 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
90018f60:	4b02      	ldr	r3, [pc, #8]	@ (90018f6c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
90018f62:	8818      	ldrh	r0, [r3, #0]
90018f64:	0040      	lsls	r0, r0, #1
90018f66:	b280      	uxth	r0, r0
90018f68:	4770      	bx	lr
90018f6a:	bf00      	nop
90018f6c:	240218ae 	.word	0x240218ae

90018f70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
90018f70:	2bff      	cmp	r3, #255	@ 0xff
90018f72:	d05e      	beq.n	90019032 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
90018f74:	2a0b      	cmp	r2, #11
90018f76:	d058      	beq.n	9001902a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
90018f78:	d80e      	bhi.n	90018f98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90018f7a:	2a03      	cmp	r2, #3
90018f7c:	d04d      	beq.n	9001901a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
90018f7e:	d804      	bhi.n	90018f8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
90018f80:	2a01      	cmp	r2, #1
90018f82:	d04c      	beq.n	9001901e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
90018f84:	d94d      	bls.n	90019022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
90018f86:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
90018f88:	e031      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018f8a:	2a09      	cmp	r2, #9
90018f8c:	d04d      	beq.n	9001902a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
90018f8e:	d84a      	bhi.n	90019026 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
90018f90:	2a08      	cmp	r2, #8
90018f92:	d048      	beq.n	90019026 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
90018f94:	2300      	movs	r3, #0
90018f96:	e02a      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018f98:	2a2f      	cmp	r2, #47	@ 0x2f
90018f9a:	d02c      	beq.n	90018ff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
90018f9c:	d811      	bhi.n	90018fc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
90018f9e:	2a2d      	cmp	r2, #45	@ 0x2d
90018fa0:	d018      	beq.n	90018fd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
90018fa2:	d831      	bhi.n	90019008 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
90018fa4:	2a2c      	cmp	r2, #44	@ 0x2c
90018fa6:	d1f5      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018fa8:	684a      	ldr	r2, [r1, #4]
90018faa:	7813      	ldrb	r3, [r2, #0]
90018fac:	7852      	ldrb	r2, [r2, #1]
90018fae:	2a00      	cmp	r2, #0
90018fb0:	d1f0      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018fb2:	2b01      	cmp	r3, #1
90018fb4:	d01d      	beq.n	90018ff2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
90018fb6:	2b00      	cmp	r3, #0
90018fb8:	d02d      	beq.n	90019016 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90018fba:	2b02      	cmp	r3, #2
90018fbc:	d1ea      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018fbe:	68c3      	ldr	r3, [r0, #12]
90018fc0:	e015      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018fc2:	2a31      	cmp	r2, #49	@ 0x31
90018fc4:	d004      	beq.n	90018fd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
90018fc6:	d332      	bcc.n	9001902e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
90018fc8:	2a32      	cmp	r2, #50	@ 0x32
90018fca:	d030      	beq.n	9001902e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
90018fcc:	2a33      	cmp	r2, #51	@ 0x33
90018fce:	d1e1      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018fd0:	6f43      	ldr	r3, [r0, #116]	@ 0x74
90018fd2:	e00c      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018fd4:	684a      	ldr	r2, [r1, #4]
90018fd6:	7813      	ldrb	r3, [r2, #0]
90018fd8:	7852      	ldrb	r2, [r2, #1]
90018fda:	2a00      	cmp	r2, #0
90018fdc:	d1da      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018fde:	2b01      	cmp	r3, #1
90018fe0:	d004      	beq.n	90018fec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
90018fe2:	d30f      	bcc.n	90019004 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
90018fe4:	2b02      	cmp	r3, #2
90018fe6:	d1d5      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018fe8:	6943      	ldr	r3, [r0, #20]
90018fea:	e000      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018fec:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90018fee:	4618      	mov	r0, r3
90018ff0:	4770      	bx	lr
90018ff2:	69c3      	ldr	r3, [r0, #28]
90018ff4:	e7fb      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018ff6:	684b      	ldr	r3, [r1, #4]
90018ff8:	781a      	ldrb	r2, [r3, #0]
90018ffa:	785b      	ldrb	r3, [r3, #1]
90018ffc:	2b00      	cmp	r3, #0
90018ffe:	d1c9      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019000:	2a00      	cmp	r2, #0
90019002:	d1f4      	bne.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019004:	6b43      	ldr	r3, [r0, #52]	@ 0x34
90019006:	e7f2      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019008:	684b      	ldr	r3, [r1, #4]
9001900a:	781a      	ldrb	r2, [r3, #0]
9001900c:	785b      	ldrb	r3, [r3, #1]
9001900e:	2b00      	cmp	r3, #0
90019010:	d1c0      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019012:	2a00      	cmp	r2, #0
90019014:	d1eb      	bne.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019016:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90019018:	e7e9      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001901a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001901c:	e7e7      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001901e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90019020:	e7e5      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019022:	6c43      	ldr	r3, [r0, #68]	@ 0x44
90019024:	e7e3      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019026:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
90019028:	e7e1      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001902a:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001902c:	e7df      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001902e:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
90019030:	e7dd      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019032:	2a0b      	cmp	r2, #11
90019034:	d059      	beq.n	900190ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
90019036:	d80e      	bhi.n	90019056 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
90019038:	2a03      	cmp	r2, #3
9001903a:	d050      	beq.n	900190de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001903c:	d804      	bhi.n	90019048 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001903e:	2a01      	cmp	r2, #1
90019040:	d04f      	beq.n	900190e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
90019042:	d950      	bls.n	900190e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
90019044:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90019046:	e7d2      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019048:	2a09      	cmp	r2, #9
9001904a:	d04e      	beq.n	900190ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001904c:	d801      	bhi.n	90019052 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001904e:	2a08      	cmp	r2, #8
90019050:	d1a0      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019052:	6e03      	ldr	r3, [r0, #96]	@ 0x60
90019054:	e7cb      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019056:	2a2f      	cmp	r2, #47	@ 0x2f
90019058:	d02d      	beq.n	900190b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001905a:	d811      	bhi.n	90019080 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001905c:	2a2d      	cmp	r2, #45	@ 0x2d
9001905e:	d018      	beq.n	90019092 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
90019060:	d833      	bhi.n	900190ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
90019062:	2a2c      	cmp	r2, #44	@ 0x2c
90019064:	d196      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019066:	684a      	ldr	r2, [r1, #4]
90019068:	7813      	ldrb	r3, [r2, #0]
9001906a:	7852      	ldrb	r2, [r2, #1]
9001906c:	2a00      	cmp	r2, #0
9001906e:	d191      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019070:	2b01      	cmp	r3, #1
90019072:	d01e      	beq.n	900190b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
90019074:	2b00      	cmp	r3, #0
90019076:	d030      	beq.n	900190da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
90019078:	2b02      	cmp	r3, #2
9001907a:	d18b      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001907c:	6903      	ldr	r3, [r0, #16]
9001907e:	e7b6      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019080:	2a31      	cmp	r2, #49	@ 0x31
90019082:	d004      	beq.n	9001908e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
90019084:	d333      	bcc.n	900190ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
90019086:	2a32      	cmp	r2, #50	@ 0x32
90019088:	d031      	beq.n	900190ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001908a:	2a33      	cmp	r2, #51	@ 0x33
9001908c:	d182      	bne.n	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001908e:	6f83      	ldr	r3, [r0, #120]	@ 0x78
90019090:	e7ad      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019092:	684a      	ldr	r2, [r1, #4]
90019094:	7813      	ldrb	r3, [r2, #0]
90019096:	7852      	ldrb	r2, [r2, #1]
90019098:	2a00      	cmp	r2, #0
9001909a:	f47f af7b 	bne.w	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001909e:	2b01      	cmp	r3, #1
900190a0:	d005      	beq.n	900190ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
900190a2:	d310      	bcc.n	900190c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
900190a4:	2b02      	cmp	r3, #2
900190a6:	f47f af75 	bne.w	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900190aa:	6983      	ldr	r3, [r0, #24]
900190ac:	e79f      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190ae:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900190b0:	e79d      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190b2:	6a03      	ldr	r3, [r0, #32]
900190b4:	e79b      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190b6:	684b      	ldr	r3, [r1, #4]
900190b8:	781a      	ldrb	r2, [r3, #0]
900190ba:	785b      	ldrb	r3, [r3, #1]
900190bc:	2b00      	cmp	r3, #0
900190be:	f47f af69 	bne.w	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900190c2:	2a00      	cmp	r2, #0
900190c4:	d193      	bne.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190c6:	6b83      	ldr	r3, [r0, #56]	@ 0x38
900190c8:	e791      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190ca:	684b      	ldr	r3, [r1, #4]
900190cc:	781a      	ldrb	r2, [r3, #0]
900190ce:	785b      	ldrb	r3, [r3, #1]
900190d0:	2b00      	cmp	r3, #0
900190d2:	f47f af5f 	bne.w	90018f94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900190d6:	2a00      	cmp	r2, #0
900190d8:	d189      	bne.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190da:	6b03      	ldr	r3, [r0, #48]	@ 0x30
900190dc:	e787      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190de:	6d03      	ldr	r3, [r0, #80]	@ 0x50
900190e0:	e785      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190e2:	6d83      	ldr	r3, [r0, #88]	@ 0x58
900190e4:	e783      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190e6:	6c83      	ldr	r3, [r0, #72]	@ 0x48
900190e8:	e781      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190ea:	6e83      	ldr	r3, [r0, #104]	@ 0x68
900190ec:	e77f      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900190ee:	6f03      	ldr	r3, [r0, #112]	@ 0x70
900190f0:	e77d      	b.n	90018fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

900190f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900190f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900190f6:	b087      	sub	sp, #28
900190f8:	9815      	ldr	r0, [sp, #84]	@ 0x54
900190fa:	9205      	str	r2, [sp, #20]
900190fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90019100:	9101      	str	r1, [sp, #4]
90019102:	9202      	str	r2, [sp, #8]
90019104:	6841      	ldr	r1, [r0, #4]
90019106:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001910a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001910e:	fb01 2404 	mla	r4, r1, r4, r2
90019112:	6802      	ldr	r2, [r0, #0]
90019114:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019118:	f8de 2000 	ldr.w	r2, [lr]
9001911c:	9203      	str	r2, [sp, #12]
9001911e:	f8de 2004 	ldr.w	r2, [lr, #4]
90019122:	3204      	adds	r2, #4
90019124:	9204      	str	r2, [sp, #16]
90019126:	9a02      	ldr	r2, [sp, #8]
90019128:	43d6      	mvns	r6, r2
9001912a:	b2f6      	uxtb	r6, r6
9001912c:	9a01      	ldr	r2, [sp, #4]
9001912e:	2a00      	cmp	r2, #0
90019130:	dc03      	bgt.n	9001913a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90019132:	9a05      	ldr	r2, [sp, #20]
90019134:	2a00      	cmp	r2, #0
90019136:	f340 8129 	ble.w	9001938c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001913a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001913c:	f9be c008 	ldrsh.w	ip, [lr, #8]
90019140:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90019144:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90019146:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001914a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001914e:	2b00      	cmp	r3, #0
90019150:	dd0e      	ble.n	90019170 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019152:	1408      	asrs	r0, r1, #16
90019154:	d405      	bmi.n	90019162 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019156:	4560      	cmp	r0, ip
90019158:	da03      	bge.n	90019162 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001915a:	1410      	asrs	r0, r2, #16
9001915c:	d401      	bmi.n	90019162 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001915e:	42b8      	cmp	r0, r7
90019160:	db07      	blt.n	90019172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90019162:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90019164:	3b01      	subs	r3, #1
90019166:	3402      	adds	r4, #2
90019168:	4401      	add	r1, r0
9001916a:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001916c:	4402      	add	r2, r0
9001916e:	e7ee      	b.n	9001914e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
90019170:	d071      	beq.n	90019256 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90019172:	1e58      	subs	r0, r3, #1
90019174:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90019176:	fb05 1500 	mla	r5, r5, r0, r1
9001917a:	142d      	asrs	r5, r5, #16
9001917c:	d45f      	bmi.n	9001923e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001917e:	4565      	cmp	r5, ip
90019180:	da5d      	bge.n	9001923e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019182:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90019184:	fb05 2000 	mla	r0, r5, r0, r2
90019188:	1400      	asrs	r0, r0, #16
9001918a:	d458      	bmi.n	9001923e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001918c:	42b8      	cmp	r0, r7
9001918e:	da56      	bge.n	9001923e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019190:	4699      	mov	r9, r3
90019192:	46a2      	mov	sl, r4
90019194:	f8bd b008 	ldrh.w	fp, [sp, #8]
90019198:	f1b9 0f00 	cmp.w	r9, #0
9001919c:	dd57      	ble.n	9001924e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001919e:	ea4f 4c22 	mov.w	ip, r2, asr #16
900191a2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
900191a6:	9803      	ldr	r0, [sp, #12]
900191a8:	140d      	asrs	r5, r1, #16
900191aa:	f109 39ff 	add.w	r9, r9, #4294967295
900191ae:	fb07 000c 	mla	r0, r7, ip, r0
900191b2:	5d40      	ldrb	r0, [r0, r5]
900191b4:	9d04      	ldr	r5, [sp, #16]
900191b6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
900191ba:	f8ba 5000 	ldrh.w	r5, [sl]
900191be:	ea4f 2c20 	mov.w	ip, r0, asr #8
900191c2:	122f      	asrs	r7, r5, #8
900191c4:	ea4f 08e5 	mov.w	r8, r5, asr #3
900191c8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900191cc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900191d0:	00ed      	lsls	r5, r5, #3
900191d2:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
900191d6:	fb17 f706 	smulbb	r7, r7, r6
900191da:	b2ed      	uxtb	r5, r5
900191dc:	fb18 f806 	smulbb	r8, r8, r6
900191e0:	fb0c 7c0b 	mla	ip, ip, fp, r7
900191e4:	10c7      	asrs	r7, r0, #3
900191e6:	fb15 f506 	smulbb	r5, r5, r6
900191ea:	00c0      	lsls	r0, r0, #3
900191ec:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900191f0:	fa1f fc8c 	uxth.w	ip, ip
900191f4:	b2c0      	uxtb	r0, r0
900191f6:	fb07 870b 	mla	r7, r7, fp, r8
900191fa:	fb00 500b 	mla	r0, r0, fp, r5
900191fe:	f10c 0501 	add.w	r5, ip, #1
90019202:	b2bf      	uxth	r7, r7
90019204:	b280      	uxth	r0, r0
90019206:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001920a:	f107 0801 	add.w	r8, r7, #1
9001920e:	1c45      	adds	r5, r0, #1
90019210:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90019214:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019218:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001921c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001921e:	ea4f 1858 	mov.w	r8, r8, lsr #5
90019222:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019226:	4401      	add	r1, r0
90019228:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001922c:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001922e:	ea45 0c0c 	orr.w	ip, r5, ip
90019232:	4402      	add	r2, r0
90019234:	ea4c 0c08 	orr.w	ip, ip, r8
90019238:	f82a cb02 	strh.w	ip, [sl], #2
9001923c:	e7ac      	b.n	90019198 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001923e:	f04f 0800 	mov.w	r8, #0
90019242:	f8bd a008 	ldrh.w	sl, [sp, #8]
90019246:	eb03 0008 	add.w	r0, r3, r8
9001924a:	2800      	cmp	r0, #0
9001924c:	dc41      	bgt.n	900192d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001924e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019252:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019256:	9b01      	ldr	r3, [sp, #4]
90019258:	2b00      	cmp	r3, #0
9001925a:	f340 8097 	ble.w	9001938c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001925e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90019262:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019264:	ee30 0a04 	vadd.f32	s0, s0, s8
90019268:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001926c:	eef0 6a62 	vmov.f32	s13, s5
90019270:	eec7 7a00 	vdiv.f32	s15, s14, s0
90019274:	ee31 1a05 	vadd.f32	s2, s2, s10
90019278:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001927c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
90019280:	eef0 6a43 	vmov.f32	s13, s6
90019284:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019288:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001928c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019290:	ee61 7a27 	vmul.f32	s15, s2, s15
90019294:	ee77 2a62 	vsub.f32	s5, s14, s5
90019298:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001929c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900192a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900192a4:	ee12 2a90 	vmov	r2, s5
900192a8:	eef0 2a47 	vmov.f32	s5, s14
900192ac:	fb92 f3f3 	sdiv	r3, r2, r3
900192b0:	ee13 2a10 	vmov	r2, s6
900192b4:	9313      	str	r3, [sp, #76]	@ 0x4c
900192b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900192b8:	eeb0 3a67 	vmov.f32	s6, s15
900192bc:	fb92 f3f3 	sdiv	r3, r2, r3
900192c0:	9314      	str	r3, [sp, #80]	@ 0x50
900192c2:	9b01      	ldr	r3, [sp, #4]
900192c4:	9a05      	ldr	r2, [sp, #20]
900192c6:	3b01      	subs	r3, #1
900192c8:	9301      	str	r3, [sp, #4]
900192ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900192cc:	bf08      	it	eq
900192ce:	4613      	moveq	r3, r2
900192d0:	e72c      	b.n	9001912c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900192d2:	140f      	asrs	r7, r1, #16
900192d4:	d453      	bmi.n	9001937e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900192d6:	f8de 5008 	ldr.w	r5, [lr, #8]
900192da:	42bd      	cmp	r5, r7
900192dc:	dd4f      	ble.n	9001937e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900192de:	ea5f 4c22 	movs.w	ip, r2, asr #16
900192e2:	d44c      	bmi.n	9001937e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900192e4:	f8de 000c 	ldr.w	r0, [lr, #12]
900192e8:	4560      	cmp	r0, ip
900192ea:	dd48      	ble.n	9001937e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900192ec:	9803      	ldr	r0, [sp, #12]
900192ee:	b22d      	sxth	r5, r5
900192f0:	fb0c 0505 	mla	r5, ip, r5, r0
900192f4:	5de8      	ldrb	r0, [r5, r7]
900192f6:	9d04      	ldr	r5, [sp, #16]
900192f8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
900192fc:	f06f 0501 	mvn.w	r5, #1
90019300:	fb05 fb08 	mul.w	fp, r5, r8
90019304:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019308:	f834 500b 	ldrh.w	r5, [r4, fp]
9001930c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019310:	122f      	asrs	r7, r5, #8
90019312:	ea4f 09e5 	mov.w	r9, r5, asr #3
90019316:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001931a:	00ed      	lsls	r5, r5, #3
9001931c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
90019320:	fb17 f706 	smulbb	r7, r7, r6
90019324:	b2ed      	uxtb	r5, r5
90019326:	fb19 f906 	smulbb	r9, r9, r6
9001932a:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001932e:	10c7      	asrs	r7, r0, #3
90019330:	fb15 f506 	smulbb	r5, r5, r6
90019334:	00c0      	lsls	r0, r0, #3
90019336:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001933a:	fa1f fc8c 	uxth.w	ip, ip
9001933e:	b2c0      	uxtb	r0, r0
90019340:	fb07 970a 	mla	r7, r7, sl, r9
90019344:	fb00 500a 	mla	r0, r0, sl, r5
90019348:	f10c 0501 	add.w	r5, ip, #1
9001934c:	b2bf      	uxth	r7, r7
9001934e:	b280      	uxth	r0, r0
90019350:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019354:	f107 0901 	add.w	r9, r7, #1
90019358:	1c45      	adds	r5, r0, #1
9001935a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001935e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019362:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019366:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001936a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001936e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90019372:	ea45 0c0c 	orr.w	ip, r5, ip
90019376:	ea4c 0c09 	orr.w	ip, ip, r9
9001937a:	f824 c00b 	strh.w	ip, [r4, fp]
9001937e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90019380:	f108 38ff 	add.w	r8, r8, #4294967295
90019384:	4401      	add	r1, r0
90019386:	9814      	ldr	r0, [sp, #80]	@ 0x50
90019388:	4402      	add	r2, r0
9001938a:	e75c      	b.n	90019246 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001938c:	b007      	add	sp, #28
9001938e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019392 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019392:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019396:	b085      	sub	sp, #20
90019398:	4693      	mov	fp, r2
9001939a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001939e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
900193a0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900193a2:	6870      	ldr	r0, [r6, #4]
900193a4:	9100      	str	r1, [sp, #0]
900193a6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
900193aa:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
900193ae:	fb00 2404 	mla	r4, r0, r4, r2
900193b2:	6832      	ldr	r2, [r6, #0]
900193b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900193b8:	682a      	ldr	r2, [r5, #0]
900193ba:	9201      	str	r2, [sp, #4]
900193bc:	686a      	ldr	r2, [r5, #4]
900193be:	3204      	adds	r2, #4
900193c0:	9202      	str	r2, [sp, #8]
900193c2:	9a00      	ldr	r2, [sp, #0]
900193c4:	2a00      	cmp	r2, #0
900193c6:	dc03      	bgt.n	900193d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900193c8:	f1bb 0f00 	cmp.w	fp, #0
900193cc:	f340 80a0 	ble.w	90019510 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
900193d0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900193d2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
900193d6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
900193da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900193dc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
900193e0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
900193e4:	2b00      	cmp	r3, #0
900193e6:	dd0c      	ble.n	90019402 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900193e8:	1406      	asrs	r6, r0, #16
900193ea:	d405      	bmi.n	900193f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900193ec:	454e      	cmp	r6, r9
900193ee:	da03      	bge.n	900193f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900193f0:	1416      	asrs	r6, r2, #16
900193f2:	d401      	bmi.n	900193f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900193f4:	4546      	cmp	r6, r8
900193f6:	db05      	blt.n	90019404 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900193f8:	4470      	add	r0, lr
900193fa:	4462      	add	r2, ip
900193fc:	3b01      	subs	r3, #1
900193fe:	3402      	adds	r4, #2
90019400:	e7f0      	b.n	900193e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90019402:	d00f      	beq.n	90019424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90019404:	1e5e      	subs	r6, r3, #1
90019406:	fb0e 0706 	mla	r7, lr, r6, r0
9001940a:	143f      	asrs	r7, r7, #16
9001940c:	d541      	bpl.n	90019492 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001940e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90019412:	4698      	mov	r8, r3
90019414:	9603      	str	r6, [sp, #12]
90019416:	f1b8 0f00 	cmp.w	r8, #0
9001941a:	dc59      	bgt.n	900194d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001941c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019420:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019424:	9b00      	ldr	r3, [sp, #0]
90019426:	2b00      	cmp	r3, #0
90019428:	dd72      	ble.n	90019510 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001942a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001942e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019430:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019434:	eeb0 6a62 	vmov.f32	s12, s5
90019438:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001943c:	ee31 1a05 	vadd.f32	s2, s2, s10
90019440:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019444:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019448:	eeb0 6a43 	vmov.f32	s12, s6
9001944c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019450:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90019454:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019458:	ee61 7a27 	vmul.f32	s15, s2, s15
9001945c:	ee77 2a62 	vsub.f32	s5, s14, s5
90019460:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019464:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019468:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001946c:	ee12 2a90 	vmov	r2, s5
90019470:	eef0 2a47 	vmov.f32	s5, s14
90019474:	fb92 fef3 	sdiv	lr, r2, r3
90019478:	ee13 2a10 	vmov	r2, s6
9001947c:	eeb0 3a67 	vmov.f32	s6, s15
90019480:	fb92 fcf3 	sdiv	ip, r2, r3
90019484:	9b00      	ldr	r3, [sp, #0]
90019486:	3b01      	subs	r3, #1
90019488:	9300      	str	r3, [sp, #0]
9001948a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001948c:	bf08      	it	eq
9001948e:	465b      	moveq	r3, fp
90019490:	e797      	b.n	900193c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019492:	454f      	cmp	r7, r9
90019494:	dabb      	bge.n	9001940e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019496:	fb0c 2606 	mla	r6, ip, r6, r2
9001949a:	1436      	asrs	r6, r6, #16
9001949c:	d4b7      	bmi.n	9001940e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001949e:	4546      	cmp	r6, r8
900194a0:	dab5      	bge.n	9001940e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900194a2:	461e      	mov	r6, r3
900194a4:	46a0      	mov	r8, r4
900194a6:	2e00      	cmp	r6, #0
900194a8:	ddb8      	ble.n	9001941c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900194aa:	1417      	asrs	r7, r2, #16
900194ac:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
900194b0:	9901      	ldr	r1, [sp, #4]
900194b2:	ea4f 4920 	mov.w	r9, r0, asr #16
900194b6:	4462      	add	r2, ip
900194b8:	4470      	add	r0, lr
900194ba:	fb0a 1707 	mla	r7, sl, r7, r1
900194be:	9902      	ldr	r1, [sp, #8]
900194c0:	3e01      	subs	r6, #1
900194c2:	f817 7009 	ldrb.w	r7, [r7, r9]
900194c6:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
900194ca:	f828 7b02 	strh.w	r7, [r8], #2
900194ce:	e7ea      	b.n	900194a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
900194d0:	ea5f 4920 	movs.w	r9, r0, asr #16
900194d4:	d417      	bmi.n	90019506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
900194d6:	68ae      	ldr	r6, [r5, #8]
900194d8:	454e      	cmp	r6, r9
900194da:	dd14      	ble.n	90019506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
900194dc:	ea5f 4a22 	movs.w	sl, r2, asr #16
900194e0:	d411      	bmi.n	90019506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
900194e2:	68ef      	ldr	r7, [r5, #12]
900194e4:	4557      	cmp	r7, sl
900194e6:	dd0e      	ble.n	90019506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
900194e8:	9f01      	ldr	r7, [sp, #4]
900194ea:	b236      	sxth	r6, r6
900194ec:	f06f 0101 	mvn.w	r1, #1
900194f0:	fb0a 7606 	mla	r6, sl, r6, r7
900194f4:	9f02      	ldr	r7, [sp, #8]
900194f6:	f816 6009 	ldrb.w	r6, [r6, r9]
900194fa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
900194fe:	fb01 f608 	mul.w	r6, r1, r8
90019502:	9903      	ldr	r1, [sp, #12]
90019504:	538f      	strh	r7, [r1, r6]
90019506:	4470      	add	r0, lr
90019508:	4462      	add	r2, ip
9001950a:	f108 38ff 	add.w	r8, r8, #4294967295
9001950e:	e782      	b.n	90019416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019510:	b005      	add	sp, #20
90019512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019516 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019516:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001951a:	b087      	sub	sp, #28
9001951c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001951e:	9205      	str	r2, [sp, #20]
90019520:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90019524:	9102      	str	r1, [sp, #8]
90019526:	9203      	str	r2, [sp, #12]
90019528:	6861      	ldr	r1, [r4, #4]
9001952a:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001952e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
90019532:	fb01 2000 	mla	r0, r1, r0, r2
90019536:	6822      	ldr	r2, [r4, #0]
90019538:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001953c:	9200      	str	r2, [sp, #0]
9001953e:	f8dc 2000 	ldr.w	r2, [ip]
90019542:	9204      	str	r2, [sp, #16]
90019544:	f8dc 2004 	ldr.w	r2, [ip, #4]
90019548:	3204      	adds	r2, #4
9001954a:	9201      	str	r2, [sp, #4]
9001954c:	9a03      	ldr	r2, [sp, #12]
9001954e:	43d5      	mvns	r5, r2
90019550:	b2ed      	uxtb	r5, r5
90019552:	9a02      	ldr	r2, [sp, #8]
90019554:	2a00      	cmp	r2, #0
90019556:	dc03      	bgt.n	90019560 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90019558:	9a05      	ldr	r2, [sp, #20]
9001955a:	2a00      	cmp	r2, #0
9001955c:	f340 812c 	ble.w	900197b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90019560:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90019562:	f9bc e008 	ldrsh.w	lr, [ip, #8]
90019566:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001956a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001956c:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90019570:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019574:	2b00      	cmp	r3, #0
90019576:	dd10      	ble.n	9001959a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019578:	140c      	asrs	r4, r1, #16
9001957a:	d405      	bmi.n	90019588 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001957c:	4574      	cmp	r4, lr
9001957e:	da03      	bge.n	90019588 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019580:	1414      	asrs	r4, r2, #16
90019582:	d401      	bmi.n	90019588 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019584:	42bc      	cmp	r4, r7
90019586:	db09      	blt.n	9001959c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90019588:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001958a:	3b01      	subs	r3, #1
9001958c:	9800      	ldr	r0, [sp, #0]
9001958e:	4421      	add	r1, r4
90019590:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90019592:	3002      	adds	r0, #2
90019594:	4422      	add	r2, r4
90019596:	9000      	str	r0, [sp, #0]
90019598:	e7ec      	b.n	90019574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001959a:	d071      	beq.n	90019680 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001959c:	1e5c      	subs	r4, r3, #1
9001959e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
900195a0:	fb06 1604 	mla	r6, r6, r4, r1
900195a4:	1436      	asrs	r6, r6, #16
900195a6:	d45d      	bmi.n	90019664 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
900195a8:	4576      	cmp	r6, lr
900195aa:	da5b      	bge.n	90019664 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
900195ac:	9e14      	ldr	r6, [sp, #80]	@ 0x50
900195ae:	fb06 2404 	mla	r4, r6, r4, r2
900195b2:	1424      	asrs	r4, r4, #16
900195b4:	d456      	bmi.n	90019664 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
900195b6:	42bc      	cmp	r4, r7
900195b8:	da54      	bge.n	90019664 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
900195ba:	4698      	mov	r8, r3
900195bc:	f8dd 9000 	ldr.w	r9, [sp]
900195c0:	f8bd a00c 	ldrh.w	sl, [sp, #12]
900195c4:	f1b8 0f00 	cmp.w	r8, #0
900195c8:	dd54      	ble.n	90019674 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
900195ca:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
900195ce:	1414      	asrs	r4, r2, #16
900195d0:	9804      	ldr	r0, [sp, #16]
900195d2:	140e      	asrs	r6, r1, #16
900195d4:	f108 38ff 	add.w	r8, r8, #4294967295
900195d8:	fb07 0404 	mla	r4, r7, r4, r0
900195dc:	9801      	ldr	r0, [sp, #4]
900195de:	f814 e006 	ldrb.w	lr, [r4, r6]
900195e2:	f8b9 4000 	ldrh.w	r4, [r9]
900195e6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
900195ea:	1227      	asrs	r7, r4, #8
900195ec:	eb00 0b0e 	add.w	fp, r0, lr
900195f0:	f810 e00e 	ldrb.w	lr, [r0, lr]
900195f4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900195f8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900195fa:	f89b 6002 	ldrb.w	r6, [fp, #2]
900195fe:	f89b b001 	ldrb.w	fp, [fp, #1]
90019602:	4401      	add	r1, r0
90019604:	fb16 f60a 	smulbb	r6, r6, sl
90019608:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001960a:	fb1b fb0a 	smulbb	fp, fp, sl
9001960e:	fb07 6705 	mla	r7, r7, r5, r6
90019612:	10e6      	asrs	r6, r4, #3
90019614:	00e4      	lsls	r4, r4, #3
90019616:	4402      	add	r2, r0
90019618:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001961c:	b2bf      	uxth	r7, r7
9001961e:	b2e4      	uxtb	r4, r4
90019620:	fb06 b605 	mla	r6, r6, r5, fp
90019624:	fb14 f405 	smulbb	r4, r4, r5
90019628:	b2b6      	uxth	r6, r6
9001962a:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001962e:	1c7c      	adds	r4, r7, #1
90019630:	f106 0b01 	add.w	fp, r6, #1
90019634:	fa1f fe8e 	uxth.w	lr, lr
90019638:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001963c:	f10e 0401 	add.w	r4, lr, #1
90019640:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90019644:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019648:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001964c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90019650:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90019654:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90019658:	4327      	orrs	r7, r4
9001965a:	ea47 070b 	orr.w	r7, r7, fp
9001965e:	f829 7b02 	strh.w	r7, [r9], #2
90019662:	e7af      	b.n	900195c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
90019664:	f04f 0e00 	mov.w	lr, #0
90019668:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001966c:	eb03 040e 	add.w	r4, r3, lr
90019670:	2c00      	cmp	r4, #0
90019672:	dc43      	bgt.n	900196fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90019674:	9a00      	ldr	r2, [sp, #0]
90019676:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001967a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001967e:	9300      	str	r3, [sp, #0]
90019680:	9b02      	ldr	r3, [sp, #8]
90019682:	2b00      	cmp	r3, #0
90019684:	f340 8098 	ble.w	900197b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90019688:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001968c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001968e:	ee30 0a04 	vadd.f32	s0, s0, s8
90019692:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019696:	eef0 6a62 	vmov.f32	s13, s5
9001969a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001969e:	ee31 1a05 	vadd.f32	s2, s2, s10
900196a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900196a6:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
900196aa:	eef0 6a43 	vmov.f32	s13, s6
900196ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900196b2:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
900196b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900196ba:	ee61 7a27 	vmul.f32	s15, s2, s15
900196be:	ee77 2a62 	vsub.f32	s5, s14, s5
900196c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900196c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900196ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900196ce:	ee12 2a90 	vmov	r2, s5
900196d2:	eef0 2a47 	vmov.f32	s5, s14
900196d6:	fb92 f3f3 	sdiv	r3, r2, r3
900196da:	ee13 2a10 	vmov	r2, s6
900196de:	9313      	str	r3, [sp, #76]	@ 0x4c
900196e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900196e2:	eeb0 3a67 	vmov.f32	s6, s15
900196e6:	fb92 f3f3 	sdiv	r3, r2, r3
900196ea:	9314      	str	r3, [sp, #80]	@ 0x50
900196ec:	9b02      	ldr	r3, [sp, #8]
900196ee:	9a05      	ldr	r2, [sp, #20]
900196f0:	3b01      	subs	r3, #1
900196f2:	9302      	str	r3, [sp, #8]
900196f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900196f6:	bf08      	it	eq
900196f8:	4613      	moveq	r3, r2
900196fa:	e72a      	b.n	90019552 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900196fc:	140f      	asrs	r7, r1, #16
900196fe:	d454      	bmi.n	900197aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90019700:	f8dc 6008 	ldr.w	r6, [ip, #8]
90019704:	42be      	cmp	r6, r7
90019706:	dd50      	ble.n	900197aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90019708:	ea5f 4822 	movs.w	r8, r2, asr #16
9001970c:	d44d      	bmi.n	900197aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001970e:	f8dc 400c 	ldr.w	r4, [ip, #12]
90019712:	4544      	cmp	r4, r8
90019714:	dd49      	ble.n	900197aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90019716:	9c04      	ldr	r4, [sp, #16]
90019718:	b236      	sxth	r6, r6
9001971a:	f06f 0001 	mvn.w	r0, #1
9001971e:	fb08 4606 	mla	r6, r8, r6, r4
90019722:	9c01      	ldr	r4, [sp, #4]
90019724:	fb00 fa0e 	mul.w	sl, r0, lr
90019728:	9800      	ldr	r0, [sp, #0]
9001972a:	f816 8007 	ldrb.w	r8, [r6, r7]
9001972e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90019732:	eb04 0b08 	add.w	fp, r4, r8
90019736:	f830 400a 	ldrh.w	r4, [r0, sl]
9001973a:	9801      	ldr	r0, [sp, #4]
9001973c:	f89b 6002 	ldrb.w	r6, [fp, #2]
90019740:	1227      	asrs	r7, r4, #8
90019742:	f89b b001 	ldrb.w	fp, [fp, #1]
90019746:	fb16 f609 	smulbb	r6, r6, r9
9001974a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001974e:	f810 8008 	ldrb.w	r8, [r0, r8]
90019752:	fb1b fb09 	smulbb	fp, fp, r9
90019756:	fb07 6705 	mla	r7, r7, r5, r6
9001975a:	10e6      	asrs	r6, r4, #3
9001975c:	00e4      	lsls	r4, r4, #3
9001975e:	9800      	ldr	r0, [sp, #0]
90019760:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019764:	b2bf      	uxth	r7, r7
90019766:	b2e4      	uxtb	r4, r4
90019768:	fb06 b605 	mla	r6, r6, r5, fp
9001976c:	fb14 f405 	smulbb	r4, r4, r5
90019770:	b2b6      	uxth	r6, r6
90019772:	fb08 4809 	mla	r8, r8, r9, r4
90019776:	1c7c      	adds	r4, r7, #1
90019778:	f106 0b01 	add.w	fp, r6, #1
9001977c:	fa1f f888 	uxth.w	r8, r8
90019780:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90019784:	f108 0401 	add.w	r4, r8, #1
90019788:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001978c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019790:	eb04 2418 	add.w	r4, r4, r8, lsr #8
90019794:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90019798:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001979c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
900197a0:	4327      	orrs	r7, r4
900197a2:	ea47 070b 	orr.w	r7, r7, fp
900197a6:	f820 700a 	strh.w	r7, [r0, sl]
900197aa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900197ac:	f10e 3eff 	add.w	lr, lr, #4294967295
900197b0:	4401      	add	r1, r0
900197b2:	9814      	ldr	r0, [sp, #80]	@ 0x50
900197b4:	4402      	add	r2, r0
900197b6:	e759      	b.n	9001966c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
900197b8:	b007      	add	sp, #28
900197ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

900197c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900197c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900197c4:	b085      	sub	sp, #20
900197c6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900197ca:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
900197cc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900197ce:	9203      	str	r2, [sp, #12]
900197d0:	6870      	ldr	r0, [r6, #4]
900197d2:	686f      	ldr	r7, [r5, #4]
900197d4:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
900197d8:	3704      	adds	r7, #4
900197da:	9101      	str	r1, [sp, #4]
900197dc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
900197e0:	fb00 2404 	mla	r4, r0, r4, r2
900197e4:	6832      	ldr	r2, [r6, #0]
900197e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900197ea:	682a      	ldr	r2, [r5, #0]
900197ec:	9202      	str	r2, [sp, #8]
900197ee:	9a01      	ldr	r2, [sp, #4]
900197f0:	2a00      	cmp	r2, #0
900197f2:	dc03      	bgt.n	900197fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900197f4:	9a03      	ldr	r2, [sp, #12]
900197f6:	2a00      	cmp	r2, #0
900197f8:	f340 80cc 	ble.w	90019994 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
900197fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900197fe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019802:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90019806:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019808:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001980c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019810:	2b00      	cmp	r3, #0
90019812:	dd0d      	ble.n	90019830 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019814:	1406      	asrs	r6, r0, #16
90019816:	d405      	bmi.n	90019824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90019818:	454e      	cmp	r6, r9
9001981a:	da03      	bge.n	90019824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001981c:	1416      	asrs	r6, r2, #16
9001981e:	d401      	bmi.n	90019824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90019820:	4546      	cmp	r6, r8
90019822:	db06      	blt.n	90019832 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019824:	9e12      	ldr	r6, [sp, #72]	@ 0x48
90019826:	4460      	add	r0, ip
90019828:	3b01      	subs	r3, #1
9001982a:	3402      	adds	r4, #2
9001982c:	4432      	add	r2, r6
9001982e:	e7ef      	b.n	90019810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
90019830:	d00f      	beq.n	90019852 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90019832:	1e5e      	subs	r6, r3, #1
90019834:	fb0c 0e06 	mla	lr, ip, r6, r0
90019838:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001983c:	d543      	bpl.n	900198c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001983e:	4698      	mov	r8, r3
90019840:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
90019844:	f1b8 0f00 	cmp.w	r8, #0
90019848:	dc71      	bgt.n	9001992e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001984a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001984e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019852:	9b01      	ldr	r3, [sp, #4]
90019854:	2b00      	cmp	r3, #0
90019856:	f340 809d 	ble.w	90019994 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001985a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001985e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019860:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019864:	eeb0 6a62 	vmov.f32	s12, s5
90019868:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001986c:	ee31 1a05 	vadd.f32	s2, s2, s10
90019870:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019874:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019878:	eeb0 6a43 	vmov.f32	s12, s6
9001987c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019880:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90019884:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019888:	ee61 7a27 	vmul.f32	s15, s2, s15
9001988c:	ee77 2a62 	vsub.f32	s5, s14, s5
90019890:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019894:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019898:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001989c:	ee12 2a90 	vmov	r2, s5
900198a0:	eef0 2a47 	vmov.f32	s5, s14
900198a4:	fb92 fcf3 	sdiv	ip, r2, r3
900198a8:	ee13 2a10 	vmov	r2, s6
900198ac:	eeb0 3a67 	vmov.f32	s6, s15
900198b0:	fb92 f3f3 	sdiv	r3, r2, r3
900198b4:	9312      	str	r3, [sp, #72]	@ 0x48
900198b6:	9b01      	ldr	r3, [sp, #4]
900198b8:	9a03      	ldr	r2, [sp, #12]
900198ba:	3b01      	subs	r3, #1
900198bc:	9301      	str	r3, [sp, #4]
900198be:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900198c0:	bf08      	it	eq
900198c2:	4613      	moveq	r3, r2
900198c4:	e793      	b.n	900197ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900198c6:	45ce      	cmp	lr, r9
900198c8:	dab9      	bge.n	9001983e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900198ca:	9912      	ldr	r1, [sp, #72]	@ 0x48
900198cc:	fb01 2606 	mla	r6, r1, r6, r2
900198d0:	1436      	asrs	r6, r6, #16
900198d2:	d4b4      	bmi.n	9001983e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900198d4:	4546      	cmp	r6, r8
900198d6:	dab2      	bge.n	9001983e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900198d8:	4698      	mov	r8, r3
900198da:	46a2      	mov	sl, r4
900198dc:	f1b8 0f00 	cmp.w	r8, #0
900198e0:	ddb3      	ble.n	9001984a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900198e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
900198e6:	1416      	asrs	r6, r2, #16
900198e8:	9902      	ldr	r1, [sp, #8]
900198ea:	ea4f 4e20 	mov.w	lr, r0, asr #16
900198ee:	f108 38ff 	add.w	r8, r8, #4294967295
900198f2:	4460      	add	r0, ip
900198f4:	fb09 1606 	mla	r6, r9, r6, r1
900198f8:	4928      	ldr	r1, [pc, #160]	@ (9001999c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
900198fa:	f816 e00e 	ldrb.w	lr, [r6, lr]
900198fe:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90019902:	eb07 0b0e 	add.w	fp, r7, lr
90019906:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001990a:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001990e:	00f6      	lsls	r6, r6, #3
90019910:	ea01 2909 	and.w	r9, r1, r9, lsl #8
90019914:	9912      	ldr	r1, [sp, #72]	@ 0x48
90019916:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001991a:	440a      	add	r2, r1
9001991c:	ea49 0606 	orr.w	r6, r9, r6
90019920:	f817 900e 	ldrb.w	r9, [r7, lr]
90019924:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
90019928:	f82a 6b02 	strh.w	r6, [sl], #2
9001992c:	e7d6      	b.n	900198dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001992e:	ea5f 4920 	movs.w	r9, r0, asr #16
90019932:	d429      	bmi.n	90019988 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019934:	68ae      	ldr	r6, [r5, #8]
90019936:	454e      	cmp	r6, r9
90019938:	dd26      	ble.n	90019988 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001993a:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001993e:	d423      	bmi.n	90019988 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019940:	68e9      	ldr	r1, [r5, #12]
90019942:	4559      	cmp	r1, fp
90019944:	dd20      	ble.n	90019988 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019946:	fa0f fe86 	sxth.w	lr, r6
9001994a:	9902      	ldr	r1, [sp, #8]
9001994c:	fb0b 1e0e 	mla	lr, fp, lr, r1
90019950:	f06f 0101 	mvn.w	r1, #1
90019954:	f81e e009 	ldrb.w	lr, [lr, r9]
90019958:	fb01 f908 	mul.w	r9, r1, r8
9001995c:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
90019960:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90019964:	eb07 060e 	add.w	r6, r7, lr
90019968:	f896 b002 	ldrb.w	fp, [r6, #2]
9001996c:	7876      	ldrb	r6, [r6, #1]
9001996e:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
90019972:	00f6      	lsls	r6, r6, #3
90019974:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
90019978:	ea4b 0606 	orr.w	r6, fp, r6
9001997c:	f817 b00e 	ldrb.w	fp, [r7, lr]
90019980:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
90019984:	f82a 6009 	strh.w	r6, [sl, r9]
90019988:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001998a:	4460      	add	r0, ip
9001998c:	f108 38ff 	add.w	r8, r8, #4294967295
90019990:	440a      	add	r2, r1
90019992:	e757      	b.n	90019844 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019994:	b005      	add	sp, #20
90019996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001999a:	bf00      	nop
9001999c:	fffff800 	.word	0xfffff800

900199a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900199a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900199a4:	b087      	sub	sp, #28
900199a6:	468b      	mov	fp, r1
900199a8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900199ac:	9815      	ldr	r0, [sp, #84]	@ 0x54
900199ae:	9204      	str	r2, [sp, #16]
900199b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900199b4:	6841      	ldr	r1, [r0, #4]
900199b6:	9205      	str	r2, [sp, #20]
900199b8:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
900199bc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
900199c0:	fb01 2404 	mla	r4, r1, r4, r2
900199c4:	6802      	ldr	r2, [r0, #0]
900199c6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900199ca:	f8dc 2000 	ldr.w	r2, [ip]
900199ce:	9201      	str	r2, [sp, #4]
900199d0:	f8dc 2004 	ldr.w	r2, [ip, #4]
900199d4:	3204      	adds	r2, #4
900199d6:	9202      	str	r2, [sp, #8]
900199d8:	f1bb 0f00 	cmp.w	fp, #0
900199dc:	dc03      	bgt.n	900199e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900199de:	9a04      	ldr	r2, [sp, #16]
900199e0:	2a00      	cmp	r2, #0
900199e2:	f340 8138 	ble.w	90019c56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900199e6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900199e8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
900199ec:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
900199f0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900199f2:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
900199f6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900199fa:	2b00      	cmp	r3, #0
900199fc:	dd0e      	ble.n	90019a1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900199fe:	1402      	asrs	r2, r0, #16
90019a00:	d405      	bmi.n	90019a0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019a02:	42ba      	cmp	r2, r7
90019a04:	da03      	bge.n	90019a0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019a06:	140a      	asrs	r2, r1, #16
90019a08:	d401      	bmi.n	90019a0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019a0a:	42b2      	cmp	r2, r6
90019a0c:	db07      	blt.n	90019a1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019a0e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90019a10:	3b01      	subs	r3, #1
90019a12:	3402      	adds	r4, #2
90019a14:	4410      	add	r0, r2
90019a16:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90019a18:	4411      	add	r1, r2
90019a1a:	e7ee      	b.n	900199fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90019a1c:	d019      	beq.n	90019a52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
90019a1e:	1e5a      	subs	r2, r3, #1
90019a20:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90019a22:	fb05 0502 	mla	r5, r5, r2, r0
90019a26:	142d      	asrs	r5, r5, #16
90019a28:	d409      	bmi.n	90019a3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019a2a:	42bd      	cmp	r5, r7
90019a2c:	da07      	bge.n	90019a3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019a2e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90019a30:	fb05 1202 	mla	r2, r5, r2, r1
90019a34:	1412      	asrs	r2, r2, #16
90019a36:	d402      	bmi.n	90019a3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019a38:	42b2      	cmp	r2, r6
90019a3a:	f2c0 80ac 	blt.w	90019b96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90019a3e:	f04f 0e00 	mov.w	lr, #0
90019a42:	eb03 020e 	add.w	r2, r3, lr
90019a46:	2a00      	cmp	r2, #0
90019a48:	dc3e      	bgt.n	90019ac8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
90019a4a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019a4e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019a52:	f1bb 0f00 	cmp.w	fp, #0
90019a56:	f340 80fe 	ble.w	90019c56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90019a5a:	ee30 0a04 	vadd.f32	s0, s0, s8
90019a5e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019a60:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019a64:	f1bb 0b01 	subs.w	fp, fp, #1
90019a68:	eeb0 6a62 	vmov.f32	s12, s5
90019a6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019a70:	ee31 1a05 	vadd.f32	s2, s2, s10
90019a74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019a78:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
90019a7c:	eeb0 6a43 	vmov.f32	s12, s6
90019a80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019a84:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
90019a88:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019a8c:	ee61 7a27 	vmul.f32	s15, s2, s15
90019a90:	ee77 2a62 	vsub.f32	s5, s14, s5
90019a94:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019a98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019a9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019aa0:	ee12 2a90 	vmov	r2, s5
90019aa4:	eef0 2a47 	vmov.f32	s5, s14
90019aa8:	fb92 f3f3 	sdiv	r3, r2, r3
90019aac:	ee13 2a10 	vmov	r2, s6
90019ab0:	9313      	str	r3, [sp, #76]	@ 0x4c
90019ab2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019ab4:	eeb0 3a67 	vmov.f32	s6, s15
90019ab8:	fb92 f3f3 	sdiv	r3, r2, r3
90019abc:	9a04      	ldr	r2, [sp, #16]
90019abe:	9314      	str	r3, [sp, #80]	@ 0x50
90019ac0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019ac2:	bf08      	it	eq
90019ac4:	4613      	moveq	r3, r2
90019ac6:	e787      	b.n	900199d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019ac8:	1406      	asrs	r6, r0, #16
90019aca:	d45d      	bmi.n	90019b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019acc:	f8dc 5008 	ldr.w	r5, [ip, #8]
90019ad0:	42b5      	cmp	r5, r6
90019ad2:	dd59      	ble.n	90019b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019ad4:	140f      	asrs	r7, r1, #16
90019ad6:	d457      	bmi.n	90019b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019ad8:	f8dc 200c 	ldr.w	r2, [ip, #12]
90019adc:	42ba      	cmp	r2, r7
90019ade:	dd53      	ble.n	90019b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019ae0:	9a01      	ldr	r2, [sp, #4]
90019ae2:	b22d      	sxth	r5, r5
90019ae4:	fb07 2505 	mla	r5, r7, r5, r2
90019ae8:	5daa      	ldrb	r2, [r5, r6]
90019aea:	9d02      	ldr	r5, [sp, #8]
90019aec:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90019af0:	0e2e      	lsrs	r6, r5, #24
90019af2:	d049      	beq.n	90019b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019af4:	f06f 0201 	mvn.w	r2, #1
90019af8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019afc:	fb02 f20e 	mul.w	r2, r2, lr
90019b00:	f834 8002 	ldrh.w	r8, [r4, r2]
90019b04:	9203      	str	r2, [sp, #12]
90019b06:	9a05      	ldr	r2, [sp, #20]
90019b08:	ea4f 2728 	mov.w	r7, r8, asr #8
90019b0c:	4356      	muls	r6, r2
90019b0e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019b12:	1c72      	adds	r2, r6, #1
90019b14:	eb02 2226 	add.w	r2, r2, r6, asr #8
90019b18:	f3c5 4607 	ubfx	r6, r5, #16, #8
90019b1c:	b2ed      	uxtb	r5, r5
90019b1e:	1212      	asrs	r2, r2, #8
90019b20:	fa1f f982 	uxth.w	r9, r2
90019b24:	43d2      	mvns	r2, r2
90019b26:	fb16 f609 	smulbb	r6, r6, r9
90019b2a:	b2d2      	uxtb	r2, r2
90019b2c:	fb15 f509 	smulbb	r5, r5, r9
90019b30:	fb07 6702 	mla	r7, r7, r2, r6
90019b34:	ea4f 06e8 	mov.w	r6, r8, asr #3
90019b38:	fb1a fa09 	smulbb	sl, sl, r9
90019b3c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019b40:	b2bf      	uxth	r7, r7
90019b42:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019b46:	fa5f f888 	uxtb.w	r8, r8
90019b4a:	fb06 a602 	mla	r6, r6, r2, sl
90019b4e:	fb08 5502 	mla	r5, r8, r2, r5
90019b52:	1c7a      	adds	r2, r7, #1
90019b54:	b2b6      	uxth	r6, r6
90019b56:	b2ad      	uxth	r5, r5
90019b58:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90019b5c:	9a03      	ldr	r2, [sp, #12]
90019b5e:	f105 0a01 	add.w	sl, r5, #1
90019b62:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019b66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019b6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019b6e:	ea4a 0707 	orr.w	r7, sl, r7
90019b72:	f106 0a01 	add.w	sl, r6, #1
90019b76:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019b7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019b7e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019b82:	ea47 070a 	orr.w	r7, r7, sl
90019b86:	52a7      	strh	r7, [r4, r2]
90019b88:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90019b8a:	f10e 3eff 	add.w	lr, lr, #4294967295
90019b8e:	4410      	add	r0, r2
90019b90:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90019b92:	4411      	add	r1, r2
90019b94:	e755      	b.n	90019a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
90019b96:	f04f 0800 	mov.w	r8, #0
90019b9a:	eba3 0208 	sub.w	r2, r3, r8
90019b9e:	2a00      	cmp	r2, #0
90019ba0:	f77f af53 	ble.w	90019a4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
90019ba4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
90019ba8:	140a      	asrs	r2, r1, #16
90019baa:	9f01      	ldr	r7, [sp, #4]
90019bac:	1405      	asrs	r5, r0, #16
90019bae:	fb06 7202 	mla	r2, r6, r2, r7
90019bb2:	5d52      	ldrb	r2, [r2, r5]
90019bb4:	9d02      	ldr	r5, [sp, #8]
90019bb6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90019bba:	0e2e      	lsrs	r6, r5, #24
90019bbc:	d044      	beq.n	90019c48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
90019bbe:	9a05      	ldr	r2, [sp, #20]
90019bc0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019bc4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
90019bc8:	4356      	muls	r6, r2
90019bca:	ea4f 272e 	mov.w	r7, lr, asr #8
90019bce:	1c72      	adds	r2, r6, #1
90019bd0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019bd4:	eb02 2226 	add.w	r2, r2, r6, asr #8
90019bd8:	f3c5 4607 	ubfx	r6, r5, #16, #8
90019bdc:	b2ed      	uxtb	r5, r5
90019bde:	1212      	asrs	r2, r2, #8
90019be0:	fa1f f982 	uxth.w	r9, r2
90019be4:	43d2      	mvns	r2, r2
90019be6:	fb16 f609 	smulbb	r6, r6, r9
90019bea:	b2d2      	uxtb	r2, r2
90019bec:	fb15 f509 	smulbb	r5, r5, r9
90019bf0:	fb07 6702 	mla	r7, r7, r2, r6
90019bf4:	ea4f 06ee 	mov.w	r6, lr, asr #3
90019bf8:	fb1a fa09 	smulbb	sl, sl, r9
90019bfc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019c00:	b2bf      	uxth	r7, r7
90019c02:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019c06:	fa5f fe8e 	uxtb.w	lr, lr
90019c0a:	fb06 a602 	mla	r6, r6, r2, sl
90019c0e:	fb0e 5502 	mla	r5, lr, r2, r5
90019c12:	1c7a      	adds	r2, r7, #1
90019c14:	b2b6      	uxth	r6, r6
90019c16:	b2ad      	uxth	r5, r5
90019c18:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90019c1c:	f105 0a01 	add.w	sl, r5, #1
90019c20:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019c24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019c28:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019c2c:	ea4a 0707 	orr.w	r7, sl, r7
90019c30:	f106 0a01 	add.w	sl, r6, #1
90019c34:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019c38:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019c3c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019c40:	ea47 070a 	orr.w	r7, r7, sl
90019c44:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019c48:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90019c4a:	f108 0801 	add.w	r8, r8, #1
90019c4e:	4410      	add	r0, r2
90019c50:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90019c52:	4411      	add	r1, r2
90019c54:	e7a1      	b.n	90019b9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
90019c56:	b007      	add	sp, #28
90019c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019c5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019c60:	b085      	sub	sp, #20
90019c62:	468b      	mov	fp, r1
90019c64:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019c68:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90019c6a:	9203      	str	r2, [sp, #12]
90019c6c:	6841      	ldr	r1, [r0, #4]
90019c6e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
90019c72:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90019c76:	fb01 2404 	mla	r4, r1, r4, r2
90019c7a:	6802      	ldr	r2, [r0, #0]
90019c7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019c80:	f8de 2000 	ldr.w	r2, [lr]
90019c84:	9200      	str	r2, [sp, #0]
90019c86:	f8de 2004 	ldr.w	r2, [lr, #4]
90019c8a:	3204      	adds	r2, #4
90019c8c:	9201      	str	r2, [sp, #4]
90019c8e:	f1bb 0f00 	cmp.w	fp, #0
90019c92:	dc03      	bgt.n	90019c9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90019c94:	9a03      	ldr	r2, [sp, #12]
90019c96:	2a00      	cmp	r2, #0
90019c98:	f340 8153 	ble.w	90019f42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
90019c9c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90019c9e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019ca2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90019ca6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019ca8:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90019cac:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019cb0:	2b00      	cmp	r3, #0
90019cb2:	dd0e      	ble.n	90019cd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019cb4:	1408      	asrs	r0, r1, #16
90019cb6:	d405      	bmi.n	90019cc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019cb8:	42b8      	cmp	r0, r7
90019cba:	da03      	bge.n	90019cc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019cbc:	1410      	asrs	r0, r2, #16
90019cbe:	d401      	bmi.n	90019cc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019cc0:	42b0      	cmp	r0, r6
90019cc2:	db07      	blt.n	90019cd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90019cc4:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019cc6:	3b01      	subs	r3, #1
90019cc8:	3402      	adds	r4, #2
90019cca:	4401      	add	r1, r0
90019ccc:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019cce:	4402      	add	r2, r0
90019cd0:	e7ee      	b.n	90019cb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90019cd2:	d017      	beq.n	90019d04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
90019cd4:	1e58      	subs	r0, r3, #1
90019cd6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90019cd8:	fb05 1500 	mla	r5, r5, r0, r1
90019cdc:	142d      	asrs	r5, r5, #16
90019cde:	d409      	bmi.n	90019cf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019ce0:	42bd      	cmp	r5, r7
90019ce2:	da07      	bge.n	90019cf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019ce4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90019ce6:	fb05 2000 	mla	r0, r5, r0, r2
90019cea:	1400      	asrs	r0, r0, #16
90019cec:	d402      	bmi.n	90019cf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019cee:	42b0      	cmp	r0, r6
90019cf0:	f2c0 80bc 	blt.w	90019e6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
90019cf4:	2600      	movs	r6, #0
90019cf6:	1998      	adds	r0, r3, r6
90019cf8:	2800      	cmp	r0, #0
90019cfa:	dc3e      	bgt.n	90019d7a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
90019cfc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019d00:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019d04:	f1bb 0f00 	cmp.w	fp, #0
90019d08:	f340 811b 	ble.w	90019f42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
90019d0c:	ee30 0a04 	vadd.f32	s0, s0, s8
90019d10:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019d12:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019d16:	f1bb 0b01 	subs.w	fp, fp, #1
90019d1a:	eeb0 6a62 	vmov.f32	s12, s5
90019d1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019d22:	ee31 1a05 	vadd.f32	s2, s2, s10
90019d26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019d2a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019d2e:	eeb0 6a43 	vmov.f32	s12, s6
90019d32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019d36:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90019d3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019d3e:	ee61 7a27 	vmul.f32	s15, s2, s15
90019d42:	ee77 2a62 	vsub.f32	s5, s14, s5
90019d46:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019d4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019d4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019d52:	ee12 2a90 	vmov	r2, s5
90019d56:	eef0 2a47 	vmov.f32	s5, s14
90019d5a:	fb92 f3f3 	sdiv	r3, r2, r3
90019d5e:	ee13 2a10 	vmov	r2, s6
90019d62:	9311      	str	r3, [sp, #68]	@ 0x44
90019d64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019d66:	eeb0 3a67 	vmov.f32	s6, s15
90019d6a:	fb92 f3f3 	sdiv	r3, r2, r3
90019d6e:	9a03      	ldr	r2, [sp, #12]
90019d70:	9312      	str	r3, [sp, #72]	@ 0x48
90019d72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019d74:	bf08      	it	eq
90019d76:	4613      	moveq	r3, r2
90019d78:	e789      	b.n	90019c8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90019d7a:	140f      	asrs	r7, r1, #16
90019d7c:	d426      	bmi.n	90019dcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019d7e:	f8de 5008 	ldr.w	r5, [lr, #8]
90019d82:	42bd      	cmp	r5, r7
90019d84:	dd22      	ble.n	90019dcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019d86:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019d8a:	d41f      	bmi.n	90019dcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019d8c:	f8de 000c 	ldr.w	r0, [lr, #12]
90019d90:	4560      	cmp	r0, ip
90019d92:	dd1b      	ble.n	90019dcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019d94:	9800      	ldr	r0, [sp, #0]
90019d96:	b22d      	sxth	r5, r5
90019d98:	fb0c 0505 	mla	r5, ip, r5, r0
90019d9c:	5de8      	ldrb	r0, [r5, r7]
90019d9e:	9d01      	ldr	r5, [sp, #4]
90019da0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
90019da4:	0e07      	lsrs	r7, r0, #24
90019da6:	2fff      	cmp	r7, #255	@ 0xff
90019da8:	d116      	bne.n	90019dd8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019daa:	f06f 0501 	mvn.w	r5, #1
90019dae:	fb05 f706 	mul.w	r7, r5, r6
90019db2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
90019db6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
90019dba:	0945      	lsrs	r5, r0, #5
90019dbc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90019dc0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90019dc4:	ea4c 0505 	orr.w	r5, ip, r5
90019dc8:	4305      	orrs	r5, r0
90019dca:	53e5      	strh	r5, [r4, r7]
90019dcc:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019dce:	3e01      	subs	r6, #1
90019dd0:	4401      	add	r1, r0
90019dd2:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019dd4:	4402      	add	r2, r0
90019dd6:	e78e      	b.n	90019cf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90019dd8:	b2fd      	uxtb	r5, r7
90019dda:	2f00      	cmp	r7, #0
90019ddc:	d0f6      	beq.n	90019dcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019dde:	f06f 0701 	mvn.w	r7, #1
90019de2:	fa1f f985 	uxth.w	r9, r5
90019de6:	43ed      	mvns	r5, r5
90019de8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
90019dec:	4377      	muls	r7, r6
90019dee:	fb1a fa09 	smulbb	sl, sl, r9
90019df2:	b2ed      	uxtb	r5, r5
90019df4:	f834 8007 	ldrh.w	r8, [r4, r7]
90019df8:	9702      	str	r7, [sp, #8]
90019dfa:	f3c0 4707 	ubfx	r7, r0, #16, #8
90019dfe:	ea4f 2c28 	mov.w	ip, r8, asr #8
90019e02:	fb17 f709 	smulbb	r7, r7, r9
90019e06:	b2c0      	uxtb	r0, r0
90019e08:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019e0c:	fb10 f009 	smulbb	r0, r0, r9
90019e10:	fb0c 7c05 	mla	ip, ip, r5, r7
90019e14:	ea4f 07e8 	mov.w	r7, r8, asr #3
90019e18:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019e1c:	fa1f fc8c 	uxth.w	ip, ip
90019e20:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90019e24:	fa5f f888 	uxtb.w	r8, r8
90019e28:	fb07 a705 	mla	r7, r7, r5, sl
90019e2c:	fb08 0005 	mla	r0, r8, r5, r0
90019e30:	f10c 0501 	add.w	r5, ip, #1
90019e34:	b2bf      	uxth	r7, r7
90019e36:	b280      	uxth	r0, r0
90019e38:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019e3c:	f100 0a01 	add.w	sl, r0, #1
90019e40:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019e44:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
90019e48:	9802      	ldr	r0, [sp, #8]
90019e4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019e4e:	ea4a 0c0c 	orr.w	ip, sl, ip
90019e52:	f107 0a01 	add.w	sl, r7, #1
90019e56:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90019e5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019e5e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019e62:	ea4c 0c0a 	orr.w	ip, ip, sl
90019e66:	f824 c000 	strh.w	ip, [r4, r0]
90019e6a:	e7af      	b.n	90019dcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019e6c:	f04f 0800 	mov.w	r8, #0
90019e70:	eba3 0008 	sub.w	r0, r3, r8
90019e74:	2800      	cmp	r0, #0
90019e76:	f77f af41 	ble.w	90019cfc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
90019e7a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
90019e7e:	1410      	asrs	r0, r2, #16
90019e80:	9f00      	ldr	r7, [sp, #0]
90019e82:	140d      	asrs	r5, r1, #16
90019e84:	fb06 7000 	mla	r0, r6, r0, r7
90019e88:	5d40      	ldrb	r0, [r0, r5]
90019e8a:	9d01      	ldr	r5, [sp, #4]
90019e8c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
90019e90:	0e2e      	lsrs	r6, r5, #24
90019e92:	2eff      	cmp	r6, #255	@ 0xff
90019e94:	d112      	bne.n	90019ebc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
90019e96:	482c      	ldr	r0, [pc, #176]	@ (90019f48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
90019e98:	ea00 2615 	and.w	r6, r0, r5, lsr #8
90019e9c:	0968      	lsrs	r0, r5, #5
90019e9e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90019ea2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90019ea6:	4330      	orrs	r0, r6
90019ea8:	4328      	orrs	r0, r5
90019eaa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
90019eae:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019eb0:	f108 0801 	add.w	r8, r8, #1
90019eb4:	4401      	add	r1, r0
90019eb6:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019eb8:	4402      	add	r2, r0
90019eba:	e7d9      	b.n	90019e70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90019ebc:	b2f0      	uxtb	r0, r6
90019ebe:	2e00      	cmp	r6, #0
90019ec0:	d0f5      	beq.n	90019eae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90019ec2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
90019ec6:	fa1f f980 	uxth.w	r9, r0
90019eca:	f3c5 4607 	ubfx	r6, r5, #16, #8
90019ece:	43c0      	mvns	r0, r0
90019ed0:	ea4f 272c 	mov.w	r7, ip, asr #8
90019ed4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019ed8:	fb16 f609 	smulbb	r6, r6, r9
90019edc:	b2c0      	uxtb	r0, r0
90019ede:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019ee2:	b2ed      	uxtb	r5, r5
90019ee4:	fb1a fa09 	smulbb	sl, sl, r9
90019ee8:	fb07 6700 	mla	r7, r7, r0, r6
90019eec:	ea4f 06ec 	mov.w	r6, ip, asr #3
90019ef0:	fb15 f509 	smulbb	r5, r5, r9
90019ef4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90019ef8:	b2bf      	uxth	r7, r7
90019efa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019efe:	fa5f fc8c 	uxtb.w	ip, ip
90019f02:	fb06 a600 	mla	r6, r6, r0, sl
90019f06:	fb0c 5500 	mla	r5, ip, r0, r5
90019f0a:	1c78      	adds	r0, r7, #1
90019f0c:	b2b6      	uxth	r6, r6
90019f0e:	b2ad      	uxth	r5, r5
90019f10:	eb00 2717 	add.w	r7, r0, r7, lsr #8
90019f14:	f105 0a01 	add.w	sl, r5, #1
90019f18:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019f1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019f20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019f24:	ea4a 0707 	orr.w	r7, sl, r7
90019f28:	f106 0a01 	add.w	sl, r6, #1
90019f2c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019f30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019f34:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019f38:	ea47 070a 	orr.w	r7, r7, sl
90019f3c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019f40:	e7b5      	b.n	90019eae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90019f42:	b005      	add	sp, #20
90019f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019f48:	fffff800 	.word	0xfffff800

90019f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019f50:	b087      	sub	sp, #28
90019f52:	468b      	mov	fp, r1
90019f54:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019f58:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90019f5a:	9204      	str	r2, [sp, #16]
90019f5c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90019f60:	6861      	ldr	r1, [r4, #4]
90019f62:	9205      	str	r2, [sp, #20]
90019f64:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
90019f68:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
90019f6c:	fb01 2000 	mla	r0, r1, r0, r2
90019f70:	6822      	ldr	r2, [r4, #0]
90019f72:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90019f76:	f8de 2000 	ldr.w	r2, [lr]
90019f7a:	9201      	str	r2, [sp, #4]
90019f7c:	f8de 2004 	ldr.w	r2, [lr, #4]
90019f80:	9202      	str	r2, [sp, #8]
90019f82:	f1bb 0f00 	cmp.w	fp, #0
90019f86:	dc03      	bgt.n	90019f90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
90019f88:	9a04      	ldr	r2, [sp, #16]
90019f8a:	2a00      	cmp	r2, #0
90019f8c:	f340 8142 	ble.w	9001a214 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90019f90:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90019f92:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019f96:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90019f9a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90019f9c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90019fa0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019fa4:	2b00      	cmp	r3, #0
90019fa6:	dd0e      	ble.n	90019fc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90019fa8:	140c      	asrs	r4, r1, #16
90019faa:	d405      	bmi.n	90019fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019fac:	42bc      	cmp	r4, r7
90019fae:	da03      	bge.n	90019fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019fb0:	1414      	asrs	r4, r2, #16
90019fb2:	d401      	bmi.n	90019fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019fb4:	42b4      	cmp	r4, r6
90019fb6:	db07      	blt.n	90019fc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019fb8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90019fba:	3b01      	subs	r3, #1
90019fbc:	3002      	adds	r0, #2
90019fbe:	4421      	add	r1, r4
90019fc0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90019fc2:	4422      	add	r2, r4
90019fc4:	e7ee      	b.n	90019fa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90019fc6:	d019      	beq.n	90019ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
90019fc8:	1e5c      	subs	r4, r3, #1
90019fca:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90019fcc:	fb05 1504 	mla	r5, r5, r4, r1
90019fd0:	142d      	asrs	r5, r5, #16
90019fd2:	d409      	bmi.n	90019fe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019fd4:	42bd      	cmp	r5, r7
90019fd6:	da07      	bge.n	90019fe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019fd8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90019fda:	fb05 2404 	mla	r4, r5, r4, r2
90019fde:	1424      	asrs	r4, r4, #16
90019fe0:	d402      	bmi.n	90019fe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019fe2:	42b4      	cmp	r4, r6
90019fe4:	f2c0 80b1 	blt.w	9001a14a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90019fe8:	f04f 0800 	mov.w	r8, #0
90019fec:	eb03 0408 	add.w	r4, r3, r8
90019ff0:	2c00      	cmp	r4, #0
90019ff2:	dc3e      	bgt.n	9001a072 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
90019ff4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019ff8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90019ffc:	f1bb 0f00 	cmp.w	fp, #0
9001a000:	f340 8108 	ble.w	9001a214 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001a004:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a008:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a00a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a00e:	f1bb 0b01 	subs.w	fp, fp, #1
9001a012:	eeb0 6a62 	vmov.f32	s12, s5
9001a016:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a01a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a01e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a022:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001a026:	eeb0 6a43 	vmov.f32	s12, s6
9001a02a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a02e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001a032:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a036:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a03a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a03e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a042:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a046:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a04a:	ee12 2a90 	vmov	r2, s5
9001a04e:	eef0 2a47 	vmov.f32	s5, s14
9001a052:	fb92 f3f3 	sdiv	r3, r2, r3
9001a056:	ee13 2a10 	vmov	r2, s6
9001a05a:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a05c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a05e:	eeb0 3a67 	vmov.f32	s6, s15
9001a062:	fb92 f3f3 	sdiv	r3, r2, r3
9001a066:	9a04      	ldr	r2, [sp, #16]
9001a068:	9314      	str	r3, [sp, #80]	@ 0x50
9001a06a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a06c:	bf08      	it	eq
9001a06e:	4613      	moveq	r3, r2
9001a070:	e787      	b.n	90019f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001a072:	140e      	asrs	r6, r1, #16
9001a074:	d462      	bmi.n	9001a13c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a076:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a07a:	42b5      	cmp	r5, r6
9001a07c:	dd5e      	ble.n	9001a13c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a07e:	1417      	asrs	r7, r2, #16
9001a080:	d45c      	bmi.n	9001a13c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a082:	f8de 400c 	ldr.w	r4, [lr, #12]
9001a086:	42bc      	cmp	r4, r7
9001a088:	dd58      	ble.n	9001a13c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a08a:	b22d      	sxth	r5, r5
9001a08c:	9c02      	ldr	r4, [sp, #8]
9001a08e:	fb07 6505 	mla	r5, r7, r5, r6
9001a092:	5d66      	ldrb	r6, [r4, r5]
9001a094:	2e00      	cmp	r6, #0
9001a096:	d051      	beq.n	9001a13c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001a098:	9c01      	ldr	r4, [sp, #4]
9001a09a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001a09e:	f06f 0401 	mvn.w	r4, #1
9001a0a2:	fb04 f408 	mul.w	r4, r4, r8
9001a0a6:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001a0aa:	5b05      	ldrh	r5, [r0, r4]
9001a0ac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a0b0:	9403      	str	r4, [sp, #12]
9001a0b2:	9c05      	ldr	r4, [sp, #20]
9001a0b4:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001a0b8:	4366      	muls	r6, r4
9001a0ba:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001a0be:	1c74      	adds	r4, r6, #1
9001a0c0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001a0c4:	122e      	asrs	r6, r5, #8
9001a0c6:	1224      	asrs	r4, r4, #8
9001a0c8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001a0cc:	00ed      	lsls	r5, r5, #3
9001a0ce:	b2a7      	uxth	r7, r4
9001a0d0:	43e4      	mvns	r4, r4
9001a0d2:	b2ed      	uxtb	r5, r5
9001a0d4:	b2e4      	uxtb	r4, r4
9001a0d6:	fb16 f604 	smulbb	r6, r6, r4
9001a0da:	fb15 f504 	smulbb	r5, r5, r4
9001a0de:	fb0c 6c07 	mla	ip, ip, r7, r6
9001a0e2:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001a0e6:	fb1a fa04 	smulbb	sl, sl, r4
9001a0ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001a0ee:	fa1f fc8c 	uxth.w	ip, ip
9001a0f2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a0f6:	fa5f f989 	uxtb.w	r9, r9
9001a0fa:	fb06 a607 	mla	r6, r6, r7, sl
9001a0fe:	f10c 0401 	add.w	r4, ip, #1
9001a102:	fb09 5507 	mla	r5, r9, r7, r5
9001a106:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001a10a:	9c03      	ldr	r4, [sp, #12]
9001a10c:	b2ad      	uxth	r5, r5
9001a10e:	b2b6      	uxth	r6, r6
9001a110:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a114:	f105 0a01 	add.w	sl, r5, #1
9001a118:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a11c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a120:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a124:	f106 0a01 	add.w	sl, r6, #1
9001a128:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a12c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a130:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a134:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a138:	f820 c004 	strh.w	ip, [r0, r4]
9001a13c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a13e:	f108 38ff 	add.w	r8, r8, #4294967295
9001a142:	4421      	add	r1, r4
9001a144:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a146:	4422      	add	r2, r4
9001a148:	e750      	b.n	90019fec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a14a:	f04f 0900 	mov.w	r9, #0
9001a14e:	eba3 0409 	sub.w	r4, r3, r9
9001a152:	2c00      	cmp	r4, #0
9001a154:	f77f af4e 	ble.w	90019ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001a158:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001a15c:	140d      	asrs	r5, r1, #16
9001a15e:	1414      	asrs	r4, r2, #16
9001a160:	fb06 5404 	mla	r4, r6, r4, r5
9001a164:	9d02      	ldr	r5, [sp, #8]
9001a166:	5d2e      	ldrb	r6, [r5, r4]
9001a168:	2e00      	cmp	r6, #0
9001a16a:	d04c      	beq.n	9001a206 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001a16c:	9d01      	ldr	r5, [sp, #4]
9001a16e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001a172:	9c05      	ldr	r4, [sp, #20]
9001a174:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001a178:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001a17c:	4366      	muls	r6, r4
9001a17e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001a182:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a186:	1c74      	adds	r4, r6, #1
9001a188:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001a18c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001a190:	122e      	asrs	r6, r5, #8
9001a192:	1224      	asrs	r4, r4, #8
9001a194:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001a198:	00ed      	lsls	r5, r5, #3
9001a19a:	b2a7      	uxth	r7, r4
9001a19c:	43e4      	mvns	r4, r4
9001a19e:	b2ed      	uxtb	r5, r5
9001a1a0:	b2e4      	uxtb	r4, r4
9001a1a2:	fb16 f604 	smulbb	r6, r6, r4
9001a1a6:	fb15 f504 	smulbb	r5, r5, r4
9001a1aa:	fb0c 6c07 	mla	ip, ip, r7, r6
9001a1ae:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001a1b2:	fb1a fa04 	smulbb	sl, sl, r4
9001a1b6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a1ba:	fa1f fc8c 	uxth.w	ip, ip
9001a1be:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a1c2:	fa5f f888 	uxtb.w	r8, r8
9001a1c6:	fb06 a607 	mla	r6, r6, r7, sl
9001a1ca:	f10c 0401 	add.w	r4, ip, #1
9001a1ce:	fb08 5507 	mla	r5, r8, r7, r5
9001a1d2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001a1d6:	b2ad      	uxth	r5, r5
9001a1d8:	b2b6      	uxth	r6, r6
9001a1da:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a1de:	f105 0a01 	add.w	sl, r5, #1
9001a1e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a1e6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a1ea:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a1ee:	f106 0a01 	add.w	sl, r6, #1
9001a1f2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a1f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a1fa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a1fe:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a202:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001a206:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a208:	f109 0901 	add.w	r9, r9, #1
9001a20c:	4421      	add	r1, r4
9001a20e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a210:	4422      	add	r2, r4
9001a212:	e79c      	b.n	9001a14e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001a214:	b007      	add	sp, #28
9001a216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a21a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a21a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a21e:	b085      	sub	sp, #20
9001a220:	468b      	mov	fp, r1
9001a222:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a226:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a228:	9203      	str	r2, [sp, #12]
9001a22a:	6861      	ldr	r1, [r4, #4]
9001a22c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001a230:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001a234:	fb01 2000 	mla	r0, r1, r0, r2
9001a238:	6822      	ldr	r2, [r4, #0]
9001a23a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001a23e:	f8d8 2000 	ldr.w	r2, [r8]
9001a242:	9200      	str	r2, [sp, #0]
9001a244:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001a248:	9201      	str	r2, [sp, #4]
9001a24a:	f1bb 0f00 	cmp.w	fp, #0
9001a24e:	dc03      	bgt.n	9001a258 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001a250:	9a03      	ldr	r2, [sp, #12]
9001a252:	2a00      	cmp	r2, #0
9001a254:	f340 8146 	ble.w	9001a4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001a258:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a25a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001a25e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a262:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a264:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001a268:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a26c:	2b00      	cmp	r3, #0
9001a26e:	dd0e      	ble.n	9001a28e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001a270:	140c      	asrs	r4, r1, #16
9001a272:	d405      	bmi.n	9001a280 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a274:	42bc      	cmp	r4, r7
9001a276:	da03      	bge.n	9001a280 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a278:	1414      	asrs	r4, r2, #16
9001a27a:	d401      	bmi.n	9001a280 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a27c:	42b4      	cmp	r4, r6
9001a27e:	db07      	blt.n	9001a290 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a280:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001a282:	3b01      	subs	r3, #1
9001a284:	3002      	adds	r0, #2
9001a286:	4421      	add	r1, r4
9001a288:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001a28a:	4422      	add	r2, r4
9001a28c:	e7ee      	b.n	9001a26c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001a28e:	d017      	beq.n	9001a2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001a290:	1e5c      	subs	r4, r3, #1
9001a292:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001a294:	fb05 1504 	mla	r5, r5, r4, r1
9001a298:	142d      	asrs	r5, r5, #16
9001a29a:	d409      	bmi.n	9001a2b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a29c:	42bd      	cmp	r5, r7
9001a29e:	da07      	bge.n	9001a2b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a2a0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001a2a2:	fb05 2404 	mla	r4, r5, r4, r2
9001a2a6:	1424      	asrs	r4, r4, #16
9001a2a8:	d402      	bmi.n	9001a2b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a2aa:	42b4      	cmp	r4, r6
9001a2ac:	f2c0 80b3 	blt.w	9001a416 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001a2b0:	2600      	movs	r6, #0
9001a2b2:	199c      	adds	r4, r3, r6
9001a2b4:	2c00      	cmp	r4, #0
9001a2b6:	dc3e      	bgt.n	9001a336 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001a2b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a2bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001a2c0:	f1bb 0f00 	cmp.w	fp, #0
9001a2c4:	f340 810e 	ble.w	9001a4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001a2c8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a2cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a2ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a2d2:	f1bb 0b01 	subs.w	fp, fp, #1
9001a2d6:	eeb0 6a62 	vmov.f32	s12, s5
9001a2da:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a2de:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a2e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a2e6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a2ea:	eeb0 6a43 	vmov.f32	s12, s6
9001a2ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a2f2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a2f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a2fa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a2fe:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a302:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a306:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a30a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a30e:	ee12 2a90 	vmov	r2, s5
9001a312:	eef0 2a47 	vmov.f32	s5, s14
9001a316:	fb92 f3f3 	sdiv	r3, r2, r3
9001a31a:	ee13 2a10 	vmov	r2, s6
9001a31e:	9311      	str	r3, [sp, #68]	@ 0x44
9001a320:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a322:	eeb0 3a67 	vmov.f32	s6, s15
9001a326:	fb92 f3f3 	sdiv	r3, r2, r3
9001a32a:	9a03      	ldr	r2, [sp, #12]
9001a32c:	9312      	str	r3, [sp, #72]	@ 0x48
9001a32e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a330:	bf08      	it	eq
9001a332:	4613      	moveq	r3, r2
9001a334:	e789      	b.n	9001a24a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001a336:	140f      	asrs	r7, r1, #16
9001a338:	d418      	bmi.n	9001a36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a33a:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001a33e:	42bd      	cmp	r5, r7
9001a340:	dd14      	ble.n	9001a36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a342:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a346:	d411      	bmi.n	9001a36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a348:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001a34c:	4564      	cmp	r4, ip
9001a34e:	dd0d      	ble.n	9001a36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a350:	b22d      	sxth	r5, r5
9001a352:	9c01      	ldr	r4, [sp, #4]
9001a354:	fb0c 7505 	mla	r5, ip, r5, r7
9001a358:	5d64      	ldrb	r4, [r4, r5]
9001a35a:	2cff      	cmp	r4, #255	@ 0xff
9001a35c:	d10c      	bne.n	9001a378 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001a35e:	9c00      	ldr	r4, [sp, #0]
9001a360:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001a364:	f06f 0401 	mvn.w	r4, #1
9001a368:	4374      	muls	r4, r6
9001a36a:	5305      	strh	r5, [r0, r4]
9001a36c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001a36e:	3e01      	subs	r6, #1
9001a370:	4421      	add	r1, r4
9001a372:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001a374:	4422      	add	r2, r4
9001a376:	e79c      	b.n	9001a2b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a378:	2c00      	cmp	r4, #0
9001a37a:	d0f7      	beq.n	9001a36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a37c:	9f00      	ldr	r7, [sp, #0]
9001a37e:	fa1f fc84 	uxth.w	ip, r4
9001a382:	43e4      	mvns	r4, r4
9001a384:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001a388:	f06f 0501 	mvn.w	r5, #1
9001a38c:	b2e4      	uxtb	r4, r4
9001a38e:	4375      	muls	r5, r6
9001a390:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001a394:	9502      	str	r5, [sp, #8]
9001a396:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001a39a:	5b45      	ldrh	r5, [r0, r5]
9001a39c:	122f      	asrs	r7, r5, #8
9001a39e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001a3a2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a3a6:	00ed      	lsls	r5, r5, #3
9001a3a8:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001a3ac:	fb17 f704 	smulbb	r7, r7, r4
9001a3b0:	b2ed      	uxtb	r5, r5
9001a3b2:	fb1a fa04 	smulbb	sl, sl, r4
9001a3b6:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001a3ba:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001a3be:	fb15 f504 	smulbb	r5, r5, r4
9001a3c2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001a3c6:	fa1f fe8e 	uxth.w	lr, lr
9001a3ca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a3ce:	fa5f f989 	uxtb.w	r9, r9
9001a3d2:	fb07 a70c 	mla	r7, r7, ip, sl
9001a3d6:	f10e 0401 	add.w	r4, lr, #1
9001a3da:	fb09 550c 	mla	r5, r9, ip, r5
9001a3de:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001a3e2:	9c02      	ldr	r4, [sp, #8]
9001a3e4:	b2ad      	uxth	r5, r5
9001a3e6:	b2bf      	uxth	r7, r7
9001a3e8:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001a3ec:	f105 0a01 	add.w	sl, r5, #1
9001a3f0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a3f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a3f8:	ea4a 0e0e 	orr.w	lr, sl, lr
9001a3fc:	f107 0a01 	add.w	sl, r7, #1
9001a400:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a404:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a408:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a40c:	ea4e 0e0a 	orr.w	lr, lr, sl
9001a410:	f820 e004 	strh.w	lr, [r0, r4]
9001a414:	e7aa      	b.n	9001a36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001a416:	f04f 0900 	mov.w	r9, #0
9001a41a:	eba3 0409 	sub.w	r4, r3, r9
9001a41e:	2c00      	cmp	r4, #0
9001a420:	f77f af4a 	ble.w	9001a2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a424:	1414      	asrs	r4, r2, #16
9001a426:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001a42a:	140d      	asrs	r5, r1, #16
9001a42c:	fb06 5504 	mla	r5, r6, r4, r5
9001a430:	9c01      	ldr	r4, [sp, #4]
9001a432:	5d64      	ldrb	r4, [r4, r5]
9001a434:	2cff      	cmp	r4, #255	@ 0xff
9001a436:	d10b      	bne.n	9001a450 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001a438:	9c00      	ldr	r4, [sp, #0]
9001a43a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001a43e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001a442:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001a444:	f109 0901 	add.w	r9, r9, #1
9001a448:	4421      	add	r1, r4
9001a44a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001a44c:	4422      	add	r2, r4
9001a44e:	e7e4      	b.n	9001a41a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001a450:	2c00      	cmp	r4, #0
9001a452:	d0f6      	beq.n	9001a442 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001a454:	9e00      	ldr	r6, [sp, #0]
9001a456:	b2a7      	uxth	r7, r4
9001a458:	43e4      	mvns	r4, r4
9001a45a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001a45e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001a462:	b2e4      	uxtb	r4, r4
9001a464:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a468:	122e      	asrs	r6, r5, #8
9001a46a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001a46e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a472:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001a476:	00ed      	lsls	r5, r5, #3
9001a478:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001a47c:	fb16 f604 	smulbb	r6, r6, r4
9001a480:	b2ed      	uxtb	r5, r5
9001a482:	fb1a fa04 	smulbb	sl, sl, r4
9001a486:	fb0c 6c07 	mla	ip, ip, r7, r6
9001a48a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001a48e:	fb15 f504 	smulbb	r5, r5, r4
9001a492:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a496:	fa1f fc8c 	uxth.w	ip, ip
9001a49a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a49e:	fa5f fe8e 	uxtb.w	lr, lr
9001a4a2:	fb06 a607 	mla	r6, r6, r7, sl
9001a4a6:	f10c 0401 	add.w	r4, ip, #1
9001a4aa:	fb0e 5507 	mla	r5, lr, r7, r5
9001a4ae:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001a4b2:	b2ad      	uxth	r5, r5
9001a4b4:	b2b6      	uxth	r6, r6
9001a4b6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a4ba:	f105 0a01 	add.w	sl, r5, #1
9001a4be:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a4c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a4c6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a4ca:	f106 0a01 	add.w	sl, r6, #1
9001a4ce:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a4d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a4d6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a4da:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a4de:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001a4e2:	e7ae      	b.n	9001a442 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001a4e4:	b005      	add	sp, #20
9001a4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a4ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a4ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a4ee:	b085      	sub	sp, #20
9001a4f0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a4f2:	9203      	str	r2, [sp, #12]
9001a4f4:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001a4f8:	9100      	str	r1, [sp, #0]
9001a4fa:	9201      	str	r2, [sp, #4]
9001a4fc:	6841      	ldr	r1, [r0, #4]
9001a4fe:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001a502:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001a506:	fb01 2404 	mla	r4, r1, r4, r2
9001a50a:	6802      	ldr	r2, [r0, #0]
9001a50c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a510:	f8de 2000 	ldr.w	r2, [lr]
9001a514:	9202      	str	r2, [sp, #8]
9001a516:	9a01      	ldr	r2, [sp, #4]
9001a518:	43d6      	mvns	r6, r2
9001a51a:	b2f6      	uxtb	r6, r6
9001a51c:	9a00      	ldr	r2, [sp, #0]
9001a51e:	2a00      	cmp	r2, #0
9001a520:	dc03      	bgt.n	9001a52a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001a522:	9a03      	ldr	r2, [sp, #12]
9001a524:	2a00      	cmp	r2, #0
9001a526:	f340 8124 	ble.w	9001a772 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001a52a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a52c:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001a530:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a534:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a536:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001a53a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a53e:	2b00      	cmp	r3, #0
9001a540:	dd0e      	ble.n	9001a560 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a542:	1408      	asrs	r0, r1, #16
9001a544:	d405      	bmi.n	9001a552 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a546:	4560      	cmp	r0, ip
9001a548:	da03      	bge.n	9001a552 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a54a:	1410      	asrs	r0, r2, #16
9001a54c:	d401      	bmi.n	9001a552 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a54e:	42b8      	cmp	r0, r7
9001a550:	db07      	blt.n	9001a562 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001a552:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a554:	3b01      	subs	r3, #1
9001a556:	3402      	adds	r4, #2
9001a558:	4401      	add	r1, r0
9001a55a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a55c:	4402      	add	r2, r0
9001a55e:	e7ee      	b.n	9001a53e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001a560:	d06e      	beq.n	9001a640 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001a562:	1e58      	subs	r0, r3, #1
9001a564:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001a566:	fb05 1500 	mla	r5, r5, r0, r1
9001a56a:	142d      	asrs	r5, r5, #16
9001a56c:	d45c      	bmi.n	9001a628 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a56e:	4565      	cmp	r5, ip
9001a570:	da5a      	bge.n	9001a628 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a572:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001a574:	fb05 2000 	mla	r0, r5, r0, r2
9001a578:	1400      	asrs	r0, r0, #16
9001a57a:	d455      	bmi.n	9001a628 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a57c:	42b8      	cmp	r0, r7
9001a57e:	da53      	bge.n	9001a628 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a580:	4699      	mov	r9, r3
9001a582:	46a2      	mov	sl, r4
9001a584:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001a588:	f1b9 0f00 	cmp.w	r9, #0
9001a58c:	dd54      	ble.n	9001a638 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a58e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a592:	140d      	asrs	r5, r1, #16
9001a594:	1410      	asrs	r0, r2, #16
9001a596:	f109 39ff 	add.w	r9, r9, #4294967295
9001a59a:	fb07 5000 	mla	r0, r7, r0, r5
9001a59e:	9d02      	ldr	r5, [sp, #8]
9001a5a0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a5a4:	f8ba 5000 	ldrh.w	r5, [sl]
9001a5a8:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a5ac:	122f      	asrs	r7, r5, #8
9001a5ae:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001a5b2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a5b6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a5ba:	00ed      	lsls	r5, r5, #3
9001a5bc:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001a5c0:	fb17 f706 	smulbb	r7, r7, r6
9001a5c4:	b2ed      	uxtb	r5, r5
9001a5c6:	fb18 f806 	smulbb	r8, r8, r6
9001a5ca:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001a5ce:	10c7      	asrs	r7, r0, #3
9001a5d0:	fb15 f506 	smulbb	r5, r5, r6
9001a5d4:	00c0      	lsls	r0, r0, #3
9001a5d6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a5da:	fa1f fc8c 	uxth.w	ip, ip
9001a5de:	b2c0      	uxtb	r0, r0
9001a5e0:	fb07 870b 	mla	r7, r7, fp, r8
9001a5e4:	fb00 500b 	mla	r0, r0, fp, r5
9001a5e8:	f10c 0501 	add.w	r5, ip, #1
9001a5ec:	b2bf      	uxth	r7, r7
9001a5ee:	b280      	uxth	r0, r0
9001a5f0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a5f4:	f107 0801 	add.w	r8, r7, #1
9001a5f8:	1c45      	adds	r5, r0, #1
9001a5fa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001a5fe:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a602:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a606:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a608:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001a60c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a610:	4401      	add	r1, r0
9001a612:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001a616:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a618:	ea45 0c0c 	orr.w	ip, r5, ip
9001a61c:	4402      	add	r2, r0
9001a61e:	ea4c 0c08 	orr.w	ip, ip, r8
9001a622:	f82a cb02 	strh.w	ip, [sl], #2
9001a626:	e7af      	b.n	9001a588 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a628:	f04f 0800 	mov.w	r8, #0
9001a62c:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001a630:	eb03 0008 	add.w	r0, r3, r8
9001a634:	2800      	cmp	r0, #0
9001a636:	dc41      	bgt.n	9001a6bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001a638:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a63c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a640:	9b00      	ldr	r3, [sp, #0]
9001a642:	2b00      	cmp	r3, #0
9001a644:	f340 8095 	ble.w	9001a772 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001a648:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001a64c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a64e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a652:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a656:	eef0 6a62 	vmov.f32	s13, s5
9001a65a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a65e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a662:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a666:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001a66a:	eef0 6a43 	vmov.f32	s13, s6
9001a66e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a672:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001a676:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a67a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a67e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a682:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a686:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a68a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a68e:	ee12 2a90 	vmov	r2, s5
9001a692:	eef0 2a47 	vmov.f32	s5, s14
9001a696:	fb92 f3f3 	sdiv	r3, r2, r3
9001a69a:	ee13 2a10 	vmov	r2, s6
9001a69e:	9311      	str	r3, [sp, #68]	@ 0x44
9001a6a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a6a2:	eeb0 3a67 	vmov.f32	s6, s15
9001a6a6:	fb92 f3f3 	sdiv	r3, r2, r3
9001a6aa:	9312      	str	r3, [sp, #72]	@ 0x48
9001a6ac:	9b00      	ldr	r3, [sp, #0]
9001a6ae:	9a03      	ldr	r2, [sp, #12]
9001a6b0:	3b01      	subs	r3, #1
9001a6b2:	9300      	str	r3, [sp, #0]
9001a6b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a6b6:	bf08      	it	eq
9001a6b8:	4613      	moveq	r3, r2
9001a6ba:	e72f      	b.n	9001a51c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001a6bc:	140f      	asrs	r7, r1, #16
9001a6be:	d451      	bmi.n	9001a764 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001a6c0:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a6c4:	42bd      	cmp	r5, r7
9001a6c6:	dd4d      	ble.n	9001a764 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001a6c8:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a6cc:	d44a      	bmi.n	9001a764 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001a6ce:	f8de 000c 	ldr.w	r0, [lr, #12]
9001a6d2:	4560      	cmp	r0, ip
9001a6d4:	dd46      	ble.n	9001a764 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001a6d6:	b22d      	sxth	r5, r5
9001a6d8:	9802      	ldr	r0, [sp, #8]
9001a6da:	fb0c 7505 	mla	r5, ip, r5, r7
9001a6de:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001a6e2:	f06f 0501 	mvn.w	r5, #1
9001a6e6:	fb05 fb08 	mul.w	fp, r5, r8
9001a6ea:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a6ee:	f834 500b 	ldrh.w	r5, [r4, fp]
9001a6f2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a6f6:	122f      	asrs	r7, r5, #8
9001a6f8:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001a6fc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a700:	00ed      	lsls	r5, r5, #3
9001a702:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001a706:	fb17 f706 	smulbb	r7, r7, r6
9001a70a:	b2ed      	uxtb	r5, r5
9001a70c:	fb19 f906 	smulbb	r9, r9, r6
9001a710:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001a714:	10c7      	asrs	r7, r0, #3
9001a716:	fb15 f506 	smulbb	r5, r5, r6
9001a71a:	00c0      	lsls	r0, r0, #3
9001a71c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a720:	fa1f fc8c 	uxth.w	ip, ip
9001a724:	b2c0      	uxtb	r0, r0
9001a726:	fb07 970a 	mla	r7, r7, sl, r9
9001a72a:	fb00 500a 	mla	r0, r0, sl, r5
9001a72e:	f10c 0501 	add.w	r5, ip, #1
9001a732:	b2bf      	uxth	r7, r7
9001a734:	b280      	uxth	r0, r0
9001a736:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a73a:	f107 0901 	add.w	r9, r7, #1
9001a73e:	1c45      	adds	r5, r0, #1
9001a740:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001a744:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a748:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a74c:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001a750:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a754:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001a758:	ea45 0c0c 	orr.w	ip, r5, ip
9001a75c:	ea4c 0c09 	orr.w	ip, ip, r9
9001a760:	f824 c00b 	strh.w	ip, [r4, fp]
9001a764:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a766:	f108 38ff 	add.w	r8, r8, #4294967295
9001a76a:	4401      	add	r1, r0
9001a76c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a76e:	4402      	add	r2, r0
9001a770:	e75e      	b.n	9001a630 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001a772:	b005      	add	sp, #20
9001a774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a778 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a77c:	b085      	sub	sp, #20
9001a77e:	4693      	mov	fp, r2
9001a780:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a784:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001a786:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001a788:	6870      	ldr	r0, [r6, #4]
9001a78a:	9101      	str	r1, [sp, #4]
9001a78c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001a790:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001a794:	fb00 2404 	mla	r4, r0, r4, r2
9001a798:	6832      	ldr	r2, [r6, #0]
9001a79a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a79e:	682a      	ldr	r2, [r5, #0]
9001a7a0:	9202      	str	r2, [sp, #8]
9001a7a2:	9a01      	ldr	r2, [sp, #4]
9001a7a4:	2a00      	cmp	r2, #0
9001a7a6:	dc03      	bgt.n	9001a7b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001a7a8:	f1bb 0f00 	cmp.w	fp, #0
9001a7ac:	f340 809a 	ble.w	9001a8e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001a7b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a7b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a7b6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a7ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a7bc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001a7c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a7c4:	2b00      	cmp	r3, #0
9001a7c6:	dd0c      	ble.n	9001a7e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001a7c8:	1406      	asrs	r6, r0, #16
9001a7ca:	d405      	bmi.n	9001a7d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a7cc:	454e      	cmp	r6, r9
9001a7ce:	da03      	bge.n	9001a7d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a7d0:	1416      	asrs	r6, r2, #16
9001a7d2:	d401      	bmi.n	9001a7d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a7d4:	4546      	cmp	r6, r8
9001a7d6:	db05      	blt.n	9001a7e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001a7d8:	4470      	add	r0, lr
9001a7da:	4462      	add	r2, ip
9001a7dc:	3b01      	subs	r3, #1
9001a7de:	3402      	adds	r4, #2
9001a7e0:	e7f0      	b.n	9001a7c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001a7e2:	d00f      	beq.n	9001a804 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001a7e4:	1e5e      	subs	r6, r3, #1
9001a7e6:	fb0e 0706 	mla	r7, lr, r6, r0
9001a7ea:	143f      	asrs	r7, r7, #16
9001a7ec:	d541      	bpl.n	9001a872 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001a7ee:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001a7f2:	4698      	mov	r8, r3
9001a7f4:	9603      	str	r6, [sp, #12]
9001a7f6:	f1b8 0f00 	cmp.w	r8, #0
9001a7fa:	dc56      	bgt.n	9001a8aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001a7fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a800:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a804:	9b01      	ldr	r3, [sp, #4]
9001a806:	2b00      	cmp	r3, #0
9001a808:	dd6c      	ble.n	9001a8e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001a80a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a80e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a810:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a814:	eeb0 6a62 	vmov.f32	s12, s5
9001a818:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a81c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a820:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a824:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a828:	eeb0 6a43 	vmov.f32	s12, s6
9001a82c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a830:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a834:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a838:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a83c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a840:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a844:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a848:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a84c:	ee12 2a90 	vmov	r2, s5
9001a850:	eef0 2a47 	vmov.f32	s5, s14
9001a854:	fb92 fef3 	sdiv	lr, r2, r3
9001a858:	ee13 2a10 	vmov	r2, s6
9001a85c:	eeb0 3a67 	vmov.f32	s6, s15
9001a860:	fb92 fcf3 	sdiv	ip, r2, r3
9001a864:	9b01      	ldr	r3, [sp, #4]
9001a866:	3b01      	subs	r3, #1
9001a868:	9301      	str	r3, [sp, #4]
9001a86a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a86c:	bf08      	it	eq
9001a86e:	465b      	moveq	r3, fp
9001a870:	e797      	b.n	9001a7a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001a872:	454f      	cmp	r7, r9
9001a874:	dabb      	bge.n	9001a7ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a876:	fb0c 2606 	mla	r6, ip, r6, r2
9001a87a:	1436      	asrs	r6, r6, #16
9001a87c:	d4b7      	bmi.n	9001a7ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a87e:	4546      	cmp	r6, r8
9001a880:	dab5      	bge.n	9001a7ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a882:	461e      	mov	r6, r3
9001a884:	46a0      	mov	r8, r4
9001a886:	2e00      	cmp	r6, #0
9001a888:	ddb8      	ble.n	9001a7fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a88a:	1417      	asrs	r7, r2, #16
9001a88c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001a890:	ea4f 4920 	mov.w	r9, r0, asr #16
9001a894:	9902      	ldr	r1, [sp, #8]
9001a896:	4470      	add	r0, lr
9001a898:	4462      	add	r2, ip
9001a89a:	fb0a 9707 	mla	r7, sl, r7, r9
9001a89e:	3e01      	subs	r6, #1
9001a8a0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001a8a4:	f828 7b02 	strh.w	r7, [r8], #2
9001a8a8:	e7ed      	b.n	9001a886 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001a8aa:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a8ae:	d414      	bmi.n	9001a8da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a8b0:	68ae      	ldr	r6, [r5, #8]
9001a8b2:	454e      	cmp	r6, r9
9001a8b4:	dd11      	ble.n	9001a8da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a8b6:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001a8ba:	d40e      	bmi.n	9001a8da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a8bc:	68ef      	ldr	r7, [r5, #12]
9001a8be:	4557      	cmp	r7, sl
9001a8c0:	dd0b      	ble.n	9001a8da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a8c2:	b236      	sxth	r6, r6
9001a8c4:	f06f 0101 	mvn.w	r1, #1
9001a8c8:	9f02      	ldr	r7, [sp, #8]
9001a8ca:	fb0a 9606 	mla	r6, sl, r6, r9
9001a8ce:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001a8d2:	fb01 f608 	mul.w	r6, r1, r8
9001a8d6:	9903      	ldr	r1, [sp, #12]
9001a8d8:	538f      	strh	r7, [r1, r6]
9001a8da:	4470      	add	r0, lr
9001a8dc:	4462      	add	r2, ip
9001a8de:	f108 38ff 	add.w	r8, r8, #4294967295
9001a8e2:	e788      	b.n	9001a7f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a8e4:	b005      	add	sp, #20
9001a8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a8ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a8ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a8ee:	b087      	sub	sp, #28
9001a8f0:	468b      	mov	fp, r1
9001a8f2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a8f6:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a8f8:	9203      	str	r2, [sp, #12]
9001a8fa:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a8fe:	6841      	ldr	r1, [r0, #4]
9001a900:	9204      	str	r2, [sp, #16]
9001a902:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001a906:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001a90a:	fb01 2505 	mla	r5, r1, r5, r2
9001a90e:	6802      	ldr	r2, [r0, #0]
9001a910:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001a914:	f8d9 2000 	ldr.w	r2, [r9]
9001a918:	9201      	str	r2, [sp, #4]
9001a91a:	f1bb 0f00 	cmp.w	fp, #0
9001a91e:	dc03      	bgt.n	9001a928 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001a920:	9a03      	ldr	r2, [sp, #12]
9001a922:	2a00      	cmp	r2, #0
9001a924:	f340 8158 	ble.w	9001abd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001a928:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a92a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001a92e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a932:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a934:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001a938:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a93c:	2b00      	cmp	r3, #0
9001a93e:	dd0e      	ble.n	9001a95e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001a940:	1402      	asrs	r2, r0, #16
9001a942:	d405      	bmi.n	9001a950 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a944:	42ba      	cmp	r2, r7
9001a946:	da03      	bge.n	9001a950 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a948:	140a      	asrs	r2, r1, #16
9001a94a:	d401      	bmi.n	9001a950 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a94c:	42b2      	cmp	r2, r6
9001a94e:	db07      	blt.n	9001a960 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a950:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a952:	3b01      	subs	r3, #1
9001a954:	3502      	adds	r5, #2
9001a956:	4410      	add	r0, r2
9001a958:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a95a:	4411      	add	r1, r2
9001a95c:	e7ee      	b.n	9001a93c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001a95e:	d017      	beq.n	9001a990 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001a960:	1e5a      	subs	r2, r3, #1
9001a962:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a964:	fb04 0402 	mla	r4, r4, r2, r0
9001a968:	1424      	asrs	r4, r4, #16
9001a96a:	d409      	bmi.n	9001a980 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a96c:	42bc      	cmp	r4, r7
9001a96e:	da07      	bge.n	9001a980 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a970:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a972:	fb04 1202 	mla	r2, r4, r2, r1
9001a976:	1412      	asrs	r2, r2, #16
9001a978:	d402      	bmi.n	9001a980 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a97a:	42b2      	cmp	r2, r6
9001a97c:	f2c0 80bf 	blt.w	9001aafe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001a980:	2700      	movs	r7, #0
9001a982:	19da      	adds	r2, r3, r7
9001a984:	2a00      	cmp	r2, #0
9001a986:	dc3e      	bgt.n	9001aa06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001a988:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a98c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001a990:	f1bb 0f00 	cmp.w	fp, #0
9001a994:	f340 8120 	ble.w	9001abd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001a998:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a99c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a99e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a9a2:	f1bb 0b01 	subs.w	fp, fp, #1
9001a9a6:	eeb0 6a62 	vmov.f32	s12, s5
9001a9aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a9ae:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a9b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a9b6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001a9ba:	eeb0 6a43 	vmov.f32	s12, s6
9001a9be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a9c2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001a9c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a9ca:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a9ce:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a9d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a9d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a9da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a9de:	ee12 2a90 	vmov	r2, s5
9001a9e2:	eef0 2a47 	vmov.f32	s5, s14
9001a9e6:	fb92 f3f3 	sdiv	r3, r2, r3
9001a9ea:	ee13 2a10 	vmov	r2, s6
9001a9ee:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a9f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a9f2:	eeb0 3a67 	vmov.f32	s6, s15
9001a9f6:	fb92 f3f3 	sdiv	r3, r2, r3
9001a9fa:	9a03      	ldr	r2, [sp, #12]
9001a9fc:	9314      	str	r3, [sp, #80]	@ 0x50
9001a9fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aa00:	bf08      	it	eq
9001aa02:	4613      	moveq	r3, r2
9001aa04:	e789      	b.n	9001a91a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001aa06:	1406      	asrs	r6, r0, #16
9001aa08:	d42d      	bmi.n	9001aa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001aa0a:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001aa0e:	42b4      	cmp	r4, r6
9001aa10:	dd29      	ble.n	9001aa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001aa12:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001aa16:	d426      	bmi.n	9001aa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001aa18:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001aa1c:	4562      	cmp	r2, ip
9001aa1e:	dd22      	ble.n	9001aa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001aa20:	b224      	sxth	r4, r4
9001aa22:	9a01      	ldr	r2, [sp, #4]
9001aa24:	fb0c 6404 	mla	r4, ip, r4, r6
9001aa28:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001aa2c:	0e22      	lsrs	r2, r4, #24
9001aa2e:	d01a      	beq.n	9001aa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001aa30:	9e04      	ldr	r6, [sp, #16]
9001aa32:	4372      	muls	r2, r6
9001aa34:	1c56      	adds	r6, r2, #1
9001aa36:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001aa3a:	0a26      	lsrs	r6, r4, #8
9001aa3c:	1212      	asrs	r2, r2, #8
9001aa3e:	9605      	str	r6, [sp, #20]
9001aa40:	2aff      	cmp	r2, #255	@ 0xff
9001aa42:	d116      	bne.n	9001aa72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001aa44:	f06f 0201 	mvn.w	r2, #1
9001aa48:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001aa4c:	fb02 fc07 	mul.w	ip, r2, r7
9001aa50:	0962      	lsrs	r2, r4, #5
9001aa52:	f026 0607 	bic.w	r6, r6, #7
9001aa56:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001aa5a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001aa5e:	4316      	orrs	r6, r2
9001aa60:	4326      	orrs	r6, r4
9001aa62:	f825 600c 	strh.w	r6, [r5, ip]
9001aa66:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001aa68:	3f01      	subs	r7, #1
9001aa6a:	4410      	add	r0, r2
9001aa6c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001aa6e:	4411      	add	r1, r2
9001aa70:	e787      	b.n	9001a982 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001aa72:	f06f 0601 	mvn.w	r6, #1
9001aa76:	fa1f fa82 	uxth.w	sl, r2
9001aa7a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001aa7e:	43d2      	mvns	r2, r2
9001aa80:	437e      	muls	r6, r7
9001aa82:	b2e4      	uxtb	r4, r4
9001aa84:	fb1c fc0a 	smulbb	ip, ip, sl
9001aa88:	b2d2      	uxtb	r2, r2
9001aa8a:	f835 8006 	ldrh.w	r8, [r5, r6]
9001aa8e:	fb14 f40a 	smulbb	r4, r4, sl
9001aa92:	9602      	str	r6, [sp, #8]
9001aa94:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001aa98:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001aa9c:	fb16 f60a 	smulbb	r6, r6, sl
9001aaa0:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001aaa4:	fb0e ce02 	mla	lr, lr, r2, ip
9001aaa8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001aaac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001aab0:	fa1f fe8e 	uxth.w	lr, lr
9001aab4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001aab8:	fa5f f888 	uxtb.w	r8, r8
9001aabc:	fb0c 6c02 	mla	ip, ip, r2, r6
9001aac0:	fb08 4402 	mla	r4, r8, r2, r4
9001aac4:	f10e 0201 	add.w	r2, lr, #1
9001aac8:	fa1f fc8c 	uxth.w	ip, ip
9001aacc:	b2a4      	uxth	r4, r4
9001aace:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001aad2:	9a02      	ldr	r2, [sp, #8]
9001aad4:	1c66      	adds	r6, r4, #1
9001aad6:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001aada:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001aade:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001aae2:	ea46 0e0e 	orr.w	lr, r6, lr
9001aae6:	f10c 0601 	add.w	r6, ip, #1
9001aaea:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001aaee:	0976      	lsrs	r6, r6, #5
9001aaf0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001aaf4:	ea4e 0e06 	orr.w	lr, lr, r6
9001aaf8:	f825 e002 	strh.w	lr, [r5, r2]
9001aafc:	e7b3      	b.n	9001aa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001aafe:	f04f 0800 	mov.w	r8, #0
9001ab02:	eba3 0208 	sub.w	r2, r3, r8
9001ab06:	2a00      	cmp	r2, #0
9001ab08:	f77f af3e 	ble.w	9001a988 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ab0c:	1404      	asrs	r4, r0, #16
9001ab0e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001ab12:	140a      	asrs	r2, r1, #16
9001ab14:	fb06 4202 	mla	r2, r6, r2, r4
9001ab18:	9c01      	ldr	r4, [sp, #4]
9001ab1a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001ab1e:	0e22      	lsrs	r2, r4, #24
9001ab20:	d015      	beq.n	9001ab4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001ab22:	9e04      	ldr	r6, [sp, #16]
9001ab24:	4372      	muls	r2, r6
9001ab26:	1c56      	adds	r6, r2, #1
9001ab28:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001ab2c:	0a26      	lsrs	r6, r4, #8
9001ab2e:	1212      	asrs	r2, r2, #8
9001ab30:	2aff      	cmp	r2, #255	@ 0xff
9001ab32:	d113      	bne.n	9001ab5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001ab34:	0962      	lsrs	r2, r4, #5
9001ab36:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ab3a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001ab3e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ab42:	f026 0607 	bic.w	r6, r6, #7
9001ab46:	4316      	orrs	r6, r2
9001ab48:	4326      	orrs	r6, r4
9001ab4a:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001ab4e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ab50:	f108 0801 	add.w	r8, r8, #1
9001ab54:	4410      	add	r0, r2
9001ab56:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ab58:	4411      	add	r1, r2
9001ab5a:	e7d2      	b.n	9001ab02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001ab5c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001ab60:	fa1f fa82 	uxth.w	sl, r2
9001ab64:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001ab68:	43d2      	mvns	r2, r2
9001ab6a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ab6e:	fb17 f70a 	smulbb	r7, r7, sl
9001ab72:	b2d2      	uxtb	r2, r2
9001ab74:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ab78:	b2e4      	uxtb	r4, r4
9001ab7a:	b2f6      	uxtb	r6, r6
9001ab7c:	fb0c 7c02 	mla	ip, ip, r2, r7
9001ab80:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001ab84:	fb14 f40a 	smulbb	r4, r4, sl
9001ab88:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ab8c:	fa1f fc8c 	uxth.w	ip, ip
9001ab90:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ab94:	fb16 f60a 	smulbb	r6, r6, sl
9001ab98:	fa5f fe8e 	uxtb.w	lr, lr
9001ab9c:	fb0e 4402 	mla	r4, lr, r2, r4
9001aba0:	fb07 6702 	mla	r7, r7, r2, r6
9001aba4:	f10c 0201 	add.w	r2, ip, #1
9001aba8:	b2a4      	uxth	r4, r4
9001abaa:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001abae:	1c66      	adds	r6, r4, #1
9001abb0:	b2bf      	uxth	r7, r7
9001abb2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001abb6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001abba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001abbe:	ea46 0c0c 	orr.w	ip, r6, ip
9001abc2:	1c7e      	adds	r6, r7, #1
9001abc4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001abc8:	0976      	lsrs	r6, r6, #5
9001abca:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001abce:	ea4c 0c06 	orr.w	ip, ip, r6
9001abd2:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001abd6:	e7ba      	b.n	9001ab4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001abd8:	b007      	add	sp, #28
9001abda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001abe0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001abe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001abe4:	b085      	sub	sp, #20
9001abe6:	468b      	mov	fp, r1
9001abe8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001abec:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001abee:	9203      	str	r2, [sp, #12]
9001abf0:	6841      	ldr	r1, [r0, #4]
9001abf2:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001abf6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001abfa:	fb01 2404 	mla	r4, r1, r4, r2
9001abfe:	6802      	ldr	r2, [r0, #0]
9001ac00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ac04:	f8d8 2000 	ldr.w	r2, [r8]
9001ac08:	9201      	str	r2, [sp, #4]
9001ac0a:	f1bb 0f00 	cmp.w	fp, #0
9001ac0e:	dc03      	bgt.n	9001ac18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001ac10:	9a03      	ldr	r2, [sp, #12]
9001ac12:	2a00      	cmp	r2, #0
9001ac14:	f340 814f 	ble.w	9001aeb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001ac18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ac1a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001ac1e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ac22:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001ac24:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001ac28:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001ac2c:	2b00      	cmp	r3, #0
9001ac2e:	dd0e      	ble.n	9001ac4e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ac30:	1408      	asrs	r0, r1, #16
9001ac32:	d405      	bmi.n	9001ac40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ac34:	42b8      	cmp	r0, r7
9001ac36:	da03      	bge.n	9001ac40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ac38:	1410      	asrs	r0, r2, #16
9001ac3a:	d401      	bmi.n	9001ac40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001ac3c:	42b0      	cmp	r0, r6
9001ac3e:	db07      	blt.n	9001ac50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ac40:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ac42:	3b01      	subs	r3, #1
9001ac44:	3402      	adds	r4, #2
9001ac46:	4401      	add	r1, r0
9001ac48:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ac4a:	4402      	add	r2, r0
9001ac4c:	e7ee      	b.n	9001ac2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001ac4e:	d017      	beq.n	9001ac80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ac50:	1e58      	subs	r0, r3, #1
9001ac52:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001ac54:	fb05 1500 	mla	r5, r5, r0, r1
9001ac58:	142d      	asrs	r5, r5, #16
9001ac5a:	d409      	bmi.n	9001ac70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001ac5c:	42bd      	cmp	r5, r7
9001ac5e:	da07      	bge.n	9001ac70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001ac60:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001ac62:	fb05 2000 	mla	r0, r5, r0, r2
9001ac66:	1400      	asrs	r0, r0, #16
9001ac68:	d402      	bmi.n	9001ac70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001ac6a:	42b0      	cmp	r0, r6
9001ac6c:	f2c0 80ba 	blt.w	9001ade4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001ac70:	2600      	movs	r6, #0
9001ac72:	1998      	adds	r0, r3, r6
9001ac74:	2800      	cmp	r0, #0
9001ac76:	dc3e      	bgt.n	9001acf6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001ac78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ac7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ac80:	f1bb 0f00 	cmp.w	fp, #0
9001ac84:	f340 8117 	ble.w	9001aeb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001ac88:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ac8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ac8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ac92:	f1bb 0b01 	subs.w	fp, fp, #1
9001ac96:	eeb0 6a62 	vmov.f32	s12, s5
9001ac9a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ac9e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001aca2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aca6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001acaa:	eeb0 6a43 	vmov.f32	s12, s6
9001acae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001acb2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001acb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001acba:	ee61 7a27 	vmul.f32	s15, s2, s15
9001acbe:	ee77 2a62 	vsub.f32	s5, s14, s5
9001acc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001acc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001acca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001acce:	ee12 2a90 	vmov	r2, s5
9001acd2:	eef0 2a47 	vmov.f32	s5, s14
9001acd6:	fb92 f3f3 	sdiv	r3, r2, r3
9001acda:	ee13 2a10 	vmov	r2, s6
9001acde:	9311      	str	r3, [sp, #68]	@ 0x44
9001ace0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ace2:	eeb0 3a67 	vmov.f32	s6, s15
9001ace6:	fb92 f3f3 	sdiv	r3, r2, r3
9001acea:	9a03      	ldr	r2, [sp, #12]
9001acec:	9312      	str	r3, [sp, #72]	@ 0x48
9001acee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001acf0:	bf08      	it	eq
9001acf2:	4613      	moveq	r3, r2
9001acf4:	e789      	b.n	9001ac0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001acf6:	140f      	asrs	r7, r1, #16
9001acf8:	d424      	bmi.n	9001ad44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001acfa:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001acfe:	42bd      	cmp	r5, r7
9001ad00:	dd20      	ble.n	9001ad44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ad02:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001ad06:	d41d      	bmi.n	9001ad44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ad08:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001ad0c:	4560      	cmp	r0, ip
9001ad0e:	dd19      	ble.n	9001ad44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ad10:	b22d      	sxth	r5, r5
9001ad12:	9801      	ldr	r0, [sp, #4]
9001ad14:	fb0c 7505 	mla	r5, ip, r5, r7
9001ad18:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001ad1c:	0e07      	lsrs	r7, r0, #24
9001ad1e:	2fff      	cmp	r7, #255	@ 0xff
9001ad20:	d116      	bne.n	9001ad50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ad22:	f06f 0501 	mvn.w	r5, #1
9001ad26:	fb05 f706 	mul.w	r7, r5, r6
9001ad2a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001ad2e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001ad32:	0945      	lsrs	r5, r0, #5
9001ad34:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001ad38:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ad3c:	ea4c 0505 	orr.w	r5, ip, r5
9001ad40:	4305      	orrs	r5, r0
9001ad42:	53e5      	strh	r5, [r4, r7]
9001ad44:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ad46:	3e01      	subs	r6, #1
9001ad48:	4401      	add	r1, r0
9001ad4a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ad4c:	4402      	add	r2, r0
9001ad4e:	e790      	b.n	9001ac72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ad50:	b2fd      	uxtb	r5, r7
9001ad52:	2f00      	cmp	r7, #0
9001ad54:	d0f6      	beq.n	9001ad44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ad56:	f06f 0701 	mvn.w	r7, #1
9001ad5a:	fa1f f985 	uxth.w	r9, r5
9001ad5e:	43ed      	mvns	r5, r5
9001ad60:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001ad64:	4377      	muls	r7, r6
9001ad66:	fb1a fa09 	smulbb	sl, sl, r9
9001ad6a:	b2ed      	uxtb	r5, r5
9001ad6c:	f834 e007 	ldrh.w	lr, [r4, r7]
9001ad70:	9702      	str	r7, [sp, #8]
9001ad72:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001ad76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ad7a:	fb17 f709 	smulbb	r7, r7, r9
9001ad7e:	b2c0      	uxtb	r0, r0
9001ad80:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ad84:	fb10 f009 	smulbb	r0, r0, r9
9001ad88:	fb0c 7c05 	mla	ip, ip, r5, r7
9001ad8c:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001ad90:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ad94:	fa1f fc8c 	uxth.w	ip, ip
9001ad98:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ad9c:	fa5f fe8e 	uxtb.w	lr, lr
9001ada0:	fb07 a705 	mla	r7, r7, r5, sl
9001ada4:	fb0e 0005 	mla	r0, lr, r5, r0
9001ada8:	f10c 0501 	add.w	r5, ip, #1
9001adac:	b2bf      	uxth	r7, r7
9001adae:	b280      	uxth	r0, r0
9001adb0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001adb4:	f100 0a01 	add.w	sl, r0, #1
9001adb8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001adbc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001adc0:	9802      	ldr	r0, [sp, #8]
9001adc2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001adc6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001adca:	f107 0a01 	add.w	sl, r7, #1
9001adce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001add2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001add6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001adda:	ea4c 0c0a 	orr.w	ip, ip, sl
9001adde:	f824 c000 	strh.w	ip, [r4, r0]
9001ade2:	e7af      	b.n	9001ad44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ade4:	f04f 0e00 	mov.w	lr, #0
9001ade8:	eba3 000e 	sub.w	r0, r3, lr
9001adec:	2800      	cmp	r0, #0
9001adee:	f77f af43 	ble.w	9001ac78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001adf2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001adf6:	140d      	asrs	r5, r1, #16
9001adf8:	1410      	asrs	r0, r2, #16
9001adfa:	fb06 5000 	mla	r0, r6, r0, r5
9001adfe:	9d01      	ldr	r5, [sp, #4]
9001ae00:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001ae04:	0e2e      	lsrs	r6, r5, #24
9001ae06:	2eff      	cmp	r6, #255	@ 0xff
9001ae08:	d112      	bne.n	9001ae30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001ae0a:	482c      	ldr	r0, [pc, #176]	@ (9001aebc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001ae0c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001ae10:	0968      	lsrs	r0, r5, #5
9001ae12:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ae16:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001ae1a:	4330      	orrs	r0, r6
9001ae1c:	4328      	orrs	r0, r5
9001ae1e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001ae22:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ae24:	f10e 0e01 	add.w	lr, lr, #1
9001ae28:	4401      	add	r1, r0
9001ae2a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ae2c:	4402      	add	r2, r0
9001ae2e:	e7db      	b.n	9001ade8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001ae30:	b2f0      	uxtb	r0, r6
9001ae32:	2e00      	cmp	r6, #0
9001ae34:	d0f5      	beq.n	9001ae22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001ae36:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001ae3a:	fa1f f980 	uxth.w	r9, r0
9001ae3e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ae42:	43c0      	mvns	r0, r0
9001ae44:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ae48:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ae4c:	fb16 f609 	smulbb	r6, r6, r9
9001ae50:	b2c0      	uxtb	r0, r0
9001ae52:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ae56:	b2ed      	uxtb	r5, r5
9001ae58:	fb1a fa09 	smulbb	sl, sl, r9
9001ae5c:	fb07 6700 	mla	r7, r7, r0, r6
9001ae60:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001ae64:	fb15 f509 	smulbb	r5, r5, r9
9001ae68:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ae6c:	b2bf      	uxth	r7, r7
9001ae6e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ae72:	fa5f fc8c 	uxtb.w	ip, ip
9001ae76:	fb06 a600 	mla	r6, r6, r0, sl
9001ae7a:	fb0c 5500 	mla	r5, ip, r0, r5
9001ae7e:	1c78      	adds	r0, r7, #1
9001ae80:	b2b6      	uxth	r6, r6
9001ae82:	b2ad      	uxth	r5, r5
9001ae84:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001ae88:	f105 0a01 	add.w	sl, r5, #1
9001ae8c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ae90:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ae94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ae98:	ea4a 0707 	orr.w	r7, sl, r7
9001ae9c:	f106 0a01 	add.w	sl, r6, #1
9001aea0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001aea4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001aea8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001aeac:	ea47 070a 	orr.w	r7, r7, sl
9001aeb0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001aeb4:	e7b5      	b.n	9001ae22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001aeb6:	b005      	add	sp, #20
9001aeb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001aebc:	fffff800 	.word	0xfffff800

9001aec0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001aec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001aec4:	b087      	sub	sp, #28
9001aec6:	468b      	mov	fp, r1
9001aec8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001aecc:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001aece:	9203      	str	r2, [sp, #12]
9001aed0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001aed4:	6841      	ldr	r1, [r0, #4]
9001aed6:	9204      	str	r2, [sp, #16]
9001aed8:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001aedc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001aee0:	fb01 2404 	mla	r4, r1, r4, r2
9001aee4:	6802      	ldr	r2, [r0, #0]
9001aee6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001aeea:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001aeee:	3201      	adds	r2, #1
9001aef0:	f022 0201 	bic.w	r2, r2, #1
9001aef4:	9200      	str	r2, [sp, #0]
9001aef6:	f8d9 2000 	ldr.w	r2, [r9]
9001aefa:	9201      	str	r2, [sp, #4]
9001aefc:	f1bb 0f00 	cmp.w	fp, #0
9001af00:	dc03      	bgt.n	9001af0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001af02:	9a03      	ldr	r2, [sp, #12]
9001af04:	2a00      	cmp	r2, #0
9001af06:	f340 816a 	ble.w	9001b1de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001af0a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001af0c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001af10:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001af14:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001af16:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001af1a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001af1e:	2b00      	cmp	r3, #0
9001af20:	dd0e      	ble.n	9001af40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001af22:	1402      	asrs	r2, r0, #16
9001af24:	d405      	bmi.n	9001af32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001af26:	42ba      	cmp	r2, r7
9001af28:	da03      	bge.n	9001af32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001af2a:	140a      	asrs	r2, r1, #16
9001af2c:	d401      	bmi.n	9001af32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001af2e:	42b2      	cmp	r2, r6
9001af30:	db07      	blt.n	9001af42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001af32:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001af34:	3b01      	subs	r3, #1
9001af36:	3402      	adds	r4, #2
9001af38:	4410      	add	r0, r2
9001af3a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001af3c:	4411      	add	r1, r2
9001af3e:	e7ee      	b.n	9001af1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001af40:	d017      	beq.n	9001af72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001af42:	1e5a      	subs	r2, r3, #1
9001af44:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001af46:	fb05 0502 	mla	r5, r5, r2, r0
9001af4a:	142d      	asrs	r5, r5, #16
9001af4c:	d409      	bmi.n	9001af62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001af4e:	42bd      	cmp	r5, r7
9001af50:	da07      	bge.n	9001af62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001af52:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001af54:	fb05 1202 	mla	r2, r5, r2, r1
9001af58:	1412      	asrs	r2, r2, #16
9001af5a:	d402      	bmi.n	9001af62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001af5c:	42b2      	cmp	r2, r6
9001af5e:	f2c0 80c8 	blt.w	9001b0f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001af62:	2700      	movs	r7, #0
9001af64:	19da      	adds	r2, r3, r7
9001af66:	2a00      	cmp	r2, #0
9001af68:	dc3e      	bgt.n	9001afe8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001af6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001af6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001af72:	f1bb 0f00 	cmp.w	fp, #0
9001af76:	f340 8132 	ble.w	9001b1de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001af7a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001af7e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001af80:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001af84:	f1bb 0b01 	subs.w	fp, fp, #1
9001af88:	eeb0 6a62 	vmov.f32	s12, s5
9001af8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001af90:	ee31 1a05 	vadd.f32	s2, s2, s10
9001af94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001af98:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001af9c:	eeb0 6a43 	vmov.f32	s12, s6
9001afa0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001afa4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001afa8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001afac:	ee61 7a27 	vmul.f32	s15, s2, s15
9001afb0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001afb4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001afb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001afbc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001afc0:	ee12 2a90 	vmov	r2, s5
9001afc4:	eef0 2a47 	vmov.f32	s5, s14
9001afc8:	fb92 f3f3 	sdiv	r3, r2, r3
9001afcc:	ee13 2a10 	vmov	r2, s6
9001afd0:	9313      	str	r3, [sp, #76]	@ 0x4c
9001afd2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001afd4:	eeb0 3a67 	vmov.f32	s6, s15
9001afd8:	fb92 f3f3 	sdiv	r3, r2, r3
9001afdc:	9a03      	ldr	r2, [sp, #12]
9001afde:	9314      	str	r3, [sp, #80]	@ 0x50
9001afe0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001afe2:	bf08      	it	eq
9001afe4:	4613      	moveq	r3, r2
9001afe6:	e789      	b.n	9001aefc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001afe8:	1405      	asrs	r5, r0, #16
9001afea:	d436      	bmi.n	9001b05a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001afec:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001aff0:	42aa      	cmp	r2, r5
9001aff2:	dd32      	ble.n	9001b05a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001aff4:	140e      	asrs	r6, r1, #16
9001aff6:	d430      	bmi.n	9001b05a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001aff8:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001affc:	42b2      	cmp	r2, r6
9001affe:	dd2c      	ble.n	9001b05a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b000:	9a00      	ldr	r2, [sp, #0]
9001b002:	fb06 5502 	mla	r5, r6, r2, r5
9001b006:	9e01      	ldr	r6, [sp, #4]
9001b008:	086a      	lsrs	r2, r5, #1
9001b00a:	5cb2      	ldrb	r2, [r6, r2]
9001b00c:	07ee      	lsls	r6, r5, #31
9001b00e:	bf54      	ite	pl
9001b010:	f002 020f 	andpl.w	r2, r2, #15
9001b014:	1112      	asrmi	r2, r2, #4
9001b016:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001b01a:	b2d2      	uxtb	r2, r2
9001b01c:	b1ea      	cbz	r2, 9001b05a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b01e:	9d04      	ldr	r5, [sp, #16]
9001b020:	436a      	muls	r2, r5
9001b022:	1c55      	adds	r5, r2, #1
9001b024:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001b028:	4d6e      	ldr	r5, [pc, #440]	@ (9001b1e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001b02a:	1212      	asrs	r2, r2, #8
9001b02c:	682d      	ldr	r5, [r5, #0]
9001b02e:	2aff      	cmp	r2, #255	@ 0xff
9001b030:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001b034:	9605      	str	r6, [sp, #20]
9001b036:	d116      	bne.n	9001b066 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001b038:	f06f 0201 	mvn.w	r2, #1
9001b03c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001b040:	fb02 fc07 	mul.w	ip, r2, r7
9001b044:	096a      	lsrs	r2, r5, #5
9001b046:	f026 0607 	bic.w	r6, r6, #7
9001b04a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b04e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001b052:	4316      	orrs	r6, r2
9001b054:	432e      	orrs	r6, r5
9001b056:	f824 600c 	strh.w	r6, [r4, ip]
9001b05a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b05c:	3f01      	subs	r7, #1
9001b05e:	4410      	add	r0, r2
9001b060:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b062:	4411      	add	r1, r2
9001b064:	e77e      	b.n	9001af64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001b066:	f06f 0601 	mvn.w	r6, #1
9001b06a:	fa1f fa82 	uxth.w	sl, r2
9001b06e:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001b072:	43d2      	mvns	r2, r2
9001b074:	437e      	muls	r6, r7
9001b076:	b2ed      	uxtb	r5, r5
9001b078:	fb1c fc0a 	smulbb	ip, ip, sl
9001b07c:	b2d2      	uxtb	r2, r2
9001b07e:	f834 8006 	ldrh.w	r8, [r4, r6]
9001b082:	fb15 f50a 	smulbb	r5, r5, sl
9001b086:	9602      	str	r6, [sp, #8]
9001b088:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001b08c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001b090:	fb16 f60a 	smulbb	r6, r6, sl
9001b094:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001b098:	fb0e ce02 	mla	lr, lr, r2, ip
9001b09c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001b0a0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b0a4:	fa1f fe8e 	uxth.w	lr, lr
9001b0a8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001b0ac:	fa5f f888 	uxtb.w	r8, r8
9001b0b0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001b0b4:	fb08 5502 	mla	r5, r8, r2, r5
9001b0b8:	f10e 0201 	add.w	r2, lr, #1
9001b0bc:	fa1f fc8c 	uxth.w	ip, ip
9001b0c0:	b2ad      	uxth	r5, r5
9001b0c2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001b0c6:	9a02      	ldr	r2, [sp, #8]
9001b0c8:	1c6e      	adds	r6, r5, #1
9001b0ca:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001b0ce:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001b0d2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001b0d6:	ea46 0e0e 	orr.w	lr, r6, lr
9001b0da:	f10c 0601 	add.w	r6, ip, #1
9001b0de:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001b0e2:	0976      	lsrs	r6, r6, #5
9001b0e4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b0e8:	ea4e 0e06 	orr.w	lr, lr, r6
9001b0ec:	f824 e002 	strh.w	lr, [r4, r2]
9001b0f0:	e7b3      	b.n	9001b05a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b0f2:	f04f 0800 	mov.w	r8, #0
9001b0f6:	eba3 0208 	sub.w	r2, r3, r8
9001b0fa:	2a00      	cmp	r2, #0
9001b0fc:	f77f af35 	ble.w	9001af6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001b100:	1402      	asrs	r2, r0, #16
9001b102:	9e00      	ldr	r6, [sp, #0]
9001b104:	140d      	asrs	r5, r1, #16
9001b106:	fb06 2505 	mla	r5, r6, r5, r2
9001b10a:	9e01      	ldr	r6, [sp, #4]
9001b10c:	086a      	lsrs	r2, r5, #1
9001b10e:	07ed      	lsls	r5, r5, #31
9001b110:	5cb2      	ldrb	r2, [r6, r2]
9001b112:	bf54      	ite	pl
9001b114:	f002 020f 	andpl.w	r2, r2, #15
9001b118:	1112      	asrmi	r2, r2, #4
9001b11a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001b11e:	b2d2      	uxtb	r2, r2
9001b120:	b1c2      	cbz	r2, 9001b154 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b122:	9d04      	ldr	r5, [sp, #16]
9001b124:	436a      	muls	r2, r5
9001b126:	1c55      	adds	r5, r2, #1
9001b128:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001b12c:	4d2d      	ldr	r5, [pc, #180]	@ (9001b1e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001b12e:	1212      	asrs	r2, r2, #8
9001b130:	682e      	ldr	r6, [r5, #0]
9001b132:	2aff      	cmp	r2, #255	@ 0xff
9001b134:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001b138:	d113      	bne.n	9001b162 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001b13a:	0972      	lsrs	r2, r6, #5
9001b13c:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001b140:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001b144:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001b148:	f025 0507 	bic.w	r5, r5, #7
9001b14c:	4315      	orrs	r5, r2
9001b14e:	4335      	orrs	r5, r6
9001b150:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001b154:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b156:	f108 0801 	add.w	r8, r8, #1
9001b15a:	4410      	add	r0, r2
9001b15c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b15e:	4411      	add	r1, r2
9001b160:	e7c9      	b.n	9001b0f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001b162:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001b166:	fa1f fa82 	uxth.w	sl, r2
9001b16a:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001b16e:	43d2      	mvns	r2, r2
9001b170:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b174:	fb17 f70a 	smulbb	r7, r7, sl
9001b178:	b2d2      	uxtb	r2, r2
9001b17a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b17e:	b2f6      	uxtb	r6, r6
9001b180:	b2ed      	uxtb	r5, r5
9001b182:	fb0c 7c02 	mla	ip, ip, r2, r7
9001b186:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001b18a:	fb16 f60a 	smulbb	r6, r6, sl
9001b18e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b192:	fa1f fc8c 	uxth.w	ip, ip
9001b196:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b19a:	fb15 f50a 	smulbb	r5, r5, sl
9001b19e:	fa5f fe8e 	uxtb.w	lr, lr
9001b1a2:	fb0e 6602 	mla	r6, lr, r2, r6
9001b1a6:	fb07 5702 	mla	r7, r7, r2, r5
9001b1aa:	f10c 0201 	add.w	r2, ip, #1
9001b1ae:	b2b6      	uxth	r6, r6
9001b1b0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001b1b4:	1c75      	adds	r5, r6, #1
9001b1b6:	b2bf      	uxth	r7, r7
9001b1b8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b1bc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001b1c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b1c4:	ea45 0c0c 	orr.w	ip, r5, ip
9001b1c8:	1c7d      	adds	r5, r7, #1
9001b1ca:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001b1ce:	096d      	lsrs	r5, r5, #5
9001b1d0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001b1d4:	ea4c 0c05 	orr.w	ip, ip, r5
9001b1d8:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001b1dc:	e7ba      	b.n	9001b154 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001b1de:	b007      	add	sp, #28
9001b1e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b1e4:	240218c4 	.word	0x240218c4

9001b1e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b1e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b1ec:	b087      	sub	sp, #28
9001b1ee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b1f2:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001b4fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001b1f6:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b1f8:	9101      	str	r1, [sp, #4]
9001b1fa:	9205      	str	r2, [sp, #20]
9001b1fc:	6841      	ldr	r1, [r0, #4]
9001b1fe:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001b202:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b206:	fb01 2404 	mla	r4, r1, r4, r2
9001b20a:	6802      	ldr	r2, [r0, #0]
9001b20c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b210:	f8db 2008 	ldr.w	r2, [fp, #8]
9001b214:	3201      	adds	r2, #1
9001b216:	f022 0201 	bic.w	r2, r2, #1
9001b21a:	9202      	str	r2, [sp, #8]
9001b21c:	f8db 2000 	ldr.w	r2, [fp]
9001b220:	9203      	str	r2, [sp, #12]
9001b222:	9a01      	ldr	r2, [sp, #4]
9001b224:	2a00      	cmp	r2, #0
9001b226:	dc03      	bgt.n	9001b230 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001b228:	9a05      	ldr	r2, [sp, #20]
9001b22a:	2a00      	cmp	r2, #0
9001b22c:	f340 8162 	ble.w	9001b4f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001b230:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b232:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001b236:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b23a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b23c:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001b240:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b244:	2b00      	cmp	r3, #0
9001b246:	dd0e      	ble.n	9001b266 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b248:	1402      	asrs	r2, r0, #16
9001b24a:	d405      	bmi.n	9001b258 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b24c:	42ba      	cmp	r2, r7
9001b24e:	da03      	bge.n	9001b258 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b250:	140a      	asrs	r2, r1, #16
9001b252:	d401      	bmi.n	9001b258 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b254:	42b2      	cmp	r2, r6
9001b256:	db07      	blt.n	9001b268 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001b258:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b25a:	3b01      	subs	r3, #1
9001b25c:	3402      	adds	r4, #2
9001b25e:	4410      	add	r0, r2
9001b260:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b262:	4411      	add	r1, r2
9001b264:	e7ee      	b.n	9001b244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001b266:	d017      	beq.n	9001b298 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001b268:	1e5a      	subs	r2, r3, #1
9001b26a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b26c:	fb05 0502 	mla	r5, r5, r2, r0
9001b270:	142d      	asrs	r5, r5, #16
9001b272:	d409      	bmi.n	9001b288 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b274:	42bd      	cmp	r5, r7
9001b276:	da07      	bge.n	9001b288 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b278:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b27a:	fb05 1202 	mla	r2, r5, r2, r1
9001b27e:	1412      	asrs	r2, r2, #16
9001b280:	d402      	bmi.n	9001b288 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b282:	42b2      	cmp	r2, r6
9001b284:	f2c0 80c3 	blt.w	9001b40e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001b288:	2500      	movs	r5, #0
9001b28a:	195a      	adds	r2, r3, r5
9001b28c:	2a00      	cmp	r2, #0
9001b28e:	dc3f      	bgt.n	9001b310 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001b290:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b294:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b298:	9b01      	ldr	r3, [sp, #4]
9001b29a:	2b00      	cmp	r3, #0
9001b29c:	f340 812a 	ble.w	9001b4f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001b2a0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b2a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b2a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b2aa:	eeb0 6a62 	vmov.f32	s12, s5
9001b2ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b2b2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b2b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b2ba:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b2be:	eeb0 6a43 	vmov.f32	s12, s6
9001b2c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b2c6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b2ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b2ce:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b2d2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b2d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b2da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b2de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b2e2:	ee12 2a90 	vmov	r2, s5
9001b2e6:	eef0 2a47 	vmov.f32	s5, s14
9001b2ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001b2ee:	ee13 2a10 	vmov	r2, s6
9001b2f2:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b2f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b2f6:	eeb0 3a67 	vmov.f32	s6, s15
9001b2fa:	fb92 f3f3 	sdiv	r3, r2, r3
9001b2fe:	9314      	str	r3, [sp, #80]	@ 0x50
9001b300:	9b01      	ldr	r3, [sp, #4]
9001b302:	9a05      	ldr	r2, [sp, #20]
9001b304:	3b01      	subs	r3, #1
9001b306:	9301      	str	r3, [sp, #4]
9001b308:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b30a:	bf08      	it	eq
9001b30c:	4613      	moveq	r3, r2
9001b30e:	e788      	b.n	9001b222 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001b310:	1406      	asrs	r6, r0, #16
9001b312:	d42c      	bmi.n	9001b36e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b314:	f8db 2008 	ldr.w	r2, [fp, #8]
9001b318:	42b2      	cmp	r2, r6
9001b31a:	dd28      	ble.n	9001b36e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b31c:	140f      	asrs	r7, r1, #16
9001b31e:	d426      	bmi.n	9001b36e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b320:	f8db 200c 	ldr.w	r2, [fp, #12]
9001b324:	42ba      	cmp	r2, r7
9001b326:	dd22      	ble.n	9001b36e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b328:	9a02      	ldr	r2, [sp, #8]
9001b32a:	fb07 6602 	mla	r6, r7, r2, r6
9001b32e:	9f03      	ldr	r7, [sp, #12]
9001b330:	0872      	lsrs	r2, r6, #1
9001b332:	07f6      	lsls	r6, r6, #31
9001b334:	5cba      	ldrb	r2, [r7, r2]
9001b336:	bf54      	ite	pl
9001b338:	f002 020f 	andpl.w	r2, r2, #15
9001b33c:	1112      	asrmi	r2, r2, #4
9001b33e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001b342:	b2d2      	uxtb	r2, r2
9001b344:	2aff      	cmp	r2, #255	@ 0xff
9001b346:	d118      	bne.n	9001b37a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001b348:	f06f 0601 	mvn.w	r6, #1
9001b34c:	f8d8 2000 	ldr.w	r2, [r8]
9001b350:	fb06 f705 	mul.w	r7, r6, r5
9001b354:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001b358:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001b35c:	0956      	lsrs	r6, r2, #5
9001b35e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001b362:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b366:	ea4c 0606 	orr.w	r6, ip, r6
9001b36a:	4316      	orrs	r6, r2
9001b36c:	53e6      	strh	r6, [r4, r7]
9001b36e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b370:	3d01      	subs	r5, #1
9001b372:	4410      	add	r0, r2
9001b374:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b376:	4411      	add	r1, r2
9001b378:	e787      	b.n	9001b28a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b37a:	2a00      	cmp	r2, #0
9001b37c:	d0f7      	beq.n	9001b36e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b37e:	f06f 0601 	mvn.w	r6, #1
9001b382:	f8d8 c000 	ldr.w	ip, [r8]
9001b386:	fa1f f982 	uxth.w	r9, r2
9001b38a:	43d2      	mvns	r2, r2
9001b38c:	436e      	muls	r6, r5
9001b38e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001b392:	b2d2      	uxtb	r2, r2
9001b394:	f834 e006 	ldrh.w	lr, [r4, r6]
9001b398:	fb1a fa09 	smulbb	sl, sl, r9
9001b39c:	9604      	str	r6, [sp, #16]
9001b39e:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001b3a2:	ea4f 272e 	mov.w	r7, lr, asr #8
9001b3a6:	fb16 f609 	smulbb	r6, r6, r9
9001b3aa:	fa5f fc8c 	uxtb.w	ip, ip
9001b3ae:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b3b2:	fb1c fc09 	smulbb	ip, ip, r9
9001b3b6:	fb07 6702 	mla	r7, r7, r2, r6
9001b3ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001b3be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b3c2:	b2bf      	uxth	r7, r7
9001b3c4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b3c8:	fa5f fe8e 	uxtb.w	lr, lr
9001b3cc:	fb06 a602 	mla	r6, r6, r2, sl
9001b3d0:	fb0e cc02 	mla	ip, lr, r2, ip
9001b3d4:	1c7a      	adds	r2, r7, #1
9001b3d6:	b2b6      	uxth	r6, r6
9001b3d8:	fa1f fc8c 	uxth.w	ip, ip
9001b3dc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001b3e0:	9a04      	ldr	r2, [sp, #16]
9001b3e2:	f10c 0a01 	add.w	sl, ip, #1
9001b3e6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b3ea:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001b3ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b3f2:	ea4a 0707 	orr.w	r7, sl, r7
9001b3f6:	f106 0a01 	add.w	sl, r6, #1
9001b3fa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b3fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b402:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b406:	ea47 070a 	orr.w	r7, r7, sl
9001b40a:	52a7      	strh	r7, [r4, r2]
9001b40c:	e7af      	b.n	9001b36e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001b40e:	f04f 0e00 	mov.w	lr, #0
9001b412:	eba3 020e 	sub.w	r2, r3, lr
9001b416:	2a00      	cmp	r2, #0
9001b418:	f77f af3a 	ble.w	9001b290 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b41c:	1402      	asrs	r2, r0, #16
9001b41e:	9e02      	ldr	r6, [sp, #8]
9001b420:	140d      	asrs	r5, r1, #16
9001b422:	fb06 2505 	mla	r5, r6, r5, r2
9001b426:	9e03      	ldr	r6, [sp, #12]
9001b428:	086a      	lsrs	r2, r5, #1
9001b42a:	07ed      	lsls	r5, r5, #31
9001b42c:	5cb2      	ldrb	r2, [r6, r2]
9001b42e:	bf54      	ite	pl
9001b430:	f002 020f 	andpl.w	r2, r2, #15
9001b434:	1112      	asrmi	r2, r2, #4
9001b436:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001b43a:	b2d2      	uxtb	r2, r2
9001b43c:	2aff      	cmp	r2, #255	@ 0xff
9001b43e:	d115      	bne.n	9001b46c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001b440:	f8d8 5000 	ldr.w	r5, [r8]
9001b444:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001b448:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001b44c:	096a      	lsrs	r2, r5, #5
9001b44e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b452:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001b456:	4332      	orrs	r2, r6
9001b458:	432a      	orrs	r2, r5
9001b45a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001b45e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b460:	f10e 0e01 	add.w	lr, lr, #1
9001b464:	4410      	add	r0, r2
9001b466:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b468:	4411      	add	r1, r2
9001b46a:	e7d2      	b.n	9001b412 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001b46c:	2a00      	cmp	r2, #0
9001b46e:	d0f6      	beq.n	9001b45e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001b470:	f8d8 7000 	ldr.w	r7, [r8]
9001b474:	fa1f f982 	uxth.w	r9, r2
9001b478:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001b47c:	43d2      	mvns	r2, r2
9001b47e:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001b482:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001b486:	ea4f 262c 	mov.w	r6, ip, asr #8
9001b48a:	fb15 f509 	smulbb	r5, r5, r9
9001b48e:	b2d2      	uxtb	r2, r2
9001b490:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b494:	b2ff      	uxtb	r7, r7
9001b496:	fb1a fa09 	smulbb	sl, sl, r9
9001b49a:	fb06 5602 	mla	r6, r6, r2, r5
9001b49e:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001b4a2:	fb17 f709 	smulbb	r7, r7, r9
9001b4a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b4aa:	b2b6      	uxth	r6, r6
9001b4ac:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001b4b0:	fa5f fc8c 	uxtb.w	ip, ip
9001b4b4:	fb05 a502 	mla	r5, r5, r2, sl
9001b4b8:	fb0c 7702 	mla	r7, ip, r2, r7
9001b4bc:	1c72      	adds	r2, r6, #1
9001b4be:	b2ad      	uxth	r5, r5
9001b4c0:	b2bf      	uxth	r7, r7
9001b4c2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001b4c6:	f107 0a01 	add.w	sl, r7, #1
9001b4ca:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001b4ce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b4d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b4d6:	ea4a 0606 	orr.w	r6, sl, r6
9001b4da:	f105 0a01 	add.w	sl, r5, #1
9001b4de:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b4e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b4e6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b4ea:	ea46 060a 	orr.w	r6, r6, sl
9001b4ee:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001b4f2:	e7b4      	b.n	9001b45e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001b4f4:	b007      	add	sp, #28
9001b4f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b4fa:	bf00      	nop
9001b4fc:	240218c4 	.word	0x240218c4

9001b500 <_ZN8touchgfx8LCD16bppD1Ev>:
9001b500:	4770      	bx	lr

9001b502 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001b502:	4770      	bx	lr

9001b504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001b504:	4770      	bx	lr

9001b506 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001b506:	4770      	bx	lr

9001b508 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001b508:	4770      	bx	lr

9001b50a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001b50a:	4770      	bx	lr

9001b50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001b50c:	4770      	bx	lr

9001b50e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001b50e:	4770      	bx	lr

9001b510 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001b510:	4770      	bx	lr

9001b512 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001b512:	4770      	bx	lr

9001b514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001b514:	4770      	bx	lr

9001b516 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001b516:	4770      	bx	lr

9001b518 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001b518:	4770      	bx	lr

9001b51a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001b51a:	4770      	bx	lr

9001b51c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001b51c:	4770      	bx	lr

9001b51e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001b51e:	4770      	bx	lr

9001b520 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001b520:	4770      	bx	lr

9001b522 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001b522:	4770      	bx	lr

9001b524 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001b524:	4770      	bx	lr

9001b526 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001b526:	4770      	bx	lr

9001b528 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001b528:	4770      	bx	lr

9001b52a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001b52a:	4770      	bx	lr

9001b52c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001b52c:	4770      	bx	lr

9001b52e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001b52e:	4770      	bx	lr

9001b530 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001b530:	4770      	bx	lr

9001b532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001b532:	4770      	bx	lr

9001b534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001b534:	4770      	bx	lr

9001b536 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001b536:	4770      	bx	lr

9001b538 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001b538:	4770      	bx	lr

9001b53a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001b53a:	4770      	bx	lr

9001b53c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001b53c:	4770      	bx	lr

9001b53e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001b53e:	4770      	bx	lr

9001b540 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001b540:	4770      	bx	lr

9001b542 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001b542:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001b546:	b088      	sub	sp, #32
9001b548:	4606      	mov	r6, r0
9001b54a:	4688      	mov	r8, r1
9001b54c:	4691      	mov	r9, r2
9001b54e:	ac08      	add	r4, sp, #32
9001b550:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001b554:	4620      	mov	r0, r4
9001b556:	f7fd fc33 	bl	90018dc0 <_ZNK8touchgfx6Bitmap7getDataEv>
9001b55a:	6833      	ldr	r3, [r6, #0]
9001b55c:	4605      	mov	r5, r0
9001b55e:	4620      	mov	r0, r4
9001b560:	699f      	ldr	r7, [r3, #24]
9001b562:	f7fd fb3b 	bl	90018bdc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001b566:	4682      	mov	sl, r0
9001b568:	4620      	mov	r0, r4
9001b56a:	f7fd fb6b 	bl	90018c44 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001b56e:	9500      	str	r5, [sp, #0]
9001b570:	464b      	mov	r3, r9
9001b572:	4642      	mov	r2, r8
9001b574:	4631      	mov	r1, r6
9001b576:	e9cd a001 	strd	sl, r0, [sp, #4]
9001b57a:	a806      	add	r0, sp, #24
9001b57c:	47b8      	blx	r7
9001b57e:	4628      	mov	r0, r5
9001b580:	b008      	add	sp, #32
9001b582:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001b588 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001b588:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001b58c:	2300      	movs	r3, #0
9001b58e:	9300      	str	r3, [sp, #0]
9001b590:	4b3d      	ldr	r3, [pc, #244]	@ (9001b688 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001b592:	781b      	ldrb	r3, [r3, #0]
9001b594:	2b00      	cmp	r3, #0
9001b596:	d137      	bne.n	9001b608 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001b598:	4a3c      	ldr	r2, [pc, #240]	@ (9001b68c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001b59a:	f9b2 2000 	ldrsh.w	r2, [r2]
9001b59e:	f8ad 2004 	strh.w	r2, [sp, #4]
9001b5a2:	2b00      	cmp	r3, #0
9001b5a4:	d132      	bne.n	9001b60c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001b5a6:	4b3a      	ldr	r3, [pc, #232]	@ (9001b690 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001b5a8:	f9b3 3000 	ldrsh.w	r3, [r3]
9001b5ac:	ac02      	add	r4, sp, #8
9001b5ae:	6808      	ldr	r0, [r1, #0]
9001b5b0:	f8ad 3006 	strh.w	r3, [sp, #6]
9001b5b4:	ab02      	add	r3, sp, #8
9001b5b6:	6849      	ldr	r1, [r1, #4]
9001b5b8:	4d36      	ldr	r5, [pc, #216]	@ (9001b694 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001b5ba:	c303      	stmia	r3!, {r0, r1}
9001b5bc:	4669      	mov	r1, sp
9001b5be:	4620      	mov	r0, r4
9001b5c0:	f7f9 fd30 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b5c4:	4668      	mov	r0, sp
9001b5c6:	f7f9 fd05 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b5ca:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001b5ce:	f8bd 2000 	ldrh.w	r2, [sp]
9001b5d2:	462f      	mov	r7, r5
9001b5d4:	6828      	ldr	r0, [r5, #0]
9001b5d6:	4413      	add	r3, r2
9001b5d8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001b5dc:	f8ad 3008 	strh.w	r3, [sp, #8]
9001b5e0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001b5e4:	4413      	add	r3, r2
9001b5e6:	f8ad 300a 	strh.w	r3, [sp, #10]
9001b5ea:	6803      	ldr	r3, [r0, #0]
9001b5ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001b5ee:	4798      	blx	r3
9001b5f0:	f010 0f01 	tst.w	r0, #1
9001b5f4:	d00c      	beq.n	9001b610 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001b5f6:	6828      	ldr	r0, [r5, #0]
9001b5f8:	6803      	ldr	r3, [r0, #0]
9001b5fa:	e894 0006 	ldmia.w	r4, {r1, r2}
9001b5fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001b600:	4798      	blx	r3
9001b602:	b004      	add	sp, #16
9001b604:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001b608:	4a21      	ldr	r2, [pc, #132]	@ (9001b690 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001b60a:	e7c6      	b.n	9001b59a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001b60c:	4b1f      	ldr	r3, [pc, #124]	@ (9001b68c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001b60e:	e7cb      	b.n	9001b5a8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001b610:	6838      	ldr	r0, [r7, #0]
9001b612:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001b616:	6803      	ldr	r3, [r0, #0]
9001b618:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001b61c:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001b620:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001b622:	4798      	blx	r3
9001b624:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001b628:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001b62c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001b630:	fb16 3602 	smlabb	r6, r6, r2, r3
9001b634:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001b638:	6838      	ldr	r0, [r7, #0]
9001b63a:	6803      	ldr	r3, [r0, #0]
9001b63c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001b63e:	4798      	blx	r3
9001b640:	4a12      	ldr	r2, [pc, #72]	@ (9001b68c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001b642:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001b646:	8813      	ldrh	r3, [r2, #0]
9001b648:	4691      	mov	r9, r2
9001b64a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001b64e:	435d      	muls	r5, r3
9001b650:	fb03 1404 	mla	r4, r3, r4, r1
9001b654:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001b658:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001b65c:	6838      	ldr	r0, [r7, #0]
9001b65e:	42ac      	cmp	r4, r5
9001b660:	6803      	ldr	r3, [r0, #0]
9001b662:	d20e      	bcs.n	9001b682 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001b664:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
9001b668:	4632      	mov	r2, r6
9001b66a:	4643      	mov	r3, r8
9001b66c:	4621      	mov	r1, r4
9001b66e:	47d0      	blx	sl
9001b670:	f8b9 3000 	ldrh.w	r3, [r9]
9001b674:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b678:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001b67c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001b680:	e7ec      	b.n	9001b65c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001b682:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001b684:	4798      	blx	r3
9001b686:	e7bc      	b.n	9001b602 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001b688:	240218ac 	.word	0x240218ac
9001b68c:	240218ae 	.word	0x240218ae
9001b690:	240218b0 	.word	0x240218b0
9001b694:	240218b4 	.word	0x240218b4

9001b698 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001b698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b69c:	b08b      	sub	sp, #44	@ 0x2c
9001b69e:	460f      	mov	r7, r1
9001b6a0:	4616      	mov	r6, r2
9001b6a2:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001b6a6:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001b6aa:	f1bb 0f00 	cmp.w	fp, #0
9001b6ae:	d04a      	beq.n	9001b746 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001b6b0:	6810      	ldr	r0, [r2, #0]
9001b6b2:	ad06      	add	r5, sp, #24
9001b6b4:	6851      	ldr	r1, [r2, #4]
9001b6b6:	c503      	stmia	r5!, {r0, r1}
9001b6b8:	6818      	ldr	r0, [r3, #0]
9001b6ba:	ad08      	add	r5, sp, #32
9001b6bc:	6859      	ldr	r1, [r3, #4]
9001b6be:	c503      	stmia	r5!, {r0, r1}
9001b6c0:	a806      	add	r0, sp, #24
9001b6c2:	f7f9 fc87 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b6c6:	4631      	mov	r1, r6
9001b6c8:	a808      	add	r0, sp, #32
9001b6ca:	f7f9 fcab 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b6ce:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001b6d2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001b6d6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001b6da:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001b6de:	fb16 2103 	smlabb	r1, r6, r3, r2
9001b6e2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001b6e6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001b6ea:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001b6ee:	4f5f      	ldr	r7, [pc, #380]	@ (9001b86c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001b6f0:	440a      	add	r2, r1
9001b6f2:	6838      	ldr	r0, [r7, #0]
9001b6f4:	46b9      	mov	r9, r7
9001b6f6:	f8ad 2020 	strh.w	r2, [sp, #32]
9001b6fa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001b6fe:	4413      	add	r3, r2
9001b700:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001b704:	6803      	ldr	r3, [r0, #0]
9001b706:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001b708:	4798      	blx	r3
9001b70a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001b70e:	d11d      	bne.n	9001b74c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001b710:	b9fc      	cbnz	r4, 9001b752 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001b712:	f010 0f01 	tst.w	r0, #1
9001b716:	d01c      	beq.n	9001b752 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001b718:	f8d9 0000 	ldr.w	r0, [r9]
9001b71c:	2700      	movs	r7, #0
9001b71e:	b2ad      	uxth	r5, r5
9001b720:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001b724:	6801      	ldr	r1, [r0, #0]
9001b726:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001b72a:	f8cd b00c 	str.w	fp, [sp, #12]
9001b72e:	9501      	str	r5, [sp, #4]
9001b730:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001b734:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001b738:	9402      	str	r4, [sp, #8]
9001b73a:	fa1f f488 	uxth.w	r4, r8
9001b73e:	9400      	str	r4, [sp, #0]
9001b740:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
9001b742:	4631      	mov	r1, r6
9001b744:	47a0      	blx	r4
9001b746:	b00b      	add	sp, #44	@ 0x2c
9001b748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b74c:	f010 0f04 	tst.w	r0, #4
9001b750:	e7e1      	b.n	9001b716 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001b752:	f8d9 0000 	ldr.w	r0, [r9]
9001b756:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001b75a:	6803      	ldr	r3, [r0, #0]
9001b75c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001b75e:	4798      	blx	r3
9001b760:	4b43      	ldr	r3, [pc, #268]	@ (9001b870 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001b762:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001b766:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001b76a:	881a      	ldrh	r2, [r3, #0]
9001b76c:	469a      	mov	sl, r3
9001b76e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001b772:	fb05 f502 	mul.w	r5, r5, r2
9001b776:	fb02 1404 	mla	r4, r2, r4, r1
9001b77a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001b77e:	d059      	beq.n	9001b834 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001b780:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001b784:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001b788:	fa1f f28b 	uxth.w	r2, fp
9001b78c:	469e      	mov	lr, r3
9001b78e:	fa1f f989 	uxth.w	r9, r9
9001b792:	42ac      	cmp	r4, r5
9001b794:	d264      	bcs.n	9001b860 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001b796:	eb04 0a07 	add.w	sl, r4, r7
9001b79a:	4554      	cmp	r4, sl
9001b79c:	d23d      	bcs.n	9001b81a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001b79e:	8821      	ldrh	r1, [r4, #0]
9001b7a0:	f836 3b02 	ldrh.w	r3, [r6], #2
9001b7a4:	1208      	asrs	r0, r1, #8
9001b7a6:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001b7aa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001b7ae:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001b7b2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b7b6:	00c9      	lsls	r1, r1, #3
9001b7b8:	fb10 f009 	smulbb	r0, r0, r9
9001b7bc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001b7c0:	b2c9      	uxtb	r1, r1
9001b7c2:	fb0c 0c02 	mla	ip, ip, r2, r0
9001b7c6:	10d8      	asrs	r0, r3, #3
9001b7c8:	fb1b fb09 	smulbb	fp, fp, r9
9001b7cc:	00db      	lsls	r3, r3, #3
9001b7ce:	fa1f fc8c 	uxth.w	ip, ip
9001b7d2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001b7d6:	fb11 f109 	smulbb	r1, r1, r9
9001b7da:	b2db      	uxtb	r3, r3
9001b7dc:	fb00 b002 	mla	r0, r0, r2, fp
9001b7e0:	f10c 0b01 	add.w	fp, ip, #1
9001b7e4:	fb03 1302 	mla	r3, r3, r2, r1
9001b7e8:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001b7ec:	b29b      	uxth	r3, r3
9001b7ee:	b280      	uxth	r0, r0
9001b7f0:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001b7f4:	f103 0c01 	add.w	ip, r3, #1
9001b7f8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001b7fc:	1c43      	adds	r3, r0, #1
9001b7fe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001b802:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001b806:	0940      	lsrs	r0, r0, #5
9001b808:	ea4c 0c0b 	orr.w	ip, ip, fp
9001b80c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001b810:	ea4c 0c00 	orr.w	ip, ip, r0
9001b814:	f824 cb02 	strh.w	ip, [r4], #2
9001b818:	e7bf      	b.n	9001b79a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001b81a:	f8be 3000 	ldrh.w	r3, [lr]
9001b81e:	eba3 0308 	sub.w	r3, r3, r8
9001b822:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b826:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001b82a:	eba3 0308 	sub.w	r3, r3, r8
9001b82e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001b832:	e7ae      	b.n	9001b792 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001b834:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001b838:	f8d9 0000 	ldr.w	r0, [r9]
9001b83c:	42ac      	cmp	r4, r5
9001b83e:	6803      	ldr	r3, [r0, #0]
9001b840:	d20e      	bcs.n	9001b860 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001b842:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
9001b846:	4632      	mov	r2, r6
9001b848:	463b      	mov	r3, r7
9001b84a:	4621      	mov	r1, r4
9001b84c:	47c0      	blx	r8
9001b84e:	f8ba 3000 	ldrh.w	r3, [sl]
9001b852:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b856:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001b85a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001b85e:	e7eb      	b.n	9001b838 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001b860:	4b02      	ldr	r3, [pc, #8]	@ (9001b86c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001b862:	6818      	ldr	r0, [r3, #0]
9001b864:	6803      	ldr	r3, [r0, #0]
9001b866:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001b868:	4798      	blx	r3
9001b86a:	e76c      	b.n	9001b746 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001b86c:	240218b4 	.word	0x240218b4
9001b870:	240218ae 	.word	0x240218ae

9001b874 <_ZN8touchgfx8LCD16bppD0Ev>:
9001b874:	b510      	push	{r4, lr}
9001b876:	4604      	mov	r4, r0
9001b878:	218c      	movs	r1, #140	@ 0x8c
9001b87a:	f00c fa05 	bl	90027c88 <_ZdlPvj>
9001b87e:	4620      	mov	r0, r4
9001b880:	bd10      	pop	{r4, pc}

9001b882 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001b882:	b510      	push	{r4, lr}
9001b884:	4604      	mov	r4, r0
9001b886:	2104      	movs	r1, #4
9001b888:	f00c f9fe 	bl	90027c88 <_ZdlPvj>
9001b88c:	4620      	mov	r0, r4
9001b88e:	bd10      	pop	{r4, pc}

9001b890 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001b890:	b510      	push	{r4, lr}
9001b892:	4604      	mov	r4, r0
9001b894:	2104      	movs	r1, #4
9001b896:	f00c f9f7 	bl	90027c88 <_ZdlPvj>
9001b89a:	4620      	mov	r0, r4
9001b89c:	bd10      	pop	{r4, pc}

9001b89e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001b89e:	b510      	push	{r4, lr}
9001b8a0:	4604      	mov	r4, r0
9001b8a2:	f640 0144 	movw	r1, #2116	@ 0x844
9001b8a6:	f00c f9ef 	bl	90027c88 <_ZdlPvj>
9001b8aa:	4620      	mov	r0, r4
9001b8ac:	bd10      	pop	{r4, pc}

9001b8ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001b8ae:	b510      	push	{r4, lr}
9001b8b0:	4604      	mov	r4, r0
9001b8b2:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001b8b6:	f00c f9e7 	bl	90027c88 <_ZdlPvj>
9001b8ba:	4620      	mov	r0, r4
9001b8bc:	bd10      	pop	{r4, pc}

9001b8be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001b8be:	b510      	push	{r4, lr}
9001b8c0:	4604      	mov	r4, r0
9001b8c2:	2104      	movs	r1, #4
9001b8c4:	f00c f9e0 	bl	90027c88 <_ZdlPvj>
9001b8c8:	4620      	mov	r0, r4
9001b8ca:	bd10      	pop	{r4, pc}

9001b8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001b8cc:	b510      	push	{r4, lr}
9001b8ce:	4604      	mov	r4, r0
9001b8d0:	2104      	movs	r1, #4
9001b8d2:	f00c f9d9 	bl	90027c88 <_ZdlPvj>
9001b8d6:	4620      	mov	r0, r4
9001b8d8:	bd10      	pop	{r4, pc}

9001b8da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001b8da:	b510      	push	{r4, lr}
9001b8dc:	4604      	mov	r4, r0
9001b8de:	2104      	movs	r1, #4
9001b8e0:	f00c f9d2 	bl	90027c88 <_ZdlPvj>
9001b8e4:	4620      	mov	r0, r4
9001b8e6:	bd10      	pop	{r4, pc}

9001b8e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001b8e8:	b510      	push	{r4, lr}
9001b8ea:	4604      	mov	r4, r0
9001b8ec:	2104      	movs	r1, #4
9001b8ee:	f00c f9cb 	bl	90027c88 <_ZdlPvj>
9001b8f2:	4620      	mov	r0, r4
9001b8f4:	bd10      	pop	{r4, pc}

9001b8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001b8f6:	b510      	push	{r4, lr}
9001b8f8:	4604      	mov	r4, r0
9001b8fa:	2104      	movs	r1, #4
9001b8fc:	f00c f9c4 	bl	90027c88 <_ZdlPvj>
9001b900:	4620      	mov	r0, r4
9001b902:	bd10      	pop	{r4, pc}

9001b904 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001b904:	b510      	push	{r4, lr}
9001b906:	4604      	mov	r4, r0
9001b908:	2104      	movs	r1, #4
9001b90a:	f00c f9bd 	bl	90027c88 <_ZdlPvj>
9001b90e:	4620      	mov	r0, r4
9001b910:	bd10      	pop	{r4, pc}

9001b912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001b912:	b510      	push	{r4, lr}
9001b914:	4604      	mov	r4, r0
9001b916:	2104      	movs	r1, #4
9001b918:	f00c f9b6 	bl	90027c88 <_ZdlPvj>
9001b91c:	4620      	mov	r0, r4
9001b91e:	bd10      	pop	{r4, pc}

9001b920 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001b920:	b510      	push	{r4, lr}
9001b922:	4604      	mov	r4, r0
9001b924:	2104      	movs	r1, #4
9001b926:	f00c f9af 	bl	90027c88 <_ZdlPvj>
9001b92a:	4620      	mov	r0, r4
9001b92c:	bd10      	pop	{r4, pc}

9001b92e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001b92e:	b510      	push	{r4, lr}
9001b930:	4604      	mov	r4, r0
9001b932:	2104      	movs	r1, #4
9001b934:	f00c f9a8 	bl	90027c88 <_ZdlPvj>
9001b938:	4620      	mov	r0, r4
9001b93a:	bd10      	pop	{r4, pc}

9001b93c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001b93c:	b510      	push	{r4, lr}
9001b93e:	4604      	mov	r4, r0
9001b940:	2104      	movs	r1, #4
9001b942:	f00c f9a1 	bl	90027c88 <_ZdlPvj>
9001b946:	4620      	mov	r0, r4
9001b948:	bd10      	pop	{r4, pc}

9001b94a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001b94a:	b510      	push	{r4, lr}
9001b94c:	4604      	mov	r4, r0
9001b94e:	2104      	movs	r1, #4
9001b950:	f00c f99a 	bl	90027c88 <_ZdlPvj>
9001b954:	4620      	mov	r0, r4
9001b956:	bd10      	pop	{r4, pc}

9001b958 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001b958:	b510      	push	{r4, lr}
9001b95a:	4604      	mov	r4, r0
9001b95c:	2104      	movs	r1, #4
9001b95e:	f00c f993 	bl	90027c88 <_ZdlPvj>
9001b962:	4620      	mov	r0, r4
9001b964:	bd10      	pop	{r4, pc}

9001b966 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001b966:	b510      	push	{r4, lr}
9001b968:	4604      	mov	r4, r0
9001b96a:	2104      	movs	r1, #4
9001b96c:	f00c f98c 	bl	90027c88 <_ZdlPvj>
9001b970:	4620      	mov	r0, r4
9001b972:	bd10      	pop	{r4, pc}

9001b974 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001b974:	b510      	push	{r4, lr}
9001b976:	4604      	mov	r4, r0
9001b978:	2104      	movs	r1, #4
9001b97a:	f00c f985 	bl	90027c88 <_ZdlPvj>
9001b97e:	4620      	mov	r0, r4
9001b980:	bd10      	pop	{r4, pc}

9001b982 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001b982:	b510      	push	{r4, lr}
9001b984:	4604      	mov	r4, r0
9001b986:	2104      	movs	r1, #4
9001b988:	f00c f97e 	bl	90027c88 <_ZdlPvj>
9001b98c:	4620      	mov	r0, r4
9001b98e:	bd10      	pop	{r4, pc}

9001b990 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001b990:	b510      	push	{r4, lr}
9001b992:	4604      	mov	r4, r0
9001b994:	2104      	movs	r1, #4
9001b996:	f00c f977 	bl	90027c88 <_ZdlPvj>
9001b99a:	4620      	mov	r0, r4
9001b99c:	bd10      	pop	{r4, pc}

9001b99e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001b99e:	b510      	push	{r4, lr}
9001b9a0:	4604      	mov	r4, r0
9001b9a2:	2104      	movs	r1, #4
9001b9a4:	f00c f970 	bl	90027c88 <_ZdlPvj>
9001b9a8:	4620      	mov	r0, r4
9001b9aa:	bd10      	pop	{r4, pc}

9001b9ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001b9ac:	b510      	push	{r4, lr}
9001b9ae:	4604      	mov	r4, r0
9001b9b0:	2104      	movs	r1, #4
9001b9b2:	f00c f969 	bl	90027c88 <_ZdlPvj>
9001b9b6:	4620      	mov	r0, r4
9001b9b8:	bd10      	pop	{r4, pc}

9001b9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001b9ba:	b510      	push	{r4, lr}
9001b9bc:	4604      	mov	r4, r0
9001b9be:	2104      	movs	r1, #4
9001b9c0:	f00c f962 	bl	90027c88 <_ZdlPvj>
9001b9c4:	4620      	mov	r0, r4
9001b9c6:	bd10      	pop	{r4, pc}

9001b9c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001b9c8:	b510      	push	{r4, lr}
9001b9ca:	4604      	mov	r4, r0
9001b9cc:	2104      	movs	r1, #4
9001b9ce:	f00c f95b 	bl	90027c88 <_ZdlPvj>
9001b9d2:	4620      	mov	r0, r4
9001b9d4:	bd10      	pop	{r4, pc}

9001b9d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001b9d6:	b510      	push	{r4, lr}
9001b9d8:	4604      	mov	r4, r0
9001b9da:	2104      	movs	r1, #4
9001b9dc:	f00c f954 	bl	90027c88 <_ZdlPvj>
9001b9e0:	4620      	mov	r0, r4
9001b9e2:	bd10      	pop	{r4, pc}

9001b9e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001b9e4:	b510      	push	{r4, lr}
9001b9e6:	4604      	mov	r4, r0
9001b9e8:	2104      	movs	r1, #4
9001b9ea:	f00c f94d 	bl	90027c88 <_ZdlPvj>
9001b9ee:	4620      	mov	r0, r4
9001b9f0:	bd10      	pop	{r4, pc}

9001b9f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001b9f2:	b510      	push	{r4, lr}
9001b9f4:	4604      	mov	r4, r0
9001b9f6:	2104      	movs	r1, #4
9001b9f8:	f00c f946 	bl	90027c88 <_ZdlPvj>
9001b9fc:	4620      	mov	r0, r4
9001b9fe:	bd10      	pop	{r4, pc}

9001ba00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ba00:	b510      	push	{r4, lr}
9001ba02:	4604      	mov	r4, r0
9001ba04:	2104      	movs	r1, #4
9001ba06:	f00c f93f 	bl	90027c88 <_ZdlPvj>
9001ba0a:	4620      	mov	r0, r4
9001ba0c:	bd10      	pop	{r4, pc}

9001ba0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001ba0e:	b510      	push	{r4, lr}
9001ba10:	4604      	mov	r4, r0
9001ba12:	2104      	movs	r1, #4
9001ba14:	f00c f938 	bl	90027c88 <_ZdlPvj>
9001ba18:	4620      	mov	r0, r4
9001ba1a:	bd10      	pop	{r4, pc}

9001ba1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001ba1c:	b510      	push	{r4, lr}
9001ba1e:	4604      	mov	r4, r0
9001ba20:	2104      	movs	r1, #4
9001ba22:	f00c f931 	bl	90027c88 <_ZdlPvj>
9001ba26:	4620      	mov	r0, r4
9001ba28:	bd10      	pop	{r4, pc}

9001ba2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001ba2a:	b510      	push	{r4, lr}
9001ba2c:	4604      	mov	r4, r0
9001ba2e:	2104      	movs	r1, #4
9001ba30:	f00c f92a 	bl	90027c88 <_ZdlPvj>
9001ba34:	4620      	mov	r0, r4
9001ba36:	bd10      	pop	{r4, pc}

9001ba38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001ba38:	b510      	push	{r4, lr}
9001ba3a:	4604      	mov	r4, r0
9001ba3c:	2104      	movs	r1, #4
9001ba3e:	f00c f923 	bl	90027c88 <_ZdlPvj>
9001ba42:	4620      	mov	r0, r4
9001ba44:	bd10      	pop	{r4, pc}
	...

9001ba48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001ba48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ba4c:	b08f      	sub	sp, #60	@ 0x3c
9001ba4e:	4616      	mov	r6, r2
9001ba50:	4682      	mov	sl, r0
9001ba52:	460d      	mov	r5, r1
9001ba54:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001ba58:	9205      	str	r2, [sp, #20]
9001ba5a:	2a00      	cmp	r2, #0
9001ba5c:	f000 82b7 	beq.w	9001bfce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001ba60:	6830      	ldr	r0, [r6, #0]
9001ba62:	ac0a      	add	r4, sp, #40	@ 0x28
9001ba64:	6871      	ldr	r1, [r6, #4]
9001ba66:	c403      	stmia	r4!, {r0, r1}
9001ba68:	6818      	ldr	r0, [r3, #0]
9001ba6a:	ac0c      	add	r4, sp, #48	@ 0x30
9001ba6c:	6859      	ldr	r1, [r3, #4]
9001ba6e:	c403      	stmia	r4!, {r0, r1}
9001ba70:	a80a      	add	r0, sp, #40	@ 0x28
9001ba72:	f7f9 faaf 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ba76:	4631      	mov	r1, r6
9001ba78:	a80c      	add	r0, sp, #48	@ 0x30
9001ba7a:	f7f9 fad3 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ba7e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001ba82:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001ba86:	bfdb      	ittet	le
9001ba88:	b293      	uxthle	r3, r2
9001ba8a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001ba8e:	2301      	movgt	r3, #1
9001ba90:	fb91 f3f3 	sdivle	r3, r1, r3
9001ba94:	9300      	str	r3, [sp, #0]
9001ba96:	f105 0308 	add.w	r3, r5, #8
9001ba9a:	9900      	ldr	r1, [sp, #0]
9001ba9c:	9306      	str	r3, [sp, #24]
9001ba9e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001baa2:	440b      	add	r3, r1
9001baa4:	3b01      	subs	r3, #1
9001baa6:	fb93 f3f1 	sdiv	r3, r3, r1
9001baaa:	3b01      	subs	r3, #1
9001baac:	9906      	ldr	r1, [sp, #24]
9001baae:	b29b      	uxth	r3, r3
9001bab0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001bab4:	9900      	ldr	r1, [sp, #0]
9001bab6:	9307      	str	r3, [sp, #28]
9001bab8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001babc:	fb93 f0f1 	sdiv	r0, r3, r1
9001bac0:	b284      	uxth	r4, r0
9001bac2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001bac6:	9402      	str	r4, [sp, #8]
9001bac8:	9d02      	ldr	r5, [sp, #8]
9001baca:	9c00      	ldr	r4, [sp, #0]
9001bacc:	fb05 3414 	mls	r4, r5, r4, r3
9001bad0:	fb14 f402 	smulbb	r4, r4, r2
9001bad4:	440c      	add	r4, r1
9001bad6:	b2a4      	uxth	r4, r4
9001bad8:	2d00      	cmp	r5, #0
9001bada:	d06c      	beq.n	9001bbb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001badc:	1e6a      	subs	r2, r5, #1
9001bade:	9806      	ldr	r0, [sp, #24]
9001bae0:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001bae4:	9a07      	ldr	r2, [sp, #28]
9001bae6:	ba36      	rev	r6, r6
9001bae8:	4416      	add	r6, r2
9001baea:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001baee:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001baf2:	4411      	add	r1, r2
9001baf4:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001baf8:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001be28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001bafc:	4413      	add	r3, r2
9001bafe:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001bb02:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001bb06:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001bb0a:	9301      	str	r3, [sp, #4]
9001bb0c:	4bc4      	ldr	r3, [pc, #784]	@ (9001be20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001bb0e:	6818      	ldr	r0, [r3, #0]
9001bb10:	6803      	ldr	r3, [r0, #0]
9001bb12:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001bb14:	4798      	blx	r3
9001bb16:	4bc3      	ldr	r3, [pc, #780]	@ (9001be24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001bb18:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001bb1c:	881b      	ldrh	r3, [r3, #0]
9001bb1e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001bb22:	fb03 2808 	mla	r8, r3, r8, r2
9001bb26:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001bb2a:	436b      	muls	r3, r5
9001bb2c:	2500      	movs	r5, #0
9001bb2e:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001bb32:	4629      	mov	r1, r5
9001bb34:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001bb38:	9309      	str	r3, [sp, #36]	@ 0x24
9001bb3a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001bb3e:	fb94 f3f3 	sdiv	r3, r4, r3
9001bb42:	9304      	str	r3, [sp, #16]
9001bb44:	f10a 0304 	add.w	r3, sl, #4
9001bb48:	4618      	mov	r0, r3
9001bb4a:	9308      	str	r3, [sp, #32]
9001bb4c:	f00c feb0 	bl	900288b0 <memset>
9001bb50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001bb52:	4543      	cmp	r3, r8
9001bb54:	f240 8236 	bls.w	9001bfc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001bb58:	2203      	movs	r2, #3
9001bb5a:	2107      	movs	r1, #7
9001bb5c:	200b      	movs	r0, #11
9001bb5e:	2c00      	cmp	r4, #0
9001bb60:	f000 8131 	beq.w	9001bdc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001bb64:	7833      	ldrb	r3, [r6, #0]
9001bb66:	b2db      	uxtb	r3, r3
9001bb68:	2bfe      	cmp	r3, #254	@ 0xfe
9001bb6a:	d126      	bne.n	9001bbba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001bb6c:	f896 e001 	ldrb.w	lr, [r6, #1]
9001bb70:	3c01      	subs	r4, #1
9001bb72:	f896 c002 	ldrb.w	ip, [r6, #2]
9001bb76:	1d37      	adds	r7, r6, #4
9001bb78:	fa5f fe8e 	uxtb.w	lr, lr
9001bb7c:	f896 b003 	ldrb.w	fp, [r6, #3]
9001bb80:	fa5f fc8c 	uxtb.w	ip, ip
9001bb84:	f36e 0507 	bfi	r5, lr, #0, #8
9001bb88:	fa5f fb8b 	uxtb.w	fp, fp
9001bb8c:	b2a4      	uxth	r4, r4
9001bb8e:	f36c 250f 	bfi	r5, ip, #8, #8
9001bb92:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001bb96:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001bb9a:	f36b 4517 	bfi	r5, fp, #16, #8
9001bb9e:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001bba2:	0e2b      	lsrs	r3, r5, #24
9001bba4:	fb10 c303 	smlabb	r3, r0, r3, ip
9001bba8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001bbac:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001bbb0:	605d      	str	r5, [r3, #4]
9001bbb2:	463e      	mov	r6, r7
9001bbb4:	e7d3      	b.n	9001bb5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001bbb6:	9e07      	ldr	r6, [sp, #28]
9001bbb8:	e797      	b.n	9001baea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001bbba:	2bff      	cmp	r3, #255	@ 0xff
9001bbbc:	d127      	bne.n	9001bc0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001bbbe:	f896 c001 	ldrb.w	ip, [r6, #1]
9001bbc2:	3c01      	subs	r4, #1
9001bbc4:	78b3      	ldrb	r3, [r6, #2]
9001bbc6:	1d77      	adds	r7, r6, #5
9001bbc8:	fa5f fc8c 	uxtb.w	ip, ip
9001bbcc:	f896 e003 	ldrb.w	lr, [r6, #3]
9001bbd0:	b2db      	uxtb	r3, r3
9001bbd2:	f896 b004 	ldrb.w	fp, [r6, #4]
9001bbd6:	f36c 0507 	bfi	r5, ip, #0, #8
9001bbda:	fa5f fe8e 	uxtb.w	lr, lr
9001bbde:	fa5f fb8b 	uxtb.w	fp, fp
9001bbe2:	f363 250f 	bfi	r5, r3, #8, #8
9001bbe6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001bbea:	b2a4      	uxth	r4, r4
9001bbec:	fb12 330e 	smlabb	r3, r2, lr, r3
9001bbf0:	f36e 4517 	bfi	r5, lr, #16, #8
9001bbf4:	fb11 330c 	smlabb	r3, r1, ip, r3
9001bbf8:	f36b 651f 	bfi	r5, fp, #24, #8
9001bbfc:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001bc00:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001bc04:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001bc08:	f8cb 5004 	str.w	r5, [fp, #4]
9001bc0c:	e7d1      	b.n	9001bbb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001bc0e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001bc12:	f106 0701 	add.w	r7, r6, #1
9001bc16:	d107      	bne.n	9001bc28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001bc18:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001bc1c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001bc20:	685d      	ldr	r5, [r3, #4]
9001bc22:	3c01      	subs	r4, #1
9001bc24:	b2a4      	uxth	r4, r4
9001bc26:	e7c4      	b.n	9001bbb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001bc28:	f1bc 0f01 	cmp.w	ip, #1
9001bc2c:	d12c      	bne.n	9001bc88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001bc2e:	f003 0e03 	and.w	lr, r3, #3
9001bc32:	f003 0c0c 	and.w	ip, r3, #12
9001bc36:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001bc3a:	f1ae 0e02 	sub.w	lr, lr, #2
9001bc3e:	f1ac 0c08 	sub.w	ip, ip, #8
9001bc42:	3b02      	subs	r3, #2
9001bc44:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001bc48:	fa5f fe8e 	uxtb.w	lr, lr
9001bc4c:	f36e 0507 	bfi	r5, lr, #0, #8
9001bc50:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001bc54:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001bc58:	f36c 250f 	bfi	r5, ip, #8, #8
9001bc5c:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001bc60:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001bc64:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001bc68:	b2db      	uxtb	r3, r3
9001bc6a:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001bc6e:	f363 4517 	bfi	r5, r3, #16, #8
9001bc72:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001bc76:	0e2e      	lsrs	r6, r5, #24
9001bc78:	fb10 c606 	smlabb	r6, r0, r6, ip
9001bc7c:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001bc80:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001bc84:	6075      	str	r5, [r6, #4]
9001bc86:	e7cc      	b.n	9001bc22 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001bc88:	f1bc 0f02 	cmp.w	ip, #2
9001bc8c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001bc90:	d12a      	bne.n	9001bce8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001bc92:	1cb7      	adds	r7, r6, #2
9001bc94:	7876      	ldrb	r6, [r6, #1]
9001bc96:	3b20      	subs	r3, #32
9001bc98:	b2f6      	uxtb	r6, r6
9001bc9a:	f006 0c0f 	and.w	ip, r6, #15
9001bc9e:	1136      	asrs	r6, r6, #4
9001bca0:	f1ac 0c08 	sub.w	ip, ip, #8
9001bca4:	3e08      	subs	r6, #8
9001bca6:	449c      	add	ip, r3
9001bca8:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001bcac:	fa5f fc8c 	uxtb.w	ip, ip
9001bcb0:	f36c 0507 	bfi	r5, ip, #0, #8
9001bcb4:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001bcb8:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001bcbc:	4433      	add	r3, r6
9001bcbe:	fa5f fe8e 	uxtb.w	lr, lr
9001bcc2:	f36e 250f 	bfi	r5, lr, #8, #8
9001bcc6:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001bcca:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001bcce:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001bcd2:	b2db      	uxtb	r3, r3
9001bcd4:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001bcd8:	f363 4517 	bfi	r5, r3, #16, #8
9001bcdc:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001bce0:	0e2e      	lsrs	r6, r5, #24
9001bce2:	fb10 e606 	smlabb	r6, r0, r6, lr
9001bce6:	e7c9      	b.n	9001bc7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001bce8:	1c5e      	adds	r6, r3, #1
9001bcea:	42a6      	cmp	r6, r4
9001bcec:	dd4e      	ble.n	9001bd8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001bcee:	1b36      	subs	r6, r6, r4
9001bcf0:	2e00      	cmp	r6, #0
9001bcf2:	dc4e      	bgt.n	9001bd92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001bcf4:	f8dd b004 	ldr.w	fp, [sp, #4]
9001bcf8:	2400      	movs	r4, #0
9001bcfa:	f1bb 0f00 	cmp.w	fp, #0
9001bcfe:	f340 8122 	ble.w	9001bf46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001bd02:	1c7b      	adds	r3, r7, #1
9001bd04:	9303      	str	r3, [sp, #12]
9001bd06:	783b      	ldrb	r3, [r7, #0]
9001bd08:	b2db      	uxtb	r3, r3
9001bd0a:	2bfe      	cmp	r3, #254	@ 0xfe
9001bd0c:	d160      	bne.n	9001bdd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001bd0e:	7879      	ldrb	r1, [r7, #1]
9001bd10:	1d3b      	adds	r3, r7, #4
9001bd12:	78ba      	ldrb	r2, [r7, #2]
9001bd14:	b2c9      	uxtb	r1, r1
9001bd16:	78f8      	ldrb	r0, [r7, #3]
9001bd18:	b2d2      	uxtb	r2, r2
9001bd1a:	9303      	str	r3, [sp, #12]
9001bd1c:	f361 0507 	bfi	r5, r1, #0, #8
9001bd20:	b2c0      	uxtb	r0, r0
9001bd22:	2303      	movs	r3, #3
9001bd24:	f362 250f 	bfi	r5, r2, #8, #8
9001bd28:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001bd2c:	fb13 2200 	smlabb	r2, r3, r0, r2
9001bd30:	f360 4517 	bfi	r5, r0, #16, #8
9001bd34:	2307      	movs	r3, #7
9001bd36:	0e2e      	lsrs	r6, r5, #24
9001bd38:	fb13 2101 	smlabb	r1, r3, r1, r2
9001bd3c:	230b      	movs	r3, #11
9001bd3e:	fb13 1306 	smlabb	r3, r3, r6, r1
9001bd42:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001bd46:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001bd4a:	605d      	str	r5, [r3, #4]
9001bd4c:	2601      	movs	r6, #1
9001bd4e:	4637      	mov	r7, r6
9001bd50:	0e2b      	lsrs	r3, r5, #24
9001bd52:	ebab 0b07 	sub.w	fp, fp, r7
9001bd56:	eba6 0607 	sub.w	r6, r6, r7
9001bd5a:	f040 80d3 	bne.w	9001bf04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001bd5e:	b18c      	cbz	r4, 9001bd84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001bd60:	4648      	mov	r0, r9
9001bd62:	00a1      	lsls	r1, r4, #2
9001bd64:	f7e6 fdd4 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001bd68:	9b05      	ldr	r3, [sp, #20]
9001bd6a:	4622      	mov	r2, r4
9001bd6c:	4649      	mov	r1, r9
9001bd6e:	4640      	mov	r0, r8
9001bd70:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001bd74:	f7e6 fe3a 	bl	900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001bd78:	4b2b      	ldr	r3, [pc, #172]	@ (9001be28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001bd7a:	4a2c      	ldr	r2, [pc, #176]	@ (9001be2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001bd7c:	4599      	cmp	r9, r3
9001bd7e:	bf08      	it	eq
9001bd80:	4613      	moveq	r3, r2
9001bd82:	4699      	mov	r9, r3
9001bd84:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001bd88:	2400      	movs	r4, #0
9001bd8a:	e0da      	b.n	9001bf42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001bd8c:	1ba6      	subs	r6, r4, r6
9001bd8e:	b2b4      	uxth	r4, r6
9001bd90:	e70f      	b.n	9001bbb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001bd92:	9b01      	ldr	r3, [sp, #4]
9001bd94:	9a01      	ldr	r2, [sp, #4]
9001bd96:	42b3      	cmp	r3, r6
9001bd98:	bfa8      	it	ge
9001bd9a:	4633      	movge	r3, r6
9001bd9c:	0e2c      	lsrs	r4, r5, #24
9001bd9e:	eba2 0b03 	sub.w	fp, r2, r3
9001bda2:	eba6 0603 	sub.w	r6, r6, r3
9001bda6:	d00b      	beq.n	9001bdc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001bda8:	f1a9 0104 	sub.w	r1, r9, #4
9001bdac:	461a      	mov	r2, r3
9001bdae:	2a00      	cmp	r2, #0
9001bdb0:	dc02      	bgt.n	9001bdb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001bdb2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001bdb6:	e7a0      	b.n	9001bcfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001bdb8:	f841 5f04 	str.w	r5, [r1, #4]!
9001bdbc:	3a01      	subs	r2, #1
9001bdbe:	e7f6      	b.n	9001bdae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001bdc0:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001bdc4:	e799      	b.n	9001bcfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001bdc6:	4637      	mov	r7, r6
9001bdc8:	f8dd b004 	ldr.w	fp, [sp, #4]
9001bdcc:	4626      	mov	r6, r4
9001bdce:	e794      	b.n	9001bcfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001bdd0:	2bff      	cmp	r3, #255	@ 0xff
9001bdd2:	d11d      	bne.n	9001be10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001bdd4:	7878      	ldrb	r0, [r7, #1]
9001bdd6:	1d7b      	adds	r3, r7, #5
9001bdd8:	78ba      	ldrb	r2, [r7, #2]
9001bdda:	b2c0      	uxtb	r0, r0
9001bddc:	78fe      	ldrb	r6, [r7, #3]
9001bdde:	b2d2      	uxtb	r2, r2
9001bde0:	9303      	str	r3, [sp, #12]
9001bde2:	f360 0507 	bfi	r5, r0, #0, #8
9001bde6:	793b      	ldrb	r3, [r7, #4]
9001bde8:	b2f6      	uxtb	r6, r6
9001bdea:	b2d9      	uxtb	r1, r3
9001bdec:	f362 250f 	bfi	r5, r2, #8, #8
9001bdf0:	2303      	movs	r3, #3
9001bdf2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001bdf6:	f366 4517 	bfi	r5, r6, #16, #8
9001bdfa:	fb13 2206 	smlabb	r2, r3, r6, r2
9001bdfe:	2307      	movs	r3, #7
9001be00:	f361 651f 	bfi	r5, r1, #24, #8
9001be04:	fb13 2000 	smlabb	r0, r3, r0, r2
9001be08:	230b      	movs	r3, #11
9001be0a:	fb13 0301 	smlabb	r3, r3, r1, r0
9001be0e:	e798      	b.n	9001bd42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001be10:	119e      	asrs	r6, r3, #6
9001be12:	d10d      	bne.n	9001be30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001be14:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001be18:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001be1c:	685d      	ldr	r5, [r3, #4]
9001be1e:	e795      	b.n	9001bd4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001be20:	240218b4 	.word	0x240218b4
9001be24:	240218ae 	.word	0x240218ae
9001be28:	24000180 	.word	0x24000180
9001be2c:	24000280 	.word	0x24000280
9001be30:	2e01      	cmp	r6, #1
9001be32:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001be36:	d12b      	bne.n	9001be90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001be38:	f003 0003 	and.w	r0, r3, #3
9001be3c:	f003 020c 	and.w	r2, r3, #12
9001be40:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001be44:	3802      	subs	r0, #2
9001be46:	3a08      	subs	r2, #8
9001be48:	1e9f      	subs	r7, r3, #2
9001be4a:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001be4e:	b2c0      	uxtb	r0, r0
9001be50:	f360 0507 	bfi	r5, r0, #0, #8
9001be54:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001be58:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001be5c:	f362 250f 	bfi	r5, r2, #8, #8
9001be60:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001be64:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001be68:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001be6c:	2703      	movs	r7, #3
9001be6e:	b2db      	uxtb	r3, r3
9001be70:	fb17 2203 	smlabb	r2, r7, r3, r2
9001be74:	2707      	movs	r7, #7
9001be76:	f363 4517 	bfi	r5, r3, #16, #8
9001be7a:	230b      	movs	r3, #11
9001be7c:	fb17 2000 	smlabb	r0, r7, r0, r2
9001be80:	fb13 0101 	smlabb	r1, r3, r1, r0
9001be84:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001be88:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001be8c:	604d      	str	r5, [r1, #4]
9001be8e:	e75e      	b.n	9001bd4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001be90:	2e02      	cmp	r6, #2
9001be92:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001be96:	d12f      	bne.n	9001bef8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001be98:	7878      	ldrb	r0, [r7, #1]
9001be9a:	1cba      	adds	r2, r7, #2
9001be9c:	3b20      	subs	r3, #32
9001be9e:	b2c0      	uxtb	r0, r0
9001bea0:	9203      	str	r2, [sp, #12]
9001bea2:	f000 020f 	and.w	r2, r0, #15
9001bea6:	1100      	asrs	r0, r0, #4
9001bea8:	3a08      	subs	r2, #8
9001beaa:	3808      	subs	r0, #8
9001beac:	441a      	add	r2, r3
9001beae:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001beb2:	b2d2      	uxtb	r2, r2
9001beb4:	f362 0507 	bfi	r5, r2, #0, #8
9001beb8:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001bebc:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001bec0:	4403      	add	r3, r0
9001bec2:	b2f6      	uxtb	r6, r6
9001bec4:	f366 250f 	bfi	r5, r6, #8, #8
9001bec8:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001becc:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001bed0:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001bed4:	2003      	movs	r0, #3
9001bed6:	b2db      	uxtb	r3, r3
9001bed8:	fb10 6603 	smlabb	r6, r0, r3, r6
9001bedc:	2007      	movs	r0, #7
9001bede:	f363 4517 	bfi	r5, r3, #16, #8
9001bee2:	230b      	movs	r3, #11
9001bee4:	fb10 6202 	smlabb	r2, r0, r2, r6
9001bee8:	fb13 2101 	smlabb	r1, r3, r1, r2
9001beec:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001bef0:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001bef4:	604d      	str	r5, [r1, #4]
9001bef6:	e729      	b.n	9001bd4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001bef8:	1c5e      	adds	r6, r3, #1
9001befa:	465f      	mov	r7, fp
9001befc:	45b3      	cmp	fp, r6
9001befe:	bfa8      	it	ge
9001bf00:	4637      	movge	r7, r6
9001bf02:	e725      	b.n	9001bd50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001bf04:	193b      	adds	r3, r7, r4
9001bf06:	2b40      	cmp	r3, #64	@ 0x40
9001bf08:	dd13      	ble.n	9001bf32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001bf0a:	4648      	mov	r0, r9
9001bf0c:	00a1      	lsls	r1, r4, #2
9001bf0e:	f7e6 fcff 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001bf12:	4649      	mov	r1, r9
9001bf14:	9b05      	ldr	r3, [sp, #20]
9001bf16:	4622      	mov	r2, r4
9001bf18:	4640      	mov	r0, r8
9001bf1a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001bf1e:	f7e6 fd65 	bl	900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001bf22:	4b2c      	ldr	r3, [pc, #176]	@ (9001bfd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001bf24:	2400      	movs	r4, #0
9001bf26:	4599      	cmp	r9, r3
9001bf28:	bf0c      	ite	eq
9001bf2a:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001bfe0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001bf2e:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001bfd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001bf32:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001bf36:	463b      	mov	r3, r7
9001bf38:	3b01      	subs	r3, #1
9001bf3a:	f842 5b04 	str.w	r5, [r2], #4
9001bf3e:	d1fb      	bne.n	9001bf38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001bf40:	443c      	add	r4, r7
9001bf42:	9f03      	ldr	r7, [sp, #12]
9001bf44:	e6d9      	b.n	9001bcfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001bf46:	b15c      	cbz	r4, 9001bf60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001bf48:	00a1      	lsls	r1, r4, #2
9001bf4a:	4648      	mov	r0, r9
9001bf4c:	f7e6 fce0 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001bf50:	4640      	mov	r0, r8
9001bf52:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001bf56:	9b05      	ldr	r3, [sp, #20]
9001bf58:	4622      	mov	r2, r4
9001bf5a:	4649      	mov	r1, r9
9001bf5c:	f7e6 fd46 	bl	900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001bf60:	4b1d      	ldr	r3, [pc, #116]	@ (9001bfd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001bf62:	9a01      	ldr	r2, [sp, #4]
9001bf64:	881b      	ldrh	r3, [r3, #0]
9001bf66:	1a9b      	subs	r3, r3, r2
9001bf68:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001bf6c:	9b04      	ldr	r3, [sp, #16]
9001bf6e:	3301      	adds	r3, #1
9001bf70:	9304      	str	r3, [sp, #16]
9001bf72:	9a04      	ldr	r2, [sp, #16]
9001bf74:	9b00      	ldr	r3, [sp, #0]
9001bf76:	4293      	cmp	r3, r2
9001bf78:	d11d      	bne.n	9001bfb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001bf7a:	9b02      	ldr	r3, [sp, #8]
9001bf7c:	2500      	movs	r5, #0
9001bf7e:	9a02      	ldr	r2, [sp, #8]
9001bf80:	f103 0b01 	add.w	fp, r3, #1
9001bf84:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001bf88:	9b06      	ldr	r3, [sp, #24]
9001bf8a:	4629      	mov	r1, r5
9001bf8c:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001bf90:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001bf94:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001bf98:	1ba4      	subs	r4, r4, r6
9001bf9a:	9b07      	ldr	r3, [sp, #28]
9001bf9c:	ba3f      	rev	r7, r7
9001bf9e:	9808      	ldr	r0, [sp, #32]
9001bfa0:	b2a4      	uxth	r4, r4
9001bfa2:	441f      	add	r7, r3
9001bfa4:	f00c fc84 	bl	900288b0 <memset>
9001bfa8:	f8cd b008 	str.w	fp, [sp, #8]
9001bfac:	9504      	str	r5, [sp, #16]
9001bfae:	f7e6 fca5 	bl	900028fc <_ZN8touchgfx5paint8tearDownEv>
9001bfb2:	463e      	mov	r6, r7
9001bfb4:	e5cc      	b.n	9001bb50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001bfb6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001bfba:	9b01      	ldr	r3, [sp, #4]
9001bfbc:	1ae4      	subs	r4, r4, r3
9001bfbe:	1ba4      	subs	r4, r4, r6
9001bfc0:	b2a4      	uxth	r4, r4
9001bfc2:	e7f4      	b.n	9001bfae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001bfc4:	4b05      	ldr	r3, [pc, #20]	@ (9001bfdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001bfc6:	6818      	ldr	r0, [r3, #0]
9001bfc8:	6803      	ldr	r3, [r0, #0]
9001bfca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001bfcc:	4798      	blx	r3
9001bfce:	b00f      	add	sp, #60	@ 0x3c
9001bfd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bfd4:	24000180 	.word	0x24000180
9001bfd8:	240218ae 	.word	0x240218ae
9001bfdc:	240218b4 	.word	0x240218b4
9001bfe0:	24000280 	.word	0x24000280

9001bfe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001bfe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bfe8:	b08f      	sub	sp, #60	@ 0x3c
9001bfea:	461c      	mov	r4, r3
9001bfec:	9205      	str	r2, [sp, #20]
9001bfee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001bff2:	9100      	str	r1, [sp, #0]
9001bff4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001bff6:	9201      	str	r2, [sp, #4]
9001bff8:	2a00      	cmp	r2, #0
9001bffa:	f000 8116 	beq.w	9001c22a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001bffe:	6820      	ldr	r0, [r4, #0]
9001c000:	aa0a      	add	r2, sp, #40	@ 0x28
9001c002:	6861      	ldr	r1, [r4, #4]
9001c004:	c203      	stmia	r2!, {r0, r1}
9001c006:	6818      	ldr	r0, [r3, #0]
9001c008:	aa0c      	add	r2, sp, #48	@ 0x30
9001c00a:	6859      	ldr	r1, [r3, #4]
9001c00c:	c203      	stmia	r2!, {r0, r1}
9001c00e:	a80a      	add	r0, sp, #40	@ 0x28
9001c010:	f7f8 ffe0 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c014:	4621      	mov	r1, r4
9001c016:	a80c      	add	r0, sp, #48	@ 0x30
9001c018:	f7f9 f804 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c01c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001c020:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001c024:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001c028:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001c02c:	bfdb      	ittet	le
9001c02e:	b2b3      	uxthle	r3, r6
9001c030:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001c034:	2301      	movgt	r3, #1
9001c036:	fb92 f3f3 	sdivle	r3, r2, r3
9001c03a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001c03e:	441d      	add	r5, r3
9001c040:	fb92 f1f3 	sdiv	r1, r2, r3
9001c044:	fa1f fc81 	uxth.w	ip, r1
9001c048:	3d01      	subs	r5, #1
9001c04a:	fb0c 2413 	mls	r4, ip, r3, r2
9001c04e:	4661      	mov	r1, ip
9001c050:	fb14 f406 	smulbb	r4, r4, r6
9001c054:	4404      	add	r4, r0
9001c056:	fb95 f5f3 	sdiv	r5, r5, r3
9001c05a:	b2a4      	uxth	r4, r4
9001c05c:	b131      	cbz	r1, 9001c06c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001c05e:	9b05      	ldr	r3, [sp, #20]
9001c060:	9900      	ldr	r1, [sp, #0]
9001c062:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001c066:	ba1b      	rev	r3, r3
9001c068:	4419      	add	r1, r3
9001c06a:	9100      	str	r1, [sp, #0]
9001c06c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001c070:	b2ad      	uxth	r5, r5
9001c072:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001c076:	4418      	add	r0, r3
9001c078:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001c07c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001c080:	00ad      	lsls	r5, r5, #2
9001c082:	441a      	add	r2, r3
9001c084:	4b6a      	ldr	r3, [pc, #424]	@ (9001c230 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001c086:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001c08a:	6818      	ldr	r0, [r3, #0]
9001c08c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001c090:	6803      	ldr	r3, [r0, #0]
9001c092:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001c094:	4798      	blx	r3
9001c096:	4967      	ldr	r1, [pc, #412]	@ (9001c234 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001c098:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001c09c:	2c00      	cmp	r4, #0
9001c09e:	880b      	ldrh	r3, [r1, #0]
9001c0a0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001c0a4:	bf0c      	ite	eq
9001c0a6:	46c6      	moveq	lr, r8
9001c0a8:	f04f 0e00 	movne.w	lr, #0
9001c0ac:	9109      	str	r1, [sp, #36]	@ 0x24
9001c0ae:	fb03 c202 	mla	r2, r3, r2, ip
9001c0b2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001c0b6:	4373      	muls	r3, r6
9001c0b8:	fa1f fe8e 	uxth.w	lr, lr
9001c0bc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c0c0:	9103      	str	r1, [sp, #12]
9001c0c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c0c6:	9306      	str	r3, [sp, #24]
9001c0c8:	1d2b      	adds	r3, r5, #4
9001c0ca:	9307      	str	r3, [sp, #28]
9001c0cc:	9b01      	ldr	r3, [sp, #4]
9001c0ce:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001c0d2:	2300      	movs	r3, #0
9001c0d4:	b292      	uxth	r2, r2
9001c0d6:	9302      	str	r3, [sp, #8]
9001c0d8:	9204      	str	r2, [sp, #16]
9001c0da:	9a06      	ldr	r2, [sp, #24]
9001c0dc:	4282      	cmp	r2, r0
9001c0de:	f240 809f 	bls.w	9001c220 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001c0e2:	b963      	cbnz	r3, 9001c0fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001c0e4:	9b00      	ldr	r3, [sp, #0]
9001c0e6:	781a      	ldrb	r2, [r3, #0]
9001c0e8:	0993      	lsrs	r3, r2, #6
9001c0ea:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001c0ee:	9202      	str	r2, [sp, #8]
9001c0f0:	1e5a      	subs	r2, r3, #1
9001c0f2:	2a02      	cmp	r2, #2
9001c0f4:	d815      	bhi.n	9001c122 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001c0f6:	9a00      	ldr	r2, [sp, #0]
9001c0f8:	b29b      	uxth	r3, r3
9001c0fa:	3201      	adds	r2, #1
9001c0fc:	9200      	str	r2, [sp, #0]
9001c0fe:	b1b4      	cbz	r4, 9001c12e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001c100:	429c      	cmp	r4, r3
9001c102:	bf91      	iteee	ls
9001c104:	1b1c      	subls	r4, r3, r4
9001c106:	1ae4      	subhi	r4, r4, r3
9001c108:	4671      	movhi	r1, lr
9001c10a:	f04f 0a00 	movhi.w	sl, #0
9001c10e:	bf9b      	ittet	ls
9001c110:	fa1f fa84 	uxthls.w	sl, r4
9001c114:	2400      	movls	r4, #0
9001c116:	b2a4      	uxthhi	r4, r4
9001c118:	fa1f f188 	uxthls.w	r1, r8
9001c11c:	4653      	mov	r3, sl
9001c11e:	468e      	mov	lr, r1
9001c120:	e7db      	b.n	9001c0da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001c122:	9a00      	ldr	r2, [sp, #0]
9001c124:	9b00      	ldr	r3, [sp, #0]
9001c126:	3202      	adds	r2, #2
9001c128:	785b      	ldrb	r3, [r3, #1]
9001c12a:	9200      	str	r2, [sp, #0]
9001c12c:	e7e7      	b.n	9001c0fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001c12e:	2202      	movs	r2, #2
9001c130:	9907      	ldr	r1, [sp, #28]
9001c132:	4573      	cmp	r3, lr
9001c134:	4615      	mov	r5, r2
9001c136:	9a02      	ldr	r2, [sp, #8]
9001c138:	bf24      	itt	cs
9001c13a:	eba3 0a0e 	subcs.w	sl, r3, lr
9001c13e:	46f1      	movcs	r9, lr
9001c140:	fb15 1202 	smlabb	r2, r5, r2, r1
9001c144:	9905      	ldr	r1, [sp, #20]
9001c146:	bf34      	ite	cc
9001c148:	4699      	movcc	r9, r3
9001c14a:	fa1f fa8a 	uxthcs.w	sl, sl
9001c14e:	f831 c002 	ldrh.w	ip, [r1, r2]
9001c152:	bf38      	it	cc
9001c154:	ebae 0103 	subcc.w	r1, lr, r3
9001c158:	9a01      	ldr	r2, [sp, #4]
9001c15a:	bf2e      	itee	cs
9001c15c:	4621      	movcs	r1, r4
9001c15e:	b289      	uxthcc	r1, r1
9001c160:	46a2      	movcc	sl, r4
9001c162:	2aff      	cmp	r2, #255	@ 0xff
9001c164:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001c168:	d105      	bne.n	9001c176 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001c16a:	4481      	add	r9, r0
9001c16c:	4581      	cmp	r9, r0
9001c16e:	d045      	beq.n	9001c1fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001c170:	f820 cb02 	strh.w	ip, [r0], #2
9001c174:	e7fa      	b.n	9001c16c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001c176:	ea4f 222c 	mov.w	r2, ip, asr #8
9001c17a:	9d03      	ldr	r5, [sp, #12]
9001c17c:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001c180:	4481      	add	r9, r0
9001c182:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c186:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001c18a:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001c18e:	fa5f fc8c 	uxtb.w	ip, ip
9001c192:	436a      	muls	r2, r5
9001c194:	fb0b fb05 	mul.w	fp, fp, r5
9001c198:	fb0c fc05 	mul.w	ip, ip, r5
9001c19c:	9208      	str	r2, [sp, #32]
9001c19e:	4581      	cmp	r9, r0
9001c1a0:	d02c      	beq.n	9001c1fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001c1a2:	8802      	ldrh	r2, [r0, #0]
9001c1a4:	9d04      	ldr	r5, [sp, #16]
9001c1a6:	1216      	asrs	r6, r2, #8
9001c1a8:	9f04      	ldr	r7, [sp, #16]
9001c1aa:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c1ae:	fb16 f605 	smulbb	r6, r6, r5
9001c1b2:	9d08      	ldr	r5, [sp, #32]
9001c1b4:	442e      	add	r6, r5
9001c1b6:	10d5      	asrs	r5, r2, #3
9001c1b8:	00d2      	lsls	r2, r2, #3
9001c1ba:	b2b6      	uxth	r6, r6
9001c1bc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001c1c0:	b2d2      	uxtb	r2, r2
9001c1c2:	fb15 f507 	smulbb	r5, r5, r7
9001c1c6:	fb12 f207 	smulbb	r2, r2, r7
9001c1ca:	1c77      	adds	r7, r6, #1
9001c1cc:	445d      	add	r5, fp
9001c1ce:	4462      	add	r2, ip
9001c1d0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001c1d4:	b2ad      	uxth	r5, r5
9001c1d6:	b292      	uxth	r2, r2
9001c1d8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001c1dc:	1c57      	adds	r7, r2, #1
9001c1de:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001c1e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c1e6:	4316      	orrs	r6, r2
9001c1e8:	1c6a      	adds	r2, r5, #1
9001c1ea:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001c1ee:	096d      	lsrs	r5, r5, #5
9001c1f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c1f4:	432e      	orrs	r6, r5
9001c1f6:	f820 6b02 	strh.w	r6, [r0], #2
9001c1fa:	e7d0      	b.n	9001c19e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001c1fc:	4573      	cmp	r3, lr
9001c1fe:	d38d      	bcc.n	9001c11c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001c200:	fa1f f188 	uxth.w	r1, r8
9001c204:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001c208:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001c20a:	1a64      	subs	r4, r4, r1
9001c20c:	881b      	ldrh	r3, [r3, #0]
9001c20e:	b2a4      	uxth	r4, r4
9001c210:	eba3 0308 	sub.w	r3, r3, r8
9001c214:	2c00      	cmp	r4, #0
9001c216:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c21a:	bf18      	it	ne
9001c21c:	2100      	movne	r1, #0
9001c21e:	e77d      	b.n	9001c11c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001c220:	4b03      	ldr	r3, [pc, #12]	@ (9001c230 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001c222:	6818      	ldr	r0, [r3, #0]
9001c224:	6803      	ldr	r3, [r0, #0]
9001c226:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c228:	4798      	blx	r3
9001c22a:	b00f      	add	sp, #60	@ 0x3c
9001c22c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c230:	240218b4 	.word	0x240218b4
9001c234:	240218ae 	.word	0x240218ae

9001c238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001c238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c23c:	b09f      	sub	sp, #124	@ 0x7c
9001c23e:	461d      	mov	r5, r3
9001c240:	4604      	mov	r4, r0
9001c242:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001c244:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001c248:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001c24c:	9209      	str	r2, [sp, #36]	@ 0x24
9001c24e:	2a00      	cmp	r2, #0
9001c250:	f000 81ed 	beq.w	9001c62e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001c254:	6828      	ldr	r0, [r5, #0]
9001c256:	aa1a      	add	r2, sp, #104	@ 0x68
9001c258:	6869      	ldr	r1, [r5, #4]
9001c25a:	c203      	stmia	r2!, {r0, r1}
9001c25c:	6818      	ldr	r0, [r3, #0]
9001c25e:	aa1c      	add	r2, sp, #112	@ 0x70
9001c260:	6859      	ldr	r1, [r3, #4]
9001c262:	c203      	stmia	r2!, {r0, r1}
9001c264:	a81a      	add	r0, sp, #104	@ 0x68
9001c266:	f7f8 feb5 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c26a:	4629      	mov	r1, r5
9001c26c:	a81c      	add	r0, sp, #112	@ 0x70
9001c26e:	f7f8 fed9 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c272:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001c276:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001c27a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001c27e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001c282:	bfdb      	ittet	le
9001c284:	b29a      	uxthle	r2, r3
9001c286:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001c28a:	2201      	movgt	r2, #1
9001c28c:	fb91 f2f2 	sdivle	r2, r1, r2
9001c290:	9202      	str	r2, [sp, #8]
9001c292:	9802      	ldr	r0, [sp, #8]
9001c294:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001c298:	9902      	ldr	r1, [sp, #8]
9001c29a:	fb92 f0f0 	sdiv	r0, r2, r0
9001c29e:	b280      	uxth	r0, r0
9001c2a0:	4488      	add	r8, r1
9001c2a2:	9010      	str	r0, [sp, #64]	@ 0x40
9001c2a4:	f108 38ff 	add.w	r8, r8, #4294967295
9001c2a8:	9802      	ldr	r0, [sp, #8]
9001c2aa:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001c2ac:	fb05 2510 	mls	r5, r5, r0, r2
9001c2b0:	fb98 f8f1 	sdiv	r8, r8, r1
9001c2b4:	fb15 f503 	smulbb	r5, r5, r3
9001c2b8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001c2bc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001c2c0:	f108 0801 	add.w	r8, r8, #1
9001c2c4:	440d      	add	r5, r1
9001c2c6:	4419      	add	r1, r3
9001c2c8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001c2cc:	fa1f f888 	uxth.w	r8, r8
9001c2d0:	441a      	add	r2, r3
9001c2d2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001c2d6:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001c2da:	b2ad      	uxth	r5, r5
9001c2dc:	9304      	str	r3, [sp, #16]
9001c2de:	4b94      	ldr	r3, [pc, #592]	@ (9001c530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001c2e0:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001c2e4:	6818      	ldr	r0, [r3, #0]
9001c2e6:	6803      	ldr	r3, [r0, #0]
9001c2e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001c2ea:	4798      	blx	r3
9001c2ec:	4b91      	ldr	r3, [pc, #580]	@ (9001c534 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001c2ee:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001c2f2:	2d00      	cmp	r5, #0
9001c2f4:	881a      	ldrh	r2, [r3, #0]
9001c2f6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001c2fa:	fb02 f606 	mul.w	r6, r2, r6
9001c2fe:	fb02 7101 	mla	r1, r2, r1, r7
9001c302:	9318      	str	r3, [sp, #96]	@ 0x60
9001c304:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001c308:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001c30c:	f04f 0100 	mov.w	r1, #0
9001c310:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001c314:	930f      	str	r3, [sp, #60]	@ 0x3c
9001c316:	4b88      	ldr	r3, [pc, #544]	@ (9001c538 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001c318:	920a      	str	r2, [sp, #40]	@ 0x28
9001c31a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c31c:	eba3 0304 	sub.w	r3, r3, r4
9001c320:	910d      	str	r1, [sp, #52]	@ 0x34
9001c322:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001c326:	9319      	str	r3, [sp, #100]	@ 0x64
9001c328:	f108 0204 	add.w	r2, r8, #4
9001c32c:	9211      	str	r2, [sp, #68]	@ 0x44
9001c32e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001c330:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001c334:	9215      	str	r2, [sp, #84]	@ 0x54
9001c336:	9a04      	ldr	r2, [sp, #16]
9001c338:	bf18      	it	ne
9001c33a:	2200      	movne	r2, #0
9001c33c:	b292      	uxth	r2, r2
9001c33e:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001c340:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c342:	fa11 f383 	uxtah	r3, r1, r3
9001c346:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001c348:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001c34c:	3304      	adds	r3, #4
9001c34e:	9306      	str	r3, [sp, #24]
9001c350:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001c352:	4283      	cmp	r3, r0
9001c354:	f240 8166 	bls.w	9001c624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001c358:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001c35c:	f04f 0a01 	mov.w	sl, #1
9001c360:	9902      	ldr	r1, [sp, #8]
9001c362:	9e06      	ldr	r6, [sp, #24]
9001c364:	46d3      	mov	fp, sl
9001c366:	4657      	mov	r7, sl
9001c368:	7836      	ldrb	r6, [r6, #0]
9001c36a:	fbb5 f3f3 	udiv	r3, r5, r3
9001c36e:	1acb      	subs	r3, r1, r3
9001c370:	9612      	str	r6, [sp, #72]	@ 0x48
9001c372:	3601      	adds	r6, #1
9001c374:	b29b      	uxth	r3, r3
9001c376:	9605      	str	r6, [sp, #20]
9001c378:	9316      	str	r3, [sp, #88]	@ 0x58
9001c37a:	9b06      	ldr	r3, [sp, #24]
9001c37c:	7859      	ldrb	r1, [r3, #1]
9001c37e:	789b      	ldrb	r3, [r3, #2]
9001c380:	021b      	lsls	r3, r3, #8
9001c382:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001c386:	9906      	ldr	r1, [sp, #24]
9001c388:	78c9      	ldrb	r1, [r1, #3]
9001c38a:	430b      	orrs	r3, r1
9001c38c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001c38e:	4419      	add	r1, r3
9001c390:	1c4e      	adds	r6, r1, #1
9001c392:	7849      	ldrb	r1, [r1, #1]
9001c394:	9603      	str	r6, [sp, #12]
9001c396:	0209      	lsls	r1, r1, #8
9001c398:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001c39a:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001c39e:	5cf3      	ldrb	r3, [r6, r3]
9001c3a0:	4319      	orrs	r1, r3
9001c3a2:	b28b      	uxth	r3, r1
9001c3a4:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001c3a8:	930c      	str	r3, [sp, #48]	@ 0x30
9001c3aa:	2300      	movs	r3, #0
9001c3ac:	9307      	str	r3, [sp, #28]
9001c3ae:	469c      	mov	ip, r3
9001c3b0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001c3b4:	930e      	str	r3, [sp, #56]	@ 0x38
9001c3b6:	2d00      	cmp	r5, #0
9001c3b8:	d07e      	beq.n	9001c4b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001c3ba:	42af      	cmp	r7, r5
9001c3bc:	d26e      	bcs.n	9001c49c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001c3be:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001c3c0:	1bed      	subs	r5, r5, r7
9001c3c2:	9201      	str	r2, [sp, #4]
9001c3c4:	4283      	cmp	r3, r0
9001c3c6:	b2ad      	uxth	r5, r5
9001c3c8:	d802      	bhi.n	9001c3d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001c3ca:	e073      	b.n	9001c4b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001c3cc:	2b00      	cmp	r3, #0
9001c3ce:	d15f      	bne.n	9001c490 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001c3d0:	9b03      	ldr	r3, [sp, #12]
9001c3d2:	f1cb 0207 	rsb	r2, fp, #7
9001c3d6:	785b      	ldrb	r3, [r3, #1]
9001c3d8:	4093      	lsls	r3, r2
9001c3da:	005b      	lsls	r3, r3, #1
9001c3dc:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001c3e0:	9b03      	ldr	r3, [sp, #12]
9001c3e2:	781b      	ldrb	r3, [r3, #0]
9001c3e4:	fa43 f30b 	asr.w	r3, r3, fp
9001c3e8:	b2db      	uxtb	r3, r3
9001c3ea:	4313      	orrs	r3, r2
9001c3ec:	f10b 0201 	add.w	r2, fp, #1
9001c3f0:	fa5f fb82 	uxtb.w	fp, r2
9001c3f4:	9a03      	ldr	r2, [sp, #12]
9001c3f6:	b29f      	uxth	r7, r3
9001c3f8:	f1bb 0f08 	cmp.w	fp, #8
9001c3fc:	bf13      	iteet	ne
9001c3fe:	3201      	addne	r2, #1
9001c400:	3202      	addeq	r2, #2
9001c402:	f04f 0b00 	moveq.w	fp, #0
9001c406:	9203      	strne	r2, [sp, #12]
9001c408:	bf08      	it	eq
9001c40a:	9203      	streq	r2, [sp, #12]
9001c40c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c40e:	42ba      	cmp	r2, r7
9001c410:	d309      	bcc.n	9001c426 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001c412:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001c416:	2301      	movs	r3, #1
9001c418:	9a05      	ldr	r2, [sp, #20]
9001c41a:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001c41e:	d30e      	bcc.n	9001c43e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001c420:	469a      	mov	sl, r3
9001c422:	2600      	movs	r6, #0
9001c424:	e035      	b.n	9001c492 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001c426:	9b05      	ldr	r3, [sp, #20]
9001c428:	429f      	cmp	r7, r3
9001c42a:	d318      	bcc.n	9001c45e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001c42c:	eb04 030a 	add.w	r3, r4, sl
9001c430:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001c434:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001c438:	f10a 0301 	add.w	r3, sl, #1
9001c43c:	b29b      	uxth	r3, r3
9001c43e:	9a05      	ldr	r2, [sp, #20]
9001c440:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001c444:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001c448:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001c44a:	7116      	strb	r6, [r2, #4]
9001c44c:	f10a 0601 	add.w	r6, sl, #1
9001c450:	80d1      	strh	r1, [r2, #6]
9001c452:	7156      	strb	r6, [r2, #5]
9001c454:	9a05      	ldr	r2, [sp, #20]
9001c456:	3201      	adds	r2, #1
9001c458:	b292      	uxth	r2, r2
9001c45a:	9205      	str	r2, [sp, #20]
9001c45c:	e7e0      	b.n	9001c420 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001c45e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001c462:	463a      	mov	r2, r7
9001c464:	795b      	ldrb	r3, [r3, #5]
9001c466:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001c46a:	4426      	add	r6, r4
9001c46c:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001c46e:	eb01 0c06 	add.w	ip, r1, r6
9001c472:	f1bc 0f00 	cmp.w	ip, #0
9001c476:	dd07      	ble.n	9001c488 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001c478:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001c47c:	f892 c004 	ldrb.w	ip, [r2, #4]
9001c480:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001c484:	88d2      	ldrh	r2, [r2, #6]
9001c486:	e7f1      	b.n	9001c46c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001c488:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001c48c:	b29b      	uxth	r3, r3
9001c48e:	e7c3      	b.n	9001c418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001c490:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001c492:	970c      	str	r7, [sp, #48]	@ 0x30
9001c494:	46b4      	mov	ip, r6
9001c496:	9a01      	ldr	r2, [sp, #4]
9001c498:	461f      	mov	r7, r3
9001c49a:	e78c      	b.n	9001c3b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001c49c:	1b7b      	subs	r3, r7, r5
9001c49e:	eb0c 0605 	add.w	r6, ip, r5
9001c4a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c4a6:	b29b      	uxth	r3, r3
9001c4a8:	b2b6      	uxth	r6, r6
9001c4aa:	9201      	str	r2, [sp, #4]
9001c4ac:	2500      	movs	r5, #0
9001c4ae:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001c4b0:	4282      	cmp	r2, r0
9001c4b2:	d88b      	bhi.n	9001c3cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001c4b4:	9a01      	ldr	r2, [sp, #4]
9001c4b6:	e74b      	b.n	9001c350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001c4b8:	4297      	cmp	r7, r2
9001c4ba:	d332      	bcc.n	9001c522 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001c4bc:	1abb      	subs	r3, r7, r2
9001c4be:	9208      	str	r2, [sp, #32]
9001c4c0:	9501      	str	r5, [sp, #4]
9001c4c2:	b29b      	uxth	r3, r3
9001c4c4:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001c4c6:	29ff      	cmp	r1, #255	@ 0xff
9001c4c8:	9908      	ldr	r1, [sp, #32]
9001c4ca:	eb0c 0601 	add.w	r6, ip, r1
9001c4ce:	d135      	bne.n	9001c53c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001c4d0:	f1a0 0e02 	sub.w	lr, r0, #2
9001c4d4:	b2b6      	uxth	r6, r6
9001c4d6:	45b4      	cmp	ip, r6
9001c4d8:	f040 808c 	bne.w	9001c5f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001c4dc:	9908      	ldr	r1, [sp, #32]
9001c4de:	4297      	cmp	r7, r2
9001c4e0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001c4e4:	d3e2      	bcc.n	9001c4ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001c4e6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001c4e8:	9904      	ldr	r1, [sp, #16]
9001c4ea:	8812      	ldrh	r2, [r2, #0]
9001c4ec:	1a52      	subs	r2, r2, r1
9001c4ee:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001c4f0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c4f4:	9a07      	ldr	r2, [sp, #28]
9001c4f6:	3201      	adds	r2, #1
9001c4f8:	428a      	cmp	r2, r1
9001c4fa:	9207      	str	r2, [sp, #28]
9001c4fc:	f040 8087 	bne.w	9001c60e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001c500:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001c504:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001c508:	9b04      	ldr	r3, [sp, #16]
9001c50a:	1bed      	subs	r5, r5, r7
9001c50c:	b2ad      	uxth	r5, r5
9001c50e:	2d00      	cmp	r5, #0
9001c510:	bf08      	it	eq
9001c512:	461a      	moveq	r2, r3
9001c514:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c516:	bf18      	it	ne
9001c518:	2200      	movne	r2, #0
9001c51a:	3301      	adds	r3, #1
9001c51c:	b292      	uxth	r2, r2
9001c51e:	930d      	str	r3, [sp, #52]	@ 0x34
9001c520:	e70d      	b.n	9001c33e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001c522:	1bd1      	subs	r1, r2, r7
9001c524:	9708      	str	r7, [sp, #32]
9001c526:	b28b      	uxth	r3, r1
9001c528:	9301      	str	r3, [sp, #4]
9001c52a:	462b      	mov	r3, r5
9001c52c:	e7ca      	b.n	9001c4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001c52e:	bf00      	nop
9001c530:	240218b4 	.word	0x240218b4
9001c534:	240218ae 	.word	0x240218ae
9001c538:	fffff7fb 	.word	0xfffff7fb
9001c53c:	b2b6      	uxth	r6, r6
9001c53e:	900b      	str	r0, [sp, #44]	@ 0x2c
9001c540:	45b4      	cmp	ip, r6
9001c542:	d0cb      	beq.n	9001c4dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001c544:	f10c 0101 	add.w	r1, ip, #1
9001c548:	44a4      	add	ip, r4
9001c54a:	9117      	str	r1, [sp, #92]	@ 0x5c
9001c54c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001c550:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001c552:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001c556:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001c558:	ea4f 2825 	mov.w	r8, r5, asr #8
9001c55c:	f8b1 c000 	ldrh.w	ip, [r1]
9001c560:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001c562:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001c566:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001c56a:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001c56e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c572:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c576:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001c57a:	fb1e fe01 	smulbb	lr, lr, r1
9001c57e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001c580:	fa5f fc8c 	uxtb.w	ip, ip
9001c584:	fb08 e801 	mla	r8, r8, r1, lr
9001c588:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001c58c:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001c58e:	00ed      	lsls	r5, r5, #3
9001c590:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001c594:	fa1f f888 	uxth.w	r8, r8
9001c598:	fb19 f901 	smulbb	r9, r9, r1
9001c59c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001c59e:	b2ed      	uxtb	r5, r5
9001c5a0:	fb0e 9e01 	mla	lr, lr, r1, r9
9001c5a4:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001c5a6:	fb1c fc01 	smulbb	ip, ip, r1
9001c5aa:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001c5ac:	fa1f fe8e 	uxth.w	lr, lr
9001c5b0:	fb05 c501 	mla	r5, r5, r1, ip
9001c5b4:	f108 0c01 	add.w	ip, r8, #1
9001c5b8:	f10e 0901 	add.w	r9, lr, #1
9001c5bc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001c5be:	b2ad      	uxth	r5, r5
9001c5c0:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001c5c4:	f105 0c01 	add.w	ip, r5, #1
9001c5c8:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001c5cc:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001c5d0:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001c5d4:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001c5d8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001c5dc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001c5e0:	ea4c 0808 	orr.w	r8, ip, r8
9001c5e4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001c5e8:	ea48 0809 	orr.w	r8, r8, r9
9001c5ec:	f821 8b02 	strh.w	r8, [r1], #2
9001c5f0:	910b      	str	r1, [sp, #44]	@ 0x2c
9001c5f2:	e7a5      	b.n	9001c540 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001c5f4:	f10c 0801 	add.w	r8, ip, #1
9001c5f8:	44a4      	add	ip, r4
9001c5fa:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001c5fc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001c600:	fa1f fc88 	uxth.w	ip, r8
9001c604:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001c608:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001c60c:	e763      	b.n	9001c4d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001c60e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c612:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001c616:	1aad      	subs	r5, r5, r2
9001c618:	b2ad      	uxth	r5, r5
9001c61a:	2d00      	cmp	r5, #0
9001c61c:	bf18      	it	ne
9001c61e:	2200      	movne	r2, #0
9001c620:	9201      	str	r2, [sp, #4]
9001c622:	e744      	b.n	9001c4ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001c624:	4b03      	ldr	r3, [pc, #12]	@ (9001c634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001c626:	6818      	ldr	r0, [r3, #0]
9001c628:	6803      	ldr	r3, [r0, #0]
9001c62a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c62c:	4798      	blx	r3
9001c62e:	b01f      	add	sp, #124	@ 0x7c
9001c630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c634:	240218b4 	.word	0x240218b4

9001c638 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001c638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c63c:	b093      	sub	sp, #76	@ 0x4c
9001c63e:	4616      	mov	r6, r2
9001c640:	460d      	mov	r5, r1
9001c642:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001c646:	9003      	str	r0, [sp, #12]
9001c648:	9201      	str	r2, [sp, #4]
9001c64a:	2a00      	cmp	r2, #0
9001c64c:	f000 8303 	beq.w	9001cc56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001c650:	6830      	ldr	r0, [r6, #0]
9001c652:	ac0e      	add	r4, sp, #56	@ 0x38
9001c654:	6871      	ldr	r1, [r6, #4]
9001c656:	c403      	stmia	r4!, {r0, r1}
9001c658:	6818      	ldr	r0, [r3, #0]
9001c65a:	ac10      	add	r4, sp, #64	@ 0x40
9001c65c:	6859      	ldr	r1, [r3, #4]
9001c65e:	c403      	stmia	r4!, {r0, r1}
9001c660:	a80e      	add	r0, sp, #56	@ 0x38
9001c662:	f7f8 fcb7 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c666:	4631      	mov	r1, r6
9001c668:	a810      	add	r0, sp, #64	@ 0x40
9001c66a:	f7f8 fcdb 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c66e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001c672:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001c676:	bfdb      	ittet	le
9001c678:	b293      	uxthle	r3, r2
9001c67a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001c67e:	2301      	movgt	r3, #1
9001c680:	fb91 f3f3 	sdivle	r3, r1, r3
9001c684:	9304      	str	r3, [sp, #16]
9001c686:	f105 0308 	add.w	r3, r5, #8
9001c68a:	9904      	ldr	r1, [sp, #16]
9001c68c:	9308      	str	r3, [sp, #32]
9001c68e:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001c692:	440b      	add	r3, r1
9001c694:	3b01      	subs	r3, #1
9001c696:	fb93 f3f1 	sdiv	r3, r3, r1
9001c69a:	3b01      	subs	r3, #1
9001c69c:	9908      	ldr	r1, [sp, #32]
9001c69e:	b29b      	uxth	r3, r3
9001c6a0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001c6a4:	9904      	ldr	r1, [sp, #16]
9001c6a6:	9309      	str	r3, [sp, #36]	@ 0x24
9001c6a8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001c6ac:	fb93 f0f1 	sdiv	r0, r3, r1
9001c6b0:	b284      	uxth	r4, r0
9001c6b2:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001c6b6:	9405      	str	r4, [sp, #20]
9001c6b8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001c6bc:	fb05 3914 	mls	r9, r5, r4, r3
9001c6c0:	fb19 f902 	smulbb	r9, r9, r2
9001c6c4:	4489      	add	r9, r1
9001c6c6:	fa1f f989 	uxth.w	r9, r9
9001c6ca:	2d00      	cmp	r5, #0
9001c6cc:	d05d      	beq.n	9001c78a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001c6ce:	1e6a      	subs	r2, r5, #1
9001c6d0:	9808      	ldr	r0, [sp, #32]
9001c6d2:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001c6d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001c6d8:	fa9a fa8a 	rev.w	sl, sl
9001c6dc:	4492      	add	sl, r2
9001c6de:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001c6e2:	f04f 0600 	mov.w	r6, #0
9001c6e6:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001c6ea:	4411      	add	r1, r2
9001c6ec:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001c6f0:	4413      	add	r3, r2
9001c6f2:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001c6f6:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001c6fa:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001c6fe:	9302      	str	r3, [sp, #8]
9001c700:	4bca      	ldr	r3, [pc, #808]	@ (9001ca2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001c702:	6818      	ldr	r0, [r3, #0]
9001c704:	6803      	ldr	r3, [r0, #0]
9001c706:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001c708:	4798      	blx	r3
9001c70a:	4bc9      	ldr	r3, [pc, #804]	@ (9001ca30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001c70c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001c710:	2100      	movs	r1, #0
9001c712:	881b      	ldrh	r3, [r3, #0]
9001c714:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001c718:	fb03 2404 	mla	r4, r3, r4, r2
9001c71c:	2280      	movs	r2, #128	@ 0x80
9001c71e:	436b      	muls	r3, r5
9001c720:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c724:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001c728:	930d      	str	r3, [sp, #52]	@ 0x34
9001c72a:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001c72e:	fb99 f3f3 	sdiv	r3, r9, r3
9001c732:	9306      	str	r3, [sp, #24]
9001c734:	9b01      	ldr	r3, [sp, #4]
9001c736:	43db      	mvns	r3, r3
9001c738:	b2db      	uxtb	r3, r3
9001c73a:	930a      	str	r3, [sp, #40]	@ 0x28
9001c73c:	9b03      	ldr	r3, [sp, #12]
9001c73e:	3304      	adds	r3, #4
9001c740:	4618      	mov	r0, r3
9001c742:	930b      	str	r3, [sp, #44]	@ 0x2c
9001c744:	f00c f8b4 	bl	900288b0 <memset>
9001c748:	4bba      	ldr	r3, [pc, #744]	@ (9001ca34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001c74a:	9300      	str	r3, [sp, #0]
9001c74c:	2300      	movs	r3, #0
9001c74e:	9307      	str	r3, [sp, #28]
9001c750:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c752:	42a3      	cmp	r3, r4
9001c754:	f240 827a 	bls.w	9001cc4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001c758:	f04f 0e07 	mov.w	lr, #7
9001c75c:	f1b9 0f00 	cmp.w	r9, #0
9001c760:	f000 8159 	beq.w	9001ca16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001c764:	f89a 5000 	ldrb.w	r5, [sl]
9001c768:	f10a 0701 	add.w	r7, sl, #1
9001c76c:	b2ed      	uxtb	r5, r5
9001c76e:	11aa      	asrs	r2, r5, #6
9001c770:	d10e      	bne.n	9001c790 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001c772:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001c776:	9b03      	ldr	r3, [sp, #12]
9001c778:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001c77c:	88ae      	ldrh	r6, [r5, #4]
9001c77e:	f109 39ff 	add.w	r9, r9, #4294967295
9001c782:	fa1f f989 	uxth.w	r9, r9
9001c786:	46ba      	mov	sl, r7
9001c788:	e7e8      	b.n	9001c75c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001c78a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001c78e:	e7a6      	b.n	9001c6de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001c790:	2a01      	cmp	r2, #1
9001c792:	d129      	bne.n	9001c7e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001c794:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001c798:	f005 0203 	and.w	r2, r5, #3
9001c79c:	2103      	movs	r1, #3
9001c79e:	3b02      	subs	r3, #2
9001c7a0:	4413      	add	r3, r2
9001c7a2:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001c7a6:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001c7aa:	f003 031f 	and.w	r3, r3, #31
9001c7ae:	3a02      	subs	r2, #2
9001c7b0:	3d02      	subs	r5, #2
9001c7b2:	f363 0604 	bfi	r6, r3, #0, #5
9001c7b6:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001c7ba:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001c7be:	f362 164a 	bfi	r6, r2, #5, #6
9001c7c2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001c7c6:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001c7ca:	f005 051f 	and.w	r5, r5, #31
9001c7ce:	fb11 2205 	smlabb	r2, r1, r5, r2
9001c7d2:	f365 26cf 	bfi	r6, r5, #11, #5
9001c7d6:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001c7da:	9a03      	ldr	r2, [sp, #12]
9001c7dc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001c7e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001c7e4:	809e      	strh	r6, [r3, #4]
9001c7e6:	e7ca      	b.n	9001c77e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001c7e8:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001c7ec:	2a02      	cmp	r2, #2
9001c7ee:	b2ab      	uxth	r3, r5
9001c7f0:	d136      	bne.n	9001c860 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001c7f2:	2101      	movs	r1, #1
9001c7f4:	fb12 1205 	smlabb	r2, r2, r5, r1
9001c7f8:	4492      	add	sl, r2
9001c7fa:	463a      	mov	r2, r7
9001c7fc:	4552      	cmp	r2, sl
9001c7fe:	d01c      	beq.n	9001c83a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001c800:	4694      	mov	ip, r2
9001c802:	f04f 0b03 	mov.w	fp, #3
9001c806:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001c80a:	7852      	ldrb	r2, [r2, #1]
9001c80c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001c810:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001c814:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001c818:	f001 021f 	and.w	r2, r1, #31
9001c81c:	460e      	mov	r6, r1
9001c81e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001c822:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001c826:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001c82a:	9a03      	ldr	r2, [sp, #12]
9001c82c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001c830:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c834:	4662      	mov	r2, ip
9001c836:	8081      	strh	r1, [r0, #4]
9001c838:	e7e0      	b.n	9001c7fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001c83a:	4599      	cmp	r9, r3
9001c83c:	d20b      	bcs.n	9001c856 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001c83e:	eba5 0509 	sub.w	r5, r5, r9
9001c842:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001c846:	2d00      	cmp	r5, #0
9001c848:	f300 8208 	bgt.w	9001cc5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001c84c:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001c850:	2301      	movs	r3, #1
9001c852:	9307      	str	r3, [sp, #28]
9001c854:	e00c      	b.n	9001c870 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001c856:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001c85a:	eba9 0903 	sub.w	r9, r9, r3
9001c85e:	e790      	b.n	9001c782 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001c860:	4599      	cmp	r9, r3
9001c862:	d2fa      	bcs.n	9001c85a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001c864:	eba5 0509 	sub.w	r5, r5, r9
9001c868:	2d00      	cmp	r5, #0
9001c86a:	dc1d      	bgt.n	9001c8a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001c86c:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001c870:	f04f 0b00 	mov.w	fp, #0
9001c874:	f1b8 0f00 	cmp.w	r8, #0
9001c878:	f340 81a0 	ble.w	9001cbbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001c87c:	783b      	ldrb	r3, [r7, #0]
9001c87e:	f107 0a01 	add.w	sl, r7, #1
9001c882:	b2db      	uxtb	r3, r3
9001c884:	119a      	asrs	r2, r3, #6
9001c886:	f040 80d7 	bne.w	9001ca38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001c88a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001c88e:	9a03      	ldr	r2, [sp, #12]
9001c890:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001c894:	889e      	ldrh	r6, [r3, #4]
9001c896:	9b01      	ldr	r3, [sp, #4]
9001c898:	2bff      	cmp	r3, #255	@ 0xff
9001c89a:	f040 81e8 	bne.w	9001cc6e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001c89e:	8026      	strh	r6, [r4, #0]
9001c8a0:	f108 38ff 	add.w	r8, r8, #4294967295
9001c8a4:	3402      	adds	r4, #2
9001c8a6:	e0be      	b.n	9001ca26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001c8a8:	9b02      	ldr	r3, [sp, #8]
9001c8aa:	9a02      	ldr	r2, [sp, #8]
9001c8ac:	42ab      	cmp	r3, r5
9001c8ae:	bfa8      	it	ge
9001c8b0:	462b      	movge	r3, r5
9001c8b2:	eba2 0803 	sub.w	r8, r2, r3
9001c8b6:	9a07      	ldr	r2, [sp, #28]
9001c8b8:	1aed      	subs	r5, r5, r3
9001c8ba:	2a00      	cmp	r2, #0
9001c8bc:	d05a      	beq.n	9001c974 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001c8be:	9a01      	ldr	r2, [sp, #4]
9001c8c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001c8c4:	2aff      	cmp	r2, #255	@ 0xff
9001c8c6:	d049      	beq.n	9001c95c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001c8c8:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001c8cc:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001c8d0:	42a3      	cmp	r3, r4
9001c8d2:	f240 80a5 	bls.w	9001ca20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001c8d6:	46bc      	mov	ip, r7
9001c8d8:	8820      	ldrh	r0, [r4, #0]
9001c8da:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001c8de:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001c8e2:	7879      	ldrb	r1, [r7, #1]
9001c8e4:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001c8e8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001c8ec:	fb1a fa09 	smulbb	sl, sl, r9
9001c8f0:	b212      	sxth	r2, r2
9001c8f2:	b291      	uxth	r1, r2
9001c8f4:	00d2      	lsls	r2, r2, #3
9001c8f6:	120f      	asrs	r7, r1, #8
9001c8f8:	10c9      	asrs	r1, r1, #3
9001c8fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c8fe:	b2d2      	uxtb	r2, r2
9001c900:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001c904:	fb07 a70e 	mla	r7, r7, lr, sl
9001c908:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001c90c:	00c0      	lsls	r0, r0, #3
9001c90e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001c912:	b2bf      	uxth	r7, r7
9001c914:	b2c0      	uxtb	r0, r0
9001c916:	fb1a fa09 	smulbb	sl, sl, r9
9001c91a:	fb10 f009 	smulbb	r0, r0, r9
9001c91e:	fb01 a10e 	mla	r1, r1, lr, sl
9001c922:	fb02 020e 	mla	r2, r2, lr, r0
9001c926:	1c78      	adds	r0, r7, #1
9001c928:	b289      	uxth	r1, r1
9001c92a:	b292      	uxth	r2, r2
9001c92c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c930:	f101 0a01 	add.w	sl, r1, #1
9001c934:	1c50      	adds	r0, r2, #1
9001c936:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001c93a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c93e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001c942:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c946:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001c94a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c94e:	4307      	orrs	r7, r0
9001c950:	ea47 070a 	orr.w	r7, r7, sl
9001c954:	f824 7b02 	strh.w	r7, [r4], #2
9001c958:	4667      	mov	r7, ip
9001c95a:	e7b9      	b.n	9001c8d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001c95c:	42a3      	cmp	r3, r4
9001c95e:	d95f      	bls.n	9001ca20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001c960:	463a      	mov	r2, r7
9001c962:	f812 1b02 	ldrb.w	r1, [r2], #2
9001c966:	7878      	ldrb	r0, [r7, #1]
9001c968:	4617      	mov	r7, r2
9001c96a:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001c96e:	f824 1b02 	strh.w	r1, [r4], #2
9001c972:	e7f3      	b.n	9001c95c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001c974:	9901      	ldr	r1, [sp, #4]
9001c976:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001c97a:	b2b2      	uxth	r2, r6
9001c97c:	29ff      	cmp	r1, #255	@ 0xff
9001c97e:	d044      	beq.n	9001ca0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001c980:	ea4f 2922 	mov.w	r9, r2, asr #8
9001c984:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001c988:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001c98c:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001c990:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001c994:	4608      	mov	r0, r1
9001c996:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001c99a:	fb09 f901 	mul.w	r9, r9, r1
9001c99e:	fb0e fe01 	mul.w	lr, lr, r1
9001c9a2:	00d1      	lsls	r1, r2, #3
9001c9a4:	b2c9      	uxtb	r1, r1
9001c9a6:	4341      	muls	r1, r0
9001c9a8:	429c      	cmp	r4, r3
9001c9aa:	f4bf af61 	bcs.w	9001c870 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001c9ae:	8822      	ldrh	r2, [r4, #0]
9001c9b0:	1210      	asrs	r0, r2, #8
9001c9b2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001c9b6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001c9ba:	00d2      	lsls	r2, r2, #3
9001c9bc:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001c9c0:	fb00 900a 	mla	r0, r0, sl, r9
9001c9c4:	b2d2      	uxtb	r2, r2
9001c9c6:	fb0c ec0a 	mla	ip, ip, sl, lr
9001c9ca:	b280      	uxth	r0, r0
9001c9cc:	fb02 120a 	mla	r2, r2, sl, r1
9001c9d0:	fa1f fc8c 	uxth.w	ip, ip
9001c9d4:	b292      	uxth	r2, r2
9001c9d6:	f100 0b01 	add.w	fp, r0, #1
9001c9da:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001c9de:	1c50      	adds	r0, r2, #1
9001c9e0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001c9e4:	f10c 0201 	add.w	r2, ip, #1
9001c9e8:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001c9ec:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c9f0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001c9f4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001c9f8:	ea40 0b0b 	orr.w	fp, r0, fp
9001c9fc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001ca00:	ea4b 0b0c 	orr.w	fp, fp, ip
9001ca04:	f824 bb02 	strh.w	fp, [r4], #2
9001ca08:	e7ce      	b.n	9001c9a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001ca0a:	429c      	cmp	r4, r3
9001ca0c:	f4bf af30 	bcs.w	9001c870 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001ca10:	f824 2b02 	strh.w	r2, [r4], #2
9001ca14:	e7f9      	b.n	9001ca0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001ca16:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001ca1a:	4657      	mov	r7, sl
9001ca1c:	464d      	mov	r5, r9
9001ca1e:	e727      	b.n	9001c870 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001ca20:	2300      	movs	r3, #0
9001ca22:	e716      	b.n	9001c852 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001ca24:	44bb      	add	fp, r7
9001ca26:	4657      	mov	r7, sl
9001ca28:	e724      	b.n	9001c874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001ca2a:	bf00      	nop
9001ca2c:	240218b4 	.word	0x240218b4
9001ca30:	240218ae 	.word	0x240218ae
9001ca34:	24000180 	.word	0x24000180
9001ca38:	2a01      	cmp	r2, #1
9001ca3a:	d12a      	bne.n	9001ca92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001ca3c:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001ca40:	f003 0203 	and.w	r2, r3, #3
9001ca44:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001ca48:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001ca4c:	3902      	subs	r1, #2
9001ca4e:	3802      	subs	r0, #2
9001ca50:	3b02      	subs	r3, #2
9001ca52:	4411      	add	r1, r2
9001ca54:	f001 011f 	and.w	r1, r1, #31
9001ca58:	f361 0604 	bfi	r6, r1, #0, #5
9001ca5c:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001ca60:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001ca64:	f360 164a 	bfi	r6, r0, #5, #6
9001ca68:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001ca6c:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001ca70:	f002 031f 	and.w	r3, r2, #31
9001ca74:	2203      	movs	r2, #3
9001ca76:	f363 26cf 	bfi	r6, r3, #11, #5
9001ca7a:	fb12 0303 	smlabb	r3, r2, r3, r0
9001ca7e:	2207      	movs	r2, #7
9001ca80:	fb12 3301 	smlabb	r3, r2, r1, r3
9001ca84:	9a03      	ldr	r2, [sp, #12]
9001ca86:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ca8a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ca8e:	809e      	strh	r6, [r3, #4]
9001ca90:	e701      	b.n	9001c896 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001ca92:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001ca96:	4647      	mov	r7, r8
9001ca98:	45a8      	cmp	r8, r5
9001ca9a:	bfa8      	it	ge
9001ca9c:	462f      	movge	r7, r5
9001ca9e:	2a02      	cmp	r2, #2
9001caa0:	d154      	bne.n	9001cb4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001caa2:	9b01      	ldr	r3, [sp, #4]
9001caa4:	2bff      	cmp	r3, #255	@ 0xff
9001caa6:	d01a      	beq.n	9001cade <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001caa8:	eb0b 0307 	add.w	r3, fp, r7
9001caac:	2b40      	cmp	r3, #64	@ 0x40
9001caae:	dd16      	ble.n	9001cade <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001cab0:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001cab4:	9800      	ldr	r0, [sp, #0]
9001cab6:	4649      	mov	r1, r9
9001cab8:	f7e5 ff2a 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001cabc:	465a      	mov	r2, fp
9001cabe:	9b01      	ldr	r3, [sp, #4]
9001cac0:	4620      	mov	r0, r4
9001cac2:	9900      	ldr	r1, [sp, #0]
9001cac4:	444c      	add	r4, r9
9001cac6:	f7e5 ff69 	bl	9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001caca:	9b00      	ldr	r3, [sp, #0]
9001cacc:	f04f 0b00 	mov.w	fp, #0
9001cad0:	461a      	mov	r2, r3
9001cad2:	4b6a      	ldr	r3, [pc, #424]	@ (9001cc7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001cad4:	429a      	cmp	r2, r3
9001cad6:	bf0c      	ite	eq
9001cad8:	4b69      	ldreq	r3, [pc, #420]	@ (9001cc80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001cada:	4b68      	ldrne	r3, [pc, #416]	@ (9001cc7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001cadc:	9300      	str	r3, [sp, #0]
9001cade:	4652      	mov	r2, sl
9001cae0:	2100      	movs	r1, #0
9001cae2:	42a9      	cmp	r1, r5
9001cae4:	da2c      	bge.n	9001cb40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001cae6:	4694      	mov	ip, r2
9001cae8:	f04f 0903 	mov.w	r9, #3
9001caec:	42b9      	cmp	r1, r7
9001caee:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001caf2:	7852      	ldrb	r2, [r2, #1]
9001caf4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001caf8:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001cafc:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001cb00:	f003 021f 	and.w	r2, r3, #31
9001cb04:	461e      	mov	r6, r3
9001cb06:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001cb0a:	fb19 000e 	smlabb	r0, r9, lr, r0
9001cb0e:	f04f 0e07 	mov.w	lr, #7
9001cb12:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001cb16:	9a03      	ldr	r2, [sp, #12]
9001cb18:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001cb1c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001cb20:	8083      	strh	r3, [r0, #4]
9001cb22:	da0a      	bge.n	9001cb3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001cb24:	9a01      	ldr	r2, [sp, #4]
9001cb26:	2aff      	cmp	r2, #255	@ 0xff
9001cb28:	bf13      	iteet	ne
9001cb2a:	9a00      	ldrne	r2, [sp, #0]
9001cb2c:	8023      	strheq	r3, [r4, #0]
9001cb2e:	3402      	addeq	r4, #2
9001cb30:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001cb34:	bf18      	it	ne
9001cb36:	f10b 0b01 	addne.w	fp, fp, #1
9001cb3a:	3101      	adds	r1, #1
9001cb3c:	4662      	mov	r2, ip
9001cb3e:	e7d0      	b.n	9001cae2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001cb40:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001cb44:	eba8 0807 	sub.w	r8, r8, r7
9001cb48:	1bed      	subs	r5, r5, r7
9001cb4a:	e76c      	b.n	9001ca26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001cb4c:	9b01      	ldr	r3, [sp, #4]
9001cb4e:	eba8 0807 	sub.w	r8, r8, r7
9001cb52:	1bed      	subs	r5, r5, r7
9001cb54:	fa1f f986 	uxth.w	r9, r6
9001cb58:	2bff      	cmp	r3, #255	@ 0xff
9001cb5a:	d027      	beq.n	9001cbac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001cb5c:	eb0b 0307 	add.w	r3, fp, r7
9001cb60:	2b40      	cmp	r3, #64	@ 0x40
9001cb62:	dd18      	ble.n	9001cb96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001cb64:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001cb68:	9800      	ldr	r0, [sp, #0]
9001cb6a:	4619      	mov	r1, r3
9001cb6c:	930c      	str	r3, [sp, #48]	@ 0x30
9001cb6e:	f7e5 fecf 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001cb72:	465a      	mov	r2, fp
9001cb74:	9b01      	ldr	r3, [sp, #4]
9001cb76:	4620      	mov	r0, r4
9001cb78:	9900      	ldr	r1, [sp, #0]
9001cb7a:	f04f 0b00 	mov.w	fp, #0
9001cb7e:	f7e5 ff0d 	bl	9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001cb82:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001cb84:	441c      	add	r4, r3
9001cb86:	9b00      	ldr	r3, [sp, #0]
9001cb88:	461a      	mov	r2, r3
9001cb8a:	4b3c      	ldr	r3, [pc, #240]	@ (9001cc7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001cb8c:	429a      	cmp	r2, r3
9001cb8e:	bf0c      	ite	eq
9001cb90:	4b3b      	ldreq	r3, [pc, #236]	@ (9001cc80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001cb92:	4b3a      	ldrne	r3, [pc, #232]	@ (9001cc7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001cb94:	9300      	str	r3, [sp, #0]
9001cb96:	9b00      	ldr	r3, [sp, #0]
9001cb98:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001cb9c:	463b      	mov	r3, r7
9001cb9e:	2b00      	cmp	r3, #0
9001cba0:	f43f af40 	beq.w	9001ca24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001cba4:	f822 9b02 	strh.w	r9, [r2], #2
9001cba8:	3b01      	subs	r3, #1
9001cbaa:	e7f8      	b.n	9001cb9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001cbac:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001cbb0:	42a7      	cmp	r7, r4
9001cbb2:	f67f af38 	bls.w	9001ca26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001cbb6:	f824 9b02 	strh.w	r9, [r4], #2
9001cbba:	e7f9      	b.n	9001cbb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001cbbc:	f1bb 0f00 	cmp.w	fp, #0
9001cbc0:	d00c      	beq.n	9001cbdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001cbc2:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001cbc6:	9800      	ldr	r0, [sp, #0]
9001cbc8:	4641      	mov	r1, r8
9001cbca:	f7e5 fea1 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001cbce:	4620      	mov	r0, r4
9001cbd0:	4444      	add	r4, r8
9001cbd2:	9b01      	ldr	r3, [sp, #4]
9001cbd4:	465a      	mov	r2, fp
9001cbd6:	9900      	ldr	r1, [sp, #0]
9001cbd8:	f7e5 fee0 	bl	9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001cbdc:	4b29      	ldr	r3, [pc, #164]	@ (9001cc84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001cbde:	9a02      	ldr	r2, [sp, #8]
9001cbe0:	881b      	ldrh	r3, [r3, #0]
9001cbe2:	1a9b      	subs	r3, r3, r2
9001cbe4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cbe8:	9b06      	ldr	r3, [sp, #24]
9001cbea:	3301      	adds	r3, #1
9001cbec:	9306      	str	r3, [sp, #24]
9001cbee:	9a06      	ldr	r2, [sp, #24]
9001cbf0:	9b04      	ldr	r3, [sp, #16]
9001cbf2:	4293      	cmp	r3, r2
9001cbf4:	d120      	bne.n	9001cc38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001cbf6:	9b05      	ldr	r3, [sp, #20]
9001cbf8:	2100      	movs	r1, #0
9001cbfa:	9a05      	ldr	r2, [sp, #20]
9001cbfc:	f04f 0600 	mov.w	r6, #0
9001cc00:	f103 0801 	add.w	r8, r3, #1
9001cc04:	9b08      	ldr	r3, [sp, #32]
9001cc06:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001cc0a:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001cc0e:	2280      	movs	r2, #128	@ 0x80
9001cc10:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001cc14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001cc16:	ba3f      	rev	r7, r7
9001cc18:	eba9 0905 	sub.w	r9, r9, r5
9001cc1c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001cc1e:	441f      	add	r7, r3
9001cc20:	f00b fe46 	bl	900288b0 <memset>
9001cc24:	fa1f f989 	uxth.w	r9, r9
9001cc28:	2300      	movs	r3, #0
9001cc2a:	f8cd 8014 	str.w	r8, [sp, #20]
9001cc2e:	9306      	str	r3, [sp, #24]
9001cc30:	f7e5 fe64 	bl	900028fc <_ZN8touchgfx5paint8tearDownEv>
9001cc34:	46ba      	mov	sl, r7
9001cc36:	e58b      	b.n	9001c750 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001cc38:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001cc3c:	9b02      	ldr	r3, [sp, #8]
9001cc3e:	eba9 0903 	sub.w	r9, r9, r3
9001cc42:	eba9 0505 	sub.w	r5, r9, r5
9001cc46:	fa1f f985 	uxth.w	r9, r5
9001cc4a:	e7f1      	b.n	9001cc30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001cc4c:	4b0e      	ldr	r3, [pc, #56]	@ (9001cc88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001cc4e:	6818      	ldr	r0, [r3, #0]
9001cc50:	6803      	ldr	r3, [r0, #0]
9001cc52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001cc54:	4798      	blx	r3
9001cc56:	b013      	add	sp, #76	@ 0x4c
9001cc58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cc5c:	9b02      	ldr	r3, [sp, #8]
9001cc5e:	9a02      	ldr	r2, [sp, #8]
9001cc60:	42ab      	cmp	r3, r5
9001cc62:	bfa8      	it	ge
9001cc64:	462b      	movge	r3, r5
9001cc66:	eba2 0803 	sub.w	r8, r2, r3
9001cc6a:	1aed      	subs	r5, r5, r3
9001cc6c:	e627      	b.n	9001c8be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001cc6e:	f108 38ff 	add.w	r8, r8, #4294967295
9001cc72:	fa1f f986 	uxth.w	r9, r6
9001cc76:	2500      	movs	r5, #0
9001cc78:	2701      	movs	r7, #1
9001cc7a:	e76f      	b.n	9001cb5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001cc7c:	24000180 	.word	0x24000180
9001cc80:	24000280 	.word	0x24000280
9001cc84:	240218ae 	.word	0x240218ae
9001cc88:	240218b4 	.word	0x240218b4

9001cc8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001cc8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cc90:	b08f      	sub	sp, #60	@ 0x3c
9001cc92:	461c      	mov	r4, r3
9001cc94:	460f      	mov	r7, r1
9001cc96:	9203      	str	r2, [sp, #12]
9001cc98:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001cc9c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001cc9e:	9202      	str	r2, [sp, #8]
9001cca0:	2a00      	cmp	r2, #0
9001cca2:	f000 8128 	beq.w	9001cef6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001cca6:	6820      	ldr	r0, [r4, #0]
9001cca8:	aa0a      	add	r2, sp, #40	@ 0x28
9001ccaa:	6861      	ldr	r1, [r4, #4]
9001ccac:	c203      	stmia	r2!, {r0, r1}
9001ccae:	6818      	ldr	r0, [r3, #0]
9001ccb0:	aa0c      	add	r2, sp, #48	@ 0x30
9001ccb2:	6859      	ldr	r1, [r3, #4]
9001ccb4:	c203      	stmia	r2!, {r0, r1}
9001ccb6:	a80a      	add	r0, sp, #40	@ 0x28
9001ccb8:	f7f8 f98c 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ccbc:	4621      	mov	r1, r4
9001ccbe:	a80c      	add	r0, sp, #48	@ 0x30
9001ccc0:	f7f8 f9b0 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ccc4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001ccc8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001cccc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001ccd0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001ccd4:	bfdb      	ittet	le
9001ccd6:	b2b3      	uxthle	r3, r6
9001ccd8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001ccdc:	2301      	movgt	r3, #1
9001ccde:	fb92 f3f3 	sdivle	r3, r2, r3
9001cce2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001cce6:	441d      	add	r5, r3
9001cce8:	fb92 f1f3 	sdiv	r1, r2, r3
9001ccec:	fa1f fc81 	uxth.w	ip, r1
9001ccf0:	3d01      	subs	r5, #1
9001ccf2:	fb0c 2413 	mls	r4, ip, r3, r2
9001ccf6:	4661      	mov	r1, ip
9001ccf8:	fb14 f406 	smulbb	r4, r4, r6
9001ccfc:	4404      	add	r4, r0
9001ccfe:	fb95 f5f3 	sdiv	r5, r5, r3
9001cd02:	b2a4      	uxth	r4, r4
9001cd04:	b121      	cbz	r1, 9001cd10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001cd06:	9b03      	ldr	r3, [sp, #12]
9001cd08:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001cd0c:	ba1b      	rev	r3, r3
9001cd0e:	441f      	add	r7, r3
9001cd10:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001cd14:	b2ad      	uxth	r5, r5
9001cd16:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001cd1a:	4418      	add	r0, r3
9001cd1c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001cd20:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001cd24:	00ad      	lsls	r5, r5, #2
9001cd26:	441a      	add	r2, r3
9001cd28:	4b74      	ldr	r3, [pc, #464]	@ (9001cefc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001cd2a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001cd2e:	6818      	ldr	r0, [r3, #0]
9001cd30:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001cd34:	6803      	ldr	r3, [r0, #0]
9001cd36:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001cd38:	4798      	blx	r3
9001cd3a:	4a71      	ldr	r2, [pc, #452]	@ (9001cf00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001cd3c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001cd40:	2c00      	cmp	r4, #0
9001cd42:	8813      	ldrh	r3, [r2, #0]
9001cd44:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001cd48:	bf0c      	ite	eq
9001cd4a:	46c8      	moveq	r8, r9
9001cd4c:	f04f 0800 	movne.w	r8, #0
9001cd50:	9209      	str	r2, [sp, #36]	@ 0x24
9001cd52:	fb03 c101 	mla	r1, r3, r1, ip
9001cd56:	4373      	muls	r3, r6
9001cd58:	fa1f f888 	uxth.w	r8, r8
9001cd5c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001cd60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001cd64:	9304      	str	r3, [sp, #16]
9001cd66:	1d2b      	adds	r3, r5, #4
9001cd68:	9305      	str	r3, [sp, #20]
9001cd6a:	2300      	movs	r3, #0
9001cd6c:	9301      	str	r3, [sp, #4]
9001cd6e:	9a04      	ldr	r2, [sp, #16]
9001cd70:	4282      	cmp	r2, r0
9001cd72:	f240 80bb 	bls.w	9001ceec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001cd76:	b95b      	cbnz	r3, 9001cd90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001cd78:	783a      	ldrb	r2, [r7, #0]
9001cd7a:	0993      	lsrs	r3, r2, #6
9001cd7c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001cd80:	9201      	str	r2, [sp, #4]
9001cd82:	1e5a      	subs	r2, r3, #1
9001cd84:	2a02      	cmp	r2, #2
9001cd86:	bf8d      	iteet	hi
9001cd88:	787b      	ldrbhi	r3, [r7, #1]
9001cd8a:	3701      	addls	r7, #1
9001cd8c:	b29b      	uxthls	r3, r3
9001cd8e:	3702      	addhi	r7, #2
9001cd90:	b184      	cbz	r4, 9001cdb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001cd92:	429c      	cmp	r4, r3
9001cd94:	bf91      	iteee	ls
9001cd96:	1b1c      	subls	r4, r3, r4
9001cd98:	1ae4      	subhi	r4, r4, r3
9001cd9a:	46c4      	movhi	ip, r8
9001cd9c:	f04f 0a00 	movhi.w	sl, #0
9001cda0:	bf9b      	ittet	ls
9001cda2:	fa1f fa84 	uxthls.w	sl, r4
9001cda6:	2400      	movls	r4, #0
9001cda8:	b2a4      	uxthhi	r4, r4
9001cdaa:	fa1f fc89 	uxthls.w	ip, r9
9001cdae:	4653      	mov	r3, sl
9001cdb0:	46e0      	mov	r8, ip
9001cdb2:	e7dc      	b.n	9001cd6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001cdb4:	2204      	movs	r2, #4
9001cdb6:	9905      	ldr	r1, [sp, #20]
9001cdb8:	4543      	cmp	r3, r8
9001cdba:	4615      	mov	r5, r2
9001cdbc:	9a01      	ldr	r2, [sp, #4]
9001cdbe:	bf24      	itt	cs
9001cdc0:	eba3 0a08 	subcs.w	sl, r3, r8
9001cdc4:	46c6      	movcs	lr, r8
9001cdc6:	fb15 1202 	smlabb	r2, r5, r2, r1
9001cdca:	9903      	ldr	r1, [sp, #12]
9001cdcc:	bf3c      	itt	cc
9001cdce:	eba8 0c03 	subcc.w	ip, r8, r3
9001cdd2:	469e      	movcc	lr, r3
9001cdd4:	588a      	ldr	r2, [r1, r2]
9001cdd6:	bf26      	itte	cs
9001cdd8:	fa1f fa8a 	uxthcs.w	sl, sl
9001cddc:	46a4      	movcs	ip, r4
9001cdde:	fa1f fc8c 	uxthcc.w	ip, ip
9001cde2:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001cde6:	bf38      	it	cc
9001cde8:	46a2      	movcc	sl, r4
9001cdea:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001cdee:	2900      	cmp	r1, #0
9001cdf0:	d066      	beq.n	9001cec0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001cdf2:	29ff      	cmp	r1, #255	@ 0xff
9001cdf4:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001cdf8:	d114      	bne.n	9001ce24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001cdfa:	9d02      	ldr	r5, [sp, #8]
9001cdfc:	2dff      	cmp	r5, #255	@ 0xff
9001cdfe:	d111      	bne.n	9001ce24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001ce00:	0951      	lsrs	r1, r2, #5
9001ce02:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ce06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ce0a:	4486      	add	lr, r0
9001ce0c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001ce10:	f026 0607 	bic.w	r6, r6, #7
9001ce14:	430e      	orrs	r6, r1
9001ce16:	4316      	orrs	r6, r2
9001ce18:	b2b6      	uxth	r6, r6
9001ce1a:	4586      	cmp	lr, r0
9001ce1c:	d051      	beq.n	9001cec2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ce1e:	f820 6b02 	strh.w	r6, [r0], #2
9001ce22:	e7fa      	b.n	9001ce1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001ce24:	9d02      	ldr	r5, [sp, #8]
9001ce26:	b2f6      	uxtb	r6, r6
9001ce28:	4486      	add	lr, r0
9001ce2a:	4369      	muls	r1, r5
9001ce2c:	1c4d      	adds	r5, r1, #1
9001ce2e:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001ce32:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001ce36:	b2d2      	uxtb	r2, r2
9001ce38:	122d      	asrs	r5, r5, #8
9001ce3a:	ea6f 0b05 	mvn.w	fp, r5
9001ce3e:	b2ad      	uxth	r5, r5
9001ce40:	fb11 f105 	smulbb	r1, r1, r5
9001ce44:	fa5f fb8b 	uxtb.w	fp, fp
9001ce48:	fb16 f605 	smulbb	r6, r6, r5
9001ce4c:	fb12 f205 	smulbb	r2, r2, r5
9001ce50:	b289      	uxth	r1, r1
9001ce52:	b2b6      	uxth	r6, r6
9001ce54:	b292      	uxth	r2, r2
9001ce56:	9106      	str	r1, [sp, #24]
9001ce58:	9607      	str	r6, [sp, #28]
9001ce5a:	9208      	str	r2, [sp, #32]
9001ce5c:	4586      	cmp	lr, r0
9001ce5e:	d030      	beq.n	9001cec2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ce60:	8802      	ldrh	r2, [r0, #0]
9001ce62:	9906      	ldr	r1, [sp, #24]
9001ce64:	1216      	asrs	r6, r2, #8
9001ce66:	10d5      	asrs	r5, r2, #3
9001ce68:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001ce6c:	00d2      	lsls	r2, r2, #3
9001ce6e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001ce72:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001ce76:	b2d2      	uxtb	r2, r2
9001ce78:	fb06 160b 	mla	r6, r6, fp, r1
9001ce7c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001ce80:	9907      	ldr	r1, [sp, #28]
9001ce82:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ce86:	b2b6      	uxth	r6, r6
9001ce88:	fb05 150b 	mla	r5, r5, fp, r1
9001ce8c:	9908      	ldr	r1, [sp, #32]
9001ce8e:	fb02 120b 	mla	r2, r2, fp, r1
9001ce92:	1c71      	adds	r1, r6, #1
9001ce94:	b2ad      	uxth	r5, r5
9001ce96:	b292      	uxth	r2, r2
9001ce98:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001ce9c:	1c51      	adds	r1, r2, #1
9001ce9e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001cea2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001cea6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ceaa:	4316      	orrs	r6, r2
9001ceac:	1c6a      	adds	r2, r5, #1
9001ceae:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001ceb2:	096d      	lsrs	r5, r5, #5
9001ceb4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ceb8:	432e      	orrs	r6, r5
9001ceba:	f820 6b02 	strh.w	r6, [r0], #2
9001cebe:	e7cd      	b.n	9001ce5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001cec0:	4470      	add	r0, lr
9001cec2:	4543      	cmp	r3, r8
9001cec4:	f4ff af73 	bcc.w	9001cdae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001cec8:	fa1f fc89 	uxth.w	ip, r9
9001cecc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001ced0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ced2:	eba4 040c 	sub.w	r4, r4, ip
9001ced6:	881b      	ldrh	r3, [r3, #0]
9001ced8:	b2a4      	uxth	r4, r4
9001ceda:	eba3 0309 	sub.w	r3, r3, r9
9001cede:	2c00      	cmp	r4, #0
9001cee0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cee4:	bf18      	it	ne
9001cee6:	f04f 0c00 	movne.w	ip, #0
9001ceea:	e760      	b.n	9001cdae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ceec:	4b03      	ldr	r3, [pc, #12]	@ (9001cefc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ceee:	6818      	ldr	r0, [r3, #0]
9001cef0:	6803      	ldr	r3, [r0, #0]
9001cef2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001cef4:	4798      	blx	r3
9001cef6:	b00f      	add	sp, #60	@ 0x3c
9001cef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cefc:	240218b4 	.word	0x240218b4
9001cf00:	240218ae 	.word	0x240218ae

9001cf04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001cf04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cf08:	b093      	sub	sp, #76	@ 0x4c
9001cf0a:	461c      	mov	r4, r3
9001cf0c:	9205      	str	r2, [sp, #20]
9001cf0e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001cf12:	9101      	str	r1, [sp, #4]
9001cf14:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001cf16:	9202      	str	r2, [sp, #8]
9001cf18:	2a00      	cmp	r2, #0
9001cf1a:	f000 812e 	beq.w	9001d17a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001cf1e:	6820      	ldr	r0, [r4, #0]
9001cf20:	aa0e      	add	r2, sp, #56	@ 0x38
9001cf22:	6861      	ldr	r1, [r4, #4]
9001cf24:	c203      	stmia	r2!, {r0, r1}
9001cf26:	6818      	ldr	r0, [r3, #0]
9001cf28:	aa10      	add	r2, sp, #64	@ 0x40
9001cf2a:	6859      	ldr	r1, [r3, #4]
9001cf2c:	c203      	stmia	r2!, {r0, r1}
9001cf2e:	a80e      	add	r0, sp, #56	@ 0x38
9001cf30:	f7f8 f850 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cf34:	4621      	mov	r1, r4
9001cf36:	a810      	add	r0, sp, #64	@ 0x40
9001cf38:	f7f8 f874 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cf3c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001cf40:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001cf44:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001cf48:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001cf4c:	bfdb      	ittet	le
9001cf4e:	b2b3      	uxthle	r3, r6
9001cf50:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001cf54:	2301      	movgt	r3, #1
9001cf56:	fb92 f3f3 	sdivle	r3, r2, r3
9001cf5a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001cf5e:	441d      	add	r5, r3
9001cf60:	fb92 f1f3 	sdiv	r1, r2, r3
9001cf64:	fa1f fc81 	uxth.w	ip, r1
9001cf68:	3d01      	subs	r5, #1
9001cf6a:	fb0c 2413 	mls	r4, ip, r3, r2
9001cf6e:	4661      	mov	r1, ip
9001cf70:	fb14 f406 	smulbb	r4, r4, r6
9001cf74:	4404      	add	r4, r0
9001cf76:	fb95 f5f3 	sdiv	r5, r5, r3
9001cf7a:	b2a4      	uxth	r4, r4
9001cf7c:	b131      	cbz	r1, 9001cf8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001cf7e:	9b05      	ldr	r3, [sp, #20]
9001cf80:	9901      	ldr	r1, [sp, #4]
9001cf82:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001cf86:	ba1b      	rev	r3, r3
9001cf88:	4419      	add	r1, r3
9001cf8a:	9101      	str	r1, [sp, #4]
9001cf8c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001cf90:	b2ad      	uxth	r5, r5
9001cf92:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001cf96:	4418      	add	r0, r3
9001cf98:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001cf9c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001cfa0:	00ad      	lsls	r5, r5, #2
9001cfa2:	441a      	add	r2, r3
9001cfa4:	4b76      	ldr	r3, [pc, #472]	@ (9001d180 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001cfa6:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001cfaa:	6818      	ldr	r0, [r3, #0]
9001cfac:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001cfb0:	6803      	ldr	r3, [r0, #0]
9001cfb2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001cfb4:	4798      	blx	r3
9001cfb6:	4973      	ldr	r1, [pc, #460]	@ (9001d184 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001cfb8:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001cfbc:	2c00      	cmp	r4, #0
9001cfbe:	880b      	ldrh	r3, [r1, #0]
9001cfc0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001cfc4:	910d      	str	r1, [sp, #52]	@ 0x34
9001cfc6:	fb03 c202 	mla	r2, r3, r2, ip
9001cfca:	bf08      	it	eq
9001cfcc:	46dc      	moveq	ip, fp
9001cfce:	fb03 f306 	mul.w	r3, r3, r6
9001cfd2:	bf18      	it	ne
9001cfd4:	f04f 0c00 	movne.w	ip, #0
9001cfd8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cfdc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001cfe0:	fa1f fc8c 	uxth.w	ip, ip
9001cfe4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001cfe8:	9106      	str	r1, [sp, #24]
9001cfea:	9308      	str	r3, [sp, #32]
9001cfec:	1d2b      	adds	r3, r5, #4
9001cfee:	9309      	str	r3, [sp, #36]	@ 0x24
9001cff0:	9b02      	ldr	r3, [sp, #8]
9001cff2:	43da      	mvns	r2, r3
9001cff4:	2300      	movs	r3, #0
9001cff6:	b2d2      	uxtb	r2, r2
9001cff8:	9303      	str	r3, [sp, #12]
9001cffa:	9207      	str	r2, [sp, #28]
9001cffc:	9a08      	ldr	r2, [sp, #32]
9001cffe:	4282      	cmp	r2, r0
9001d000:	f240 80b6 	bls.w	9001d170 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001d004:	b963      	cbnz	r3, 9001d020 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001d006:	9b01      	ldr	r3, [sp, #4]
9001d008:	781a      	ldrb	r2, [r3, #0]
9001d00a:	0993      	lsrs	r3, r2, #6
9001d00c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001d010:	9203      	str	r2, [sp, #12]
9001d012:	1e5a      	subs	r2, r3, #1
9001d014:	2a02      	cmp	r2, #2
9001d016:	d815      	bhi.n	9001d044 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001d018:	9a01      	ldr	r2, [sp, #4]
9001d01a:	b29b      	uxth	r3, r3
9001d01c:	3201      	adds	r2, #1
9001d01e:	9201      	str	r2, [sp, #4]
9001d020:	b1b4      	cbz	r4, 9001d050 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001d022:	429c      	cmp	r4, r3
9001d024:	bf91      	iteee	ls
9001d026:	1b1c      	subls	r4, r3, r4
9001d028:	1ae4      	subhi	r4, r4, r3
9001d02a:	4666      	movhi	r6, ip
9001d02c:	f04f 0800 	movhi.w	r8, #0
9001d030:	bf9b      	ittet	ls
9001d032:	fa1f f884 	uxthls.w	r8, r4
9001d036:	2400      	movls	r4, #0
9001d038:	b2a4      	uxthhi	r4, r4
9001d03a:	fa1f f68b 	uxthls.w	r6, fp
9001d03e:	4643      	mov	r3, r8
9001d040:	46b4      	mov	ip, r6
9001d042:	e7db      	b.n	9001cffc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001d044:	9a01      	ldr	r2, [sp, #4]
9001d046:	9b01      	ldr	r3, [sp, #4]
9001d048:	3202      	adds	r2, #2
9001d04a:	785b      	ldrb	r3, [r3, #1]
9001d04c:	9201      	str	r2, [sp, #4]
9001d04e:	e7e7      	b.n	9001d020 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001d050:	2203      	movs	r2, #3
9001d052:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001d054:	4563      	cmp	r3, ip
9001d056:	4615      	mov	r5, r2
9001d058:	9a03      	ldr	r2, [sp, #12]
9001d05a:	bf2c      	ite	cs
9001d05c:	eba3 080c 	subcs.w	r8, r3, ip
9001d060:	ebac 0603 	subcc.w	r6, ip, r3
9001d064:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d068:	9905      	ldr	r1, [sp, #20]
9001d06a:	bf24      	itt	cs
9001d06c:	fa1f f888 	uxthcs.w	r8, r8
9001d070:	46e1      	movcs	r9, ip
9001d072:	eb01 0502 	add.w	r5, r1, r2
9001d076:	9902      	ldr	r1, [sp, #8]
9001d078:	bf2f      	iteee	cs
9001d07a:	4626      	movcs	r6, r4
9001d07c:	b2b6      	uxthcc	r6, r6
9001d07e:	4699      	movcc	r9, r3
9001d080:	46a0      	movcc	r8, r4
9001d082:	29ff      	cmp	r1, #255	@ 0xff
9001d084:	d04a      	beq.n	9001d11c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001d086:	9f06      	ldr	r7, [sp, #24]
9001d088:	46ca      	mov	sl, r9
9001d08a:	78a9      	ldrb	r1, [r5, #2]
9001d08c:	9004      	str	r0, [sp, #16]
9001d08e:	4379      	muls	r1, r7
9001d090:	910a      	str	r1, [sp, #40]	@ 0x28
9001d092:	7869      	ldrb	r1, [r5, #1]
9001d094:	4379      	muls	r1, r7
9001d096:	910b      	str	r1, [sp, #44]	@ 0x2c
9001d098:	9905      	ldr	r1, [sp, #20]
9001d09a:	5c8a      	ldrb	r2, [r1, r2]
9001d09c:	437a      	muls	r2, r7
9001d09e:	920c      	str	r2, [sp, #48]	@ 0x30
9001d0a0:	f1ba 0f00 	cmp.w	sl, #0
9001d0a4:	d03d      	beq.n	9001d122 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001d0a6:	9a04      	ldr	r2, [sp, #16]
9001d0a8:	f10a 3aff 	add.w	sl, sl, #4294967295
9001d0ac:	9f07      	ldr	r7, [sp, #28]
9001d0ae:	8812      	ldrh	r2, [r2, #0]
9001d0b0:	fa1f fa8a 	uxth.w	sl, sl
9001d0b4:	46be      	mov	lr, r7
9001d0b6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001d0b8:	1215      	asrs	r5, r2, #8
9001d0ba:	10d1      	asrs	r1, r2, #3
9001d0bc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001d0c0:	00d2      	lsls	r2, r2, #3
9001d0c2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001d0c6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001d0ca:	b2d2      	uxtb	r2, r2
9001d0cc:	fb05 750e 	mla	r5, r5, lr, r7
9001d0d0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001d0d4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001d0d6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d0da:	b2ad      	uxth	r5, r5
9001d0dc:	fb01 710e 	mla	r1, r1, lr, r7
9001d0e0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001d0e2:	fb02 720e 	mla	r2, r2, lr, r7
9001d0e6:	f105 0e01 	add.w	lr, r5, #1
9001d0ea:	b289      	uxth	r1, r1
9001d0ec:	b292      	uxth	r2, r2
9001d0ee:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d0f2:	f102 0e01 	add.w	lr, r2, #1
9001d0f6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001d0fa:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001d0fe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d102:	4315      	orrs	r5, r2
9001d104:	1c4a      	adds	r2, r1, #1
9001d106:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001d10a:	9a04      	ldr	r2, [sp, #16]
9001d10c:	0949      	lsrs	r1, r1, #5
9001d10e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001d112:	430d      	orrs	r5, r1
9001d114:	f822 5b02 	strh.w	r5, [r2], #2
9001d118:	9204      	str	r2, [sp, #16]
9001d11a:	e7c1      	b.n	9001d0a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001d11c:	4649      	mov	r1, r9
9001d11e:	4686      	mov	lr, r0
9001d120:	b999      	cbnz	r1, 9001d14a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001d122:	4563      	cmp	r3, ip
9001d124:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001d128:	d389      	bcc.n	9001d03e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001d12a:	fa1f f68b 	uxth.w	r6, fp
9001d12e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001d132:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d134:	1ba4      	subs	r4, r4, r6
9001d136:	881b      	ldrh	r3, [r3, #0]
9001d138:	b2a4      	uxth	r4, r4
9001d13a:	eba3 030b 	sub.w	r3, r3, fp
9001d13e:	2c00      	cmp	r4, #0
9001d140:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d144:	bf18      	it	ne
9001d146:	2600      	movne	r6, #0
9001d148:	e779      	b.n	9001d03e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001d14a:	78aa      	ldrb	r2, [r5, #2]
9001d14c:	3901      	subs	r1, #1
9001d14e:	4f0e      	ldr	r7, [pc, #56]	@ (9001d188 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001d150:	b289      	uxth	r1, r1
9001d152:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001d156:	786a      	ldrb	r2, [r5, #1]
9001d158:	00d2      	lsls	r2, r2, #3
9001d15a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d15e:	ea4a 0202 	orr.w	r2, sl, r2
9001d162:	f895 a000 	ldrb.w	sl, [r5]
9001d166:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001d16a:	f82e 2b02 	strh.w	r2, [lr], #2
9001d16e:	e7d7      	b.n	9001d120 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001d170:	4b03      	ldr	r3, [pc, #12]	@ (9001d180 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001d172:	6818      	ldr	r0, [r3, #0]
9001d174:	6803      	ldr	r3, [r0, #0]
9001d176:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d178:	4798      	blx	r3
9001d17a:	b013      	add	sp, #76	@ 0x4c
9001d17c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d180:	240218b4 	.word	0x240218b4
9001d184:	240218ae 	.word	0x240218ae
9001d188:	fffff800 	.word	0xfffff800

9001d18c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001d18c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d190:	b09d      	sub	sp, #116	@ 0x74
9001d192:	461c      	mov	r4, r3
9001d194:	4683      	mov	fp, r0
9001d196:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001d198:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001d19c:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001d1a0:	920e      	str	r2, [sp, #56]	@ 0x38
9001d1a2:	2a00      	cmp	r2, #0
9001d1a4:	f000 81e4 	beq.w	9001d570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001d1a8:	6820      	ldr	r0, [r4, #0]
9001d1aa:	aa18      	add	r2, sp, #96	@ 0x60
9001d1ac:	6861      	ldr	r1, [r4, #4]
9001d1ae:	c203      	stmia	r2!, {r0, r1}
9001d1b0:	6818      	ldr	r0, [r3, #0]
9001d1b2:	aa1a      	add	r2, sp, #104	@ 0x68
9001d1b4:	6859      	ldr	r1, [r3, #4]
9001d1b6:	c203      	stmia	r2!, {r0, r1}
9001d1b8:	a818      	add	r0, sp, #96	@ 0x60
9001d1ba:	f7f7 ff0b 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d1be:	4621      	mov	r1, r4
9001d1c0:	a81a      	add	r0, sp, #104	@ 0x68
9001d1c2:	f7f7 ff2f 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d1c6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001d1ca:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001d1ce:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001d1d2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001d1d6:	bfdb      	ittet	le
9001d1d8:	b29a      	uxthle	r2, r3
9001d1da:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d1de:	2201      	movgt	r2, #1
9001d1e0:	fb91 f2f2 	sdivle	r2, r1, r2
9001d1e4:	9202      	str	r2, [sp, #8]
9001d1e6:	9802      	ldr	r0, [sp, #8]
9001d1e8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001d1ec:	9902      	ldr	r1, [sp, #8]
9001d1ee:	fb92 f0f0 	sdiv	r0, r2, r0
9001d1f2:	b280      	uxth	r0, r0
9001d1f4:	440c      	add	r4, r1
9001d1f6:	900f      	str	r0, [sp, #60]	@ 0x3c
9001d1f8:	3c01      	subs	r4, #1
9001d1fa:	9802      	ldr	r0, [sp, #8]
9001d1fc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001d1fe:	fb05 2510 	mls	r5, r5, r0, r2
9001d202:	fb94 f4f1 	sdiv	r4, r4, r1
9001d206:	fb15 f503 	smulbb	r5, r5, r3
9001d20a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001d20e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001d212:	3401      	adds	r4, #1
9001d214:	440d      	add	r5, r1
9001d216:	4419      	add	r1, r3
9001d218:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001d21c:	b2a4      	uxth	r4, r4
9001d21e:	441a      	add	r2, r3
9001d220:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001d224:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001d228:	00a4      	lsls	r4, r4, #2
9001d22a:	9306      	str	r3, [sp, #24]
9001d22c:	b2ad      	uxth	r5, r5
9001d22e:	4bb3      	ldr	r3, [pc, #716]	@ (9001d4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001d230:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001d234:	6818      	ldr	r0, [r3, #0]
9001d236:	6803      	ldr	r3, [r0, #0]
9001d238:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d23a:	4798      	blx	r3
9001d23c:	4bb0      	ldr	r3, [pc, #704]	@ (9001d500 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001d23e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001d242:	2d00      	cmp	r5, #0
9001d244:	881a      	ldrh	r2, [r3, #0]
9001d246:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001d24a:	fb02 f606 	mul.w	r6, r2, r6
9001d24e:	fb02 7101 	mla	r1, r2, r1, r7
9001d252:	9316      	str	r3, [sp, #88]	@ 0x58
9001d254:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001d258:	4baa      	ldr	r3, [pc, #680]	@ (9001d504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001d25a:	bf18      	it	ne
9001d25c:	2100      	movne	r1, #0
9001d25e:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001d262:	eba3 030b 	sub.w	r3, r3, fp
9001d266:	920a      	str	r2, [sp, #40]	@ 0x28
9001d268:	f104 0204 	add.w	r2, r4, #4
9001d26c:	9317      	str	r3, [sp, #92]	@ 0x5c
9001d26e:	9213      	str	r2, [sp, #76]	@ 0x4c
9001d270:	9a06      	ldr	r2, [sp, #24]
9001d272:	bf08      	it	eq
9001d274:	4611      	moveq	r1, r2
9001d276:	2200      	movs	r2, #0
9001d278:	b289      	uxth	r1, r1
9001d27a:	920d      	str	r2, [sp, #52]	@ 0x34
9001d27c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d27e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d280:	fa12 f383 	uxtah	r3, r2, r3
9001d284:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d286:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001d28a:	3304      	adds	r3, #4
9001d28c:	9308      	str	r3, [sp, #32]
9001d28e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001d290:	4543      	cmp	r3, r8
9001d292:	f240 8168 	bls.w	9001d566 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001d296:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001d29a:	f04f 0e01 	mov.w	lr, #1
9001d29e:	9a02      	ldr	r2, [sp, #8]
9001d2a0:	9808      	ldr	r0, [sp, #32]
9001d2a2:	fbb5 f3f3 	udiv	r3, r5, r3
9001d2a6:	1ad3      	subs	r3, r2, r3
9001d2a8:	7800      	ldrb	r0, [r0, #0]
9001d2aa:	b29b      	uxth	r3, r3
9001d2ac:	9010      	str	r0, [sp, #64]	@ 0x40
9001d2ae:	3001      	adds	r0, #1
9001d2b0:	9314      	str	r3, [sp, #80]	@ 0x50
9001d2b2:	9b08      	ldr	r3, [sp, #32]
9001d2b4:	9007      	str	r0, [sp, #28]
9001d2b6:	785a      	ldrb	r2, [r3, #1]
9001d2b8:	789b      	ldrb	r3, [r3, #2]
9001d2ba:	021b      	lsls	r3, r3, #8
9001d2bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001d2c0:	9a08      	ldr	r2, [sp, #32]
9001d2c2:	78d2      	ldrb	r2, [r2, #3]
9001d2c4:	4313      	orrs	r3, r2
9001d2c6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d2c8:	441a      	add	r2, r3
9001d2ca:	1c50      	adds	r0, r2, #1
9001d2cc:	7852      	ldrb	r2, [r2, #1]
9001d2ce:	9005      	str	r0, [sp, #20]
9001d2d0:	0212      	lsls	r2, r2, #8
9001d2d2:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d2d4:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001d2d8:	5cc3      	ldrb	r3, [r0, r3]
9001d2da:	431a      	orrs	r2, r3
9001d2dc:	b293      	uxth	r3, r2
9001d2de:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001d2e2:	930b      	str	r3, [sp, #44]	@ 0x2c
9001d2e4:	2300      	movs	r3, #0
9001d2e6:	9309      	str	r3, [sp, #36]	@ 0x24
9001d2e8:	2301      	movs	r3, #1
9001d2ea:	9301      	str	r3, [sp, #4]
9001d2ec:	9304      	str	r3, [sp, #16]
9001d2ee:	2300      	movs	r3, #0
9001d2f0:	9303      	str	r3, [sp, #12]
9001d2f2:	2d00      	cmp	r5, #0
9001d2f4:	d07d      	beq.n	9001d3f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001d2f6:	45ae      	cmp	lr, r5
9001d2f8:	d26c      	bcs.n	9001d3d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001d2fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001d2fc:	eba5 050e 	sub.w	r5, r5, lr
9001d300:	460c      	mov	r4, r1
9001d302:	4543      	cmp	r3, r8
9001d304:	b2ad      	uxth	r5, r5
9001d306:	d802      	bhi.n	9001d30e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001d308:	e071      	b.n	9001d3ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001d30a:	2b00      	cmp	r3, #0
9001d30c:	d15d      	bne.n	9001d3ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001d30e:	9b05      	ldr	r3, [sp, #20]
9001d310:	9a04      	ldr	r2, [sp, #16]
9001d312:	785b      	ldrb	r3, [r3, #1]
9001d314:	f1c2 0207 	rsb	r2, r2, #7
9001d318:	9904      	ldr	r1, [sp, #16]
9001d31a:	4093      	lsls	r3, r2
9001d31c:	005b      	lsls	r3, r3, #1
9001d31e:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001d322:	9b05      	ldr	r3, [sp, #20]
9001d324:	781b      	ldrb	r3, [r3, #0]
9001d326:	410b      	asrs	r3, r1
9001d328:	3101      	adds	r1, #1
9001d32a:	b2c9      	uxtb	r1, r1
9001d32c:	b2db      	uxtb	r3, r3
9001d32e:	2908      	cmp	r1, #8
9001d330:	9104      	str	r1, [sp, #16]
9001d332:	9905      	ldr	r1, [sp, #20]
9001d334:	ea43 0302 	orr.w	r3, r3, r2
9001d338:	bf0c      	ite	eq
9001d33a:	3102      	addeq	r1, #2
9001d33c:	3101      	addne	r1, #1
9001d33e:	b29a      	uxth	r2, r3
9001d340:	bf05      	ittet	eq
9001d342:	9105      	streq	r1, [sp, #20]
9001d344:	2100      	moveq	r1, #0
9001d346:	9105      	strne	r1, [sp, #20]
9001d348:	9104      	streq	r1, [sp, #16]
9001d34a:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001d34c:	4291      	cmp	r1, r2
9001d34e:	d30a      	bcc.n	9001d366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001d350:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001d354:	2301      	movs	r3, #1
9001d356:	9907      	ldr	r1, [sp, #28]
9001d358:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001d35c:	d30f      	bcc.n	9001d37e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001d35e:	2100      	movs	r1, #0
9001d360:	9301      	str	r3, [sp, #4]
9001d362:	9103      	str	r1, [sp, #12]
9001d364:	e032      	b.n	9001d3cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001d366:	9b07      	ldr	r3, [sp, #28]
9001d368:	429a      	cmp	r2, r3
9001d36a:	d318      	bcc.n	9001d39e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001d36c:	9b01      	ldr	r3, [sp, #4]
9001d36e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001d372:	445b      	add	r3, fp
9001d374:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001d378:	9b01      	ldr	r3, [sp, #4]
9001d37a:	3301      	adds	r3, #1
9001d37c:	b29b      	uxth	r3, r3
9001d37e:	9907      	ldr	r1, [sp, #28]
9001d380:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001d384:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d388:	7108      	strb	r0, [r1, #4]
9001d38a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001d38c:	80c8      	strh	r0, [r1, #6]
9001d38e:	9801      	ldr	r0, [sp, #4]
9001d390:	3001      	adds	r0, #1
9001d392:	7148      	strb	r0, [r1, #5]
9001d394:	9907      	ldr	r1, [sp, #28]
9001d396:	3101      	adds	r1, #1
9001d398:	b289      	uxth	r1, r1
9001d39a:	9107      	str	r1, [sp, #28]
9001d39c:	e7df      	b.n	9001d35e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001d39e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001d3a2:	4611      	mov	r1, r2
9001d3a4:	795b      	ldrb	r3, [r3, #5]
9001d3a6:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001d3aa:	4458      	add	r0, fp
9001d3ac:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001d3ae:	4406      	add	r6, r0
9001d3b0:	2e00      	cmp	r6, #0
9001d3b2:	dd06      	ble.n	9001d3c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d3b4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d3b8:	790e      	ldrb	r6, [r1, #4]
9001d3ba:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001d3be:	88c9      	ldrh	r1, [r1, #6]
9001d3c0:	e7f4      	b.n	9001d3ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001d3c2:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001d3c6:	b29b      	uxth	r3, r3
9001d3c8:	e7c5      	b.n	9001d356 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001d3ca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001d3cc:	4621      	mov	r1, r4
9001d3ce:	920b      	str	r2, [sp, #44]	@ 0x2c
9001d3d0:	469e      	mov	lr, r3
9001d3d2:	e78e      	b.n	9001d2f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001d3d4:	9a03      	ldr	r2, [sp, #12]
9001d3d6:	ebae 0305 	sub.w	r3, lr, r5
9001d3da:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d3de:	442a      	add	r2, r5
9001d3e0:	b29b      	uxth	r3, r3
9001d3e2:	b292      	uxth	r2, r2
9001d3e4:	9203      	str	r2, [sp, #12]
9001d3e6:	2500      	movs	r5, #0
9001d3e8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001d3ea:	4542      	cmp	r2, r8
9001d3ec:	d88d      	bhi.n	9001d30a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001d3ee:	4621      	mov	r1, r4
9001d3f0:	e74d      	b.n	9001d28e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001d3f2:	458e      	cmp	lr, r1
9001d3f4:	f04f 0900 	mov.w	r9, #0
9001d3f8:	bf2b      	itete	cs
9001d3fa:	ebae 0301 	subcs.w	r3, lr, r1
9001d3fe:	eba1 040e 	subcc.w	r4, r1, lr
9001d402:	462c      	movcs	r4, r5
9001d404:	462b      	movcc	r3, r5
9001d406:	bf27      	ittee	cs
9001d408:	b29b      	uxthcs	r3, r3
9001d40a:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001d40c:	b2a4      	uxthcc	r4, r4
9001d40e:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001d412:	9a03      	ldr	r2, [sp, #12]
9001d414:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001d416:	444a      	add	r2, r9
9001d418:	4548      	cmp	r0, r9
9001d41a:	b292      	uxth	r2, r2
9001d41c:	d074      	beq.n	9001d508 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001d41e:	2004      	movs	r0, #4
9001d420:	445a      	add	r2, fp
9001d422:	4605      	mov	r5, r0
9001d424:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001d428:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d42a:	fb15 0202 	smlabb	r2, r5, r2, r0
9001d42e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d430:	5880      	ldr	r0, [r0, r2]
9001d432:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001d436:	d014      	beq.n	9001d462 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d438:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001d43c:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001d440:	d112      	bne.n	9001d468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d442:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001d444:	2aff      	cmp	r2, #255	@ 0xff
9001d446:	d10f      	bne.n	9001d468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d448:	0942      	lsrs	r2, r0, #5
9001d44a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001d44e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d452:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d456:	f025 0507 	bic.w	r5, r5, #7
9001d45a:	4315      	orrs	r5, r2
9001d45c:	4305      	orrs	r5, r0
9001d45e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001d462:	f109 0901 	add.w	r9, r9, #1
9001d466:	e7d4      	b.n	9001d412 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001d468:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001d46c:	b2ed      	uxtb	r5, r5
9001d46e:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d472:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d476:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001d47a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d47e:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001d482:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d486:	9215      	str	r2, [sp, #84]	@ 0x54
9001d488:	fa5f fc8c 	uxtb.w	ip, ip
9001d48c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001d48e:	b2c0      	uxtb	r0, r0
9001d490:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001d494:	fb02 fa0a 	mul.w	sl, r2, sl
9001d498:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001d49c:	f10a 0201 	add.w	r2, sl, #1
9001d4a0:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001d4a4:	1212      	asrs	r2, r2, #8
9001d4a6:	fa1f fa82 	uxth.w	sl, r2
9001d4aa:	43d2      	mvns	r2, r2
9001d4ac:	fb16 f60a 	smulbb	r6, r6, sl
9001d4b0:	b2d2      	uxtb	r2, r2
9001d4b2:	fb10 f00a 	smulbb	r0, r0, sl
9001d4b6:	fb07 6702 	mla	r7, r7, r2, r6
9001d4ba:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001d4bc:	fb0c 0002 	mla	r0, ip, r2, r0
9001d4c0:	fb15 f50a 	smulbb	r5, r5, sl
9001d4c4:	b2bf      	uxth	r7, r7
9001d4c6:	b280      	uxth	r0, r0
9001d4c8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001d4cc:	fb06 5602 	mla	r6, r6, r2, r5
9001d4d0:	1c7a      	adds	r2, r7, #1
9001d4d2:	1c45      	adds	r5, r0, #1
9001d4d4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d4d8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d4dc:	b2b6      	uxth	r6, r6
9001d4de:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d4e2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d4e6:	432f      	orrs	r7, r5
9001d4e8:	1c75      	adds	r5, r6, #1
9001d4ea:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001d4ee:	096d      	lsrs	r5, r5, #5
9001d4f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d4f4:	432f      	orrs	r7, r5
9001d4f6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001d4fa:	e7b2      	b.n	9001d462 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d4fc:	240218b4 	.word	0x240218b4
9001d500:	240218ae 	.word	0x240218ae
9001d504:	fffff7fb 	.word	0xfffff7fb
9001d508:	9203      	str	r2, [sp, #12]
9001d50a:	458e      	cmp	lr, r1
9001d50c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001d50e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d512:	f4ff af68 	bcc.w	9001d3e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001d516:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001d518:	9906      	ldr	r1, [sp, #24]
9001d51a:	8812      	ldrh	r2, [r2, #0]
9001d51c:	1a52      	subs	r2, r2, r1
9001d51e:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001d520:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d524:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001d526:	3201      	adds	r2, #1
9001d528:	428a      	cmp	r2, r1
9001d52a:	9209      	str	r2, [sp, #36]	@ 0x24
9001d52c:	d111      	bne.n	9001d552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001d52e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001d532:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001d536:	9b06      	ldr	r3, [sp, #24]
9001d538:	eba5 0509 	sub.w	r5, r5, r9
9001d53c:	b2ad      	uxth	r5, r5
9001d53e:	2d00      	cmp	r5, #0
9001d540:	bf08      	it	eq
9001d542:	4619      	moveq	r1, r3
9001d544:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d546:	bf18      	it	ne
9001d548:	2100      	movne	r1, #0
9001d54a:	3301      	adds	r3, #1
9001d54c:	b289      	uxth	r1, r1
9001d54e:	930d      	str	r3, [sp, #52]	@ 0x34
9001d550:	e694      	b.n	9001d27c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001d552:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d556:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001d55a:	1b2d      	subs	r5, r5, r4
9001d55c:	b2ad      	uxth	r5, r5
9001d55e:	2d00      	cmp	r5, #0
9001d560:	bf18      	it	ne
9001d562:	2400      	movne	r4, #0
9001d564:	e740      	b.n	9001d3e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001d566:	4b04      	ldr	r3, [pc, #16]	@ (9001d578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001d568:	6818      	ldr	r0, [r3, #0]
9001d56a:	6803      	ldr	r3, [r0, #0]
9001d56c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d56e:	4798      	blx	r3
9001d570:	b01d      	add	sp, #116	@ 0x74
9001d572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d576:	bf00      	nop
9001d578:	240218b4 	.word	0x240218b4

9001d57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001d57c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d580:	b09f      	sub	sp, #124	@ 0x7c
9001d582:	461d      	mov	r5, r3
9001d584:	4604      	mov	r4, r0
9001d586:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001d588:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001d58c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001d590:	920a      	str	r2, [sp, #40]	@ 0x28
9001d592:	2a00      	cmp	r2, #0
9001d594:	f000 81fe 	beq.w	9001d994 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001d598:	6828      	ldr	r0, [r5, #0]
9001d59a:	aa1a      	add	r2, sp, #104	@ 0x68
9001d59c:	6869      	ldr	r1, [r5, #4]
9001d59e:	c203      	stmia	r2!, {r0, r1}
9001d5a0:	6818      	ldr	r0, [r3, #0]
9001d5a2:	aa1c      	add	r2, sp, #112	@ 0x70
9001d5a4:	6859      	ldr	r1, [r3, #4]
9001d5a6:	c203      	stmia	r2!, {r0, r1}
9001d5a8:	a81a      	add	r0, sp, #104	@ 0x68
9001d5aa:	f7f7 fd13 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d5ae:	4629      	mov	r1, r5
9001d5b0:	a81c      	add	r0, sp, #112	@ 0x70
9001d5b2:	f7f7 fd37 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d5b6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001d5ba:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001d5be:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001d5c2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001d5c6:	bfdb      	ittet	le
9001d5c8:	b29a      	uxthle	r2, r3
9001d5ca:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d5ce:	2201      	movgt	r2, #1
9001d5d0:	fb91 f2f2 	sdivle	r2, r1, r2
9001d5d4:	9201      	str	r2, [sp, #4]
9001d5d6:	9801      	ldr	r0, [sp, #4]
9001d5d8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001d5dc:	9901      	ldr	r1, [sp, #4]
9001d5de:	fb92 f0f0 	sdiv	r0, r2, r0
9001d5e2:	b280      	uxth	r0, r0
9001d5e4:	440e      	add	r6, r1
9001d5e6:	9010      	str	r0, [sp, #64]	@ 0x40
9001d5e8:	3e01      	subs	r6, #1
9001d5ea:	9801      	ldr	r0, [sp, #4]
9001d5ec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001d5ee:	fb05 2510 	mls	r5, r5, r0, r2
9001d5f2:	fb96 f6f1 	sdiv	r6, r6, r1
9001d5f6:	fb15 f503 	smulbb	r5, r5, r3
9001d5fa:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001d5fe:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001d602:	3601      	adds	r6, #1
9001d604:	440d      	add	r5, r1
9001d606:	4419      	add	r1, r3
9001d608:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001d60c:	b2b6      	uxth	r6, r6
9001d60e:	441a      	add	r2, r3
9001d610:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001d614:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001d618:	b2ad      	uxth	r5, r5
9001d61a:	9304      	str	r3, [sp, #16]
9001d61c:	4b96      	ldr	r3, [pc, #600]	@ (9001d878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001d61e:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001d622:	6818      	ldr	r0, [r3, #0]
9001d624:	6803      	ldr	r3, [r0, #0]
9001d626:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d628:	4798      	blx	r3
9001d62a:	4b94      	ldr	r3, [pc, #592]	@ (9001d87c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001d62c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001d630:	2d00      	cmp	r5, #0
9001d632:	881a      	ldrh	r2, [r3, #0]
9001d634:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001d638:	fb02 f707 	mul.w	r7, r2, r7
9001d63c:	fb02 c101 	mla	r1, r2, r1, ip
9001d640:	9318      	str	r3, [sp, #96]	@ 0x60
9001d642:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001d646:	4b8e      	ldr	r3, [pc, #568]	@ (9001d880 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001d648:	bf18      	it	ne
9001d64a:	2100      	movne	r1, #0
9001d64c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001d650:	eba3 0304 	sub.w	r3, r3, r4
9001d654:	920b      	str	r2, [sp, #44]	@ 0x2c
9001d656:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d658:	9319      	str	r3, [sp, #100]	@ 0x64
9001d65a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001d65e:	f106 0204 	add.w	r2, r6, #4
9001d662:	9206      	str	r2, [sp, #24]
9001d664:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001d666:	ea6f 0202 	mvn.w	r2, r2
9001d66a:	b2d2      	uxtb	r2, r2
9001d66c:	9215      	str	r2, [sp, #84]	@ 0x54
9001d66e:	9a04      	ldr	r2, [sp, #16]
9001d670:	bf08      	it	eq
9001d672:	4611      	moveq	r1, r2
9001d674:	2200      	movs	r2, #0
9001d676:	b289      	uxth	r1, r1
9001d678:	920d      	str	r2, [sp, #52]	@ 0x34
9001d67a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d67c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d67e:	fa12 f383 	uxtah	r3, r2, r3
9001d682:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d684:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001d688:	3304      	adds	r3, #4
9001d68a:	9307      	str	r3, [sp, #28]
9001d68c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001d68e:	455b      	cmp	r3, fp
9001d690:	f240 817b 	bls.w	9001d98a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001d694:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001d698:	f04f 0801 	mov.w	r8, #1
9001d69c:	9a01      	ldr	r2, [sp, #4]
9001d69e:	9807      	ldr	r0, [sp, #28]
9001d6a0:	46c4      	mov	ip, r8
9001d6a2:	f8cd 8008 	str.w	r8, [sp, #8]
9001d6a6:	7800      	ldrb	r0, [r0, #0]
9001d6a8:	fbb5 f3f3 	udiv	r3, r5, r3
9001d6ac:	1ad3      	subs	r3, r2, r3
9001d6ae:	9011      	str	r0, [sp, #68]	@ 0x44
9001d6b0:	3001      	adds	r0, #1
9001d6b2:	b29b      	uxth	r3, r3
9001d6b4:	9005      	str	r0, [sp, #20]
9001d6b6:	9316      	str	r3, [sp, #88]	@ 0x58
9001d6b8:	9b07      	ldr	r3, [sp, #28]
9001d6ba:	785a      	ldrb	r2, [r3, #1]
9001d6bc:	789b      	ldrb	r3, [r3, #2]
9001d6be:	021b      	lsls	r3, r3, #8
9001d6c0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001d6c4:	9a07      	ldr	r2, [sp, #28]
9001d6c6:	78d2      	ldrb	r2, [r2, #3]
9001d6c8:	4313      	orrs	r3, r2
9001d6ca:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d6cc:	441a      	add	r2, r3
9001d6ce:	1c50      	adds	r0, r2, #1
9001d6d0:	7852      	ldrb	r2, [r2, #1]
9001d6d2:	9003      	str	r0, [sp, #12]
9001d6d4:	0212      	lsls	r2, r2, #8
9001d6d6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d6d8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001d6dc:	5cc3      	ldrb	r3, [r0, r3]
9001d6de:	431a      	orrs	r2, r3
9001d6e0:	b293      	uxth	r3, r2
9001d6e2:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001d6e6:	930c      	str	r3, [sp, #48]	@ 0x30
9001d6e8:	2300      	movs	r3, #0
9001d6ea:	9308      	str	r3, [sp, #32]
9001d6ec:	461a      	mov	r2, r3
9001d6ee:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001d6f2:	930e      	str	r3, [sp, #56]	@ 0x38
9001d6f4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001d6f8:	930f      	str	r3, [sp, #60]	@ 0x3c
9001d6fa:	2d00      	cmp	r5, #0
9001d6fc:	d07d      	beq.n	9001d7fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001d6fe:	45ac      	cmp	ip, r5
9001d700:	d26d      	bcs.n	9001d7de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001d702:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001d704:	eba5 050c 	sub.w	r5, r5, ip
9001d708:	4608      	mov	r0, r1
9001d70a:	455b      	cmp	r3, fp
9001d70c:	b2ad      	uxth	r5, r5
9001d70e:	d802      	bhi.n	9001d716 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001d710:	e071      	b.n	9001d7f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001d712:	2b00      	cmp	r3, #0
9001d714:	d15d      	bne.n	9001d7d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001d716:	9b03      	ldr	r3, [sp, #12]
9001d718:	9a02      	ldr	r2, [sp, #8]
9001d71a:	785b      	ldrb	r3, [r3, #1]
9001d71c:	f1c2 0207 	rsb	r2, r2, #7
9001d720:	9902      	ldr	r1, [sp, #8]
9001d722:	4093      	lsls	r3, r2
9001d724:	005b      	lsls	r3, r3, #1
9001d726:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001d72a:	9b03      	ldr	r3, [sp, #12]
9001d72c:	781b      	ldrb	r3, [r3, #0]
9001d72e:	410b      	asrs	r3, r1
9001d730:	3101      	adds	r1, #1
9001d732:	b2c9      	uxtb	r1, r1
9001d734:	b2db      	uxtb	r3, r3
9001d736:	2908      	cmp	r1, #8
9001d738:	9102      	str	r1, [sp, #8]
9001d73a:	9903      	ldr	r1, [sp, #12]
9001d73c:	ea43 0302 	orr.w	r3, r3, r2
9001d740:	bf0c      	ite	eq
9001d742:	3102      	addeq	r1, #2
9001d744:	3101      	addne	r1, #1
9001d746:	b29a      	uxth	r2, r3
9001d748:	bf05      	ittet	eq
9001d74a:	9103      	streq	r1, [sp, #12]
9001d74c:	2100      	moveq	r1, #0
9001d74e:	9103      	strne	r1, [sp, #12]
9001d750:	9102      	streq	r1, [sp, #8]
9001d752:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001d754:	4291      	cmp	r1, r2
9001d756:	d30a      	bcc.n	9001d76e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001d758:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001d75c:	2301      	movs	r3, #1
9001d75e:	9905      	ldr	r1, [sp, #20]
9001d760:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001d764:	d30f      	bcc.n	9001d786 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001d766:	2100      	movs	r1, #0
9001d768:	4698      	mov	r8, r3
9001d76a:	9100      	str	r1, [sp, #0]
9001d76c:	e032      	b.n	9001d7d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001d76e:	9b05      	ldr	r3, [sp, #20]
9001d770:	429a      	cmp	r2, r3
9001d772:	d318      	bcc.n	9001d7a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001d774:	eb04 0308 	add.w	r3, r4, r8
9001d778:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001d77c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001d780:	f108 0301 	add.w	r3, r8, #1
9001d784:	b29b      	uxth	r3, r3
9001d786:	9905      	ldr	r1, [sp, #20]
9001d788:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001d78c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001d790:	710e      	strb	r6, [r1, #4]
9001d792:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001d794:	80ce      	strh	r6, [r1, #6]
9001d796:	f108 0601 	add.w	r6, r8, #1
9001d79a:	714e      	strb	r6, [r1, #5]
9001d79c:	9905      	ldr	r1, [sp, #20]
9001d79e:	3101      	adds	r1, #1
9001d7a0:	b289      	uxth	r1, r1
9001d7a2:	9105      	str	r1, [sp, #20]
9001d7a4:	e7df      	b.n	9001d766 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001d7a6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001d7aa:	4611      	mov	r1, r2
9001d7ac:	795b      	ldrb	r3, [r3, #5]
9001d7ae:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001d7b2:	4426      	add	r6, r4
9001d7b4:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001d7b6:	4437      	add	r7, r6
9001d7b8:	2f00      	cmp	r7, #0
9001d7ba:	dd06      	ble.n	9001d7ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001d7bc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001d7c0:	790f      	ldrb	r7, [r1, #4]
9001d7c2:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001d7c6:	88c9      	ldrh	r1, [r1, #6]
9001d7c8:	e7f4      	b.n	9001d7b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001d7ca:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001d7ce:	b29b      	uxth	r3, r3
9001d7d0:	e7c5      	b.n	9001d75e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001d7d2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001d7d4:	920c      	str	r2, [sp, #48]	@ 0x30
9001d7d6:	4601      	mov	r1, r0
9001d7d8:	9a00      	ldr	r2, [sp, #0]
9001d7da:	469c      	mov	ip, r3
9001d7dc:	e78d      	b.n	9001d6fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001d7de:	ebac 0305 	sub.w	r3, ip, r5
9001d7e2:	1957      	adds	r7, r2, r5
9001d7e4:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001d7e8:	b2ba      	uxth	r2, r7
9001d7ea:	b29b      	uxth	r3, r3
9001d7ec:	9200      	str	r2, [sp, #0]
9001d7ee:	2500      	movs	r5, #0
9001d7f0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001d7f2:	455a      	cmp	r2, fp
9001d7f4:	d88d      	bhi.n	9001d712 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001d7f6:	4601      	mov	r1, r0
9001d7f8:	e748      	b.n	9001d68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001d7fa:	458c      	cmp	ip, r1
9001d7fc:	bf27      	ittee	cs
9001d7fe:	ebac 0301 	subcs.w	r3, ip, r1
9001d802:	4628      	movcs	r0, r5
9001d804:	eba1 000c 	subcc.w	r0, r1, ip
9001d808:	462b      	movcc	r3, r5
9001d80a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001d80c:	bf27      	ittee	cs
9001d80e:	b29b      	uxthcs	r3, r3
9001d810:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001d812:	b280      	uxthcc	r0, r0
9001d814:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001d818:	2dff      	cmp	r5, #255	@ 0xff
9001d81a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001d81c:	eb02 0705 	add.w	r7, r2, r5
9001d820:	b2bd      	uxth	r5, r7
9001d822:	9500      	str	r5, [sp, #0]
9001d824:	d12e      	bne.n	9001d884 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001d826:	465e      	mov	r6, fp
9001d828:	9d00      	ldr	r5, [sp, #0]
9001d82a:	42aa      	cmp	r2, r5
9001d82c:	f040 8083 	bne.w	9001d936 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001d830:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001d832:	458c      	cmp	ip, r1
9001d834:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001d838:	d3d9      	bcc.n	9001d7ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001d83a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001d83c:	9904      	ldr	r1, [sp, #16]
9001d83e:	8812      	ldrh	r2, [r2, #0]
9001d840:	1a52      	subs	r2, r2, r1
9001d842:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001d844:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001d848:	9a08      	ldr	r2, [sp, #32]
9001d84a:	3201      	adds	r2, #1
9001d84c:	428a      	cmp	r2, r1
9001d84e:	9208      	str	r2, [sp, #32]
9001d850:	f040 8091 	bne.w	9001d976 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001d854:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001d858:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001d85c:	9b04      	ldr	r3, [sp, #16]
9001d85e:	eba5 050c 	sub.w	r5, r5, ip
9001d862:	b2ad      	uxth	r5, r5
9001d864:	2d00      	cmp	r5, #0
9001d866:	bf08      	it	eq
9001d868:	4619      	moveq	r1, r3
9001d86a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d86c:	bf18      	it	ne
9001d86e:	2100      	movne	r1, #0
9001d870:	3301      	adds	r3, #1
9001d872:	b289      	uxth	r1, r1
9001d874:	930d      	str	r3, [sp, #52]	@ 0x34
9001d876:	e700      	b.n	9001d67a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001d878:	240218b4 	.word	0x240218b4
9001d87c:	240218ae 	.word	0x240218ae
9001d880:	fffff7fb 	.word	0xfffff7fb
9001d884:	46d9      	mov	r9, fp
9001d886:	9d00      	ldr	r5, [sp, #0]
9001d888:	42aa      	cmp	r2, r5
9001d88a:	d0d1      	beq.n	9001d830 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001d88c:	1c55      	adds	r5, r2, #1
9001d88e:	4422      	add	r2, r4
9001d890:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001d894:	9a06      	ldr	r2, [sp, #24]
9001d896:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d89a:	9517      	str	r5, [sp, #92]	@ 0x5c
9001d89c:	4472      	add	r2, lr
9001d89e:	9212      	str	r2, [sp, #72]	@ 0x48
9001d8a0:	f8b9 2000 	ldrh.w	r2, [r9]
9001d8a4:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001d8a6:	1216      	asrs	r6, r2, #8
9001d8a8:	f897 a002 	ldrb.w	sl, [r7, #2]
9001d8ac:	10d5      	asrs	r5, r2, #3
9001d8ae:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001d8b0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d8b4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d8b8:	00d2      	lsls	r2, r2, #3
9001d8ba:	fb1a fa07 	smulbb	sl, sl, r7
9001d8be:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001d8c2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001d8c4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001d8c8:	b2d2      	uxtb	r2, r2
9001d8ca:	fb06 a607 	mla	r6, r6, r7, sl
9001d8ce:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001d8d0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d8d4:	f897 a001 	ldrb.w	sl, [r7, #1]
9001d8d8:	b2b6      	uxth	r6, r6
9001d8da:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001d8dc:	fb1a fa07 	smulbb	sl, sl, r7
9001d8e0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001d8e2:	fb05 a507 	mla	r5, r5, r7, sl
9001d8e6:	9f06      	ldr	r7, [sp, #24]
9001d8e8:	f106 0a01 	add.w	sl, r6, #1
9001d8ec:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d8f0:	b2ad      	uxth	r5, r5
9001d8f2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001d8f4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001d8f8:	f105 0a01 	add.w	sl, r5, #1
9001d8fc:	fb1e fe07 	smulbb	lr, lr, r7
9001d900:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001d902:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d906:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001d90a:	fb02 e207 	mla	r2, r2, r7, lr
9001d90e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d912:	b292      	uxth	r2, r2
9001d914:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d918:	f102 0e01 	add.w	lr, r2, #1
9001d91c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001d920:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001d924:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001d928:	ea4e 0606 	orr.w	r6, lr, r6
9001d92c:	ea46 060a 	orr.w	r6, r6, sl
9001d930:	f829 6b02 	strh.w	r6, [r9], #2
9001d934:	e7a7      	b.n	9001d886 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001d936:	f102 0e01 	add.w	lr, r2, #1
9001d93a:	4422      	add	r2, r4
9001d93c:	9f06      	ldr	r7, [sp, #24]
9001d93e:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001d942:	9a06      	ldr	r2, [sp, #24]
9001d944:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001d948:	eb02 0a05 	add.w	sl, r2, r5
9001d94c:	4a13      	ldr	r2, [pc, #76]	@ (9001d99c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001d94e:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001d952:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001d956:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001d95a:	00d2      	lsls	r2, r2, #3
9001d95c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001d960:	ea49 0202 	orr.w	r2, r9, r2
9001d964:	f817 9005 	ldrb.w	r9, [r7, r5]
9001d968:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001d96c:	f826 2b02 	strh.w	r2, [r6], #2
9001d970:	fa1f f28e 	uxth.w	r2, lr
9001d974:	e758      	b.n	9001d828 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001d976:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001d97a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001d97e:	1a2d      	subs	r5, r5, r0
9001d980:	b2ad      	uxth	r5, r5
9001d982:	2d00      	cmp	r5, #0
9001d984:	bf18      	it	ne
9001d986:	2000      	movne	r0, #0
9001d988:	e732      	b.n	9001d7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001d98a:	4b05      	ldr	r3, [pc, #20]	@ (9001d9a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001d98c:	6818      	ldr	r0, [r3, #0]
9001d98e:	6803      	ldr	r3, [r0, #0]
9001d990:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d992:	4798      	blx	r3
9001d994:	b01f      	add	sp, #124	@ 0x7c
9001d996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d99a:	bf00      	nop
9001d99c:	fffff800 	.word	0xfffff800
9001d9a0:	240218b4 	.word	0x240218b4

9001d9a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001d9a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d9a8:	b091      	sub	sp, #68	@ 0x44
9001d9aa:	469b      	mov	fp, r3
9001d9ac:	4616      	mov	r6, r2
9001d9ae:	f9b3 2000 	ldrsh.w	r2, [r3]
9001d9b2:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001d9b6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001d9ba:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001d9be:	4604      	mov	r4, r0
9001d9c0:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001d9c4:	4640      	mov	r0, r8
9001d9c6:	460d      	mov	r5, r1
9001d9c8:	4659      	mov	r1, fp
9001d9ca:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001d9ce:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001d9d2:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001d9d6:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001d9da:	f7f1 fe39 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9001d9de:	4631      	mov	r1, r6
9001d9e0:	4640      	mov	r0, r8
9001d9e2:	f7f1 fe35 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9001d9e6:	4b74      	ldr	r3, [pc, #464]	@ (9001dbb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001d9e8:	8818      	ldrh	r0, [r3, #0]
9001d9ea:	4b74      	ldr	r3, [pc, #464]	@ (9001dbbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001d9ec:	b202      	sxth	r2, r0
9001d9ee:	8819      	ldrh	r1, [r3, #0]
9001d9f0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001d9f4:	b20e      	sxth	r6, r1
9001d9f6:	2b00      	cmp	r3, #0
9001d9f8:	da07      	bge.n	9001da0a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001d9fa:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001d9fe:	4463      	add	r3, ip
9001da00:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001da04:	2300      	movs	r3, #0
9001da06:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001da0a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001da0e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001da12:	1ad2      	subs	r2, r2, r3
9001da14:	4594      	cmp	ip, r2
9001da16:	bfc4      	itt	gt
9001da18:	1ac2      	subgt	r2, r0, r3
9001da1a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001da1e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001da22:	2a00      	cmp	r2, #0
9001da24:	da07      	bge.n	9001da36 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001da26:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001da2a:	4462      	add	r2, ip
9001da2c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001da30:	2200      	movs	r2, #0
9001da32:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001da36:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001da3a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001da3e:	eba6 060a 	sub.w	r6, r6, sl
9001da42:	42b2      	cmp	r2, r6
9001da44:	bfc4      	itt	gt
9001da46:	eba1 020a 	subgt.w	r2, r1, sl
9001da4a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001da4e:	4a5c      	ldr	r2, [pc, #368]	@ (9001dbc0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001da50:	7812      	ldrb	r2, [r2, #0]
9001da52:	b9a2      	cbnz	r2, 9001da7e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001da54:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001da58:	4286      	cmp	r6, r0
9001da5a:	4640      	mov	r0, r8
9001da5c:	9303      	str	r3, [sp, #12]
9001da5e:	bf14      	ite	ne
9001da60:	2600      	movne	r6, #0
9001da62:	2601      	moveq	r6, #1
9001da64:	f7f1 fe37 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001da68:	9b03      	ldr	r3, [sp, #12]
9001da6a:	b160      	cbz	r0, 9001da86 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001da6c:	2300      	movs	r3, #0
9001da6e:	8023      	strh	r3, [r4, #0]
9001da70:	8063      	strh	r3, [r4, #2]
9001da72:	80a3      	strh	r3, [r4, #4]
9001da74:	4620      	mov	r0, r4
9001da76:	80e3      	strh	r3, [r4, #6]
9001da78:	b011      	add	sp, #68	@ 0x44
9001da7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001da7e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001da82:	428e      	cmp	r6, r1
9001da84:	e7e9      	b.n	9001da5a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001da86:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001da8a:	a90e      	add	r1, sp, #56	@ 0x38
9001da8c:	900e      	str	r0, [sp, #56]	@ 0x38
9001da8e:	a80c      	add	r0, sp, #48	@ 0x30
9001da90:	9205      	str	r2, [sp, #20]
9001da92:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001da96:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001da9a:	9206      	str	r2, [sp, #24]
9001da9c:	f8bb 2000 	ldrh.w	r2, [fp]
9001daa0:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001daa4:	1a9b      	subs	r3, r3, r2
9001daa6:	b21b      	sxth	r3, r3
9001daa8:	9303      	str	r3, [sp, #12]
9001daaa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001daae:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001dbc8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001dab2:	ebaa 0a03 	sub.w	sl, sl, r3
9001dab6:	fa0f f38a 	sxth.w	r3, sl
9001daba:	9304      	str	r3, [sp, #16]
9001dabc:	9b03      	ldr	r3, [sp, #12]
9001dabe:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001dac2:	9b04      	ldr	r3, [sp, #16]
9001dac4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001dac8:	9b05      	ldr	r3, [sp, #20]
9001daca:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001dace:	9b06      	ldr	r3, [sp, #24]
9001dad0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001dad4:	f7f7 faa6 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001dad8:	4640      	mov	r0, r8
9001dada:	f7f7 fa7b 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dade:	a80e      	add	r0, sp, #56	@ 0x38
9001dae0:	f7f7 fa78 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dae4:	4b37      	ldr	r3, [pc, #220]	@ (9001dbc4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001dae6:	4628      	mov	r0, r5
9001dae8:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001daec:	881b      	ldrh	r3, [r3, #0]
9001daee:	9307      	str	r3, [sp, #28]
9001daf0:	682b      	ldr	r3, [r5, #0]
9001daf2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001daf4:	4798      	blx	r3
9001daf6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001dafa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001dafe:	4681      	mov	r9, r0
9001db00:	f8db 0000 	ldr.w	r0, [fp]
9001db04:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001db08:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001db0a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001db0e:	6803      	ldr	r3, [r0, #0]
9001db10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001db12:	4798      	blx	r3
9001db14:	4607      	mov	r7, r0
9001db16:	f8db 0000 	ldr.w	r0, [fp]
9001db1a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001db1e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001db22:	6803      	ldr	r3, [r0, #0]
9001db24:	9109      	str	r1, [sp, #36]	@ 0x24
9001db26:	9208      	str	r2, [sp, #32]
9001db28:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001db2a:	4798      	blx	r3
9001db2c:	f010 0f01 	tst.w	r0, #1
9001db30:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001db34:	d012      	beq.n	9001db5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001db36:	f8db 0000 	ldr.w	r0, [fp]
9001db3a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001db3e:	6803      	ldr	r3, [r0, #0]
9001db40:	9200      	str	r2, [sp, #0]
9001db42:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
9001db44:	462b      	mov	r3, r5
9001db46:	e898 0006 	ldmia.w	r8, {r1, r2}
9001db4a:	47b0      	blx	r6
9001db4c:	9b03      	ldr	r3, [sp, #12]
9001db4e:	8023      	strh	r3, [r4, #0]
9001db50:	9b04      	ldr	r3, [sp, #16]
9001db52:	8063      	strh	r3, [r4, #2]
9001db54:	9b05      	ldr	r3, [sp, #20]
9001db56:	80a3      	strh	r3, [r4, #4]
9001db58:	9b06      	ldr	r3, [sp, #24]
9001db5a:	e78b      	b.n	9001da74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001db5c:	fb09 f202 	mul.w	r2, r9, r2
9001db60:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001db64:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001db68:	440f      	add	r7, r1
9001db6a:	b166      	cbz	r6, 9001db86 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001db6c:	9a07      	ldr	r2, [sp, #28]
9001db6e:	4592      	cmp	sl, r2
9001db70:	d109      	bne.n	9001db86 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001db72:	f8db 0000 	ldr.w	r0, [fp]
9001db76:	fb09 f303 	mul.w	r3, r9, r3
9001db7a:	4629      	mov	r1, r5
9001db7c:	6802      	ldr	r2, [r0, #0]
9001db7e:	6b56      	ldr	r6, [r2, #52]	@ 0x34
9001db80:	463a      	mov	r2, r7
9001db82:	47b0      	blx	r6
9001db84:	e7e2      	b.n	9001db4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001db86:	fb0a f303 	mul.w	r3, sl, r3
9001db8a:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001db8e:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001dbc8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001db92:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001db96:	4545      	cmp	r5, r8
9001db98:	d2d8      	bcs.n	9001db4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001db9a:	f8db 0000 	ldr.w	r0, [fp]
9001db9e:	4629      	mov	r1, r5
9001dba0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001dba4:	4435      	add	r5, r6
9001dba6:	6802      	ldr	r2, [r0, #0]
9001dba8:	005b      	lsls	r3, r3, #1
9001dbaa:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
9001dbae:	463a      	mov	r2, r7
9001dbb0:	47d0      	blx	sl
9001dbb2:	444f      	add	r7, r9
9001dbb4:	e7ef      	b.n	9001db96 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001dbb6:	bf00      	nop
9001dbb8:	240218a8 	.word	0x240218a8
9001dbbc:	240218aa 	.word	0x240218aa
9001dbc0:	240218ac 	.word	0x240218ac
9001dbc4:	240218ae 	.word	0x240218ae
9001dbc8:	240218b4 	.word	0x240218b4

9001dbcc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001dbcc:	b5f0      	push	{r4, r5, r6, r7, lr}
9001dbce:	4606      	mov	r6, r0
9001dbd0:	b087      	sub	sp, #28
9001dbd2:	460c      	mov	r4, r1
9001dbd4:	4617      	mov	r7, r2
9001dbd6:	461d      	mov	r5, r3
9001dbd8:	b333      	cbz	r3, 9001dc28 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001dbda:	4608      	mov	r0, r1
9001dbdc:	f7f1 fd7b 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001dbe0:	bb10      	cbnz	r0, 9001dc28 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001dbe2:	6820      	ldr	r0, [r4, #0]
9001dbe4:	ab04      	add	r3, sp, #16
9001dbe6:	6861      	ldr	r1, [r4, #4]
9001dbe8:	4c1b      	ldr	r4, [pc, #108]	@ (9001dc58 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001dbea:	c303      	stmia	r3!, {r0, r1}
9001dbec:	a804      	add	r0, sp, #16
9001dbee:	f7f7 f9f1 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dbf2:	6820      	ldr	r0, [r4, #0]
9001dbf4:	6803      	ldr	r3, [r0, #0]
9001dbf6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001dbf8:	4798      	blx	r3
9001dbfa:	2dff      	cmp	r5, #255	@ 0xff
9001dbfc:	d016      	beq.n	9001dc2c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001dbfe:	f010 0f08 	tst.w	r0, #8
9001dc02:	6820      	ldr	r0, [r4, #0]
9001dc04:	d015      	beq.n	9001dc32 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001dc06:	2400      	movs	r4, #0
9001dc08:	6801      	ldr	r1, [r0, #0]
9001dc0a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001dc0e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001dc12:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001dc16:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001dc1a:	9401      	str	r4, [sp, #4]
9001dc1c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001dc20:	9400      	str	r4, [sp, #0]
9001dc22:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
9001dc24:	4639      	mov	r1, r7
9001dc26:	47a0      	blx	r4
9001dc28:	b007      	add	sp, #28
9001dc2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001dc2c:	f010 0f02 	tst.w	r0, #2
9001dc30:	e7e7      	b.n	9001dc02 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001dc32:	6803      	ldr	r3, [r0, #0]
9001dc34:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001dc36:	4798      	blx	r3
9001dc38:	4b08      	ldr	r3, [pc, #32]	@ (9001dc5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001dc3a:	4601      	mov	r1, r0
9001dc3c:	4630      	mov	r0, r6
9001dc3e:	881a      	ldrh	r2, [r3, #0]
9001dc40:	6833      	ldr	r3, [r6, #0]
9001dc42:	e9cd 7500 	strd	r7, r5, [sp]
9001dc46:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001dc48:	ab04      	add	r3, sp, #16
9001dc4a:	47a8      	blx	r5
9001dc4c:	6820      	ldr	r0, [r4, #0]
9001dc4e:	6803      	ldr	r3, [r0, #0]
9001dc50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001dc52:	4798      	blx	r3
9001dc54:	e7e8      	b.n	9001dc28 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001dc56:	bf00      	nop
9001dc58:	240218b4 	.word	0x240218b4
9001dc5c:	240218ae 	.word	0x240218ae

9001dc60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001dc60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001dc64:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001dc68:	4688      	mov	r8, r1
9001dc6a:	4614      	mov	r4, r2
9001dc6c:	461d      	mov	r5, r3
9001dc6e:	9e08      	ldr	r6, [sp, #32]
9001dc70:	2f00      	cmp	r7, #0
9001dc72:	f000 80ab 	beq.w	9001ddcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dc76:	4618      	mov	r0, r3
9001dc78:	f7f1 fd2d 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001dc7c:	2800      	cmp	r0, #0
9001dc7e:	f040 80a5 	bne.w	9001ddcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dc82:	f9b5 1000 	ldrsh.w	r1, [r5]
9001dc86:	2fff      	cmp	r7, #255	@ 0xff
9001dc88:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001dc8c:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001dc90:	fb04 1303 	mla	r3, r4, r3, r1
9001dc94:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001dc98:	eba4 0200 	sub.w	r2, r4, r0
9001dc9c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001dca0:	fb04 f505 	mul.w	r5, r4, r5
9001dca4:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001dca8:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001dcac:	d04a      	beq.n	9001dd44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001dcae:	b2bc      	uxth	r4, r7
9001dcb0:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001dcb4:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001dcb8:	fa5f f788 	uxtb.w	r7, r8
9001dcbc:	b2f3      	uxtb	r3, r6
9001dcbe:	0040      	lsls	r0, r0, #1
9001dcc0:	fb0e fe04 	mul.w	lr, lr, r4
9001dcc4:	4367      	muls	r7, r4
9001dcc6:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001dcca:	4363      	muls	r3, r4
9001dccc:	fa1f fc8c 	uxth.w	ip, ip
9001dcd0:	42a9      	cmp	r1, r5
9001dcd2:	d27b      	bcs.n	9001ddcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dcd4:	eb01 0900 	add.w	r9, r1, r0
9001dcd8:	4549      	cmp	r1, r9
9001dcda:	d231      	bcs.n	9001dd40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001dcdc:	880a      	ldrh	r2, [r1, #0]
9001dcde:	1214      	asrs	r4, r2, #8
9001dce0:	10d6      	asrs	r6, r2, #3
9001dce2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001dce6:	00d2      	lsls	r2, r2, #3
9001dce8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001dcec:	b2d2      	uxtb	r2, r2
9001dcee:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001dcf2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001dcf6:	fb14 f40c 	smulbb	r4, r4, ip
9001dcfa:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001dcfe:	fb12 f20c 	smulbb	r2, r2, ip
9001dd02:	fb16 f60c 	smulbb	r6, r6, ip
9001dd06:	4474      	add	r4, lr
9001dd08:	441a      	add	r2, r3
9001dd0a:	b2a4      	uxth	r4, r4
9001dd0c:	443e      	add	r6, r7
9001dd0e:	b292      	uxth	r2, r2
9001dd10:	f104 0a01 	add.w	sl, r4, #1
9001dd14:	b2b6      	uxth	r6, r6
9001dd16:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001dd1a:	f102 0a01 	add.w	sl, r2, #1
9001dd1e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001dd22:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001dd26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001dd2a:	4322      	orrs	r2, r4
9001dd2c:	1c74      	adds	r4, r6, #1
9001dd2e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001dd32:	0976      	lsrs	r6, r6, #5
9001dd34:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001dd38:	4332      	orrs	r2, r6
9001dd3a:	f821 2b02 	strh.w	r2, [r1], #2
9001dd3e:	e7cb      	b.n	9001dcd8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001dd40:	4441      	add	r1, r8
9001dd42:	e7c5      	b.n	9001dcd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001dd44:	0973      	lsrs	r3, r6, #5
9001dd46:	4f22      	ldr	r7, [pc, #136]	@ (9001ddd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001dd48:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001dd4c:	ea08 0707 	and.w	r7, r8, r7
9001dd50:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001dd54:	433b      	orrs	r3, r7
9001dd56:	07e7      	lsls	r7, r4, #31
9001dd58:	ea43 0306 	orr.w	r3, r3, r6
9001dd5c:	b29b      	uxth	r3, r3
9001dd5e:	d50b      	bpl.n	9001dd78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001dd60:	0040      	lsls	r0, r0, #1
9001dd62:	0052      	lsls	r2, r2, #1
9001dd64:	42a9      	cmp	r1, r5
9001dd66:	d231      	bcs.n	9001ddcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dd68:	180c      	adds	r4, r1, r0
9001dd6a:	42a1      	cmp	r1, r4
9001dd6c:	d202      	bcs.n	9001dd74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001dd6e:	f821 3b02 	strh.w	r3, [r1], #2
9001dd72:	e7fa      	b.n	9001dd6a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001dd74:	4411      	add	r1, r2
9001dd76:	e7f5      	b.n	9001dd64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001dd78:	078e      	lsls	r6, r1, #30
9001dd7a:	d008      	beq.n	9001dd8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001dd7c:	0066      	lsls	r6, r4, #1
9001dd7e:	460a      	mov	r2, r1
9001dd80:	42aa      	cmp	r2, r5
9001dd82:	d202      	bcs.n	9001dd8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001dd84:	8013      	strh	r3, [r2, #0]
9001dd86:	4432      	add	r2, r6
9001dd88:	e7fa      	b.n	9001dd80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001dd8a:	3102      	adds	r1, #2
9001dd8c:	3801      	subs	r0, #1
9001dd8e:	07c2      	lsls	r2, r0, #31
9001dd90:	d50b      	bpl.n	9001ddaa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001dd92:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001dd96:	0066      	lsls	r6, r4, #1
9001dd98:	3a01      	subs	r2, #1
9001dd9a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001dd9e:	42aa      	cmp	r2, r5
9001dda0:	d202      	bcs.n	9001dda8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001dda2:	8013      	strh	r3, [r2, #0]
9001dda4:	4432      	add	r2, r6
9001dda6:	e7fa      	b.n	9001dd9e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001dda8:	3801      	subs	r0, #1
9001ddaa:	b178      	cbz	r0, 9001ddcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001ddac:	1040      	asrs	r0, r0, #1
9001ddae:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001ddb2:	0080      	lsls	r0, r0, #2
9001ddb4:	0064      	lsls	r4, r4, #1
9001ddb6:	42a9      	cmp	r1, r5
9001ddb8:	d208      	bcs.n	9001ddcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001ddba:	180e      	adds	r6, r1, r0
9001ddbc:	460a      	mov	r2, r1
9001ddbe:	42b2      	cmp	r2, r6
9001ddc0:	d202      	bcs.n	9001ddc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001ddc2:	f842 3b04 	str.w	r3, [r2], #4
9001ddc6:	e7fa      	b.n	9001ddbe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001ddc8:	4421      	add	r1, r4
9001ddca:	e7f4      	b.n	9001ddb6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001ddcc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ddd0:	00fff800 	.word	0x00fff800

9001ddd4 <_ZN8touchgfx8LCD16bppC1Ev>:
9001ddd4:	2200      	movs	r2, #0
9001ddd6:	4912      	ldr	r1, [pc, #72]	@ (9001de20 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001ddd8:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001dddc:	6001      	str	r1, [r0, #0]
9001ddde:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001dde2:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001dde6:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001ddea:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001ddee:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001ddf2:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001ddf6:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001ddfa:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001ddfe:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001de02:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001de06:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001de0a:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001de0e:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001de12:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001de16:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001de1a:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9001de1e:	4770      	bx	lr
9001de20:	9002c690 	.word	0x9002c690

9001de24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001de24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001de28:	b08d      	sub	sp, #52	@ 0x34
9001de2a:	460d      	mov	r5, r1
9001de2c:	4604      	mov	r4, r0
9001de2e:	4699      	mov	r9, r3
9001de30:	6808      	ldr	r0, [r1, #0]
9001de32:	ab08      	add	r3, sp, #32
9001de34:	6849      	ldr	r1, [r1, #4]
9001de36:	c303      	stmia	r3!, {r0, r1}
9001de38:	6810      	ldr	r0, [r2, #0]
9001de3a:	ab0a      	add	r3, sp, #40	@ 0x28
9001de3c:	6851      	ldr	r1, [r2, #4]
9001de3e:	c303      	stmia	r3!, {r0, r1}
9001de40:	a808      	add	r0, sp, #32
9001de42:	f7f7 f8c7 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de46:	4629      	mov	r1, r5
9001de48:	a80a      	add	r0, sp, #40	@ 0x28
9001de4a:	4d67      	ldr	r5, [pc, #412]	@ (9001dfe8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001de4c:	f7f7 f8ea 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001de50:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001de54:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001de58:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001de5c:	6828      	ldr	r0, [r5, #0]
9001de5e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001de62:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001de66:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001de6a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001de6e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001de72:	440a      	add	r2, r1
9001de74:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001de78:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001de7c:	4413      	add	r3, r2
9001de7e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001de82:	6803      	ldr	r3, [r0, #0]
9001de84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001de86:	4798      	blx	r3
9001de88:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001de8c:	d119      	bne.n	9001dec2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001de8e:	f010 0f20 	tst.w	r0, #32
9001de92:	6828      	ldr	r0, [r5, #0]
9001de94:	d018      	beq.n	9001dec8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001de96:	2500      	movs	r5, #0
9001de98:	6801      	ldr	r1, [r0, #0]
9001de9a:	b2b6      	uxth	r6, r6
9001de9c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001dea0:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001dea4:	9601      	str	r6, [sp, #4]
9001dea6:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001deaa:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001deae:	9502      	str	r5, [sp, #8]
9001deb0:	fa1f f588 	uxth.w	r5, r8
9001deb4:	9500      	str	r5, [sp, #0]
9001deb6:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
9001deb8:	4621      	mov	r1, r4
9001deba:	47a8      	blx	r5
9001debc:	b00d      	add	sp, #52	@ 0x34
9001debe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dec2:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001dec6:	e7e4      	b.n	9001de92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001dec8:	6803      	ldr	r3, [r0, #0]
9001deca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001decc:	4798      	blx	r3
9001dece:	4947      	ldr	r1, [pc, #284]	@ (9001dfec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001ded0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001ded4:	880b      	ldrh	r3, [r1, #0]
9001ded6:	468a      	mov	sl, r1
9001ded8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001dedc:	fb03 5202 	mla	r2, r3, r2, r5
9001dee0:	4373      	muls	r3, r6
9001dee2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001dee6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001deea:	9307      	str	r3, [sp, #28]
9001deec:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001def0:	9306      	str	r3, [sp, #24]
9001def2:	9b07      	ldr	r3, [sp, #28]
9001def4:	4298      	cmp	r0, r3
9001def6:	d270      	bcs.n	9001dfda <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001def8:	9b06      	ldr	r3, [sp, #24]
9001defa:	4621      	mov	r1, r4
9001defc:	eb00 0b03 	add.w	fp, r0, r3
9001df00:	4558      	cmp	r0, fp
9001df02:	d25d      	bcs.n	9001dfc0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001df04:	f851 4b04 	ldr.w	r4, [r1], #4
9001df08:	0e23      	lsrs	r3, r4, #24
9001df0a:	d014      	beq.n	9001df36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001df0c:	2bff      	cmp	r3, #255	@ 0xff
9001df0e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001df12:	d112      	bne.n	9001df3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001df14:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001df18:	d10f      	bne.n	9001df3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001df1a:	0963      	lsrs	r3, r4, #5
9001df1c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001df20:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001df24:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001df28:	f02c 0c07 	bic.w	ip, ip, #7
9001df2c:	ea43 0c0c 	orr.w	ip, r3, ip
9001df30:	ea4c 0404 	orr.w	r4, ip, r4
9001df34:	8004      	strh	r4, [r0, #0]
9001df36:	3002      	adds	r0, #2
9001df38:	e7e2      	b.n	9001df00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001df3a:	fb09 f303 	mul.w	r3, r9, r3
9001df3e:	8807      	ldrh	r7, [r0, #0]
9001df40:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001df44:	fa5f fc8c 	uxtb.w	ip, ip
9001df48:	1c5a      	adds	r2, r3, #1
9001df4a:	123e      	asrs	r6, r7, #8
9001df4c:	10fd      	asrs	r5, r7, #3
9001df4e:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001df52:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001df56:	00ff      	lsls	r7, r7, #3
9001df58:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001df5c:	1212      	asrs	r2, r2, #8
9001df5e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001df62:	b293      	uxth	r3, r2
9001df64:	43d2      	mvns	r2, r2
9001df66:	b2ff      	uxtb	r7, r7
9001df68:	fb1e fe03 	smulbb	lr, lr, r3
9001df6c:	b2d2      	uxtb	r2, r2
9001df6e:	fb1c fc03 	smulbb	ip, ip, r3
9001df72:	b2e4      	uxtb	r4, r4
9001df74:	fb06 e602 	mla	r6, r6, r2, lr
9001df78:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001df7c:	fb14 f403 	smulbb	r4, r4, r3
9001df80:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001df84:	b2b6      	uxth	r6, r6
9001df86:	fb05 c502 	mla	r5, r5, r2, ip
9001df8a:	fb07 4702 	mla	r7, r7, r2, r4
9001df8e:	f106 0e01 	add.w	lr, r6, #1
9001df92:	b2ad      	uxth	r5, r5
9001df94:	b2bf      	uxth	r7, r7
9001df96:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001df9a:	f105 0c01 	add.w	ip, r5, #1
9001df9e:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001dfa2:	1c7e      	adds	r6, r7, #1
9001dfa4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001dfa8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001dfac:	096d      	lsrs	r5, r5, #5
9001dfae:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001dfb2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001dfb6:	ea46 060e 	orr.w	r6, r6, lr
9001dfba:	432e      	orrs	r6, r5
9001dfbc:	8006      	strh	r6, [r0, #0]
9001dfbe:	e7ba      	b.n	9001df36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001dfc0:	f8ba 3000 	ldrh.w	r3, [sl]
9001dfc4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001dfc8:	eba3 0308 	sub.w	r3, r3, r8
9001dfcc:	eba4 0408 	sub.w	r4, r4, r8
9001dfd0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001dfd4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001dfd8:	e78b      	b.n	9001def2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001dfda:	4b03      	ldr	r3, [pc, #12]	@ (9001dfe8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001dfdc:	6818      	ldr	r0, [r3, #0]
9001dfde:	6803      	ldr	r3, [r0, #0]
9001dfe0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001dfe2:	4798      	blx	r3
9001dfe4:	e76a      	b.n	9001debc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001dfe6:	bf00      	nop
9001dfe8:	240218b4 	.word	0x240218b4
9001dfec:	240218ae 	.word	0x240218ae

9001dff0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001dff0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001dff4:	b085      	sub	sp, #20
9001dff6:	6810      	ldr	r0, [r2, #0]
9001dff8:	460c      	mov	r4, r1
9001dffa:	6851      	ldr	r1, [r2, #4]
9001dffc:	466d      	mov	r5, sp
9001dffe:	4616      	mov	r6, r2
9001e000:	c503      	stmia	r5!, {r0, r1}
9001e002:	6818      	ldr	r0, [r3, #0]
9001e004:	6859      	ldr	r1, [r3, #4]
9001e006:	c503      	stmia	r5!, {r0, r1}
9001e008:	4668      	mov	r0, sp
9001e00a:	4d2e      	ldr	r5, [pc, #184]	@ (9001e0c4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001e00c:	f7f6 ffe2 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e010:	4631      	mov	r1, r6
9001e012:	a802      	add	r0, sp, #8
9001e014:	4e2c      	ldr	r6, [pc, #176]	@ (9001e0c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001e016:	f7f7 f805 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e01a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001e01e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001e022:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e026:	6828      	ldr	r0, [r5, #0]
9001e028:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e02c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001e030:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001e034:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001e038:	f8bd 1000 	ldrh.w	r1, [sp]
9001e03c:	440a      	add	r2, r1
9001e03e:	f8ad 2008 	strh.w	r2, [sp, #8]
9001e042:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001e046:	4413      	add	r3, r2
9001e048:	f8ad 300a 	strh.w	r3, [sp, #10]
9001e04c:	6803      	ldr	r3, [r0, #0]
9001e04e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e050:	4798      	blx	r3
9001e052:	8833      	ldrh	r3, [r6, #0]
9001e054:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001e058:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001e05c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001e060:	f8df e068 	ldr.w	lr, [pc, #104]	@ 9001e0cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001e064:	fb03 1202 	mla	r2, r3, r2, r1
9001e068:	fb08 f303 	mul.w	r3, r8, r3
9001e06c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e070:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e074:	4298      	cmp	r0, r3
9001e076:	d21d      	bcs.n	9001e0b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001e078:	eb00 080c 	add.w	r8, r0, ip
9001e07c:	4540      	cmp	r0, r8
9001e07e:	d20f      	bcs.n	9001e0a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001e080:	f854 1b04 	ldr.w	r1, [r4], #4
9001e084:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001e088:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001e08c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001e090:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001e094:	ea42 0209 	orr.w	r2, r2, r9
9001e098:	430a      	orrs	r2, r1
9001e09a:	f820 2b02 	strh.w	r2, [r0], #2
9001e09e:	e7ed      	b.n	9001e07c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001e0a0:	8832      	ldrh	r2, [r6, #0]
9001e0a2:	1bd2      	subs	r2, r2, r7
9001e0a4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e0a8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001e0ac:	1bd2      	subs	r2, r2, r7
9001e0ae:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001e0b2:	e7df      	b.n	9001e074 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001e0b4:	6828      	ldr	r0, [r5, #0]
9001e0b6:	6803      	ldr	r3, [r0, #0]
9001e0b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e0ba:	4798      	blx	r3
9001e0bc:	b005      	add	sp, #20
9001e0be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001e0c2:	bf00      	nop
9001e0c4:	240218b4 	.word	0x240218b4
9001e0c8:	240218ae 	.word	0x240218ae
9001e0cc:	fffff800 	.word	0xfffff800

9001e0d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001e0d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e0d4:	b08e      	sub	sp, #56	@ 0x38
9001e0d6:	460e      	mov	r6, r1
9001e0d8:	4604      	mov	r4, r0
9001e0da:	461d      	mov	r5, r3
9001e0dc:	6808      	ldr	r0, [r1, #0]
9001e0de:	ab0a      	add	r3, sp, #40	@ 0x28
9001e0e0:	6849      	ldr	r1, [r1, #4]
9001e0e2:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9001e2b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001e0e6:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 9001e2bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001e0ea:	c303      	stmia	r3!, {r0, r1}
9001e0ec:	6810      	ldr	r0, [r2, #0]
9001e0ee:	ab0c      	add	r3, sp, #48	@ 0x30
9001e0f0:	6851      	ldr	r1, [r2, #4]
9001e0f2:	c303      	stmia	r3!, {r0, r1}
9001e0f4:	a80a      	add	r0, sp, #40	@ 0x28
9001e0f6:	f7f6 ff6d 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e0fa:	4631      	mov	r1, r6
9001e0fc:	a80c      	add	r0, sp, #48	@ 0x30
9001e0fe:	f7f6 ff91 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e102:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001e106:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001e10a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001e10e:	f8d8 0000 	ldr.w	r0, [r8]
9001e112:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e116:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9001e11a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001e11e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001e122:	440c      	add	r4, r1
9001e124:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9001e128:	440a      	add	r2, r1
9001e12a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9001e12e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001e132:	4413      	add	r3, r2
9001e134:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001e138:	6803      	ldr	r3, [r0, #0]
9001e13a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001e13c:	4798      	blx	r3
9001e13e:	2dff      	cmp	r5, #255	@ 0xff
9001e140:	d124      	bne.n	9001e18c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001e142:	f010 0f01 	tst.w	r0, #1
9001e146:	f8d8 0000 	ldr.w	r0, [r8]
9001e14a:	d022      	beq.n	9001e192 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001e14c:	2100      	movs	r1, #0
9001e14e:	f04f 0e01 	mov.w	lr, #1
9001e152:	f8d0 c000 	ldr.w	ip, [r0]
9001e156:	b2b6      	uxth	r6, r6
9001e158:	f8cd e018 	str.w	lr, [sp, #24]
9001e15c:	b2bf      	uxth	r7, r7
9001e15e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001e162:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9001e166:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001e16a:	f8b9 e000 	ldrh.w	lr, [r9]
9001e16e:	9503      	str	r5, [sp, #12]
9001e170:	9601      	str	r6, [sp, #4]
9001e172:	9700      	str	r7, [sp, #0]
9001e174:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001e178:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001e17c:	9102      	str	r1, [sp, #8]
9001e17e:	4621      	mov	r1, r4
9001e180:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
9001e184:	47a8      	blx	r5
9001e186:	b00e      	add	sp, #56	@ 0x38
9001e188:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e18c:	f010 0f04 	tst.w	r0, #4
9001e190:	e7d9      	b.n	9001e146 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001e192:	6803      	ldr	r3, [r0, #0]
9001e194:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e196:	4798      	blx	r3
9001e198:	f8b9 3000 	ldrh.w	r3, [r9]
9001e19c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001e1a0:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001e1a4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
9001e1a8:	435e      	muls	r6, r3
9001e1aa:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001e1ae:	2dff      	cmp	r5, #255	@ 0xff
9001e1b0:	fb03 1202 	mla	r2, r3, r2, r1
9001e1b4:	ebac 0c07 	sub.w	ip, ip, r7
9001e1b8:	eba3 0707 	sub.w	r7, r3, r7
9001e1bc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e1c0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001e1c4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001e1c8:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001e1cc:	d049      	beq.n	9001e262 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001e1ce:	43eb      	mvns	r3, r5
9001e1d0:	fa1f f985 	uxth.w	r9, r5
9001e1d4:	b2db      	uxtb	r3, r3
9001e1d6:	42b0      	cmp	r0, r6
9001e1d8:	d266      	bcs.n	9001e2a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001e1da:	eb00 0a0e 	add.w	sl, r0, lr
9001e1de:	4550      	cmp	r0, sl
9001e1e0:	4621      	mov	r1, r4
9001e1e2:	f104 0403 	add.w	r4, r4, #3
9001e1e6:	d25b      	bcs.n	9001e2a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001e1e8:	8802      	ldrh	r2, [r0, #0]
9001e1ea:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001e1ee:	ea4f 2822 	mov.w	r8, r2, asr #8
9001e1f2:	fb11 f109 	smulbb	r1, r1, r9
9001e1f6:	10d5      	asrs	r5, r2, #3
9001e1f8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001e1fc:	00d2      	lsls	r2, r2, #3
9001e1fe:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e202:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001e206:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e20a:	fb08 1803 	mla	r8, r8, r3, r1
9001e20e:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001e212:	b2d2      	uxtb	r2, r2
9001e214:	fb11 f109 	smulbb	r1, r1, r9
9001e218:	fa1f f888 	uxth.w	r8, r8
9001e21c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e220:	fb05 1503 	mla	r5, r5, r3, r1
9001e224:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001e228:	fb11 f109 	smulbb	r1, r1, r9
9001e22c:	b2ad      	uxth	r5, r5
9001e22e:	fb02 1203 	mla	r2, r2, r3, r1
9001e232:	f108 0101 	add.w	r1, r8, #1
9001e236:	b292      	uxth	r2, r2
9001e238:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001e23c:	1c51      	adds	r1, r2, #1
9001e23e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001e242:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001e246:	1c69      	adds	r1, r5, #1
9001e248:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001e24c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e250:	096d      	lsrs	r5, r5, #5
9001e252:	ea42 0208 	orr.w	r2, r2, r8
9001e256:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e25a:	432a      	orrs	r2, r5
9001e25c:	f820 2b02 	strh.w	r2, [r0], #2
9001e260:	e7bd      	b.n	9001e1de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001e262:	4a14      	ldr	r2, [pc, #80]	@ (9001e2b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001e264:	42b0      	cmp	r0, r6
9001e266:	d21f      	bcs.n	9001e2a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001e268:	eb00 050e 	add.w	r5, r0, lr
9001e26c:	42a8      	cmp	r0, r5
9001e26e:	4621      	mov	r1, r4
9001e270:	f104 0403 	add.w	r4, r4, #3
9001e274:	d210      	bcs.n	9001e298 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001e276:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001e27a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001e27e:	00db      	lsls	r3, r3, #3
9001e280:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001e284:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001e288:	430b      	orrs	r3, r1
9001e28a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001e28e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001e292:	f820 3b02 	strh.w	r3, [r0], #2
9001e296:	e7e9      	b.n	9001e26c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001e298:	4438      	add	r0, r7
9001e29a:	eb01 040c 	add.w	r4, r1, ip
9001e29e:	e7e1      	b.n	9001e264 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001e2a0:	4438      	add	r0, r7
9001e2a2:	eb01 040c 	add.w	r4, r1, ip
9001e2a6:	e796      	b.n	9001e1d6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001e2a8:	4b03      	ldr	r3, [pc, #12]	@ (9001e2b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001e2aa:	6818      	ldr	r0, [r3, #0]
9001e2ac:	6803      	ldr	r3, [r0, #0]
9001e2ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e2b0:	4798      	blx	r3
9001e2b2:	e768      	b.n	9001e186 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001e2b4:	fffff800 	.word	0xfffff800
9001e2b8:	240218b4 	.word	0x240218b4
9001e2bc:	240218ae 	.word	0x240218ae

9001e2c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001e2c0:	b4f0      	push	{r4, r5, r6, r7}
9001e2c2:	4616      	mov	r6, r2
9001e2c4:	461c      	mov	r4, r3
9001e2c6:	460d      	mov	r5, r1
9001e2c8:	9a04      	ldr	r2, [sp, #16]
9001e2ca:	2e01      	cmp	r6, #1
9001e2cc:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001e2d0:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001e2d4:	d012      	beq.n	9001e2fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001e2d6:	d303      	bcc.n	9001e2e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001e2d8:	2e02      	cmp	r6, #2
9001e2da:	d00a      	beq.n	9001e2f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001e2dc:	bcf0      	pop	{r4, r5, r6, r7}
9001e2de:	4770      	bx	lr
9001e2e0:	6805      	ldr	r5, [r0, #0]
9001e2e2:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001e2e6:	68ed      	ldr	r5, [r5, #12]
9001e2e8:	4613      	mov	r3, r2
9001e2ea:	4622      	mov	r2, r4
9001e2ec:	46ac      	mov	ip, r5
9001e2ee:	bcf0      	pop	{r4, r5, r6, r7}
9001e2f0:	4760      	bx	ip
9001e2f2:	4621      	mov	r1, r4
9001e2f4:	4628      	mov	r0, r5
9001e2f6:	bcf0      	pop	{r4, r5, r6, r7}
9001e2f8:	f7ff bd94 	b.w	9001de24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e2fc:	4621      	mov	r1, r4
9001e2fe:	4628      	mov	r0, r5
9001e300:	bcf0      	pop	{r4, r5, r6, r7}
9001e302:	f7ff bee5 	b.w	9001e0d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001e308 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001e308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e30c:	b093      	sub	sp, #76	@ 0x4c
9001e30e:	4681      	mov	r9, r0
9001e310:	4688      	mov	r8, r1
9001e312:	6810      	ldr	r0, [r2, #0]
9001e314:	6851      	ldr	r1, [r2, #4]
9001e316:	ac0e      	add	r4, sp, #56	@ 0x38
9001e318:	4616      	mov	r6, r2
9001e31a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9001e31e:	4f6b      	ldr	r7, [pc, #428]	@ (9001e4cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001e320:	c403      	stmia	r4!, {r0, r1}
9001e322:	6818      	ldr	r0, [r3, #0]
9001e324:	ac10      	add	r4, sp, #64	@ 0x40
9001e326:	6859      	ldr	r1, [r3, #4]
9001e328:	c403      	stmia	r4!, {r0, r1}
9001e32a:	a80e      	add	r0, sp, #56	@ 0x38
9001e32c:	f7f6 fe52 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e330:	4631      	mov	r1, r6
9001e332:	a810      	add	r0, sp, #64	@ 0x40
9001e334:	4e66      	ldr	r6, [pc, #408]	@ (9001e4d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e336:	f7f6 fe75 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e33a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001e33e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001e342:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9001e346:	6830      	ldr	r0, [r6, #0]
9001e348:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e34c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
9001e350:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001e354:	4489      	add	r9, r1
9001e356:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9001e35a:	440a      	add	r2, r1
9001e35c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
9001e360:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001e364:	4413      	add	r3, r2
9001e366:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001e36a:	6803      	ldr	r3, [r0, #0]
9001e36c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001e36e:	4798      	blx	r3
9001e370:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001e374:	6830      	ldr	r0, [r6, #0]
9001e376:	d01d      	beq.n	9001e3b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001e378:	2200      	movs	r2, #0
9001e37a:	6801      	ldr	r1, [r0, #0]
9001e37c:	b2a4      	uxth	r4, r4
9001e37e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001e382:	b2ad      	uxth	r5, r5
9001e384:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001e388:	220b      	movs	r2, #11
9001e38a:	9207      	str	r2, [sp, #28]
9001e38c:	883a      	ldrh	r2, [r7, #0]
9001e38e:	9502      	str	r5, [sp, #8]
9001e390:	9206      	str	r2, [sp, #24]
9001e392:	2201      	movs	r2, #1
9001e394:	9401      	str	r4, [sp, #4]
9001e396:	e9cd a204 	strd	sl, r2, [sp, #16]
9001e39a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
9001e39e:	9203      	str	r2, [sp, #12]
9001e3a0:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
9001e3a4:	9200      	str	r2, [sp, #0]
9001e3a6:	4642      	mov	r2, r8
9001e3a8:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
9001e3aa:	4649      	mov	r1, r9
9001e3ac:	47a0      	blx	r4
9001e3ae:	b013      	add	sp, #76	@ 0x4c
9001e3b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e3b4:	6803      	ldr	r3, [r0, #0]
9001e3b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e3b8:	4798      	blx	r3
9001e3ba:	883b      	ldrh	r3, [r7, #0]
9001e3bc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e3c0:	f04f 0e04 	mov.w	lr, #4
9001e3c4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9001e3c8:	435d      	muls	r5, r3
9001e3ca:	fb03 1202 	mla	r2, r3, r2, r1
9001e3ce:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e3d2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001e3d6:	920c      	str	r2, [sp, #48]	@ 0x30
9001e3d8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001e3dc:	1b12      	subs	r2, r2, r4
9001e3de:	920d      	str	r2, [sp, #52]	@ 0x34
9001e3e0:	0062      	lsls	r2, r4, #1
9001e3e2:	1b1c      	subs	r4, r3, r4
9001e3e4:	920a      	str	r2, [sp, #40]	@ 0x28
9001e3e6:	0063      	lsls	r3, r4, #1
9001e3e8:	930b      	str	r3, [sp, #44]	@ 0x2c
9001e3ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e3ec:	4298      	cmp	r0, r3
9001e3ee:	d266      	bcs.n	9001e4be <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001e3f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e3f2:	eb00 0b03 	add.w	fp, r0, r3
9001e3f6:	4558      	cmp	r0, fp
9001e3f8:	d25c      	bcs.n	9001e4b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001e3fa:	f819 3b01 	ldrb.w	r3, [r9], #1
9001e3fe:	fb1e e303 	smlabb	r3, lr, r3, lr
9001e402:	f858 2003 	ldr.w	r2, [r8, r3]
9001e406:	0e11      	lsrs	r1, r2, #24
9001e408:	d012      	beq.n	9001e430 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e40a:	29ff      	cmp	r1, #255	@ 0xff
9001e40c:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001e410:	d110      	bne.n	9001e434 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e412:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001e416:	d10d      	bne.n	9001e434 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e418:	0953      	lsrs	r3, r2, #5
9001e41a:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9001e41e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e422:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001e426:	f027 0707 	bic.w	r7, r7, #7
9001e42a:	431f      	orrs	r7, r3
9001e42c:	433a      	orrs	r2, r7
9001e42e:	8002      	strh	r2, [r0, #0]
9001e430:	3002      	adds	r0, #2
9001e432:	e7e0      	b.n	9001e3f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001e434:	fb0a f101 	mul.w	r1, sl, r1
9001e438:	8806      	ldrh	r6, [r0, #0]
9001e43a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001e43e:	b2d2      	uxtb	r2, r2
9001e440:	1c4b      	adds	r3, r1, #1
9001e442:	1235      	asrs	r5, r6, #8
9001e444:	10f4      	asrs	r4, r6, #3
9001e446:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001e44a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001e44e:	00f6      	lsls	r6, r6, #3
9001e450:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9001e454:	121b      	asrs	r3, r3, #8
9001e456:	b2f6      	uxtb	r6, r6
9001e458:	b299      	uxth	r1, r3
9001e45a:	43db      	mvns	r3, r3
9001e45c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001e460:	fb1c fc01 	smulbb	ip, ip, r1
9001e464:	b2db      	uxtb	r3, r3
9001e466:	fb12 f201 	smulbb	r2, r2, r1
9001e46a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e46e:	fb05 c503 	mla	r5, r5, r3, ip
9001e472:	b2ff      	uxtb	r7, r7
9001e474:	fb06 2203 	mla	r2, r6, r3, r2
9001e478:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001e47c:	fb17 f701 	smulbb	r7, r7, r1
9001e480:	b2ad      	uxth	r5, r5
9001e482:	b292      	uxth	r2, r2
9001e484:	fb04 7403 	mla	r4, r4, r3, r7
9001e488:	f105 0c01 	add.w	ip, r5, #1
9001e48c:	1c57      	adds	r7, r2, #1
9001e48e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001e492:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001e496:	b2a4      	uxth	r4, r4
9001e498:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001e49c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001e4a0:	433d      	orrs	r5, r7
9001e4a2:	1c67      	adds	r7, r4, #1
9001e4a4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001e4a8:	0964      	lsrs	r4, r4, #5
9001e4aa:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001e4ae:	4325      	orrs	r5, r4
9001e4b0:	8005      	strh	r5, [r0, #0]
9001e4b2:	e7bd      	b.n	9001e430 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e4b4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001e4b6:	4418      	add	r0, r3
9001e4b8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e4ba:	4499      	add	r9, r3
9001e4bc:	e795      	b.n	9001e3ea <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001e4be:	4b04      	ldr	r3, [pc, #16]	@ (9001e4d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e4c0:	6818      	ldr	r0, [r3, #0]
9001e4c2:	6803      	ldr	r3, [r0, #0]
9001e4c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e4c6:	4798      	blx	r3
9001e4c8:	e771      	b.n	9001e3ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001e4ca:	bf00      	nop
9001e4cc:	240218ae 	.word	0x240218ae
9001e4d0:	240218b4 	.word	0x240218b4

9001e4d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001e4d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e4d8:	b087      	sub	sp, #28
9001e4da:	4680      	mov	r8, r0
9001e4dc:	460d      	mov	r5, r1
9001e4de:	4614      	mov	r4, r2
9001e4e0:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
9001e4e4:	2e00      	cmp	r6, #0
9001e4e6:	f000 80b9 	beq.w	9001e65c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001e4ea:	6810      	ldr	r0, [r2, #0]
9001e4ec:	af02      	add	r7, sp, #8
9001e4ee:	6851      	ldr	r1, [r2, #4]
9001e4f0:	c703      	stmia	r7!, {r0, r1}
9001e4f2:	6818      	ldr	r0, [r3, #0]
9001e4f4:	af04      	add	r7, sp, #16
9001e4f6:	6859      	ldr	r1, [r3, #4]
9001e4f8:	c703      	stmia	r7!, {r0, r1}
9001e4fa:	a802      	add	r0, sp, #8
9001e4fc:	f7f6 fd6a 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e500:	4621      	mov	r1, r4
9001e502:	a804      	add	r0, sp, #16
9001e504:	f7f6 fd8e 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e508:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e50c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e510:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001e514:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001e518:	fb14 2103 	smlabb	r1, r4, r3, r2
9001e51c:	eb08 0401 	add.w	r4, r8, r1
9001e520:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e524:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001e528:	440a      	add	r2, r1
9001e52a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001e52e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001e532:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e536:	4413      	add	r3, r2
9001e538:	f8ad 3012 	strh.w	r3, [sp, #18]
9001e53c:	4b49      	ldr	r3, [pc, #292]	@ (9001e664 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001e53e:	6818      	ldr	r0, [r3, #0]
9001e540:	6803      	ldr	r3, [r0, #0]
9001e542:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e544:	4798      	blx	r3
9001e546:	4b48      	ldr	r3, [pc, #288]	@ (9001e668 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001e548:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001e54c:	2eff      	cmp	r6, #255	@ 0xff
9001e54e:	881a      	ldrh	r2, [r3, #0]
9001e550:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001e554:	fb02 c101 	mla	r1, r2, r1, ip
9001e558:	fb02 f207 	mul.w	r2, r2, r7
9001e55c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e560:	f105 0104 	add.w	r1, r5, #4
9001e564:	461d      	mov	r5, r3
9001e566:	d05a      	beq.n	9001e61e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001e568:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
9001e56c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e570:	b2b6      	uxth	r6, r6
9001e572:	9301      	str	r3, [sp, #4]
9001e574:	fa1f fe8e 	uxth.w	lr, lr
9001e578:	4282      	cmp	r2, r0
9001e57a:	d96a      	bls.n	9001e652 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e57c:	eb00 0b0a 	add.w	fp, r0, sl
9001e580:	4583      	cmp	fp, r0
9001e582:	d940      	bls.n	9001e606 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001e584:	8805      	ldrh	r5, [r0, #0]
9001e586:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e58a:	122f      	asrs	r7, r5, #8
9001e58c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e590:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001e594:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e598:	00ed      	lsls	r5, r5, #3
9001e59a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e59e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001e5a2:	fb17 f70e 	smulbb	r7, r7, lr
9001e5a6:	b2ed      	uxtb	r5, r5
9001e5a8:	fb19 f90e 	smulbb	r9, r9, lr
9001e5ac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e5b0:	fb15 f50e 	smulbb	r5, r5, lr
9001e5b4:	fb0c 7c06 	mla	ip, ip, r6, r7
9001e5b8:	10df      	asrs	r7, r3, #3
9001e5ba:	00db      	lsls	r3, r3, #3
9001e5bc:	fa1f fc8c 	uxth.w	ip, ip
9001e5c0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e5c4:	b2db      	uxtb	r3, r3
9001e5c6:	fb07 9706 	mla	r7, r7, r6, r9
9001e5ca:	f10c 0901 	add.w	r9, ip, #1
9001e5ce:	fb03 5306 	mla	r3, r3, r6, r5
9001e5d2:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001e5d6:	b29b      	uxth	r3, r3
9001e5d8:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
9001e5dc:	b2bf      	uxth	r7, r7
9001e5de:	f103 0c01 	add.w	ip, r3, #1
9001e5e2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e5e6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e5ea:	ea4c 0c09 	orr.w	ip, ip, r9
9001e5ee:	f107 0901 	add.w	r9, r7, #1
9001e5f2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001e5f6:	097f      	lsrs	r7, r7, #5
9001e5f8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9001e5fc:	ea4c 0c07 	orr.w	ip, ip, r7
9001e600:	f820 cb02 	strh.w	ip, [r0], #2
9001e604:	e7bc      	b.n	9001e580 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001e606:	9b01      	ldr	r3, [sp, #4]
9001e608:	881b      	ldrh	r3, [r3, #0]
9001e60a:	eba3 0308 	sub.w	r3, r3, r8
9001e60e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e612:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e616:	eba3 0308 	sub.w	r3, r3, r8
9001e61a:	441c      	add	r4, r3
9001e61c:	e7ac      	b.n	9001e578 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001e61e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e622:	4282      	cmp	r2, r0
9001e624:	d915      	bls.n	9001e652 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e626:	eb00 060a 	add.w	r6, r0, sl
9001e62a:	4286      	cmp	r6, r0
9001e62c:	d906      	bls.n	9001e63c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001e62e:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e632:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e636:	f820 3b02 	strh.w	r3, [r0], #2
9001e63a:	e7f6      	b.n	9001e62a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001e63c:	882b      	ldrh	r3, [r5, #0]
9001e63e:	eba3 0308 	sub.w	r3, r3, r8
9001e642:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e646:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e64a:	eba3 0308 	sub.w	r3, r3, r8
9001e64e:	441c      	add	r4, r3
9001e650:	e7e7      	b.n	9001e622 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001e652:	4b04      	ldr	r3, [pc, #16]	@ (9001e664 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001e654:	6818      	ldr	r0, [r3, #0]
9001e656:	6803      	ldr	r3, [r0, #0]
9001e658:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e65a:	4798      	blx	r3
9001e65c:	b007      	add	sp, #28
9001e65e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e662:	bf00      	nop
9001e664:	240218b4 	.word	0x240218b4
9001e668:	240218ae 	.word	0x240218ae

9001e66c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001e66c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e670:	b091      	sub	sp, #68	@ 0x44
9001e672:	4680      	mov	r8, r0
9001e674:	460f      	mov	r7, r1
9001e676:	4614      	mov	r4, r2
9001e678:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
9001e67c:	2d00      	cmp	r5, #0
9001e67e:	d051      	beq.n	9001e724 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001e680:	6810      	ldr	r0, [r2, #0]
9001e682:	ae0c      	add	r6, sp, #48	@ 0x30
9001e684:	6851      	ldr	r1, [r2, #4]
9001e686:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 9001e888 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001e68a:	c603      	stmia	r6!, {r0, r1}
9001e68c:	6818      	ldr	r0, [r3, #0]
9001e68e:	ae0e      	add	r6, sp, #56	@ 0x38
9001e690:	6859      	ldr	r1, [r3, #4]
9001e692:	c603      	stmia	r6!, {r0, r1}
9001e694:	a80c      	add	r0, sp, #48	@ 0x30
9001e696:	f7f6 fc9d 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e69a:	4621      	mov	r1, r4
9001e69c:	a80e      	add	r0, sp, #56	@ 0x38
9001e69e:	f7f6 fcc1 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e6a2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
9001e6a6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001e6aa:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001e6ae:	f8d9 0000 	ldr.w	r0, [r9]
9001e6b2:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e6b6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001e6ba:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
9001e6be:	eb08 0401 	add.w	r4, r8, r1
9001e6c2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001e6c6:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 9001e88c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001e6ca:	440a      	add	r2, r1
9001e6cc:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
9001e6d0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
9001e6d4:	4413      	add	r3, r2
9001e6d6:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9001e6da:	6803      	ldr	r3, [r0, #0]
9001e6dc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001e6de:	4798      	blx	r3
9001e6e0:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001e6e4:	f8d9 0000 	ldr.w	r0, [r9]
9001e6e8:	d01f      	beq.n	9001e72a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001e6ea:	2200      	movs	r2, #0
9001e6ec:	6801      	ldr	r1, [r0, #0]
9001e6ee:	b2b6      	uxth	r6, r6
9001e6f0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001e6f4:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001e6f8:	220b      	movs	r2, #11
9001e6fa:	9207      	str	r2, [sp, #28]
9001e6fc:	f8b8 2000 	ldrh.w	r2, [r8]
9001e700:	9601      	str	r6, [sp, #4]
9001e702:	9206      	str	r2, [sp, #24]
9001e704:	2201      	movs	r2, #1
9001e706:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001e70a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
9001e70e:	9203      	str	r2, [sp, #12]
9001e710:	fa1f f28a 	uxth.w	r2, sl
9001e714:	9202      	str	r2, [sp, #8]
9001e716:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001e71a:	9200      	str	r2, [sp, #0]
9001e71c:	463a      	mov	r2, r7
9001e71e:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
9001e720:	4621      	mov	r1, r4
9001e722:	47a8      	blx	r5
9001e724:	b011      	add	sp, #68	@ 0x44
9001e726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e72a:	6803      	ldr	r3, [r0, #0]
9001e72c:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001e730:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e732:	4798      	blx	r3
9001e734:	f8b8 2000 	ldrh.w	r2, [r8]
9001e738:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001e73c:	2dff      	cmp	r5, #255	@ 0xff
9001e73e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
9001e742:	fb0a fa02 	mul.w	sl, sl, r2
9001e746:	fb02 1303 	mla	r3, r2, r3, r1
9001e74a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e74e:	d062      	beq.n	9001e816 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001e750:	ea6f 0c05 	mvn.w	ip, r5
9001e754:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001e758:	b2ad      	uxth	r5, r5
9001e75a:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
9001e75e:	fa5f fc8c 	uxtb.w	ip, ip
9001e762:	930a      	str	r3, [sp, #40]	@ 0x28
9001e764:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e766:	4298      	cmp	r0, r3
9001e768:	f080 8085 	bcs.w	9001e876 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001e76c:	eb00 0b09 	add.w	fp, r0, r9
9001e770:	4558      	cmp	r0, fp
9001e772:	d246      	bcs.n	9001e802 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001e774:	f814 eb01 	ldrb.w	lr, [r4], #1
9001e778:	2303      	movs	r3, #3
9001e77a:	2204      	movs	r2, #4
9001e77c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001e780:	8803      	ldrh	r3, [r0, #0]
9001e782:	eb07 0a0e 	add.w	sl, r7, lr
9001e786:	1219      	asrs	r1, r3, #8
9001e788:	10da      	asrs	r2, r3, #3
9001e78a:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001e78e:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001e792:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001e796:	00db      	lsls	r3, r3, #3
9001e798:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001e79c:	fb18 f805 	smulbb	r8, r8, r5
9001e7a0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001e7a4:	fb1e fe05 	smulbb	lr, lr, r5
9001e7a8:	b2db      	uxtb	r3, r3
9001e7aa:	fb01 810c 	mla	r1, r1, ip, r8
9001e7ae:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001e7b2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001e7b6:	fb18 f805 	smulbb	r8, r8, r5
9001e7ba:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001e7be:	b289      	uxth	r1, r1
9001e7c0:	fb02 820c 	mla	r2, r2, ip, r8
9001e7c4:	fb03 e30c 	mla	r3, r3, ip, lr
9001e7c8:	f101 0801 	add.w	r8, r1, #1
9001e7cc:	b292      	uxth	r2, r2
9001e7ce:	b29b      	uxth	r3, r3
9001e7d0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001e7d4:	f102 0801 	add.w	r8, r2, #1
9001e7d8:	f103 0e01 	add.w	lr, r3, #1
9001e7dc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001e7e0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9001e7e4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001e7e8:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001e7ec:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001e7f0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001e7f4:	ea4e 0101 	orr.w	r1, lr, r1
9001e7f8:	ea41 0108 	orr.w	r1, r1, r8
9001e7fc:	f820 1b02 	strh.w	r1, [r0], #2
9001e800:	e7b6      	b.n	9001e770 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001e802:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001e804:	881b      	ldrh	r3, [r3, #0]
9001e806:	1b9b      	subs	r3, r3, r6
9001e808:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e80c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001e810:	1b9b      	subs	r3, r3, r6
9001e812:	441c      	add	r4, r3
9001e814:	e7a6      	b.n	9001e764 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001e816:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001e81a:	2203      	movs	r2, #3
9001e81c:	2504      	movs	r5, #4
9001e81e:	4919      	ldr	r1, [pc, #100]	@ (9001e884 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001e820:	4550      	cmp	r0, sl
9001e822:	d228      	bcs.n	9001e876 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001e824:	eb00 0c09 	add.w	ip, r0, r9
9001e828:	4560      	cmp	r0, ip
9001e82a:	4623      	mov	r3, r4
9001e82c:	d219      	bcs.n	9001e862 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001e82e:	f893 e000 	ldrb.w	lr, [r3]
9001e832:	3401      	adds	r4, #1
9001e834:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001e838:	eb07 0b0e 	add.w	fp, r7, lr
9001e83c:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001e840:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001e844:	f89b b001 	ldrb.w	fp, [fp, #1]
9001e848:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001e84c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001e850:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001e854:	ea43 030b 	orr.w	r3, r3, fp
9001e858:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001e85c:	f820 3b02 	strh.w	r3, [r0], #2
9001e860:	e7e2      	b.n	9001e828 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001e862:	f8b8 3000 	ldrh.w	r3, [r8]
9001e866:	1b9b      	subs	r3, r3, r6
9001e868:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e86c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001e870:	1b9b      	subs	r3, r3, r6
9001e872:	441c      	add	r4, r3
9001e874:	e7d4      	b.n	9001e820 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001e876:	4b04      	ldr	r3, [pc, #16]	@ (9001e888 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001e878:	6818      	ldr	r0, [r3, #0]
9001e87a:	6803      	ldr	r3, [r0, #0]
9001e87c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e87e:	4798      	blx	r3
9001e880:	e750      	b.n	9001e724 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001e882:	bf00      	nop
9001e884:	fffff800 	.word	0xfffff800
9001e888:	240218b4 	.word	0x240218b4
9001e88c:	240218ae 	.word	0x240218ae

9001e890 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001e890:	b4f0      	push	{r4, r5, r6, r7}
9001e892:	460c      	mov	r4, r1
9001e894:	4611      	mov	r1, r2
9001e896:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001e89a:	461a      	mov	r2, r3
9001e89c:	780f      	ldrb	r7, [r1, #0]
9001e89e:	9b04      	ldr	r3, [sp, #16]
9001e8a0:	2f01      	cmp	r7, #1
9001e8a2:	784e      	ldrb	r6, [r1, #1]
9001e8a4:	d038      	beq.n	9001e918 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001e8a6:	d31f      	bcc.n	9001e8e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001e8a8:	2f02      	cmp	r7, #2
9001e8aa:	d14d      	bne.n	9001e948 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e8ac:	2e03      	cmp	r6, #3
9001e8ae:	d84b      	bhi.n	9001e948 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e8b0:	e8df f006 	tbb	[pc, r6]
9001e8b4:	17140702 	.word	0x17140702
9001e8b8:	9504      	str	r5, [sp, #16]
9001e8ba:	4620      	mov	r0, r4
9001e8bc:	bcf0      	pop	{r4, r5, r6, r7}
9001e8be:	f7ff be09 	b.w	9001e4d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001e8c2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001e8c4:	2800      	cmp	r0, #0
9001e8c6:	d03f      	beq.n	9001e948 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e8c8:	6806      	ldr	r6, [r0, #0]
9001e8ca:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e8ce:	68b5      	ldr	r5, [r6, #8]
9001e8d0:	4613      	mov	r3, r2
9001e8d2:	46ac      	mov	ip, r5
9001e8d4:	460a      	mov	r2, r1
9001e8d6:	4621      	mov	r1, r4
9001e8d8:	bcf0      	pop	{r4, r5, r6, r7}
9001e8da:	4760      	bx	ip
9001e8dc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001e8e0:	e7f0      	b.n	9001e8c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001e8e2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001e8e6:	e7ed      	b.n	9001e8c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001e8e8:	2e03      	cmp	r6, #3
9001e8ea:	d82d      	bhi.n	9001e948 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e8ec:	e8df f006 	tbb	[pc, r6]
9001e8f0:	110e0702 	.word	0x110e0702
9001e8f4:	9504      	str	r5, [sp, #16]
9001e8f6:	4620      	mov	r0, r4
9001e8f8:	bcf0      	pop	{r4, r5, r6, r7}
9001e8fa:	f7ff bd05 	b.w	9001e308 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001e8fe:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001e900:	b310      	cbz	r0, 9001e948 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e902:	6806      	ldr	r6, [r0, #0]
9001e904:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e908:	68f5      	ldr	r5, [r6, #12]
9001e90a:	e7e1      	b.n	9001e8d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001e90c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001e910:	e7f6      	b.n	9001e900 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001e912:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001e916:	e7f3      	b.n	9001e900 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001e918:	2e03      	cmp	r6, #3
9001e91a:	d815      	bhi.n	9001e948 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e91c:	e8df f006 	tbb	[pc, r6]
9001e920:	110e0702 	.word	0x110e0702
9001e924:	9504      	str	r5, [sp, #16]
9001e926:	4620      	mov	r0, r4
9001e928:	bcf0      	pop	{r4, r5, r6, r7}
9001e92a:	f7ff be9f 	b.w	9001e66c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001e92e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001e930:	b150      	cbz	r0, 9001e948 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001e932:	6806      	ldr	r6, [r0, #0]
9001e934:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e938:	6935      	ldr	r5, [r6, #16]
9001e93a:	e7c9      	b.n	9001e8d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001e93c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001e940:	e7f6      	b.n	9001e930 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001e942:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001e946:	e7f3      	b.n	9001e930 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001e948:	bcf0      	pop	{r4, r5, r6, r7}
9001e94a:	4770      	bx	lr

9001e94c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001e94c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e950:	b087      	sub	sp, #28
9001e952:	4604      	mov	r4, r0
9001e954:	460e      	mov	r6, r1
9001e956:	6810      	ldr	r0, [r2, #0]
9001e958:	6851      	ldr	r1, [r2, #4]
9001e95a:	ad02      	add	r5, sp, #8
9001e95c:	4617      	mov	r7, r2
9001e95e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
9001e962:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 9001eb94 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001e966:	c503      	stmia	r5!, {r0, r1}
9001e968:	6818      	ldr	r0, [r3, #0]
9001e96a:	ad04      	add	r5, sp, #16
9001e96c:	6859      	ldr	r1, [r3, #4]
9001e96e:	c503      	stmia	r5!, {r0, r1}
9001e970:	a802      	add	r0, sp, #8
9001e972:	f7f6 fb2f 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e976:	4639      	mov	r1, r7
9001e978:	a804      	add	r0, sp, #16
9001e97a:	f7f6 fb53 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e97e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e982:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e986:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001e98a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001e98e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e992:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001e996:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001e99a:	440e      	add	r6, r1
9001e99c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e9a0:	440a      	add	r2, r1
9001e9a2:	f8ad 2010 	strh.w	r2, [sp, #16]
9001e9a6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e9aa:	4413      	add	r3, r2
9001e9ac:	f8ad 3012 	strh.w	r3, [sp, #18]
9001e9b0:	4b77      	ldr	r3, [pc, #476]	@ (9001eb90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001e9b2:	6818      	ldr	r0, [r3, #0]
9001e9b4:	6803      	ldr	r3, [r0, #0]
9001e9b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e9b8:	4798      	blx	r3
9001e9ba:	f8b9 b000 	ldrh.w	fp, [r9]
9001e9be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e9c2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001e9c6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e9ca:	fb05 f50b 	mul.w	r5, r5, fp
9001e9ce:	fb0b 2303 	mla	r3, fp, r3, r2
9001e9d2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e9d6:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001e9da:	9300      	str	r3, [sp, #0]
9001e9dc:	d069      	beq.n	9001eab2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001e9de:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001e9e2:	4558      	cmp	r0, fp
9001e9e4:	f080 80cc 	bcs.w	9001eb80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001e9e8:	9b00      	ldr	r3, [sp, #0]
9001e9ea:	4631      	mov	r1, r6
9001e9ec:	18c3      	adds	r3, r0, r3
9001e9ee:	9301      	str	r3, [sp, #4]
9001e9f0:	9b01      	ldr	r3, [sp, #4]
9001e9f2:	4298      	cmp	r0, r3
9001e9f4:	d24f      	bcs.n	9001ea96 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001e9f6:	f811 2b01 	ldrb.w	r2, [r1], #1
9001e9fa:	2a00      	cmp	r2, #0
9001e9fc:	d048      	beq.n	9001ea90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001e9fe:	fb0a f202 	mul.w	r2, sl, r2
9001ea02:	1c53      	adds	r3, r2, #1
9001ea04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001ea08:	121b      	asrs	r3, r3, #8
9001ea0a:	d041      	beq.n	9001ea90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001ea0c:	8802      	ldrh	r2, [r0, #0]
9001ea0e:	b29e      	uxth	r6, r3
9001ea10:	f8b4 c000 	ldrh.w	ip, [r4]
9001ea14:	43db      	mvns	r3, r3
9001ea16:	1215      	asrs	r5, r2, #8
9001ea18:	b2db      	uxtb	r3, r3
9001ea1a:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ea1e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001ea22:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001ea26:	fb15 f503 	smulbb	r5, r5, r3
9001ea2a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ea2e:	00d2      	lsls	r2, r2, #3
9001ea30:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001ea34:	fb07 5706 	mla	r7, r7, r6, r5
9001ea38:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001ea3c:	b2d2      	uxtb	r2, r2
9001ea3e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ea42:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001ea46:	fb1e fe03 	smulbb	lr, lr, r3
9001ea4a:	b2bf      	uxth	r7, r7
9001ea4c:	fb12 f203 	smulbb	r2, r2, r3
9001ea50:	fa5f fc8c 	uxtb.w	ip, ip
9001ea54:	fb05 e506 	mla	r5, r5, r6, lr
9001ea58:	f107 0e01 	add.w	lr, r7, #1
9001ea5c:	fb0c 2c06 	mla	ip, ip, r6, r2
9001ea60:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001ea64:	fa1f fc8c 	uxth.w	ip, ip
9001ea68:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
9001ea6c:	b2ad      	uxth	r5, r5
9001ea6e:	f10c 0701 	add.w	r7, ip, #1
9001ea72:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001ea76:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001ea7a:	ea47 070e 	orr.w	r7, r7, lr
9001ea7e:	f105 0e01 	add.w	lr, r5, #1
9001ea82:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001ea86:	096d      	lsrs	r5, r5, #5
9001ea88:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ea8c:	432f      	orrs	r7, r5
9001ea8e:	8007      	strh	r7, [r0, #0]
9001ea90:	3002      	adds	r0, #2
9001ea92:	3402      	adds	r4, #2
9001ea94:	e7ac      	b.n	9001e9f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001ea96:	f8b9 3000 	ldrh.w	r3, [r9]
9001ea9a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001ea9e:	eba3 0308 	sub.w	r3, r3, r8
9001eaa2:	eba6 0608 	sub.w	r6, r6, r8
9001eaa6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001eaaa:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001eaae:	440e      	add	r6, r1
9001eab0:	e797      	b.n	9001e9e2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001eab2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001eab6:	42a8      	cmp	r0, r5
9001eab8:	d262      	bcs.n	9001eb80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001eaba:	9b00      	ldr	r3, [sp, #0]
9001eabc:	4631      	mov	r1, r6
9001eabe:	eb00 0b03 	add.w	fp, r0, r3
9001eac2:	4558      	cmp	r0, fp
9001eac4:	d24e      	bcs.n	9001eb64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001eac6:	f811 3b01 	ldrb.w	r3, [r1], #1
9001eaca:	b12b      	cbz	r3, 9001ead8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001eacc:	2bff      	cmp	r3, #255	@ 0xff
9001eace:	f8b4 e000 	ldrh.w	lr, [r4]
9001ead2:	d104      	bne.n	9001eade <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001ead4:	f8a0 e000 	strh.w	lr, [r0]
9001ead8:	3002      	adds	r0, #2
9001eada:	3402      	adds	r4, #2
9001eadc:	e7f1      	b.n	9001eac2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001eade:	8802      	ldrh	r2, [r0, #0]
9001eae0:	b29f      	uxth	r7, r3
9001eae2:	43db      	mvns	r3, r3
9001eae4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001eae8:	1216      	asrs	r6, r2, #8
9001eaea:	b2db      	uxtb	r3, r3
9001eaec:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001eaf0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001eaf4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001eaf8:	00d2      	lsls	r2, r2, #3
9001eafa:	fb16 f603 	smulbb	r6, r6, r3
9001eafe:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001eb02:	b2d2      	uxtb	r2, r2
9001eb04:	fb0c 6c07 	mla	ip, ip, r7, r6
9001eb08:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001eb0c:	fb1a fa03 	smulbb	sl, sl, r3
9001eb10:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001eb14:	fa1f fc8c 	uxth.w	ip, ip
9001eb18:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001eb1c:	fb12 f303 	smulbb	r3, r2, r3
9001eb20:	fa5f fe8e 	uxtb.w	lr, lr
9001eb24:	fb06 a607 	mla	r6, r6, r7, sl
9001eb28:	f10c 0201 	add.w	r2, ip, #1
9001eb2c:	fb0e 3307 	mla	r3, lr, r7, r3
9001eb30:	b2b6      	uxth	r6, r6
9001eb32:	b29b      	uxth	r3, r3
9001eb34:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001eb38:	f106 0a01 	add.w	sl, r6, #1
9001eb3c:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
9001eb40:	f103 0c01 	add.w	ip, r3, #1
9001eb44:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001eb48:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001eb4c:	0976      	lsrs	r6, r6, #5
9001eb4e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001eb52:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001eb56:	ea4c 0c02 	orr.w	ip, ip, r2
9001eb5a:	ea4c 0c06 	orr.w	ip, ip, r6
9001eb5e:	f8a0 c000 	strh.w	ip, [r0]
9001eb62:	e7b9      	b.n	9001ead8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001eb64:	f8b9 3000 	ldrh.w	r3, [r9]
9001eb68:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001eb6c:	eba3 0308 	sub.w	r3, r3, r8
9001eb70:	eba6 0608 	sub.w	r6, r6, r8
9001eb74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001eb78:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001eb7c:	440e      	add	r6, r1
9001eb7e:	e79a      	b.n	9001eab6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001eb80:	4b03      	ldr	r3, [pc, #12]	@ (9001eb90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001eb82:	6818      	ldr	r0, [r3, #0]
9001eb84:	6803      	ldr	r3, [r0, #0]
9001eb86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001eb88:	4798      	blx	r3
9001eb8a:	b007      	add	sp, #28
9001eb8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eb90:	240218b4 	.word	0x240218b4
9001eb94:	240218ae 	.word	0x240218ae

9001eb98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001eb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eb9c:	b089      	sub	sp, #36	@ 0x24
9001eb9e:	4607      	mov	r7, r0
9001eba0:	4688      	mov	r8, r1
9001eba2:	4692      	mov	sl, r2
9001eba4:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
9001eba8:	4699      	mov	r9, r3
9001ebaa:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001ebac:	2e00      	cmp	r6, #0
9001ebae:	d048      	beq.n	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ebb0:	4608      	mov	r0, r1
9001ebb2:	f7fa f813 	bl	90018bdc <_ZNK8touchgfx6Bitmap8getWidthEv>
9001ebb6:	4605      	mov	r5, r0
9001ebb8:	4640      	mov	r0, r8
9001ebba:	f7fa f843 	bl	90018c44 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001ebbe:	f8ad 000e 	strh.w	r0, [sp, #14]
9001ebc2:	4640      	mov	r0, r8
9001ebc4:	f8ad a008 	strh.w	sl, [sp, #8]
9001ebc8:	f8ad 500c 	strh.w	r5, [sp, #12]
9001ebcc:	f8ad 900a 	strh.w	r9, [sp, #10]
9001ebd0:	f7fa f8f6 	bl	90018dc0 <_ZNK8touchgfx6Bitmap7getDataEv>
9001ebd4:	4605      	mov	r5, r0
9001ebd6:	4640      	mov	r0, r8
9001ebd8:	f7fa f922 	bl	90018e20 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001ebdc:	4682      	mov	sl, r0
9001ebde:	4640      	mov	r0, r8
9001ebe0:	f7fa f972 	bl	90018ec8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001ebe4:	2810      	cmp	r0, #16
9001ebe6:	d82c      	bhi.n	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ebe8:	e8df f010 	tbh	[pc, r0, lsl #1]
9001ebec:	00ba00ca 	.word	0x00ba00ca
9001ebf0:	002b0011 	.word	0x002b0011
9001ebf4:	002b002b 	.word	0x002b002b
9001ebf8:	002b002b 	.word	0x002b002b
9001ebfc:	002b002b 	.word	0x002b002b
9001ec00:	00c1002b 	.word	0x00c1002b
9001ec04:	002b002b 	.word	0x002b002b
9001ec08:	002b0180 	.word	0x002b0180
9001ec0c:	0173      	.short	0x0173
9001ec0e:	4bbc      	ldr	r3, [pc, #752]	@ (9001ef00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
9001ec10:	6818      	ldr	r0, [r3, #0]
9001ec12:	6803      	ldr	r3, [r0, #0]
9001ec14:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001ec16:	4798      	blx	r3
9001ec18:	2eff      	cmp	r6, #255	@ 0xff
9001ec1a:	d101      	bne.n	9001ec20 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001ec1c:	0683      	lsls	r3, r0, #26
9001ec1e:	d506      	bpl.n	9001ec2e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
9001ec20:	4633      	mov	r3, r6
9001ec22:	4622      	mov	r2, r4
9001ec24:	a902      	add	r1, sp, #8
9001ec26:	4628      	mov	r0, r5
9001ec28:	f7ff f8fc 	bl	9001de24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ec2c:	e009      	b.n	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ec2e:	4640      	mov	r0, r8
9001ec30:	f7fa f88e 	bl	90018d50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001ec34:	b940      	cbnz	r0, 9001ec48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
9001ec36:	4623      	mov	r3, r4
9001ec38:	aa02      	add	r2, sp, #8
9001ec3a:	4629      	mov	r1, r5
9001ec3c:	4638      	mov	r0, r7
9001ec3e:	f7ff f9d7 	bl	9001dff0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001ec42:	b009      	add	sp, #36	@ 0x24
9001ec44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ec48:	f10d 0918 	add.w	r9, sp, #24
9001ec4c:	4641      	mov	r1, r8
9001ec4e:	f10d 0810 	add.w	r8, sp, #16
9001ec52:	4648      	mov	r0, r9
9001ec54:	f7fa f82a 	bl	90018cac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001ec58:	e899 0003 	ldmia.w	r9, {r0, r1}
9001ec5c:	e888 0003 	stmia.w	r8, {r0, r1}
9001ec60:	4640      	mov	r0, r8
9001ec62:	4621      	mov	r1, r4
9001ec64:	f7f0 fcf4 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9001ec68:	4640      	mov	r0, r8
9001ec6a:	f7f0 fd34 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001ec6e:	2800      	cmp	r0, #0
9001ec70:	d1d6      	bne.n	9001ec20 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001ec72:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ec76:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001ec7a:	4293      	cmp	r3, r2
9001ec7c:	dd12      	ble.n	9001eca4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
9001ec7e:	1a9b      	subs	r3, r3, r2
9001ec80:	f9b4 0000 	ldrsh.w	r0, [r4]
9001ec84:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001ec88:	f8ad 0018 	strh.w	r0, [sp, #24]
9001ec8c:	4628      	mov	r0, r5
9001ec8e:	f8ad 201a 	strh.w	r2, [sp, #26]
9001ec92:	464a      	mov	r2, r9
9001ec94:	f8ad 101c 	strh.w	r1, [sp, #28]
9001ec98:	a902      	add	r1, sp, #8
9001ec9a:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ec9e:	4633      	mov	r3, r6
9001eca0:	f7ff f8c0 	bl	9001de24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001eca4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001eca8:	f9b4 2000 	ldrsh.w	r2, [r4]
9001ecac:	4293      	cmp	r3, r2
9001ecae:	dd12      	ble.n	9001ecd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
9001ecb0:	1a9b      	subs	r3, r3, r2
9001ecb2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001ecb6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001ecba:	f8ad 2018 	strh.w	r2, [sp, #24]
9001ecbe:	464a      	mov	r2, r9
9001ecc0:	f8ad 001a 	strh.w	r0, [sp, #26]
9001ecc4:	4628      	mov	r0, r5
9001ecc6:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ecca:	23ff      	movs	r3, #255	@ 0xff
9001eccc:	f8ad 101e 	strh.w	r1, [sp, #30]
9001ecd0:	a902      	add	r1, sp, #8
9001ecd2:	f7ff f8a7 	bl	9001de24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ecd6:	4643      	mov	r3, r8
9001ecd8:	aa02      	add	r2, sp, #8
9001ecda:	4629      	mov	r1, r5
9001ecdc:	4638      	mov	r0, r7
9001ecde:	f7ff f987 	bl	9001dff0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001ece2:	88a2      	ldrh	r2, [r4, #4]
9001ece4:	8823      	ldrh	r3, [r4, #0]
9001ece6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001ecea:	4413      	add	r3, r2
9001ecec:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ecf0:	440a      	add	r2, r1
9001ecf2:	b29b      	uxth	r3, r3
9001ecf4:	b292      	uxth	r2, r2
9001ecf6:	b218      	sxth	r0, r3
9001ecf8:	b211      	sxth	r1, r2
9001ecfa:	4288      	cmp	r0, r1
9001ecfc:	dd12      	ble.n	9001ed24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
9001ecfe:	1a9b      	subs	r3, r3, r2
9001ed00:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001ed04:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001ed08:	464a      	mov	r2, r9
9001ed0a:	f8ad 1018 	strh.w	r1, [sp, #24]
9001ed0e:	a902      	add	r1, sp, #8
9001ed10:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ed14:	23ff      	movs	r3, #255	@ 0xff
9001ed16:	f8ad 001e 	strh.w	r0, [sp, #30]
9001ed1a:	4628      	mov	r0, r5
9001ed1c:	f8ad 601a 	strh.w	r6, [sp, #26]
9001ed20:	f7ff f880 	bl	9001de24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ed24:	88e2      	ldrh	r2, [r4, #6]
9001ed26:	8863      	ldrh	r3, [r4, #2]
9001ed28:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001ed2c:	4413      	add	r3, r2
9001ed2e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001ed32:	440a      	add	r2, r1
9001ed34:	b29b      	uxth	r3, r3
9001ed36:	b292      	uxth	r2, r2
9001ed38:	b218      	sxth	r0, r3
9001ed3a:	b211      	sxth	r1, r2
9001ed3c:	4288      	cmp	r0, r1
9001ed3e:	dd80      	ble.n	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ed40:	1a9b      	subs	r3, r3, r2
9001ed42:	f9b4 6000 	ldrsh.w	r6, [r4]
9001ed46:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001ed4a:	464a      	mov	r2, r9
9001ed4c:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ed50:	23ff      	movs	r3, #255	@ 0xff
9001ed52:	f8ad 6018 	strh.w	r6, [sp, #24]
9001ed56:	f8ad 101a 	strh.w	r1, [sp, #26]
9001ed5a:	f8ad 001c 	strh.w	r0, [sp, #28]
9001ed5e:	e761      	b.n	9001ec24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
9001ed60:	4633      	mov	r3, r6
9001ed62:	4622      	mov	r2, r4
9001ed64:	a902      	add	r1, sp, #8
9001ed66:	4628      	mov	r0, r5
9001ed68:	f7ff f9b2 	bl	9001e0d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001ed6c:	e769      	b.n	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ed6e:	e9cd 4600 	strd	r4, r6, [sp]
9001ed72:	ab02      	add	r3, sp, #8
9001ed74:	4652      	mov	r2, sl
9001ed76:	4629      	mov	r1, r5
9001ed78:	4638      	mov	r0, r7
9001ed7a:	f7ff fd89 	bl	9001e890 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001ed7e:	e760      	b.n	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ed80:	4640      	mov	r0, r8
9001ed82:	f7f9 ffe5 	bl	90018d50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001ed86:	b948      	cbnz	r0, 9001ed9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
9001ed88:	683b      	ldr	r3, [r7, #0]
9001ed8a:	aa02      	add	r2, sp, #8
9001ed8c:	4629      	mov	r1, r5
9001ed8e:	e9cd 6000 	strd	r6, r0, [sp]
9001ed92:	4638      	mov	r0, r7
9001ed94:	68de      	ldr	r6, [r3, #12]
9001ed96:	4623      	mov	r3, r4
9001ed98:	47b0      	blx	r6
9001ed9a:	e752      	b.n	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ed9c:	f10d 0918 	add.w	r9, sp, #24
9001eda0:	4641      	mov	r1, r8
9001eda2:	f10d 0810 	add.w	r8, sp, #16
9001eda6:	4648      	mov	r0, r9
9001eda8:	f7f9 ff80 	bl	90018cac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001edac:	e899 0003 	ldmia.w	r9, {r0, r1}
9001edb0:	e888 0003 	stmia.w	r8, {r0, r1}
9001edb4:	4640      	mov	r0, r8
9001edb6:	4621      	mov	r1, r4
9001edb8:	f7f0 fc4a 	bl	9000f650 <_ZN8touchgfx4RectaNERKS0_>
9001edbc:	4640      	mov	r0, r8
9001edbe:	f7f0 fc8a 	bl	9000f6d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001edc2:	b138      	cbz	r0, 9001edd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
9001edc4:	4623      	mov	r3, r4
9001edc6:	9600      	str	r6, [sp, #0]
9001edc8:	aa02      	add	r2, sp, #8
9001edca:	4651      	mov	r1, sl
9001edcc:	4628      	mov	r0, r5
9001edce:	f7ff fdbd 	bl	9001e94c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001edd2:	e736      	b.n	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001edd4:	683b      	ldr	r3, [r7, #0]
9001edd6:	aa02      	add	r2, sp, #8
9001edd8:	4629      	mov	r1, r5
9001edda:	e9cd 6000 	strd	r6, r0, [sp]
9001edde:	4638      	mov	r0, r7
9001ede0:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001ede4:	4643      	mov	r3, r8
9001ede6:	47d8      	blx	fp
9001ede8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001edec:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001edf0:	4293      	cmp	r3, r2
9001edf2:	dd13      	ble.n	9001ee1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
9001edf4:	f9b4 0000 	ldrsh.w	r0, [r4]
9001edf8:	1a9b      	subs	r3, r3, r2
9001edfa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001edfe:	f8ad 0018 	strh.w	r0, [sp, #24]
9001ee02:	4628      	mov	r0, r5
9001ee04:	f8ad 201a 	strh.w	r2, [sp, #26]
9001ee08:	aa02      	add	r2, sp, #8
9001ee0a:	f8ad 101c 	strh.w	r1, [sp, #28]
9001ee0e:	4651      	mov	r1, sl
9001ee10:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ee14:	464b      	mov	r3, r9
9001ee16:	9600      	str	r6, [sp, #0]
9001ee18:	f7ff fd98 	bl	9001e94c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ee1c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001ee20:	f9b4 2000 	ldrsh.w	r2, [r4]
9001ee24:	4293      	cmp	r3, r2
9001ee26:	dd13      	ble.n	9001ee50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
9001ee28:	1a9b      	subs	r3, r3, r2
9001ee2a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001ee2e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001ee32:	f8ad 2018 	strh.w	r2, [sp, #24]
9001ee36:	aa02      	add	r2, sp, #8
9001ee38:	f8ad 001a 	strh.w	r0, [sp, #26]
9001ee3c:	4628      	mov	r0, r5
9001ee3e:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ee42:	464b      	mov	r3, r9
9001ee44:	f8ad 101e 	strh.w	r1, [sp, #30]
9001ee48:	4651      	mov	r1, sl
9001ee4a:	9600      	str	r6, [sp, #0]
9001ee4c:	f7ff fd7e 	bl	9001e94c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ee50:	88a2      	ldrh	r2, [r4, #4]
9001ee52:	8823      	ldrh	r3, [r4, #0]
9001ee54:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001ee58:	4413      	add	r3, r2
9001ee5a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ee5e:	440a      	add	r2, r1
9001ee60:	b29b      	uxth	r3, r3
9001ee62:	b292      	uxth	r2, r2
9001ee64:	b218      	sxth	r0, r3
9001ee66:	b211      	sxth	r1, r2
9001ee68:	4288      	cmp	r0, r1
9001ee6a:	dd13      	ble.n	9001ee94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
9001ee6c:	1a9b      	subs	r3, r3, r2
9001ee6e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001ee72:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001ee76:	aa02      	add	r2, sp, #8
9001ee78:	f8ad 1018 	strh.w	r1, [sp, #24]
9001ee7c:	4651      	mov	r1, sl
9001ee7e:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ee82:	464b      	mov	r3, r9
9001ee84:	f8ad 001e 	strh.w	r0, [sp, #30]
9001ee88:	4628      	mov	r0, r5
9001ee8a:	9600      	str	r6, [sp, #0]
9001ee8c:	f8ad 701a 	strh.w	r7, [sp, #26]
9001ee90:	f7ff fd5c 	bl	9001e94c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ee94:	88e2      	ldrh	r2, [r4, #6]
9001ee96:	8863      	ldrh	r3, [r4, #2]
9001ee98:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001ee9c:	4413      	add	r3, r2
9001ee9e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001eea2:	440a      	add	r2, r1
9001eea4:	b29b      	uxth	r3, r3
9001eea6:	b292      	uxth	r2, r2
9001eea8:	b218      	sxth	r0, r3
9001eeaa:	b211      	sxth	r1, r2
9001eeac:	4288      	cmp	r0, r1
9001eeae:	f77f aec8 	ble.w	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001eeb2:	f9b4 7000 	ldrsh.w	r7, [r4]
9001eeb6:	1a9b      	subs	r3, r3, r2
9001eeb8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001eebc:	f8ad 301e 	strh.w	r3, [sp, #30]
9001eec0:	464b      	mov	r3, r9
9001eec2:	f8ad 7018 	strh.w	r7, [sp, #24]
9001eec6:	f8ad 101a 	strh.w	r1, [sp, #26]
9001eeca:	f8ad 001c 	strh.w	r0, [sp, #28]
9001eece:	9600      	str	r6, [sp, #0]
9001eed0:	e77a      	b.n	9001edc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
9001eed2:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
9001eed6:	2800      	cmp	r0, #0
9001eed8:	f43f aeb3 	beq.w	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001eedc:	6803      	ldr	r3, [r0, #0]
9001eede:	9600      	str	r6, [sp, #0]
9001eee0:	68de      	ldr	r6, [r3, #12]
9001eee2:	4623      	mov	r3, r4
9001eee4:	aa02      	add	r2, sp, #8
9001eee6:	4629      	mov	r1, r5
9001eee8:	47b0      	blx	r6
9001eeea:	e6aa      	b.n	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001eeec:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
9001eef0:	2800      	cmp	r0, #0
9001eef2:	f43f aea6 	beq.w	9001ec42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001eef6:	6803      	ldr	r3, [r0, #0]
9001eef8:	9600      	str	r6, [sp, #0]
9001eefa:	689e      	ldr	r6, [r3, #8]
9001eefc:	e7f1      	b.n	9001eee2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
9001eefe:	bf00      	nop
9001ef00:	240218b4 	.word	0x240218b4

9001ef04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001ef04:	b180      	cbz	r0, 9001ef28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001ef06:	2903      	cmp	r1, #3
9001ef08:	d81c      	bhi.n	9001ef44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001ef0a:	e8df f001 	tbb	[pc, r1]
9001ef0e:	1d02      	.short	0x1d02
9001ef10:	1f08      	.short	0x1f08
9001ef12:	4b10      	ldr	r3, [pc, #64]	@ (9001ef54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001ef14:	8818      	ldrh	r0, [r3, #0]
9001ef16:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ef1a:	4240      	negs	r0, r0
9001ef1c:	4770      	bx	lr
9001ef1e:	4b0d      	ldr	r3, [pc, #52]	@ (9001ef54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001ef20:	8818      	ldrh	r0, [r3, #0]
9001ef22:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ef26:	4770      	bx	lr
9001ef28:	2903      	cmp	r1, #3
9001ef2a:	d80b      	bhi.n	9001ef44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001ef2c:	a301      	add	r3, pc, #4	@ (adr r3, 9001ef34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001ef2e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001ef32:	bf00      	nop
9001ef34:	9001ef49 	.word	0x9001ef49
9001ef38:	9001ef1f 	.word	0x9001ef1f
9001ef3c:	9001ef4d 	.word	0x9001ef4d
9001ef40:	9001ef13 	.word	0x9001ef13
9001ef44:	2000      	movs	r0, #0
9001ef46:	4770      	bx	lr
9001ef48:	2001      	movs	r0, #1
9001ef4a:	4770      	bx	lr
9001ef4c:	f04f 30ff 	mov.w	r0, #4294967295
9001ef50:	4770      	bx	lr
9001ef52:	bf00      	nop
9001ef54:	240218ae 	.word	0x240218ae

9001ef58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001ef58:	b180      	cbz	r0, 9001ef7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001ef5a:	2903      	cmp	r1, #3
9001ef5c:	d81c      	bhi.n	9001ef98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001ef5e:	e8df f001 	tbb	[pc, r1]
9001ef62:	021d      	.short	0x021d
9001ef64:	071f      	.short	0x071f
9001ef66:	4b10      	ldr	r3, [pc, #64]	@ (9001efa8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001ef68:	8818      	ldrh	r0, [r3, #0]
9001ef6a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ef6e:	4770      	bx	lr
9001ef70:	4b0d      	ldr	r3, [pc, #52]	@ (9001efa8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001ef72:	8818      	ldrh	r0, [r3, #0]
9001ef74:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ef78:	4240      	negs	r0, r0
9001ef7a:	4770      	bx	lr
9001ef7c:	2903      	cmp	r1, #3
9001ef7e:	d80b      	bhi.n	9001ef98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001ef80:	a301      	add	r3, pc, #4	@ (adr r3, 9001ef88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001ef82:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001ef86:	bf00      	nop
9001ef88:	9001ef67 	.word	0x9001ef67
9001ef8c:	9001efa1 	.word	0x9001efa1
9001ef90:	9001ef71 	.word	0x9001ef71
9001ef94:	9001ef9d 	.word	0x9001ef9d
9001ef98:	2000      	movs	r0, #0
9001ef9a:	4770      	bx	lr
9001ef9c:	2001      	movs	r0, #1
9001ef9e:	4770      	bx	lr
9001efa0:	f04f 30ff 	mov.w	r0, #4294967295
9001efa4:	4770      	bx	lr
9001efa6:	bf00      	nop
9001efa8:	240218ae 	.word	0x240218ae

9001efac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001efac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001efb0:	b099      	sub	sp, #100	@ 0x64
9001efb2:	910b      	str	r1, [sp, #44]	@ 0x2c
9001efb4:	a914      	add	r1, sp, #80	@ 0x50
9001efb6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
9001efba:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
9001efbe:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
9001efc2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
9001efc6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
9001efca:	e881 000c 	stmia.w	r1, {r2, r3}
9001efce:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
9001efd2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
9001efd6:	9309      	str	r3, [sp, #36]	@ 0x24
9001efd8:	f891 900d 	ldrb.w	r9, [r1, #13]
9001efdc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
9001efe0:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001efe4:	9310      	str	r3, [sp, #64]	@ 0x40
9001efe6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
9001efea:	930c      	str	r3, [sp, #48]	@ 0x30
9001efec:	f407 7380 	and.w	r3, r7, #256	@ 0x100
9001eff0:	798f      	ldrb	r7, [r1, #6]
9001eff2:	431f      	orrs	r7, r3
9001eff4:	f000 8195 	beq.w	9001f322 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001eff8:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001effc:	f409 7380 	and.w	r3, r9, #256	@ 0x100
9001f000:	f891 9007 	ldrb.w	r9, [r1, #7]
9001f004:	ea59 0903 	orrs.w	r9, r9, r3
9001f008:	f000 818b 	beq.w	9001f322 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f00c:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001f010:	b29b      	uxth	r3, r3
9001f012:	2d00      	cmp	r5, #0
9001f014:	f000 812e 	beq.w	9001f274 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001f018:	1aed      	subs	r5, r5, r3
9001f01a:	b2ad      	uxth	r5, r5
9001f01c:	042b      	lsls	r3, r5, #16
9001f01e:	d502      	bpl.n	9001f026 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001f020:	1b64      	subs	r4, r4, r5
9001f022:	2500      	movs	r5, #0
9001f024:	b224      	sxth	r4, r4
9001f026:	f9b2 1000 	ldrsh.w	r1, [r2]
9001f02a:	a814      	add	r0, sp, #80	@ 0x50
9001f02c:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
9001f030:	428c      	cmp	r4, r1
9001f032:	b28b      	uxth	r3, r1
9001f034:	bfbf      	itttt	lt
9001f036:	18ed      	addlt	r5, r5, r3
9001f038:	1b2c      	sublt	r4, r5, r4
9001f03a:	b2a5      	uxthlt	r5, r4
9001f03c:	460c      	movlt	r4, r1
9001f03e:	8891      	ldrh	r1, [r2, #4]
9001f040:	440b      	add	r3, r1
9001f042:	4621      	mov	r1, r4
9001f044:	b21b      	sxth	r3, r3
9001f046:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f048:	88d3      	ldrh	r3, [r2, #6]
9001f04a:	8852      	ldrh	r2, [r2, #2]
9001f04c:	4413      	add	r3, r2
9001f04e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f050:	b21b      	sxth	r3, r3
9001f052:	930d      	str	r3, [sp, #52]	@ 0x34
9001f054:	4bbd      	ldr	r3, [pc, #756]	@ (9001f34c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001f056:	f893 b000 	ldrb.w	fp, [r3]
9001f05a:	f10b 3cff 	add.w	ip, fp, #4294967295
9001f05e:	f1dc 0300 	rsbs	r3, ip, #0
9001f062:	eb43 030c 	adc.w	r3, r3, ip
9001f066:	930e      	str	r3, [sp, #56]	@ 0x38
9001f068:	4653      	mov	r3, sl
9001f06a:	f7f5 fe28 	bl	90014cbe <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001f06e:	4621      	mov	r1, r4
9001f070:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
9001f074:	4653      	mov	r3, sl
9001f076:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f078:	a814      	add	r0, sp, #80	@ 0x50
9001f07a:	f7f5 fe3d 	bl	90014cf8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001f07e:	a918      	add	r1, sp, #96	@ 0x60
9001f080:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001f084:	a817      	add	r0, sp, #92	@ 0x5c
9001f086:	f7f5 ff63 	bl	90014f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001f08a:	f1ba 0f00 	cmp.w	sl, #0
9001f08e:	f040 80f4 	bne.w	9001f27a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001f092:	f1bb 0f01 	cmp.w	fp, #1
9001f096:	f040 80f8 	bne.w	9001f28a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001f09a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f09c:	2b00      	cmp	r3, #0
9001f09e:	f040 8145 	bne.w	9001f32c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001f0a2:	b2ba      	uxth	r2, r7
9001f0a4:	b905      	cbnz	r5, 9001f0a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001f0a6:	b16e      	cbz	r6, 9001f0c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001f0a8:	fb06 5302 	mla	r3, r6, r2, r5
9001f0ac:	9828      	ldr	r0, [sp, #160]	@ 0xa0
9001f0ae:	4631      	mov	r1, r6
9001f0b0:	fb08 f303 	mul.w	r3, r8, r3
9001f0b4:	f003 0607 	and.w	r6, r3, #7
9001f0b8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001f0bc:	9328      	str	r3, [sp, #160]	@ 0xa0
9001f0be:	eba9 0301 	sub.w	r3, r9, r1
9001f0c2:	930a      	str	r3, [sp, #40]	@ 0x28
9001f0c4:	4651      	mov	r1, sl
9001f0c6:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001f0c8:	f7ff ff1c 	bl	9001ef04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001f0cc:	4681      	mov	r9, r0
9001f0ce:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001f0d0:	f7ff ff42 	bl	9001ef58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001f0d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f0d6:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001f0d8:	4683      	mov	fp, r0
9001f0da:	eba3 0a01 	sub.w	sl, r3, r1
9001f0de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f0e0:	459a      	cmp	sl, r3
9001f0e2:	bfa8      	it	ge
9001f0e4:	469a      	movge	sl, r3
9001f0e6:	f1ba 0f00 	cmp.w	sl, #0
9001f0ea:	f340 811a 	ble.w	9001f322 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f0ee:	1b64      	subs	r4, r4, r5
9001f0f0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001f0f2:	1b1c      	subs	r4, r3, r4
9001f0f4:	42bc      	cmp	r4, r7
9001f0f6:	bfd4      	ite	le
9001f0f8:	ebc5 0504 	rsble	r5, r5, r4
9001f0fc:	ebc5 0507 	rsbgt	r5, r5, r7
9001f100:	2d00      	cmp	r5, #0
9001f102:	f340 810e 	ble.w	9001f322 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f106:	1b52      	subs	r2, r2, r5
9001f108:	fb08 f302 	mul.w	r3, r8, r2
9001f10c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f10e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f110:	2b00      	cmp	r3, #0
9001f112:	f040 8116 	bne.w	9001f342 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001f116:	4b8e      	ldr	r3, [pc, #568]	@ (9001f350 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001f118:	6818      	ldr	r0, [r3, #0]
9001f11a:	6803      	ldr	r3, [r0, #0]
9001f11c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f11e:	4798      	blx	r3
9001f120:	2301      	movs	r3, #1
9001f122:	4a8c      	ldr	r2, [pc, #560]	@ (9001f354 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001f124:	fa03 f308 	lsl.w	r3, r3, r8
9001f128:	8811      	ldrh	r1, [r2, #0]
9001f12a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
9001f12e:	3b01      	subs	r3, #1
9001f130:	b2db      	uxtb	r3, r3
9001f132:	930e      	str	r3, [sp, #56]	@ 0x38
9001f134:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
9001f138:	fb01 2303 	mla	r3, r1, r3, r2
9001f13c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f140:	930a      	str	r3, [sp, #40]	@ 0x28
9001f142:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f144:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001f148:	9313      	str	r3, [sp, #76]	@ 0x4c
9001f14a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f14c:	0a19      	lsrs	r1, r3, #8
9001f14e:	b2cb      	uxtb	r3, r1
9001f150:	9312      	str	r3, [sp, #72]	@ 0x48
9001f152:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f154:	b2db      	uxtb	r3, r3
9001f156:	9311      	str	r3, [sp, #68]	@ 0x44
9001f158:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001f15a:	095a      	lsrs	r2, r3, #5
9001f15c:	4b7e      	ldr	r3, [pc, #504]	@ (9001f358 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001f15e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f162:	400b      	ands	r3, r1
9001f164:	4313      	orrs	r3, r2
9001f166:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
9001f168:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f16c:	4313      	orrs	r3, r2
9001f16e:	b29b      	uxth	r3, r3
9001f170:	9310      	str	r3, [sp, #64]	@ 0x40
9001f172:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001f174:	781a      	ldrb	r2, [r3, #0]
9001f176:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001f17a:	fb05 b919 	mls	r9, r5, r9, fp
9001f17e:	4132      	asrs	r2, r6
9001f180:	fb03 fb05 	mul.w	fp, r3, r5
9001f184:	930d      	str	r3, [sp, #52]	@ 0x34
9001f186:	b2d2      	uxtb	r2, r2
9001f188:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001f18c:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001f190:	f0c0 80f5 	bcc.w	9001f37e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001f194:	46ae      	mov	lr, r5
9001f196:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
9001f19a:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001f19e:	f0c0 80dd 	bcc.w	9001f35c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001f1a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f1a4:	4013      	ands	r3, r2
9001f1a6:	d055      	beq.n	9001f254 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001f1a8:	20ff      	movs	r0, #255	@ 0xff
9001f1aa:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001f1ac:	fb90 f1f1 	sdiv	r1, r0, r1
9001f1b0:	434b      	muls	r3, r1
9001f1b2:	2bfe      	cmp	r3, #254	@ 0xfe
9001f1b4:	dd03      	ble.n	9001f1be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001f1b6:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001f1b8:	4281      	cmp	r1, r0
9001f1ba:	f000 80c4 	beq.w	9001f346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001f1be:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001f1c0:	f8bc 4000 	ldrh.w	r4, [ip]
9001f1c4:	fb11 f303 	smulbb	r3, r1, r3
9001f1c8:	1220      	asrs	r0, r4, #8
9001f1ca:	b29b      	uxth	r3, r3
9001f1cc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001f1d0:	1c59      	adds	r1, r3, #1
9001f1d2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001f1d6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001f1da:	10e1      	asrs	r1, r4, #3
9001f1dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001f1e0:	00e4      	lsls	r4, r4, #3
9001f1e2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001f1e6:	b29f      	uxth	r7, r3
9001f1e8:	43db      	mvns	r3, r3
9001f1ea:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001f1ee:	b2db      	uxtb	r3, r3
9001f1f0:	b2e4      	uxtb	r4, r4
9001f1f2:	9309      	str	r3, [sp, #36]	@ 0x24
9001f1f4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9001f1f6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001f1fa:	fb13 f907 	smulbb	r9, r3, r7
9001f1fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f200:	fb00 9003 	mla	r0, r0, r3, r9
9001f204:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9001f206:	fb13 f907 	smulbb	r9, r3, r7
9001f20a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f20c:	b280      	uxth	r0, r0
9001f20e:	fb01 9103 	mla	r1, r1, r3, r9
9001f212:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001f214:	fb13 f707 	smulbb	r7, r3, r7
9001f218:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f21a:	b289      	uxth	r1, r1
9001f21c:	fb04 7403 	mla	r4, r4, r3, r7
9001f220:	1c43      	adds	r3, r0, #1
9001f222:	b2a4      	uxth	r4, r4
9001f224:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001f228:	f104 0901 	add.w	r9, r4, #1
9001f22c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9001f230:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001f234:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001f238:	ea49 0000 	orr.w	r0, r9, r0
9001f23c:	f101 0901 	add.w	r9, r1, #1
9001f240:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001f244:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001f248:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001f24c:	ea40 0009 	orr.w	r0, r0, r9
9001f250:	f8ac 0000 	strh.w	r0, [ip]
9001f254:	4446      	add	r6, r8
9001f256:	b2b6      	uxth	r6, r6
9001f258:	2e07      	cmp	r6, #7
9001f25a:	bf89      	itett	hi
9001f25c:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
9001f25e:	fa42 f208 	asrls.w	r2, r2, r8
9001f262:	2600      	movhi	r6, #0
9001f264:	785a      	ldrbhi	r2, [r3, #1]
9001f266:	bf8a      	itet	hi
9001f268:	3301      	addhi	r3, #1
9001f26a:	b2d2      	uxtbls	r2, r2
9001f26c:	9328      	strhi	r3, [sp, #160]	@ 0xa0
9001f26e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f270:	449c      	add	ip, r3
9001f272:	e792      	b.n	9001f19a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001f274:	441c      	add	r4, r3
9001f276:	b224      	sxth	r4, r4
9001f278:	e6d5      	b.n	9001f026 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001f27a:	f1ba 0f01 	cmp.w	sl, #1
9001f27e:	f47f af0c 	bne.w	9001f09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f282:	f1bb 0f01 	cmp.w	fp, #1
9001f286:	f47f af08 	bne.w	9001f09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f28a:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 9001f350 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001f28e:	f8db 0000 	ldr.w	r0, [fp]
9001f292:	6803      	ldr	r3, [r0, #0]
9001f294:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f296:	4798      	blx	r3
9001f298:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
9001f29c:	465a      	mov	r2, fp
9001f29e:	d006      	beq.n	9001f2ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f2a0:	f1b8 0f04 	cmp.w	r8, #4
9001f2a4:	d140      	bne.n	9001f328 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001f2a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f2a8:	3300      	adds	r3, #0
9001f2aa:	bf18      	it	ne
9001f2ac:	2301      	movne	r3, #1
9001f2ae:	0580      	lsls	r0, r0, #22
9001f2b0:	d56e      	bpl.n	9001f390 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f2b2:	f1b8 0f08 	cmp.w	r8, #8
9001f2b6:	d16b      	bne.n	9001f390 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f2b8:	2b00      	cmp	r3, #0
9001f2ba:	bf0c      	ite	eq
9001f2bc:	f44f 7100 	moveq.w	r1, #512	@ 0x200
9001f2c0:	f44f 7180 	movne.w	r1, #256	@ 0x100
9001f2c4:	2d00      	cmp	r5, #0
9001f2c6:	f47f aee8 	bne.w	9001f09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f2ca:	2e00      	cmp	r6, #0
9001f2cc:	f47f aee5 	bne.w	9001f09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f2d0:	19e3      	adds	r3, r4, r7
9001f2d2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001f2d4:	4283      	cmp	r3, r0
9001f2d6:	f73f aee0 	bgt.w	9001f09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f2da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f2dc:	980d      	ldr	r0, [sp, #52]	@ 0x34
9001f2de:	444b      	add	r3, r9
9001f2e0:	4283      	cmp	r3, r0
9001f2e2:	f73f aeda 	bgt.w	9001f09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f2e6:	b2bf      	uxth	r7, r7
9001f2e8:	f1b8 0f08 	cmp.w	r8, #8
9001f2ec:	6810      	ldr	r0, [r2, #0]
9001f2ee:	f04f 0500 	mov.w	r5, #0
9001f2f2:	bf18      	it	ne
9001f2f4:	3701      	addne	r7, #1
9001f2f6:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
9001f2fa:	6804      	ldr	r4, [r0, #0]
9001f2fc:	bf18      	it	ne
9001f2fe:	f027 0701 	bicne.w	r7, r7, #1
9001f302:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001f306:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001f30a:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001f30c:	bf18      	it	ne
9001f30e:	b2bf      	uxthne	r7, r7
9001f310:	9104      	str	r1, [sp, #16]
9001f312:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9001f314:	e9cd 7900 	strd	r7, r9, [sp]
9001f318:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001f31c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
9001f31e:	6d64      	ldr	r4, [r4, #84]	@ 0x54
9001f320:	47a0      	blx	r4
9001f322:	b019      	add	sp, #100	@ 0x64
9001f324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f328:	2300      	movs	r3, #0
9001f32a:	e7c0      	b.n	9001f2ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f32c:	2208      	movs	r2, #8
9001f32e:	fb92 f3f8 	sdiv	r3, r2, r8
9001f332:	1e5a      	subs	r2, r3, #1
9001f334:	443a      	add	r2, r7
9001f336:	fb92 f2f3 	sdiv	r2, r2, r3
9001f33a:	fb12 f203 	smulbb	r2, r2, r3
9001f33e:	b292      	uxth	r2, r2
9001f340:	e6b0      	b.n	9001f0a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001f342:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001f344:	e6ec      	b.n	9001f120 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001f346:	9810      	ldr	r0, [sp, #64]	@ 0x40
9001f348:	e782      	b.n	9001f250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001f34a:	bf00      	nop
9001f34c:	240218ac 	.word	0x240218ac
9001f350:	240218b4 	.word	0x240218b4
9001f354:	240218ae 	.word	0x240218ae
9001f358:	00fff800 	.word	0x00fff800
9001f35c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001f35e:	b153      	cbz	r3, 9001f376 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001f360:	441e      	add	r6, r3
9001f362:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001f364:	b2b6      	uxth	r6, r6
9001f366:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001f36a:	f006 0607 	and.w	r6, r6, #7
9001f36e:	781a      	ldrb	r2, [r3, #0]
9001f370:	9328      	str	r3, [sp, #160]	@ 0xa0
9001f372:	4132      	asrs	r2, r6
9001f374:	b2d2      	uxtb	r2, r2
9001f376:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f378:	445b      	add	r3, fp
9001f37a:	930a      	str	r3, [sp, #40]	@ 0x28
9001f37c:	e706      	b.n	9001f18c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001f37e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f380:	2b00      	cmp	r3, #0
9001f382:	d1ce      	bne.n	9001f322 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f384:	4b05      	ldr	r3, [pc, #20]	@ (9001f39c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001f386:	6818      	ldr	r0, [r3, #0]
9001f388:	6803      	ldr	r3, [r0, #0]
9001f38a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f38c:	4798      	blx	r3
9001f38e:	e7c8      	b.n	9001f322 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f390:	2b00      	cmp	r3, #0
9001f392:	f43f ae82 	beq.w	9001f09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f396:	f44f 7180 	mov.w	r1, #256	@ 0x100
9001f39a:	e793      	b.n	9001f2c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001f39c:	240218b4 	.word	0x240218b4

9001f3a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001f3a0:	b538      	push	{r3, r4, r5, lr}
9001f3a2:	4c15      	ldr	r4, [pc, #84]	@ (9001f3f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001f3a4:	4605      	mov	r5, r0
9001f3a6:	7823      	ldrb	r3, [r4, #0]
9001f3a8:	f3bf 8f5b 	dmb	ish
9001f3ac:	07da      	lsls	r2, r3, #31
9001f3ae:	d40b      	bmi.n	9001f3c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f3b0:	4620      	mov	r0, r4
9001f3b2:	f008 fc6b 	bl	90027c8c <__cxa_guard_acquire>
9001f3b6:	b138      	cbz	r0, 9001f3c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f3b8:	4620      	mov	r0, r4
9001f3ba:	f008 fc73 	bl	90027ca4 <__cxa_guard_release>
9001f3be:	4a0f      	ldr	r2, [pc, #60]	@ (9001f3fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f3c0:	490f      	ldr	r1, [pc, #60]	@ (9001f400 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001f3c2:	4810      	ldr	r0, [pc, #64]	@ (9001f404 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f3c4:	f008 fc5b 	bl	90027c7e <__aeabi_atexit>
9001f3c8:	4c0f      	ldr	r4, [pc, #60]	@ (9001f408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001f3ca:	7823      	ldrb	r3, [r4, #0]
9001f3cc:	f3bf 8f5b 	dmb	ish
9001f3d0:	07db      	lsls	r3, r3, #31
9001f3d2:	d40b      	bmi.n	9001f3ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f3d4:	4620      	mov	r0, r4
9001f3d6:	f008 fc59 	bl	90027c8c <__cxa_guard_acquire>
9001f3da:	b138      	cbz	r0, 9001f3ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f3dc:	4620      	mov	r0, r4
9001f3de:	f008 fc61 	bl	90027ca4 <__cxa_guard_release>
9001f3e2:	4a06      	ldr	r2, [pc, #24]	@ (9001f3fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f3e4:	4909      	ldr	r1, [pc, #36]	@ (9001f40c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001f3e6:	480a      	ldr	r0, [pc, #40]	@ (9001f410 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f3e8:	f008 fc49 	bl	90027c7e <__aeabi_atexit>
9001f3ec:	4b05      	ldr	r3, [pc, #20]	@ (9001f404 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f3ee:	616b      	str	r3, [r5, #20]
9001f3f0:	4b07      	ldr	r3, [pc, #28]	@ (9001f410 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f3f2:	61ab      	str	r3, [r5, #24]
9001f3f4:	bd38      	pop	{r3, r4, r5, pc}
9001f3f6:	bf00      	nop
9001f3f8:	24021998 	.word	0x24021998
9001f3fc:	24000000 	.word	0x24000000
9001f400:	9001b53d 	.word	0x9001b53d
9001f404:	240000d4 	.word	0x240000d4
9001f408:	2402199c 	.word	0x2402199c
9001f40c:	9001b53b 	.word	0x9001b53b
9001f410:	240000d8 	.word	0x240000d8

9001f414 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001f414:	b538      	push	{r3, r4, r5, lr}
9001f416:	4c15      	ldr	r4, [pc, #84]	@ (9001f46c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001f418:	4605      	mov	r5, r0
9001f41a:	7823      	ldrb	r3, [r4, #0]
9001f41c:	f3bf 8f5b 	dmb	ish
9001f420:	07da      	lsls	r2, r3, #31
9001f422:	d40b      	bmi.n	9001f43c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f424:	4620      	mov	r0, r4
9001f426:	f008 fc31 	bl	90027c8c <__cxa_guard_acquire>
9001f42a:	b138      	cbz	r0, 9001f43c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f42c:	4620      	mov	r0, r4
9001f42e:	f008 fc39 	bl	90027ca4 <__cxa_guard_release>
9001f432:	4a0f      	ldr	r2, [pc, #60]	@ (9001f470 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f434:	490f      	ldr	r1, [pc, #60]	@ (9001f474 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001f436:	4810      	ldr	r0, [pc, #64]	@ (9001f478 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f438:	f008 fc21 	bl	90027c7e <__aeabi_atexit>
9001f43c:	4c0f      	ldr	r4, [pc, #60]	@ (9001f47c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001f43e:	7823      	ldrb	r3, [r4, #0]
9001f440:	f3bf 8f5b 	dmb	ish
9001f444:	07db      	lsls	r3, r3, #31
9001f446:	d40b      	bmi.n	9001f460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f448:	4620      	mov	r0, r4
9001f44a:	f008 fc1f 	bl	90027c8c <__cxa_guard_acquire>
9001f44e:	b138      	cbz	r0, 9001f460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f450:	4620      	mov	r0, r4
9001f452:	f008 fc27 	bl	90027ca4 <__cxa_guard_release>
9001f456:	4a06      	ldr	r2, [pc, #24]	@ (9001f470 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f458:	4909      	ldr	r1, [pc, #36]	@ (9001f480 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001f45a:	480a      	ldr	r0, [pc, #40]	@ (9001f484 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f45c:	f008 fc0f 	bl	90027c7e <__aeabi_atexit>
9001f460:	4b05      	ldr	r3, [pc, #20]	@ (9001f478 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f462:	60eb      	str	r3, [r5, #12]
9001f464:	4b07      	ldr	r3, [pc, #28]	@ (9001f484 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f466:	612b      	str	r3, [r5, #16]
9001f468:	bd38      	pop	{r3, r4, r5, pc}
9001f46a:	bf00      	nop
9001f46c:	24021970 	.word	0x24021970
9001f470:	24000000 	.word	0x24000000
9001f474:	9001b541 	.word	0x9001b541
9001f478:	240000ac 	.word	0x240000ac
9001f47c:	24021974 	.word	0x24021974
9001f480:	9001b53f 	.word	0x9001b53f
9001f484:	240000b0 	.word	0x240000b0

9001f488 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001f488:	b510      	push	{r4, lr}
9001f48a:	4604      	mov	r4, r0
9001f48c:	f7ff ff88 	bl	9001f3a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001f490:	4620      	mov	r0, r4
9001f492:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f496:	f7ff bfbd 	b.w	9001f414 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001f49c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001f49c:	b538      	push	{r3, r4, r5, lr}
9001f49e:	4c15      	ldr	r4, [pc, #84]	@ (9001f4f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001f4a0:	4605      	mov	r5, r0
9001f4a2:	7823      	ldrb	r3, [r4, #0]
9001f4a4:	f3bf 8f5b 	dmb	ish
9001f4a8:	07da      	lsls	r2, r3, #31
9001f4aa:	d40b      	bmi.n	9001f4c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f4ac:	4620      	mov	r0, r4
9001f4ae:	f008 fbed 	bl	90027c8c <__cxa_guard_acquire>
9001f4b2:	b138      	cbz	r0, 9001f4c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f4b4:	4620      	mov	r0, r4
9001f4b6:	f008 fbf5 	bl	90027ca4 <__cxa_guard_release>
9001f4ba:	4a0f      	ldr	r2, [pc, #60]	@ (9001f4f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f4bc:	490f      	ldr	r1, [pc, #60]	@ (9001f4fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001f4be:	4810      	ldr	r0, [pc, #64]	@ (9001f500 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f4c0:	f008 fbdd 	bl	90027c7e <__aeabi_atexit>
9001f4c4:	4c0f      	ldr	r4, [pc, #60]	@ (9001f504 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001f4c6:	7823      	ldrb	r3, [r4, #0]
9001f4c8:	f3bf 8f5b 	dmb	ish
9001f4cc:	07db      	lsls	r3, r3, #31
9001f4ce:	d40b      	bmi.n	9001f4e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f4d0:	4620      	mov	r0, r4
9001f4d2:	f008 fbdb 	bl	90027c8c <__cxa_guard_acquire>
9001f4d6:	b138      	cbz	r0, 9001f4e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f4d8:	4620      	mov	r0, r4
9001f4da:	f008 fbe3 	bl	90027ca4 <__cxa_guard_release>
9001f4de:	4a06      	ldr	r2, [pc, #24]	@ (9001f4f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f4e0:	4909      	ldr	r1, [pc, #36]	@ (9001f508 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001f4e2:	480a      	ldr	r0, [pc, #40]	@ (9001f50c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f4e4:	f008 fbcb 	bl	90027c7e <__aeabi_atexit>
9001f4e8:	4b05      	ldr	r3, [pc, #20]	@ (9001f500 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f4ea:	626b      	str	r3, [r5, #36]	@ 0x24
9001f4ec:	4b07      	ldr	r3, [pc, #28]	@ (9001f50c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f4ee:	62ab      	str	r3, [r5, #40]	@ 0x28
9001f4f0:	bd38      	pop	{r3, r4, r5, pc}
9001f4f2:	bf00      	nop
9001f4f4:	240219a0 	.word	0x240219a0
9001f4f8:	24000000 	.word	0x24000000
9001f4fc:	9001b535 	.word	0x9001b535
9001f500:	240000dc 	.word	0x240000dc
9001f504:	240219a4 	.word	0x240219a4
9001f508:	9001b533 	.word	0x9001b533
9001f50c:	240000e0 	.word	0x240000e0

9001f510 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001f510:	b538      	push	{r3, r4, r5, lr}
9001f512:	4c15      	ldr	r4, [pc, #84]	@ (9001f568 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001f514:	4605      	mov	r5, r0
9001f516:	7823      	ldrb	r3, [r4, #0]
9001f518:	f3bf 8f5b 	dmb	ish
9001f51c:	07da      	lsls	r2, r3, #31
9001f51e:	d40b      	bmi.n	9001f538 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f520:	4620      	mov	r0, r4
9001f522:	f008 fbb3 	bl	90027c8c <__cxa_guard_acquire>
9001f526:	b138      	cbz	r0, 9001f538 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f528:	4620      	mov	r0, r4
9001f52a:	f008 fbbb 	bl	90027ca4 <__cxa_guard_release>
9001f52e:	4a0f      	ldr	r2, [pc, #60]	@ (9001f56c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f530:	490f      	ldr	r1, [pc, #60]	@ (9001f570 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001f532:	4810      	ldr	r0, [pc, #64]	@ (9001f574 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f534:	f008 fba3 	bl	90027c7e <__aeabi_atexit>
9001f538:	4c0f      	ldr	r4, [pc, #60]	@ (9001f578 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001f53a:	7823      	ldrb	r3, [r4, #0]
9001f53c:	f3bf 8f5b 	dmb	ish
9001f540:	07db      	lsls	r3, r3, #31
9001f542:	d40b      	bmi.n	9001f55c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f544:	4620      	mov	r0, r4
9001f546:	f008 fba1 	bl	90027c8c <__cxa_guard_acquire>
9001f54a:	b138      	cbz	r0, 9001f55c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f54c:	4620      	mov	r0, r4
9001f54e:	f008 fba9 	bl	90027ca4 <__cxa_guard_release>
9001f552:	4a06      	ldr	r2, [pc, #24]	@ (9001f56c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f554:	4909      	ldr	r1, [pc, #36]	@ (9001f57c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001f556:	480a      	ldr	r0, [pc, #40]	@ (9001f580 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f558:	f008 fb91 	bl	90027c7e <__aeabi_atexit>
9001f55c:	4b05      	ldr	r3, [pc, #20]	@ (9001f574 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f55e:	61eb      	str	r3, [r5, #28]
9001f560:	4b07      	ldr	r3, [pc, #28]	@ (9001f580 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f562:	622b      	str	r3, [r5, #32]
9001f564:	bd38      	pop	{r3, r4, r5, pc}
9001f566:	bf00      	nop
9001f568:	24021978 	.word	0x24021978
9001f56c:	24000000 	.word	0x24000000
9001f570:	9001b539 	.word	0x9001b539
9001f574:	240000b4 	.word	0x240000b4
9001f578:	2402197c 	.word	0x2402197c
9001f57c:	9001b537 	.word	0x9001b537
9001f580:	240000b8 	.word	0x240000b8

9001f584 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001f584:	b510      	push	{r4, lr}
9001f586:	4604      	mov	r4, r0
9001f588:	f7ff ff88 	bl	9001f49c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001f58c:	4620      	mov	r0, r4
9001f58e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f592:	f7ff bfbd 	b.w	9001f510 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001f598 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001f598:	b538      	push	{r3, r4, r5, lr}
9001f59a:	4c15      	ldr	r4, [pc, #84]	@ (9001f5f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001f59c:	4605      	mov	r5, r0
9001f59e:	7823      	ldrb	r3, [r4, #0]
9001f5a0:	f3bf 8f5b 	dmb	ish
9001f5a4:	07da      	lsls	r2, r3, #31
9001f5a6:	d40b      	bmi.n	9001f5c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f5a8:	4620      	mov	r0, r4
9001f5aa:	f008 fb6f 	bl	90027c8c <__cxa_guard_acquire>
9001f5ae:	b138      	cbz	r0, 9001f5c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f5b0:	4620      	mov	r0, r4
9001f5b2:	f008 fb77 	bl	90027ca4 <__cxa_guard_release>
9001f5b6:	4a0f      	ldr	r2, [pc, #60]	@ (9001f5f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f5b8:	490f      	ldr	r1, [pc, #60]	@ (9001f5f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001f5ba:	4810      	ldr	r0, [pc, #64]	@ (9001f5fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f5bc:	f008 fb5f 	bl	90027c7e <__aeabi_atexit>
9001f5c0:	4c0f      	ldr	r4, [pc, #60]	@ (9001f600 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001f5c2:	7823      	ldrb	r3, [r4, #0]
9001f5c4:	f3bf 8f5b 	dmb	ish
9001f5c8:	07db      	lsls	r3, r3, #31
9001f5ca:	d40b      	bmi.n	9001f5e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f5cc:	4620      	mov	r0, r4
9001f5ce:	f008 fb5d 	bl	90027c8c <__cxa_guard_acquire>
9001f5d2:	b138      	cbz	r0, 9001f5e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f5d4:	4620      	mov	r0, r4
9001f5d6:	f008 fb65 	bl	90027ca4 <__cxa_guard_release>
9001f5da:	4a06      	ldr	r2, [pc, #24]	@ (9001f5f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f5dc:	4909      	ldr	r1, [pc, #36]	@ (9001f604 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001f5de:	480a      	ldr	r0, [pc, #40]	@ (9001f608 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f5e0:	f008 fb4d 	bl	90027c7e <__aeabi_atexit>
9001f5e4:	4b05      	ldr	r3, [pc, #20]	@ (9001f5fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f5e6:	636b      	str	r3, [r5, #52]	@ 0x34
9001f5e8:	4b07      	ldr	r3, [pc, #28]	@ (9001f608 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f5ea:	63ab      	str	r3, [r5, #56]	@ 0x38
9001f5ec:	bd38      	pop	{r3, r4, r5, pc}
9001f5ee:	bf00      	nop
9001f5f0:	240219b0 	.word	0x240219b0
9001f5f4:	24000000 	.word	0x24000000
9001f5f8:	9001b52d 	.word	0x9001b52d
9001f5fc:	240000ec 	.word	0x240000ec
9001f600:	240219b4 	.word	0x240219b4
9001f604:	9001b52b 	.word	0x9001b52b
9001f608:	240000f0 	.word	0x240000f0

9001f60c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001f60c:	b538      	push	{r3, r4, r5, lr}
9001f60e:	4c15      	ldr	r4, [pc, #84]	@ (9001f664 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001f610:	4605      	mov	r5, r0
9001f612:	7823      	ldrb	r3, [r4, #0]
9001f614:	f3bf 8f5b 	dmb	ish
9001f618:	07da      	lsls	r2, r3, #31
9001f61a:	d40b      	bmi.n	9001f634 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f61c:	4620      	mov	r0, r4
9001f61e:	f008 fb35 	bl	90027c8c <__cxa_guard_acquire>
9001f622:	b138      	cbz	r0, 9001f634 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f624:	4620      	mov	r0, r4
9001f626:	f008 fb3d 	bl	90027ca4 <__cxa_guard_release>
9001f62a:	4a0f      	ldr	r2, [pc, #60]	@ (9001f668 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f62c:	490f      	ldr	r1, [pc, #60]	@ (9001f66c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001f62e:	4810      	ldr	r0, [pc, #64]	@ (9001f670 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001f630:	f008 fb25 	bl	90027c7e <__aeabi_atexit>
9001f634:	4c0f      	ldr	r4, [pc, #60]	@ (9001f674 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001f636:	7823      	ldrb	r3, [r4, #0]
9001f638:	f3bf 8f5b 	dmb	ish
9001f63c:	07db      	lsls	r3, r3, #31
9001f63e:	d40b      	bmi.n	9001f658 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f640:	4620      	mov	r0, r4
9001f642:	f008 fb23 	bl	90027c8c <__cxa_guard_acquire>
9001f646:	b138      	cbz	r0, 9001f658 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f648:	4620      	mov	r0, r4
9001f64a:	f008 fb2b 	bl	90027ca4 <__cxa_guard_release>
9001f64e:	4a06      	ldr	r2, [pc, #24]	@ (9001f668 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f650:	4909      	ldr	r1, [pc, #36]	@ (9001f678 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001f652:	480a      	ldr	r0, [pc, #40]	@ (9001f67c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001f654:	f008 fb13 	bl	90027c7e <__aeabi_atexit>
9001f658:	4b05      	ldr	r3, [pc, #20]	@ (9001f670 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001f65a:	62eb      	str	r3, [r5, #44]	@ 0x2c
9001f65c:	4b07      	ldr	r3, [pc, #28]	@ (9001f67c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001f65e:	632b      	str	r3, [r5, #48]	@ 0x30
9001f660:	bd38      	pop	{r3, r4, r5, pc}
9001f662:	bf00      	nop
9001f664:	24021980 	.word	0x24021980
9001f668:	24000000 	.word	0x24000000
9001f66c:	9001b531 	.word	0x9001b531
9001f670:	240000bc 	.word	0x240000bc
9001f674:	24021984 	.word	0x24021984
9001f678:	9001b52f 	.word	0x9001b52f
9001f67c:	240000c0 	.word	0x240000c0

9001f680 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001f680:	b510      	push	{r4, lr}
9001f682:	4604      	mov	r4, r0
9001f684:	f7ff ff88 	bl	9001f598 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001f688:	4620      	mov	r0, r4
9001f68a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f68e:	f7ff bfbd 	b.w	9001f60c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001f694 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001f694:	b538      	push	{r3, r4, r5, lr}
9001f696:	4c15      	ldr	r4, [pc, #84]	@ (9001f6ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001f698:	4605      	mov	r5, r0
9001f69a:	7823      	ldrb	r3, [r4, #0]
9001f69c:	f3bf 8f5b 	dmb	ish
9001f6a0:	07da      	lsls	r2, r3, #31
9001f6a2:	d40b      	bmi.n	9001f6bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001f6a4:	4620      	mov	r0, r4
9001f6a6:	f008 faf1 	bl	90027c8c <__cxa_guard_acquire>
9001f6aa:	b138      	cbz	r0, 9001f6bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001f6ac:	4620      	mov	r0, r4
9001f6ae:	f008 faf9 	bl	90027ca4 <__cxa_guard_release>
9001f6b2:	4a0f      	ldr	r2, [pc, #60]	@ (9001f6f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001f6b4:	490f      	ldr	r1, [pc, #60]	@ (9001f6f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001f6b6:	4810      	ldr	r0, [pc, #64]	@ (9001f6f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001f6b8:	f008 fae1 	bl	90027c7e <__aeabi_atexit>
9001f6bc:	4c0f      	ldr	r4, [pc, #60]	@ (9001f6fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001f6be:	7823      	ldrb	r3, [r4, #0]
9001f6c0:	f3bf 8f5b 	dmb	ish
9001f6c4:	07db      	lsls	r3, r3, #31
9001f6c6:	d40b      	bmi.n	9001f6e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001f6c8:	4620      	mov	r0, r4
9001f6ca:	f008 fadf 	bl	90027c8c <__cxa_guard_acquire>
9001f6ce:	b138      	cbz	r0, 9001f6e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001f6d0:	4620      	mov	r0, r4
9001f6d2:	f008 fae7 	bl	90027ca4 <__cxa_guard_release>
9001f6d6:	4a06      	ldr	r2, [pc, #24]	@ (9001f6f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001f6d8:	4909      	ldr	r1, [pc, #36]	@ (9001f700 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001f6da:	480a      	ldr	r0, [pc, #40]	@ (9001f704 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001f6dc:	f008 facf 	bl	90027c7e <__aeabi_atexit>
9001f6e0:	4b05      	ldr	r3, [pc, #20]	@ (9001f6f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001f6e2:	656b      	str	r3, [r5, #84]	@ 0x54
9001f6e4:	4b07      	ldr	r3, [pc, #28]	@ (9001f704 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001f6e6:	65ab      	str	r3, [r5, #88]	@ 0x58
9001f6e8:	bd38      	pop	{r3, r4, r5, pc}
9001f6ea:	bf00      	nop
9001f6ec:	240219b8 	.word	0x240219b8
9001f6f0:	24000000 	.word	0x24000000
9001f6f4:	9001b51d 	.word	0x9001b51d
9001f6f8:	240000f4 	.word	0x240000f4
9001f6fc:	240219bc 	.word	0x240219bc
9001f700:	9001b51b 	.word	0x9001b51b
9001f704:	240000f8 	.word	0x240000f8

9001f708 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001f708:	b538      	push	{r3, r4, r5, lr}
9001f70a:	4c15      	ldr	r4, [pc, #84]	@ (9001f760 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001f70c:	4605      	mov	r5, r0
9001f70e:	7823      	ldrb	r3, [r4, #0]
9001f710:	f3bf 8f5b 	dmb	ish
9001f714:	07da      	lsls	r2, r3, #31
9001f716:	d40b      	bmi.n	9001f730 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001f718:	4620      	mov	r0, r4
9001f71a:	f008 fab7 	bl	90027c8c <__cxa_guard_acquire>
9001f71e:	b138      	cbz	r0, 9001f730 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001f720:	4620      	mov	r0, r4
9001f722:	f008 fabf 	bl	90027ca4 <__cxa_guard_release>
9001f726:	4a0f      	ldr	r2, [pc, #60]	@ (9001f764 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001f728:	490f      	ldr	r1, [pc, #60]	@ (9001f768 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001f72a:	4810      	ldr	r0, [pc, #64]	@ (9001f76c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001f72c:	f008 faa7 	bl	90027c7e <__aeabi_atexit>
9001f730:	4c0f      	ldr	r4, [pc, #60]	@ (9001f770 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001f732:	7823      	ldrb	r3, [r4, #0]
9001f734:	f3bf 8f5b 	dmb	ish
9001f738:	07db      	lsls	r3, r3, #31
9001f73a:	d40b      	bmi.n	9001f754 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001f73c:	4620      	mov	r0, r4
9001f73e:	f008 faa5 	bl	90027c8c <__cxa_guard_acquire>
9001f742:	b138      	cbz	r0, 9001f754 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001f744:	4620      	mov	r0, r4
9001f746:	f008 faad 	bl	90027ca4 <__cxa_guard_release>
9001f74a:	4a06      	ldr	r2, [pc, #24]	@ (9001f764 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001f74c:	4909      	ldr	r1, [pc, #36]	@ (9001f774 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001f74e:	480a      	ldr	r0, [pc, #40]	@ (9001f778 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001f750:	f008 fa95 	bl	90027c7e <__aeabi_atexit>
9001f754:	4b05      	ldr	r3, [pc, #20]	@ (9001f76c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001f756:	64eb      	str	r3, [r5, #76]	@ 0x4c
9001f758:	4b07      	ldr	r3, [pc, #28]	@ (9001f778 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001f75a:	652b      	str	r3, [r5, #80]	@ 0x50
9001f75c:	bd38      	pop	{r3, r4, r5, pc}
9001f75e:	bf00      	nop
9001f760:	240219c0 	.word	0x240219c0
9001f764:	24000000 	.word	0x24000000
9001f768:	9001b521 	.word	0x9001b521
9001f76c:	240000fc 	.word	0x240000fc
9001f770:	240219c4 	.word	0x240219c4
9001f774:	9001b51f 	.word	0x9001b51f
9001f778:	24000100 	.word	0x24000100

9001f77c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001f77c:	b538      	push	{r3, r4, r5, lr}
9001f77e:	4c15      	ldr	r4, [pc, #84]	@ (9001f7d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001f780:	4605      	mov	r5, r0
9001f782:	7823      	ldrb	r3, [r4, #0]
9001f784:	f3bf 8f5b 	dmb	ish
9001f788:	07da      	lsls	r2, r3, #31
9001f78a:	d40b      	bmi.n	9001f7a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001f78c:	4620      	mov	r0, r4
9001f78e:	f008 fa7d 	bl	90027c8c <__cxa_guard_acquire>
9001f792:	b138      	cbz	r0, 9001f7a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001f794:	4620      	mov	r0, r4
9001f796:	f008 fa85 	bl	90027ca4 <__cxa_guard_release>
9001f79a:	4a0f      	ldr	r2, [pc, #60]	@ (9001f7d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001f79c:	490f      	ldr	r1, [pc, #60]	@ (9001f7dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001f79e:	4810      	ldr	r0, [pc, #64]	@ (9001f7e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001f7a0:	f008 fa6d 	bl	90027c7e <__aeabi_atexit>
9001f7a4:	4c0f      	ldr	r4, [pc, #60]	@ (9001f7e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001f7a6:	7823      	ldrb	r3, [r4, #0]
9001f7a8:	f3bf 8f5b 	dmb	ish
9001f7ac:	07db      	lsls	r3, r3, #31
9001f7ae:	d40b      	bmi.n	9001f7c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001f7b0:	4620      	mov	r0, r4
9001f7b2:	f008 fa6b 	bl	90027c8c <__cxa_guard_acquire>
9001f7b6:	b138      	cbz	r0, 9001f7c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001f7b8:	4620      	mov	r0, r4
9001f7ba:	f008 fa73 	bl	90027ca4 <__cxa_guard_release>
9001f7be:	4a06      	ldr	r2, [pc, #24]	@ (9001f7d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001f7c0:	4909      	ldr	r1, [pc, #36]	@ (9001f7e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001f7c2:	480a      	ldr	r0, [pc, #40]	@ (9001f7ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001f7c4:	f008 fa5b 	bl	90027c7e <__aeabi_atexit>
9001f7c8:	4b05      	ldr	r3, [pc, #20]	@ (9001f7e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001f7ca:	646b      	str	r3, [r5, #68]	@ 0x44
9001f7cc:	4b07      	ldr	r3, [pc, #28]	@ (9001f7ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001f7ce:	64ab      	str	r3, [r5, #72]	@ 0x48
9001f7d0:	bd38      	pop	{r3, r4, r5, pc}
9001f7d2:	bf00      	nop
9001f7d4:	24021988 	.word	0x24021988
9001f7d8:	24000000 	.word	0x24000000
9001f7dc:	9001b525 	.word	0x9001b525
9001f7e0:	240000c4 	.word	0x240000c4
9001f7e4:	2402198c 	.word	0x2402198c
9001f7e8:	9001b523 	.word	0x9001b523
9001f7ec:	240000c8 	.word	0x240000c8

9001f7f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001f7f0:	b538      	push	{r3, r4, r5, lr}
9001f7f2:	4c15      	ldr	r4, [pc, #84]	@ (9001f848 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001f7f4:	4605      	mov	r5, r0
9001f7f6:	7823      	ldrb	r3, [r4, #0]
9001f7f8:	f3bf 8f5b 	dmb	ish
9001f7fc:	07da      	lsls	r2, r3, #31
9001f7fe:	d40b      	bmi.n	9001f818 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001f800:	4620      	mov	r0, r4
9001f802:	f008 fa43 	bl	90027c8c <__cxa_guard_acquire>
9001f806:	b138      	cbz	r0, 9001f818 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001f808:	4620      	mov	r0, r4
9001f80a:	f008 fa4b 	bl	90027ca4 <__cxa_guard_release>
9001f80e:	4a0f      	ldr	r2, [pc, #60]	@ (9001f84c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001f810:	490f      	ldr	r1, [pc, #60]	@ (9001f850 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001f812:	4810      	ldr	r0, [pc, #64]	@ (9001f854 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001f814:	f008 fa33 	bl	90027c7e <__aeabi_atexit>
9001f818:	4c0f      	ldr	r4, [pc, #60]	@ (9001f858 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001f81a:	7823      	ldrb	r3, [r4, #0]
9001f81c:	f3bf 8f5b 	dmb	ish
9001f820:	07db      	lsls	r3, r3, #31
9001f822:	d40b      	bmi.n	9001f83c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001f824:	4620      	mov	r0, r4
9001f826:	f008 fa31 	bl	90027c8c <__cxa_guard_acquire>
9001f82a:	b138      	cbz	r0, 9001f83c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001f82c:	4620      	mov	r0, r4
9001f82e:	f008 fa39 	bl	90027ca4 <__cxa_guard_release>
9001f832:	4a06      	ldr	r2, [pc, #24]	@ (9001f84c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001f834:	4909      	ldr	r1, [pc, #36]	@ (9001f85c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001f836:	480a      	ldr	r0, [pc, #40]	@ (9001f860 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001f838:	f008 fa21 	bl	90027c7e <__aeabi_atexit>
9001f83c:	4b05      	ldr	r3, [pc, #20]	@ (9001f854 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001f83e:	63eb      	str	r3, [r5, #60]	@ 0x3c
9001f840:	4b07      	ldr	r3, [pc, #28]	@ (9001f860 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001f842:	642b      	str	r3, [r5, #64]	@ 0x40
9001f844:	bd38      	pop	{r3, r4, r5, pc}
9001f846:	bf00      	nop
9001f848:	240219a8 	.word	0x240219a8
9001f84c:	24000000 	.word	0x24000000
9001f850:	9001b529 	.word	0x9001b529
9001f854:	240000e4 	.word	0x240000e4
9001f858:	240219ac 	.word	0x240219ac
9001f85c:	9001b527 	.word	0x9001b527
9001f860:	240000e8 	.word	0x240000e8

9001f864 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001f864:	b510      	push	{r4, lr}
9001f866:	4604      	mov	r4, r0
9001f868:	f7ff ff14 	bl	9001f694 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001f86c:	4620      	mov	r0, r4
9001f86e:	f7ff ff85 	bl	9001f77c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001f872:	4620      	mov	r0, r4
9001f874:	f7ff ff48 	bl	9001f708 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001f878:	4620      	mov	r0, r4
9001f87a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f87e:	f7ff bfb7 	b.w	9001f7f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001f884 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001f884:	b538      	push	{r3, r4, r5, lr}
9001f886:	4c15      	ldr	r4, [pc, #84]	@ (9001f8dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001f888:	4605      	mov	r5, r0
9001f88a:	7823      	ldrb	r3, [r4, #0]
9001f88c:	f3bf 8f5b 	dmb	ish
9001f890:	07da      	lsls	r2, r3, #31
9001f892:	d40b      	bmi.n	9001f8ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001f894:	4620      	mov	r0, r4
9001f896:	f008 f9f9 	bl	90027c8c <__cxa_guard_acquire>
9001f89a:	b138      	cbz	r0, 9001f8ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001f89c:	4620      	mov	r0, r4
9001f89e:	f008 fa01 	bl	90027ca4 <__cxa_guard_release>
9001f8a2:	4a0f      	ldr	r2, [pc, #60]	@ (9001f8e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001f8a4:	490f      	ldr	r1, [pc, #60]	@ (9001f8e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001f8a6:	4810      	ldr	r0, [pc, #64]	@ (9001f8e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001f8a8:	f008 f9e9 	bl	90027c7e <__aeabi_atexit>
9001f8ac:	4c0f      	ldr	r4, [pc, #60]	@ (9001f8ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001f8ae:	7823      	ldrb	r3, [r4, #0]
9001f8b0:	f3bf 8f5b 	dmb	ish
9001f8b4:	07db      	lsls	r3, r3, #31
9001f8b6:	d40b      	bmi.n	9001f8d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001f8b8:	4620      	mov	r0, r4
9001f8ba:	f008 f9e7 	bl	90027c8c <__cxa_guard_acquire>
9001f8be:	b138      	cbz	r0, 9001f8d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001f8c0:	4620      	mov	r0, r4
9001f8c2:	f008 f9ef 	bl	90027ca4 <__cxa_guard_release>
9001f8c6:	4a06      	ldr	r2, [pc, #24]	@ (9001f8e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001f8c8:	4909      	ldr	r1, [pc, #36]	@ (9001f8f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001f8ca:	480a      	ldr	r0, [pc, #40]	@ (9001f8f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001f8cc:	f008 f9d7 	bl	90027c7e <__aeabi_atexit>
9001f8d0:	4b05      	ldr	r3, [pc, #20]	@ (9001f8e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001f8d2:	666b      	str	r3, [r5, #100]	@ 0x64
9001f8d4:	4b07      	ldr	r3, [pc, #28]	@ (9001f8f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001f8d6:	66ab      	str	r3, [r5, #104]	@ 0x68
9001f8d8:	bd38      	pop	{r3, r4, r5, pc}
9001f8da:	bf00      	nop
9001f8dc:	24021990 	.word	0x24021990
9001f8e0:	24000000 	.word	0x24000000
9001f8e4:	9001b515 	.word	0x9001b515
9001f8e8:	240000cc 	.word	0x240000cc
9001f8ec:	24021994 	.word	0x24021994
9001f8f0:	9001b513 	.word	0x9001b513
9001f8f4:	240000d0 	.word	0x240000d0

9001f8f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001f8f8:	b538      	push	{r3, r4, r5, lr}
9001f8fa:	4c15      	ldr	r4, [pc, #84]	@ (9001f950 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001f8fc:	4605      	mov	r5, r0
9001f8fe:	7823      	ldrb	r3, [r4, #0]
9001f900:	f3bf 8f5b 	dmb	ish
9001f904:	07da      	lsls	r2, r3, #31
9001f906:	d40b      	bmi.n	9001f920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001f908:	4620      	mov	r0, r4
9001f90a:	f008 f9bf 	bl	90027c8c <__cxa_guard_acquire>
9001f90e:	b138      	cbz	r0, 9001f920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001f910:	4620      	mov	r0, r4
9001f912:	f008 f9c7 	bl	90027ca4 <__cxa_guard_release>
9001f916:	4a0f      	ldr	r2, [pc, #60]	@ (9001f954 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001f918:	490f      	ldr	r1, [pc, #60]	@ (9001f958 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001f91a:	4810      	ldr	r0, [pc, #64]	@ (9001f95c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001f91c:	f008 f9af 	bl	90027c7e <__aeabi_atexit>
9001f920:	4c0f      	ldr	r4, [pc, #60]	@ (9001f960 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001f922:	7823      	ldrb	r3, [r4, #0]
9001f924:	f3bf 8f5b 	dmb	ish
9001f928:	07db      	lsls	r3, r3, #31
9001f92a:	d40b      	bmi.n	9001f944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001f92c:	4620      	mov	r0, r4
9001f92e:	f008 f9ad 	bl	90027c8c <__cxa_guard_acquire>
9001f932:	b138      	cbz	r0, 9001f944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001f934:	4620      	mov	r0, r4
9001f936:	f008 f9b5 	bl	90027ca4 <__cxa_guard_release>
9001f93a:	4a06      	ldr	r2, [pc, #24]	@ (9001f954 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001f93c:	4909      	ldr	r1, [pc, #36]	@ (9001f964 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001f93e:	480a      	ldr	r0, [pc, #40]	@ (9001f968 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001f940:	f008 f99d 	bl	90027c7e <__aeabi_atexit>
9001f944:	4b05      	ldr	r3, [pc, #20]	@ (9001f95c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001f946:	65eb      	str	r3, [r5, #92]	@ 0x5c
9001f948:	4b07      	ldr	r3, [pc, #28]	@ (9001f968 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001f94a:	662b      	str	r3, [r5, #96]	@ 0x60
9001f94c:	bd38      	pop	{r3, r4, r5, pc}
9001f94e:	bf00      	nop
9001f950:	24021968 	.word	0x24021968
9001f954:	24000000 	.word	0x24000000
9001f958:	9001b519 	.word	0x9001b519
9001f95c:	240000a4 	.word	0x240000a4
9001f960:	2402196c 	.word	0x2402196c
9001f964:	9001b517 	.word	0x9001b517
9001f968:	240000a8 	.word	0x240000a8

9001f96c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001f96c:	b510      	push	{r4, lr}
9001f96e:	4604      	mov	r4, r0
9001f970:	f7ff ff88 	bl	9001f884 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001f974:	4620      	mov	r0, r4
9001f976:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f97a:	f7ff bfbd 	b.w	9001f8f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001f980 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001f980:	b538      	push	{r3, r4, r5, lr}
9001f982:	4c15      	ldr	r4, [pc, #84]	@ (9001f9d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001f984:	4605      	mov	r5, r0
9001f986:	7823      	ldrb	r3, [r4, #0]
9001f988:	f3bf 8f5b 	dmb	ish
9001f98c:	07da      	lsls	r2, r3, #31
9001f98e:	d40b      	bmi.n	9001f9a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001f990:	4620      	mov	r0, r4
9001f992:	f008 f97b 	bl	90027c8c <__cxa_guard_acquire>
9001f996:	b138      	cbz	r0, 9001f9a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001f998:	4620      	mov	r0, r4
9001f99a:	f008 f983 	bl	90027ca4 <__cxa_guard_release>
9001f99e:	4a0f      	ldr	r2, [pc, #60]	@ (9001f9dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001f9a0:	490f      	ldr	r1, [pc, #60]	@ (9001f9e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001f9a2:	4810      	ldr	r0, [pc, #64]	@ (9001f9e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001f9a4:	f008 f96b 	bl	90027c7e <__aeabi_atexit>
9001f9a8:	4c0f      	ldr	r4, [pc, #60]	@ (9001f9e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001f9aa:	7823      	ldrb	r3, [r4, #0]
9001f9ac:	f3bf 8f5b 	dmb	ish
9001f9b0:	07db      	lsls	r3, r3, #31
9001f9b2:	d40b      	bmi.n	9001f9cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001f9b4:	4620      	mov	r0, r4
9001f9b6:	f008 f969 	bl	90027c8c <__cxa_guard_acquire>
9001f9ba:	b138      	cbz	r0, 9001f9cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001f9bc:	4620      	mov	r0, r4
9001f9be:	f008 f971 	bl	90027ca4 <__cxa_guard_release>
9001f9c2:	4a06      	ldr	r2, [pc, #24]	@ (9001f9dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001f9c4:	4909      	ldr	r1, [pc, #36]	@ (9001f9ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001f9c6:	480a      	ldr	r0, [pc, #40]	@ (9001f9f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001f9c8:	f008 f959 	bl	90027c7e <__aeabi_atexit>
9001f9cc:	4b05      	ldr	r3, [pc, #20]	@ (9001f9e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001f9ce:	676b      	str	r3, [r5, #116]	@ 0x74
9001f9d0:	4b07      	ldr	r3, [pc, #28]	@ (9001f9f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001f9d2:	67ab      	str	r3, [r5, #120]	@ 0x78
9001f9d4:	bd38      	pop	{r3, r4, r5, pc}
9001f9d6:	bf00      	nop
9001f9d8:	24021960 	.word	0x24021960
9001f9dc:	24000000 	.word	0x24000000
9001f9e0:	9001b50d 	.word	0x9001b50d
9001f9e4:	2400009c 	.word	0x2400009c
9001f9e8:	24021964 	.word	0x24021964
9001f9ec:	9001b50b 	.word	0x9001b50b
9001f9f0:	240000a0 	.word	0x240000a0

9001f9f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001f9f4:	b538      	push	{r3, r4, r5, lr}
9001f9f6:	4c15      	ldr	r4, [pc, #84]	@ (9001fa4c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001f9f8:	4605      	mov	r5, r0
9001f9fa:	7823      	ldrb	r3, [r4, #0]
9001f9fc:	f3bf 8f5b 	dmb	ish
9001fa00:	07da      	lsls	r2, r3, #31
9001fa02:	d40b      	bmi.n	9001fa1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001fa04:	4620      	mov	r0, r4
9001fa06:	f008 f941 	bl	90027c8c <__cxa_guard_acquire>
9001fa0a:	b138      	cbz	r0, 9001fa1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001fa0c:	4620      	mov	r0, r4
9001fa0e:	f008 f949 	bl	90027ca4 <__cxa_guard_release>
9001fa12:	4a0f      	ldr	r2, [pc, #60]	@ (9001fa50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001fa14:	490f      	ldr	r1, [pc, #60]	@ (9001fa54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001fa16:	4810      	ldr	r0, [pc, #64]	@ (9001fa58 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001fa18:	f008 f931 	bl	90027c7e <__aeabi_atexit>
9001fa1c:	4c0f      	ldr	r4, [pc, #60]	@ (9001fa5c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001fa1e:	7823      	ldrb	r3, [r4, #0]
9001fa20:	f3bf 8f5b 	dmb	ish
9001fa24:	07db      	lsls	r3, r3, #31
9001fa26:	d40b      	bmi.n	9001fa40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001fa28:	4620      	mov	r0, r4
9001fa2a:	f008 f92f 	bl	90027c8c <__cxa_guard_acquire>
9001fa2e:	b138      	cbz	r0, 9001fa40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001fa30:	4620      	mov	r0, r4
9001fa32:	f008 f937 	bl	90027ca4 <__cxa_guard_release>
9001fa36:	4a06      	ldr	r2, [pc, #24]	@ (9001fa50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001fa38:	4909      	ldr	r1, [pc, #36]	@ (9001fa60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001fa3a:	480a      	ldr	r0, [pc, #40]	@ (9001fa64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001fa3c:	f008 f91f 	bl	90027c7e <__aeabi_atexit>
9001fa40:	4b05      	ldr	r3, [pc, #20]	@ (9001fa58 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001fa42:	66eb      	str	r3, [r5, #108]	@ 0x6c
9001fa44:	4b07      	ldr	r3, [pc, #28]	@ (9001fa64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001fa46:	672b      	str	r3, [r5, #112]	@ 0x70
9001fa48:	bd38      	pop	{r3, r4, r5, pc}
9001fa4a:	bf00      	nop
9001fa4c:	24021958 	.word	0x24021958
9001fa50:	24000000 	.word	0x24000000
9001fa54:	9001b511 	.word	0x9001b511
9001fa58:	24000094 	.word	0x24000094
9001fa5c:	2402195c 	.word	0x2402195c
9001fa60:	9001b50f 	.word	0x9001b50f
9001fa64:	24000098 	.word	0x24000098

9001fa68 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001fa68:	b510      	push	{r4, lr}
9001fa6a:	4604      	mov	r4, r0
9001fa6c:	f7ff ff88 	bl	9001f980 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001fa70:	4620      	mov	r0, r4
9001fa72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fa76:	f7ff bfbd 	b.w	9001f9f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001fa7a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001fa7a:	b510      	push	{r4, lr}
9001fa7c:	4604      	mov	r4, r0
9001fa7e:	f7ff fff3 	bl	9001fa68 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001fa82:	4620      	mov	r0, r4
9001fa84:	f7ff ff72 	bl	9001f96c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001fa88:	4620      	mov	r0, r4
9001fa8a:	f7ff fdf9 	bl	9001f680 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001fa8e:	4620      	mov	r0, r4
9001fa90:	f7ff fcfa 	bl	9001f488 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001fa94:	4620      	mov	r0, r4
9001fa96:	f7ff fd75 	bl	9001f584 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001fa9a:	4620      	mov	r0, r4
9001fa9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001faa0:	f7ff bee0 	b.w	9001f864 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001faa4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001faa4:	b538      	push	{r3, r4, r5, lr}
9001faa6:	4c0b      	ldr	r4, [pc, #44]	@ (9001fad4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001faa8:	4605      	mov	r5, r0
9001faaa:	7823      	ldrb	r3, [r4, #0]
9001faac:	f3bf 8f5b 	dmb	ish
9001fab0:	07db      	lsls	r3, r3, #31
9001fab2:	d40b      	bmi.n	9001facc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001fab4:	4620      	mov	r0, r4
9001fab6:	f008 f8e9 	bl	90027c8c <__cxa_guard_acquire>
9001faba:	b138      	cbz	r0, 9001facc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001fabc:	4620      	mov	r0, r4
9001fabe:	f008 f8f1 	bl	90027ca4 <__cxa_guard_release>
9001fac2:	4a05      	ldr	r2, [pc, #20]	@ (9001fad8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001fac4:	4905      	ldr	r1, [pc, #20]	@ (9001fadc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001fac6:	4806      	ldr	r0, [pc, #24]	@ (9001fae0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001fac8:	f008 f8d9 	bl	90027c7e <__aeabi_atexit>
9001facc:	4b04      	ldr	r3, [pc, #16]	@ (9001fae0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001face:	67eb      	str	r3, [r5, #124]	@ 0x7c
9001fad0:	bd38      	pop	{r3, r4, r5, pc}
9001fad2:	bf00      	nop
9001fad4:	2402194c 	.word	0x2402194c
9001fad8:	24000000 	.word	0x24000000
9001fadc:	9001b509 	.word	0x9001b509
9001fae0:	2400008c 	.word	0x2400008c

9001fae4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001fae4:	b538      	push	{r3, r4, r5, lr}
9001fae6:	4c0b      	ldr	r4, [pc, #44]	@ (9001fb14 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001fae8:	4605      	mov	r5, r0
9001faea:	7823      	ldrb	r3, [r4, #0]
9001faec:	f3bf 8f5b 	dmb	ish
9001faf0:	07db      	lsls	r3, r3, #31
9001faf2:	d40b      	bmi.n	9001fb0c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001faf4:	4620      	mov	r0, r4
9001faf6:	f008 f8c9 	bl	90027c8c <__cxa_guard_acquire>
9001fafa:	b138      	cbz	r0, 9001fb0c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001fafc:	4620      	mov	r0, r4
9001fafe:	f008 f8d1 	bl	90027ca4 <__cxa_guard_release>
9001fb02:	4a05      	ldr	r2, [pc, #20]	@ (9001fb18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001fb04:	4905      	ldr	r1, [pc, #20]	@ (9001fb1c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001fb06:	4806      	ldr	r0, [pc, #24]	@ (9001fb20 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001fb08:	f008 f8b9 	bl	90027c7e <__aeabi_atexit>
9001fb0c:	4b04      	ldr	r3, [pc, #16]	@ (9001fb20 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001fb0e:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
9001fb12:	bd38      	pop	{r3, r4, r5, pc}
9001fb14:	24021950 	.word	0x24021950
9001fb18:	24000000 	.word	0x24000000
9001fb1c:	9001b507 	.word	0x9001b507
9001fb20:	24000090 	.word	0x24000090

9001fb24 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001fb24:	b570      	push	{r4, r5, r6, lr}
9001fb26:	4d0d      	ldr	r5, [pc, #52]	@ (9001fb5c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001fb28:	4606      	mov	r6, r0
9001fb2a:	4c0d      	ldr	r4, [pc, #52]	@ (9001fb60 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001fb2c:	782b      	ldrb	r3, [r5, #0]
9001fb2e:	f3bf 8f5b 	dmb	ish
9001fb32:	f013 0f01 	tst.w	r3, #1
9001fb36:	d10d      	bne.n	9001fb54 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001fb38:	4628      	mov	r0, r5
9001fb3a:	f008 f8a7 	bl	90027c8c <__cxa_guard_acquire>
9001fb3e:	b148      	cbz	r0, 9001fb54 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001fb40:	4b08      	ldr	r3, [pc, #32]	@ (9001fb64 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001fb42:	4628      	mov	r0, r5
9001fb44:	6023      	str	r3, [r4, #0]
9001fb46:	f008 f8ad 	bl	90027ca4 <__cxa_guard_release>
9001fb4a:	4a07      	ldr	r2, [pc, #28]	@ (9001fb68 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001fb4c:	4620      	mov	r0, r4
9001fb4e:	4907      	ldr	r1, [pc, #28]	@ (9001fb6c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001fb50:	f008 f895 	bl	90027c7e <__aeabi_atexit>
9001fb54:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
9001fb58:	bd70      	pop	{r4, r5, r6, pc}
9001fb5a:	bf00      	nop
9001fb5c:	24021954 	.word	0x24021954
9001fb60:	24021acc 	.word	0x24021acc
9001fb64:	9002c42c 	.word	0x9002c42c
9001fb68:	24000000 	.word	0x24000000
9001fb6c:	9001b505 	.word	0x9001b505

9001fb70 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001fb70:	b510      	push	{r4, lr}
9001fb72:	4604      	mov	r4, r0
9001fb74:	f7ff ff96 	bl	9001faa4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001fb78:	4620      	mov	r0, r4
9001fb7a:	f7ff ffb3 	bl	9001fae4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001fb7e:	4620      	mov	r0, r4
9001fb80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fb84:	f7ff bfce 	b.w	9001fb24 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001fb88 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
9001fb88:	b570      	push	{r4, r5, r6, lr}
9001fb8a:	4d0d      	ldr	r5, [pc, #52]	@ (9001fbc0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
9001fb8c:	4606      	mov	r6, r0
9001fb8e:	4c0d      	ldr	r4, [pc, #52]	@ (9001fbc4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
9001fb90:	782b      	ldrb	r3, [r5, #0]
9001fb92:	f3bf 8f5b 	dmb	ish
9001fb96:	f013 0f01 	tst.w	r3, #1
9001fb9a:	d10d      	bne.n	9001fbb8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
9001fb9c:	4628      	mov	r0, r5
9001fb9e:	f008 f875 	bl	90027c8c <__cxa_guard_acquire>
9001fba2:	b148      	cbz	r0, 9001fbb8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
9001fba4:	4b08      	ldr	r3, [pc, #32]	@ (9001fbc8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
9001fba6:	4628      	mov	r0, r5
9001fba8:	6023      	str	r3, [r4, #0]
9001fbaa:	f008 f87b 	bl	90027ca4 <__cxa_guard_release>
9001fbae:	4a07      	ldr	r2, [pc, #28]	@ (9001fbcc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
9001fbb0:	4620      	mov	r0, r4
9001fbb2:	4907      	ldr	r1, [pc, #28]	@ (9001fbd0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
9001fbb4:	f008 f863 	bl	90027c7e <__aeabi_atexit>
9001fbb8:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
9001fbbc:	bd70      	pop	{r4, r5, r6, pc}
9001fbbe:	bf00      	nop
9001fbc0:	24021948 	.word	0x24021948
9001fbc4:	240219c8 	.word	0x240219c8
9001fbc8:	9002c448 	.word	0x9002c448
9001fbcc:	24000000 	.word	0x24000000
9001fbd0:	9001b503 	.word	0x9001b503

9001fbd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001fbd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fbd8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
9001fbdc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
9001fbe0:	2d00      	cmp	r5, #0
9001fbe2:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
9001fbe6:	fb05 4c0e 	mla	ip, r5, lr, r4
9001fbea:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
9001fbee:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
9001fbf2:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
9001fbf6:	eb02 0a0c 	add.w	sl, r2, ip
9001fbfa:	8808      	ldrh	r0, [r1, #0]
9001fbfc:	f2c0 80b0 	blt.w	9001fd60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001fc00:	45ab      	cmp	fp, r5
9001fc02:	f340 80ad 	ble.w	9001fd60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001fc06:	2c00      	cmp	r4, #0
9001fc08:	f2c0 80a8 	blt.w	9001fd5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001fc0c:	45a6      	cmp	lr, r4
9001fc0e:	f340 80a5 	ble.w	9001fd5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001fc12:	f812 200c 	ldrb.w	r2, [r2, ip]
9001fc16:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001fc1a:	1c62      	adds	r2, r4, #1
9001fc1c:	f100 80a3 	bmi.w	9001fd66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001fc20:	4596      	cmp	lr, r2
9001fc22:	f340 80a0 	ble.w	9001fd66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001fc26:	f1b9 0f00 	cmp.w	r9, #0
9001fc2a:	f000 809c 	beq.w	9001fd66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001fc2e:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001fc32:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001fc36:	3501      	adds	r5, #1
9001fc38:	f100 8099 	bmi.w	9001fd6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001fc3c:	45ab      	cmp	fp, r5
9001fc3e:	f340 8096 	ble.w	9001fd6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001fc42:	2f00      	cmp	r7, #0
9001fc44:	f000 8093 	beq.w	9001fd6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001fc48:	2c00      	cmp	r4, #0
9001fc4a:	f2c0 808e 	blt.w	9001fd6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001fc4e:	45a6      	cmp	lr, r4
9001fc50:	f340 808b 	ble.w	9001fd6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001fc54:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001fc58:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001fc5c:	3401      	adds	r4, #1
9001fc5e:	f100 8089 	bmi.w	9001fd74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001fc62:	45a6      	cmp	lr, r4
9001fc64:	f340 8086 	ble.w	9001fd74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001fc68:	f1b9 0f00 	cmp.w	r9, #0
9001fc6c:	f000 8082 	beq.w	9001fd74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001fc70:	44d6      	add	lr, sl
9001fc72:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001fc76:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001fc7a:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001fc7e:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
9001fc82:	fb19 fe07 	smulbb	lr, r9, r7
9001fc86:	f1c7 0210 	rsb	r2, r7, #16
9001fc8a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9001fc8e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001fc92:	eba2 0209 	sub.w	r2, r2, r9
9001fc96:	ea44 0808 	orr.w	r8, r4, r8
9001fc9a:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001fc9e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9001fca2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001fca6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9001fcaa:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001fcae:	ea44 0c0c 	orr.w	ip, r4, ip
9001fcb2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001fcb6:	fb04 f40c 	mul.w	r4, r4, ip
9001fcba:	fb02 4808 	mla	r8, r2, r8, r4
9001fcbe:	041a      	lsls	r2, r3, #16
9001fcc0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001fcc4:	b2b4      	uxth	r4, r6
9001fcc6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9001fcca:	43f6      	mvns	r6, r6
9001fccc:	4313      	orrs	r3, r2
9001fcce:	042a      	lsls	r2, r5, #16
9001fcd0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9001fcd4:	b2f6      	uxtb	r6, r6
9001fcd6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9001fcda:	fb0e 8303 	mla	r3, lr, r3, r8
9001fcde:	432a      	orrs	r2, r5
9001fce0:	fb07 3202 	mla	r2, r7, r2, r3
9001fce4:	10c7      	asrs	r7, r0, #3
9001fce6:	0d53      	lsrs	r3, r2, #21
9001fce8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001fcec:	0952      	lsrs	r2, r2, #5
9001fcee:	fb17 f706 	smulbb	r7, r7, r6
9001fcf2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fcf6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001fcfa:	431a      	orrs	r2, r3
9001fcfc:	b293      	uxth	r3, r2
9001fcfe:	1202      	asrs	r2, r0, #8
9001fd00:	121d      	asrs	r5, r3, #8
9001fd02:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001fd06:	00c0      	lsls	r0, r0, #3
9001fd08:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001fd0c:	fb12 f206 	smulbb	r2, r2, r6
9001fd10:	b2c0      	uxtb	r0, r0
9001fd12:	fb05 2504 	mla	r5, r5, r4, r2
9001fd16:	10da      	asrs	r2, r3, #3
9001fd18:	fb10 f006 	smulbb	r0, r0, r6
9001fd1c:	00db      	lsls	r3, r3, #3
9001fd1e:	b2ad      	uxth	r5, r5
9001fd20:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001fd24:	b2db      	uxtb	r3, r3
9001fd26:	fb02 7204 	mla	r2, r2, r4, r7
9001fd2a:	fb03 0004 	mla	r0, r3, r4, r0
9001fd2e:	1c6b      	adds	r3, r5, #1
9001fd30:	b292      	uxth	r2, r2
9001fd32:	b280      	uxth	r0, r0
9001fd34:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001fd38:	1c43      	adds	r3, r0, #1
9001fd3a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001fd3e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001fd42:	1c50      	adds	r0, r2, #1
9001fd44:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001fd48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fd4c:	0952      	lsrs	r2, r2, #5
9001fd4e:	432b      	orrs	r3, r5
9001fd50:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001fd54:	4313      	orrs	r3, r2
9001fd56:	800b      	strh	r3, [r1, #0]
9001fd58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fd5c:	4680      	mov	r8, r0
9001fd5e:	e75c      	b.n	9001fc1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9001fd60:	4684      	mov	ip, r0
9001fd62:	4680      	mov	r8, r0
9001fd64:	e767      	b.n	9001fc36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001fd66:	4684      	mov	ip, r0
9001fd68:	e765      	b.n	9001fc36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001fd6a:	4605      	mov	r5, r0
9001fd6c:	e776      	b.n	9001fc5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9001fd6e:	4603      	mov	r3, r0
9001fd70:	4605      	mov	r5, r0
9001fd72:	e782      	b.n	9001fc7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001fd74:	4603      	mov	r3, r0
9001fd76:	e780      	b.n	9001fc7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9001fd78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fd78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fd7c:	b099      	sub	sp, #100	@ 0x64
9001fd7e:	9215      	str	r2, [sp, #84]	@ 0x54
9001fd80:	9309      	str	r3, [sp, #36]	@ 0x24
9001fd82:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
9001fd84:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
9001fd88:	9016      	str	r0, [sp, #88]	@ 0x58
9001fd8a:	930d      	str	r3, [sp, #52]	@ 0x34
9001fd8c:	6850      	ldr	r0, [r2, #4]
9001fd8e:	910c      	str	r1, [sp, #48]	@ 0x30
9001fd90:	6812      	ldr	r2, [r2, #0]
9001fd92:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9001fd96:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
9001fd9a:	fb00 1303 	mla	r3, r0, r3, r1
9001fd9e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001fda2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001fda4:	681b      	ldr	r3, [r3, #0]
9001fda6:	930b      	str	r3, [sp, #44]	@ 0x2c
9001fda8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001fdaa:	685e      	ldr	r6, [r3, #4]
9001fdac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001fdae:	3604      	adds	r6, #4
9001fdb0:	43db      	mvns	r3, r3
9001fdb2:	b2db      	uxtb	r3, r3
9001fdb4:	930a      	str	r3, [sp, #40]	@ 0x28
9001fdb6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001fdb8:	2b00      	cmp	r3, #0
9001fdba:	dc03      	bgt.n	9001fdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001fdbc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
9001fdbe:	2b00      	cmp	r3, #0
9001fdc0:	f340 8225 	ble.w	9002020e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001fdc4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001fdc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001fdca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001fdce:	1e48      	subs	r0, r1, #1
9001fdd0:	1e57      	subs	r7, r2, #1
9001fdd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fdd4:	2b00      	cmp	r3, #0
9001fdd6:	f340 80e3 	ble.w	9001ffa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001fdda:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9001fdde:	ea4f 4325 	mov.w	r3, r5, asr #16
9001fde2:	d406      	bmi.n	9001fdf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001fde4:	4584      	cmp	ip, r0
9001fde6:	da04      	bge.n	9001fdf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001fde8:	2b00      	cmp	r3, #0
9001fdea:	db02      	blt.n	9001fdf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001fdec:	42bb      	cmp	r3, r7
9001fdee:	f2c0 80d8 	blt.w	9001ffa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001fdf2:	f11c 0c01 	adds.w	ip, ip, #1
9001fdf6:	f100 80c9 	bmi.w	9001ff8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fdfa:	4561      	cmp	r1, ip
9001fdfc:	f2c0 80c6 	blt.w	9001ff8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fe00:	3301      	adds	r3, #1
9001fe02:	f100 80c3 	bmi.w	9001ff8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fe06:	429a      	cmp	r2, r3
9001fe08:	f2c0 80c0 	blt.w	9001ff8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fe0c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
9001fe10:	4647      	mov	r7, r8
9001fe12:	f1bb 0f00 	cmp.w	fp, #0
9001fe16:	f340 80e3 	ble.w	9001ffe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9001fe1a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
9001fe1c:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001fe20:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001fe22:	f3ca 3003 	ubfx	r0, sl, #12, #4
9001fe26:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001fe2a:	ea5f 422a 	movs.w	r2, sl, asr #16
9001fe2e:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001fe32:	689b      	ldr	r3, [r3, #8]
9001fe34:	f100 8121 	bmi.w	9002007a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fe38:	f103 39ff 	add.w	r9, r3, #4294967295
9001fe3c:	454a      	cmp	r2, r9
9001fe3e:	f280 811c 	bge.w	9002007a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fe42:	f1bc 0f00 	cmp.w	ip, #0
9001fe46:	f2c0 8118 	blt.w	9002007a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fe4a:	f10e 39ff 	add.w	r9, lr, #4294967295
9001fe4e:	45cc      	cmp	ip, r9
9001fe50:	f280 8113 	bge.w	9002007a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fe54:	b21b      	sxth	r3, r3
9001fe56:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9001fe58:	fb0c 2203 	mla	r2, ip, r3, r2
9001fe5c:	eb04 0902 	add.w	r9, r4, r2
9001fe60:	5ca2      	ldrb	r2, [r4, r2]
9001fe62:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9001fe66:	2800      	cmp	r0, #0
9001fe68:	f000 80fe 	beq.w	90020068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9001fe6c:	f899 2001 	ldrb.w	r2, [r9, #1]
9001fe70:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9001fe74:	9211      	str	r2, [sp, #68]	@ 0x44
9001fe76:	b151      	cbz	r1, 9001fe8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001fe78:	eb09 0203 	add.w	r2, r9, r3
9001fe7c:	f819 3003 	ldrb.w	r3, [r9, r3]
9001fe80:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001fe84:	930f      	str	r3, [sp, #60]	@ 0x3c
9001fe86:	7853      	ldrb	r3, [r2, #1]
9001fe88:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001fe8c:	9312      	str	r3, [sp, #72]	@ 0x48
9001fe8e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001fe90:	fb10 f201 	smulbb	r2, r0, r1
9001fe94:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001fe96:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001fe9a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001fe9e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
9001fea2:	10d2      	asrs	r2, r2, #3
9001fea4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001fea8:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9001feac:	ea4c 0c03 	orr.w	ip, ip, r3
9001feb0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9001feb2:	041b      	lsls	r3, r3, #16
9001feb4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001feb8:	4323      	orrs	r3, r4
9001feba:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9001febc:	4353      	muls	r3, r2
9001febe:	fb09 330c 	mla	r3, r9, ip, r3
9001fec2:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001fec6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9001feca:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001fece:	ea4c 0e0e 	orr.w	lr, ip, lr
9001fed2:	f1c1 0c10 	rsb	ip, r1, #16
9001fed6:	ebac 0c00 	sub.w	ip, ip, r0
9001feda:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001fede:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001fee2:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001fee6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001fee8:	0418      	lsls	r0, r3, #16
9001feea:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001feee:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9001fef2:	4318      	orrs	r0, r3
9001fef4:	fb02 c200 	mla	r2, r2, r0, ip
9001fef8:	8838      	ldrh	r0, [r7, #0]
9001fefa:	0d53      	lsrs	r3, r2, #21
9001fefc:	0952      	lsrs	r2, r2, #5
9001fefe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001ff02:	1201      	asrs	r1, r0, #8
9001ff04:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001ff08:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9001ff0c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001ff10:	00c0      	lsls	r0, r0, #3
9001ff12:	431a      	orrs	r2, r3
9001ff14:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
9001ff18:	fb11 f104 	smulbb	r1, r1, r4
9001ff1c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001ff20:	b292      	uxth	r2, r2
9001ff22:	fb1e fe04 	smulbb	lr, lr, r4
9001ff26:	b2c0      	uxtb	r0, r0
9001ff28:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001ff2c:	fb10 f004 	smulbb	r0, r0, r4
9001ff30:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ff34:	fb0c 1c03 	mla	ip, ip, r3, r1
9001ff38:	10d1      	asrs	r1, r2, #3
9001ff3a:	00d2      	lsls	r2, r2, #3
9001ff3c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001ff40:	fa1f fc8c 	uxth.w	ip, ip
9001ff44:	b2d2      	uxtb	r2, r2
9001ff46:	fb01 e103 	mla	r1, r1, r3, lr
9001ff4a:	fb02 0303 	mla	r3, r2, r3, r0
9001ff4e:	b289      	uxth	r1, r1
9001ff50:	b29a      	uxth	r2, r3
9001ff52:	f10c 0301 	add.w	r3, ip, #1
9001ff56:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001ff5a:	1c53      	adds	r3, r2, #1
9001ff5c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001ff60:	1c4a      	adds	r2, r1, #1
9001ff62:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ff66:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001ff6a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001ff6e:	0949      	lsrs	r1, r1, #5
9001ff70:	ea43 030c 	orr.w	r3, r3, ip
9001ff74:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001ff78:	430b      	orrs	r3, r1
9001ff7a:	803b      	strh	r3, [r7, #0]
9001ff7c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9001ff7e:	3702      	adds	r7, #2
9001ff80:	f10b 3bff 	add.w	fp, fp, #4294967295
9001ff84:	449a      	add	sl, r3
9001ff86:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001ff88:	441d      	add	r5, r3
9001ff8a:	e742      	b.n	9001fe12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001ff8c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9001ff8e:	f108 0802 	add.w	r8, r8, #2
9001ff92:	449a      	add	sl, r3
9001ff94:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001ff96:	441d      	add	r5, r3
9001ff98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ff9a:	3b01      	subs	r3, #1
9001ff9c:	9309      	str	r3, [sp, #36]	@ 0x24
9001ff9e:	e718      	b.n	9001fdd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001ffa0:	d023      	beq.n	9001ffea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001ffa2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ffa4:	9825      	ldr	r0, [sp, #148]	@ 0x94
9001ffa6:	3b01      	subs	r3, #1
9001ffa8:	fb00 a003 	mla	r0, r0, r3, sl
9001ffac:	1400      	asrs	r0, r0, #16
9001ffae:	f53f af2d 	bmi.w	9001fe0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001ffb2:	3901      	subs	r1, #1
9001ffb4:	4288      	cmp	r0, r1
9001ffb6:	f6bf af29 	bge.w	9001fe0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001ffba:	9926      	ldr	r1, [sp, #152]	@ 0x98
9001ffbc:	fb01 5303 	mla	r3, r1, r3, r5
9001ffc0:	141b      	asrs	r3, r3, #16
9001ffc2:	f53f af23 	bmi.w	9001fe0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001ffc6:	3a01      	subs	r2, #1
9001ffc8:	4293      	cmp	r3, r2
9001ffca:	f6bf af1f 	bge.w	9001fe0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001ffce:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
9001ffd2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
9001ffd6:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
9001ffda:	f1be 0f00 	cmp.w	lr, #0
9001ffde:	dc6c      	bgt.n	900200ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9001ffe0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ffe2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001ffe6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001ffea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001ffec:	2b00      	cmp	r3, #0
9001ffee:	f340 810e 	ble.w	9002020e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001fff2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001fff6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9001fff8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fffc:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020000:	eef0 6a62 	vmov.f32	s13, s5
90020004:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020008:	ee31 1a05 	vadd.f32	s2, s2, s10
9002000c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020010:	ee16 aa90 	vmov	sl, s13
90020014:	eef0 6a43 	vmov.f32	s13, s6
90020018:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002001c:	ee16 5a90 	vmov	r5, s13
90020020:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020024:	ee61 7a27 	vmul.f32	s15, s2, s15
90020028:	ee77 2a62 	vsub.f32	s5, s14, s5
9002002c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020030:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020034:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020038:	ee12 2a90 	vmov	r2, s5
9002003c:	eef0 2a47 	vmov.f32	s5, s14
90020040:	fb92 f3f3 	sdiv	r3, r2, r3
90020044:	ee13 2a10 	vmov	r2, s6
90020048:	9325      	str	r3, [sp, #148]	@ 0x94
9002004a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002004c:	eeb0 3a67 	vmov.f32	s6, s15
90020050:	fb92 f3f3 	sdiv	r3, r2, r3
90020054:	9326      	str	r3, [sp, #152]	@ 0x98
90020056:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020058:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9002005a:	3b01      	subs	r3, #1
9002005c:	930c      	str	r3, [sp, #48]	@ 0x30
9002005e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90020060:	bf08      	it	eq
90020062:	4613      	moveq	r3, r2
90020064:	9309      	str	r3, [sp, #36]	@ 0x24
90020066:	e6a6      	b.n	9001fdb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90020068:	2900      	cmp	r1, #0
9002006a:	f43f af10 	beq.w	9001fe8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002006e:	f819 3003 	ldrb.w	r3, [r9, r3]
90020072:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90020076:	930f      	str	r3, [sp, #60]	@ 0x3c
90020078:	e709      	b.n	9001fe8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002007a:	f112 0901 	adds.w	r9, r2, #1
9002007e:	f53f af7d 	bmi.w	9001ff7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90020082:	454b      	cmp	r3, r9
90020084:	f6ff af7a 	blt.w	9001ff7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90020088:	f11c 0901 	adds.w	r9, ip, #1
9002008c:	f53f af76 	bmi.w	9001ff7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90020090:	45ce      	cmp	lr, r9
90020092:	f6ff af73 	blt.w	9001ff7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90020096:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90020098:	b21b      	sxth	r3, r3
9002009a:	9202      	str	r2, [sp, #8]
9002009c:	fa0f f28e 	sxth.w	r2, lr
900200a0:	9300      	str	r3, [sp, #0]
900200a2:	4633      	mov	r3, r6
900200a4:	9201      	str	r2, [sp, #4]
900200a6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900200a8:	e9cd 1405 	strd	r1, r4, [sp, #20]
900200ac:	e9cd c003 	strd	ip, r0, [sp, #12]
900200b0:	4639      	mov	r1, r7
900200b2:	9816      	ldr	r0, [sp, #88]	@ 0x58
900200b4:	f7ff fd8e 	bl	9001fbd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
900200b8:	e760      	b.n	9001ff7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900200ba:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900200bc:	ea4f 422a 	mov.w	r2, sl, asr #16
900200c0:	1429      	asrs	r1, r5, #16
900200c2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900200c4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900200c8:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900200cc:	f3c5 3003 	ubfx	r0, r5, #12, #4
900200d0:	fb03 2101 	mla	r1, r3, r1, r2
900200d4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900200d6:	440a      	add	r2, r1
900200d8:	5c61      	ldrb	r1, [r4, r1]
900200da:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
900200de:	f1bc 0f00 	cmp.w	ip, #0
900200e2:	f000 808c 	beq.w	900201fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
900200e6:	7857      	ldrb	r7, [r2, #1]
900200e8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
900200ec:	9413      	str	r4, [sp, #76]	@ 0x4c
900200ee:	b140      	cbz	r0, 90020102 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900200f0:	18d7      	adds	r7, r2, r3
900200f2:	5cd3      	ldrb	r3, [r2, r3]
900200f4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900200f8:	9310      	str	r3, [sp, #64]	@ 0x40
900200fa:	787b      	ldrb	r3, [r7, #1]
900200fc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90020100:	9314      	str	r3, [sp, #80]	@ 0x50
90020102:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90020104:	fb1c f200 	smulbb	r2, ip, r0
90020108:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002010a:	f10e 3eff 	add.w	lr, lr, #4294967295
9002010e:	041f      	lsls	r7, r3, #16
90020110:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90020114:	10d2      	asrs	r2, r2, #3
90020116:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
9002011a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
9002011e:	431f      	orrs	r7, r3
90020120:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90020124:	9317      	str	r3, [sp, #92]	@ 0x5c
90020126:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90020128:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
9002012a:	041b      	lsls	r3, r3, #16
9002012c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90020130:	ea43 030b 	orr.w	r3, r3, fp
90020134:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90020138:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002013c:	4353      	muls	r3, r2
9002013e:	fb04 3707 	mla	r7, r4, r7, r3
90020142:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90020146:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90020148:	ea43 0b01 	orr.w	fp, r3, r1
9002014c:	f1c0 0110 	rsb	r1, r0, #16
90020150:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020152:	eba1 0c0c 	sub.w	ip, r1, ip
90020156:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002015a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9002015e:	fb0c 770b 	mla	r7, ip, fp, r7
90020162:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90020166:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
9002016a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002016e:	ea4c 0c0b 	orr.w	ip, ip, fp
90020172:	fb02 770c 	mla	r7, r2, ip, r7
90020176:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90020178:	0d79      	lsrs	r1, r7, #21
9002017a:	8812      	ldrh	r2, [r2, #0]
9002017c:	097f      	lsrs	r7, r7, #5
9002017e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90020182:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90020186:	430f      	orrs	r7, r1
90020188:	1211      	asrs	r1, r2, #8
9002018a:	b2bb      	uxth	r3, r7
9002018c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90020190:	10d7      	asrs	r7, r2, #3
90020192:	fb11 f104 	smulbb	r1, r1, r4
90020196:	1218      	asrs	r0, r3, #8
90020198:	00d2      	lsls	r2, r2, #3
9002019a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002019e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900201a2:	fb17 f704 	smulbb	r7, r7, r4
900201a6:	b2d2      	uxtb	r2, r2
900201a8:	fb00 1009 	mla	r0, r0, r9, r1
900201ac:	10d9      	asrs	r1, r3, #3
900201ae:	fb12 f204 	smulbb	r2, r2, r4
900201b2:	00db      	lsls	r3, r3, #3
900201b4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900201b8:	b280      	uxth	r0, r0
900201ba:	b2db      	uxtb	r3, r3
900201bc:	fb01 7109 	mla	r1, r1, r9, r7
900201c0:	fb03 2309 	mla	r3, r3, r9, r2
900201c4:	1c42      	adds	r2, r0, #1
900201c6:	b289      	uxth	r1, r1
900201c8:	b29b      	uxth	r3, r3
900201ca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900201ce:	1c4f      	adds	r7, r1, #1
900201d0:	1c5a      	adds	r2, r3, #1
900201d2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900201d6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900201da:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900201de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900201e0:	0949      	lsrs	r1, r1, #5
900201e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900201e6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900201ea:	4310      	orrs	r0, r2
900201ec:	4308      	orrs	r0, r1
900201ee:	f823 0b02 	strh.w	r0, [r3], #2
900201f2:	930e      	str	r3, [sp, #56]	@ 0x38
900201f4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900201f6:	449a      	add	sl, r3
900201f8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900201fa:	441d      	add	r5, r3
900201fc:	e6ed      	b.n	9001ffda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900201fe:	2800      	cmp	r0, #0
90020200:	f43f af7f 	beq.w	90020102 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90020204:	5cd3      	ldrb	r3, [r2, r3]
90020206:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002020a:	9310      	str	r3, [sp, #64]	@ 0x40
9002020c:	e779      	b.n	90020102 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002020e:	b019      	add	sp, #100	@ 0x64
90020210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020214 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90020214:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020218:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
9002021c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90020220:	f1b8 0f00 	cmp.w	r8, #0
90020224:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
90020228:	fb08 470e 	mla	r7, r8, lr, r4
9002022c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90020230:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90020234:	eb02 0907 	add.w	r9, r2, r7
90020238:	8808      	ldrh	r0, [r1, #0]
9002023a:	db67      	blt.n	9002030c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9002023c:	45c2      	cmp	sl, r8
9002023e:	dd65      	ble.n	9002030c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90020240:	2c00      	cmp	r4, #0
90020242:	db61      	blt.n	90020308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90020244:	45a6      	cmp	lr, r4
90020246:	dd5f      	ble.n	90020308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90020248:	5dd2      	ldrb	r2, [r2, r7]
9002024a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9002024e:	1c62      	adds	r2, r4, #1
90020250:	d45f      	bmi.n	90020312 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90020252:	4596      	cmp	lr, r2
90020254:	dd5d      	ble.n	90020312 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90020256:	2d00      	cmp	r5, #0
90020258:	d05b      	beq.n	90020312 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002025a:	f899 2001 	ldrb.w	r2, [r9, #1]
9002025e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90020262:	f118 0801 	adds.w	r8, r8, #1
90020266:	d458      	bmi.n	9002031a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020268:	45c2      	cmp	sl, r8
9002026a:	dd56      	ble.n	9002031a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9002026c:	2e00      	cmp	r6, #0
9002026e:	d054      	beq.n	9002031a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020270:	2c00      	cmp	r4, #0
90020272:	db50      	blt.n	90020316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90020274:	45a6      	cmp	lr, r4
90020276:	dd4e      	ble.n	90020316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90020278:	f819 200e 	ldrb.w	r2, [r9, lr]
9002027c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90020280:	3401      	adds	r4, #1
90020282:	d407      	bmi.n	90020294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90020284:	45a6      	cmp	lr, r4
90020286:	dd05      	ble.n	90020294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90020288:	b125      	cbz	r5, 90020294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002028a:	44ce      	add	lr, r9
9002028c:	f89e 0001 	ldrb.w	r0, [lr, #1]
90020290:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90020294:	fb15 f406 	smulbb	r4, r5, r6
90020298:	ea4f 430c 	mov.w	r3, ip, lsl #16
9002029c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
900202a0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900202a4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900202a8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
900202ac:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900202b0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900202b4:	ea43 0c0c 	orr.w	ip, r3, ip
900202b8:	f1c6 0310 	rsb	r3, r6, #16
900202bc:	ea4e 0707 	orr.w	r7, lr, r7
900202c0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900202c4:	1b5b      	subs	r3, r3, r5
900202c6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900202ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900202ce:	437d      	muls	r5, r7
900202d0:	fb03 5c0c 	mla	ip, r3, ip, r5
900202d4:	0403      	lsls	r3, r0, #16
900202d6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900202da:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900202de:	4318      	orrs	r0, r3
900202e0:	0413      	lsls	r3, r2, #16
900202e2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900202e6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900202ea:	fb04 c000 	mla	r0, r4, r0, ip
900202ee:	4313      	orrs	r3, r2
900202f0:	fb06 0003 	mla	r0, r6, r3, r0
900202f4:	0d43      	lsrs	r3, r0, #21
900202f6:	0940      	lsrs	r0, r0, #5
900202f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900202fc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90020300:	4318      	orrs	r0, r3
90020302:	8008      	strh	r0, [r1, #0]
90020304:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020308:	4684      	mov	ip, r0
9002030a:	e7a0      	b.n	9002024e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
9002030c:	4607      	mov	r7, r0
9002030e:	4684      	mov	ip, r0
90020310:	e7a7      	b.n	90020262 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90020312:	4607      	mov	r7, r0
90020314:	e7a5      	b.n	90020262 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90020316:	4602      	mov	r2, r0
90020318:	e7b2      	b.n	90020280 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
9002031a:	4602      	mov	r2, r0
9002031c:	e7ba      	b.n	90020294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

9002031e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002031e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020322:	b093      	sub	sp, #76	@ 0x4c
90020324:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90020328:	920f      	str	r2, [sp, #60]	@ 0x3c
9002032a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9002032c:	9010      	str	r0, [sp, #64]	@ 0x40
9002032e:	9108      	str	r1, [sp, #32]
90020330:	6850      	ldr	r0, [r2, #4]
90020332:	9306      	str	r3, [sp, #24]
90020334:	6812      	ldr	r2, [r2, #0]
90020336:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9002033a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
9002033e:	fb00 1303 	mla	r3, r0, r3, r1
90020342:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90020346:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90020348:	681b      	ldr	r3, [r3, #0]
9002034a:	9307      	str	r3, [sp, #28]
9002034c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002034e:	685f      	ldr	r7, [r3, #4]
90020350:	3704      	adds	r7, #4
90020352:	9b08      	ldr	r3, [sp, #32]
90020354:	2b00      	cmp	r3, #0
90020356:	dc03      	bgt.n	90020360 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90020358:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002035a:	2b00      	cmp	r3, #0
9002035c:	f340 81b2 	ble.w	900206c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90020360:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90020362:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020366:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002036a:	1e48      	subs	r0, r1, #1
9002036c:	f102 3cff 	add.w	ip, r2, #4294967295
90020370:	9b06      	ldr	r3, [sp, #24]
90020372:	2b00      	cmp	r3, #0
90020374:	f340 80a9 	ble.w	900204ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020378:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002037c:	ea4f 4326 	mov.w	r3, r6, asr #16
90020380:	d406      	bmi.n	90020390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90020382:	4586      	cmp	lr, r0
90020384:	da04      	bge.n	90020390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90020386:	2b00      	cmp	r3, #0
90020388:	db02      	blt.n	90020390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002038a:	4563      	cmp	r3, ip
9002038c:	f2c0 809e 	blt.w	900204cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90020390:	f11e 0e01 	adds.w	lr, lr, #1
90020394:	f100 808f 	bmi.w	900204b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020398:	4571      	cmp	r1, lr
9002039a:	f2c0 808c 	blt.w	900204b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002039e:	3301      	adds	r3, #1
900203a0:	f100 8089 	bmi.w	900204b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900203a4:	429a      	cmp	r2, r3
900203a6:	f2c0 8086 	blt.w	900204b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900203aa:	f8dd b018 	ldr.w	fp, [sp, #24]
900203ae:	46c8      	mov	r8, r9
900203b0:	f1bb 0f00 	cmp.w	fp, #0
900203b4:	f340 80a6 	ble.w	90020504 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
900203b8:	9a24      	ldr	r2, [sp, #144]	@ 0x90
900203ba:	ea4f 4c26 	mov.w	ip, r6, asr #16
900203be:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900203c0:	f3c4 3003 	ubfx	r0, r4, #12, #4
900203c4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900203c8:	1422      	asrs	r2, r4, #16
900203ca:	f3c6 3103 	ubfx	r1, r6, #12, #4
900203ce:	689b      	ldr	r3, [r3, #8]
900203d0:	f100 80e3 	bmi.w	9002059a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900203d4:	f103 3aff 	add.w	sl, r3, #4294967295
900203d8:	4552      	cmp	r2, sl
900203da:	f280 80de 	bge.w	9002059a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900203de:	f1bc 0f00 	cmp.w	ip, #0
900203e2:	f2c0 80da 	blt.w	9002059a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900203e6:	f10e 3aff 	add.w	sl, lr, #4294967295
900203ea:	45d4      	cmp	ip, sl
900203ec:	f280 80d5 	bge.w	9002059a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900203f0:	b21b      	sxth	r3, r3
900203f2:	9d07      	ldr	r5, [sp, #28]
900203f4:	fb0c 2203 	mla	r2, ip, r3, r2
900203f8:	eb05 0a02 	add.w	sl, r5, r2
900203fc:	5caa      	ldrb	r2, [r5, r2]
900203fe:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
90020402:	2800      	cmp	r0, #0
90020404:	f000 80c0 	beq.w	90020588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90020408:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002040c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90020410:	920b      	str	r2, [sp, #44]	@ 0x2c
90020412:	b151      	cbz	r1, 9002042a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90020414:	eb0a 0203 	add.w	r2, sl, r3
90020418:	f81a 3003 	ldrb.w	r3, [sl, r3]
9002041c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020420:	9309      	str	r3, [sp, #36]	@ 0x24
90020422:	7853      	ldrb	r3, [r2, #1]
90020424:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020428:	930c      	str	r3, [sp, #48]	@ 0x30
9002042a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002042c:	fb10 f201 	smulbb	r2, r0, r1
90020430:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90020432:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90020436:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002043a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002043e:	10d2      	asrs	r2, r2, #3
90020440:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90020444:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90020448:	ea4c 0c03 	orr.w	ip, ip, r3
9002044c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002044e:	041b      	lsls	r3, r3, #16
90020450:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90020454:	432b      	orrs	r3, r5
90020456:	4353      	muls	r3, r2
90020458:	fb0a 330c 	mla	r3, sl, ip, r3
9002045c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90020460:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90020464:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90020468:	ea4c 0e0e 	orr.w	lr, ip, lr
9002046c:	f1c1 0c10 	rsb	ip, r1, #16
90020470:	ebac 0c00 	sub.w	ip, ip, r0
90020474:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020478:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9002047c:	fb0c 3c0e 	mla	ip, ip, lr, r3
90020480:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020482:	0418      	lsls	r0, r3, #16
90020484:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90020488:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002048c:	4318      	orrs	r0, r3
9002048e:	fb02 c200 	mla	r2, r2, r0, ip
90020492:	0d53      	lsrs	r3, r2, #21
90020494:	0952      	lsrs	r2, r2, #5
90020496:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002049a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002049e:	431a      	orrs	r2, r3
900204a0:	f8a8 2000 	strh.w	r2, [r8]
900204a4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900204a6:	f108 0802 	add.w	r8, r8, #2
900204aa:	f10b 3bff 	add.w	fp, fp, #4294967295
900204ae:	441c      	add	r4, r3
900204b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900204b2:	441e      	add	r6, r3
900204b4:	e77c      	b.n	900203b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900204b6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900204b8:	f109 0902 	add.w	r9, r9, #2
900204bc:	441c      	add	r4, r3
900204be:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900204c0:	441e      	add	r6, r3
900204c2:	9b06      	ldr	r3, [sp, #24]
900204c4:	3b01      	subs	r3, #1
900204c6:	9306      	str	r3, [sp, #24]
900204c8:	e752      	b.n	90020370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900204ca:	d020      	beq.n	9002050e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900204cc:	9b06      	ldr	r3, [sp, #24]
900204ce:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900204d0:	3b01      	subs	r3, #1
900204d2:	fb00 4003 	mla	r0, r0, r3, r4
900204d6:	1400      	asrs	r0, r0, #16
900204d8:	f53f af67 	bmi.w	900203aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900204dc:	3901      	subs	r1, #1
900204de:	4288      	cmp	r0, r1
900204e0:	f6bf af63 	bge.w	900203aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900204e4:	9920      	ldr	r1, [sp, #128]	@ 0x80
900204e6:	fb01 6303 	mla	r3, r1, r3, r6
900204ea:	141b      	asrs	r3, r3, #16
900204ec:	f53f af5d 	bmi.w	900203aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900204f0:	3a01      	subs	r2, #1
900204f2:	4293      	cmp	r3, r2
900204f4:	f6bf af59 	bge.w	900203aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900204f8:	f8dd 8018 	ldr.w	r8, [sp, #24]
900204fc:	46ca      	mov	sl, r9
900204fe:	f1b8 0f00 	cmp.w	r8, #0
90020502:	dc67      	bgt.n	900205d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90020504:	9b06      	ldr	r3, [sp, #24]
90020506:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002050a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002050e:	9b08      	ldr	r3, [sp, #32]
90020510:	2b00      	cmp	r3, #0
90020512:	f340 80d7 	ble.w	900206c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90020516:	ee30 0a04 	vadd.f32	s0, s0, s8
9002051a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002051c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020520:	eeb0 6a62 	vmov.f32	s12, s5
90020524:	eec6 7a80 	vdiv.f32	s15, s13, s0
90020528:	ee31 1a05 	vadd.f32	s2, s2, s10
9002052c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020530:	ee16 4a10 	vmov	r4, s12
90020534:	eeb0 6a43 	vmov.f32	s12, s6
90020538:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9002053c:	ee16 6a10 	vmov	r6, s12
90020540:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020544:	ee61 7a27 	vmul.f32	s15, s2, s15
90020548:	ee77 2a62 	vsub.f32	s5, s14, s5
9002054c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020550:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020554:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020558:	ee12 2a90 	vmov	r2, s5
9002055c:	eef0 2a47 	vmov.f32	s5, s14
90020560:	fb92 f3f3 	sdiv	r3, r2, r3
90020564:	ee13 2a10 	vmov	r2, s6
90020568:	931f      	str	r3, [sp, #124]	@ 0x7c
9002056a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002056c:	eeb0 3a67 	vmov.f32	s6, s15
90020570:	fb92 f3f3 	sdiv	r3, r2, r3
90020574:	9320      	str	r3, [sp, #128]	@ 0x80
90020576:	9b08      	ldr	r3, [sp, #32]
90020578:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002057a:	3b01      	subs	r3, #1
9002057c:	9308      	str	r3, [sp, #32]
9002057e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90020580:	bf08      	it	eq
90020582:	4613      	moveq	r3, r2
90020584:	9306      	str	r3, [sp, #24]
90020586:	e6e4      	b.n	90020352 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90020588:	2900      	cmp	r1, #0
9002058a:	f43f af4e 	beq.w	9002042a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002058e:	f81a 3003 	ldrb.w	r3, [sl, r3]
90020592:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020596:	9309      	str	r3, [sp, #36]	@ 0x24
90020598:	e747      	b.n	9002042a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002059a:	f112 0a01 	adds.w	sl, r2, #1
9002059e:	d481      	bmi.n	900204a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900205a0:	4553      	cmp	r3, sl
900205a2:	f6ff af7f 	blt.w	900204a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900205a6:	f11c 0a01 	adds.w	sl, ip, #1
900205aa:	f53f af7b 	bmi.w	900204a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900205ae:	45d6      	cmp	lr, sl
900205b0:	f6ff af78 	blt.w	900204a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900205b4:	b21b      	sxth	r3, r3
900205b6:	e9cd 2c02 	strd	r2, ip, [sp, #8]
900205ba:	fa0f f28e 	sxth.w	r2, lr
900205be:	9300      	str	r3, [sp, #0]
900205c0:	463b      	mov	r3, r7
900205c2:	9201      	str	r2, [sp, #4]
900205c4:	9a07      	ldr	r2, [sp, #28]
900205c6:	e9cd 0104 	strd	r0, r1, [sp, #16]
900205ca:	4641      	mov	r1, r8
900205cc:	9810      	ldr	r0, [sp, #64]	@ 0x40
900205ce:	f7ff fe21 	bl	90020214 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900205d2:	e767      	b.n	900204a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900205d4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900205d6:	1422      	asrs	r2, r4, #16
900205d8:	1431      	asrs	r1, r6, #16
900205da:	9d07      	ldr	r5, [sp, #28]
900205dc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900205e0:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900205e4:	f3c6 3003 	ubfx	r0, r6, #12, #4
900205e8:	fb03 2101 	mla	r1, r3, r1, r2
900205ec:	9a07      	ldr	r2, [sp, #28]
900205ee:	440a      	add	r2, r1
900205f0:	5c69      	ldrb	r1, [r5, r1]
900205f2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
900205f6:	f1be 0f00 	cmp.w	lr, #0
900205fa:	d05c      	beq.n	900206b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900205fc:	f892 c001 	ldrb.w	ip, [r2, #1]
90020600:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90020604:	950d      	str	r5, [sp, #52]	@ 0x34
90020606:	b150      	cbz	r0, 9002061e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90020608:	eb02 0c03 	add.w	ip, r2, r3
9002060c:	5cd3      	ldrb	r3, [r2, r3]
9002060e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020612:	930a      	str	r3, [sp, #40]	@ 0x28
90020614:	f89c 3001 	ldrb.w	r3, [ip, #1]
90020618:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002061c:	930e      	str	r3, [sp, #56]	@ 0x38
9002061e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020620:	fb1e f200 	smulbb	r2, lr, r0
90020624:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90020626:	f108 38ff 	add.w	r8, r8, #4294967295
9002062a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002062e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90020632:	10d2      	asrs	r2, r2, #3
90020634:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
90020638:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002063c:	ea4c 0c03 	orr.w	ip, ip, r3
90020640:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90020644:	9311      	str	r3, [sp, #68]	@ 0x44
90020646:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020648:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002064a:	041b      	lsls	r3, r3, #16
9002064c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90020650:	ea43 030b 	orr.w	r3, r3, fp
90020654:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90020658:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002065c:	4353      	muls	r3, r2
9002065e:	fb05 3c0c 	mla	ip, r5, ip, r3
90020662:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90020666:	ea43 0b01 	orr.w	fp, r3, r1
9002066a:	f1c0 0110 	rsb	r1, r0, #16
9002066e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020670:	eba1 0e0e 	sub.w	lr, r1, lr
90020674:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90020678:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9002067c:	fb0e cc0b 	mla	ip, lr, fp, ip
90020680:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90020684:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
90020688:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002068c:	ea4b 0e0e 	orr.w	lr, fp, lr
90020690:	fb02 cc0e 	mla	ip, r2, lr, ip
90020694:	ea4f 535c 	mov.w	r3, ip, lsr #21
90020698:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002069c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900206a0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900206a4:	ea43 0c0c 	orr.w	ip, r3, ip
900206a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900206aa:	441c      	add	r4, r3
900206ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900206ae:	f82a cb02 	strh.w	ip, [sl], #2
900206b2:	441e      	add	r6, r3
900206b4:	e723      	b.n	900204fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900206b6:	2800      	cmp	r0, #0
900206b8:	d0b1      	beq.n	9002061e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900206ba:	5cd3      	ldrb	r3, [r2, r3]
900206bc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900206c0:	930a      	str	r3, [sp, #40]	@ 0x28
900206c2:	e7ac      	b.n	9002061e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900206c4:	b013      	add	sp, #76	@ 0x4c
900206c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900206ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900206ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900206ce:	880d      	ldrh	r5, [r1, #0]
900206d0:	b087      	sub	sp, #28
900206d2:	10ef      	asrs	r7, r5, #3
900206d4:	9103      	str	r1, [sp, #12]
900206d6:	ea4f 2a25 	mov.w	sl, r5, asr #8
900206da:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
900206de:	00ed      	lsls	r5, r5, #3
900206e0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900206e4:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
900206e8:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
900206ec:	b2ed      	uxtb	r5, r5
900206ee:	9701      	str	r7, [sp, #4]
900206f0:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
900206f4:	9502      	str	r5, [sp, #8]
900206f6:	9d01      	ldr	r5, [sp, #4]
900206f8:	9902      	ldr	r1, [sp, #8]
900206fa:	022d      	lsls	r5, r5, #8
900206fc:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90020700:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
90020704:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90020708:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
9002070c:	430d      	orrs	r5, r1
9002070e:	fb06 0709 	mla	r7, r6, r9, r0
90020712:	2e00      	cmp	r6, #0
90020714:	9505      	str	r5, [sp, #20]
90020716:	eb02 0c07 	add.w	ip, r2, r7
9002071a:	f2c0 80b6 	blt.w	9002088a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9002071e:	45b3      	cmp	fp, r6
90020720:	f340 80b3 	ble.w	9002088a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90020724:	2800      	cmp	r0, #0
90020726:	f2c0 80ae 	blt.w	90020886 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002072a:	4581      	cmp	r9, r0
9002072c:	f340 80ab 	ble.w	90020886 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90020730:	5dd7      	ldrb	r7, [r2, r7]
90020732:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020736:	441f      	add	r7, r3
90020738:	1c42      	adds	r2, r0, #1
9002073a:	f100 80a9 	bmi.w	90020890 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002073e:	4591      	cmp	r9, r2
90020740:	f340 80a6 	ble.w	90020890 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020744:	2c00      	cmp	r4, #0
90020746:	f000 80a3 	beq.w	90020890 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002074a:	f89c 5001 	ldrb.w	r5, [ip, #1]
9002074e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90020752:	441d      	add	r5, r3
90020754:	3601      	adds	r6, #1
90020756:	f100 809f 	bmi.w	90020898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002075a:	45b3      	cmp	fp, r6
9002075c:	f340 809c 	ble.w	90020898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020760:	f1be 0f00 	cmp.w	lr, #0
90020764:	f000 8098 	beq.w	90020898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020768:	2800      	cmp	r0, #0
9002076a:	f2c0 8093 	blt.w	90020894 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9002076e:	4581      	cmp	r9, r0
90020770:	f340 8090 	ble.w	90020894 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020774:	f81c 6009 	ldrb.w	r6, [ip, r9]
90020778:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9002077c:	441e      	add	r6, r3
9002077e:	3001      	adds	r0, #1
90020780:	f100 808d 	bmi.w	9002089e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020784:	4581      	cmp	r9, r0
90020786:	f340 808a 	ble.w	9002089e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002078a:	2c00      	cmp	r4, #0
9002078c:	f000 8087 	beq.w	9002089e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020790:	44e1      	add	r9, ip
90020792:	f899 2001 	ldrb.w	r2, [r9, #1]
90020796:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002079a:	4413      	add	r3, r2
9002079c:	b2a4      	uxth	r4, r4
9002079e:	f897 c002 	ldrb.w	ip, [r7, #2]
900207a2:	fa1f fe8e 	uxth.w	lr, lr
900207a6:	9901      	ldr	r1, [sp, #4]
900207a8:	fb04 fb0e 	mul.w	fp, r4, lr
900207ac:	0124      	lsls	r4, r4, #4
900207ae:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
900207b2:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
900207b6:	eba4 040b 	sub.w	r4, r4, fp
900207ba:	fa1f f08e 	uxth.w	r0, lr
900207be:	b2a2      	uxth	r2, r4
900207c0:	78ac      	ldrb	r4, [r5, #2]
900207c2:	eba9 0900 	sub.w	r9, r9, r0
900207c6:	fa1f fe88 	uxth.w	lr, r8
900207ca:	4354      	muls	r4, r2
900207cc:	ea6f 0808 	mvn.w	r8, r8
900207d0:	fa1f f989 	uxth.w	r9, r9
900207d4:	fa5f f888 	uxtb.w	r8, r8
900207d8:	fb09 440c 	mla	r4, r9, ip, r4
900207dc:	f896 c002 	ldrb.w	ip, [r6, #2]
900207e0:	fb1a fa08 	smulbb	sl, sl, r8
900207e4:	fb00 440c 	mla	r4, r0, ip, r4
900207e8:	f893 c002 	ldrb.w	ip, [r3, #2]
900207ec:	fb0b 4c0c 	mla	ip, fp, ip, r4
900207f0:	787c      	ldrb	r4, [r7, #1]
900207f2:	783f      	ldrb	r7, [r7, #0]
900207f4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900207f8:	fb0c ac0e 	mla	ip, ip, lr, sl
900207fc:	f895 a001 	ldrb.w	sl, [r5, #1]
90020800:	782d      	ldrb	r5, [r5, #0]
90020802:	fb02 fa0a 	mul.w	sl, r2, sl
90020806:	fa1f fc8c 	uxth.w	ip, ip
9002080a:	436a      	muls	r2, r5
9002080c:	7835      	ldrb	r5, [r6, #0]
9002080e:	fb09 aa04 	mla	sl, r9, r4, sl
90020812:	7874      	ldrb	r4, [r6, #1]
90020814:	fb09 2207 	mla	r2, r9, r7, r2
90020818:	fb00 aa04 	mla	sl, r0, r4, sl
9002081c:	785c      	ldrb	r4, [r3, #1]
9002081e:	fb00 2005 	mla	r0, r0, r5, r2
90020822:	781b      	ldrb	r3, [r3, #0]
90020824:	fb0b a404 	mla	r4, fp, r4, sl
90020828:	fb11 fa08 	smulbb	sl, r1, r8
9002082c:	fb0b 0b03 	mla	fp, fp, r3, r0
90020830:	9b02      	ldr	r3, [sp, #8]
90020832:	f3c4 2407 	ubfx	r4, r4, #8, #8
90020836:	fb13 f808 	smulbb	r8, r3, r8
9002083a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9002083e:	fb04 a40e 	mla	r4, r4, lr, sl
90020842:	f10c 0301 	add.w	r3, ip, #1
90020846:	fb0b 8e0e 	mla	lr, fp, lr, r8
9002084a:	b2a4      	uxth	r4, r4
9002084c:	fa1f fe8e 	uxth.w	lr, lr
90020850:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90020854:	f104 0a01 	add.w	sl, r4, #1
90020858:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
9002085c:	f10e 0c01 	add.w	ip, lr, #1
90020860:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90020864:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90020868:	0964      	lsrs	r4, r4, #5
9002086a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002086e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90020872:	ea4c 0c03 	orr.w	ip, ip, r3
90020876:	9b03      	ldr	r3, [sp, #12]
90020878:	ea4c 0c04 	orr.w	ip, ip, r4
9002087c:	f8a3 c000 	strh.w	ip, [r3]
90020880:	b007      	add	sp, #28
90020882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020886:	af05      	add	r7, sp, #20
90020888:	e756      	b.n	90020738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9002088a:	ad05      	add	r5, sp, #20
9002088c:	462f      	mov	r7, r5
9002088e:	e761      	b.n	90020754 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90020890:	ad05      	add	r5, sp, #20
90020892:	e75f      	b.n	90020754 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90020894:	ae05      	add	r6, sp, #20
90020896:	e772      	b.n	9002077e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90020898:	ab05      	add	r3, sp, #20
9002089a:	461e      	mov	r6, r3
9002089c:	e77e      	b.n	9002079c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
9002089e:	ab05      	add	r3, sp, #20
900208a0:	e77c      	b.n	9002079c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

900208a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900208a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900208a6:	b095      	sub	sp, #84	@ 0x54
900208a8:	9212      	str	r2, [sp, #72]	@ 0x48
900208aa:	9309      	str	r3, [sp, #36]	@ 0x24
900208ac:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900208ae:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
900208b2:	9013      	str	r0, [sp, #76]	@ 0x4c
900208b4:	930f      	str	r3, [sp, #60]	@ 0x3c
900208b6:	6850      	ldr	r0, [r2, #4]
900208b8:	910e      	str	r1, [sp, #56]	@ 0x38
900208ba:	6812      	ldr	r2, [r2, #0]
900208bc:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
900208c0:	fb00 1303 	mla	r3, r0, r3, r1
900208c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900208c8:	930a      	str	r3, [sp, #40]	@ 0x28
900208ca:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900208cc:	681b      	ldr	r3, [r3, #0]
900208ce:	930d      	str	r3, [sp, #52]	@ 0x34
900208d0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900208d2:	685c      	ldr	r4, [r3, #4]
900208d4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900208d6:	3404      	adds	r4, #4
900208d8:	43db      	mvns	r3, r3
900208da:	b2db      	uxtb	r3, r3
900208dc:	930b      	str	r3, [sp, #44]	@ 0x2c
900208de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900208e0:	2b00      	cmp	r3, #0
900208e2:	dc03      	bgt.n	900208ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900208e4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900208e6:	2b00      	cmp	r3, #0
900208e8:	f340 8255 	ble.w	90020d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900208ec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900208ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900208f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900208f6:	1e48      	subs	r0, r1, #1
900208f8:	1e55      	subs	r5, r2, #1
900208fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900208fc:	2b00      	cmp	r3, #0
900208fe:	f340 80f9 	ble.w	90020af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90020902:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90020904:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020906:	1436      	asrs	r6, r6, #16
90020908:	ea4f 4323 	mov.w	r3, r3, asr #16
9002090c:	d406      	bmi.n	9002091c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002090e:	4286      	cmp	r6, r0
90020910:	da04      	bge.n	9002091c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020912:	2b00      	cmp	r3, #0
90020914:	db02      	blt.n	9002091c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020916:	42ab      	cmp	r3, r5
90020918:	f2c0 80ed 	blt.w	90020af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
9002091c:	3601      	adds	r6, #1
9002091e:	f100 80da 	bmi.w	90020ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020922:	42b1      	cmp	r1, r6
90020924:	f2c0 80d7 	blt.w	90020ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020928:	3301      	adds	r3, #1
9002092a:	f100 80d4 	bmi.w	90020ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002092e:	429a      	cmp	r2, r3
90020930:	f2c0 80d1 	blt.w	90020ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020934:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020936:	9311      	str	r3, [sp, #68]	@ 0x44
90020938:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002093a:	930c      	str	r3, [sp, #48]	@ 0x30
9002093c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002093e:	2b00      	cmp	r3, #0
90020940:	f340 80fa 	ble.w	90020b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90020944:	9826      	ldr	r0, [sp, #152]	@ 0x98
90020946:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020948:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9002094a:	68c6      	ldr	r6, [r0, #12]
9002094c:	141d      	asrs	r5, r3, #16
9002094e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90020950:	f3c2 3103 	ubfx	r1, r2, #12, #4
90020954:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020956:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90020958:	1400      	asrs	r0, r0, #16
9002095a:	f3c3 3303 	ubfx	r3, r3, #12, #4
9002095e:	6892      	ldr	r2, [r2, #8]
90020960:	f100 813e 	bmi.w	90020be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020964:	1e57      	subs	r7, r2, #1
90020966:	42b8      	cmp	r0, r7
90020968:	f280 813a 	bge.w	90020be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002096c:	2d00      	cmp	r5, #0
9002096e:	f2c0 8137 	blt.w	90020be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020972:	1e77      	subs	r7, r6, #1
90020974:	42bd      	cmp	r5, r7
90020976:	f280 8133 	bge.w	90020be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002097a:	b212      	sxth	r2, r2
9002097c:	fb05 0002 	mla	r0, r5, r2, r0
90020980:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90020982:	f815 a000 	ldrb.w	sl, [r5, r0]
90020986:	182e      	adds	r6, r5, r0
90020988:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
9002098c:	eb04 050a 	add.w	r5, r4, sl
90020990:	2b00      	cmp	r3, #0
90020992:	f000 8117 	beq.w	90020bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90020996:	f896 c001 	ldrb.w	ip, [r6, #1]
9002099a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9002099e:	44a4      	add	ip, r4
900209a0:	2900      	cmp	r1, #0
900209a2:	f000 8117 	beq.w	90020bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
900209a6:	18b0      	adds	r0, r6, r2
900209a8:	5cb2      	ldrb	r2, [r6, r2]
900209aa:	7840      	ldrb	r0, [r0, #1]
900209ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900209b0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900209b4:	4422      	add	r2, r4
900209b6:	4420      	add	r0, r4
900209b8:	b29b      	uxth	r3, r3
900209ba:	f89c 7002 	ldrb.w	r7, [ip, #2]
900209be:	b289      	uxth	r1, r1
900209c0:	f895 b002 	ldrb.w	fp, [r5, #2]
900209c4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
900209c6:	fb03 f901 	mul.w	r9, r3, r1
900209ca:	011b      	lsls	r3, r3, #4
900209cc:	f8b6 e000 	ldrh.w	lr, [r6]
900209d0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900209d4:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
900209d8:	eba3 0309 	sub.w	r3, r3, r9
900209dc:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
900209e0:	b289      	uxth	r1, r1
900209e2:	f814 a00a 	ldrb.w	sl, [r4, sl]
900209e6:	b29b      	uxth	r3, r3
900209e8:	eba8 0801 	sub.w	r8, r8, r1
900209ec:	435f      	muls	r7, r3
900209ee:	fa1f f888 	uxth.w	r8, r8
900209f2:	9310      	str	r3, [sp, #64]	@ 0x40
900209f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900209f6:	fb08 770b 	mla	r7, r8, fp, r7
900209fa:	f892 b002 	ldrb.w	fp, [r2, #2]
900209fe:	fb01 770b 	mla	r7, r1, fp, r7
90020a02:	f890 b002 	ldrb.w	fp, [r0, #2]
90020a06:	fb09 770b 	mla	r7, r9, fp, r7
90020a0a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90020a0e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90020a12:	f3c7 2707 	ubfx	r7, r7, #8, #8
90020a16:	fb1b fb03 	smulbb	fp, fp, r3
90020a1a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020a1c:	fb07 b706 	mla	r7, r7, r6, fp
90020a20:	f895 b001 	ldrb.w	fp, [r5, #1]
90020a24:	f89c 5001 	ldrb.w	r5, [ip, #1]
90020a28:	f89c c000 	ldrb.w	ip, [ip]
90020a2c:	b2bf      	uxth	r7, r7
90020a2e:	435d      	muls	r5, r3
90020a30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020a32:	fb08 550b 	mla	r5, r8, fp, r5
90020a36:	f892 b001 	ldrb.w	fp, [r2, #1]
90020a3a:	fb01 550b 	mla	r5, r1, fp, r5
90020a3e:	f890 b001 	ldrb.w	fp, [r0, #1]
90020a42:	fb09 550b 	mla	r5, r9, fp, r5
90020a46:	ea4f 0bee 	mov.w	fp, lr, asr #3
90020a4a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020a4e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90020a52:	f3c5 2507 	ubfx	r5, r5, #8, #8
90020a56:	fa5f fe8e 	uxtb.w	lr, lr
90020a5a:	fb1b fb03 	smulbb	fp, fp, r3
90020a5e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020a60:	fb03 f30c 	mul.w	r3, r3, ip
90020a64:	f892 c000 	ldrb.w	ip, [r2]
90020a68:	fb05 b506 	mla	r5, r5, r6, fp
90020a6c:	fb08 330a 	mla	r3, r8, sl, r3
90020a70:	b2ad      	uxth	r5, r5
90020a72:	fb01 330c 	mla	r3, r1, ip, r3
90020a76:	f890 c000 	ldrb.w	ip, [r0]
90020a7a:	f105 0b01 	add.w	fp, r5, #1
90020a7e:	fb09 3c0c 	mla	ip, r9, ip, r3
90020a82:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020a84:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90020a88:	fb1e fe03 	smulbb	lr, lr, r3
90020a8c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90020a90:	1c7b      	adds	r3, r7, #1
90020a92:	096d      	lsrs	r5, r5, #5
90020a94:	fb0c e606 	mla	r6, ip, r6, lr
90020a98:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90020a9c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020aa0:	b2b6      	uxth	r6, r6
90020aa2:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
90020aa6:	1c77      	adds	r7, r6, #1
90020aa8:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90020aac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020ab0:	431f      	orrs	r7, r3
90020ab2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020ab4:	433d      	orrs	r5, r7
90020ab6:	801d      	strh	r5, [r3, #0]
90020ab8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020aba:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90020abc:	3302      	adds	r3, #2
90020abe:	930c      	str	r3, [sp, #48]	@ 0x30
90020ac0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020ac2:	4413      	add	r3, r2
90020ac4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90020ac6:	931f      	str	r3, [sp, #124]	@ 0x7c
90020ac8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020aca:	4413      	add	r3, r2
90020acc:	9320      	str	r3, [sp, #128]	@ 0x80
90020ace:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90020ad0:	3b01      	subs	r3, #1
90020ad2:	9311      	str	r3, [sp, #68]	@ 0x44
90020ad4:	e732      	b.n	9002093c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90020ad6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020ad8:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90020ada:	4433      	add	r3, r6
90020adc:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90020ade:	931f      	str	r3, [sp, #124]	@ 0x7c
90020ae0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020ae2:	4433      	add	r3, r6
90020ae4:	9320      	str	r3, [sp, #128]	@ 0x80
90020ae6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020ae8:	3b01      	subs	r3, #1
90020aea:	9309      	str	r3, [sp, #36]	@ 0x24
90020aec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020aee:	3302      	adds	r3, #2
90020af0:	930a      	str	r3, [sp, #40]	@ 0x28
90020af2:	e702      	b.n	900208fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90020af4:	d027      	beq.n	90020b46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90020af6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020af8:	9821      	ldr	r0, [sp, #132]	@ 0x84
90020afa:	3b01      	subs	r3, #1
90020afc:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90020afe:	fb00 5003 	mla	r0, r0, r3, r5
90020b02:	1400      	asrs	r0, r0, #16
90020b04:	f53f af16 	bmi.w	90020934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020b08:	3901      	subs	r1, #1
90020b0a:	4288      	cmp	r0, r1
90020b0c:	f6bf af12 	bge.w	90020934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020b10:	9922      	ldr	r1, [sp, #136]	@ 0x88
90020b12:	9820      	ldr	r0, [sp, #128]	@ 0x80
90020b14:	fb01 0303 	mla	r3, r1, r3, r0
90020b18:	141b      	asrs	r3, r3, #16
90020b1a:	f53f af0b 	bmi.w	90020934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020b1e:	3a01      	subs	r2, #1
90020b20:	4293      	cmp	r3, r2
90020b22:	f6bf af07 	bge.w	90020934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020b26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020b28:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90020b2c:	9311      	str	r3, [sp, #68]	@ 0x44
90020b2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020b30:	930c      	str	r3, [sp, #48]	@ 0x30
90020b32:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90020b34:	2b00      	cmp	r3, #0
90020b36:	dc70      	bgt.n	90020c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90020b38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020b3a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020b3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90020b40:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020b44:	930a      	str	r3, [sp, #40]	@ 0x28
90020b46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020b48:	2b00      	cmp	r3, #0
90020b4a:	f340 8124 	ble.w	90020d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90020b4e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90020b52:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90020b54:	ee30 0a04 	vadd.f32	s0, s0, s8
90020b58:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020b5c:	eef0 6a62 	vmov.f32	s13, s5
90020b60:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020b64:	ee31 1a05 	vadd.f32	s2, s2, s10
90020b68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020b6c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90020b70:	eef0 6a43 	vmov.f32	s13, s6
90020b74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020b78:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90020b7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020b80:	ee61 7a27 	vmul.f32	s15, s2, s15
90020b84:	ee77 2a62 	vsub.f32	s5, s14, s5
90020b88:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020b8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020b90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020b94:	ee12 2a90 	vmov	r2, s5
90020b98:	eef0 2a47 	vmov.f32	s5, s14
90020b9c:	fb92 f3f3 	sdiv	r3, r2, r3
90020ba0:	ee13 2a10 	vmov	r2, s6
90020ba4:	9321      	str	r3, [sp, #132]	@ 0x84
90020ba6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90020ba8:	eeb0 3a67 	vmov.f32	s6, s15
90020bac:	fb92 f3f3 	sdiv	r3, r2, r3
90020bb0:	9322      	str	r3, [sp, #136]	@ 0x88
90020bb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020bb4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90020bb6:	3b01      	subs	r3, #1
90020bb8:	930e      	str	r3, [sp, #56]	@ 0x38
90020bba:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90020bbc:	bf08      	it	eq
90020bbe:	4613      	moveq	r3, r2
90020bc0:	9309      	str	r3, [sp, #36]	@ 0x24
90020bc2:	e68c      	b.n	900208de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90020bc4:	b149      	cbz	r1, 90020bda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90020bc6:	5cb2      	ldrb	r2, [r6, r2]
90020bc8:	4628      	mov	r0, r5
90020bca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020bce:	4422      	add	r2, r4
90020bd0:	46ac      	mov	ip, r5
90020bd2:	e6f1      	b.n	900209b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020bd4:	4628      	mov	r0, r5
90020bd6:	462a      	mov	r2, r5
90020bd8:	e6ee      	b.n	900209b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020bda:	4628      	mov	r0, r5
90020bdc:	462a      	mov	r2, r5
90020bde:	e7f7      	b.n	90020bd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90020be0:	1c47      	adds	r7, r0, #1
90020be2:	f53f af69 	bmi.w	90020ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020be6:	42ba      	cmp	r2, r7
90020be8:	f6ff af66 	blt.w	90020ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020bec:	1c6f      	adds	r7, r5, #1
90020bee:	f53f af63 	bmi.w	90020ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020bf2:	42be      	cmp	r6, r7
90020bf4:	f6ff af60 	blt.w	90020ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020bf8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90020bfa:	b236      	sxth	r6, r6
90020bfc:	b212      	sxth	r2, r2
90020bfe:	9002      	str	r0, [sp, #8]
90020c00:	9601      	str	r6, [sp, #4]
90020c02:	9200      	str	r2, [sp, #0]
90020c04:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90020c06:	e9cd 1705 	strd	r1, r7, [sp, #20]
90020c0a:	e9cd 5303 	strd	r5, r3, [sp, #12]
90020c0e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90020c12:	4623      	mov	r3, r4
90020c14:	f7ff fd59 	bl	900206ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90020c18:	e74e      	b.n	90020ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020c1a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90020c1c:	9820      	ldr	r0, [sp, #128]	@ 0x80
90020c1e:	f3c2 3103 	ubfx	r1, r2, #12, #4
90020c22:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90020c24:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90020c26:	1400      	asrs	r0, r0, #16
90020c28:	142d      	asrs	r5, r5, #16
90020c2a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020c2c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90020c30:	f3c3 3303 	ubfx	r3, r3, #12, #4
90020c34:	fb02 5000 	mla	r0, r2, r0, r5
90020c38:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90020c3a:	f815 9000 	ldrb.w	r9, [r5, r0]
90020c3e:	182e      	adds	r6, r5, r0
90020c40:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90020c44:	eb04 0509 	add.w	r5, r4, r9
90020c48:	2b00      	cmp	r3, #0
90020c4a:	f000 8096 	beq.w	90020d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90020c4e:	7877      	ldrb	r7, [r6, #1]
90020c50:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020c54:	4427      	add	r7, r4
90020c56:	2900      	cmp	r1, #0
90020c58:	f000 8097 	beq.w	90020d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90020c5c:	18b0      	adds	r0, r6, r2
90020c5e:	5cb2      	ldrb	r2, [r6, r2]
90020c60:	7840      	ldrb	r0, [r0, #1]
90020c62:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020c66:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020c6a:	4422      	add	r2, r4
90020c6c:	4420      	add	r0, r4
90020c6e:	b29b      	uxth	r3, r3
90020c70:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90020c72:	b289      	uxth	r1, r1
90020c74:	f895 b002 	ldrb.w	fp, [r5, #2]
90020c78:	f8b6 c000 	ldrh.w	ip, [r6]
90020c7c:	fb03 f801 	mul.w	r8, r3, r1
90020c80:	011b      	lsls	r3, r3, #4
90020c82:	78be      	ldrb	r6, [r7, #2]
90020c84:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90020c88:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90020c8c:	eba3 0308 	sub.w	r3, r3, r8
90020c90:	f814 9009 	ldrb.w	r9, [r4, r9]
90020c94:	b289      	uxth	r1, r1
90020c96:	b29b      	uxth	r3, r3
90020c98:	ebae 0e01 	sub.w	lr, lr, r1
90020c9c:	435e      	muls	r6, r3
90020c9e:	fa1f fe8e 	uxth.w	lr, lr
90020ca2:	9310      	str	r3, [sp, #64]	@ 0x40
90020ca4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020ca6:	fb0e 660b 	mla	r6, lr, fp, r6
90020caa:	f892 b002 	ldrb.w	fp, [r2, #2]
90020cae:	fb01 660b 	mla	r6, r1, fp, r6
90020cb2:	f890 b002 	ldrb.w	fp, [r0, #2]
90020cb6:	fb08 660b 	mla	r6, r8, fp, r6
90020cba:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90020cbe:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90020cc2:	f3c6 2607 	ubfx	r6, r6, #8, #8
90020cc6:	fb1b fb03 	smulbb	fp, fp, r3
90020cca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020ccc:	fb06 b60a 	mla	r6, r6, sl, fp
90020cd0:	f895 b001 	ldrb.w	fp, [r5, #1]
90020cd4:	787d      	ldrb	r5, [r7, #1]
90020cd6:	783f      	ldrb	r7, [r7, #0]
90020cd8:	b2b6      	uxth	r6, r6
90020cda:	435d      	muls	r5, r3
90020cdc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020cde:	fb0e 550b 	mla	r5, lr, fp, r5
90020ce2:	f892 b001 	ldrb.w	fp, [r2, #1]
90020ce6:	fb01 550b 	mla	r5, r1, fp, r5
90020cea:	f890 b001 	ldrb.w	fp, [r0, #1]
90020cee:	fb08 550b 	mla	r5, r8, fp, r5
90020cf2:	ea4f 0bec 	mov.w	fp, ip, asr #3
90020cf6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020cfa:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90020cfe:	f3c5 2507 	ubfx	r5, r5, #8, #8
90020d02:	fa5f fc8c 	uxtb.w	ip, ip
90020d06:	fb1b fb03 	smulbb	fp, fp, r3
90020d0a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020d0c:	437b      	muls	r3, r7
90020d0e:	7817      	ldrb	r7, [r2, #0]
90020d10:	fb05 b50a 	mla	r5, r5, sl, fp
90020d14:	fb0e 3309 	mla	r3, lr, r9, r3
90020d18:	b2ad      	uxth	r5, r5
90020d1a:	fb01 3307 	mla	r3, r1, r7, r3
90020d1e:	7807      	ldrb	r7, [r0, #0]
90020d20:	f105 0b01 	add.w	fp, r5, #1
90020d24:	fb08 3707 	mla	r7, r8, r7, r3
90020d28:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020d2a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90020d2e:	fb1c fc03 	smulbb	ip, ip, r3
90020d32:	f3c7 2707 	ubfx	r7, r7, #8, #8
90020d36:	1c73      	adds	r3, r6, #1
90020d38:	096d      	lsrs	r5, r5, #5
90020d3a:	fb07 c70a 	mla	r7, r7, sl, ip
90020d3e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90020d42:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020d46:	b2bf      	uxth	r7, r7
90020d48:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020d4a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90020d4e:	1c7a      	adds	r2, r7, #1
90020d50:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90020d54:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020d58:	4316      	orrs	r6, r2
90020d5a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90020d5c:	432e      	orrs	r6, r5
90020d5e:	f823 6b02 	strh.w	r6, [r3], #2
90020d62:	930c      	str	r3, [sp, #48]	@ 0x30
90020d64:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90020d66:	4413      	add	r3, r2
90020d68:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90020d6a:	931f      	str	r3, [sp, #124]	@ 0x7c
90020d6c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020d6e:	4413      	add	r3, r2
90020d70:	9320      	str	r3, [sp, #128]	@ 0x80
90020d72:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90020d74:	3b01      	subs	r3, #1
90020d76:	9311      	str	r3, [sp, #68]	@ 0x44
90020d78:	e6db      	b.n	90020b32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90020d7a:	b149      	cbz	r1, 90020d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90020d7c:	5cb2      	ldrb	r2, [r6, r2]
90020d7e:	4628      	mov	r0, r5
90020d80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020d84:	4422      	add	r2, r4
90020d86:	462f      	mov	r7, r5
90020d88:	e771      	b.n	90020c6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90020d8a:	4628      	mov	r0, r5
90020d8c:	462a      	mov	r2, r5
90020d8e:	e76e      	b.n	90020c6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90020d90:	4628      	mov	r0, r5
90020d92:	462a      	mov	r2, r5
90020d94:	e7f7      	b.n	90020d86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90020d96:	b015      	add	sp, #84	@ 0x54
90020d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020d9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90020d9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020da0:	880f      	ldrh	r7, [r1, #0]
90020da2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
90020da6:	023c      	lsls	r4, r7, #8
90020da8:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90020dac:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90020db0:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90020db4:	017c      	lsls	r4, r7, #5
90020db6:	00ff      	lsls	r7, r7, #3
90020db8:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90020dbc:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90020dc0:	b2ff      	uxtb	r7, r7
90020dc2:	ea4b 0404 	orr.w	r4, fp, r4
90020dc6:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90020dca:	4327      	orrs	r7, r4
90020dcc:	fb05 ca0e 	mla	sl, r5, lr, ip
90020dd0:	2d00      	cmp	r5, #0
90020dd2:	9701      	str	r7, [sp, #4]
90020dd4:	eb02 080a 	add.w	r8, r2, sl
90020dd8:	db7e      	blt.n	90020ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90020dda:	45a9      	cmp	r9, r5
90020ddc:	dd7c      	ble.n	90020ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90020dde:	f1bc 0f00 	cmp.w	ip, #0
90020de2:	db77      	blt.n	90020ed4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90020de4:	45e6      	cmp	lr, ip
90020de6:	dd75      	ble.n	90020ed4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90020de8:	f812 700a 	ldrb.w	r7, [r2, sl]
90020dec:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020df0:	441f      	add	r7, r3
90020df2:	f11c 0201 	adds.w	r2, ip, #1
90020df6:	d472      	bmi.n	90020ede <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020df8:	4596      	cmp	lr, r2
90020dfa:	dd70      	ble.n	90020ede <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020dfc:	2800      	cmp	r0, #0
90020dfe:	d06e      	beq.n	90020ede <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020e00:	f898 4001 	ldrb.w	r4, [r8, #1]
90020e04:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90020e08:	441c      	add	r4, r3
90020e0a:	3501      	adds	r5, #1
90020e0c:	d46b      	bmi.n	90020ee6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90020e0e:	45a9      	cmp	r9, r5
90020e10:	dd69      	ble.n	90020ee6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90020e12:	2e00      	cmp	r6, #0
90020e14:	d067      	beq.n	90020ee6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90020e16:	f1bc 0f00 	cmp.w	ip, #0
90020e1a:	db62      	blt.n	90020ee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90020e1c:	45e6      	cmp	lr, ip
90020e1e:	dd60      	ble.n	90020ee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90020e20:	f818 500e 	ldrb.w	r5, [r8, lr]
90020e24:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90020e28:	441d      	add	r5, r3
90020e2a:	f11c 0201 	adds.w	r2, ip, #1
90020e2e:	d45d      	bmi.n	90020eec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90020e30:	4596      	cmp	lr, r2
90020e32:	dd5b      	ble.n	90020eec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90020e34:	2800      	cmp	r0, #0
90020e36:	d059      	beq.n	90020eec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90020e38:	44c6      	add	lr, r8
90020e3a:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020e3e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020e42:	4413      	add	r3, r2
90020e44:	b280      	uxth	r0, r0
90020e46:	f897 e002 	ldrb.w	lr, [r7, #2]
90020e4a:	b2b2      	uxth	r2, r6
90020e4c:	f897 9000 	ldrb.w	r9, [r7]
90020e50:	787f      	ldrb	r7, [r7, #1]
90020e52:	fb00 f602 	mul.w	r6, r0, r2
90020e56:	0100      	lsls	r0, r0, #4
90020e58:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90020e5c:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90020e60:	1b80      	subs	r0, r0, r6
90020e62:	fa1f fc82 	uxth.w	ip, r2
90020e66:	b282      	uxth	r2, r0
90020e68:	78a0      	ldrb	r0, [r4, #2]
90020e6a:	eba8 080c 	sub.w	r8, r8, ip
90020e6e:	4350      	muls	r0, r2
90020e70:	fa1f f888 	uxth.w	r8, r8
90020e74:	fb08 0e0e 	mla	lr, r8, lr, r0
90020e78:	78a8      	ldrb	r0, [r5, #2]
90020e7a:	fb0c e000 	mla	r0, ip, r0, lr
90020e7e:	f893 e002 	ldrb.w	lr, [r3, #2]
90020e82:	fb06 0e0e 	mla	lr, r6, lr, r0
90020e86:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90020e8a:	f894 e000 	ldrb.w	lr, [r4]
90020e8e:	fb02 fe0e 	mul.w	lr, r2, lr
90020e92:	fb08 e909 	mla	r9, r8, r9, lr
90020e96:	f895 e000 	ldrb.w	lr, [r5]
90020e9a:	fb0c 990e 	mla	r9, ip, lr, r9
90020e9e:	f893 e000 	ldrb.w	lr, [r3]
90020ea2:	785b      	ldrb	r3, [r3, #1]
90020ea4:	fb06 9e0e 	mla	lr, r6, lr, r9
90020ea8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020eac:	ea4e 0e00 	orr.w	lr, lr, r0
90020eb0:	7860      	ldrb	r0, [r4, #1]
90020eb2:	4350      	muls	r0, r2
90020eb4:	786a      	ldrb	r2, [r5, #1]
90020eb6:	fb08 0007 	mla	r0, r8, r7, r0
90020eba:	fb0c 0202 	mla	r2, ip, r2, r0
90020ebe:	fb06 2303 	mla	r3, r6, r3, r2
90020ec2:	095b      	lsrs	r3, r3, #5
90020ec4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020ec8:	ea4e 0303 	orr.w	r3, lr, r3
90020ecc:	800b      	strh	r3, [r1, #0]
90020ece:	b003      	add	sp, #12
90020ed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020ed4:	af01      	add	r7, sp, #4
90020ed6:	e78c      	b.n	90020df2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90020ed8:	ac01      	add	r4, sp, #4
90020eda:	4627      	mov	r7, r4
90020edc:	e795      	b.n	90020e0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90020ede:	ac01      	add	r4, sp, #4
90020ee0:	e793      	b.n	90020e0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90020ee2:	ad01      	add	r5, sp, #4
90020ee4:	e7a1      	b.n	90020e2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90020ee6:	ab01      	add	r3, sp, #4
90020ee8:	461d      	mov	r5, r3
90020eea:	e7ab      	b.n	90020e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90020eec:	ab01      	add	r3, sp, #4
90020eee:	e7a9      	b.n	90020e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90020ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020ef4:	b08f      	sub	sp, #60	@ 0x3c
90020ef6:	920c      	str	r2, [sp, #48]	@ 0x30
90020ef8:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
90020efa:	900d      	str	r0, [sp, #52]	@ 0x34
90020efc:	910a      	str	r1, [sp, #40]	@ 0x28
90020efe:	6850      	ldr	r0, [r2, #4]
90020f00:	9306      	str	r3, [sp, #24]
90020f02:	6812      	ldr	r2, [r2, #0]
90020f04:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
90020f08:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
90020f0c:	fb00 1303 	mla	r3, r0, r3, r1
90020f10:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020f14:	9307      	str	r3, [sp, #28]
90020f16:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020f18:	681b      	ldr	r3, [r3, #0]
90020f1a:	9308      	str	r3, [sp, #32]
90020f1c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020f1e:	685c      	ldr	r4, [r3, #4]
90020f20:	3404      	adds	r4, #4
90020f22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020f24:	2b00      	cmp	r3, #0
90020f26:	dc03      	bgt.n	90020f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90020f28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020f2a:	2b00      	cmp	r3, #0
90020f2c:	f340 81d5 	ble.w	900212da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90020f30:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90020f32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020f36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020f3a:	1e48      	subs	r0, r1, #1
90020f3c:	1e56      	subs	r6, r2, #1
90020f3e:	9b06      	ldr	r3, [sp, #24]
90020f40:	2b00      	cmp	r3, #0
90020f42:	f340 80b6 	ble.w	900210b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90020f46:	ea5f 472b 	movs.w	r7, fp, asr #16
90020f4a:	ea4f 4325 	mov.w	r3, r5, asr #16
90020f4e:	d406      	bmi.n	90020f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90020f50:	4287      	cmp	r7, r0
90020f52:	da04      	bge.n	90020f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90020f54:	2b00      	cmp	r3, #0
90020f56:	db02      	blt.n	90020f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90020f58:	42b3      	cmp	r3, r6
90020f5a:	f2c0 80ab 	blt.w	900210b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90020f5e:	3701      	adds	r7, #1
90020f60:	f100 809c 	bmi.w	9002109c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020f64:	42b9      	cmp	r1, r7
90020f66:	f2c0 8099 	blt.w	9002109c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020f6a:	3301      	adds	r3, #1
90020f6c:	f100 8096 	bmi.w	9002109c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020f70:	429a      	cmp	r2, r3
90020f72:	f2c0 8093 	blt.w	9002109c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020f76:	9b06      	ldr	r3, [sp, #24]
90020f78:	930b      	str	r3, [sp, #44]	@ 0x2c
90020f7a:	9b07      	ldr	r3, [sp, #28]
90020f7c:	9309      	str	r3, [sp, #36]	@ 0x24
90020f7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020f80:	2b00      	cmp	r3, #0
90020f82:	f340 80b4 	ble.w	900210ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90020f86:	9820      	ldr	r0, [sp, #128]	@ 0x80
90020f88:	142e      	asrs	r6, r5, #16
90020f8a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90020f8c:	f3cb 3303 	ubfx	r3, fp, #12, #4
90020f90:	68c7      	ldr	r7, [r0, #12]
90020f92:	ea5f 402b 	movs.w	r0, fp, asr #16
90020f96:	f3c5 3103 	ubfx	r1, r5, #12, #4
90020f9a:	6892      	ldr	r2, [r2, #8]
90020f9c:	f100 80fb 	bmi.w	90021196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020fa0:	f102 3cff 	add.w	ip, r2, #4294967295
90020fa4:	4560      	cmp	r0, ip
90020fa6:	f280 80f6 	bge.w	90021196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020faa:	2e00      	cmp	r6, #0
90020fac:	f2c0 80f3 	blt.w	90021196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020fb0:	f107 3cff 	add.w	ip, r7, #4294967295
90020fb4:	4566      	cmp	r6, ip
90020fb6:	f280 80ee 	bge.w	90021196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020fba:	b212      	sxth	r2, r2
90020fbc:	fb06 0002 	mla	r0, r6, r2, r0
90020fc0:	9e08      	ldr	r6, [sp, #32]
90020fc2:	1837      	adds	r7, r6, r0
90020fc4:	5c30      	ldrb	r0, [r6, r0]
90020fc6:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90020fca:	eb04 0c08 	add.w	ip, r4, r8
90020fce:	2b00      	cmp	r3, #0
90020fd0:	f000 80d3 	beq.w	9002117a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90020fd4:	787e      	ldrb	r6, [r7, #1]
90020fd6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020fda:	4426      	add	r6, r4
90020fdc:	2900      	cmp	r1, #0
90020fde:	f000 80d4 	beq.w	9002118a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90020fe2:	18b8      	adds	r0, r7, r2
90020fe4:	5cba      	ldrb	r2, [r7, r2]
90020fe6:	7840      	ldrb	r0, [r0, #1]
90020fe8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020fec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020ff0:	4422      	add	r2, r4
90020ff2:	4420      	add	r0, r4
90020ff4:	b29b      	uxth	r3, r3
90020ff6:	78b7      	ldrb	r7, [r6, #2]
90020ff8:	b289      	uxth	r1, r1
90020ffa:	f89c a002 	ldrb.w	sl, [ip, #2]
90020ffe:	f89c c001 	ldrb.w	ip, [ip, #1]
90021002:	fb03 f901 	mul.w	r9, r3, r1
90021006:	011b      	lsls	r3, r3, #4
90021008:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002100c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90021010:	eba3 0309 	sub.w	r3, r3, r9
90021014:	b289      	uxth	r1, r1
90021016:	b29b      	uxth	r3, r3
90021018:	ebae 0e01 	sub.w	lr, lr, r1
9002101c:	435f      	muls	r7, r3
9002101e:	fa1f fe8e 	uxth.w	lr, lr
90021022:	fb0e 770a 	mla	r7, lr, sl, r7
90021026:	f892 a002 	ldrb.w	sl, [r2, #2]
9002102a:	fb01 770a 	mla	r7, r1, sl, r7
9002102e:	f890 a002 	ldrb.w	sl, [r0, #2]
90021032:	fb09 7a0a 	mla	sl, r9, sl, r7
90021036:	f814 7008 	ldrb.w	r7, [r4, r8]
9002103a:	f896 8000 	ldrb.w	r8, [r6]
9002103e:	7876      	ldrb	r6, [r6, #1]
90021040:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90021044:	fb03 f808 	mul.w	r8, r3, r8
90021048:	4373      	muls	r3, r6
9002104a:	fb0e 8807 	mla	r8, lr, r7, r8
9002104e:	7817      	ldrb	r7, [r2, #0]
90021050:	fb0e 330c 	mla	r3, lr, ip, r3
90021054:	fb01 8807 	mla	r8, r1, r7, r8
90021058:	7807      	ldrb	r7, [r0, #0]
9002105a:	fb09 8707 	mla	r7, r9, r7, r8
9002105e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021062:	ea47 070a 	orr.w	r7, r7, sl
90021066:	f892 a001 	ldrb.w	sl, [r2, #1]
9002106a:	fb01 310a 	mla	r1, r1, sl, r3
9002106e:	f890 a001 	ldrb.w	sl, [r0, #1]
90021072:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021074:	fb09 1a0a 	mla	sl, r9, sl, r1
90021078:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9002107c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90021080:	ea47 070a 	orr.w	r7, r7, sl
90021084:	801f      	strh	r7, [r3, #0]
90021086:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021088:	3302      	adds	r3, #2
9002108a:	9309      	str	r3, [sp, #36]	@ 0x24
9002108c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002108e:	449b      	add	fp, r3
90021090:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021092:	441d      	add	r5, r3
90021094:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021096:	3b01      	subs	r3, #1
90021098:	930b      	str	r3, [sp, #44]	@ 0x2c
9002109a:	e770      	b.n	90020f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002109c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002109e:	449b      	add	fp, r3
900210a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900210a2:	441d      	add	r5, r3
900210a4:	9b06      	ldr	r3, [sp, #24]
900210a6:	3b01      	subs	r3, #1
900210a8:	9306      	str	r3, [sp, #24]
900210aa:	9b07      	ldr	r3, [sp, #28]
900210ac:	3302      	adds	r3, #2
900210ae:	9307      	str	r3, [sp, #28]
900210b0:	e745      	b.n	90020f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
900210b2:	d023      	beq.n	900210fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900210b4:	9b06      	ldr	r3, [sp, #24]
900210b6:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900210b8:	3b01      	subs	r3, #1
900210ba:	fb00 b003 	mla	r0, r0, r3, fp
900210be:	1400      	asrs	r0, r0, #16
900210c0:	f53f af59 	bmi.w	90020f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900210c4:	3901      	subs	r1, #1
900210c6:	4288      	cmp	r0, r1
900210c8:	f6bf af55 	bge.w	90020f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900210cc:	991c      	ldr	r1, [sp, #112]	@ 0x70
900210ce:	fb01 5303 	mla	r3, r1, r3, r5
900210d2:	141b      	asrs	r3, r3, #16
900210d4:	f53f af4f 	bmi.w	90020f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900210d8:	3a01      	subs	r2, #1
900210da:	4293      	cmp	r3, r2
900210dc:	f6bf af4b 	bge.w	90020f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900210e0:	9b06      	ldr	r3, [sp, #24]
900210e2:	9309      	str	r3, [sp, #36]	@ 0x24
900210e4:	9b07      	ldr	r3, [sp, #28]
900210e6:	930b      	str	r3, [sp, #44]	@ 0x2c
900210e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900210ea:	2b00      	cmp	r3, #0
900210ec:	dc70      	bgt.n	900211d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
900210ee:	9b06      	ldr	r3, [sp, #24]
900210f0:	9a07      	ldr	r2, [sp, #28]
900210f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900210f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900210fa:	9307      	str	r3, [sp, #28]
900210fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900210fe:	2b00      	cmp	r3, #0
90021100:	f340 80eb 	ble.w	900212da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90021104:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021108:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002110a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002110e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021112:	eef0 6a62 	vmov.f32	s13, s5
90021116:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002111a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002111e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021122:	ee16 ba90 	vmov	fp, s13
90021126:	eef0 6a43 	vmov.f32	s13, s6
9002112a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002112e:	ee16 5a90 	vmov	r5, s13
90021132:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021136:	ee61 7a27 	vmul.f32	s15, s2, s15
9002113a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002113e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021142:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021146:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002114a:	ee12 2a90 	vmov	r2, s5
9002114e:	eef0 2a47 	vmov.f32	s5, s14
90021152:	fb92 f3f3 	sdiv	r3, r2, r3
90021156:	ee13 2a10 	vmov	r2, s6
9002115a:	931b      	str	r3, [sp, #108]	@ 0x6c
9002115c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002115e:	eeb0 3a67 	vmov.f32	s6, s15
90021162:	fb92 f3f3 	sdiv	r3, r2, r3
90021166:	931c      	str	r3, [sp, #112]	@ 0x70
90021168:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002116a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002116c:	3b01      	subs	r3, #1
9002116e:	930a      	str	r3, [sp, #40]	@ 0x28
90021170:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90021172:	bf08      	it	eq
90021174:	4613      	moveq	r3, r2
90021176:	9306      	str	r3, [sp, #24]
90021178:	e6d3      	b.n	90020f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9002117a:	b149      	cbz	r1, 90021190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
9002117c:	5cba      	ldrb	r2, [r7, r2]
9002117e:	4660      	mov	r0, ip
90021180:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021184:	4422      	add	r2, r4
90021186:	4666      	mov	r6, ip
90021188:	e734      	b.n	90020ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9002118a:	4660      	mov	r0, ip
9002118c:	4662      	mov	r2, ip
9002118e:	e731      	b.n	90020ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90021190:	4660      	mov	r0, ip
90021192:	4662      	mov	r2, ip
90021194:	e7f7      	b.n	90021186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90021196:	f110 0c01 	adds.w	ip, r0, #1
9002119a:	f53f af74 	bmi.w	90021086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002119e:	4562      	cmp	r2, ip
900211a0:	f6ff af71 	blt.w	90021086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900211a4:	f116 0c01 	adds.w	ip, r6, #1
900211a8:	f53f af6d 	bmi.w	90021086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900211ac:	4567      	cmp	r7, ip
900211ae:	f6ff af6a 	blt.w	90021086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900211b2:	b23f      	sxth	r7, r7
900211b4:	b212      	sxth	r2, r2
900211b6:	9701      	str	r7, [sp, #4]
900211b8:	9200      	str	r2, [sp, #0]
900211ba:	e9cd 3104 	strd	r3, r1, [sp, #16]
900211be:	e9cd 0602 	strd	r0, r6, [sp, #8]
900211c2:	4623      	mov	r3, r4
900211c4:	980d      	ldr	r0, [sp, #52]	@ 0x34
900211c6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900211ca:	f7ff fde7 	bl	90020d9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900211ce:	e75a      	b.n	90021086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900211d0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900211d2:	ea4f 462b 	mov.w	r6, fp, asr #16
900211d6:	1428      	asrs	r0, r5, #16
900211d8:	f3cb 3303 	ubfx	r3, fp, #12, #4
900211dc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900211e0:	f3c5 3103 	ubfx	r1, r5, #12, #4
900211e4:	fb02 6000 	mla	r0, r2, r0, r6
900211e8:	9e08      	ldr	r6, [sp, #32]
900211ea:	f816 8000 	ldrb.w	r8, [r6, r0]
900211ee:	1837      	adds	r7, r6, r0
900211f0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900211f4:	eb04 0c08 	add.w	ip, r4, r8
900211f8:	2b00      	cmp	r3, #0
900211fa:	d060      	beq.n	900212be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900211fc:	787e      	ldrb	r6, [r7, #1]
900211fe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90021202:	4426      	add	r6, r4
90021204:	2900      	cmp	r1, #0
90021206:	d062      	beq.n	900212ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90021208:	18b8      	adds	r0, r7, r2
9002120a:	5cba      	ldrb	r2, [r7, r2]
9002120c:	7840      	ldrb	r0, [r0, #1]
9002120e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021212:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021216:	4422      	add	r2, r4
90021218:	4420      	add	r0, r4
9002121a:	b29b      	uxth	r3, r3
9002121c:	78b7      	ldrb	r7, [r6, #2]
9002121e:	b289      	uxth	r1, r1
90021220:	f89c a002 	ldrb.w	sl, [ip, #2]
90021224:	f89c c001 	ldrb.w	ip, [ip, #1]
90021228:	fb03 f901 	mul.w	r9, r3, r1
9002122c:	011b      	lsls	r3, r3, #4
9002122e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021232:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90021236:	eba3 0309 	sub.w	r3, r3, r9
9002123a:	b289      	uxth	r1, r1
9002123c:	b29b      	uxth	r3, r3
9002123e:	ebae 0e01 	sub.w	lr, lr, r1
90021242:	435f      	muls	r7, r3
90021244:	fa1f fe8e 	uxth.w	lr, lr
90021248:	fb0e 770a 	mla	r7, lr, sl, r7
9002124c:	f892 a002 	ldrb.w	sl, [r2, #2]
90021250:	fb01 770a 	mla	r7, r1, sl, r7
90021254:	f890 a002 	ldrb.w	sl, [r0, #2]
90021258:	fb09 7a0a 	mla	sl, r9, sl, r7
9002125c:	f814 7008 	ldrb.w	r7, [r4, r8]
90021260:	f896 8000 	ldrb.w	r8, [r6]
90021264:	7876      	ldrb	r6, [r6, #1]
90021266:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9002126a:	fb03 f808 	mul.w	r8, r3, r8
9002126e:	4373      	muls	r3, r6
90021270:	7856      	ldrb	r6, [r2, #1]
90021272:	fb0e 8807 	mla	r8, lr, r7, r8
90021276:	7817      	ldrb	r7, [r2, #0]
90021278:	fb0e 330c 	mla	r3, lr, ip, r3
9002127c:	fb01 8807 	mla	r8, r1, r7, r8
90021280:	7807      	ldrb	r7, [r0, #0]
90021282:	fb01 3306 	mla	r3, r1, r6, r3
90021286:	fb09 8707 	mla	r7, r9, r7, r8
9002128a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002128e:	ea47 070a 	orr.w	r7, r7, sl
90021292:	f890 a001 	ldrb.w	sl, [r0, #1]
90021296:	fb09 3a0a 	mla	sl, r9, sl, r3
9002129a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002129c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900212a0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
900212a4:	ea47 070a 	orr.w	r7, r7, sl
900212a8:	f823 7b02 	strh.w	r7, [r3], #2
900212ac:	930b      	str	r3, [sp, #44]	@ 0x2c
900212ae:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900212b0:	449b      	add	fp, r3
900212b2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900212b4:	441d      	add	r5, r3
900212b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900212b8:	3b01      	subs	r3, #1
900212ba:	9309      	str	r3, [sp, #36]	@ 0x24
900212bc:	e714      	b.n	900210e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
900212be:	b149      	cbz	r1, 900212d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
900212c0:	5cba      	ldrb	r2, [r7, r2]
900212c2:	4660      	mov	r0, ip
900212c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900212c8:	4422      	add	r2, r4
900212ca:	4666      	mov	r6, ip
900212cc:	e7a5      	b.n	9002121a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900212ce:	4660      	mov	r0, ip
900212d0:	4662      	mov	r2, ip
900212d2:	e7a2      	b.n	9002121a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900212d4:	4660      	mov	r0, ip
900212d6:	4662      	mov	r2, ip
900212d8:	e7f7      	b.n	900212ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
900212da:	b00f      	add	sp, #60	@ 0x3c
900212dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900212e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
900212e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900212e4:	b085      	sub	sp, #20
900212e6:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
900212ea:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
900212ee:	9102      	str	r1, [sp, #8]
900212f0:	2c00      	cmp	r4, #0
900212f2:	fb04 710c 	mla	r1, r4, ip, r7
900212f6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
900212fa:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
900212fe:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90021302:	eb02 0e01 	add.w	lr, r2, r1
90021306:	f2c0 8122 	blt.w	9002154e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9002130a:	45a0      	cmp	r8, r4
9002130c:	f340 811f 	ble.w	9002154e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90021310:	2f00      	cmp	r7, #0
90021312:	f2c0 811a 	blt.w	9002154a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90021316:	45bc      	cmp	ip, r7
90021318:	f340 8117 	ble.w	9002154a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9002131c:	5c52      	ldrb	r2, [r2, r1]
9002131e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90021322:	1c7a      	adds	r2, r7, #1
90021324:	f100 8116 	bmi.w	90021554 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90021328:	4594      	cmp	ip, r2
9002132a:	f340 8113 	ble.w	90021554 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9002132e:	2e00      	cmp	r6, #0
90021330:	f000 8112 	beq.w	90021558 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90021334:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021338:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9002133c:	3401      	adds	r4, #1
9002133e:	f100 810f 	bmi.w	90021560 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90021342:	45a0      	cmp	r8, r4
90021344:	f340 810c 	ble.w	90021560 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90021348:	2800      	cmp	r0, #0
9002134a:	f000 810c 	beq.w	90021566 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
9002134e:	2f00      	cmp	r7, #0
90021350:	f2c0 8104 	blt.w	9002155c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90021354:	45bc      	cmp	ip, r7
90021356:	f340 8101 	ble.w	9002155c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002135a:	f81e 200c 	ldrb.w	r2, [lr, ip]
9002135e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90021362:	3701      	adds	r7, #1
90021364:	f100 8102 	bmi.w	9002156c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021368:	45bc      	cmp	ip, r7
9002136a:	f340 80ff 	ble.w	9002156c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9002136e:	2e00      	cmp	r6, #0
90021370:	f000 80fe 	beq.w	90021570 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90021374:	44f4      	add	ip, lr
90021376:	f89c 2001 	ldrb.w	r2, [ip, #1]
9002137a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9002137e:	b2b6      	uxth	r6, r6
90021380:	b280      	uxth	r0, r0
90021382:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90021386:	fb00 fe06 	mul.w	lr, r0, r6
9002138a:	0136      	lsls	r6, r6, #4
9002138c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90021390:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90021394:	eba6 070e 	sub.w	r7, r6, lr
90021398:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002139c:	ea4f 6914 	mov.w	r9, r4, lsr #24
900213a0:	b280      	uxth	r0, r0
900213a2:	b2bf      	uxth	r7, r7
900213a4:	1a1b      	subs	r3, r3, r0
900213a6:	ea4f 6812 	mov.w	r8, r2, lsr #24
900213aa:	fb0a f607 	mul.w	r6, sl, r7
900213ae:	b29b      	uxth	r3, r3
900213b0:	fb0b 6603 	mla	r6, fp, r3, r6
900213b4:	fb00 6609 	mla	r6, r0, r9, r6
900213b8:	fb0e 6608 	mla	r6, lr, r8, r6
900213bc:	f3c6 2607 	ubfx	r6, r6, #8, #8
900213c0:	9600      	str	r6, [sp, #0]
900213c2:	2e00      	cmp	r6, #0
900213c4:	f000 80be 	beq.w	90021544 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900213c8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900213cc:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900213d0:	9e02      	ldr	r6, [sp, #8]
900213d2:	fb0b fc0c 	mul.w	ip, fp, ip
900213d6:	fb0b f505 	mul.w	r5, fp, r5
900213da:	8836      	ldrh	r6, [r6, #0]
900213dc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900213e0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900213e4:	9501      	str	r5, [sp, #4]
900213e6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900213ea:	44dc      	add	ip, fp
900213ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900213f0:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900213f4:	9503      	str	r5, [sp, #12]
900213f6:	9d01      	ldr	r5, [sp, #4]
900213f8:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900213fc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021400:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90021404:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90021408:	fb0a fc0c 	mul.w	ip, sl, ip
9002140c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90021410:	fb0a fa01 	mul.w	sl, sl, r1
90021414:	ea4f 251c 	mov.w	r5, ip, lsr #8
90021418:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002141c:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90021420:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90021424:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90021428:	4465      	add	r5, ip
9002142a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002142e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90021432:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021436:	fb09 fc0c 	mul.w	ip, r9, ip
9002143a:	0a2d      	lsrs	r5, r5, #8
9002143c:	fb09 f904 	mul.w	r9, r9, r4
90021440:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021444:	ea4f 211c 	mov.w	r1, ip, lsr #8
90021448:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002144c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90021450:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90021454:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90021458:	437d      	muls	r5, r7
9002145a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9002145e:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90021462:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90021466:	4461      	add	r1, ip
90021468:	fb08 f404 	mul.w	r4, r8, r4
9002146c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021470:	fb08 f802 	mul.w	r8, r8, r2
90021474:	0a09      	lsrs	r1, r1, #8
90021476:	0a22      	lsrs	r2, r4, #8
90021478:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002147c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90021480:	fb07 f70a 	mul.w	r7, r7, sl
90021484:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90021488:	4414      	add	r4, r2
9002148a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
9002148e:	0a24      	lsrs	r4, r4, #8
90021490:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90021494:	9a03      	ldr	r2, [sp, #12]
90021496:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002149a:	fb02 5503 	mla	r5, r2, r3, r5
9002149e:	ea4f 2818 	mov.w	r8, r8, lsr #8
900214a2:	9a00      	ldr	r2, [sp, #0]
900214a4:	fb04 540e 	mla	r4, r4, lr, r5
900214a8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900214ac:	1235      	asrs	r5, r6, #8
900214ae:	fb01 4100 	mla	r1, r1, r0, r4
900214b2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900214b6:	0a09      	lsrs	r1, r1, #8
900214b8:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900214bc:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900214c0:	fb03 7101 	mla	r1, r3, r1, r7
900214c4:	fb0e 1e08 	mla	lr, lr, r8, r1
900214c8:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900214cc:	fb00 e101 	mla	r1, r0, r1, lr
900214d0:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900214d4:	b287      	uxth	r7, r0
900214d6:	0a09      	lsrs	r1, r1, #8
900214d8:	437a      	muls	r2, r7
900214da:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900214de:	1c53      	adds	r3, r2, #1
900214e0:	4321      	orrs	r1, r4
900214e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900214e6:	0c0a      	lsrs	r2, r1, #16
900214e8:	f3c1 2407 	ubfx	r4, r1, #8, #8
900214ec:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900214f0:	b2c8      	uxtb	r0, r1
900214f2:	fb12 f207 	smulbb	r2, r2, r7
900214f6:	fb14 f407 	smulbb	r4, r4, r7
900214fa:	b2db      	uxtb	r3, r3
900214fc:	fb10 f007 	smulbb	r0, r0, r7
90021500:	fb05 2503 	mla	r5, r5, r3, r2
90021504:	10f2      	asrs	r2, r6, #3
90021506:	00f6      	lsls	r6, r6, #3
90021508:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002150c:	b2ad      	uxth	r5, r5
9002150e:	b2f6      	uxtb	r6, r6
90021510:	fb02 4203 	mla	r2, r2, r3, r4
90021514:	fb06 0303 	mla	r3, r6, r3, r0
90021518:	b294      	uxth	r4, r2
9002151a:	b299      	uxth	r1, r3
9002151c:	1c6b      	adds	r3, r5, #1
9002151e:	1c62      	adds	r2, r4, #1
90021520:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021524:	1c4b      	adds	r3, r1, #1
90021526:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002152a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002152e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90021532:	0952      	lsrs	r2, r2, #5
90021534:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021538:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002153c:	432b      	orrs	r3, r5
9002153e:	4313      	orrs	r3, r2
90021540:	9a02      	ldr	r2, [sp, #8]
90021542:	8013      	strh	r3, [r2, #0]
90021544:	b005      	add	sp, #20
90021546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002154a:	2500      	movs	r5, #0
9002154c:	e6e9      	b.n	90021322 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
9002154e:	2100      	movs	r1, #0
90021550:	460d      	mov	r5, r1
90021552:	e6f3      	b.n	9002133c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021554:	2100      	movs	r1, #0
90021556:	e6f1      	b.n	9002133c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021558:	4631      	mov	r1, r6
9002155a:	e6ef      	b.n	9002133c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002155c:	2400      	movs	r4, #0
9002155e:	e700      	b.n	90021362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90021560:	2200      	movs	r2, #0
90021562:	4614      	mov	r4, r2
90021564:	e70b      	b.n	9002137e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021566:	4602      	mov	r2, r0
90021568:	4604      	mov	r4, r0
9002156a:	e708      	b.n	9002137e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002156c:	2200      	movs	r2, #0
9002156e:	e706      	b.n	9002137e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021570:	4632      	mov	r2, r6
90021572:	e704      	b.n	9002137e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90021574 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021578:	b09f      	sub	sp, #124	@ 0x7c
9002157a:	921b      	str	r2, [sp, #108]	@ 0x6c
9002157c:	9309      	str	r3, [sp, #36]	@ 0x24
9002157e:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90021580:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90021584:	901d      	str	r0, [sp, #116]	@ 0x74
90021586:	931c      	str	r3, [sp, #112]	@ 0x70
90021588:	6850      	ldr	r0, [r2, #4]
9002158a:	9119      	str	r1, [sp, #100]	@ 0x64
9002158c:	6812      	ldr	r2, [r2, #0]
9002158e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90021590:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90021594:	fb00 1303 	mla	r3, r0, r3, r1
90021598:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002159c:	930c      	str	r3, [sp, #48]	@ 0x30
9002159e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900215a0:	681b      	ldr	r3, [r3, #0]
900215a2:	9312      	str	r3, [sp, #72]	@ 0x48
900215a4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900215a6:	685e      	ldr	r6, [r3, #4]
900215a8:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
900215ac:	3604      	adds	r6, #4
900215ae:	930d      	str	r3, [sp, #52]	@ 0x34
900215b0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900215b2:	2b00      	cmp	r3, #0
900215b4:	dc03      	bgt.n	900215be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900215b6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900215b8:	2b00      	cmp	r3, #0
900215ba:	f340 8387 	ble.w	90021ccc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900215be:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900215c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900215c4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900215c8:	1e48      	subs	r0, r1, #1
900215ca:	1e57      	subs	r7, r2, #1
900215cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900215ce:	2b00      	cmp	r3, #0
900215d0:	f340 8194 	ble.w	900218fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900215d4:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900215d6:	142b      	asrs	r3, r5, #16
900215d8:	ea5f 4c24 	movs.w	ip, r4, asr #16
900215dc:	d406      	bmi.n	900215ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900215de:	4584      	cmp	ip, r0
900215e0:	da04      	bge.n	900215ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900215e2:	2b00      	cmp	r3, #0
900215e4:	db02      	blt.n	900215ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900215e6:	42bb      	cmp	r3, r7
900215e8:	f2c0 8189 	blt.w	900218fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900215ec:	f11c 0c01 	adds.w	ip, ip, #1
900215f0:	f100 8177 	bmi.w	900218e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900215f4:	4561      	cmp	r1, ip
900215f6:	f2c0 8174 	blt.w	900218e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900215fa:	3301      	adds	r3, #1
900215fc:	f100 8171 	bmi.w	900218e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021600:	429a      	cmp	r2, r3
90021602:	f2c0 816e 	blt.w	900218e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021606:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021608:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9002160a:	931a      	str	r3, [sp, #104]	@ 0x68
9002160c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
9002160e:	2b00      	cmp	r3, #0
90021610:	f340 8193 	ble.w	9002193a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90021614:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90021616:	ea4f 4c25 	mov.w	ip, r5, asr #16
9002161a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002161e:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021622:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90021624:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90021628:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002162a:	141b      	asrs	r3, r3, #16
9002162c:	f100 81d6 	bmi.w	900219dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021630:	f100 38ff 	add.w	r8, r0, #4294967295
90021634:	4543      	cmp	r3, r8
90021636:	f280 81d1 	bge.w	900219dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002163a:	f1bc 0f00 	cmp.w	ip, #0
9002163e:	f2c0 81cd 	blt.w	900219dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021642:	f10e 38ff 	add.w	r8, lr, #4294967295
90021646:	45c4      	cmp	ip, r8
90021648:	f280 81c8 	bge.w	900219dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002164c:	b200      	sxth	r0, r0
9002164e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90021650:	fb0c 3300 	mla	r3, ip, r0, r3
90021654:	eb04 0803 	add.w	r8, r4, r3
90021658:	5ce3      	ldrb	r3, [r4, r3]
9002165a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002165e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90021662:	2a00      	cmp	r2, #0
90021664:	f000 81af 	beq.w	900219c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021668:	f898 c001 	ldrb.w	ip, [r8, #1]
9002166c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90021670:	940e      	str	r4, [sp, #56]	@ 0x38
90021672:	0e24      	lsrs	r4, r4, #24
90021674:	9415      	str	r4, [sp, #84]	@ 0x54
90021676:	b179      	cbz	r1, 90021698 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021678:	eb08 0c00 	add.w	ip, r8, r0
9002167c:	f818 0000 	ldrb.w	r0, [r8, r0]
90021680:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90021684:	900a      	str	r0, [sp, #40]	@ 0x28
90021686:	0e00      	lsrs	r0, r0, #24
90021688:	9013      	str	r0, [sp, #76]	@ 0x4c
9002168a:	f89c 0001 	ldrb.w	r0, [ip, #1]
9002168e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90021692:	900f      	str	r0, [sp, #60]	@ 0x3c
90021694:	0e00      	lsrs	r0, r0, #24
90021696:	9016      	str	r0, [sp, #88]	@ 0x58
90021698:	b292      	uxth	r2, r2
9002169a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9002169c:	b289      	uxth	r1, r1
9002169e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900216a0:	fb02 f901 	mul.w	r9, r2, r1
900216a4:	0112      	lsls	r2, r2, #4
900216a6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900216aa:	eba2 0809 	sub.w	r8, r2, r9
900216ae:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900216b2:	b289      	uxth	r1, r1
900216b4:	fa1f f888 	uxth.w	r8, r8
900216b8:	1a52      	subs	r2, r2, r1
900216ba:	fb08 f000 	mul.w	r0, r8, r0
900216be:	b292      	uxth	r2, r2
900216c0:	fb02 000e 	mla	r0, r2, lr, r0
900216c4:	fb01 0004 	mla	r0, r1, r4, r0
900216c8:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900216ca:	fb09 0004 	mla	r0, r9, r4, r0
900216ce:	f3c0 2007 	ubfx	r0, r0, #8, #8
900216d2:	2800      	cmp	r0, #0
900216d4:	f000 80fa 	beq.w	900218cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900216d8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900216dc:	d01b      	beq.n	90021716 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900216de:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900216e2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900216e6:	fb0e fa0a 	mul.w	sl, lr, sl
900216ea:	fb0e fe03 	mul.w	lr, lr, r3
900216ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
900216f2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900216f6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900216fa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900216fe:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90021702:	4453      	add	r3, sl
90021704:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021708:	0a1b      	lsrs	r3, r3, #8
9002170a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002170e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021712:	ea43 030c 	orr.w	r3, r3, ip
90021716:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021718:	2cff      	cmp	r4, #255	@ 0xff
9002171a:	d021      	beq.n	90021760 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
9002171c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002171e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90021722:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021724:	fb04 fb0b 	mul.w	fp, r4, fp
90021728:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002172a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002172e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021730:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021734:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90021738:	fb04 fa0a 	mul.w	sl, r4, sl
9002173c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021740:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90021744:	44de      	add	lr, fp
90021746:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002174a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002174e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021752:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90021756:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002175a:	ea4e 040a 	orr.w	r4, lr, sl
9002175e:	940e      	str	r4, [sp, #56]	@ 0x38
90021760:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90021762:	2cff      	cmp	r4, #255	@ 0xff
90021764:	d021      	beq.n	900217aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90021766:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021768:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002176c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002176e:	fb04 fb0b 	mul.w	fp, r4, fp
90021772:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021774:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021778:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002177a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002177e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90021782:	fb04 fa0a 	mul.w	sl, r4, sl
90021786:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002178a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002178e:	44de      	add	lr, fp
90021790:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021794:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021798:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002179c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900217a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900217a4:	ea4e 040a 	orr.w	r4, lr, sl
900217a8:	940a      	str	r4, [sp, #40]	@ 0x28
900217aa:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900217ac:	2cff      	cmp	r4, #255	@ 0xff
900217ae:	d021      	beq.n	900217f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
900217b0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900217b2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900217b6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900217b8:	fb04 fb0b 	mul.w	fp, r4, fp
900217bc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900217be:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900217c2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900217c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900217c8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900217cc:	fb04 fa0a 	mul.w	sl, r4, sl
900217d0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900217d4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900217d8:	44de      	add	lr, fp
900217da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900217de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900217e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900217e6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900217ea:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900217ee:	ea4e 040a 	orr.w	r4, lr, sl
900217f2:	940f      	str	r4, [sp, #60]	@ 0x3c
900217f4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900217f6:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900217fa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900217fe:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021802:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021804:	fb08 fc0c 	mul.w	ip, r8, ip
90021808:	fb02 cc0e 	mla	ip, r2, lr, ip
9002180c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90021810:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90021812:	fb01 cc0e 	mla	ip, r1, lr, ip
90021816:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
9002181a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002181c:	fb09 cc0e 	mla	ip, r9, lr, ip
90021820:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90021824:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021826:	fb08 f80e 	mul.w	r8, r8, lr
9002182a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002182e:	fb02 8303 	mla	r3, r2, r3, r8
90021832:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90021834:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021838:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
9002183c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002183e:	fb01 330a 	mla	r3, r1, sl, r3
90021842:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
90021846:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90021848:	fb09 3901 	mla	r9, r9, r1, r3
9002184c:	883b      	ldrh	r3, [r7, #0]
9002184e:	4342      	muls	r2, r0
90021850:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021854:	1c50      	adds	r0, r2, #1
90021856:	1219      	asrs	r1, r3, #8
90021858:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
9002185c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90021860:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021864:	ea4c 0c09 	orr.w	ip, ip, r9
90021868:	ea6f 2010 	mvn.w	r0, r0, lsr #8
9002186c:	ea4f 421c 	mov.w	r2, ip, lsr #16
90021870:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90021874:	b2c0      	uxtb	r0, r0
90021876:	fb12 f204 	smulbb	r2, r2, r4
9002187a:	fa5f fc8c 	uxtb.w	ip, ip
9002187e:	fb1e fe04 	smulbb	lr, lr, r4
90021882:	fb01 2100 	mla	r1, r1, r0, r2
90021886:	10da      	asrs	r2, r3, #3
90021888:	fb1c fc04 	smulbb	ip, ip, r4
9002188c:	00db      	lsls	r3, r3, #3
9002188e:	b289      	uxth	r1, r1
90021890:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90021894:	b2db      	uxtb	r3, r3
90021896:	fb02 e200 	mla	r2, r2, r0, lr
9002189a:	fb03 c300 	mla	r3, r3, r0, ip
9002189e:	b292      	uxth	r2, r2
900218a0:	fa1f fc83 	uxth.w	ip, r3
900218a4:	1c4b      	adds	r3, r1, #1
900218a6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900218aa:	f10c 0301 	add.w	r3, ip, #1
900218ae:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900218b2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900218b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900218ba:	430b      	orrs	r3, r1
900218bc:	1c51      	adds	r1, r2, #1
900218be:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900218c2:	0952      	lsrs	r2, r2, #5
900218c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900218c8:	4313      	orrs	r3, r2
900218ca:	803b      	strh	r3, [r7, #0]
900218cc:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900218ce:	3702      	adds	r7, #2
900218d0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900218d2:	441a      	add	r2, r3
900218d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900218d6:	441d      	add	r5, r3
900218d8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900218da:	9229      	str	r2, [sp, #164]	@ 0xa4
900218dc:	3b01      	subs	r3, #1
900218de:	931a      	str	r3, [sp, #104]	@ 0x68
900218e0:	e694      	b.n	9002160c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900218e2:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900218e4:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900218e6:	441c      	add	r4, r3
900218e8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900218ea:	441d      	add	r5, r3
900218ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900218ee:	9429      	str	r4, [sp, #164]	@ 0xa4
900218f0:	3b01      	subs	r3, #1
900218f2:	9309      	str	r3, [sp, #36]	@ 0x24
900218f4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900218f6:	3302      	adds	r3, #2
900218f8:	930c      	str	r3, [sp, #48]	@ 0x30
900218fa:	e667      	b.n	900215cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900218fc:	d024      	beq.n	90021948 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
900218fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021900:	982b      	ldr	r0, [sp, #172]	@ 0xac
90021902:	3b01      	subs	r3, #1
90021904:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90021906:	fb00 4003 	mla	r0, r0, r3, r4
9002190a:	1400      	asrs	r0, r0, #16
9002190c:	f53f ae7b 	bmi.w	90021606 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021910:	3901      	subs	r1, #1
90021912:	4288      	cmp	r0, r1
90021914:	f6bf ae77 	bge.w	90021606 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021918:	992c      	ldr	r1, [sp, #176]	@ 0xb0
9002191a:	fb01 5303 	mla	r3, r1, r3, r5
9002191e:	141b      	asrs	r3, r3, #16
90021920:	f53f ae71 	bmi.w	90021606 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021924:	3a01      	subs	r2, #1
90021926:	4293      	cmp	r3, r2
90021928:	f6bf ae6d 	bge.w	90021606 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002192c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90021930:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90021934:	f1bb 0f00 	cmp.w	fp, #0
90021938:	dc70      	bgt.n	90021a1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9002193a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002193c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021940:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021942:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90021946:	930c      	str	r3, [sp, #48]	@ 0x30
90021948:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002194a:	2b00      	cmp	r3, #0
9002194c:	f340 81be 	ble.w	90021ccc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90021950:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021954:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021956:	ee30 0a04 	vadd.f32	s0, s0, s8
9002195a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002195e:	eef0 6a62 	vmov.f32	s13, s5
90021962:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021966:	ee31 1a05 	vadd.f32	s2, s2, s10
9002196a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002196e:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90021972:	eef0 6a43 	vmov.f32	s13, s6
90021976:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002197a:	ee16 5a90 	vmov	r5, s13
9002197e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021982:	ee61 7a27 	vmul.f32	s15, s2, s15
90021986:	ee77 2a62 	vsub.f32	s5, s14, s5
9002198a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002198e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021992:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021996:	ee12 2a90 	vmov	r2, s5
9002199a:	eef0 2a47 	vmov.f32	s5, s14
9002199e:	fb92 f3f3 	sdiv	r3, r2, r3
900219a2:	ee13 2a10 	vmov	r2, s6
900219a6:	932b      	str	r3, [sp, #172]	@ 0xac
900219a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900219aa:	eeb0 3a67 	vmov.f32	s6, s15
900219ae:	fb92 f3f3 	sdiv	r3, r2, r3
900219b2:	932c      	str	r3, [sp, #176]	@ 0xb0
900219b4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900219b6:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
900219b8:	3b01      	subs	r3, #1
900219ba:	9319      	str	r3, [sp, #100]	@ 0x64
900219bc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900219be:	bf08      	it	eq
900219c0:	4613      	moveq	r3, r2
900219c2:	9309      	str	r3, [sp, #36]	@ 0x24
900219c4:	e5f4      	b.n	900215b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900219c6:	2900      	cmp	r1, #0
900219c8:	f43f ae66 	beq.w	90021698 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900219cc:	f818 0000 	ldrb.w	r0, [r8, r0]
900219d0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900219d4:	900a      	str	r0, [sp, #40]	@ 0x28
900219d6:	0e00      	lsrs	r0, r0, #24
900219d8:	9013      	str	r0, [sp, #76]	@ 0x4c
900219da:	e65d      	b.n	90021698 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900219dc:	f113 0801 	adds.w	r8, r3, #1
900219e0:	f53f af74 	bmi.w	900218cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900219e4:	4540      	cmp	r0, r8
900219e6:	f6ff af71 	blt.w	900218cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900219ea:	f11c 0801 	adds.w	r8, ip, #1
900219ee:	f53f af6d 	bmi.w	900218cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900219f2:	45c6      	cmp	lr, r8
900219f4:	f6ff af6a 	blt.w	900218cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900219f8:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
900219fa:	b200      	sxth	r0, r0
900219fc:	9302      	str	r3, [sp, #8]
900219fe:	fa0f f38e 	sxth.w	r3, lr
90021a02:	9000      	str	r0, [sp, #0]
90021a04:	9301      	str	r3, [sp, #4]
90021a06:	4633      	mov	r3, r6
90021a08:	981d      	ldr	r0, [sp, #116]	@ 0x74
90021a0a:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021a0e:	e9cd c203 	strd	ip, r2, [sp, #12]
90021a12:	4639      	mov	r1, r7
90021a14:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90021a16:	f7ff fc63 	bl	900212e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90021a1a:	e757      	b.n	900218cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021a1c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90021a1e:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021a22:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90021a24:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021a28:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90021a2a:	1427      	asrs	r7, r4, #16
90021a2c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90021a2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021a32:	142b      	asrs	r3, r5, #16
90021a34:	fb01 7303 	mla	r3, r1, r3, r7
90021a38:	18e7      	adds	r7, r4, r3
90021a3a:	5ce3      	ldrb	r3, [r4, r3]
90021a3c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021a40:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90021a44:	2a00      	cmp	r2, #0
90021a46:	f000 8137 	beq.w	90021cb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90021a4a:	f897 e001 	ldrb.w	lr, [r7, #1]
90021a4e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90021a52:	9410      	str	r4, [sp, #64]	@ 0x40
90021a54:	0e24      	lsrs	r4, r4, #24
90021a56:	9417      	str	r4, [sp, #92]	@ 0x5c
90021a58:	b170      	cbz	r0, 90021a78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021a5a:	eb07 0e01 	add.w	lr, r7, r1
90021a5e:	5c79      	ldrb	r1, [r7, r1]
90021a60:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021a64:	910b      	str	r1, [sp, #44]	@ 0x2c
90021a66:	0e09      	lsrs	r1, r1, #24
90021a68:	9114      	str	r1, [sp, #80]	@ 0x50
90021a6a:	f89e 1001 	ldrb.w	r1, [lr, #1]
90021a6e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021a72:	9111      	str	r1, [sp, #68]	@ 0x44
90021a74:	0e09      	lsrs	r1, r1, #24
90021a76:	9118      	str	r1, [sp, #96]	@ 0x60
90021a78:	b292      	uxth	r2, r2
90021a7a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90021a7c:	b280      	uxth	r0, r0
90021a7e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021a80:	fb02 f800 	mul.w	r8, r2, r0
90021a84:	0112      	lsls	r2, r2, #4
90021a86:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90021a8a:	eba2 0e08 	sub.w	lr, r2, r8
90021a8e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90021a92:	b280      	uxth	r0, r0
90021a94:	fa1f fe8e 	uxth.w	lr, lr
90021a98:	1a12      	subs	r2, r2, r0
90021a9a:	fb0e f101 	mul.w	r1, lr, r1
90021a9e:	b292      	uxth	r2, r2
90021aa0:	fb02 110c 	mla	r1, r2, ip, r1
90021aa4:	fb00 1104 	mla	r1, r0, r4, r1
90021aa8:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021aaa:	fb08 1104 	mla	r1, r8, r4, r1
90021aae:	f3c1 2107 	ubfx	r1, r1, #8, #8
90021ab2:	2900      	cmp	r1, #0
90021ab4:	f000 80f5 	beq.w	90021ca2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90021ab8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90021abc:	d019      	beq.n	90021af2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90021abe:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90021ac2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021ac6:	fb0c fa0a 	mul.w	sl, ip, sl
90021aca:	fb0c fc03 	mul.w	ip, ip, r3
90021ace:	ea4f 231a 	mov.w	r3, sl, lsr #8
90021ad2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90021ad6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90021ada:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021ade:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90021ae2:	4453      	add	r3, sl
90021ae4:	0a3f      	lsrs	r7, r7, #8
90021ae6:	0a1b      	lsrs	r3, r3, #8
90021ae8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90021aec:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90021af0:	433b      	orrs	r3, r7
90021af2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90021af4:	2cff      	cmp	r4, #255	@ 0xff
90021af6:	d020      	beq.n	90021b3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90021af8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021afa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021afe:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90021b00:	4367      	muls	r7, r4
90021b02:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021b04:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021b08:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021b0c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90021b0e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021b12:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021b16:	fb04 fa0a 	mul.w	sl, r4, sl
90021b1a:	44bc      	add	ip, r7
90021b1c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021b20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021b24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021b28:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021b2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021b30:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021b34:	ea4c 040a 	orr.w	r4, ip, sl
90021b38:	9410      	str	r4, [sp, #64]	@ 0x40
90021b3a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021b3c:	2cff      	cmp	r4, #255	@ 0xff
90021b3e:	d020      	beq.n	90021b82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90021b40:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021b42:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021b46:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021b48:	4367      	muls	r7, r4
90021b4a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021b4c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021b50:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021b54:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90021b56:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021b5a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021b5e:	fb04 fa0a 	mul.w	sl, r4, sl
90021b62:	44bc      	add	ip, r7
90021b64:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021b68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021b6c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021b70:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021b74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021b78:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021b7c:	ea4c 040a 	orr.w	r4, ip, sl
90021b80:	940b      	str	r4, [sp, #44]	@ 0x2c
90021b82:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021b84:	2cff      	cmp	r4, #255	@ 0xff
90021b86:	d020      	beq.n	90021bca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90021b88:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021b8a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021b8e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021b90:	4367      	muls	r7, r4
90021b92:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021b94:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021b98:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021b9c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90021b9e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021ba2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021ba6:	fb04 fa0a 	mul.w	sl, r4, sl
90021baa:	44bc      	add	ip, r7
90021bac:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021bb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021bb4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021bb8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021bbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021bc0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021bc4:	ea4c 040a 	orr.w	r4, ip, sl
90021bc8:	9411      	str	r4, [sp, #68]	@ 0x44
90021bca:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021bcc:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90021bd0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021bd4:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021bd8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90021bda:	fb0e f707 	mul.w	r7, lr, r7
90021bde:	fb02 770c 	mla	r7, r2, ip, r7
90021be2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021be6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90021be8:	fb00 770c 	mla	r7, r0, ip, r7
90021bec:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021bf0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021bf2:	fb08 770c 	mla	r7, r8, ip, r7
90021bf6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90021bfa:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021bfc:	fb0e fe0c 	mul.w	lr, lr, ip
90021c00:	0a3f      	lsrs	r7, r7, #8
90021c02:	fb02 e303 	mla	r3, r2, r3, lr
90021c06:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90021c08:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90021c0c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90021c10:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90021c12:	fb00 330a 	mla	r3, r0, sl, r3
90021c16:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90021c1a:	f8b9 0000 	ldrh.w	r0, [r9]
90021c1e:	fb08 3c0c 	mla	ip, r8, ip, r3
90021c22:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021c24:	1202      	asrs	r2, r0, #8
90021c26:	434b      	muls	r3, r1
90021c28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021c2c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90021c30:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90021c34:	1c59      	adds	r1, r3, #1
90021c36:	ea47 070c 	orr.w	r7, r7, ip
90021c3a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90021c3e:	0c3b      	lsrs	r3, r7, #16
90021c40:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90021c44:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90021c48:	b2ff      	uxtb	r7, r7
90021c4a:	fb13 f304 	smulbb	r3, r3, r4
90021c4e:	b2c9      	uxtb	r1, r1
90021c50:	fb1c fc04 	smulbb	ip, ip, r4
90021c54:	fb02 3201 	mla	r2, r2, r1, r3
90021c58:	10c3      	asrs	r3, r0, #3
90021c5a:	fb17 f704 	smulbb	r7, r7, r4
90021c5e:	00c0      	lsls	r0, r0, #3
90021c60:	b292      	uxth	r2, r2
90021c62:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90021c66:	b2c0      	uxtb	r0, r0
90021c68:	fb03 c301 	mla	r3, r3, r1, ip
90021c6c:	f102 0c01 	add.w	ip, r2, #1
90021c70:	fb00 7001 	mla	r0, r0, r1, r7
90021c74:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90021c78:	b280      	uxth	r0, r0
90021c7a:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90021c7e:	b29b      	uxth	r3, r3
90021c80:	1c42      	adds	r2, r0, #1
90021c82:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90021c86:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021c8a:	ea42 020c 	orr.w	r2, r2, ip
90021c8e:	f103 0c01 	add.w	ip, r3, #1
90021c92:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90021c96:	095b      	lsrs	r3, r3, #5
90021c98:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021c9c:	431a      	orrs	r2, r3
90021c9e:	f8a9 2000 	strh.w	r2, [r9]
90021ca2:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90021ca4:	f109 0902 	add.w	r9, r9, #2
90021ca8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90021caa:	f10b 3bff 	add.w	fp, fp, #4294967295
90021cae:	441a      	add	r2, r3
90021cb0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021cb2:	9229      	str	r2, [sp, #164]	@ 0xa4
90021cb4:	441d      	add	r5, r3
90021cb6:	e63d      	b.n	90021934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90021cb8:	2800      	cmp	r0, #0
90021cba:	f43f aedd 	beq.w	90021a78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021cbe:	5c79      	ldrb	r1, [r7, r1]
90021cc0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021cc4:	910b      	str	r1, [sp, #44]	@ 0x2c
90021cc6:	0e09      	lsrs	r1, r1, #24
90021cc8:	9114      	str	r1, [sp, #80]	@ 0x50
90021cca:	e6d5      	b.n	90021a78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021ccc:	b01f      	add	sp, #124	@ 0x7c
90021cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021cd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90021cd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021cd6:	b089      	sub	sp, #36	@ 0x24
90021cd8:	9101      	str	r1, [sp, #4]
90021cda:	9801      	ldr	r0, [sp, #4]
90021cdc:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90021ce0:	8800      	ldrh	r0, [r0, #0]
90021ce2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
90021ce6:	1206      	asrs	r6, r0, #8
90021ce8:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90021cec:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90021cf0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90021cf4:	9602      	str	r6, [sp, #8]
90021cf6:	10c6      	asrs	r6, r0, #3
90021cf8:	00c0      	lsls	r0, r0, #3
90021cfa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90021cfe:	b2c0      	uxtb	r0, r0
90021d00:	9603      	str	r6, [sp, #12]
90021d02:	9004      	str	r0, [sp, #16]
90021d04:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
90021d08:	fb07 100c 	mla	r0, r7, ip, r1
90021d0c:	2f00      	cmp	r7, #0
90021d0e:	eb02 0e00 	add.w	lr, r2, r0
90021d12:	f2c0 810a 	blt.w	90021f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90021d16:	45b8      	cmp	r8, r7
90021d18:	f340 8107 	ble.w	90021f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90021d1c:	2900      	cmp	r1, #0
90021d1e:	f2c0 8102 	blt.w	90021f26 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90021d22:	458c      	cmp	ip, r1
90021d24:	f340 80ff 	ble.w	90021f26 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90021d28:	5c12      	ldrb	r2, [r2, r0]
90021d2a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90021d2e:	1c4a      	adds	r2, r1, #1
90021d30:	f100 80fe 	bmi.w	90021f30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90021d34:	4594      	cmp	ip, r2
90021d36:	f340 80fb 	ble.w	90021f30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90021d3a:	2d00      	cmp	r5, #0
90021d3c:	f000 80fa 	beq.w	90021f34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90021d40:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021d44:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90021d48:	3701      	adds	r7, #1
90021d4a:	f100 80f7 	bmi.w	90021f3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90021d4e:	45b8      	cmp	r8, r7
90021d50:	f340 80f4 	ble.w	90021f3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90021d54:	2c00      	cmp	r4, #0
90021d56:	f000 80f4 	beq.w	90021f42 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90021d5a:	2900      	cmp	r1, #0
90021d5c:	eb0e 020c 	add.w	r2, lr, ip
90021d60:	f2c0 80ea 	blt.w	90021f38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90021d64:	458c      	cmp	ip, r1
90021d66:	f340 80e7 	ble.w	90021f38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90021d6a:	f81e 700c 	ldrb.w	r7, [lr, ip]
90021d6e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90021d72:	3101      	adds	r1, #1
90021d74:	f100 80e8 	bmi.w	90021f48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90021d78:	458c      	cmp	ip, r1
90021d7a:	f340 80e5 	ble.w	90021f48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90021d7e:	2d00      	cmp	r5, #0
90021d80:	f000 80e4 	beq.w	90021f4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90021d84:	7852      	ldrb	r2, [r2, #1]
90021d86:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90021d8a:	0e0b      	lsrs	r3, r1, #24
90021d8c:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90021d90:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90021d94:	9300      	str	r3, [sp, #0]
90021d96:	b2a4      	uxth	r4, r4
90021d98:	b2ab      	uxth	r3, r5
90021d9a:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90021d9e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90021da2:	fb03 f904 	mul.w	r9, r3, r4
90021da6:	011b      	lsls	r3, r3, #4
90021da8:	fb0a f505 	mul.w	r5, sl, r5
90021dac:	ea4f 6817 	mov.w	r8, r7, lsr #24
90021db0:	eba3 0e09 	sub.w	lr, r3, r9
90021db4:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90021db8:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90021dbc:	0a28      	lsrs	r0, r5, #8
90021dbe:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90021dc2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90021dc6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90021dca:	fb0a f303 	mul.w	r3, sl, r3
90021dce:	fb08 f707 	mul.w	r7, r8, r7
90021dd2:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90021dd6:	4405      	add	r5, r0
90021dd8:	fb08 fc0c 	mul.w	ip, r8, ip
90021ddc:	b2a4      	uxth	r4, r4
90021dde:	0a2d      	lsrs	r5, r5, #8
90021de0:	fa1f fe8e 	uxth.w	lr, lr
90021de4:	1b12      	subs	r2, r2, r4
90021de6:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90021dea:	b292      	uxth	r2, r2
90021dec:	9005      	str	r0, [sp, #20]
90021dee:	f503 7080 	add.w	r0, r3, #256	@ 0x100
90021df2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90021df6:	ea4f 201c 	mov.w	r0, ip, lsr #8
90021dfa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90021dfe:	0a1b      	lsrs	r3, r3, #8
90021e00:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90021e04:	9306      	str	r3, [sp, #24]
90021e06:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
90021e0a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90021e0e:	4460      	add	r0, ip
90021e10:	fb0b f303 	mul.w	r3, fp, r3
90021e14:	fb0b f606 	mul.w	r6, fp, r6
90021e18:	0a00      	lsrs	r0, r0, #8
90021e1a:	0a1d      	lsrs	r5, r3, #8
90021e1c:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90021e20:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90021e24:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90021e28:	441d      	add	r5, r3
90021e2a:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90021e2e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90021e32:	f507 7380 	add.w	r3, r7, #256	@ 0x100
90021e36:	0a2d      	lsrs	r5, r5, #8
90021e38:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90021e3c:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90021e40:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90021e44:	0a36      	lsrs	r6, r6, #8
90021e46:	0a1b      	lsrs	r3, r3, #8
90021e48:	fb05 f50e 	mul.w	r5, r5, lr
90021e4c:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90021e50:	9307      	str	r3, [sp, #28]
90021e52:	0e0b      	lsrs	r3, r1, #24
90021e54:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90021e58:	fb0e f606 	mul.w	r6, lr, r6
90021e5c:	435f      	muls	r7, r3
90021e5e:	4359      	muls	r1, r3
90021e60:	9b05      	ldr	r3, [sp, #20]
90021e62:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021e66:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90021e6a:	fb03 5502 	mla	r5, r3, r2, r5
90021e6e:	9b06      	ldr	r3, [sp, #24]
90021e70:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021e74:	fb0e fe0b 	mul.w	lr, lr, fp
90021e78:	44bc      	add	ip, r7
90021e7a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90021e7e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021e82:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90021e86:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021e8a:	0a09      	lsrs	r1, r1, #8
90021e8c:	fb0c 5509 	mla	r5, ip, r9, r5
90021e90:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90021e94:	fb00 5504 	mla	r5, r0, r4, r5
90021e98:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90021e9c:	9b07      	ldr	r3, [sp, #28]
90021e9e:	fb02 6000 	mla	r0, r2, r0, r6
90021ea2:	0a2d      	lsrs	r5, r5, #8
90021ea4:	fb02 e20a 	mla	r2, r2, sl, lr
90021ea8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90021eac:	fb09 0001 	mla	r0, r9, r1, r0
90021eb0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90021eb4:	fb04 0003 	mla	r0, r4, r3, r0
90021eb8:	9b00      	ldr	r3, [sp, #0]
90021eba:	fb04 2408 	mla	r4, r4, r8, r2
90021ebe:	9a04      	ldr	r2, [sp, #16]
90021ec0:	0a00      	lsrs	r0, r0, #8
90021ec2:	fb09 4903 	mla	r9, r9, r3, r4
90021ec6:	9b02      	ldr	r3, [sp, #8]
90021ec8:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90021ecc:	ea6f 2929 	mvn.w	r9, r9, asr #8
90021ed0:	4305      	orrs	r5, r0
90021ed2:	fa5f f989 	uxtb.w	r9, r9
90021ed6:	fb03 f109 	mul.w	r1, r3, r9
90021eda:	9b03      	ldr	r3, [sp, #12]
90021edc:	fb03 f309 	mul.w	r3, r3, r9
90021ee0:	fb02 f909 	mul.w	r9, r2, r9
90021ee4:	1c4a      	adds	r2, r1, #1
90021ee6:	1c58      	adds	r0, r3, #1
90021ee8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021eec:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90021ef0:	0c2a      	lsrs	r2, r5, #16
90021ef2:	0a2b      	lsrs	r3, r5, #8
90021ef4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90021ef8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021efc:	0212      	lsls	r2, r2, #8
90021efe:	00db      	lsls	r3, r3, #3
90021f00:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90021f04:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021f08:	4313      	orrs	r3, r2
90021f0a:	f109 0201 	add.w	r2, r9, #1
90021f0e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90021f12:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90021f16:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90021f1a:	431d      	orrs	r5, r3
90021f1c:	9b01      	ldr	r3, [sp, #4]
90021f1e:	801d      	strh	r5, [r3, #0]
90021f20:	b009      	add	sp, #36	@ 0x24
90021f22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021f26:	2000      	movs	r0, #0
90021f28:	e701      	b.n	90021d2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90021f2a:	2600      	movs	r6, #0
90021f2c:	4630      	mov	r0, r6
90021f2e:	e70b      	b.n	90021d48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90021f30:	2600      	movs	r6, #0
90021f32:	e709      	b.n	90021d48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90021f34:	462e      	mov	r6, r5
90021f36:	e707      	b.n	90021d48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90021f38:	2700      	movs	r7, #0
90021f3a:	e71a      	b.n	90021d72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90021f3c:	2100      	movs	r1, #0
90021f3e:	460f      	mov	r7, r1
90021f40:	e723      	b.n	90021d8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90021f42:	4621      	mov	r1, r4
90021f44:	4627      	mov	r7, r4
90021f46:	e720      	b.n	90021d8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90021f48:	2100      	movs	r1, #0
90021f4a:	e71e      	b.n	90021d8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90021f4c:	4629      	mov	r1, r5
90021f4e:	e71c      	b.n	90021d8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90021f50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f54:	b09b      	sub	sp, #108	@ 0x6c
90021f56:	9218      	str	r2, [sp, #96]	@ 0x60
90021f58:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90021f5a:	9019      	str	r0, [sp, #100]	@ 0x64
90021f5c:	9116      	str	r1, [sp, #88]	@ 0x58
90021f5e:	6850      	ldr	r0, [r2, #4]
90021f60:	9307      	str	r3, [sp, #28]
90021f62:	6812      	ldr	r2, [r2, #0]
90021f64:	9d26      	ldr	r5, [sp, #152]	@ 0x98
90021f66:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90021f6a:	fb00 1303 	mla	r3, r0, r3, r1
90021f6e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021f72:	930a      	str	r3, [sp, #40]	@ 0x28
90021f74:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021f76:	681b      	ldr	r3, [r3, #0]
90021f78:	930f      	str	r3, [sp, #60]	@ 0x3c
90021f7a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021f7c:	685e      	ldr	r6, [r3, #4]
90021f7e:	3604      	adds	r6, #4
90021f80:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90021f82:	2b00      	cmp	r3, #0
90021f84:	dc03      	bgt.n	90021f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90021f86:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90021f88:	2b00      	cmp	r3, #0
90021f8a:	f340 8373 	ble.w	90022674 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90021f8e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021f90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021f94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021f98:	1e48      	subs	r0, r1, #1
90021f9a:	1e57      	subs	r7, r2, #1
90021f9c:	9b07      	ldr	r3, [sp, #28]
90021f9e:	2b00      	cmp	r3, #0
90021fa0:	f340 818f 	ble.w	900222c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90021fa4:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90021fa6:	142b      	asrs	r3, r5, #16
90021fa8:	ea5f 4c24 	movs.w	ip, r4, asr #16
90021fac:	d406      	bmi.n	90021fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021fae:	4584      	cmp	ip, r0
90021fb0:	da04      	bge.n	90021fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021fb2:	2b00      	cmp	r3, #0
90021fb4:	db02      	blt.n	90021fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021fb6:	42bb      	cmp	r3, r7
90021fb8:	f2c0 8184 	blt.w	900222c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90021fbc:	f11c 0c01 	adds.w	ip, ip, #1
90021fc0:	f100 8172 	bmi.w	900222a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021fc4:	4561      	cmp	r1, ip
90021fc6:	f2c0 816f 	blt.w	900222a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021fca:	3301      	adds	r3, #1
90021fcc:	f100 816c 	bmi.w	900222a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021fd0:	429a      	cmp	r2, r3
90021fd2:	f2c0 8169 	blt.w	900222a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021fd6:	9b07      	ldr	r3, [sp, #28]
90021fd8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90021fda:	9317      	str	r3, [sp, #92]	@ 0x5c
90021fdc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90021fde:	2b00      	cmp	r3, #0
90021fe0:	f340 818e 	ble.w	90022300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90021fe4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021fe6:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021fea:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021fee:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021ff2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90021ff4:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90021ff8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021ffa:	141b      	asrs	r3, r3, #16
90021ffc:	f100 81d1 	bmi.w	900223a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022000:	f101 38ff 	add.w	r8, r1, #4294967295
90022004:	4543      	cmp	r3, r8
90022006:	f280 81cc 	bge.w	900223a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002200a:	f1bc 0f00 	cmp.w	ip, #0
9002200e:	f2c0 81c8 	blt.w	900223a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022012:	f10e 38ff 	add.w	r8, lr, #4294967295
90022016:	45c4      	cmp	ip, r8
90022018:	f280 81c3 	bge.w	900223a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002201c:	b209      	sxth	r1, r1
9002201e:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022020:	fb0c 3301 	mla	r3, ip, r1, r3
90022024:	eb04 0803 	add.w	r8, r4, r3
90022028:	5ce3      	ldrb	r3, [r4, r3]
9002202a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002202e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90022032:	2a00      	cmp	r2, #0
90022034:	f000 81aa 	beq.w	9002238c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90022038:	f898 c001 	ldrb.w	ip, [r8, #1]
9002203c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90022040:	940b      	str	r4, [sp, #44]	@ 0x2c
90022042:	0e24      	lsrs	r4, r4, #24
90022044:	9412      	str	r4, [sp, #72]	@ 0x48
90022046:	b178      	cbz	r0, 90022068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90022048:	eb08 0c01 	add.w	ip, r8, r1
9002204c:	f818 1001 	ldrb.w	r1, [r8, r1]
90022050:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022054:	9108      	str	r1, [sp, #32]
90022056:	0e09      	lsrs	r1, r1, #24
90022058:	9110      	str	r1, [sp, #64]	@ 0x40
9002205a:	f89c 1001 	ldrb.w	r1, [ip, #1]
9002205e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022062:	910c      	str	r1, [sp, #48]	@ 0x30
90022064:	0e09      	lsrs	r1, r1, #24
90022066:	9113      	str	r1, [sp, #76]	@ 0x4c
90022068:	b292      	uxth	r2, r2
9002206a:	9912      	ldr	r1, [sp, #72]	@ 0x48
9002206c:	b280      	uxth	r0, r0
9002206e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022070:	fb02 f900 	mul.w	r9, r2, r0
90022074:	0112      	lsls	r2, r2, #4
90022076:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002207a:	eba2 0809 	sub.w	r8, r2, r9
9002207e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90022082:	b280      	uxth	r0, r0
90022084:	fa1f f888 	uxth.w	r8, r8
90022088:	1a12      	subs	r2, r2, r0
9002208a:	fb08 f101 	mul.w	r1, r8, r1
9002208e:	b292      	uxth	r2, r2
90022090:	fb02 110e 	mla	r1, r2, lr, r1
90022094:	fb00 1104 	mla	r1, r0, r4, r1
90022098:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002209a:	fb09 1104 	mla	r1, r9, r4, r1
9002209e:	f3c1 2107 	ubfx	r1, r1, #8, #8
900220a2:	2900      	cmp	r1, #0
900220a4:	f000 80f5 	beq.w	90022292 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900220a8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900220ac:	d01b      	beq.n	900220e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900220ae:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900220b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900220b6:	fb0e fa0a 	mul.w	sl, lr, sl
900220ba:	fb0e fe03 	mul.w	lr, lr, r3
900220be:	ea4f 231a 	mov.w	r3, sl, lsr #8
900220c2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900220c6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900220ca:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900220ce:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900220d2:	4453      	add	r3, sl
900220d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900220d8:	0a1b      	lsrs	r3, r3, #8
900220da:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900220de:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900220e2:	ea43 030c 	orr.w	r3, r3, ip
900220e6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900220e8:	2cff      	cmp	r4, #255	@ 0xff
900220ea:	d021      	beq.n	90022130 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900220ec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900220ee:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900220f2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900220f4:	fb04 fb0b 	mul.w	fp, r4, fp
900220f8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900220fa:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900220fe:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022100:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022104:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022108:	fb04 fa0a 	mul.w	sl, r4, sl
9002210c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022110:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022114:	44de      	add	lr, fp
90022116:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002211a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002211e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022122:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022126:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002212a:	ea4e 040a 	orr.w	r4, lr, sl
9002212e:	940b      	str	r4, [sp, #44]	@ 0x2c
90022130:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022132:	2cff      	cmp	r4, #255	@ 0xff
90022134:	d021      	beq.n	9002217a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90022136:	9c08      	ldr	r4, [sp, #32]
90022138:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002213c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002213e:	fb04 fb0b 	mul.w	fp, r4, fp
90022142:	9c08      	ldr	r4, [sp, #32]
90022144:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022148:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002214a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002214e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022152:	fb04 fa0a 	mul.w	sl, r4, sl
90022156:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002215a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002215e:	44de      	add	lr, fp
90022160:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022164:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022168:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002216c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022170:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022174:	ea4e 040a 	orr.w	r4, lr, sl
90022178:	9408      	str	r4, [sp, #32]
9002217a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002217c:	2cff      	cmp	r4, #255	@ 0xff
9002217e:	d021      	beq.n	900221c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90022180:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90022182:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90022186:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022188:	fb04 fb0b 	mul.w	fp, r4, fp
9002218c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
9002218e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022192:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022194:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022198:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002219c:	fb04 fa0a 	mul.w	sl, r4, sl
900221a0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900221a4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900221a8:	44de      	add	lr, fp
900221aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900221ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900221b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900221b6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900221ba:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900221be:	ea4e 040a 	orr.w	r4, lr, sl
900221c2:	940c      	str	r4, [sp, #48]	@ 0x30
900221c4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900221c6:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900221ca:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900221ce:	43c9      	mvns	r1, r1
900221d0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900221d4:	9c08      	ldr	r4, [sp, #32]
900221d6:	fb08 fc0c 	mul.w	ip, r8, ip
900221da:	fb02 cc0e 	mla	ip, r2, lr, ip
900221de:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900221e2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900221e4:	fb00 cc0e 	mla	ip, r0, lr, ip
900221e8:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900221ec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900221ee:	fb09 cc0e 	mla	ip, r9, lr, ip
900221f2:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900221f6:	fb08 f80e 	mul.w	r8, r8, lr
900221fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900221fe:	fa5f fe81 	uxtb.w	lr, r1
90022202:	fb02 8303 	mla	r3, r2, r3, r8
90022206:	9a08      	ldr	r2, [sp, #32]
90022208:	f8b7 8000 	ldrh.w	r8, [r7]
9002220c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022210:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90022214:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90022216:	ea4f 01c8 	mov.w	r1, r8, lsl #3
9002221a:	fb00 330a 	mla	r3, r0, sl, r3
9002221e:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90022222:	ea4f 2228 	mov.w	r2, r8, asr #8
90022226:	fb09 3900 	mla	r9, r9, r0, r3
9002222a:	ea4f 00e8 	mov.w	r0, r8, asr #3
9002222e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90022232:	b2c9      	uxtb	r1, r1
90022234:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022238:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002223c:	fb02 f20e 	mul.w	r2, r2, lr
90022240:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90022244:	fb00 f00e 	mul.w	r0, r0, lr
90022248:	1c53      	adds	r3, r2, #1
9002224a:	fb01 f10e 	mul.w	r1, r1, lr
9002224e:	ea4c 0c09 	orr.w	ip, ip, r9
90022252:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90022256:	ea4f 431c 	mov.w	r3, ip, lsr #16
9002225a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002225e:	4a60      	ldr	r2, [pc, #384]	@ (900223e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90022260:	b2db      	uxtb	r3, r3
90022262:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90022266:	1c43      	adds	r3, r0, #1
90022268:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002226c:	ea4f 231c 	mov.w	r3, ip, lsr #8
90022270:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90022274:	00db      	lsls	r3, r3, #3
90022276:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002227a:	4313      	orrs	r3, r2
9002227c:	1c4a      	adds	r2, r1, #1
9002227e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022282:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90022286:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9002228a:	ea4c 0c03 	orr.w	ip, ip, r3
9002228e:	f8a7 c000 	strh.w	ip, [r7]
90022292:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90022294:	3702      	adds	r7, #2
90022296:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90022298:	441a      	add	r2, r3
9002229a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002229c:	441d      	add	r5, r3
9002229e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900222a0:	9225      	str	r2, [sp, #148]	@ 0x94
900222a2:	3b01      	subs	r3, #1
900222a4:	9317      	str	r3, [sp, #92]	@ 0x5c
900222a6:	e699      	b.n	90021fdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900222a8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900222aa:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900222ac:	441c      	add	r4, r3
900222ae:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900222b0:	441d      	add	r5, r3
900222b2:	9b07      	ldr	r3, [sp, #28]
900222b4:	9425      	str	r4, [sp, #148]	@ 0x94
900222b6:	3b01      	subs	r3, #1
900222b8:	9307      	str	r3, [sp, #28]
900222ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900222bc:	3302      	adds	r3, #2
900222be:	930a      	str	r3, [sp, #40]	@ 0x28
900222c0:	e66c      	b.n	90021f9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900222c2:	d024      	beq.n	9002230e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
900222c4:	9b07      	ldr	r3, [sp, #28]
900222c6:	9827      	ldr	r0, [sp, #156]	@ 0x9c
900222c8:	3b01      	subs	r3, #1
900222ca:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900222cc:	fb00 4003 	mla	r0, r0, r3, r4
900222d0:	1400      	asrs	r0, r0, #16
900222d2:	f53f ae80 	bmi.w	90021fd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900222d6:	3901      	subs	r1, #1
900222d8:	4288      	cmp	r0, r1
900222da:	f6bf ae7c 	bge.w	90021fd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900222de:	9928      	ldr	r1, [sp, #160]	@ 0xa0
900222e0:	fb01 5303 	mla	r3, r1, r3, r5
900222e4:	141b      	asrs	r3, r3, #16
900222e6:	f53f ae76 	bmi.w	90021fd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900222ea:	3a01      	subs	r2, #1
900222ec:	4293      	cmp	r3, r2
900222ee:	f6bf ae72 	bge.w	90021fd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900222f2:	f8dd b01c 	ldr.w	fp, [sp, #28]
900222f6:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900222fa:	f1bb 0f00 	cmp.w	fp, #0
900222fe:	dc71      	bgt.n	900223e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90022300:	9b07      	ldr	r3, [sp, #28]
90022302:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022306:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022308:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002230c:	930a      	str	r3, [sp, #40]	@ 0x28
9002230e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90022310:	2b00      	cmp	r3, #0
90022312:	f340 81af 	ble.w	90022674 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90022316:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002231a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002231c:	ee30 0a04 	vadd.f32	s0, s0, s8
90022320:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022324:	eef0 6a62 	vmov.f32	s13, s5
90022328:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002232c:	ee31 1a05 	vadd.f32	s2, s2, s10
90022330:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022334:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
90022338:	eef0 6a43 	vmov.f32	s13, s6
9002233c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022340:	ee16 5a90 	vmov	r5, s13
90022344:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022348:	ee61 7a27 	vmul.f32	s15, s2, s15
9002234c:	ee77 2a62 	vsub.f32	s5, s14, s5
90022350:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022354:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022358:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002235c:	ee12 2a90 	vmov	r2, s5
90022360:	eef0 2a47 	vmov.f32	s5, s14
90022364:	fb92 f3f3 	sdiv	r3, r2, r3
90022368:	ee13 2a10 	vmov	r2, s6
9002236c:	9327      	str	r3, [sp, #156]	@ 0x9c
9002236e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022370:	eeb0 3a67 	vmov.f32	s6, s15
90022374:	fb92 f3f3 	sdiv	r3, r2, r3
90022378:	9328      	str	r3, [sp, #160]	@ 0xa0
9002237a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002237c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9002237e:	3b01      	subs	r3, #1
90022380:	9316      	str	r3, [sp, #88]	@ 0x58
90022382:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022384:	bf08      	it	eq
90022386:	4613      	moveq	r3, r2
90022388:	9307      	str	r3, [sp, #28]
9002238a:	e5f9      	b.n	90021f80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9002238c:	2800      	cmp	r0, #0
9002238e:	f43f ae6b 	beq.w	90022068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90022392:	f818 1001 	ldrb.w	r1, [r8, r1]
90022396:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002239a:	9108      	str	r1, [sp, #32]
9002239c:	0e09      	lsrs	r1, r1, #24
9002239e:	9110      	str	r1, [sp, #64]	@ 0x40
900223a0:	e662      	b.n	90022068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900223a2:	f113 0801 	adds.w	r8, r3, #1
900223a6:	f53f af74 	bmi.w	90022292 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900223aa:	4541      	cmp	r1, r8
900223ac:	f6ff af71 	blt.w	90022292 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900223b0:	f11c 0801 	adds.w	r8, ip, #1
900223b4:	f53f af6d 	bmi.w	90022292 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900223b8:	45c6      	cmp	lr, r8
900223ba:	f6ff af6a 	blt.w	90022292 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900223be:	b209      	sxth	r1, r1
900223c0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900223c4:	fa0f f38e 	sxth.w	r3, lr
900223c8:	9100      	str	r1, [sp, #0]
900223ca:	4639      	mov	r1, r7
900223cc:	9301      	str	r3, [sp, #4]
900223ce:	4633      	mov	r3, r6
900223d0:	e9cd 2004 	strd	r2, r0, [sp, #16]
900223d4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900223d6:	9819      	ldr	r0, [sp, #100]	@ 0x64
900223d8:	f7ff fc7b 	bl	90021cd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900223dc:	e759      	b.n	90022292 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900223de:	bf00      	nop
900223e0:	fffff800 	.word	0xfffff800
900223e4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900223e6:	f3c5 3003 	ubfx	r0, r5, #12, #4
900223ea:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900223ec:	f3c3 3203 	ubfx	r2, r3, #12, #4
900223f0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900223f2:	1427      	asrs	r7, r4, #16
900223f4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900223f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900223fa:	142b      	asrs	r3, r5, #16
900223fc:	fb01 7303 	mla	r3, r1, r3, r7
90022400:	18e7      	adds	r7, r4, r3
90022402:	5ce3      	ldrb	r3, [r4, r3]
90022404:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022408:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9002240c:	2a00      	cmp	r2, #0
9002240e:	f000 8127 	beq.w	90022660 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90022412:	f897 e001 	ldrb.w	lr, [r7, #1]
90022416:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002241a:	940d      	str	r4, [sp, #52]	@ 0x34
9002241c:	0e24      	lsrs	r4, r4, #24
9002241e:	9414      	str	r4, [sp, #80]	@ 0x50
90022420:	b170      	cbz	r0, 90022440 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90022422:	eb07 0e01 	add.w	lr, r7, r1
90022426:	5c79      	ldrb	r1, [r7, r1]
90022428:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002242c:	9109      	str	r1, [sp, #36]	@ 0x24
9002242e:	0e09      	lsrs	r1, r1, #24
90022430:	9111      	str	r1, [sp, #68]	@ 0x44
90022432:	f89e 1001 	ldrb.w	r1, [lr, #1]
90022436:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002243a:	910e      	str	r1, [sp, #56]	@ 0x38
9002243c:	0e09      	lsrs	r1, r1, #24
9002243e:	9115      	str	r1, [sp, #84]	@ 0x54
90022440:	b292      	uxth	r2, r2
90022442:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90022444:	b280      	uxth	r0, r0
90022446:	fb02 f800 	mul.w	r8, r2, r0
9002244a:	0112      	lsls	r2, r2, #4
9002244c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90022450:	eba2 0e08 	sub.w	lr, r2, r8
90022454:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90022458:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002245a:	b280      	uxth	r0, r0
9002245c:	fa1f fe8e 	uxth.w	lr, lr
90022460:	1a09      	subs	r1, r1, r0
90022462:	fb0e f202 	mul.w	r2, lr, r2
90022466:	b289      	uxth	r1, r1
90022468:	fb01 220c 	mla	r2, r1, ip, r2
9002246c:	fb00 2204 	mla	r2, r0, r4, r2
90022470:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022472:	fb08 2204 	mla	r2, r8, r4, r2
90022476:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002247a:	2a00      	cmp	r2, #0
9002247c:	f000 80e5 	beq.w	9002264a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90022480:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90022484:	d019      	beq.n	900224ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90022486:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002248a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002248e:	fb0c fa0a 	mul.w	sl, ip, sl
90022492:	fb0c fc03 	mul.w	ip, ip, r3
90022496:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002249a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002249e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900224a2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900224a6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900224aa:	4453      	add	r3, sl
900224ac:	0a3f      	lsrs	r7, r7, #8
900224ae:	0a1b      	lsrs	r3, r3, #8
900224b0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900224b4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900224b8:	433b      	orrs	r3, r7
900224ba:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900224bc:	2cff      	cmp	r4, #255	@ 0xff
900224be:	d020      	beq.n	90022502 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
900224c0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900224c2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900224c6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900224c8:	4367      	muls	r7, r4
900224ca:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900224cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900224d0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900224d4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900224d6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900224da:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900224de:	fb04 fa0a 	mul.w	sl, r4, sl
900224e2:	44bc      	add	ip, r7
900224e4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900224e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900224ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900224f0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900224f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900224f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900224fc:	ea4c 040a 	orr.w	r4, ip, sl
90022500:	940d      	str	r4, [sp, #52]	@ 0x34
90022502:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90022504:	2cff      	cmp	r4, #255	@ 0xff
90022506:	d020      	beq.n	9002254a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90022508:	9c09      	ldr	r4, [sp, #36]	@ 0x24
9002250a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002250e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90022510:	4367      	muls	r7, r4
90022512:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90022514:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022518:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002251c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002251e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022522:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022526:	fb04 fa0a 	mul.w	sl, r4, sl
9002252a:	44bc      	add	ip, r7
9002252c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022530:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022534:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022538:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002253c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022540:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022544:	ea4c 040a 	orr.w	r4, ip, sl
90022548:	9409      	str	r4, [sp, #36]	@ 0x24
9002254a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002254c:	2cff      	cmp	r4, #255	@ 0xff
9002254e:	d020      	beq.n	90022592 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90022550:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022552:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90022556:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022558:	4367      	muls	r7, r4
9002255a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002255c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022560:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022564:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022566:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002256a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002256e:	fb04 fa0a 	mul.w	sl, r4, sl
90022572:	44bc      	add	ip, r7
90022574:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022578:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002257c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022580:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022584:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022588:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002258c:	ea4c 040a 	orr.w	r4, ip, sl
90022590:	940e      	str	r4, [sp, #56]	@ 0x38
90022592:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022594:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90022598:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002259c:	43d2      	mvns	r2, r2
9002259e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900225a2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900225a4:	b2d2      	uxtb	r2, r2
900225a6:	fb0e f707 	mul.w	r7, lr, r7
900225aa:	fb01 770c 	mla	r7, r1, ip, r7
900225ae:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900225b2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900225b4:	fb00 770c 	mla	r7, r0, ip, r7
900225b8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900225bc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900225be:	fb08 770c 	mla	r7, r8, ip, r7
900225c2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900225c6:	fb0e fe0c 	mul.w	lr, lr, ip
900225ca:	0a3f      	lsrs	r7, r7, #8
900225cc:	fb01 e303 	mla	r3, r1, r3, lr
900225d0:	9909      	ldr	r1, [sp, #36]	@ 0x24
900225d2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900225d6:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900225da:	990e      	ldr	r1, [sp, #56]	@ 0x38
900225dc:	fb00 330a 	mla	r3, r0, sl, r3
900225e0:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900225e4:	fb08 3c0c 	mla	ip, r8, ip, r3
900225e8:	f8b9 3000 	ldrh.w	r3, [r9]
900225ec:	1218      	asrs	r0, r3, #8
900225ee:	10d9      	asrs	r1, r3, #3
900225f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900225f4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900225f8:	00db      	lsls	r3, r3, #3
900225fa:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900225fe:	4350      	muls	r0, r2
90022600:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90022604:	b2db      	uxtb	r3, r3
90022606:	4351      	muls	r1, r2
90022608:	ea47 070c 	orr.w	r7, r7, ip
9002260c:	4353      	muls	r3, r2
9002260e:	1c42      	adds	r2, r0, #1
90022610:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022614:	0c3a      	lsrs	r2, r7, #16
90022616:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002261a:	4a18      	ldr	r2, [pc, #96]	@ (9002267c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
9002261c:	b2c0      	uxtb	r0, r0
9002261e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90022622:	1c4a      	adds	r2, r1, #1
90022624:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022628:	0a3a      	lsrs	r2, r7, #8
9002262a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002262e:	00c9      	lsls	r1, r1, #3
90022630:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022634:	4301      	orrs	r1, r0
90022636:	1c58      	adds	r0, r3, #1
90022638:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002263c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90022640:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90022644:	4308      	orrs	r0, r1
90022646:	f8a9 0000 	strh.w	r0, [r9]
9002264a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002264c:	f109 0902 	add.w	r9, r9, #2
90022650:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90022652:	f10b 3bff 	add.w	fp, fp, #4294967295
90022656:	441a      	add	r2, r3
90022658:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002265a:	9225      	str	r2, [sp, #148]	@ 0x94
9002265c:	441d      	add	r5, r3
9002265e:	e64c      	b.n	900222fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90022660:	2800      	cmp	r0, #0
90022662:	f43f aeed 	beq.w	90022440 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90022666:	5c79      	ldrb	r1, [r7, r1]
90022668:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002266c:	9109      	str	r1, [sp, #36]	@ 0x24
9002266e:	0e09      	lsrs	r1, r1, #24
90022670:	9111      	str	r1, [sp, #68]	@ 0x44
90022672:	e6e5      	b.n	90022440 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90022674:	b01b      	add	sp, #108	@ 0x6c
90022676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002267a:	bf00      	nop
9002267c:	fffff800 	.word	0xfffff800

90022680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90022680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022684:	b085      	sub	sp, #20
90022686:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002268a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
9002268e:	2800      	cmp	r0, #0
90022690:	9103      	str	r1, [sp, #12]
90022692:	fb00 7406 	mla	r4, r0, r6, r7
90022696:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002269a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
9002269e:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900226a2:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
900226a6:	eb03 0904 	add.w	r9, r3, r4
900226aa:	9501      	str	r5, [sp, #4]
900226ac:	f2c0 8150 	blt.w	90022950 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900226b0:	4583      	cmp	fp, r0
900226b2:	f340 814d 	ble.w	90022950 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900226b6:	2f00      	cmp	r7, #0
900226b8:	f2c0 8146 	blt.w	90022948 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900226bc:	42be      	cmp	r6, r7
900226be:	f340 8143 	ble.w	90022948 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900226c2:	f813 c004 	ldrb.w	ip, [r3, r4]
900226c6:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900226ca:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900226ce:	ea4f 02ec 	mov.w	r2, ip, asr #3
900226d2:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900226d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900226da:	4355      	muls	r5, r2
900226dc:	fb0c f203 	mul.w	r2, ip, r3
900226e0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900226e4:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900226e8:	441d      	add	r5, r3
900226ea:	f102 0320 	add.w	r3, r2, #32
900226ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900226f2:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900226f6:	0a1b      	lsrs	r3, r3, #8
900226f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900226fc:	431c      	orrs	r4, r3
900226fe:	1c7b      	adds	r3, r7, #1
90022700:	f100 812b 	bmi.w	9002295a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90022704:	429e      	cmp	r6, r3
90022706:	f340 8128 	ble.w	9002295a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
9002270a:	2900      	cmp	r1, #0
9002270c:	f000 8128 	beq.w	90022960 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90022710:	9a01      	ldr	r2, [sp, #4]
90022712:	f899 3001 	ldrb.w	r3, [r9, #1]
90022716:	8855      	ldrh	r5, [r2, #2]
90022718:	ea4f 08e3 	mov.w	r8, r3, asr #3
9002271c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90022720:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022724:	fb08 f802 	mul.w	r8, r8, r2
90022728:	f64f 021f 	movw	r2, #63519	@ 0xf81f
9002272c:	435d      	muls	r5, r3
9002272e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90022732:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022736:	44d0      	add	r8, sl
90022738:	f105 0a20 	add.w	sl, r5, #32
9002273c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90022740:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90022744:	0a2d      	lsrs	r5, r5, #8
90022746:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002274a:	432a      	orrs	r2, r5
9002274c:	3001      	adds	r0, #1
9002274e:	f100 810d 	bmi.w	9002296c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022752:	4583      	cmp	fp, r0
90022754:	f340 810a 	ble.w	9002296c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022758:	f1be 0f00 	cmp.w	lr, #0
9002275c:	f000 810b 	beq.w	90022976 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90022760:	2f00      	cmp	r7, #0
90022762:	f2c0 8100 	blt.w	90022966 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022766:	42be      	cmp	r6, r7
90022768:	f340 80fd 	ble.w	90022966 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002276c:	9801      	ldr	r0, [sp, #4]
9002276e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90022772:	f819 5006 	ldrb.w	r5, [r9, r6]
90022776:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002277a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002277e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90022782:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90022786:	fb0a fa00 	mul.w	sl, sl, r0
9002278a:	fb05 f808 	mul.w	r8, r5, r8
9002278e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90022792:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90022796:	4482      	add	sl, r0
90022798:	f108 0020 	add.w	r0, r8, #32
9002279c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900227a0:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900227a4:	0a00      	lsrs	r0, r0, #8
900227a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900227aa:	ea4b 0b00 	orr.w	fp, fp, r0
900227ae:	3701      	adds	r7, #1
900227b0:	f100 80e6 	bmi.w	90022980 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900227b4:	42be      	cmp	r6, r7
900227b6:	f340 80e3 	ble.w	90022980 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900227ba:	2900      	cmp	r1, #0
900227bc:	f000 80e3 	beq.w	90022986 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
900227c0:	3601      	adds	r6, #1
900227c2:	9801      	ldr	r0, [sp, #4]
900227c4:	f819 7006 	ldrb.w	r7, [r9, r6]
900227c8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900227cc:	ea4f 09e7 	mov.w	r9, r7, asr #3
900227d0:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900227d4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900227d8:	fb09 f906 	mul.w	r9, r9, r6
900227dc:	fb07 f800 	mul.w	r8, r7, r0
900227e0:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900227e4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900227e8:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900227ec:	44d1      	add	r9, sl
900227ee:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900227f2:	f108 0020 	add.w	r0, r8, #32
900227f6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900227fa:	0a00      	lsrs	r0, r0, #8
900227fc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022800:	4330      	orrs	r0, r6
90022802:	b28e      	uxth	r6, r1
90022804:	fa1f f98e 	uxth.w	r9, lr
90022808:	ea4f 4a04 	mov.w	sl, r4, lsl #16
9002280c:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90022810:	fb06 f809 	mul.w	r8, r6, r9
90022814:	0136      	lsls	r6, r6, #4
90022816:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002281a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002281e:	9601      	str	r6, [sp, #4]
90022820:	ea4a 0404 	orr.w	r4, sl, r4
90022824:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022828:	fa1f f689 	uxth.w	r6, r9
9002282c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022830:	fb11 f90e 	smulbb	r9, r1, lr
90022834:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022838:	9602      	str	r6, [sp, #8]
9002283a:	4626      	mov	r6, r4
9002283c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90022840:	f1ce 0410 	rsb	r4, lr, #16
90022844:	ea4a 0202 	orr.w	r2, sl, r2
90022848:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002284c:	1a64      	subs	r4, r4, r1
9002284e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90022852:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022856:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002285a:	434a      	muls	r2, r1
9002285c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90022860:	ea4a 0000 	orr.w	r0, sl, r0
90022864:	9903      	ldr	r1, [sp, #12]
90022866:	fb04 2406 	mla	r4, r4, r6, r2
9002286a:	9e02      	ldr	r6, [sp, #8]
9002286c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90022870:	fb09 4200 	mla	r2, r9, r0, r4
90022874:	ea4f 440b 	mov.w	r4, fp, lsl #16
90022878:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
9002287c:	8808      	ldrh	r0, [r1, #0]
9002287e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90022882:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90022886:	ea44 0b0b 	orr.w	fp, r4, fp
9002288a:	9c01      	ldr	r4, [sp, #4]
9002288c:	b289      	uxth	r1, r1
9002288e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90022892:	fb0e 2e0b 	mla	lr, lr, fp, r2
90022896:	1ba4      	subs	r4, r4, r6
90022898:	9e01      	ldr	r6, [sp, #4]
9002289a:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002289e:	eba6 0608 	sub.w	r6, r6, r8
900228a2:	b2a4      	uxth	r4, r4
900228a4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900228a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900228ac:	b2b6      	uxth	r6, r6
900228ae:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900228b2:	4373      	muls	r3, r6
900228b4:	ea42 0e0e 	orr.w	lr, r2, lr
900228b8:	fb0c 3304 	mla	r3, ip, r4, r3
900228bc:	9c02      	ldr	r4, [sp, #8]
900228be:	fa1f f28e 	uxth.w	r2, lr
900228c2:	fb04 3505 	mla	r5, r4, r5, r3
900228c6:	10d4      	asrs	r4, r2, #3
900228c8:	fb08 5707 	mla	r7, r8, r7, r5
900228cc:	1215      	asrs	r5, r2, #8
900228ce:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900228d2:	00d2      	lsls	r2, r2, #3
900228d4:	f3c7 2707 	ubfx	r7, r7, #8, #8
900228d8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900228dc:	b2d2      	uxtb	r2, r2
900228de:	434f      	muls	r7, r1
900228e0:	1c7b      	adds	r3, r7, #1
900228e2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900228e6:	1203      	asrs	r3, r0, #8
900228e8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
900228ec:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900228f0:	b2ff      	uxtb	r7, r7
900228f2:	fb13 f307 	smulbb	r3, r3, r7
900228f6:	fb05 3501 	mla	r5, r5, r1, r3
900228fa:	10c3      	asrs	r3, r0, #3
900228fc:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90022900:	b2ad      	uxth	r5, r5
90022902:	fb13 f307 	smulbb	r3, r3, r7
90022906:	fb04 3401 	mla	r4, r4, r1, r3
9002290a:	00c3      	lsls	r3, r0, #3
9002290c:	b2db      	uxtb	r3, r3
9002290e:	b2a4      	uxth	r4, r4
90022910:	fb13 f307 	smulbb	r3, r3, r7
90022914:	fb02 3101 	mla	r1, r2, r1, r3
90022918:	1c6b      	adds	r3, r5, #1
9002291a:	1c62      	adds	r2, r4, #1
9002291c:	b289      	uxth	r1, r1
9002291e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022922:	1c4b      	adds	r3, r1, #1
90022924:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90022928:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002292c:	9a03      	ldr	r2, [sp, #12]
9002292e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022932:	0964      	lsrs	r4, r4, #5
90022934:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022938:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002293c:	432b      	orrs	r3, r5
9002293e:	4323      	orrs	r3, r4
90022940:	8013      	strh	r3, [r2, #0]
90022942:	b005      	add	sp, #20
90022944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022948:	f04f 0c00 	mov.w	ip, #0
9002294c:	4664      	mov	r4, ip
9002294e:	e6d6      	b.n	900226fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90022950:	2300      	movs	r3, #0
90022952:	469c      	mov	ip, r3
90022954:	461a      	mov	r2, r3
90022956:	461c      	mov	r4, r3
90022958:	e6f8      	b.n	9002274c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002295a:	2300      	movs	r3, #0
9002295c:	461a      	mov	r2, r3
9002295e:	e6f5      	b.n	9002274c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022960:	460b      	mov	r3, r1
90022962:	460a      	mov	r2, r1
90022964:	e6f2      	b.n	9002274c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022966:	2500      	movs	r5, #0
90022968:	46ab      	mov	fp, r5
9002296a:	e720      	b.n	900227ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
9002296c:	2700      	movs	r7, #0
9002296e:	463d      	mov	r5, r7
90022970:	4638      	mov	r0, r7
90022972:	46bb      	mov	fp, r7
90022974:	e745      	b.n	90022802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022976:	4677      	mov	r7, lr
90022978:	4675      	mov	r5, lr
9002297a:	4670      	mov	r0, lr
9002297c:	46f3      	mov	fp, lr
9002297e:	e740      	b.n	90022802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022980:	2700      	movs	r7, #0
90022982:	4638      	mov	r0, r7
90022984:	e73d      	b.n	90022802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022986:	460f      	mov	r7, r1
90022988:	4608      	mov	r0, r1
9002298a:	e73a      	b.n	90022802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

9002298c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002298c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022990:	b097      	sub	sp, #92	@ 0x5c
90022992:	9214      	str	r2, [sp, #80]	@ 0x50
90022994:	9308      	str	r3, [sp, #32]
90022996:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90022998:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
9002299c:	9015      	str	r0, [sp, #84]	@ 0x54
9002299e:	9312      	str	r3, [sp, #72]	@ 0x48
900229a0:	6850      	ldr	r0, [r2, #4]
900229a2:	9111      	str	r1, [sp, #68]	@ 0x44
900229a4:	6812      	ldr	r2, [r2, #0]
900229a6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
900229aa:	fb00 1303 	mla	r3, r0, r3, r1
900229ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900229b2:	9309      	str	r3, [sp, #36]	@ 0x24
900229b4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900229b6:	681b      	ldr	r3, [r3, #0]
900229b8:	930b      	str	r3, [sp, #44]	@ 0x2c
900229ba:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900229bc:	685b      	ldr	r3, [r3, #4]
900229be:	930c      	str	r3, [sp, #48]	@ 0x30
900229c0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900229c4:	930a      	str	r3, [sp, #40]	@ 0x28
900229c6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900229c8:	2b00      	cmp	r3, #0
900229ca:	dc03      	bgt.n	900229d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900229cc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900229ce:	2b00      	cmp	r3, #0
900229d0:	f340 83cd 	ble.w	9002316e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900229d4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900229d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900229da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900229de:	1e48      	subs	r0, r1, #1
900229e0:	1e55      	subs	r5, r2, #1
900229e2:	9b08      	ldr	r3, [sp, #32]
900229e4:	2b00      	cmp	r3, #0
900229e6:	f340 81a5 	ble.w	90022d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
900229ea:	9e21      	ldr	r6, [sp, #132]	@ 0x84
900229ec:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900229ee:	1436      	asrs	r6, r6, #16
900229f0:	ea4f 4323 	mov.w	r3, r3, asr #16
900229f4:	d406      	bmi.n	90022a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900229f6:	4286      	cmp	r6, r0
900229f8:	da04      	bge.n	90022a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900229fa:	2b00      	cmp	r3, #0
900229fc:	db02      	blt.n	90022a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900229fe:	42ab      	cmp	r3, r5
90022a00:	f2c0 8199 	blt.w	90022d36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90022a04:	3601      	adds	r6, #1
90022a06:	f100 8186 	bmi.w	90022d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022a0a:	42b1      	cmp	r1, r6
90022a0c:	f2c0 8183 	blt.w	90022d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022a10:	3301      	adds	r3, #1
90022a12:	f100 8180 	bmi.w	90022d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022a16:	429a      	cmp	r2, r3
90022a18:	f2c0 817d 	blt.w	90022d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022a1c:	9b08      	ldr	r3, [sp, #32]
90022a1e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90022a22:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90022a24:	9313      	str	r3, [sp, #76]	@ 0x4c
90022a26:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90022a28:	2b00      	cmp	r3, #0
90022a2a:	f340 81a6 	ble.w	90022d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90022a2e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022a30:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90022a32:	1418      	asrs	r0, r3, #16
90022a34:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022a36:	142d      	asrs	r5, r5, #16
90022a38:	f3c3 3103 	ubfx	r1, r3, #12, #4
90022a3c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022a3e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90022a42:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022a44:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90022a48:	f100 81fa 	bmi.w	90022e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022a4c:	f102 3eff 	add.w	lr, r2, #4294967295
90022a50:	4575      	cmp	r5, lr
90022a52:	f280 81f5 	bge.w	90022e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022a56:	2800      	cmp	r0, #0
90022a58:	f2c0 81f2 	blt.w	90022e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022a5c:	f103 3eff 	add.w	lr, r3, #4294967295
90022a60:	4570      	cmp	r0, lr
90022a62:	f280 81ed 	bge.w	90022e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022a66:	b212      	sxth	r2, r2
90022a68:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022a6a:	fa1f fe81 	uxth.w	lr, r1
90022a6e:	fb00 5002 	mla	r0, r0, r2, r5
90022a72:	ea4f 150e 	mov.w	r5, lr, lsl #4
90022a76:	eb03 0a00 	add.w	sl, r3, r0
90022a7a:	f813 9000 	ldrb.w	r9, [r3, r0]
90022a7e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90022a82:	f89a 8001 	ldrb.w	r8, [sl, #1]
90022a86:	b29b      	uxth	r3, r3
90022a88:	f1bc 0f00 	cmp.w	ip, #0
90022a8c:	f000 81bb 	beq.w	90022e06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90022a90:	f81a 4002 	ldrb.w	r4, [sl, r2]
90022a94:	eb0a 0b02 	add.w	fp, sl, r2
90022a98:	fa1f fa8c 	uxth.w	sl, ip
90022a9c:	940d      	str	r4, [sp, #52]	@ 0x34
90022a9e:	fb0a fe0e 	mul.w	lr, sl, lr
90022aa2:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022aa6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90022aaa:	eba5 050e 	sub.w	r5, r5, lr
90022aae:	940e      	str	r4, [sp, #56]	@ 0x38
90022ab0:	fa1f fa8a 	uxth.w	sl, sl
90022ab4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022ab6:	b2ad      	uxth	r5, r5
90022ab8:	eba3 030a 	sub.w	r3, r3, sl
90022abc:	fb08 f505 	mul.w	r5, r8, r5
90022ac0:	b29b      	uxth	r3, r3
90022ac2:	fb09 5303 	mla	r3, r9, r3, r5
90022ac6:	fb0a 3304 	mla	r3, sl, r4, r3
90022aca:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022acc:	fb0e 3304 	mla	r3, lr, r4, r3
90022ad0:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022ad4:	2b00      	cmp	r3, #0
90022ad6:	f000 8111 	beq.w	90022cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022ada:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022adc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90022ae0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90022ae4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90022ae8:	f000 8192 	beq.w	90022e10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90022aec:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90022af0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022af4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022af8:	fb0a fe0e 	mul.w	lr, sl, lr
90022afc:	fb09 f000 	mul.w	r0, r9, r0
90022b00:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90022b04:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90022b08:	f100 0b20 	add.w	fp, r0, #32
90022b0c:	44ce      	add	lr, r9
90022b0e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90022b12:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90022b16:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022b1a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90022b1e:	ea4e 0909 	orr.w	r9, lr, r9
90022b22:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90022b26:	8868      	ldrh	r0, [r5, #2]
90022b28:	d019      	beq.n	90022b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90022b2a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90022b2e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022b32:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022b36:	fb0a fe0e 	mul.w	lr, sl, lr
90022b3a:	fb08 f800 	mul.w	r8, r8, r0
90022b3e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90022b42:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90022b46:	f108 0b20 	add.w	fp, r8, #32
90022b4a:	4486      	add	lr, r0
90022b4c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90022b50:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90022b54:	0a00      	lsrs	r0, r0, #8
90022b56:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022b5a:	ea4e 0000 	orr.w	r0, lr, r0
90022b5e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90022b62:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90022b66:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022b6a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022b6e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90022b72:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022b76:	ea4e 0909 	orr.w	r9, lr, r9
90022b7a:	ea4a 0000 	orr.w	r0, sl, r0
90022b7e:	f1bc 0f00 	cmp.w	ip, #0
90022b82:	f000 8147 	beq.w	90022e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90022b86:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90022b8a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022b8c:	3a01      	subs	r2, #1
90022b8e:	2cff      	cmp	r4, #255	@ 0xff
90022b90:	ea4f 0242 	mov.w	r2, r2, lsl #1
90022b94:	f102 0202 	add.w	r2, r2, #2
90022b98:	eb05 0e02 	add.w	lr, r5, r2
90022b9c:	5aaa      	ldrh	r2, [r5, r2]
90022b9e:	d018      	beq.n	90022bd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90022ba0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90022ba4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022ba8:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022bac:	fb04 fa02 	mul.w	sl, r4, r2
90022bb0:	fb08 f805 	mul.w	r8, r8, r5
90022bb4:	f10a 0520 	add.w	r5, sl, #32
90022bb8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90022bbc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022bc0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90022bc4:	4442      	add	r2, r8
90022bc6:	0a2d      	lsrs	r5, r5, #8
90022bc8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90022bcc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022bd0:	432a      	orrs	r2, r5
90022bd2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022bd4:	f8be 5002 	ldrh.w	r5, [lr, #2]
90022bd8:	2cff      	cmp	r4, #255	@ 0xff
90022bda:	d01a      	beq.n	90022c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90022bdc:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90022be0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022be4:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022be8:	fb04 fa05 	mul.w	sl, r4, r5
90022bec:	fb08 f80e 	mul.w	r8, r8, lr
90022bf0:	f10a 0e20 	add.w	lr, sl, #32
90022bf4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90022bf8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022bfc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90022c00:	4445      	add	r5, r8
90022c02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022c06:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90022c0a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90022c0e:	ea45 050e 	orr.w	r5, r5, lr
90022c12:	fb1c fe01 	smulbb	lr, ip, r1
90022c16:	f1cc 0810 	rsb	r8, ip, #16
90022c1a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022c1e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022c22:	ea4f 0eee 	mov.w	lr, lr, asr #3
90022c26:	eba8 0801 	sub.w	r8, r8, r1
90022c2a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90022c2e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022c32:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90022c36:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90022c3a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90022c3e:	ea4a 0202 	orr.w	r2, sl, r2
90022c42:	4341      	muls	r1, r0
90022c44:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90022c48:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022c4c:	fb09 1108 	mla	r1, r9, r8, r1
90022c50:	ea4b 0505 	orr.w	r5, fp, r5
90022c54:	fb0c 1102 	mla	r1, ip, r2, r1
90022c58:	fb0e 1e05 	mla	lr, lr, r5, r1
90022c5c:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022c60:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90022c64:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022c68:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90022c6c:	ea42 0e0e 	orr.w	lr, r2, lr
90022c70:	fa1f f28e 	uxth.w	r2, lr
90022c74:	2bff      	cmp	r3, #255	@ 0xff
90022c76:	d103      	bne.n	90022c80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90022c78:	9912      	ldr	r1, [sp, #72]	@ 0x48
90022c7a:	29ff      	cmp	r1, #255	@ 0xff
90022c7c:	f000 80de 	beq.w	90022e3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90022c80:	990a      	ldr	r1, [sp, #40]	@ 0x28
90022c82:	1215      	asrs	r5, r2, #8
90022c84:	8838      	ldrh	r0, [r7, #0]
90022c86:	434b      	muls	r3, r1
90022c88:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022c8c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022c8e:	f103 0c01 	add.w	ip, r3, #1
90022c92:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90022c96:	ea6f 2323 	mvn.w	r3, r3, asr #8
90022c9a:	fa5f fc83 	uxtb.w	ip, r3
90022c9e:	1203      	asrs	r3, r0, #8
90022ca0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90022ca4:	fb13 f30c 	smulbb	r3, r3, ip
90022ca8:	fb05 3501 	mla	r5, r5, r1, r3
90022cac:	10c3      	asrs	r3, r0, #3
90022cae:	10d1      	asrs	r1, r2, #3
90022cb0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90022cb4:	00d2      	lsls	r2, r2, #3
90022cb6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90022cba:	b2ad      	uxth	r5, r5
90022cbc:	fb13 f30c 	smulbb	r3, r3, ip
90022cc0:	b2d2      	uxtb	r2, r2
90022cc2:	fb01 3104 	mla	r1, r1, r4, r3
90022cc6:	00c3      	lsls	r3, r0, #3
90022cc8:	b2db      	uxtb	r3, r3
90022cca:	b289      	uxth	r1, r1
90022ccc:	fb13 f30c 	smulbb	r3, r3, ip
90022cd0:	fb02 3304 	mla	r3, r2, r4, r3
90022cd4:	b29a      	uxth	r2, r3
90022cd6:	1c6b      	adds	r3, r5, #1
90022cd8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022cdc:	1c53      	adds	r3, r2, #1
90022cde:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022ce2:	1c4a      	adds	r2, r1, #1
90022ce4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022ce8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022cec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022cf0:	0949      	lsrs	r1, r1, #5
90022cf2:	432b      	orrs	r3, r5
90022cf4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022cf8:	430b      	orrs	r3, r1
90022cfa:	803b      	strh	r3, [r7, #0]
90022cfc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022cfe:	3702      	adds	r7, #2
90022d00:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90022d02:	4413      	add	r3, r2
90022d04:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90022d06:	9321      	str	r3, [sp, #132]	@ 0x84
90022d08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022d0a:	441a      	add	r2, r3
90022d0c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90022d0e:	3b01      	subs	r3, #1
90022d10:	9222      	str	r2, [sp, #136]	@ 0x88
90022d12:	9313      	str	r3, [sp, #76]	@ 0x4c
90022d14:	e687      	b.n	90022a26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022d16:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022d18:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
90022d1a:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90022d1c:	4433      	add	r3, r6
90022d1e:	9321      	str	r3, [sp, #132]	@ 0x84
90022d20:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022d22:	441c      	add	r4, r3
90022d24:	9b08      	ldr	r3, [sp, #32]
90022d26:	3b01      	subs	r3, #1
90022d28:	9422      	str	r4, [sp, #136]	@ 0x88
90022d2a:	9308      	str	r3, [sp, #32]
90022d2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022d2e:	3302      	adds	r3, #2
90022d30:	9309      	str	r3, [sp, #36]	@ 0x24
90022d32:	e656      	b.n	900229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90022d34:	d028      	beq.n	90022d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90022d36:	9b08      	ldr	r3, [sp, #32]
90022d38:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90022d3a:	3b01      	subs	r3, #1
90022d3c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90022d3e:	fb00 5003 	mla	r0, r0, r3, r5
90022d42:	1400      	asrs	r0, r0, #16
90022d44:	f53f ae6a 	bmi.w	90022a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022d48:	3901      	subs	r1, #1
90022d4a:	4288      	cmp	r0, r1
90022d4c:	f6bf ae66 	bge.w	90022a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022d50:	9924      	ldr	r1, [sp, #144]	@ 0x90
90022d52:	9822      	ldr	r0, [sp, #136]	@ 0x88
90022d54:	fb01 0303 	mla	r3, r1, r3, r0
90022d58:	141b      	asrs	r3, r3, #16
90022d5a:	f53f ae5f 	bmi.w	90022a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022d5e:	3a01      	subs	r2, #1
90022d60:	4293      	cmp	r3, r2
90022d62:	f6bf ae5b 	bge.w	90022a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022d66:	9b08      	ldr	r3, [sp, #32]
90022d68:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90022d6c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90022d70:	9313      	str	r3, [sp, #76]	@ 0x4c
90022d72:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90022d74:	2b00      	cmp	r3, #0
90022d76:	f300 8082 	bgt.w	90022e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90022d7a:	9b08      	ldr	r3, [sp, #32]
90022d7c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022d80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022d82:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022d86:	9309      	str	r3, [sp, #36]	@ 0x24
90022d88:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022d8a:	2b00      	cmp	r3, #0
90022d8c:	f340 81ef 	ble.w	9002316e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90022d90:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022d94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022d96:	ee30 0a04 	vadd.f32	s0, s0, s8
90022d9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022d9e:	eef0 6a62 	vmov.f32	s13, s5
90022da2:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022da6:	ee31 1a05 	vadd.f32	s2, s2, s10
90022daa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022dae:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90022db2:	eef0 6a43 	vmov.f32	s13, s6
90022db6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022dba:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90022dbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022dc2:	ee61 7a27 	vmul.f32	s15, s2, s15
90022dc6:	ee77 2a62 	vsub.f32	s5, s14, s5
90022dca:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022dce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022dd2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022dd6:	ee12 2a90 	vmov	r2, s5
90022dda:	eef0 2a47 	vmov.f32	s5, s14
90022dde:	fb92 f3f3 	sdiv	r3, r2, r3
90022de2:	ee13 2a10 	vmov	r2, s6
90022de6:	9323      	str	r3, [sp, #140]	@ 0x8c
90022de8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022dea:	eeb0 3a67 	vmov.f32	s6, s15
90022dee:	fb92 f3f3 	sdiv	r3, r2, r3
90022df2:	9324      	str	r3, [sp, #144]	@ 0x90
90022df4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022df6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90022df8:	3b01      	subs	r3, #1
90022dfa:	9311      	str	r3, [sp, #68]	@ 0x44
90022dfc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022dfe:	bf08      	it	eq
90022e00:	4613      	moveq	r3, r2
90022e02:	9308      	str	r3, [sp, #32]
90022e04:	e5df      	b.n	900229c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90022e06:	fb08 f505 	mul.w	r5, r8, r5
90022e0a:	fb09 5303 	mla	r3, r9, r3, r5
90022e0e:	e65f      	b.n	90022ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90022e10:	4681      	mov	r9, r0
90022e12:	e686      	b.n	90022b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022e14:	f1c1 0210 	rsb	r2, r1, #16
90022e18:	4341      	muls	r1, r0
90022e1a:	fb09 1902 	mla	r9, r9, r2, r1
90022e1e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90022e22:	ea4f 5259 	mov.w	r2, r9, lsr #21
90022e26:	ea4f 1959 	mov.w	r9, r9, lsr #5
90022e2a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022e2e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90022e32:	ea42 0909 	orr.w	r9, r2, r9
90022e36:	fa1f f289 	uxth.w	r2, r9
90022e3a:	e71b      	b.n	90022c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90022e3c:	803a      	strh	r2, [r7, #0]
90022e3e:	e75d      	b.n	90022cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022e40:	f115 0e01 	adds.w	lr, r5, #1
90022e44:	f53f af5a 	bmi.w	90022cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022e48:	4572      	cmp	r2, lr
90022e4a:	f6ff af57 	blt.w	90022cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022e4e:	f110 0e01 	adds.w	lr, r0, #1
90022e52:	f53f af53 	bmi.w	90022cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022e56:	4573      	cmp	r3, lr
90022e58:	f6ff af50 	blt.w	90022cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022e5c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022e5e:	b21b      	sxth	r3, r3
90022e60:	b212      	sxth	r2, r2
90022e62:	9502      	str	r5, [sp, #8]
90022e64:	9301      	str	r3, [sp, #4]
90022e66:	9200      	str	r2, [sp, #0]
90022e68:	e9cd 0103 	strd	r0, r1, [sp, #12]
90022e6c:	e9cd c405 	strd	ip, r4, [sp, #20]
90022e70:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90022e74:	4639      	mov	r1, r7
90022e76:	9815      	ldr	r0, [sp, #84]	@ 0x54
90022e78:	f7ff fc02 	bl	90022680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90022e7c:	e73e      	b.n	90022cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022e7e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022e80:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022e84:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022e86:	f3c3 3503 	ubfx	r5, r3, #12, #4
90022e8a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022e8c:	fa1f fc82 	uxth.w	ip, r2
90022e90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022e94:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90022e96:	ea4f 100c 	mov.w	r0, ip, lsl #4
90022e9a:	141f      	asrs	r7, r3, #16
90022e9c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022e9e:	141b      	asrs	r3, r3, #16
90022ea0:	fb01 3707 	mla	r7, r1, r7, r3
90022ea4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022ea6:	eb03 0a07 	add.w	sl, r3, r7
90022eaa:	f813 9007 	ldrb.w	r9, [r3, r7]
90022eae:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90022eb2:	f89a 8001 	ldrb.w	r8, [sl, #1]
90022eb6:	b29b      	uxth	r3, r3
90022eb8:	2d00      	cmp	r5, #0
90022eba:	f000 813d 	beq.w	90023138 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90022ebe:	f81a 4001 	ldrb.w	r4, [sl, r1]
90022ec2:	eb0a 0b01 	add.w	fp, sl, r1
90022ec6:	fa1f fa85 	uxth.w	sl, r5
90022eca:	940f      	str	r4, [sp, #60]	@ 0x3c
90022ecc:	fb0a fc0c 	mul.w	ip, sl, ip
90022ed0:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022ed4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90022ed8:	eba0 000c 	sub.w	r0, r0, ip
90022edc:	9410      	str	r4, [sp, #64]	@ 0x40
90022ede:	fa1f fa8a 	uxth.w	sl, sl
90022ee2:	b280      	uxth	r0, r0
90022ee4:	eba3 030a 	sub.w	r3, r3, sl
90022ee8:	fb08 f000 	mul.w	r0, r8, r0
90022eec:	b29b      	uxth	r3, r3
90022eee:	fb09 0303 	mla	r3, r9, r3, r0
90022ef2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90022ef4:	fb0a 3300 	mla	r3, sl, r0, r3
90022ef8:	fb0c 3304 	mla	r3, ip, r4, r3
90022efc:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022f00:	2b00      	cmp	r3, #0
90022f02:	f000 810b 	beq.w	9002311c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90022f06:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90022f08:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90022f0c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022f0e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90022f12:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90022f16:	f000 8114 	beq.w	90023142 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90022f1a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90022f1e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022f22:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90022f26:	fb0a fc0c 	mul.w	ip, sl, ip
90022f2a:	fb09 f707 	mul.w	r7, r9, r7
90022f2e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90022f32:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90022f36:	f107 0b20 	add.w	fp, r7, #32
90022f3a:	44cc      	add	ip, r9
90022f3c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90022f40:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022f44:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022f48:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90022f4c:	ea4c 0909 	orr.w	r9, ip, r9
90022f50:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90022f54:	8847      	ldrh	r7, [r0, #2]
90022f56:	d019      	beq.n	90022f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90022f58:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90022f5c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022f60:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90022f64:	fb0a fc0c 	mul.w	ip, sl, ip
90022f68:	fb08 f807 	mul.w	r8, r8, r7
90022f6c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90022f70:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90022f74:	f108 0b20 	add.w	fp, r8, #32
90022f78:	44bc      	add	ip, r7
90022f7a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90022f7e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022f82:	0a3f      	lsrs	r7, r7, #8
90022f84:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90022f88:	ea4c 0707 	orr.w	r7, ip, r7
90022f8c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90022f90:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90022f94:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90022f98:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90022f9c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022fa0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022fa4:	ea4c 0909 	orr.w	r9, ip, r9
90022fa8:	ea4a 0707 	orr.w	r7, sl, r7
90022fac:	2d00      	cmp	r5, #0
90022fae:	f000 80ca 	beq.w	90023146 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90022fb2:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90022fb6:	3901      	subs	r1, #1
90022fb8:	0049      	lsls	r1, r1, #1
90022fba:	3102      	adds	r1, #2
90022fbc:	eb00 0c01 	add.w	ip, r0, r1
90022fc0:	5a41      	ldrh	r1, [r0, r1]
90022fc2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90022fc4:	28ff      	cmp	r0, #255	@ 0xff
90022fc6:	d019      	beq.n	90022ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90022fc8:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90022fcc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022fce:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022fd2:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022fd6:	fb04 fa01 	mul.w	sl, r4, r1
90022fda:	fb08 f800 	mul.w	r8, r8, r0
90022fde:	f10a 0020 	add.w	r0, sl, #32
90022fe2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90022fe6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022fea:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90022fee:	4441      	add	r1, r8
90022ff0:	0a00      	lsrs	r0, r0, #8
90022ff2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90022ff6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022ffa:	4301      	orrs	r1, r0
90022ffc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022ffe:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90023002:	2cff      	cmp	r4, #255	@ 0xff
90023004:	d01a      	beq.n	9002303c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90023006:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
9002300a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002300e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023012:	fb04 fa00 	mul.w	sl, r4, r0
90023016:	fb08 f80c 	mul.w	r8, r8, ip
9002301a:	f10a 0c20 	add.w	ip, sl, #32
9002301e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90023022:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023026:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002302a:	4440      	add	r0, r8
9002302c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023030:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90023034:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90023038:	ea40 000c 	orr.w	r0, r0, ip
9002303c:	fb15 fc02 	smulbb	ip, r5, r2
90023040:	f1c5 0810 	rsb	r8, r5, #16
90023044:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023048:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002304c:	ea4f 0cec 	mov.w	ip, ip, asr #3
90023050:	eba8 0802 	sub.w	r8, r8, r2
90023054:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023058:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002305c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90023060:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023064:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90023068:	ea4a 0101 	orr.w	r1, sl, r1
9002306c:	437a      	muls	r2, r7
9002306e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90023072:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023076:	fb09 2208 	mla	r2, r9, r8, r2
9002307a:	ea4b 0000 	orr.w	r0, fp, r0
9002307e:	fb05 2201 	mla	r2, r5, r1, r2
90023082:	fb0c 2200 	mla	r2, ip, r0, r2
90023086:	0d57      	lsrs	r7, r2, #21
90023088:	0952      	lsrs	r2, r2, #5
9002308a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002308e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023092:	433a      	orrs	r2, r7
90023094:	2bff      	cmp	r3, #255	@ 0xff
90023096:	b292      	uxth	r2, r2
90023098:	d102      	bne.n	900230a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002309a:	9912      	ldr	r1, [sp, #72]	@ 0x48
9002309c:	29ff      	cmp	r1, #255	@ 0xff
9002309e:	d063      	beq.n	90023168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
900230a0:	980a      	ldr	r0, [sp, #40]	@ 0x28
900230a2:	1215      	asrs	r5, r2, #8
900230a4:	f8be 1000 	ldrh.w	r1, [lr]
900230a8:	4343      	muls	r3, r0
900230aa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900230ac:	10cf      	asrs	r7, r1, #3
900230ae:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900230b2:	1c58      	adds	r0, r3, #1
900230b4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900230b8:	eb00 2323 	add.w	r3, r0, r3, asr #8
900230bc:	1208      	asrs	r0, r1, #8
900230be:	ea6f 2323 	mvn.w	r3, r3, asr #8
900230c2:	00c9      	lsls	r1, r1, #3
900230c4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900230c8:	b2db      	uxtb	r3, r3
900230ca:	b2c9      	uxtb	r1, r1
900230cc:	fb10 f003 	smulbb	r0, r0, r3
900230d0:	fb11 f103 	smulbb	r1, r1, r3
900230d4:	fb05 0504 	mla	r5, r5, r4, r0
900230d8:	10d0      	asrs	r0, r2, #3
900230da:	fb17 f703 	smulbb	r7, r7, r3
900230de:	00d2      	lsls	r2, r2, #3
900230e0:	b2ad      	uxth	r5, r5
900230e2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900230e6:	b2d2      	uxtb	r2, r2
900230e8:	fb00 7004 	mla	r0, r0, r4, r7
900230ec:	1c6b      	adds	r3, r5, #1
900230ee:	fb02 1204 	mla	r2, r2, r4, r1
900230f2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900230f6:	b292      	uxth	r2, r2
900230f8:	b280      	uxth	r0, r0
900230fa:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900230fe:	1c57      	adds	r7, r2, #1
90023100:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90023104:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023108:	433d      	orrs	r5, r7
9002310a:	1c47      	adds	r7, r0, #1
9002310c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90023110:	097f      	lsrs	r7, r7, #5
90023112:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023116:	433d      	orrs	r5, r7
90023118:	f8ae 5000 	strh.w	r5, [lr]
9002311c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002311e:	f10e 0e02 	add.w	lr, lr, #2
90023122:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90023124:	4413      	add	r3, r2
90023126:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90023128:	9321      	str	r3, [sp, #132]	@ 0x84
9002312a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002312c:	441a      	add	r2, r3
9002312e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90023130:	3b01      	subs	r3, #1
90023132:	9222      	str	r2, [sp, #136]	@ 0x88
90023134:	9313      	str	r3, [sp, #76]	@ 0x4c
90023136:	e61c      	b.n	90022d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90023138:	fb08 f000 	mul.w	r0, r8, r0
9002313c:	fb09 0303 	mla	r3, r9, r3, r0
90023140:	e6dc      	b.n	90022efc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90023142:	46b9      	mov	r9, r7
90023144:	e704      	b.n	90022f50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90023146:	f1c2 0110 	rsb	r1, r2, #16
9002314a:	437a      	muls	r2, r7
9002314c:	fb09 2901 	mla	r9, r9, r1, r2
90023150:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023154:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023158:	ea4f 1259 	mov.w	r2, r9, lsr #5
9002315c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023160:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023164:	4302      	orrs	r2, r0
90023166:	e795      	b.n	90023094 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90023168:	f8ae 2000 	strh.w	r2, [lr]
9002316c:	e7d6      	b.n	9002311c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
9002316e:	b017      	add	sp, #92	@ 0x5c
90023170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023174 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90023174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023178:	b085      	sub	sp, #20
9002317a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002317e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90023182:	2800      	cmp	r0, #0
90023184:	9103      	str	r1, [sp, #12]
90023186:	fb00 7406 	mla	r4, r0, r6, r7
9002318a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002318e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90023192:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90023196:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002319a:	eb02 0904 	add.w	r9, r2, r4
9002319e:	9501      	str	r5, [sp, #4]
900231a0:	f2c0 8141 	blt.w	90023426 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900231a4:	4583      	cmp	fp, r0
900231a6:	f340 813e 	ble.w	90023426 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900231aa:	2f00      	cmp	r7, #0
900231ac:	f2c0 8137 	blt.w	9002341e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900231b0:	42be      	cmp	r6, r7
900231b2:	f340 8134 	ble.w	9002341e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900231b6:	f812 c004 	ldrb.w	ip, [r2, r4]
900231ba:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900231be:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900231c2:	ea4f 02ec 	mov.w	r2, ip, asr #3
900231c6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900231ca:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900231ce:	4355      	muls	r5, r2
900231d0:	fb0c f203 	mul.w	r2, ip, r3
900231d4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900231d8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900231dc:	441d      	add	r5, r3
900231de:	f102 0320 	add.w	r3, r2, #32
900231e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900231e6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900231ea:	0a1b      	lsrs	r3, r3, #8
900231ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900231f0:	431c      	orrs	r4, r3
900231f2:	1c7b      	adds	r3, r7, #1
900231f4:	f100 811c 	bmi.w	90023430 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900231f8:	429e      	cmp	r6, r3
900231fa:	f340 8119 	ble.w	90023430 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900231fe:	2900      	cmp	r1, #0
90023200:	f000 8119 	beq.w	90023436 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90023204:	9a01      	ldr	r2, [sp, #4]
90023206:	f899 3001 	ldrb.w	r3, [r9, #1]
9002320a:	8855      	ldrh	r5, [r2, #2]
9002320c:	ea4f 08e3 	mov.w	r8, r3, asr #3
90023210:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90023214:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023218:	fb08 f802 	mul.w	r8, r8, r2
9002321c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90023220:	435d      	muls	r5, r3
90023222:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90023226:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002322a:	44d0      	add	r8, sl
9002322c:	f105 0a20 	add.w	sl, r5, #32
90023230:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90023234:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90023238:	0a2d      	lsrs	r5, r5, #8
9002323a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002323e:	432a      	orrs	r2, r5
90023240:	3001      	adds	r0, #1
90023242:	f100 80fe 	bmi.w	90023442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90023246:	4583      	cmp	fp, r0
90023248:	f340 80fb 	ble.w	90023442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002324c:	f1be 0f00 	cmp.w	lr, #0
90023250:	f000 80fc 	beq.w	9002344c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90023254:	2f00      	cmp	r7, #0
90023256:	f2c0 80f1 	blt.w	9002343c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
9002325a:	42be      	cmp	r6, r7
9002325c:	f340 80ee 	ble.w	9002343c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90023260:	9801      	ldr	r0, [sp, #4]
90023262:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90023266:	f819 5006 	ldrb.w	r5, [r9, r6]
9002326a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002326e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90023272:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90023276:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002327a:	fb0a fa00 	mul.w	sl, sl, r0
9002327e:	fb05 f808 	mul.w	r8, r5, r8
90023282:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90023286:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002328a:	4482      	add	sl, r0
9002328c:	f108 0020 	add.w	r0, r8, #32
90023290:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023294:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90023298:	0a00      	lsrs	r0, r0, #8
9002329a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002329e:	ea4b 0b00 	orr.w	fp, fp, r0
900232a2:	3701      	adds	r7, #1
900232a4:	f100 80d7 	bmi.w	90023456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900232a8:	42be      	cmp	r6, r7
900232aa:	f340 80d4 	ble.w	90023456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900232ae:	2900      	cmp	r1, #0
900232b0:	f000 80d4 	beq.w	9002345c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
900232b4:	3601      	adds	r6, #1
900232b6:	9801      	ldr	r0, [sp, #4]
900232b8:	f819 7006 	ldrb.w	r7, [r9, r6]
900232bc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900232c0:	ea4f 09e7 	mov.w	r9, r7, asr #3
900232c4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900232c8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900232cc:	fb09 f906 	mul.w	r9, r9, r6
900232d0:	fb07 f800 	mul.w	r8, r7, r0
900232d4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900232d8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900232dc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900232e0:	44d1      	add	r9, sl
900232e2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900232e6:	f108 0020 	add.w	r0, r8, #32
900232ea:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900232ee:	0a00      	lsrs	r0, r0, #8
900232f0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900232f4:	4330      	orrs	r0, r6
900232f6:	b28e      	uxth	r6, r1
900232f8:	fa1f f98e 	uxth.w	r9, lr
900232fc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90023300:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90023304:	fb06 f809 	mul.w	r8, r6, r9
90023308:	0136      	lsls	r6, r6, #4
9002330a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002330e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90023312:	9601      	str	r6, [sp, #4]
90023314:	ea4a 0404 	orr.w	r4, sl, r4
90023318:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002331c:	fa1f f689 	uxth.w	r6, r9
90023320:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023324:	fb11 f90e 	smulbb	r9, r1, lr
90023328:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002332c:	9602      	str	r6, [sp, #8]
9002332e:	4626      	mov	r6, r4
90023330:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90023334:	f1ce 0410 	rsb	r4, lr, #16
90023338:	ea4a 0202 	orr.w	r2, sl, r2
9002333c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023340:	1a64      	subs	r4, r4, r1
90023342:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90023346:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002334a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002334e:	434a      	muls	r2, r1
90023350:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90023354:	ea4a 0000 	orr.w	r0, sl, r0
90023358:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
9002335c:	fb04 2406 	mla	r4, r4, r6, r2
90023360:	9903      	ldr	r1, [sp, #12]
90023362:	fb09 4200 	mla	r2, r9, r0, r4
90023366:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002336a:	9801      	ldr	r0, [sp, #4]
9002336c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90023370:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023374:	8809      	ldrh	r1, [r1, #0]
90023376:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
9002337a:	ea44 0b0b 	orr.w	fp, r4, fp
9002337e:	9c02      	ldr	r4, [sp, #8]
90023380:	1b00      	subs	r0, r0, r4
90023382:	9c01      	ldr	r4, [sp, #4]
90023384:	fb0e 2e0b 	mla	lr, lr, fp, r2
90023388:	eba4 0608 	sub.w	r6, r4, r8
9002338c:	b280      	uxth	r0, r0
9002338e:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023392:	b2b6      	uxth	r6, r6
90023394:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023398:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002339c:	4373      	muls	r3, r6
9002339e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900233a2:	fb0c 3300 	mla	r3, ip, r0, r3
900233a6:	9802      	ldr	r0, [sp, #8]
900233a8:	ea42 0e0e 	orr.w	lr, r2, lr
900233ac:	fb00 3505 	mla	r5, r0, r5, r3
900233b0:	120b      	asrs	r3, r1, #8
900233b2:	10c8      	asrs	r0, r1, #3
900233b4:	fb08 5707 	mla	r7, r8, r7, r5
900233b8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900233bc:	00c9      	lsls	r1, r1, #3
900233be:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900233c2:	ea6f 2727 	mvn.w	r7, r7, asr #8
900233c6:	fa1f f28e 	uxth.w	r2, lr
900233ca:	b2c9      	uxtb	r1, r1
900233cc:	b2ff      	uxtb	r7, r7
900233ce:	437b      	muls	r3, r7
900233d0:	4378      	muls	r0, r7
900233d2:	434f      	muls	r7, r1
900233d4:	1c59      	adds	r1, r3, #1
900233d6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900233da:	1213      	asrs	r3, r2, #8
900233dc:	f023 0307 	bic.w	r3, r3, #7
900233e0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900233e4:	1c41      	adds	r1, r0, #1
900233e6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900233ea:	10d1      	asrs	r1, r2, #3
900233ec:	021b      	lsls	r3, r3, #8
900233ee:	f021 0103 	bic.w	r1, r1, #3
900233f2:	00d2      	lsls	r2, r2, #3
900233f4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900233f8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900233fc:	00c9      	lsls	r1, r1, #3
900233fe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023402:	430b      	orrs	r3, r1
90023404:	1c79      	adds	r1, r7, #1
90023406:	eb01 2717 	add.w	r7, r1, r7, lsr #8
9002340a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9002340e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90023412:	431a      	orrs	r2, r3
90023414:	9b03      	ldr	r3, [sp, #12]
90023416:	801a      	strh	r2, [r3, #0]
90023418:	b005      	add	sp, #20
9002341a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002341e:	f04f 0c00 	mov.w	ip, #0
90023422:	4664      	mov	r4, ip
90023424:	e6e5      	b.n	900231f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90023426:	2300      	movs	r3, #0
90023428:	469c      	mov	ip, r3
9002342a:	461a      	mov	r2, r3
9002342c:	461c      	mov	r4, r3
9002342e:	e707      	b.n	90023240 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90023430:	2300      	movs	r3, #0
90023432:	461a      	mov	r2, r3
90023434:	e704      	b.n	90023240 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90023436:	460b      	mov	r3, r1
90023438:	460a      	mov	r2, r1
9002343a:	e701      	b.n	90023240 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002343c:	2500      	movs	r5, #0
9002343e:	46ab      	mov	fp, r5
90023440:	e72f      	b.n	900232a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90023442:	2700      	movs	r7, #0
90023444:	463d      	mov	r5, r7
90023446:	4638      	mov	r0, r7
90023448:	46bb      	mov	fp, r7
9002344a:	e754      	b.n	900232f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002344c:	4677      	mov	r7, lr
9002344e:	4675      	mov	r5, lr
90023450:	4670      	mov	r0, lr
90023452:	46f3      	mov	fp, lr
90023454:	e74f      	b.n	900232f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023456:	2700      	movs	r7, #0
90023458:	4638      	mov	r0, r7
9002345a:	e74c      	b.n	900232f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002345c:	460f      	mov	r7, r1
9002345e:	4608      	mov	r0, r1
90023460:	e749      	b.n	900232f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90023464 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023468:	b093      	sub	sp, #76	@ 0x4c
9002346a:	9210      	str	r2, [sp, #64]	@ 0x40
9002346c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9002346e:	9011      	str	r0, [sp, #68]	@ 0x44
90023470:	910e      	str	r1, [sp, #56]	@ 0x38
90023472:	6850      	ldr	r0, [r2, #4]
90023474:	9306      	str	r3, [sp, #24]
90023476:	6812      	ldr	r2, [r2, #0]
90023478:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9002347c:	fb00 1303 	mla	r3, r0, r3, r1
90023480:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023484:	9307      	str	r3, [sp, #28]
90023486:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023488:	681b      	ldr	r3, [r3, #0]
9002348a:	9308      	str	r3, [sp, #32]
9002348c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002348e:	685b      	ldr	r3, [r3, #4]
90023490:	9309      	str	r3, [sp, #36]	@ 0x24
90023492:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023494:	2b00      	cmp	r3, #0
90023496:	dc03      	bgt.n	900234a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023498:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002349a:	2b00      	cmp	r3, #0
9002349c:	f340 83b6 	ble.w	90023c0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900234a0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900234a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900234a6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900234aa:	1e48      	subs	r0, r1, #1
900234ac:	1e55      	subs	r5, r2, #1
900234ae:	9b06      	ldr	r3, [sp, #24]
900234b0:	2b00      	cmp	r3, #0
900234b2:	f340 8165 	ble.w	90023780 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900234b6:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
900234b8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900234ba:	1436      	asrs	r6, r6, #16
900234bc:	ea4f 4323 	mov.w	r3, r3, asr #16
900234c0:	d406      	bmi.n	900234d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900234c2:	4286      	cmp	r6, r0
900234c4:	da04      	bge.n	900234d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900234c6:	2b00      	cmp	r3, #0
900234c8:	db02      	blt.n	900234d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900234ca:	42ab      	cmp	r3, r5
900234cc:	f2c0 8159 	blt.w	90023782 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900234d0:	3601      	adds	r6, #1
900234d2:	f100 8146 	bmi.w	90023762 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900234d6:	42b1      	cmp	r1, r6
900234d8:	f2c0 8143 	blt.w	90023762 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900234dc:	3301      	adds	r3, #1
900234de:	f100 8140 	bmi.w	90023762 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900234e2:	429a      	cmp	r2, r3
900234e4:	f2c0 813d 	blt.w	90023762 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900234e8:	9b06      	ldr	r3, [sp, #24]
900234ea:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900234ee:	9f07      	ldr	r7, [sp, #28]
900234f0:	930f      	str	r3, [sp, #60]	@ 0x3c
900234f2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900234f4:	2b00      	cmp	r3, #0
900234f6:	f340 8166 	ble.w	900237c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900234fa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900234fc:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900234fe:	1418      	asrs	r0, r3, #16
90023500:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023502:	142d      	asrs	r5, r5, #16
90023504:	f3c3 3103 	ubfx	r1, r3, #12, #4
90023508:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002350a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002350e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023510:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90023514:	f100 81f0 	bmi.w	900238f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023518:	f102 3eff 	add.w	lr, r2, #4294967295
9002351c:	4575      	cmp	r5, lr
9002351e:	f280 81eb 	bge.w	900238f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023522:	2800      	cmp	r0, #0
90023524:	f2c0 81e8 	blt.w	900238f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023528:	f103 3eff 	add.w	lr, r3, #4294967295
9002352c:	4570      	cmp	r0, lr
9002352e:	f280 81e3 	bge.w	900238f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023532:	b212      	sxth	r2, r2
90023534:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023536:	fa1f fe81 	uxth.w	lr, r1
9002353a:	fb00 5002 	mla	r0, r0, r2, r5
9002353e:	ea4f 150e 	mov.w	r5, lr, lsl #4
90023542:	eb03 0a00 	add.w	sl, r3, r0
90023546:	f813 9000 	ldrb.w	r9, [r3, r0]
9002354a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
9002354e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90023552:	b29b      	uxth	r3, r3
90023554:	f1bc 0f00 	cmp.w	ip, #0
90023558:	f000 817b 	beq.w	90023852 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002355c:	f81a 4002 	ldrb.w	r4, [sl, r2]
90023560:	eb0a 0b02 	add.w	fp, sl, r2
90023564:	fa1f fa8c 	uxth.w	sl, ip
90023568:	940a      	str	r4, [sp, #40]	@ 0x28
9002356a:	fb0a fe0e 	mul.w	lr, sl, lr
9002356e:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023572:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90023576:	eba5 050e 	sub.w	r5, r5, lr
9002357a:	940b      	str	r4, [sp, #44]	@ 0x2c
9002357c:	fa1f fa8a 	uxth.w	sl, sl
90023580:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023582:	b2ad      	uxth	r5, r5
90023584:	eba3 030a 	sub.w	r3, r3, sl
90023588:	fb08 f505 	mul.w	r5, r8, r5
9002358c:	b29b      	uxth	r3, r3
9002358e:	fb09 5303 	mla	r3, r9, r3, r5
90023592:	fb0a 3304 	mla	r3, sl, r4, r3
90023596:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023598:	fb0e 3304 	mla	r3, lr, r4, r3
9002359c:	f3c3 2307 	ubfx	r3, r3, #8, #8
900235a0:	2b00      	cmp	r3, #0
900235a2:	f000 80d1 	beq.w	90023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900235a6:	9c08      	ldr	r4, [sp, #32]
900235a8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900235ac:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900235b0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900235b4:	f000 8152 	beq.w	9002385c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900235b8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900235bc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900235c0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900235c4:	fb0a fe0e 	mul.w	lr, sl, lr
900235c8:	fb09 f000 	mul.w	r0, r9, r0
900235cc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900235d0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900235d4:	f100 0b20 	add.w	fp, r0, #32
900235d8:	44ce      	add	lr, r9
900235da:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900235de:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900235e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
900235e6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900235ea:	ea4e 0909 	orr.w	r9, lr, r9
900235ee:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900235f2:	8868      	ldrh	r0, [r5, #2]
900235f4:	d019      	beq.n	9002362a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900235f6:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900235fa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900235fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023602:	fb0a fe0e 	mul.w	lr, sl, lr
90023606:	fb08 f800 	mul.w	r8, r8, r0
9002360a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002360e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90023612:	f108 0b20 	add.w	fp, r8, #32
90023616:	4486      	add	lr, r0
90023618:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
9002361c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023620:	0a00      	lsrs	r0, r0, #8
90023622:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023626:	ea4e 0000 	orr.w	r0, lr, r0
9002362a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002362e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90023632:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023636:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002363a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002363e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023642:	ea4e 0909 	orr.w	r9, lr, r9
90023646:	ea4a 0000 	orr.w	r0, sl, r0
9002364a:	f1bc 0f00 	cmp.w	ip, #0
9002364e:	f000 8107 	beq.w	90023860 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90023652:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90023656:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023658:	3a01      	subs	r2, #1
9002365a:	2cff      	cmp	r4, #255	@ 0xff
9002365c:	ea4f 0242 	mov.w	r2, r2, lsl #1
90023660:	f102 0202 	add.w	r2, r2, #2
90023664:	eb05 0e02 	add.w	lr, r5, r2
90023668:	5aaa      	ldrh	r2, [r5, r2]
9002366a:	d018      	beq.n	9002369e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
9002366c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90023670:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023674:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023678:	fb04 fa02 	mul.w	sl, r4, r2
9002367c:	fb08 f805 	mul.w	r8, r8, r5
90023680:	f10a 0520 	add.w	r5, sl, #32
90023684:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90023688:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002368c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90023690:	4442      	add	r2, r8
90023692:	0a2d      	lsrs	r5, r5, #8
90023694:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90023698:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002369c:	432a      	orrs	r2, r5
9002369e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900236a0:	f8be 5002 	ldrh.w	r5, [lr, #2]
900236a4:	2cff      	cmp	r4, #255	@ 0xff
900236a6:	d01a      	beq.n	900236de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
900236a8:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
900236ac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900236b0:	ea4f 08e4 	mov.w	r8, r4, asr #3
900236b4:	fb04 fa05 	mul.w	sl, r4, r5
900236b8:	fb08 f80e 	mul.w	r8, r8, lr
900236bc:	f10a 0e20 	add.w	lr, sl, #32
900236c0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900236c4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900236c8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900236cc:	4445      	add	r5, r8
900236ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900236d2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900236d6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900236da:	ea45 050e 	orr.w	r5, r5, lr
900236de:	fb1c fe01 	smulbb	lr, ip, r1
900236e2:	f1cc 0810 	rsb	r8, ip, #16
900236e6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900236ea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900236ee:	ea4f 0eee 	mov.w	lr, lr, asr #3
900236f2:	eba8 0801 	sub.w	r8, r8, r1
900236f6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900236fa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900236fe:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90023702:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90023706:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002370a:	ea4a 0202 	orr.w	r2, sl, r2
9002370e:	4341      	muls	r1, r0
90023710:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90023714:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023718:	fb09 1108 	mla	r1, r9, r8, r1
9002371c:	ea4b 0505 	orr.w	r5, fp, r5
90023720:	fb0c 1102 	mla	r1, ip, r2, r1
90023724:	fb0e 1e05 	mla	lr, lr, r5, r1
90023728:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002372c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023730:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023734:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023738:	ea42 0e0e 	orr.w	lr, r2, lr
9002373c:	fa1f f28e 	uxth.w	r2, lr
90023740:	2bff      	cmp	r3, #255	@ 0xff
90023742:	f040 80a1 	bne.w	90023888 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90023746:	803a      	strh	r2, [r7, #0]
90023748:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002374a:	3702      	adds	r7, #2
9002374c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
9002374e:	4413      	add	r3, r2
90023750:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90023752:	931d      	str	r3, [sp, #116]	@ 0x74
90023754:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023756:	441a      	add	r2, r3
90023758:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002375a:	3b01      	subs	r3, #1
9002375c:	921e      	str	r2, [sp, #120]	@ 0x78
9002375e:	930f      	str	r3, [sp, #60]	@ 0x3c
90023760:	e6c7      	b.n	900234f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023762:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023764:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90023766:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90023768:	4433      	add	r3, r6
9002376a:	931d      	str	r3, [sp, #116]	@ 0x74
9002376c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002376e:	441c      	add	r4, r3
90023770:	9b06      	ldr	r3, [sp, #24]
90023772:	3b01      	subs	r3, #1
90023774:	941e      	str	r4, [sp, #120]	@ 0x78
90023776:	9306      	str	r3, [sp, #24]
90023778:	9b07      	ldr	r3, [sp, #28]
9002377a:	3302      	adds	r3, #2
9002377c:	9307      	str	r3, [sp, #28]
9002377e:	e696      	b.n	900234ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023780:	d028      	beq.n	900237d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023782:	9b06      	ldr	r3, [sp, #24]
90023784:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90023786:	3b01      	subs	r3, #1
90023788:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
9002378a:	fb00 5003 	mla	r0, r0, r3, r5
9002378e:	1400      	asrs	r0, r0, #16
90023790:	f53f aeaa 	bmi.w	900234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023794:	3901      	subs	r1, #1
90023796:	4288      	cmp	r0, r1
90023798:	f6bf aea6 	bge.w	900234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002379c:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002379e:	981e      	ldr	r0, [sp, #120]	@ 0x78
900237a0:	fb01 0303 	mla	r3, r1, r3, r0
900237a4:	141b      	asrs	r3, r3, #16
900237a6:	f53f ae9f 	bmi.w	900234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900237aa:	3a01      	subs	r2, #1
900237ac:	4293      	cmp	r3, r2
900237ae:	f6bf ae9b 	bge.w	900234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900237b2:	9b06      	ldr	r3, [sp, #24]
900237b4:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900237b8:	f8dd e01c 	ldr.w	lr, [sp, #28]
900237bc:	930f      	str	r3, [sp, #60]	@ 0x3c
900237be:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900237c0:	2b00      	cmp	r3, #0
900237c2:	f300 80b6 	bgt.w	90023932 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
900237c6:	9b06      	ldr	r3, [sp, #24]
900237c8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900237cc:	9b07      	ldr	r3, [sp, #28]
900237ce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900237d2:	9307      	str	r3, [sp, #28]
900237d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900237d6:	2b00      	cmp	r3, #0
900237d8:	f340 8218 	ble.w	90023c0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900237dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900237e0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900237e2:	ee30 0a04 	vadd.f32	s0, s0, s8
900237e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900237ea:	eef0 6a62 	vmov.f32	s13, s5
900237ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
900237f2:	ee31 1a05 	vadd.f32	s2, s2, s10
900237f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900237fa:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
900237fe:	eef0 6a43 	vmov.f32	s13, s6
90023802:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023806:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
9002380a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002380e:	ee61 7a27 	vmul.f32	s15, s2, s15
90023812:	ee77 2a62 	vsub.f32	s5, s14, s5
90023816:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002381a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002381e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023822:	ee12 2a90 	vmov	r2, s5
90023826:	eef0 2a47 	vmov.f32	s5, s14
9002382a:	fb92 f3f3 	sdiv	r3, r2, r3
9002382e:	ee13 2a10 	vmov	r2, s6
90023832:	931f      	str	r3, [sp, #124]	@ 0x7c
90023834:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90023836:	eeb0 3a67 	vmov.f32	s6, s15
9002383a:	fb92 f3f3 	sdiv	r3, r2, r3
9002383e:	9320      	str	r3, [sp, #128]	@ 0x80
90023840:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023842:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90023844:	3b01      	subs	r3, #1
90023846:	930e      	str	r3, [sp, #56]	@ 0x38
90023848:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002384a:	bf08      	it	eq
9002384c:	4613      	moveq	r3, r2
9002384e:	9306      	str	r3, [sp, #24]
90023850:	e61f      	b.n	90023492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90023852:	fb08 f505 	mul.w	r5, r8, r5
90023856:	fb09 5303 	mla	r3, r9, r3, r5
9002385a:	e69f      	b.n	9002359c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
9002385c:	4681      	mov	r9, r0
9002385e:	e6c6      	b.n	900235ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90023860:	f1c1 0210 	rsb	r2, r1, #16
90023864:	4341      	muls	r1, r0
90023866:	fb09 1902 	mla	r9, r9, r2, r1
9002386a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002386e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90023872:	ea4f 1959 	mov.w	r9, r9, lsr #5
90023876:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002387a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002387e:	ea42 0909 	orr.w	r9, r2, r9
90023882:	fa1f f289 	uxth.w	r2, r9
90023886:	e75b      	b.n	90023740 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90023888:	f8b7 c000 	ldrh.w	ip, [r7]
9002388c:	43db      	mvns	r3, r3
9002388e:	ea4f 202c 	mov.w	r0, ip, asr #8
90023892:	fa5f fe83 	uxtb.w	lr, r3
90023896:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002389a:	ea4f 05ec 	mov.w	r5, ip, asr #3
9002389e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
900238a2:	fb00 f00e 	mul.w	r0, r0, lr
900238a6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900238aa:	b2db      	uxtb	r3, r3
900238ac:	1c41      	adds	r1, r0, #1
900238ae:	fb05 f50e 	mul.w	r5, r5, lr
900238b2:	fb03 f30e 	mul.w	r3, r3, lr
900238b6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900238ba:	1211      	asrs	r1, r2, #8
900238bc:	f021 0107 	bic.w	r1, r1, #7
900238c0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900238c4:	48d3      	ldr	r0, [pc, #844]	@ (90023c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900238c6:	b2c9      	uxtb	r1, r1
900238c8:	ea00 2001 	and.w	r0, r0, r1, lsl #8
900238cc:	1c69      	adds	r1, r5, #1
900238ce:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900238d2:	10d1      	asrs	r1, r2, #3
900238d4:	00d2      	lsls	r2, r2, #3
900238d6:	f021 0103 	bic.w	r1, r1, #3
900238da:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900238de:	00c9      	lsls	r1, r1, #3
900238e0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900238e4:	4301      	orrs	r1, r0
900238e6:	1c58      	adds	r0, r3, #1
900238e8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900238ec:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900238f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900238f4:	430a      	orrs	r2, r1
900238f6:	e726      	b.n	90023746 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900238f8:	f115 0e01 	adds.w	lr, r5, #1
900238fc:	f53f af24 	bmi.w	90023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023900:	4572      	cmp	r2, lr
90023902:	f6ff af21 	blt.w	90023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023906:	f110 0e01 	adds.w	lr, r0, #1
9002390a:	f53f af1d 	bmi.w	90023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002390e:	4573      	cmp	r3, lr
90023910:	f6ff af1a 	blt.w	90023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023914:	b21b      	sxth	r3, r3
90023916:	b212      	sxth	r2, r2
90023918:	9301      	str	r3, [sp, #4]
9002391a:	9200      	str	r2, [sp, #0]
9002391c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90023920:	e9cd 5002 	strd	r5, r0, [sp, #8]
90023924:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90023928:	4639      	mov	r1, r7
9002392a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002392c:	f7ff fc22 	bl	90023174 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90023930:	e70a      	b.n	90023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023932:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023934:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023938:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002393a:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002393e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023940:	fa1f fc82 	uxth.w	ip, r2
90023944:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023948:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002394a:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002394e:	141f      	asrs	r7, r3, #16
90023950:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023952:	141b      	asrs	r3, r3, #16
90023954:	fb01 3707 	mla	r7, r1, r7, r3
90023958:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002395a:	eb03 0a07 	add.w	sl, r3, r7
9002395e:	f813 9007 	ldrb.w	r9, [r3, r7]
90023962:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90023966:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002396a:	b29b      	uxth	r3, r3
9002396c:	2d00      	cmp	r5, #0
9002396e:	f000 80fe 	beq.w	90023b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90023972:	f81a 4001 	ldrb.w	r4, [sl, r1]
90023976:	eb0a 0b01 	add.w	fp, sl, r1
9002397a:	fa1f fa85 	uxth.w	sl, r5
9002397e:	940c      	str	r4, [sp, #48]	@ 0x30
90023980:	fb0a fc0c 	mul.w	ip, sl, ip
90023984:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023988:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
9002398c:	eba0 000c 	sub.w	r0, r0, ip
90023990:	940d      	str	r4, [sp, #52]	@ 0x34
90023992:	fa1f fa8a 	uxth.w	sl, sl
90023996:	b280      	uxth	r0, r0
90023998:	eba3 030a 	sub.w	r3, r3, sl
9002399c:	fb08 f000 	mul.w	r0, r8, r0
900239a0:	b29b      	uxth	r3, r3
900239a2:	fb09 0303 	mla	r3, r9, r3, r0
900239a6:	980c      	ldr	r0, [sp, #48]	@ 0x30
900239a8:	fb0a 3300 	mla	r3, sl, r0, r3
900239ac:	fb0c 3304 	mla	r3, ip, r4, r3
900239b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900239b4:	2b00      	cmp	r3, #0
900239b6:	f000 80cc 	beq.w	90023b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900239ba:	9808      	ldr	r0, [sp, #32]
900239bc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900239c0:	9c08      	ldr	r4, [sp, #32]
900239c2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900239c6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900239ca:	f000 80d5 	beq.w	90023b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900239ce:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900239d2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900239d6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900239da:	fb0a fc0c 	mul.w	ip, sl, ip
900239de:	fb09 f707 	mul.w	r7, r9, r7
900239e2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900239e6:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900239ea:	f107 0b20 	add.w	fp, r7, #32
900239ee:	44cc      	add	ip, r9
900239f0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900239f4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900239f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
900239fc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90023a00:	ea4c 0909 	orr.w	r9, ip, r9
90023a04:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90023a08:	8847      	ldrh	r7, [r0, #2]
90023a0a:	d019      	beq.n	90023a40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90023a0c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90023a10:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023a14:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023a18:	fb0a fc0c 	mul.w	ip, sl, ip
90023a1c:	fb08 f807 	mul.w	r8, r8, r7
90023a20:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90023a24:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90023a28:	f108 0b20 	add.w	fp, r8, #32
90023a2c:	44bc      	add	ip, r7
90023a2e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90023a32:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90023a36:	0a3f      	lsrs	r7, r7, #8
90023a38:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023a3c:	ea4c 0707 	orr.w	r7, ip, r7
90023a40:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90023a44:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90023a48:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90023a4c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90023a50:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023a54:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023a58:	ea4c 0909 	orr.w	r9, ip, r9
90023a5c:	ea4a 0707 	orr.w	r7, sl, r7
90023a60:	2d00      	cmp	r5, #0
90023a62:	f000 808b 	beq.w	90023b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90023a66:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90023a6a:	3901      	subs	r1, #1
90023a6c:	0049      	lsls	r1, r1, #1
90023a6e:	3102      	adds	r1, #2
90023a70:	eb00 0c01 	add.w	ip, r0, r1
90023a74:	5a41      	ldrh	r1, [r0, r1]
90023a76:	980c      	ldr	r0, [sp, #48]	@ 0x30
90023a78:	28ff      	cmp	r0, #255	@ 0xff
90023a7a:	d019      	beq.n	90023ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90023a7c:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90023a80:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023a82:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023a86:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023a8a:	fb04 fa01 	mul.w	sl, r4, r1
90023a8e:	fb08 f800 	mul.w	r8, r8, r0
90023a92:	f10a 0020 	add.w	r0, sl, #32
90023a96:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90023a9a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023a9e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90023aa2:	4441      	add	r1, r8
90023aa4:	0a00      	lsrs	r0, r0, #8
90023aa6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90023aaa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023aae:	4301      	orrs	r1, r0
90023ab0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023ab2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90023ab6:	2cff      	cmp	r4, #255	@ 0xff
90023ab8:	d01a      	beq.n	90023af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90023aba:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90023abe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023ac2:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023ac6:	fb04 fa00 	mul.w	sl, r4, r0
90023aca:	fb08 f80c 	mul.w	r8, r8, ip
90023ace:	f10a 0c20 	add.w	ip, sl, #32
90023ad2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90023ad6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023ada:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90023ade:	4440      	add	r0, r8
90023ae0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023ae4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90023ae8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90023aec:	ea40 000c 	orr.w	r0, r0, ip
90023af0:	fb15 fc02 	smulbb	ip, r5, r2
90023af4:	f1c5 0810 	rsb	r8, r5, #16
90023af8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023afc:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023b00:	ea4f 0cec 	mov.w	ip, ip, asr #3
90023b04:	eba8 0802 	sub.w	r8, r8, r2
90023b08:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023b0c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023b10:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90023b14:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023b18:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90023b1c:	ea4a 0101 	orr.w	r1, sl, r1
90023b20:	437a      	muls	r2, r7
90023b22:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90023b26:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023b2a:	fb09 2208 	mla	r2, r9, r8, r2
90023b2e:	ea4b 0000 	orr.w	r0, fp, r0
90023b32:	fb05 2201 	mla	r2, r5, r1, r2
90023b36:	fb0c 2200 	mla	r2, ip, r0, r2
90023b3a:	0d57      	lsrs	r7, r2, #21
90023b3c:	0952      	lsrs	r2, r2, #5
90023b3e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90023b42:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023b46:	433a      	orrs	r2, r7
90023b48:	2bff      	cmp	r3, #255	@ 0xff
90023b4a:	b292      	uxth	r2, r2
90023b4c:	d127      	bne.n	90023b9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90023b4e:	f8ae 2000 	strh.w	r2, [lr]
90023b52:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90023b54:	f10e 0e02 	add.w	lr, lr, #2
90023b58:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90023b5a:	4413      	add	r3, r2
90023b5c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90023b5e:	931d      	str	r3, [sp, #116]	@ 0x74
90023b60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023b62:	441a      	add	r2, r3
90023b64:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023b66:	3b01      	subs	r3, #1
90023b68:	921e      	str	r2, [sp, #120]	@ 0x78
90023b6a:	930f      	str	r3, [sp, #60]	@ 0x3c
90023b6c:	e627      	b.n	900237be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023b6e:	fb08 f000 	mul.w	r0, r8, r0
90023b72:	fb09 0303 	mla	r3, r9, r3, r0
90023b76:	e71b      	b.n	900239b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90023b78:	46b9      	mov	r9, r7
90023b7a:	e743      	b.n	90023a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90023b7c:	f1c2 0110 	rsb	r1, r2, #16
90023b80:	437a      	muls	r2, r7
90023b82:	fb09 2901 	mla	r9, r9, r1, r2
90023b86:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023b8a:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023b8e:	ea4f 1259 	mov.w	r2, r9, lsr #5
90023b92:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023b96:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023b9a:	4302      	orrs	r2, r0
90023b9c:	e7d4      	b.n	90023b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90023b9e:	f8be 7000 	ldrh.w	r7, [lr]
90023ba2:	43db      	mvns	r3, r3
90023ba4:	4c1b      	ldr	r4, [pc, #108]	@ (90023c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90023ba6:	1238      	asrs	r0, r7, #8
90023ba8:	fa5f fc83 	uxtb.w	ip, r3
90023bac:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023bb0:	10fd      	asrs	r5, r7, #3
90023bb2:	00fb      	lsls	r3, r7, #3
90023bb4:	fb00 f00c 	mul.w	r0, r0, ip
90023bb8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90023bbc:	b2db      	uxtb	r3, r3
90023bbe:	fb05 f10c 	mul.w	r1, r5, ip
90023bc2:	1c45      	adds	r5, r0, #1
90023bc4:	fb03 f30c 	mul.w	r3, r3, ip
90023bc8:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90023bcc:	1215      	asrs	r5, r2, #8
90023bce:	f025 0507 	bic.w	r5, r5, #7
90023bd2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90023bd6:	1c4d      	adds	r5, r1, #1
90023bd8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90023bdc:	10d1      	asrs	r1, r2, #3
90023bde:	b2c0      	uxtb	r0, r0
90023be0:	f021 0103 	bic.w	r1, r1, #3
90023be4:	00d2      	lsls	r2, r2, #3
90023be6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90023bea:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023bee:	00c9      	lsls	r1, r1, #3
90023bf0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023bf4:	4308      	orrs	r0, r1
90023bf6:	1c59      	adds	r1, r3, #1
90023bf8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90023bfc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90023c00:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90023c04:	4318      	orrs	r0, r3
90023c06:	f8ae 0000 	strh.w	r0, [lr]
90023c0a:	e7a2      	b.n	90023b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90023c0c:	b013      	add	sp, #76	@ 0x4c
90023c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023c12:	bf00      	nop
90023c14:	fffff800 	.word	0xfffff800

90023c18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90023c18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023c1c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90023c20:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90023c24:	fb05 4c03 	mla	ip, r5, r3, r4
90023c28:	2d00      	cmp	r5, #0
90023c2a:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90023c2e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90023c32:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90023c36:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90023c3a:	8808      	ldrh	r0, [r1, #0]
90023c3c:	f2c0 80a7 	blt.w	90023d8e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90023c40:	45aa      	cmp	sl, r5
90023c42:	f340 80a4 	ble.w	90023d8e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90023c46:	2c00      	cmp	r4, #0
90023c48:	f2c0 809f 	blt.w	90023d8a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90023c4c:	42a3      	cmp	r3, r4
90023c4e:	f340 809c 	ble.w	90023d8a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90023c52:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90023c56:	1c62      	adds	r2, r4, #1
90023c58:	f100 809c 	bmi.w	90023d94 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023c5c:	4293      	cmp	r3, r2
90023c5e:	f340 8099 	ble.w	90023d94 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023c62:	f1b9 0f00 	cmp.w	r9, #0
90023c66:	f000 8095 	beq.w	90023d94 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023c6a:	f8be c002 	ldrh.w	ip, [lr, #2]
90023c6e:	3501      	adds	r5, #1
90023c70:	f100 8094 	bmi.w	90023d9c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023c74:	45aa      	cmp	sl, r5
90023c76:	f340 8091 	ble.w	90023d9c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023c7a:	2f00      	cmp	r7, #0
90023c7c:	f000 808e 	beq.w	90023d9c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023c80:	2c00      	cmp	r4, #0
90023c82:	f2c0 8089 	blt.w	90023d98 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90023c86:	42a3      	cmp	r3, r4
90023c88:	f340 8086 	ble.w	90023d98 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90023c8c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90023c90:	3401      	adds	r4, #1
90023c92:	f100 8086 	bmi.w	90023da2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023c96:	42a3      	cmp	r3, r4
90023c98:	f340 8083 	ble.w	90023da2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023c9c:	f1b9 0f00 	cmp.w	r9, #0
90023ca0:	d07f      	beq.n	90023da2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023ca2:	3301      	adds	r3, #1
90023ca4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90023ca8:	ea4f 4408 	mov.w	r4, r8, lsl #16
90023cac:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90023cb0:	fb19 fe07 	smulbb	lr, r9, r7
90023cb4:	f1c7 0210 	rsb	r2, r7, #16
90023cb8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023cbc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90023cc0:	eba2 0209 	sub.w	r2, r2, r9
90023cc4:	ea44 0808 	orr.w	r8, r4, r8
90023cc8:	ea4f 440c 	mov.w	r4, ip, lsl #16
90023ccc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90023cd0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90023cd4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023cd8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90023cdc:	ea44 0c0c 	orr.w	ip, r4, ip
90023ce0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90023ce4:	fb04 f40c 	mul.w	r4, r4, ip
90023ce8:	fb02 4808 	mla	r8, r2, r8, r4
90023cec:	041a      	lsls	r2, r3, #16
90023cee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023cf2:	b2b4      	uxth	r4, r6
90023cf4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90023cf8:	43f6      	mvns	r6, r6
90023cfa:	4313      	orrs	r3, r2
90023cfc:	042a      	lsls	r2, r5, #16
90023cfe:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90023d02:	b2f6      	uxtb	r6, r6
90023d04:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90023d08:	fb0e 8303 	mla	r3, lr, r3, r8
90023d0c:	432a      	orrs	r2, r5
90023d0e:	fb07 3202 	mla	r2, r7, r2, r3
90023d12:	10c7      	asrs	r7, r0, #3
90023d14:	0d53      	lsrs	r3, r2, #21
90023d16:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90023d1a:	0952      	lsrs	r2, r2, #5
90023d1c:	fb17 f706 	smulbb	r7, r7, r6
90023d20:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023d24:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023d28:	431a      	orrs	r2, r3
90023d2a:	b293      	uxth	r3, r2
90023d2c:	1202      	asrs	r2, r0, #8
90023d2e:	121d      	asrs	r5, r3, #8
90023d30:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023d34:	00c0      	lsls	r0, r0, #3
90023d36:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023d3a:	fb12 f206 	smulbb	r2, r2, r6
90023d3e:	b2c0      	uxtb	r0, r0
90023d40:	fb05 2504 	mla	r5, r5, r4, r2
90023d44:	10da      	asrs	r2, r3, #3
90023d46:	fb10 f006 	smulbb	r0, r0, r6
90023d4a:	00db      	lsls	r3, r3, #3
90023d4c:	b2ad      	uxth	r5, r5
90023d4e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023d52:	b2db      	uxtb	r3, r3
90023d54:	fb02 7204 	mla	r2, r2, r4, r7
90023d58:	fb03 0004 	mla	r0, r3, r4, r0
90023d5c:	1c6b      	adds	r3, r5, #1
90023d5e:	b292      	uxth	r2, r2
90023d60:	b280      	uxth	r0, r0
90023d62:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023d66:	1c43      	adds	r3, r0, #1
90023d68:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023d6c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023d70:	1c50      	adds	r0, r2, #1
90023d72:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90023d76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023d7a:	0952      	lsrs	r2, r2, #5
90023d7c:	432b      	orrs	r3, r5
90023d7e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023d82:	4313      	orrs	r3, r2
90023d84:	800b      	strh	r3, [r1, #0]
90023d86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90023d8a:	4680      	mov	r8, r0
90023d8c:	e763      	b.n	90023c56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90023d8e:	4684      	mov	ip, r0
90023d90:	4680      	mov	r8, r0
90023d92:	e76c      	b.n	90023c6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90023d94:	4684      	mov	ip, r0
90023d96:	e76a      	b.n	90023c6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90023d98:	4605      	mov	r5, r0
90023d9a:	e779      	b.n	90023c90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90023d9c:	4603      	mov	r3, r0
90023d9e:	4605      	mov	r5, r0
90023da0:	e782      	b.n	90023ca8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90023da2:	4603      	mov	r3, r0
90023da4:	e780      	b.n	90023ca8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90023da6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023da6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023daa:	b093      	sub	sp, #76	@ 0x4c
90023dac:	461d      	mov	r5, r3
90023dae:	9210      	str	r2, [sp, #64]	@ 0x40
90023db0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90023db2:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
90023db6:	910a      	str	r1, [sp, #40]	@ 0x28
90023db8:	920b      	str	r2, [sp, #44]	@ 0x2c
90023dba:	6859      	ldr	r1, [r3, #4]
90023dbc:	681b      	ldr	r3, [r3, #0]
90023dbe:	9011      	str	r0, [sp, #68]	@ 0x44
90023dc0:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90023dc4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90023dc8:	fb01 2707 	mla	r7, r1, r7, r2
90023dcc:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90023dd0:	9307      	str	r3, [sp, #28]
90023dd2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023dd4:	681b      	ldr	r3, [r3, #0]
90023dd6:	9309      	str	r3, [sp, #36]	@ 0x24
90023dd8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023dda:	43db      	mvns	r3, r3
90023ddc:	b2db      	uxtb	r3, r3
90023dde:	9308      	str	r3, [sp, #32]
90023de0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023de2:	2b00      	cmp	r3, #0
90023de4:	dc03      	bgt.n	90023dee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023de6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023de8:	2b00      	cmp	r3, #0
90023dea:	f340 8205 	ble.w	900241f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023dee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023df0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023df4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023df8:	1e48      	subs	r0, r1, #1
90023dfa:	f102 3cff 	add.w	ip, r2, #4294967295
90023dfe:	2d00      	cmp	r5, #0
90023e00:	f340 80da 	ble.w	90023fb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90023e04:	ea5f 4e24 	movs.w	lr, r4, asr #16
90023e08:	ea4f 4326 	mov.w	r3, r6, asr #16
90023e0c:	d406      	bmi.n	90023e1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90023e0e:	4586      	cmp	lr, r0
90023e10:	da04      	bge.n	90023e1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90023e12:	2b00      	cmp	r3, #0
90023e14:	db02      	blt.n	90023e1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90023e16:	4563      	cmp	r3, ip
90023e18:	f2c0 80cf 	blt.w	90023fba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023e1c:	f11e 0e01 	adds.w	lr, lr, #1
90023e20:	f100 80c1 	bmi.w	90023fa6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023e24:	4571      	cmp	r1, lr
90023e26:	f2c0 80be 	blt.w	90023fa6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023e2a:	3301      	adds	r3, #1
90023e2c:	f100 80bb 	bmi.w	90023fa6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023e30:	429a      	cmp	r2, r3
90023e32:	f2c0 80b8 	blt.w	90023fa6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023e36:	46a9      	mov	r9, r5
90023e38:	f8dd 801c 	ldr.w	r8, [sp, #28]
90023e3c:	f1b9 0f00 	cmp.w	r9, #0
90023e40:	f340 80d8 	ble.w	90023ff4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90023e44:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023e46:	1421      	asrs	r1, r4, #16
90023e48:	ea4f 4026 	mov.w	r0, r6, asr #16
90023e4c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023e50:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90023e54:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90023e58:	f100 8112 	bmi.w	90024080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023e5c:	f10e 3aff 	add.w	sl, lr, #4294967295
90023e60:	4551      	cmp	r1, sl
90023e62:	f280 810d 	bge.w	90024080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023e66:	2800      	cmp	r0, #0
90023e68:	f2c0 810a 	blt.w	90024080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023e6c:	f103 3aff 	add.w	sl, r3, #4294967295
90023e70:	4550      	cmp	r0, sl
90023e72:	f280 8105 	bge.w	90024080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023e76:	fa0f f38e 	sxth.w	r3, lr
90023e7a:	fb00 1103 	mla	r1, r0, r3, r1
90023e7e:	9809      	ldr	r0, [sp, #36]	@ 0x24
90023e80:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90023e84:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90023e88:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90023e8c:	f1bc 0f00 	cmp.w	ip, #0
90023e90:	d007      	beq.n	90023ea2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90023e92:	005b      	lsls	r3, r3, #1
90023e94:	eb0a 0003 	add.w	r0, sl, r3
90023e98:	f83a 3003 	ldrh.w	r3, [sl, r3]
90023e9c:	930c      	str	r3, [sp, #48]	@ 0x30
90023e9e:	8843      	ldrh	r3, [r0, #2]
90023ea0:	930d      	str	r3, [sp, #52]	@ 0x34
90023ea2:	ea4f 400e 	mov.w	r0, lr, lsl #16
90023ea6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023eaa:	fb12 f30c 	smulbb	r3, r2, ip
90023eae:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023eb2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90023eb6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023eba:	10db      	asrs	r3, r3, #3
90023ebc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023ec0:	ea40 000e 	orr.w	r0, r0, lr
90023ec4:	f1cc 0e10 	rsb	lr, ip, #16
90023ec8:	ea4a 0101 	orr.w	r1, sl, r1
90023ecc:	9f08      	ldr	r7, [sp, #32]
90023ece:	ebae 0e02 	sub.w	lr, lr, r2
90023ed2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90023ed6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90023eda:	4351      	muls	r1, r2
90023edc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90023ede:	fb0e 1e00 	mla	lr, lr, r0, r1
90023ee2:	990c      	ldr	r1, [sp, #48]	@ 0x30
90023ee4:	0410      	lsls	r0, r2, #16
90023ee6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023eea:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90023eee:	4310      	orrs	r0, r2
90023ef0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90023ef2:	0412      	lsls	r2, r2, #16
90023ef4:	fb03 e000 	mla	r0, r3, r0, lr
90023ef8:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90023efc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90023f00:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90023f04:	ea42 020e 	orr.w	r2, r2, lr
90023f08:	fb03 0302 	mla	r3, r3, r2, r0
90023f0c:	f8b8 0000 	ldrh.w	r0, [r8]
90023f10:	0d5a      	lsrs	r2, r3, #21
90023f12:	095b      	lsrs	r3, r3, #5
90023f14:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023f18:	1201      	asrs	r1, r0, #8
90023f1a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023f1e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90023f22:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023f26:	00c0      	lsls	r0, r0, #3
90023f28:	4313      	orrs	r3, r2
90023f2a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90023f2e:	fb11 f107 	smulbb	r1, r1, r7
90023f32:	b2c0      	uxtb	r0, r0
90023f34:	b29b      	uxth	r3, r3
90023f36:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90023f3a:	fb10 f007 	smulbb	r0, r0, r7
90023f3e:	fb1e fe07 	smulbb	lr, lr, r7
90023f42:	ea4f 2c23 	mov.w	ip, r3, asr #8
90023f46:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90023f4a:	fb0c 1c02 	mla	ip, ip, r2, r1
90023f4e:	10d9      	asrs	r1, r3, #3
90023f50:	00db      	lsls	r3, r3, #3
90023f52:	fa1f fc8c 	uxth.w	ip, ip
90023f56:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023f5a:	b2db      	uxtb	r3, r3
90023f5c:	fb01 e102 	mla	r1, r1, r2, lr
90023f60:	fb03 0302 	mla	r3, r3, r2, r0
90023f64:	b289      	uxth	r1, r1
90023f66:	b29a      	uxth	r2, r3
90023f68:	f10c 0301 	add.w	r3, ip, #1
90023f6c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023f70:	1c53      	adds	r3, r2, #1
90023f72:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023f76:	1c4a      	adds	r2, r1, #1
90023f78:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90023f7c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023f80:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023f84:	0949      	lsrs	r1, r1, #5
90023f86:	ea43 030c 	orr.w	r3, r3, ip
90023f8a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023f8e:	430b      	orrs	r3, r1
90023f90:	f8a8 3000 	strh.w	r3, [r8]
90023f94:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023f96:	f108 0802 	add.w	r8, r8, #2
90023f9a:	f109 39ff 	add.w	r9, r9, #4294967295
90023f9e:	441c      	add	r4, r3
90023fa0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023fa2:	441e      	add	r6, r3
90023fa4:	e74a      	b.n	90023e3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90023fa6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90023fa8:	3d01      	subs	r5, #1
90023faa:	441c      	add	r4, r3
90023fac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023fae:	441e      	add	r6, r3
90023fb0:	9b07      	ldr	r3, [sp, #28]
90023fb2:	3302      	adds	r3, #2
90023fb4:	9307      	str	r3, [sp, #28]
90023fb6:	e722      	b.n	90023dfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023fb8:	d022      	beq.n	90024000 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90023fba:	1e6b      	subs	r3, r5, #1
90023fbc:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90023fbe:	fb00 4003 	mla	r0, r0, r3, r4
90023fc2:	1400      	asrs	r0, r0, #16
90023fc4:	f53f af37 	bmi.w	90023e36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023fc8:	3901      	subs	r1, #1
90023fca:	4288      	cmp	r0, r1
90023fcc:	f6bf af33 	bge.w	90023e36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023fd0:	9920      	ldr	r1, [sp, #128]	@ 0x80
90023fd2:	fb01 6303 	mla	r3, r1, r3, r6
90023fd6:	141b      	asrs	r3, r3, #16
90023fd8:	f53f af2d 	bmi.w	90023e36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023fdc:	3a01      	subs	r2, #1
90023fde:	4293      	cmp	r3, r2
90023fe0:	f6bf af29 	bge.w	90023e36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023fe4:	46a8      	mov	r8, r5
90023fe6:	f8dd 901c 	ldr.w	r9, [sp, #28]
90023fea:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90023fee:	f1b8 0f00 	cmp.w	r8, #0
90023ff2:	dc60      	bgt.n	900240b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90023ff4:	9b07      	ldr	r3, [sp, #28]
90023ff6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90023ffa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023ffe:	9307      	str	r3, [sp, #28]
90024000:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024002:	2b00      	cmp	r3, #0
90024004:	f340 80f8 	ble.w	900241f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024008:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002400c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002400e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024012:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024016:	eef0 6a62 	vmov.f32	s13, s5
9002401a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002401e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024022:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024026:	ee16 4a90 	vmov	r4, s13
9002402a:	eef0 6a43 	vmov.f32	s13, s6
9002402e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024032:	ee16 6a90 	vmov	r6, s13
90024036:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002403a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002403e:	ee77 2a62 	vsub.f32	s5, s14, s5
90024042:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024046:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002404a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002404e:	ee12 2a90 	vmov	r2, s5
90024052:	eef0 2a47 	vmov.f32	s5, s14
90024056:	fb92 f3f3 	sdiv	r3, r2, r3
9002405a:	ee13 2a10 	vmov	r2, s6
9002405e:	931f      	str	r3, [sp, #124]	@ 0x7c
90024060:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024062:	eeb0 3a67 	vmov.f32	s6, s15
90024066:	fb92 f3f3 	sdiv	r3, r2, r3
9002406a:	9320      	str	r3, [sp, #128]	@ 0x80
9002406c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002406e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90024070:	3b01      	subs	r3, #1
90024072:	930a      	str	r3, [sp, #40]	@ 0x28
90024074:	bf08      	it	eq
90024076:	4615      	moveq	r5, r2
90024078:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002407a:	bf18      	it	ne
9002407c:	461d      	movne	r5, r3
9002407e:	e6af      	b.n	90023de0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024080:	f111 0a01 	adds.w	sl, r1, #1
90024084:	d486      	bmi.n	90023f94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90024086:	45d6      	cmp	lr, sl
90024088:	db84      	blt.n	90023f94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002408a:	f110 0a01 	adds.w	sl, r0, #1
9002408e:	d481      	bmi.n	90023f94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90024090:	4553      	cmp	r3, sl
90024092:	f6ff af7f 	blt.w	90023f94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90024096:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90024098:	b21b      	sxth	r3, r3
9002409a:	9101      	str	r1, [sp, #4]
9002409c:	4641      	mov	r1, r8
9002409e:	9300      	str	r3, [sp, #0]
900240a0:	fa0f f38e 	sxth.w	r3, lr
900240a4:	e9cd 0202 	strd	r0, r2, [sp, #8]
900240a8:	e9cd c704 	strd	ip, r7, [sp, #16]
900240ac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900240ae:	9811      	ldr	r0, [sp, #68]	@ 0x44
900240b0:	f7ff fdb2 	bl	90023c18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
900240b4:	e76e      	b.n	90023f94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900240b6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900240b8:	1430      	asrs	r0, r6, #16
900240ba:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900240bc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900240c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900240c4:	1423      	asrs	r3, r4, #16
900240c6:	f3c4 3203 	ubfx	r2, r4, #12, #4
900240ca:	fb01 3000 	mla	r0, r1, r0, r3
900240ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900240d0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900240d4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
900240d8:	8858      	ldrh	r0, [r3, #2]
900240da:	f1be 0f00 	cmp.w	lr, #0
900240de:	d00b      	beq.n	900240f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900240e0:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900240e4:	3901      	subs	r1, #1
900240e6:	0049      	lsls	r1, r1, #1
900240e8:	3102      	adds	r1, #2
900240ea:	eb03 0b01 	add.w	fp, r3, r1
900240ee:	5a5b      	ldrh	r3, [r3, r1]
900240f0:	930e      	str	r3, [sp, #56]	@ 0x38
900240f2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900240f6:	930f      	str	r3, [sp, #60]	@ 0x3c
900240f8:	ea4f 410c 	mov.w	r1, ip, lsl #16
900240fc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90024100:	fb12 f30e 	smulbb	r3, r2, lr
90024104:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024108:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
9002410c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024110:	10db      	asrs	r3, r3, #3
90024112:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024116:	ea41 010c 	orr.w	r1, r1, ip
9002411a:	f1ce 0c10 	rsb	ip, lr, #16
9002411e:	ea4b 0000 	orr.w	r0, fp, r0
90024122:	9f08      	ldr	r7, [sp, #32]
90024124:	ebac 0c02 	sub.w	ip, ip, r2
90024128:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002412c:	f108 38ff 	add.w	r8, r8, #4294967295
90024130:	4350      	muls	r0, r2
90024132:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90024136:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90024138:	fb0c 0c01 	mla	ip, ip, r1, r0
9002413c:	980e      	ldr	r0, [sp, #56]	@ 0x38
9002413e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90024142:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
90024146:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90024148:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002414c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024150:	0412      	lsls	r2, r2, #16
90024152:	ea4b 0101 	orr.w	r1, fp, r1
90024156:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002415a:	fb03 c101 	mla	r1, r3, r1, ip
9002415e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90024162:	4302      	orrs	r2, r0
90024164:	fb03 1202 	mla	r2, r3, r2, r1
90024168:	ea4f 5b52 	mov.w	fp, r2, lsr #21
9002416c:	0952      	lsrs	r2, r2, #5
9002416e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90024172:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
90024176:	f8b9 2000 	ldrh.w	r2, [r9]
9002417a:	ea4b 0303 	orr.w	r3, fp, r3
9002417e:	1211      	asrs	r1, r2, #8
90024180:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90024184:	b29b      	uxth	r3, r3
90024186:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002418a:	00d2      	lsls	r2, r2, #3
9002418c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90024190:	fb11 f107 	smulbb	r1, r1, r7
90024194:	1218      	asrs	r0, r3, #8
90024196:	fb1c fc07 	smulbb	ip, ip, r7
9002419a:	b2d2      	uxtb	r2, r2
9002419c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900241a0:	fb12 f207 	smulbb	r2, r2, r7
900241a4:	fb00 100a 	mla	r0, r0, sl, r1
900241a8:	10d9      	asrs	r1, r3, #3
900241aa:	00db      	lsls	r3, r3, #3
900241ac:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900241b0:	b280      	uxth	r0, r0
900241b2:	b2db      	uxtb	r3, r3
900241b4:	fb01 c10a 	mla	r1, r1, sl, ip
900241b8:	fb03 230a 	mla	r3, r3, sl, r2
900241bc:	1c42      	adds	r2, r0, #1
900241be:	b289      	uxth	r1, r1
900241c0:	b29b      	uxth	r3, r3
900241c2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900241c6:	f101 0c01 	add.w	ip, r1, #1
900241ca:	1c5a      	adds	r2, r3, #1
900241cc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900241d0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900241d4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900241d8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900241da:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900241de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900241e2:	441c      	add	r4, r3
900241e4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900241e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900241ea:	4310      	orrs	r0, r2
900241ec:	441e      	add	r6, r3
900241ee:	ea40 000c 	orr.w	r0, r0, ip
900241f2:	f829 0b02 	strh.w	r0, [r9], #2
900241f6:	e6fa      	b.n	90023fee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900241f8:	b013      	add	sp, #76	@ 0x4c
900241fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900241fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900241fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90024202:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90024206:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
9002420a:	fb0e 4703 	mla	r7, lr, r3, r4
9002420e:	f1be 0f00 	cmp.w	lr, #0
90024212:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
90024216:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
9002421a:	eb02 0847 	add.w	r8, r2, r7, lsl #1
9002421e:	8808      	ldrh	r0, [r1, #0]
90024220:	db60      	blt.n	900242e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90024222:	45f1      	cmp	r9, lr
90024224:	dd5e      	ble.n	900242e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90024226:	2c00      	cmp	r4, #0
90024228:	db5a      	blt.n	900242e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
9002422a:	42a3      	cmp	r3, r4
9002422c:	dd58      	ble.n	900242e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
9002422e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90024232:	1c62      	adds	r2, r4, #1
90024234:	d459      	bmi.n	900242ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90024236:	4293      	cmp	r3, r2
90024238:	dd57      	ble.n	900242ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002423a:	2d00      	cmp	r5, #0
9002423c:	d055      	beq.n	900242ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002423e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90024242:	f11e 0e01 	adds.w	lr, lr, #1
90024246:	d454      	bmi.n	900242f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90024248:	45f1      	cmp	r9, lr
9002424a:	dd52      	ble.n	900242f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002424c:	2e00      	cmp	r6, #0
9002424e:	d050      	beq.n	900242f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90024250:	2c00      	cmp	r4, #0
90024252:	db4c      	blt.n	900242ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90024254:	42a3      	cmp	r3, r4
90024256:	dd4a      	ble.n	900242ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90024258:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
9002425c:	3401      	adds	r4, #1
9002425e:	d405      	bmi.n	9002426c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90024260:	42a3      	cmp	r3, r4
90024262:	dd03      	ble.n	9002426c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90024264:	b115      	cbz	r5, 9002426c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90024266:	3301      	adds	r3, #1
90024268:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
9002426c:	fb15 f406 	smulbb	r4, r5, r6
90024270:	ea4f 430c 	mov.w	r3, ip, lsl #16
90024274:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90024278:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002427c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90024280:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90024284:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024288:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002428c:	ea43 0c0c 	orr.w	ip, r3, ip
90024290:	f1c6 0310 	rsb	r3, r6, #16
90024294:	ea4e 0707 	orr.w	r7, lr, r7
90024298:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9002429c:	1b5b      	subs	r3, r3, r5
9002429e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900242a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900242a6:	437d      	muls	r5, r7
900242a8:	fb03 5c0c 	mla	ip, r3, ip, r5
900242ac:	0403      	lsls	r3, r0, #16
900242ae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900242b2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900242b6:	4318      	orrs	r0, r3
900242b8:	0413      	lsls	r3, r2, #16
900242ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900242be:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900242c2:	fb04 c000 	mla	r0, r4, r0, ip
900242c6:	4313      	orrs	r3, r2
900242c8:	fb06 0003 	mla	r0, r6, r3, r0
900242cc:	0d43      	lsrs	r3, r0, #21
900242ce:	0940      	lsrs	r0, r0, #5
900242d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900242d4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900242d8:	4318      	orrs	r0, r3
900242da:	8008      	strh	r0, [r1, #0]
900242dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900242e0:	4684      	mov	ip, r0
900242e2:	e7a6      	b.n	90024232 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900242e4:	4607      	mov	r7, r0
900242e6:	4684      	mov	ip, r0
900242e8:	e7ab      	b.n	90024242 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900242ea:	4607      	mov	r7, r0
900242ec:	e7a9      	b.n	90024242 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900242ee:	4602      	mov	r2, r0
900242f0:	e7b4      	b.n	9002425c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
900242f2:	4602      	mov	r2, r0
900242f4:	e7ba      	b.n	9002426c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

900242f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900242f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900242fa:	b08f      	sub	sp, #60	@ 0x3c
900242fc:	461d      	mov	r5, r3
900242fe:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024300:	9107      	str	r1, [sp, #28]
90024302:	920c      	str	r2, [sp, #48]	@ 0x30
90024304:	6859      	ldr	r1, [r3, #4]
90024306:	681b      	ldr	r3, [r3, #0]
90024308:	900d      	str	r0, [sp, #52]	@ 0x34
9002430a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
9002430e:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
90024312:	fb01 2707 	mla	r7, r1, r7, r2
90024316:	eb03 0747 	add.w	r7, r3, r7, lsl #1
9002431a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002431c:	f8d3 8000 	ldr.w	r8, [r3]
90024320:	9b07      	ldr	r3, [sp, #28]
90024322:	2b00      	cmp	r3, #0
90024324:	dc03      	bgt.n	9002432e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90024326:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024328:	2b00      	cmp	r3, #0
9002432a:	f340 8182 	ble.w	90024632 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
9002432e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024330:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024334:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024338:	1e48      	subs	r0, r1, #1
9002433a:	f102 3cff 	add.w	ip, r2, #4294967295
9002433e:	2d00      	cmp	r5, #0
90024340:	f340 809b 	ble.w	9002447a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90024344:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024348:	ea4f 4326 	mov.w	r3, r6, asr #16
9002434c:	d406      	bmi.n	9002435c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002434e:	4586      	cmp	lr, r0
90024350:	da04      	bge.n	9002435c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90024352:	2b00      	cmp	r3, #0
90024354:	db02      	blt.n	9002435c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90024356:	4563      	cmp	r3, ip
90024358:	f2c0 8090 	blt.w	9002447c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002435c:	f11e 0e01 	adds.w	lr, lr, #1
90024360:	f100 8084 	bmi.w	9002446c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024364:	4571      	cmp	r1, lr
90024366:	f2c0 8081 	blt.w	9002446c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002436a:	3301      	adds	r3, #1
9002436c:	d47e      	bmi.n	9002446c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002436e:	429a      	cmp	r2, r3
90024370:	db7c      	blt.n	9002446c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024372:	46aa      	mov	sl, r5
90024374:	46b9      	mov	r9, r7
90024376:	f1ba 0f00 	cmp.w	sl, #0
9002437a:	f340 8099 	ble.w	900244b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
9002437e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024380:	1421      	asrs	r1, r4, #16
90024382:	ea4f 4026 	mov.w	r0, r6, asr #16
90024386:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002438a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002438e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90024392:	f100 80d1 	bmi.w	90024538 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90024396:	f10e 3bff 	add.w	fp, lr, #4294967295
9002439a:	4559      	cmp	r1, fp
9002439c:	f280 80cc 	bge.w	90024538 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900243a0:	2800      	cmp	r0, #0
900243a2:	f2c0 80c9 	blt.w	90024538 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900243a6:	f103 3bff 	add.w	fp, r3, #4294967295
900243aa:	4558      	cmp	r0, fp
900243ac:	f280 80c4 	bge.w	90024538 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900243b0:	fa0f fe8e 	sxth.w	lr, lr
900243b4:	fb00 110e 	mla	r1, r0, lr, r1
900243b8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900243bc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900243c0:	8841      	ldrh	r1, [r0, #2]
900243c2:	f1bc 0f00 	cmp.w	ip, #0
900243c6:	d00b      	beq.n	900243e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900243c8:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
900243cc:	3b01      	subs	r3, #1
900243ce:	005b      	lsls	r3, r3, #1
900243d0:	3302      	adds	r3, #2
900243d2:	eb00 0e03 	add.w	lr, r0, r3
900243d6:	5ac3      	ldrh	r3, [r0, r3]
900243d8:	9308      	str	r3, [sp, #32]
900243da:	f8be 3002 	ldrh.w	r3, [lr, #2]
900243de:	9309      	str	r3, [sp, #36]	@ 0x24
900243e0:	ea4f 400b 	mov.w	r0, fp, lsl #16
900243e4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900243e8:	fb12 f30c 	smulbb	r3, r2, ip
900243ec:	f1cc 0e10 	rsb	lr, ip, #16
900243f0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900243f4:	10db      	asrs	r3, r3, #3
900243f6:	ebae 0e02 	sub.w	lr, lr, r2
900243fa:	ea40 000b 	orr.w	r0, r0, fp
900243fe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90024402:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024406:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002440a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002440e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90024412:	ea4b 0101 	orr.w	r1, fp, r1
90024416:	4351      	muls	r1, r2
90024418:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002441a:	fb0e 1e00 	mla	lr, lr, r0, r1
9002441e:	0410      	lsls	r0, r2, #16
90024420:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024424:	9908      	ldr	r1, [sp, #32]
90024426:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002442a:	4310      	orrs	r0, r2
9002442c:	9a08      	ldr	r2, [sp, #32]
9002442e:	0412      	lsls	r2, r2, #16
90024430:	fb03 e000 	mla	r0, r3, r0, lr
90024434:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90024438:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
9002443c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90024440:	ea42 020e 	orr.w	r2, r2, lr
90024444:	fb03 0302 	mla	r3, r3, r2, r0
90024448:	0d5a      	lsrs	r2, r3, #21
9002444a:	095b      	lsrs	r3, r3, #5
9002444c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024450:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90024454:	4313      	orrs	r3, r2
90024456:	f8a9 3000 	strh.w	r3, [r9]
9002445a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002445c:	f109 0902 	add.w	r9, r9, #2
90024460:	f10a 3aff 	add.w	sl, sl, #4294967295
90024464:	441c      	add	r4, r3
90024466:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024468:	441e      	add	r6, r3
9002446a:	e784      	b.n	90024376 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9002446c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002446e:	3d01      	subs	r5, #1
90024470:	3702      	adds	r7, #2
90024472:	441c      	add	r4, r3
90024474:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024476:	441e      	add	r6, r3
90024478:	e761      	b.n	9002433e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002447a:	d01d      	beq.n	900244b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002447c:	1e6b      	subs	r3, r5, #1
9002447e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90024480:	fb00 4003 	mla	r0, r0, r3, r4
90024484:	1400      	asrs	r0, r0, #16
90024486:	f53f af74 	bmi.w	90024372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002448a:	3901      	subs	r1, #1
9002448c:	4288      	cmp	r0, r1
9002448e:	f6bf af70 	bge.w	90024372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90024492:	991c      	ldr	r1, [sp, #112]	@ 0x70
90024494:	fb01 6303 	mla	r3, r1, r3, r6
90024498:	141b      	asrs	r3, r3, #16
9002449a:	f53f af6a 	bmi.w	90024372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002449e:	3a01      	subs	r2, #1
900244a0:	4293      	cmp	r3, r2
900244a2:	f6bf af66 	bge.w	90024372 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900244a6:	46a9      	mov	r9, r5
900244a8:	46ba      	mov	sl, r7
900244aa:	f1b9 0f00 	cmp.w	r9, #0
900244ae:	dc5b      	bgt.n	90024568 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900244b0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900244b4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
900244b8:	9b07      	ldr	r3, [sp, #28]
900244ba:	2b00      	cmp	r3, #0
900244bc:	f340 80b9 	ble.w	90024632 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900244c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900244c4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900244c6:	ee30 0a04 	vadd.f32	s0, s0, s8
900244ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
900244ce:	eef0 6a62 	vmov.f32	s13, s5
900244d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900244d6:	ee31 1a05 	vadd.f32	s2, s2, s10
900244da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900244de:	ee16 4a90 	vmov	r4, s13
900244e2:	eef0 6a43 	vmov.f32	s13, s6
900244e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900244ea:	ee16 6a90 	vmov	r6, s13
900244ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
900244f2:	ee61 7a27 	vmul.f32	s15, s2, s15
900244f6:	ee77 2a62 	vsub.f32	s5, s14, s5
900244fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
900244fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024502:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024506:	ee12 2a90 	vmov	r2, s5
9002450a:	eef0 2a47 	vmov.f32	s5, s14
9002450e:	fb92 f3f3 	sdiv	r3, r2, r3
90024512:	ee13 2a10 	vmov	r2, s6
90024516:	931b      	str	r3, [sp, #108]	@ 0x6c
90024518:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002451a:	eeb0 3a67 	vmov.f32	s6, s15
9002451e:	fb92 f3f3 	sdiv	r3, r2, r3
90024522:	931c      	str	r3, [sp, #112]	@ 0x70
90024524:	9b07      	ldr	r3, [sp, #28]
90024526:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90024528:	3b01      	subs	r3, #1
9002452a:	9307      	str	r3, [sp, #28]
9002452c:	bf08      	it	eq
9002452e:	4615      	moveq	r5, r2
90024530:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024532:	bf18      	it	ne
90024534:	461d      	movne	r5, r3
90024536:	e6f3      	b.n	90024320 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90024538:	f111 0b01 	adds.w	fp, r1, #1
9002453c:	d48d      	bmi.n	9002445a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002453e:	45de      	cmp	lr, fp
90024540:	db8b      	blt.n	9002445a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024542:	f110 0b01 	adds.w	fp, r0, #1
90024546:	d488      	bmi.n	9002445a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024548:	455b      	cmp	r3, fp
9002454a:	db86      	blt.n	9002445a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002454c:	b21b      	sxth	r3, r3
9002454e:	e9cd 1001 	strd	r1, r0, [sp, #4]
90024552:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90024556:	9300      	str	r3, [sp, #0]
90024558:	4642      	mov	r2, r8
9002455a:	fa0f f38e 	sxth.w	r3, lr
9002455e:	4649      	mov	r1, r9
90024560:	980d      	ldr	r0, [sp, #52]	@ 0x34
90024562:	f7ff fe4c 	bl	900241fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90024566:	e778      	b.n	9002445a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024568:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002456a:	1420      	asrs	r0, r4, #16
9002456c:	1431      	asrs	r1, r6, #16
9002456e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90024572:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90024576:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002457a:	fb03 0101 	mla	r1, r3, r1, r0
9002457e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90024582:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90024586:	8841      	ldrh	r1, [r0, #2]
90024588:	f1be 0f00 	cmp.w	lr, #0
9002458c:	d00b      	beq.n	900245a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
9002458e:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90024592:	3b01      	subs	r3, #1
90024594:	005b      	lsls	r3, r3, #1
90024596:	3302      	adds	r3, #2
90024598:	eb00 0b03 	add.w	fp, r0, r3
9002459c:	5ac3      	ldrh	r3, [r0, r3]
9002459e:	930a      	str	r3, [sp, #40]	@ 0x28
900245a0:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900245a4:	930b      	str	r3, [sp, #44]	@ 0x2c
900245a6:	ea4f 400c 	mov.w	r0, ip, lsl #16
900245aa:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900245ae:	fb12 f30e 	smulbb	r3, r2, lr
900245b2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900245b6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900245ba:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900245be:	10db      	asrs	r3, r3, #3
900245c0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900245c4:	ea40 000c 	orr.w	r0, r0, ip
900245c8:	f1ce 0c10 	rsb	ip, lr, #16
900245cc:	ea4b 0101 	orr.w	r1, fp, r1
900245d0:	f109 39ff 	add.w	r9, r9, #4294967295
900245d4:	ebac 0c02 	sub.w	ip, ip, r2
900245d8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900245dc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900245e0:	4351      	muls	r1, r2
900245e2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900245e4:	fb0c 1c00 	mla	ip, ip, r0, r1
900245e8:	990a      	ldr	r1, [sp, #40]	@ 0x28
900245ea:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900245ee:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
900245f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900245f4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900245f8:	0412      	lsls	r2, r2, #16
900245fa:	ea4b 0000 	orr.w	r0, fp, r0
900245fe:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
90024602:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90024606:	fb03 c000 	mla	r0, r3, r0, ip
9002460a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002460e:	ea42 0b0b 	orr.w	fp, r2, fp
90024612:	fb03 000b 	mla	r0, r3, fp, r0
90024616:	0d43      	lsrs	r3, r0, #21
90024618:	0940      	lsrs	r0, r0, #5
9002461a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002461e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024622:	4318      	orrs	r0, r3
90024624:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024626:	441c      	add	r4, r3
90024628:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002462a:	f82a 0b02 	strh.w	r0, [sl], #2
9002462e:	441e      	add	r6, r3
90024630:	e73b      	b.n	900244aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90024632:	b00f      	add	sp, #60	@ 0x3c
90024634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90024638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002463c:	b085      	sub	sp, #20
9002463e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90024642:	9102      	str	r1, [sp, #8]
90024644:	2c00      	cmp	r4, #0
90024646:	fb04 7103 	mla	r1, r4, r3, r7
9002464a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
9002464e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90024652:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90024656:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
9002465a:	f2c0 811b 	blt.w	90024894 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002465e:	45a6      	cmp	lr, r4
90024660:	f340 8118 	ble.w	90024894 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90024664:	2f00      	cmp	r7, #0
90024666:	f2c0 8113 	blt.w	90024890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
9002466a:	42bb      	cmp	r3, r7
9002466c:	f340 8110 	ble.w	90024890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024670:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90024674:	1c7a      	adds	r2, r7, #1
90024676:	f100 8110 	bmi.w	9002489a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
9002467a:	4293      	cmp	r3, r2
9002467c:	f340 810d 	ble.w	9002489a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024680:	2e00      	cmp	r6, #0
90024682:	f000 810c 	beq.w	9002489e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90024686:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002468a:	3401      	adds	r4, #1
9002468c:	f100 810b 	bmi.w	900248a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90024690:	45a6      	cmp	lr, r4
90024692:	f340 8108 	ble.w	900248a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90024696:	2800      	cmp	r0, #0
90024698:	f000 8108 	beq.w	900248ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
9002469c:	2f00      	cmp	r7, #0
9002469e:	f2c0 8100 	blt.w	900248a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900246a2:	42bb      	cmp	r3, r7
900246a4:	f340 80fd 	ble.w	900248a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900246a8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900246ac:	3701      	adds	r7, #1
900246ae:	f100 8100 	bmi.w	900248b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900246b2:	42bb      	cmp	r3, r7
900246b4:	f340 80fd 	ble.w	900248b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900246b8:	2e00      	cmp	r6, #0
900246ba:	f000 80fc 	beq.w	900248b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
900246be:	3301      	adds	r3, #1
900246c0:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900246c4:	b2b6      	uxth	r6, r6
900246c6:	b280      	uxth	r0, r0
900246c8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900246cc:	fb00 fe06 	mul.w	lr, r0, r6
900246d0:	0136      	lsls	r6, r6, #4
900246d2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900246d6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900246da:	eba6 070e 	sub.w	r7, r6, lr
900246de:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
900246e2:	ea4f 6914 	mov.w	r9, r4, lsr #24
900246e6:	b280      	uxth	r0, r0
900246e8:	b2bf      	uxth	r7, r7
900246ea:	1a1b      	subs	r3, r3, r0
900246ec:	ea4f 6812 	mov.w	r8, r2, lsr #24
900246f0:	fb0a f607 	mul.w	r6, sl, r7
900246f4:	b29b      	uxth	r3, r3
900246f6:	fb0b 6603 	mla	r6, fp, r3, r6
900246fa:	fb00 6609 	mla	r6, r0, r9, r6
900246fe:	fb0e 6608 	mla	r6, lr, r8, r6
90024702:	f3c6 2607 	ubfx	r6, r6, #8, #8
90024706:	9600      	str	r6, [sp, #0]
90024708:	2e00      	cmp	r6, #0
9002470a:	f000 80be 	beq.w	9002488a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
9002470e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024712:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90024716:	9e02      	ldr	r6, [sp, #8]
90024718:	fb0b fc0c 	mul.w	ip, fp, ip
9002471c:	fb0b f505 	mul.w	r5, fp, r5
90024720:	8836      	ldrh	r6, [r6, #0]
90024722:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90024726:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002472a:	9501      	str	r5, [sp, #4]
9002472c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90024730:	44dc      	add	ip, fp
90024732:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024736:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002473a:	9503      	str	r5, [sp, #12]
9002473c:	9d01      	ldr	r5, [sp, #4]
9002473e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90024742:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90024746:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002474a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002474e:	fb0a fc0c 	mul.w	ip, sl, ip
90024752:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90024756:	fb0a fa01 	mul.w	sl, sl, r1
9002475a:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002475e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90024762:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90024766:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002476a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002476e:	4465      	add	r5, ip
90024770:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90024774:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90024778:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002477c:	fb09 fc0c 	mul.w	ip, r9, ip
90024780:	0a2d      	lsrs	r5, r5, #8
90024782:	fb09 f904 	mul.w	r9, r9, r4
90024786:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002478a:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002478e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90024792:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90024796:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002479a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002479e:	437d      	muls	r5, r7
900247a0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900247a4:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
900247a8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900247ac:	4461      	add	r1, ip
900247ae:	fb08 f404 	mul.w	r4, r8, r4
900247b2:	ea4f 2919 	mov.w	r9, r9, lsr #8
900247b6:	fb08 f802 	mul.w	r8, r8, r2
900247ba:	0a09      	lsrs	r1, r1, #8
900247bc:	0a22      	lsrs	r2, r4, #8
900247be:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900247c2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900247c6:	fb07 f70a 	mul.w	r7, r7, sl
900247ca:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900247ce:	4414      	add	r4, r2
900247d0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900247d4:	0a24      	lsrs	r4, r4, #8
900247d6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900247da:	9a03      	ldr	r2, [sp, #12]
900247dc:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900247e0:	fb02 5503 	mla	r5, r2, r3, r5
900247e4:	ea4f 2818 	mov.w	r8, r8, lsr #8
900247e8:	9a00      	ldr	r2, [sp, #0]
900247ea:	fb04 540e 	mla	r4, r4, lr, r5
900247ee:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900247f2:	1235      	asrs	r5, r6, #8
900247f4:	fb01 4100 	mla	r1, r1, r0, r4
900247f8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900247fc:	0a09      	lsrs	r1, r1, #8
900247fe:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90024802:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90024806:	fb03 7101 	mla	r1, r3, r1, r7
9002480a:	fb0e 1e08 	mla	lr, lr, r8, r1
9002480e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90024812:	fb00 e101 	mla	r1, r0, r1, lr
90024816:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
9002481a:	b287      	uxth	r7, r0
9002481c:	0a09      	lsrs	r1, r1, #8
9002481e:	437a      	muls	r2, r7
90024820:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90024824:	1c53      	adds	r3, r2, #1
90024826:	4321      	orrs	r1, r4
90024828:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002482c:	0c0a      	lsrs	r2, r1, #16
9002482e:	f3c1 2407 	ubfx	r4, r1, #8, #8
90024832:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90024836:	b2c8      	uxtb	r0, r1
90024838:	fb12 f207 	smulbb	r2, r2, r7
9002483c:	fb14 f407 	smulbb	r4, r4, r7
90024840:	b2db      	uxtb	r3, r3
90024842:	fb10 f007 	smulbb	r0, r0, r7
90024846:	fb05 2503 	mla	r5, r5, r3, r2
9002484a:	10f2      	asrs	r2, r6, #3
9002484c:	00f6      	lsls	r6, r6, #3
9002484e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90024852:	b2ad      	uxth	r5, r5
90024854:	b2f6      	uxtb	r6, r6
90024856:	fb02 4203 	mla	r2, r2, r3, r4
9002485a:	fb06 0303 	mla	r3, r6, r3, r0
9002485e:	b294      	uxth	r4, r2
90024860:	b299      	uxth	r1, r3
90024862:	1c6b      	adds	r3, r5, #1
90024864:	1c62      	adds	r2, r4, #1
90024866:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002486a:	1c4b      	adds	r3, r1, #1
9002486c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90024870:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024874:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024878:	0952      	lsrs	r2, r2, #5
9002487a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002487e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024882:	432b      	orrs	r3, r5
90024884:	4313      	orrs	r3, r2
90024886:	9a02      	ldr	r2, [sp, #8]
90024888:	8013      	strh	r3, [r2, #0]
9002488a:	b005      	add	sp, #20
9002488c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024890:	2500      	movs	r5, #0
90024892:	e6ef      	b.n	90024674 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90024894:	2100      	movs	r1, #0
90024896:	460d      	mov	r5, r1
90024898:	e6f7      	b.n	9002468a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002489a:	2100      	movs	r1, #0
9002489c:	e6f5      	b.n	9002468a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002489e:	4631      	mov	r1, r6
900248a0:	e6f3      	b.n	9002468a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900248a2:	2400      	movs	r4, #0
900248a4:	e702      	b.n	900246ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
900248a6:	2200      	movs	r2, #0
900248a8:	4614      	mov	r4, r2
900248aa:	e70b      	b.n	900246c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900248ac:	4602      	mov	r2, r0
900248ae:	4604      	mov	r4, r0
900248b0:	e708      	b.n	900246c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900248b2:	2200      	movs	r2, #0
900248b4:	e706      	b.n	900246c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900248b6:	4632      	mov	r2, r6
900248b8:	e704      	b.n	900246c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

900248ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900248ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900248be:	b09d      	sub	sp, #116	@ 0x74
900248c0:	9219      	str	r2, [sp, #100]	@ 0x64
900248c2:	9307      	str	r3, [sp, #28]
900248c4:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
900248c6:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
900248ca:	901b      	str	r0, [sp, #108]	@ 0x6c
900248cc:	931a      	str	r3, [sp, #104]	@ 0x68
900248ce:	6850      	ldr	r0, [r2, #4]
900248d0:	9117      	str	r1, [sp, #92]	@ 0x5c
900248d2:	6812      	ldr	r2, [r2, #0]
900248d4:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
900248d8:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
900248dc:	fb00 1303 	mla	r3, r0, r3, r1
900248e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900248e4:	930a      	str	r3, [sp, #40]	@ 0x28
900248e6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900248e8:	681b      	ldr	r3, [r3, #0]
900248ea:	9310      	str	r3, [sp, #64]	@ 0x40
900248ec:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
900248f0:	930b      	str	r3, [sp, #44]	@ 0x2c
900248f2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900248f4:	2b00      	cmp	r3, #0
900248f6:	dc03      	bgt.n	90024900 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900248f8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900248fa:	2b00      	cmp	r3, #0
900248fc:	f340 8375 	ble.w	90024fea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90024900:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90024902:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024906:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002490a:	1e48      	subs	r0, r1, #1
9002490c:	1e57      	subs	r7, r2, #1
9002490e:	9b07      	ldr	r3, [sp, #28]
90024910:	2b00      	cmp	r3, #0
90024912:	f340 818e 	ble.w	90024c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90024916:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002491a:	ea4f 4326 	mov.w	r3, r6, asr #16
9002491e:	d406      	bmi.n	9002492e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024920:	4584      	cmp	ip, r0
90024922:	da04      	bge.n	9002492e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024924:	2b00      	cmp	r3, #0
90024926:	db02      	blt.n	9002492e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024928:	42bb      	cmp	r3, r7
9002492a:	f2c0 8183 	blt.w	90024c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
9002492e:	f11c 0c01 	adds.w	ip, ip, #1
90024932:	f100 8173 	bmi.w	90024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024936:	4561      	cmp	r1, ip
90024938:	f2c0 8170 	blt.w	90024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002493c:	3301      	adds	r3, #1
9002493e:	f100 816d 	bmi.w	90024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024942:	429a      	cmp	r2, r3
90024944:	f2c0 816a 	blt.w	90024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024948:	9b07      	ldr	r3, [sp, #28]
9002494a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9002494c:	9318      	str	r3, [sp, #96]	@ 0x60
9002494e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024950:	2b00      	cmp	r3, #0
90024952:	f340 818c 	ble.w	90024c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90024956:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90024958:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002495c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002495e:	f3c4 3003 	ubfx	r0, r4, #12, #4
90024962:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90024966:	1422      	asrs	r2, r4, #16
90024968:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002496c:	689b      	ldr	r3, [r3, #8]
9002496e:	f100 81cd 	bmi.w	90024d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024972:	f103 38ff 	add.w	r8, r3, #4294967295
90024976:	4542      	cmp	r2, r8
90024978:	f280 81c8 	bge.w	90024d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002497c:	f1bc 0f00 	cmp.w	ip, #0
90024980:	f2c0 81c4 	blt.w	90024d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024984:	f10e 38ff 	add.w	r8, lr, #4294967295
90024988:	45c4      	cmp	ip, r8
9002498a:	f280 81bf 	bge.w	90024d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002498e:	b21b      	sxth	r3, r3
90024990:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90024992:	fb0c 2203 	mla	r2, ip, r3, r2
90024996:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9002499a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9002499e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900249a2:	2800      	cmp	r0, #0
900249a4:	f000 81a9 	beq.w	90024cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
900249a8:	f8d8 5004 	ldr.w	r5, [r8, #4]
900249ac:	950c      	str	r5, [sp, #48]	@ 0x30
900249ae:	0e2d      	lsrs	r5, r5, #24
900249b0:	9513      	str	r5, [sp, #76]	@ 0x4c
900249b2:	b181      	cbz	r1, 900249d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900249b4:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
900249b8:	3b01      	subs	r3, #1
900249ba:	009b      	lsls	r3, r3, #2
900249bc:	3304      	adds	r3, #4
900249be:	eb08 0c03 	add.w	ip, r8, r3
900249c2:	f858 3003 	ldr.w	r3, [r8, r3]
900249c6:	9308      	str	r3, [sp, #32]
900249c8:	0e1b      	lsrs	r3, r3, #24
900249ca:	9311      	str	r3, [sp, #68]	@ 0x44
900249cc:	f8dc 3004 	ldr.w	r3, [ip, #4]
900249d0:	930d      	str	r3, [sp, #52]	@ 0x34
900249d2:	0e1b      	lsrs	r3, r3, #24
900249d4:	9314      	str	r3, [sp, #80]	@ 0x50
900249d6:	b280      	uxth	r0, r0
900249d8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900249da:	b289      	uxth	r1, r1
900249dc:	fb00 f901 	mul.w	r9, r0, r1
900249e0:	0100      	lsls	r0, r0, #4
900249e2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900249e6:	eba0 0809 	sub.w	r8, r0, r9
900249ea:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900249ee:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900249f0:	b289      	uxth	r1, r1
900249f2:	fa1f f888 	uxth.w	r8, r8
900249f6:	1a5b      	subs	r3, r3, r1
900249f8:	fb08 f000 	mul.w	r0, r8, r0
900249fc:	b29b      	uxth	r3, r3
900249fe:	fb03 000e 	mla	r0, r3, lr, r0
90024a02:	fb01 0005 	mla	r0, r1, r5, r0
90024a06:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024a08:	fb09 0005 	mla	r0, r9, r5, r0
90024a0c:	f3c0 2007 	ubfx	r0, r0, #8, #8
90024a10:	2800      	cmp	r0, #0
90024a12:	f000 80fa 	beq.w	90024c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024a16:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90024a1a:	d01b      	beq.n	90024a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90024a1c:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90024a20:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90024a24:	fb0e fa0a 	mul.w	sl, lr, sl
90024a28:	fb0e fe02 	mul.w	lr, lr, r2
90024a2c:	ea4f 221a 	mov.w	r2, sl, lsr #8
90024a30:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024a34:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90024a38:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024a3c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024a40:	4452      	add	r2, sl
90024a42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024a46:	0a12      	lsrs	r2, r2, #8
90024a48:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024a4c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90024a50:	ea42 020c 	orr.w	r2, r2, ip
90024a54:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024a56:	2dff      	cmp	r5, #255	@ 0xff
90024a58:	d021      	beq.n	90024a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90024a5a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024a5c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024a60:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024a62:	fb05 fb0b 	mul.w	fp, r5, fp
90024a66:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024a68:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024a6c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90024a6e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024a72:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024a76:	fb05 fa0a 	mul.w	sl, r5, sl
90024a7a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024a7e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024a82:	44de      	add	lr, fp
90024a84:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024a88:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024a8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024a90:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024a94:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024a98:	ea4e 050a 	orr.w	r5, lr, sl
90024a9c:	950c      	str	r5, [sp, #48]	@ 0x30
90024a9e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024aa0:	2dff      	cmp	r5, #255	@ 0xff
90024aa2:	d021      	beq.n	90024ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90024aa4:	9d08      	ldr	r5, [sp, #32]
90024aa6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024aaa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024aac:	fb05 fb0b 	mul.w	fp, r5, fp
90024ab0:	9d08      	ldr	r5, [sp, #32]
90024ab2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024ab6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90024ab8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024abc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024ac0:	fb05 fa0a 	mul.w	sl, r5, sl
90024ac4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024ac8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024acc:	44de      	add	lr, fp
90024ace:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024ad2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024ad6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024ada:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024ade:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024ae2:	ea4e 050a 	orr.w	r5, lr, sl
90024ae6:	9508      	str	r5, [sp, #32]
90024ae8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024aea:	2dff      	cmp	r5, #255	@ 0xff
90024aec:	d021      	beq.n	90024b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90024aee:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024af0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90024af4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024af6:	fb05 fb0b 	mul.w	fp, r5, fp
90024afa:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024afc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024b00:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024b02:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024b06:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90024b0a:	fb05 fa0a 	mul.w	sl, r5, sl
90024b0e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024b12:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90024b16:	44de      	add	lr, fp
90024b18:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024b1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024b20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024b24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90024b28:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024b2c:	ea4e 050a 	orr.w	r5, lr, sl
90024b30:	950d      	str	r5, [sp, #52]	@ 0x34
90024b32:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024b34:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90024b38:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90024b3c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024b40:	9d08      	ldr	r5, [sp, #32]
90024b42:	fb08 fc0c 	mul.w	ip, r8, ip
90024b46:	fb03 cc0e 	mla	ip, r3, lr, ip
90024b4a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90024b4e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024b50:	fb01 cc0e 	mla	ip, r1, lr, ip
90024b54:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90024b58:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024b5a:	fb09 cc0e 	mla	ip, r9, lr, ip
90024b5e:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90024b62:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90024b64:	fb08 f80e 	mul.w	r8, r8, lr
90024b68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024b6c:	fb03 8202 	mla	r2, r3, r2, r8
90024b70:	9b08      	ldr	r3, [sp, #32]
90024b72:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024b76:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90024b7a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90024b7c:	fb01 220a 	mla	r2, r1, sl, r2
90024b80:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90024b84:	883b      	ldrh	r3, [r7, #0]
90024b86:	fb09 2901 	mla	r9, r9, r1, r2
90024b8a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90024b8c:	1219      	asrs	r1, r3, #8
90024b8e:	4342      	muls	r2, r0
90024b90:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024b94:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90024b98:	1c50      	adds	r0, r2, #1
90024b9a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90024b9e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90024ba2:	ea4c 0c09 	orr.w	ip, ip, r9
90024ba6:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90024baa:	ea4f 421c 	mov.w	r2, ip, lsr #16
90024bae:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90024bb2:	fa5f fc8c 	uxtb.w	ip, ip
90024bb6:	fb12 f205 	smulbb	r2, r2, r5
90024bba:	b2c0      	uxtb	r0, r0
90024bbc:	fb1c fc05 	smulbb	ip, ip, r5
90024bc0:	fb01 2100 	mla	r1, r1, r0, r2
90024bc4:	10da      	asrs	r2, r3, #3
90024bc6:	fb1e fe05 	smulbb	lr, lr, r5
90024bca:	00db      	lsls	r3, r3, #3
90024bcc:	b289      	uxth	r1, r1
90024bce:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90024bd2:	b2db      	uxtb	r3, r3
90024bd4:	fb02 e200 	mla	r2, r2, r0, lr
90024bd8:	fb03 c300 	mla	r3, r3, r0, ip
90024bdc:	b292      	uxth	r2, r2
90024bde:	fa1f fc83 	uxth.w	ip, r3
90024be2:	1c4b      	adds	r3, r1, #1
90024be4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024be8:	f10c 0301 	add.w	r3, ip, #1
90024bec:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90024bf0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90024bf4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024bf8:	430b      	orrs	r3, r1
90024bfa:	1c51      	adds	r1, r2, #1
90024bfc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024c00:	0952      	lsrs	r2, r2, #5
90024c02:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024c06:	4313      	orrs	r3, r2
90024c08:	803b      	strh	r3, [r7, #0]
90024c0a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024c0c:	3702      	adds	r7, #2
90024c0e:	441c      	add	r4, r3
90024c10:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90024c12:	441e      	add	r6, r3
90024c14:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024c16:	3b01      	subs	r3, #1
90024c18:	9318      	str	r3, [sp, #96]	@ 0x60
90024c1a:	e698      	b.n	9002494e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90024c1c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024c1e:	441c      	add	r4, r3
90024c20:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90024c22:	441e      	add	r6, r3
90024c24:	9b07      	ldr	r3, [sp, #28]
90024c26:	3b01      	subs	r3, #1
90024c28:	9307      	str	r3, [sp, #28]
90024c2a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024c2c:	3302      	adds	r3, #2
90024c2e:	930a      	str	r3, [sp, #40]	@ 0x28
90024c30:	e66d      	b.n	9002490e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90024c32:	d023      	beq.n	90024c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90024c34:	9b07      	ldr	r3, [sp, #28]
90024c36:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90024c38:	3b01      	subs	r3, #1
90024c3a:	fb00 4003 	mla	r0, r0, r3, r4
90024c3e:	1400      	asrs	r0, r0, #16
90024c40:	f53f ae82 	bmi.w	90024948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024c44:	3901      	subs	r1, #1
90024c46:	4288      	cmp	r0, r1
90024c48:	f6bf ae7e 	bge.w	90024948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024c4c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90024c4e:	fb01 6303 	mla	r3, r1, r3, r6
90024c52:	141b      	asrs	r3, r3, #16
90024c54:	f53f ae78 	bmi.w	90024948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024c58:	3a01      	subs	r2, #1
90024c5a:	4293      	cmp	r3, r2
90024c5c:	f6bf ae74 	bge.w	90024948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024c60:	f8dd b01c 	ldr.w	fp, [sp, #28]
90024c64:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90024c68:	f1bb 0f00 	cmp.w	fp, #0
90024c6c:	dc6c      	bgt.n	90024d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90024c6e:	9b07      	ldr	r3, [sp, #28]
90024c70:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90024c74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024c76:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90024c7a:	930a      	str	r3, [sp, #40]	@ 0x28
90024c7c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024c7e:	2b00      	cmp	r3, #0
90024c80:	f340 81b3 	ble.w	90024fea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90024c84:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024c88:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024c8a:	ee30 0a04 	vadd.f32	s0, s0, s8
90024c8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024c92:	eef0 6a62 	vmov.f32	s13, s5
90024c96:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024c9a:	ee31 1a05 	vadd.f32	s2, s2, s10
90024c9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024ca2:	ee16 4a90 	vmov	r4, s13
90024ca6:	eef0 6a43 	vmov.f32	s13, s6
90024caa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024cae:	ee16 6a90 	vmov	r6, s13
90024cb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024cb6:	ee61 7a27 	vmul.f32	s15, s2, s15
90024cba:	ee77 2a62 	vsub.f32	s5, s14, s5
90024cbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024cc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024cc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024cca:	ee12 2a90 	vmov	r2, s5
90024cce:	eef0 2a47 	vmov.f32	s5, s14
90024cd2:	fb92 f3f3 	sdiv	r3, r2, r3
90024cd6:	ee13 2a10 	vmov	r2, s6
90024cda:	9329      	str	r3, [sp, #164]	@ 0xa4
90024cdc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024cde:	eeb0 3a67 	vmov.f32	s6, s15
90024ce2:	fb92 f3f3 	sdiv	r3, r2, r3
90024ce6:	932a      	str	r3, [sp, #168]	@ 0xa8
90024ce8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024cea:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90024cec:	3b01      	subs	r3, #1
90024cee:	9317      	str	r3, [sp, #92]	@ 0x5c
90024cf0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024cf2:	bf08      	it	eq
90024cf4:	4613      	moveq	r3, r2
90024cf6:	9307      	str	r3, [sp, #28]
90024cf8:	e5fb      	b.n	900248f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90024cfa:	2900      	cmp	r1, #0
90024cfc:	f43f ae6b 	beq.w	900249d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90024d00:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90024d04:	9308      	str	r3, [sp, #32]
90024d06:	0e1b      	lsrs	r3, r3, #24
90024d08:	9311      	str	r3, [sp, #68]	@ 0x44
90024d0a:	e664      	b.n	900249d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90024d0c:	f112 0801 	adds.w	r8, r2, #1
90024d10:	f53f af7b 	bmi.w	90024c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024d14:	4543      	cmp	r3, r8
90024d16:	f6ff af78 	blt.w	90024c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024d1a:	f11c 0801 	adds.w	r8, ip, #1
90024d1e:	f53f af74 	bmi.w	90024c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024d22:	45c6      	cmp	lr, r8
90024d24:	f6ff af71 	blt.w	90024c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024d28:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90024d2a:	b21b      	sxth	r3, r3
90024d2c:	9201      	str	r2, [sp, #4]
90024d2e:	fa0f f28e 	sxth.w	r2, lr
90024d32:	e9cd 1504 	strd	r1, r5, [sp, #16]
90024d36:	e9cd c002 	strd	ip, r0, [sp, #8]
90024d3a:	9200      	str	r2, [sp, #0]
90024d3c:	4639      	mov	r1, r7
90024d3e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90024d40:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90024d42:	f7ff fc79 	bl	90024638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90024d46:	e760      	b.n	90024c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024d48:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90024d4a:	1427      	asrs	r7, r4, #16
90024d4c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90024d4e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024d52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024d56:	1433      	asrs	r3, r6, #16
90024d58:	f3c6 3003 	ubfx	r0, r6, #12, #4
90024d5c:	fb01 7303 	mla	r3, r1, r3, r7
90024d60:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90024d64:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90024d68:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024d6c:	2a00      	cmp	r2, #0
90024d6e:	f000 8133 	beq.w	90024fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90024d72:	687d      	ldr	r5, [r7, #4]
90024d74:	950e      	str	r5, [sp, #56]	@ 0x38
90024d76:	0e2d      	lsrs	r5, r5, #24
90024d78:	9515      	str	r5, [sp, #84]	@ 0x54
90024d7a:	b178      	cbz	r0, 90024d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024d7c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90024d80:	3901      	subs	r1, #1
90024d82:	0089      	lsls	r1, r1, #2
90024d84:	3104      	adds	r1, #4
90024d86:	eb07 0e01 	add.w	lr, r7, r1
90024d8a:	5879      	ldr	r1, [r7, r1]
90024d8c:	9109      	str	r1, [sp, #36]	@ 0x24
90024d8e:	0e09      	lsrs	r1, r1, #24
90024d90:	9112      	str	r1, [sp, #72]	@ 0x48
90024d92:	f8de 1004 	ldr.w	r1, [lr, #4]
90024d96:	910f      	str	r1, [sp, #60]	@ 0x3c
90024d98:	0e09      	lsrs	r1, r1, #24
90024d9a:	9116      	str	r1, [sp, #88]	@ 0x58
90024d9c:	b292      	uxth	r2, r2
90024d9e:	9915      	ldr	r1, [sp, #84]	@ 0x54
90024da0:	b280      	uxth	r0, r0
90024da2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024da4:	fb02 f800 	mul.w	r8, r2, r0
90024da8:	0112      	lsls	r2, r2, #4
90024daa:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90024dae:	eba2 0e08 	sub.w	lr, r2, r8
90024db2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90024db6:	b280      	uxth	r0, r0
90024db8:	fa1f fe8e 	uxth.w	lr, lr
90024dbc:	1a12      	subs	r2, r2, r0
90024dbe:	fb0e f101 	mul.w	r1, lr, r1
90024dc2:	b292      	uxth	r2, r2
90024dc4:	fb02 110c 	mla	r1, r2, ip, r1
90024dc8:	fb00 1105 	mla	r1, r0, r5, r1
90024dcc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90024dce:	fb08 1105 	mla	r1, r8, r5, r1
90024dd2:	f3c1 2107 	ubfx	r1, r1, #8, #8
90024dd6:	2900      	cmp	r1, #0
90024dd8:	f000 80f5 	beq.w	90024fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90024ddc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90024de0:	d019      	beq.n	90024e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90024de2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90024de6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024dea:	fb0c fa0a 	mul.w	sl, ip, sl
90024dee:	fb0c fc03 	mul.w	ip, ip, r3
90024df2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024df6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024dfa:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90024dfe:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024e02:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90024e06:	4453      	add	r3, sl
90024e08:	0a3f      	lsrs	r7, r7, #8
90024e0a:	0a1b      	lsrs	r3, r3, #8
90024e0c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90024e10:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024e14:	433b      	orrs	r3, r7
90024e16:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90024e18:	2dff      	cmp	r5, #255	@ 0xff
90024e1a:	d020      	beq.n	90024e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90024e1c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90024e1e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90024e22:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90024e24:	436f      	muls	r7, r5
90024e26:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90024e28:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024e2c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024e30:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90024e32:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024e36:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024e3a:	fb05 fa0a 	mul.w	sl, r5, sl
90024e3e:	44bc      	add	ip, r7
90024e40:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024e44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024e48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024e4c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024e50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024e54:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024e58:	ea4c 050a 	orr.w	r5, ip, sl
90024e5c:	950e      	str	r5, [sp, #56]	@ 0x38
90024e5e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024e60:	2dff      	cmp	r5, #255	@ 0xff
90024e62:	d020      	beq.n	90024ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90024e64:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90024e66:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90024e6a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024e6c:	436f      	muls	r7, r5
90024e6e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90024e70:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024e74:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024e78:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024e7a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024e7e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024e82:	fb05 fa0a 	mul.w	sl, r5, sl
90024e86:	44bc      	add	ip, r7
90024e88:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024e8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024e90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024e94:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024e98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024e9c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024ea0:	ea4c 050a 	orr.w	r5, ip, sl
90024ea4:	9509      	str	r5, [sp, #36]	@ 0x24
90024ea6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90024ea8:	2dff      	cmp	r5, #255	@ 0xff
90024eaa:	d020      	beq.n	90024eee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90024eac:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90024eae:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90024eb2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90024eb4:	436f      	muls	r7, r5
90024eb6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90024eb8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024ebc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90024ec0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90024ec2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024ec6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024eca:	fb05 fa0a 	mul.w	sl, r5, sl
90024ece:	44bc      	add	ip, r7
90024ed0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024ed4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024ed8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024edc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024ee0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024ee4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024ee8:	ea4c 050a 	orr.w	r5, ip, sl
90024eec:	950f      	str	r5, [sp, #60]	@ 0x3c
90024eee:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90024ef0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90024ef4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024ef8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90024efc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90024efe:	fb0e f707 	mul.w	r7, lr, r7
90024f02:	fb02 770c 	mla	r7, r2, ip, r7
90024f06:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024f0a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90024f0c:	fb00 770c 	mla	r7, r0, ip, r7
90024f10:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024f14:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90024f16:	fb08 770c 	mla	r7, r8, ip, r7
90024f1a:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90024f1e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90024f20:	fb0e fe0c 	mul.w	lr, lr, ip
90024f24:	0a3f      	lsrs	r7, r7, #8
90024f26:	fb02 e303 	mla	r3, r2, r3, lr
90024f2a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90024f2c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90024f30:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90024f34:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90024f36:	fb00 330a 	mla	r3, r0, sl, r3
90024f3a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90024f3e:	f8b9 0000 	ldrh.w	r0, [r9]
90024f42:	fb08 3c0c 	mla	ip, r8, ip, r3
90024f46:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024f48:	1202      	asrs	r2, r0, #8
90024f4a:	4359      	muls	r1, r3
90024f4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024f50:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90024f54:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90024f58:	1c4b      	adds	r3, r1, #1
90024f5a:	ea47 070c 	orr.w	r7, r7, ip
90024f5e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024f62:	0c3b      	lsrs	r3, r7, #16
90024f64:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90024f68:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90024f6c:	b2ff      	uxtb	r7, r7
90024f6e:	fb13 f305 	smulbb	r3, r3, r5
90024f72:	b2c9      	uxtb	r1, r1
90024f74:	fb17 f705 	smulbb	r7, r7, r5
90024f78:	fb02 3201 	mla	r2, r2, r1, r3
90024f7c:	10c3      	asrs	r3, r0, #3
90024f7e:	fb1c fc05 	smulbb	ip, ip, r5
90024f82:	00c0      	lsls	r0, r0, #3
90024f84:	b292      	uxth	r2, r2
90024f86:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024f8a:	b2c0      	uxtb	r0, r0
90024f8c:	fb03 c301 	mla	r3, r3, r1, ip
90024f90:	fb00 7001 	mla	r0, r0, r1, r7
90024f94:	1c51      	adds	r1, r2, #1
90024f96:	b29b      	uxth	r3, r3
90024f98:	b280      	uxth	r0, r0
90024f9a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024f9e:	f100 0c01 	add.w	ip, r0, #1
90024fa2:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90024fa6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90024faa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90024fae:	ea4c 0202 	orr.w	r2, ip, r2
90024fb2:	f103 0c01 	add.w	ip, r3, #1
90024fb6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90024fba:	095b      	lsrs	r3, r3, #5
90024fbc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024fc0:	431a      	orrs	r2, r3
90024fc2:	f8a9 2000 	strh.w	r2, [r9]
90024fc6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90024fc8:	f109 0902 	add.w	r9, r9, #2
90024fcc:	f10b 3bff 	add.w	fp, fp, #4294967295
90024fd0:	441c      	add	r4, r3
90024fd2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90024fd4:	441e      	add	r6, r3
90024fd6:	e647      	b.n	90024c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90024fd8:	2800      	cmp	r0, #0
90024fda:	f43f aedf 	beq.w	90024d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024fde:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90024fe2:	9109      	str	r1, [sp, #36]	@ 0x24
90024fe4:	0e09      	lsrs	r1, r1, #24
90024fe6:	9112      	str	r1, [sp, #72]	@ 0x48
90024fe8:	e6d8      	b.n	90024d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024fea:	b01d      	add	sp, #116	@ 0x74
90024fec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024ff0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90024ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024ff4:	b085      	sub	sp, #20
90024ff6:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90024ffa:	9102      	str	r1, [sp, #8]
90024ffc:	2c00      	cmp	r4, #0
90024ffe:	fb04 7103 	mla	r1, r4, r3, r7
90025002:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90025006:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
9002500a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002500e:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90025012:	f2c0 810c 	blt.w	9002522e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90025016:	45a6      	cmp	lr, r4
90025018:	f340 8109 	ble.w	9002522e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
9002501c:	2f00      	cmp	r7, #0
9002501e:	f2c0 8104 	blt.w	9002522a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90025022:	42bb      	cmp	r3, r7
90025024:	f340 8101 	ble.w	9002522a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90025028:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
9002502c:	1c7a      	adds	r2, r7, #1
9002502e:	f100 8101 	bmi.w	90025234 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90025032:	4293      	cmp	r3, r2
90025034:	f340 80fe 	ble.w	90025234 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90025038:	2e00      	cmp	r6, #0
9002503a:	f000 80fd 	beq.w	90025238 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
9002503e:	f8dc 1004 	ldr.w	r1, [ip, #4]
90025042:	3401      	adds	r4, #1
90025044:	f100 80fc 	bmi.w	90025240 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90025048:	45a6      	cmp	lr, r4
9002504a:	f340 80f9 	ble.w	90025240 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002504e:	2800      	cmp	r0, #0
90025050:	f000 80f9 	beq.w	90025246 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90025054:	2f00      	cmp	r7, #0
90025056:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
9002505a:	f2c0 80ef 	blt.w	9002523c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002505e:	42bb      	cmp	r3, r7
90025060:	f340 80ec 	ble.w	9002523c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90025064:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90025068:	3701      	adds	r7, #1
9002506a:	f100 80ef 	bmi.w	9002524c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002506e:	42bb      	cmp	r3, r7
90025070:	f340 80ec 	ble.w	9002524c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90025074:	2e00      	cmp	r6, #0
90025076:	f000 80eb 	beq.w	90025250 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
9002507a:	6852      	ldr	r2, [r2, #4]
9002507c:	b2b6      	uxth	r6, r6
9002507e:	b280      	uxth	r0, r0
90025080:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90025084:	fb00 fe06 	mul.w	lr, r0, r6
90025088:	0136      	lsls	r6, r6, #4
9002508a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002508e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90025092:	eba6 070e 	sub.w	r7, r6, lr
90025096:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002509a:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002509e:	b280      	uxth	r0, r0
900250a0:	b2bf      	uxth	r7, r7
900250a2:	1a1b      	subs	r3, r3, r0
900250a4:	ea4f 6812 	mov.w	r8, r2, lsr #24
900250a8:	fb07 f60a 	mul.w	r6, r7, sl
900250ac:	b29b      	uxth	r3, r3
900250ae:	fb0b 6603 	mla	r6, fp, r3, r6
900250b2:	fb00 6609 	mla	r6, r0, r9, r6
900250b6:	fb0e 6608 	mla	r6, lr, r8, r6
900250ba:	f3c6 2607 	ubfx	r6, r6, #8, #8
900250be:	9600      	str	r6, [sp, #0]
900250c0:	2e00      	cmp	r6, #0
900250c2:	f000 80af 	beq.w	90025224 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900250c6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900250ca:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900250ce:	9e02      	ldr	r6, [sp, #8]
900250d0:	fb0b fc0c 	mul.w	ip, fp, ip
900250d4:	fb0b f505 	mul.w	r5, fp, r5
900250d8:	8836      	ldrh	r6, [r6, #0]
900250da:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900250de:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900250e2:	9501      	str	r5, [sp, #4]
900250e4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900250e8:	44dc      	add	ip, fp
900250ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900250ee:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900250f2:	9503      	str	r5, [sp, #12]
900250f4:	9d01      	ldr	r5, [sp, #4]
900250f6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900250fa:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900250fe:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90025102:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025106:	fb0a fc0c 	mul.w	ip, sl, ip
9002510a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002510e:	fb0a fa01 	mul.w	sl, sl, r1
90025112:	ea4f 251c 	mov.w	r5, ip, lsr #8
90025116:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002511a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
9002511e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025122:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90025126:	4465      	add	r5, ip
90025128:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002512c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90025130:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025134:	fb09 fc0c 	mul.w	ip, r9, ip
90025138:	0a2d      	lsrs	r5, r5, #8
9002513a:	fb09 f904 	mul.w	r9, r9, r4
9002513e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025142:	ea4f 211c 	mov.w	r1, ip, lsr #8
90025146:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002514a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
9002514e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025152:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90025156:	437d      	muls	r5, r7
90025158:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9002515c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90025160:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90025164:	4461      	add	r1, ip
90025166:	fb08 f404 	mul.w	r4, r8, r4
9002516a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002516e:	fb08 f802 	mul.w	r8, r8, r2
90025172:	0a09      	lsrs	r1, r1, #8
90025174:	0a22      	lsrs	r2, r4, #8
90025176:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002517a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002517e:	fb07 f70a 	mul.w	r7, r7, sl
90025182:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025186:	4414      	add	r4, r2
90025188:	f508 7280 	add.w	r2, r8, #256	@ 0x100
9002518c:	0a24      	lsrs	r4, r4, #8
9002518e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90025192:	9a03      	ldr	r2, [sp, #12]
90025194:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90025198:	fb02 5503 	mla	r5, r2, r3, r5
9002519c:	ea4f 2818 	mov.w	r8, r8, lsr #8
900251a0:	fb04 540e 	mla	r4, r4, lr, r5
900251a4:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900251a8:	fb01 4100 	mla	r1, r1, r0, r4
900251ac:	0a09      	lsrs	r1, r1, #8
900251ae:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900251b2:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900251b6:	fb03 7101 	mla	r1, r3, r1, r7
900251ba:	9b00      	ldr	r3, [sp, #0]
900251bc:	fb0e 1e08 	mla	lr, lr, r8, r1
900251c0:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900251c4:	43da      	mvns	r2, r3
900251c6:	1233      	asrs	r3, r6, #8
900251c8:	fb00 e101 	mla	r1, r0, r1, lr
900251cc:	10f0      	asrs	r0, r6, #3
900251ce:	b2d2      	uxtb	r2, r2
900251d0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900251d4:	0a09      	lsrs	r1, r1, #8
900251d6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900251da:	00f6      	lsls	r6, r6, #3
900251dc:	4353      	muls	r3, r2
900251de:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900251e2:	4350      	muls	r0, r2
900251e4:	b2f6      	uxtb	r6, r6
900251e6:	4321      	orrs	r1, r4
900251e8:	4356      	muls	r6, r2
900251ea:	1c5a      	adds	r2, r3, #1
900251ec:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900251f0:	0c0b      	lsrs	r3, r1, #16
900251f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900251f6:	1c42      	adds	r2, r0, #1
900251f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900251fc:	0a0a      	lsrs	r2, r1, #8
900251fe:	021b      	lsls	r3, r3, #8
90025200:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90025204:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90025208:	00d2      	lsls	r2, r2, #3
9002520a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002520e:	4313      	orrs	r3, r2
90025210:	1c72      	adds	r2, r6, #1
90025212:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90025216:	eb01 2116 	add.w	r1, r1, r6, lsr #8
9002521a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002521e:	4319      	orrs	r1, r3
90025220:	9b02      	ldr	r3, [sp, #8]
90025222:	8019      	strh	r1, [r3, #0]
90025224:	b005      	add	sp, #20
90025226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002522a:	2500      	movs	r5, #0
9002522c:	e6fe      	b.n	9002502c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
9002522e:	2100      	movs	r1, #0
90025230:	460d      	mov	r5, r1
90025232:	e706      	b.n	90025042 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90025234:	2100      	movs	r1, #0
90025236:	e704      	b.n	90025042 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90025238:	4631      	mov	r1, r6
9002523a:	e702      	b.n	90025042 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
9002523c:	2400      	movs	r4, #0
9002523e:	e713      	b.n	90025068 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90025240:	2200      	movs	r2, #0
90025242:	4614      	mov	r4, r2
90025244:	e71a      	b.n	9002507c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90025246:	4602      	mov	r2, r0
90025248:	4604      	mov	r4, r0
9002524a:	e717      	b.n	9002507c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002524c:	2200      	movs	r2, #0
9002524e:	e715      	b.n	9002507c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90025250:	4632      	mov	r2, r6
90025252:	e713      	b.n	9002507c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90025254 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025258:	b09b      	sub	sp, #108	@ 0x6c
9002525a:	9218      	str	r2, [sp, #96]	@ 0x60
9002525c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002525e:	9019      	str	r0, [sp, #100]	@ 0x64
90025260:	9116      	str	r1, [sp, #88]	@ 0x58
90025262:	6850      	ldr	r0, [r2, #4]
90025264:	9307      	str	r3, [sp, #28]
90025266:	6812      	ldr	r2, [r2, #0]
90025268:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
9002526c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90025270:	fb00 1303 	mla	r3, r0, r3, r1
90025274:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025278:	930a      	str	r3, [sp, #40]	@ 0x28
9002527a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002527c:	681b      	ldr	r3, [r3, #0]
9002527e:	930f      	str	r3, [sp, #60]	@ 0x3c
90025280:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025282:	2b00      	cmp	r3, #0
90025284:	dc03      	bgt.n	9002528e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025286:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025288:	2b00      	cmp	r3, #0
9002528a:	f340 8387 	ble.w	9002599c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
9002528e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025290:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025294:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025298:	1e48      	subs	r0, r1, #1
9002529a:	1e57      	subs	r7, r2, #1
9002529c:	9b07      	ldr	r3, [sp, #28]
9002529e:	2b00      	cmp	r3, #0
900252a0:	f340 8166 	ble.w	90025570 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900252a4:	ea5f 4c24 	movs.w	ip, r4, asr #16
900252a8:	ea4f 4326 	mov.w	r3, r6, asr #16
900252ac:	d406      	bmi.n	900252bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900252ae:	4584      	cmp	ip, r0
900252b0:	da04      	bge.n	900252bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900252b2:	2b00      	cmp	r3, #0
900252b4:	db02      	blt.n	900252bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900252b6:	42bb      	cmp	r3, r7
900252b8:	f2c0 815b 	blt.w	90025572 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900252bc:	f11c 0c01 	adds.w	ip, ip, #1
900252c0:	f100 814b 	bmi.w	9002555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900252c4:	4561      	cmp	r1, ip
900252c6:	f2c0 8148 	blt.w	9002555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900252ca:	3301      	adds	r3, #1
900252cc:	f100 8145 	bmi.w	9002555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900252d0:	429a      	cmp	r2, r3
900252d2:	f2c0 8142 	blt.w	9002555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900252d6:	9b07      	ldr	r3, [sp, #28]
900252d8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900252da:	9317      	str	r3, [sp, #92]	@ 0x5c
900252dc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900252de:	2b00      	cmp	r3, #0
900252e0:	f340 8165 	ble.w	900255ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900252e4:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
900252e6:	ea4f 4c26 	mov.w	ip, r6, asr #16
900252ea:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900252ec:	f3c4 3103 	ubfx	r1, r4, #12, #4
900252f0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900252f4:	1422      	asrs	r2, r4, #16
900252f6:	f3c6 3003 	ubfx	r0, r6, #12, #4
900252fa:	689b      	ldr	r3, [r3, #8]
900252fc:	f100 81d5 	bmi.w	900256aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025300:	f103 38ff 	add.w	r8, r3, #4294967295
90025304:	4542      	cmp	r2, r8
90025306:	f280 81d0 	bge.w	900256aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
9002530a:	f1bc 0f00 	cmp.w	ip, #0
9002530e:	f2c0 81cc 	blt.w	900256aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025312:	f10e 38ff 	add.w	r8, lr, #4294967295
90025316:	45c4      	cmp	ip, r8
90025318:	f280 81c7 	bge.w	900256aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
9002531c:	b21b      	sxth	r3, r3
9002531e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90025320:	fb0c 2203 	mla	r2, ip, r3, r2
90025324:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90025328:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9002532c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90025330:	2900      	cmp	r1, #0
90025332:	f000 8182 	beq.w	9002563a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90025336:	f8d8 5004 	ldr.w	r5, [r8, #4]
9002533a:	950b      	str	r5, [sp, #44]	@ 0x2c
9002533c:	0e2d      	lsrs	r5, r5, #24
9002533e:	9512      	str	r5, [sp, #72]	@ 0x48
90025340:	b180      	cbz	r0, 90025364 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90025342:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90025346:	3b01      	subs	r3, #1
90025348:	009b      	lsls	r3, r3, #2
9002534a:	3304      	adds	r3, #4
9002534c:	eb08 0c03 	add.w	ip, r8, r3
90025350:	f858 3003 	ldr.w	r3, [r8, r3]
90025354:	9308      	str	r3, [sp, #32]
90025356:	0e1b      	lsrs	r3, r3, #24
90025358:	9310      	str	r3, [sp, #64]	@ 0x40
9002535a:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002535e:	930c      	str	r3, [sp, #48]	@ 0x30
90025360:	0e1b      	lsrs	r3, r3, #24
90025362:	9313      	str	r3, [sp, #76]	@ 0x4c
90025364:	b289      	uxth	r1, r1
90025366:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90025368:	b280      	uxth	r0, r0
9002536a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002536c:	fb01 f900 	mul.w	r9, r1, r0
90025370:	0109      	lsls	r1, r1, #4
90025372:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025376:	eba1 0809 	sub.w	r8, r1, r9
9002537a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
9002537e:	b280      	uxth	r0, r0
90025380:	fa1f f888 	uxth.w	r8, r8
90025384:	1a09      	subs	r1, r1, r0
90025386:	fb08 f303 	mul.w	r3, r8, r3
9002538a:	b289      	uxth	r1, r1
9002538c:	fb01 330e 	mla	r3, r1, lr, r3
90025390:	fb00 3305 	mla	r3, r0, r5, r3
90025394:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025396:	fb09 3305 	mla	r3, r9, r5, r3
9002539a:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002539e:	2b00      	cmp	r3, #0
900253a0:	f000 80d2 	beq.w	90025548 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900253a4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900253a8:	d01b      	beq.n	900253e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
900253aa:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
900253ae:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900253b2:	fb0e fa0a 	mul.w	sl, lr, sl
900253b6:	fb0e fe02 	mul.w	lr, lr, r2
900253ba:	ea4f 221a 	mov.w	r2, sl, lsr #8
900253be:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900253c2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900253c6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900253ca:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900253ce:	4452      	add	r2, sl
900253d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900253d4:	0a12      	lsrs	r2, r2, #8
900253d6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900253da:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900253de:	ea42 020c 	orr.w	r2, r2, ip
900253e2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900253e4:	2dff      	cmp	r5, #255	@ 0xff
900253e6:	d021      	beq.n	9002542c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900253e8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900253ea:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900253ee:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900253f0:	fb05 fb0b 	mul.w	fp, r5, fp
900253f4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900253f6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900253fa:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900253fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025400:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025404:	fb05 fa0a 	mul.w	sl, r5, sl
90025408:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002540c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025410:	44de      	add	lr, fp
90025412:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025416:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002541a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002541e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025422:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025426:	ea4e 050a 	orr.w	r5, lr, sl
9002542a:	950b      	str	r5, [sp, #44]	@ 0x2c
9002542c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002542e:	2dff      	cmp	r5, #255	@ 0xff
90025430:	d021      	beq.n	90025476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90025432:	9d08      	ldr	r5, [sp, #32]
90025434:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90025438:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002543a:	fb05 fb0b 	mul.w	fp, r5, fp
9002543e:	9d08      	ldr	r5, [sp, #32]
90025440:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90025444:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90025446:	fb05 fa0e 	mul.w	sl, r5, lr
9002544a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002544e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025452:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025456:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002545a:	44de      	add	lr, fp
9002545c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025460:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025464:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025468:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002546c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025470:	ea4e 050a 	orr.w	r5, lr, sl
90025474:	9508      	str	r5, [sp, #32]
90025476:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025478:	2dff      	cmp	r5, #255	@ 0xff
9002547a:	d021      	beq.n	900254c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
9002547c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002547e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90025482:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025484:	fb05 fb0b 	mul.w	fp, r5, fp
90025488:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002548a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002548e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025490:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025494:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025498:	fb05 fa0a 	mul.w	sl, r5, sl
9002549c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900254a0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900254a4:	44de      	add	lr, fp
900254a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900254aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900254ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900254b2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900254b6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900254ba:	ea4e 050a 	orr.w	r5, lr, sl
900254be:	950c      	str	r5, [sp, #48]	@ 0x30
900254c0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900254c2:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
900254c6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900254ca:	2bff      	cmp	r3, #255	@ 0xff
900254cc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900254d0:	9d08      	ldr	r5, [sp, #32]
900254d2:	fb08 fc0c 	mul.w	ip, r8, ip
900254d6:	fb01 cc0e 	mla	ip, r1, lr, ip
900254da:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900254de:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900254e0:	fb00 cc0e 	mla	ip, r0, lr, ip
900254e4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900254e8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900254ea:	fb09 cc0e 	mla	ip, r9, lr, ip
900254ee:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900254f2:	fb08 f80e 	mul.w	r8, r8, lr
900254f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900254fa:	fb01 8202 	mla	r2, r1, r2, r8
900254fe:	9908      	ldr	r1, [sp, #32]
90025500:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025504:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90025508:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002550a:	fb00 220a 	mla	r2, r0, sl, r2
9002550e:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90025512:	fb09 2900 	mla	r9, r9, r0, r2
90025516:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002551a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
9002551e:	ea4c 0c09 	orr.w	ip, ip, r9
90025522:	ea4f 221c 	mov.w	r2, ip, lsr #8
90025526:	f040 8091 	bne.w	9002564c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002552a:	ea4f 135c 	mov.w	r3, ip, lsr #5
9002552e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90025532:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025536:	f022 0207 	bic.w	r2, r2, #7
9002553a:	431a      	orrs	r2, r3
9002553c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90025540:	ea4c 0c02 	orr.w	ip, ip, r2
90025544:	f8a7 c000 	strh.w	ip, [r7]
90025548:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002554a:	3702      	adds	r7, #2
9002554c:	441c      	add	r4, r3
9002554e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025550:	441e      	add	r6, r3
90025552:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025554:	3b01      	subs	r3, #1
90025556:	9317      	str	r3, [sp, #92]	@ 0x5c
90025558:	e6c0      	b.n	900252dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
9002555a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002555c:	441c      	add	r4, r3
9002555e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025560:	441e      	add	r6, r3
90025562:	9b07      	ldr	r3, [sp, #28]
90025564:	3b01      	subs	r3, #1
90025566:	9307      	str	r3, [sp, #28]
90025568:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002556a:	3302      	adds	r3, #2
9002556c:	930a      	str	r3, [sp, #40]	@ 0x28
9002556e:	e695      	b.n	9002529c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025570:	d024      	beq.n	900255bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90025572:	9b07      	ldr	r3, [sp, #28]
90025574:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90025576:	3b01      	subs	r3, #1
90025578:	fb00 4003 	mla	r0, r0, r3, r4
9002557c:	1400      	asrs	r0, r0, #16
9002557e:	f53f aeaa 	bmi.w	900252d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025582:	3901      	subs	r1, #1
90025584:	4288      	cmp	r0, r1
90025586:	f6bf aea6 	bge.w	900252d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002558a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
9002558c:	fb01 6303 	mla	r3, r1, r3, r6
90025590:	141b      	asrs	r3, r3, #16
90025592:	f53f aea0 	bmi.w	900252d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025596:	3a01      	subs	r2, #1
90025598:	4293      	cmp	r3, r2
9002559a:	f6bf ae9c 	bge.w	900252d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002559e:	f8dd b01c 	ldr.w	fp, [sp, #28]
900255a2:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
900255a6:	f1bb 0f00 	cmp.w	fp, #0
900255aa:	f300 809a 	bgt.w	900256e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900255ae:	9b07      	ldr	r3, [sp, #28]
900255b0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900255b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900255b6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900255ba:	930a      	str	r3, [sp, #40]	@ 0x28
900255bc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900255be:	2b00      	cmp	r3, #0
900255c0:	f340 81ec 	ble.w	9002599c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900255c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900255c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900255ca:	ee30 0a04 	vadd.f32	s0, s0, s8
900255ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
900255d2:	eef0 6a62 	vmov.f32	s13, s5
900255d6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900255da:	ee31 1a05 	vadd.f32	s2, s2, s10
900255de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900255e2:	ee16 4a90 	vmov	r4, s13
900255e6:	eef0 6a43 	vmov.f32	s13, s6
900255ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900255ee:	ee16 6a90 	vmov	r6, s13
900255f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900255f6:	ee61 7a27 	vmul.f32	s15, s2, s15
900255fa:	ee77 2a62 	vsub.f32	s5, s14, s5
900255fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025602:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025606:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002560a:	ee12 2a90 	vmov	r2, s5
9002560e:	eef0 2a47 	vmov.f32	s5, s14
90025612:	fb92 f3f3 	sdiv	r3, r2, r3
90025616:	ee13 2a10 	vmov	r2, s6
9002561a:	9327      	str	r3, [sp, #156]	@ 0x9c
9002561c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002561e:	eeb0 3a67 	vmov.f32	s6, s15
90025622:	fb92 f3f3 	sdiv	r3, r2, r3
90025626:	9328      	str	r3, [sp, #160]	@ 0xa0
90025628:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002562a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9002562c:	3b01      	subs	r3, #1
9002562e:	9316      	str	r3, [sp, #88]	@ 0x58
90025630:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025632:	bf08      	it	eq
90025634:	4613      	moveq	r3, r2
90025636:	9307      	str	r3, [sp, #28]
90025638:	e622      	b.n	90025280 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
9002563a:	2800      	cmp	r0, #0
9002563c:	f43f ae92 	beq.w	90025364 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90025640:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90025644:	9308      	str	r3, [sp, #32]
90025646:	0e1b      	lsrs	r3, r3, #24
90025648:	9310      	str	r3, [sp, #64]	@ 0x40
9002564a:	e68b      	b.n	90025364 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002564c:	8839      	ldrh	r1, [r7, #0]
9002564e:	43db      	mvns	r3, r3
90025650:	4dd4      	ldr	r5, [pc, #848]	@ (900259a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90025652:	ea4f 2e21 	mov.w	lr, r1, asr #8
90025656:	fa5f f883 	uxtb.w	r8, r3
9002565a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9002565e:	10c8      	asrs	r0, r1, #3
90025660:	00cb      	lsls	r3, r1, #3
90025662:	fb0e fe08 	mul.w	lr, lr, r8
90025666:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002566a:	b2db      	uxtb	r3, r3
9002566c:	f10e 0101 	add.w	r1, lr, #1
90025670:	fb00 f008 	mul.w	r0, r0, r8
90025674:	fb03 f308 	mul.w	r3, r3, r8
90025678:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
9002567c:	ea4f 411c 	mov.w	r1, ip, lsr #16
90025680:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90025684:	f100 0e01 	add.w	lr, r0, #1
90025688:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
9002568c:	b2c9      	uxtb	r1, r1
9002568e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90025692:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90025696:	00d2      	lsls	r2, r2, #3
90025698:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002569c:	430a      	orrs	r2, r1
9002569e:	1c59      	adds	r1, r3, #1
900256a0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900256a4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900256a8:	e748      	b.n	9002553c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900256aa:	f112 0801 	adds.w	r8, r2, #1
900256ae:	f53f af4b 	bmi.w	90025548 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900256b2:	4543      	cmp	r3, r8
900256b4:	f6ff af48 	blt.w	90025548 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900256b8:	f11c 0801 	adds.w	r8, ip, #1
900256bc:	f53f af44 	bmi.w	90025548 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900256c0:	45c6      	cmp	lr, r8
900256c2:	f6ff af41 	blt.w	90025548 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900256c6:	b21b      	sxth	r3, r3
900256c8:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900256cc:	fa0f f28e 	sxth.w	r2, lr
900256d0:	e9cd 1003 	strd	r1, r0, [sp, #12]
900256d4:	9200      	str	r2, [sp, #0]
900256d6:	4639      	mov	r1, r7
900256d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900256da:	9819      	ldr	r0, [sp, #100]	@ 0x64
900256dc:	f7ff fc88 	bl	90024ff0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900256e0:	e732      	b.n	90025548 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900256e2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900256e4:	1421      	asrs	r1, r4, #16
900256e6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900256e8:	f3c4 3203 	ubfx	r2, r4, #12, #4
900256ec:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
900256f0:	1433      	asrs	r3, r6, #16
900256f2:	f3c6 3003 	ubfx	r0, r6, #12, #4
900256f6:	fb07 1303 	mla	r3, r7, r3, r1
900256fa:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900256fc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90025700:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90025704:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025708:	2a00      	cmp	r2, #0
9002570a:	f000 8108 	beq.w	9002591e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
9002570e:	684d      	ldr	r5, [r1, #4]
90025710:	950d      	str	r5, [sp, #52]	@ 0x34
90025712:	0e2d      	lsrs	r5, r5, #24
90025714:	9514      	str	r5, [sp, #80]	@ 0x50
90025716:	b178      	cbz	r0, 90025738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025718:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
9002571c:	3f01      	subs	r7, #1
9002571e:	00bf      	lsls	r7, r7, #2
90025720:	3704      	adds	r7, #4
90025722:	eb01 0e07 	add.w	lr, r1, r7
90025726:	59c9      	ldr	r1, [r1, r7]
90025728:	9109      	str	r1, [sp, #36]	@ 0x24
9002572a:	0e09      	lsrs	r1, r1, #24
9002572c:	9111      	str	r1, [sp, #68]	@ 0x44
9002572e:	f8de 1004 	ldr.w	r1, [lr, #4]
90025732:	910e      	str	r1, [sp, #56]	@ 0x38
90025734:	0e09      	lsrs	r1, r1, #24
90025736:	9115      	str	r1, [sp, #84]	@ 0x54
90025738:	b292      	uxth	r2, r2
9002573a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002573c:	b280      	uxth	r0, r0
9002573e:	fb02 f900 	mul.w	r9, r2, r0
90025742:	0112      	lsls	r2, r2, #4
90025744:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025748:	eba2 0e09 	sub.w	lr, r2, r9
9002574c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90025750:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90025752:	b280      	uxth	r0, r0
90025754:	fa1f fe8e 	uxth.w	lr, lr
90025758:	1a09      	subs	r1, r1, r0
9002575a:	fb0e f202 	mul.w	r2, lr, r2
9002575e:	b289      	uxth	r1, r1
90025760:	fb01 220c 	mla	r2, r1, ip, r2
90025764:	fb00 2205 	mla	r2, r0, r5, r2
90025768:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002576a:	fb09 2205 	mla	r2, r9, r5, r2
9002576e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90025772:	2a00      	cmp	r2, #0
90025774:	f000 80ca 	beq.w	9002590c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025778:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
9002577c:	d019      	beq.n	900257b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
9002577e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025782:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025786:	fb0c fa0a 	mul.w	sl, ip, sl
9002578a:	fb0c fc03 	mul.w	ip, ip, r3
9002578e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025792:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025796:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002579a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002579e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900257a2:	4453      	add	r3, sl
900257a4:	0a3f      	lsrs	r7, r7, #8
900257a6:	0a1b      	lsrs	r3, r3, #8
900257a8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900257ac:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900257b0:	433b      	orrs	r3, r7
900257b2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900257b4:	2dff      	cmp	r5, #255	@ 0xff
900257b6:	d020      	beq.n	900257fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
900257b8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900257ba:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900257be:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900257c0:	436f      	muls	r7, r5
900257c2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900257c4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900257c8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900257cc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900257ce:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900257d2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900257d6:	fb05 fa0a 	mul.w	sl, r5, sl
900257da:	44bc      	add	ip, r7
900257dc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900257e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900257e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900257e8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900257ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900257f0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900257f4:	ea4c 050a 	orr.w	r5, ip, sl
900257f8:	950d      	str	r5, [sp, #52]	@ 0x34
900257fa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900257fc:	2dff      	cmp	r5, #255	@ 0xff
900257fe:	d020      	beq.n	90025842 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90025800:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90025802:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90025806:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025808:	436f      	muls	r7, r5
9002580a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002580c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90025810:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025812:	fb05 fa0c 	mul.w	sl, r5, ip
90025816:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002581a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002581e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025822:	44bc      	add	ip, r7
90025824:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025828:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002582c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025830:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025834:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025838:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002583c:	ea4c 050a 	orr.w	r5, ip, sl
90025840:	9509      	str	r5, [sp, #36]	@ 0x24
90025842:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90025844:	2dff      	cmp	r5, #255	@ 0xff
90025846:	d020      	beq.n	9002588a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90025848:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002584a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002584e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90025850:	436f      	muls	r7, r5
90025852:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90025854:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025858:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002585c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002585e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025862:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025866:	fb05 fa0a 	mul.w	sl, r5, sl
9002586a:	44bc      	add	ip, r7
9002586c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025870:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025874:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025878:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002587c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025880:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025884:	ea4c 050a 	orr.w	r5, ip, sl
90025888:	950e      	str	r5, [sp, #56]	@ 0x38
9002588a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002588c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90025890:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025894:	2aff      	cmp	r2, #255	@ 0xff
90025896:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002589a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002589c:	fb0e f707 	mul.w	r7, lr, r7
900258a0:	fb01 770c 	mla	r7, r1, ip, r7
900258a4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900258a8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900258aa:	fb00 770c 	mla	r7, r0, ip, r7
900258ae:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900258b2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900258b4:	fb09 770c 	mla	r7, r9, ip, r7
900258b8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900258bc:	fb0e fe0c 	mul.w	lr, lr, ip
900258c0:	ea4f 2717 	mov.w	r7, r7, lsr #8
900258c4:	fb01 e303 	mla	r3, r1, r3, lr
900258c8:	9909      	ldr	r1, [sp, #36]	@ 0x24
900258ca:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900258ce:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900258d2:	990e      	ldr	r1, [sp, #56]	@ 0x38
900258d4:	fb00 330a 	mla	r3, r0, sl, r3
900258d8:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900258dc:	fb09 3c0c 	mla	ip, r9, ip, r3
900258e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900258e4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900258e8:	ea47 070c 	orr.w	r7, r7, ip
900258ec:	ea4f 2317 	mov.w	r3, r7, lsr #8
900258f0:	d11e      	bne.n	90025930 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
900258f2:	097a      	lsrs	r2, r7, #5
900258f4:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
900258f8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900258fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025900:	f023 0307 	bic.w	r3, r3, #7
90025904:	4313      	orrs	r3, r2
90025906:	431f      	orrs	r7, r3
90025908:	f8a8 7000 	strh.w	r7, [r8]
9002590c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002590e:	f108 0802 	add.w	r8, r8, #2
90025912:	f10b 3bff 	add.w	fp, fp, #4294967295
90025916:	441c      	add	r4, r3
90025918:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002591a:	441e      	add	r6, r3
9002591c:	e643      	b.n	900255a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002591e:	2800      	cmp	r0, #0
90025920:	f43f af0a 	beq.w	90025738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025924:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90025928:	9109      	str	r1, [sp, #36]	@ 0x24
9002592a:	0e09      	lsrs	r1, r1, #24
9002592c:	9111      	str	r1, [sp, #68]	@ 0x44
9002592e:	e703      	b.n	90025738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025930:	f8b8 1000 	ldrh.w	r1, [r8]
90025934:	43d2      	mvns	r2, r2
90025936:	ea4f 2c21 	mov.w	ip, r1, asr #8
9002593a:	fa5f fe82 	uxtb.w	lr, r2
9002593e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90025942:	10c8      	asrs	r0, r1, #3
90025944:	00ca      	lsls	r2, r1, #3
90025946:	fb0c fc0e 	mul.w	ip, ip, lr
9002594a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002594e:	b2d2      	uxtb	r2, r2
90025950:	f10c 0101 	add.w	r1, ip, #1
90025954:	fb00 f00e 	mul.w	r0, r0, lr
90025958:	fb02 f20e 	mul.w	r2, r2, lr
9002595c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025960:	0c39      	lsrs	r1, r7, #16
90025962:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025966:	490f      	ldr	r1, [pc, #60]	@ (900259a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90025968:	fa5f fc8c 	uxtb.w	ip, ip
9002596c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90025970:	1c41      	adds	r1, r0, #1
90025972:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025976:	1c51      	adds	r1, r2, #1
90025978:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002597c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025980:	00c0      	lsls	r0, r0, #3
90025982:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90025986:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002598a:	f3c7 07c4 	ubfx	r7, r7, #3, #5
9002598e:	ea4c 0c00 	orr.w	ip, ip, r0
90025992:	ea47 0c0c 	orr.w	ip, r7, ip
90025996:	f8a8 c000 	strh.w	ip, [r8]
9002599a:	e7b7      	b.n	9002590c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
9002599c:	b01b      	add	sp, #108	@ 0x6c
9002599e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900259a2:	bf00      	nop
900259a4:	fffff800 	.word	0xfffff800

900259a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
900259a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900259ac:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900259b0:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900259b4:	2d00      	cmp	r5, #0
900259b6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900259ba:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900259be:	fb05 0e03 	mla	lr, r5, r3, r0
900259c2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900259c6:	f2c0 808c 	blt.w	90025ae2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900259ca:	45a9      	cmp	r9, r5
900259cc:	f340 8089 	ble.w	90025ae2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900259d0:	2800      	cmp	r0, #0
900259d2:	f2c0 8084 	blt.w	90025ade <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900259d6:	4580      	cmp	r8, r0
900259d8:	f340 8081 	ble.w	90025ade <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900259dc:	ea4f 045e 	mov.w	r4, lr, lsr #1
900259e0:	f01e 0f01 	tst.w	lr, #1
900259e4:	5d16      	ldrb	r6, [r2, r4]
900259e6:	bf0c      	ite	eq
900259e8:	f006 060f 	andeq.w	r6, r6, #15
900259ec:	1136      	asrne	r6, r6, #4
900259ee:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900259f2:	b2f6      	uxtb	r6, r6
900259f4:	1c44      	adds	r4, r0, #1
900259f6:	d477      	bmi.n	90025ae8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900259f8:	45a0      	cmp	r8, r4
900259fa:	dd75      	ble.n	90025ae8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900259fc:	2f00      	cmp	r7, #0
900259fe:	d075      	beq.n	90025aec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90025a00:	f10e 0a01 	add.w	sl, lr, #1
90025a04:	ea4f 045a 	mov.w	r4, sl, lsr #1
90025a08:	f01a 0f01 	tst.w	sl, #1
90025a0c:	5d14      	ldrb	r4, [r2, r4]
90025a0e:	bf0c      	ite	eq
90025a10:	f004 040f 	andeq.w	r4, r4, #15
90025a14:	1124      	asrne	r4, r4, #4
90025a16:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90025a1a:	b2e4      	uxtb	r4, r4
90025a1c:	3501      	adds	r5, #1
90025a1e:	d469      	bmi.n	90025af4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90025a20:	45a9      	cmp	r9, r5
90025a22:	dd67      	ble.n	90025af4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90025a24:	f1bc 0f00 	cmp.w	ip, #0
90025a28:	d067      	beq.n	90025afa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90025a2a:	2800      	cmp	r0, #0
90025a2c:	db60      	blt.n	90025af0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90025a2e:	4580      	cmp	r8, r0
90025a30:	dd5e      	ble.n	90025af0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90025a32:	eb03 090e 	add.w	r9, r3, lr
90025a36:	ea4f 0559 	mov.w	r5, r9, lsr #1
90025a3a:	f019 0f01 	tst.w	r9, #1
90025a3e:	5d55      	ldrb	r5, [r2, r5]
90025a40:	bf0c      	ite	eq
90025a42:	f005 050f 	andeq.w	r5, r5, #15
90025a46:	112d      	asrne	r5, r5, #4
90025a48:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90025a4c:	b2ed      	uxtb	r5, r5
90025a4e:	3001      	adds	r0, #1
90025a50:	d456      	bmi.n	90025b00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90025a52:	4580      	cmp	r8, r0
90025a54:	dd54      	ble.n	90025b00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90025a56:	2f00      	cmp	r7, #0
90025a58:	d054      	beq.n	90025b04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90025a5a:	3301      	adds	r3, #1
90025a5c:	449e      	add	lr, r3
90025a5e:	ea4f 035e 	mov.w	r3, lr, lsr #1
90025a62:	f01e 0f01 	tst.w	lr, #1
90025a66:	5cd0      	ldrb	r0, [r2, r3]
90025a68:	bf0c      	ite	eq
90025a6a:	f000 000f 	andeq.w	r0, r0, #15
90025a6e:	1100      	asrne	r0, r0, #4
90025a70:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025a74:	b2c3      	uxtb	r3, r0
90025a76:	b2ba      	uxth	r2, r7
90025a78:	fa1f fc8c 	uxth.w	ip, ip
90025a7c:	fb02 f00c 	mul.w	r0, r2, ip
90025a80:	0112      	lsls	r2, r2, #4
90025a82:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90025a86:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90025a8a:	1a12      	subs	r2, r2, r0
90025a8c:	fa1f fc8c 	uxth.w	ip, ip
90025a90:	b292      	uxth	r2, r2
90025a92:	eba7 070c 	sub.w	r7, r7, ip
90025a96:	4362      	muls	r2, r4
90025a98:	b2bf      	uxth	r7, r7
90025a9a:	fb06 2207 	mla	r2, r6, r7, r2
90025a9e:	fb0c 2505 	mla	r5, ip, r5, r2
90025aa2:	fb00 5303 	mla	r3, r0, r3, r5
90025aa6:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025aaa:	b1b3      	cbz	r3, 90025ada <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025aac:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90025ab0:	435a      	muls	r2, r3
90025ab2:	1c53      	adds	r3, r2, #1
90025ab4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025ab8:	4a2d      	ldr	r2, [pc, #180]	@ (90025b70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90025aba:	121b      	asrs	r3, r3, #8
90025abc:	6812      	ldr	r2, [r2, #0]
90025abe:	2bff      	cmp	r3, #255	@ 0xff
90025ac0:	ea4f 2612 	mov.w	r6, r2, lsr #8
90025ac4:	d120      	bne.n	90025b08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90025ac6:	0950      	lsrs	r0, r2, #5
90025ac8:	4b2a      	ldr	r3, [pc, #168]	@ (90025b74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90025aca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025ace:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025ad2:	4033      	ands	r3, r6
90025ad4:	4318      	orrs	r0, r3
90025ad6:	4302      	orrs	r2, r0
90025ad8:	800a      	strh	r2, [r1, #0]
90025ada:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025ade:	2600      	movs	r6, #0
90025ae0:	e788      	b.n	900259f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90025ae2:	2400      	movs	r4, #0
90025ae4:	4626      	mov	r6, r4
90025ae6:	e799      	b.n	90025a1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025ae8:	2400      	movs	r4, #0
90025aea:	e797      	b.n	90025a1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025aec:	463c      	mov	r4, r7
90025aee:	e795      	b.n	90025a1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025af0:	2500      	movs	r5, #0
90025af2:	e7ac      	b.n	90025a4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90025af4:	2300      	movs	r3, #0
90025af6:	461d      	mov	r5, r3
90025af8:	e7bd      	b.n	90025a76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025afa:	4663      	mov	r3, ip
90025afc:	4665      	mov	r5, ip
90025afe:	e7ba      	b.n	90025a76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025b00:	2300      	movs	r3, #0
90025b02:	e7b8      	b.n	90025a76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025b04:	463b      	mov	r3, r7
90025b06:	e7b6      	b.n	90025a76 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025b08:	880d      	ldrh	r5, [r1, #0]
90025b0a:	b29f      	uxth	r7, r3
90025b0c:	f3c2 4007 	ubfx	r0, r2, #16, #8
90025b10:	43db      	mvns	r3, r3
90025b12:	122c      	asrs	r4, r5, #8
90025b14:	fb10 f007 	smulbb	r0, r0, r7
90025b18:	b2db      	uxtb	r3, r3
90025b1a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90025b1e:	b2f6      	uxtb	r6, r6
90025b20:	b2d2      	uxtb	r2, r2
90025b22:	fb04 0403 	mla	r4, r4, r3, r0
90025b26:	10e8      	asrs	r0, r5, #3
90025b28:	fb12 f207 	smulbb	r2, r2, r7
90025b2c:	00ed      	lsls	r5, r5, #3
90025b2e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025b32:	b2a4      	uxth	r4, r4
90025b34:	fb16 f607 	smulbb	r6, r6, r7
90025b38:	b2ed      	uxtb	r5, r5
90025b3a:	fb00 6603 	mla	r6, r0, r3, r6
90025b3e:	fb05 2303 	mla	r3, r5, r3, r2
90025b42:	b2b0      	uxth	r0, r6
90025b44:	b29a      	uxth	r2, r3
90025b46:	1c63      	adds	r3, r4, #1
90025b48:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90025b4c:	1c53      	adds	r3, r2, #1
90025b4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025b52:	1c42      	adds	r2, r0, #1
90025b54:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90025b58:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025b5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025b60:	0940      	lsrs	r0, r0, #5
90025b62:	4323      	orrs	r3, r4
90025b64:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025b68:	4303      	orrs	r3, r0
90025b6a:	800b      	strh	r3, [r1, #0]
90025b6c:	e7b5      	b.n	90025ada <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025b6e:	bf00      	nop
90025b70:	240218c4 	.word	0x240218c4
90025b74:	00fff800 	.word	0x00fff800

90025b78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025b7c:	b097      	sub	sp, #92	@ 0x5c
90025b7e:	9214      	str	r2, [sp, #80]	@ 0x50
90025b80:	9309      	str	r3, [sp, #36]	@ 0x24
90025b82:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90025b84:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90025b88:	9015      	str	r0, [sp, #84]	@ 0x54
90025b8a:	910d      	str	r1, [sp, #52]	@ 0x34
90025b8c:	6850      	ldr	r0, [r2, #4]
90025b8e:	930f      	str	r3, [sp, #60]	@ 0x3c
90025b90:	6812      	ldr	r2, [r2, #0]
90025b92:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90025b96:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90025b9a:	fb00 1303 	mla	r3, r0, r3, r1
90025b9e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90025ba2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025ba4:	689b      	ldr	r3, [r3, #8]
90025ba6:	3301      	adds	r3, #1
90025ba8:	f023 0301 	bic.w	r3, r3, #1
90025bac:	930a      	str	r3, [sp, #40]	@ 0x28
90025bae:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025bb0:	681f      	ldr	r7, [r3, #0]
90025bb2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025bb4:	2b00      	cmp	r3, #0
90025bb6:	dc03      	bgt.n	90025bc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025bb8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90025bba:	2b00      	cmp	r3, #0
90025bbc:	f340 8289 	ble.w	900260d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90025bc0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025bc2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025bc6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025bca:	1e48      	subs	r0, r1, #1
90025bcc:	f102 3cff 	add.w	ip, r2, #4294967295
90025bd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025bd2:	2b00      	cmp	r3, #0
90025bd4:	f340 80c5 	ble.w	90025d62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90025bd8:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025bdc:	ea4f 4326 	mov.w	r3, r6, asr #16
90025be0:	d406      	bmi.n	90025bf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025be2:	4586      	cmp	lr, r0
90025be4:	da04      	bge.n	90025bf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025be6:	2b00      	cmp	r3, #0
90025be8:	db02      	blt.n	90025bf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025bea:	4563      	cmp	r3, ip
90025bec:	f2c0 80ba 	blt.w	90025d64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90025bf0:	f11e 0e01 	adds.w	lr, lr, #1
90025bf4:	f100 80ab 	bmi.w	90025d4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025bf8:	4571      	cmp	r1, lr
90025bfa:	f2c0 80a8 	blt.w	90025d4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025bfe:	3301      	adds	r3, #1
90025c00:	f100 80a5 	bmi.w	90025d4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025c04:	429a      	cmp	r2, r3
90025c06:	f2c0 80a2 	blt.w	90025d4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025c0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025c0c:	46c8      	mov	r8, r9
90025c0e:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90025c12:	930e      	str	r3, [sp, #56]	@ 0x38
90025c14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025c16:	2b00      	cmp	r3, #0
90025c18:	f340 80c4 	ble.w	90025da4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90025c1c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025c1e:	1430      	asrs	r0, r6, #16
90025c20:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025c24:	f3c6 3103 	ubfx	r1, r6, #12, #4
90025c28:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90025c2c:	1423      	asrs	r3, r4, #16
90025c2e:	f100 814f 	bmi.w	90025ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025c32:	f10c 3bff 	add.w	fp, ip, #4294967295
90025c36:	455b      	cmp	r3, fp
90025c38:	f280 814a 	bge.w	90025ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025c3c:	2800      	cmp	r0, #0
90025c3e:	f2c0 8147 	blt.w	90025ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025c42:	f10e 3bff 	add.w	fp, lr, #4294967295
90025c46:	4558      	cmp	r0, fp
90025c48:	f280 8142 	bge.w	90025ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025c4c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90025c4e:	fb00 3305 	mla	r3, r0, r5, r3
90025c52:	0858      	lsrs	r0, r3, #1
90025c54:	07dd      	lsls	r5, r3, #31
90025c56:	f817 c000 	ldrb.w	ip, [r7, r0]
90025c5a:	bf54      	ite	pl
90025c5c:	f00c 0c0f 	andpl.w	ip, ip, #15
90025c60:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025c64:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025c68:	fa5f fc8c 	uxtb.w	ip, ip
90025c6c:	2a00      	cmp	r2, #0
90025c6e:	f000 80dd 	beq.w	90025e2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90025c72:	1c58      	adds	r0, r3, #1
90025c74:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90025c78:	07c0      	lsls	r0, r0, #31
90025c7a:	f817 e00e 	ldrb.w	lr, [r7, lr]
90025c7e:	bf54      	ite	pl
90025c80:	f00e 0e0f 	andpl.w	lr, lr, #15
90025c84:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90025c88:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90025c8c:	fa5f f08e 	uxtb.w	r0, lr
90025c90:	9010      	str	r0, [sp, #64]	@ 0x40
90025c92:	b1d9      	cbz	r1, 90025ccc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90025c94:	4453      	add	r3, sl
90025c96:	0858      	lsrs	r0, r3, #1
90025c98:	07dd      	lsls	r5, r3, #31
90025c9a:	f103 0301 	add.w	r3, r3, #1
90025c9e:	5c38      	ldrb	r0, [r7, r0]
90025ca0:	bf54      	ite	pl
90025ca2:	f000 000f 	andpl.w	r0, r0, #15
90025ca6:	1100      	asrmi	r0, r0, #4
90025ca8:	07dd      	lsls	r5, r3, #31
90025caa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025cae:	b2c0      	uxtb	r0, r0
90025cb0:	900b      	str	r0, [sp, #44]	@ 0x2c
90025cb2:	ea4f 0053 	mov.w	r0, r3, lsr #1
90025cb6:	f817 e000 	ldrb.w	lr, [r7, r0]
90025cba:	bf54      	ite	pl
90025cbc:	f00e 030f 	andpl.w	r3, lr, #15
90025cc0:	ea4f 132e 	movmi.w	r3, lr, asr #4
90025cc4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90025cc8:	b2db      	uxtb	r3, r3
90025cca:	9311      	str	r3, [sp, #68]	@ 0x44
90025ccc:	b292      	uxth	r2, r2
90025cce:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90025cd0:	b289      	uxth	r1, r1
90025cd2:	fb02 f301 	mul.w	r3, r2, r1
90025cd6:	0112      	lsls	r2, r2, #4
90025cd8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90025cdc:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90025ce0:	1ad2      	subs	r2, r2, r3
90025ce2:	b289      	uxth	r1, r1
90025ce4:	b292      	uxth	r2, r2
90025ce6:	1a40      	subs	r0, r0, r1
90025ce8:	436a      	muls	r2, r5
90025cea:	b280      	uxth	r0, r0
90025cec:	fb0c 2c00 	mla	ip, ip, r0, r2
90025cf0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90025cf2:	fb01 c102 	mla	r1, r1, r2, ip
90025cf6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90025cf8:	fb03 1302 	mla	r3, r3, r2, r1
90025cfc:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025d00:	b1db      	cbz	r3, 90025d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025d02:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90025d04:	4353      	muls	r3, r2
90025d06:	1c5a      	adds	r2, r3, #1
90025d08:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025d0c:	4ac6      	ldr	r2, [pc, #792]	@ (90026028 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90025d0e:	121b      	asrs	r3, r3, #8
90025d10:	6812      	ldr	r2, [r2, #0]
90025d12:	2bff      	cmp	r3, #255	@ 0xff
90025d14:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90025d18:	f040 8099 	bne.w	90025e4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90025d1c:	0953      	lsrs	r3, r2, #5
90025d1e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90025d22:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025d26:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025d2a:	f02c 0c07 	bic.w	ip, ip, #7
90025d2e:	ea43 0c0c 	orr.w	ip, r3, ip
90025d32:	ea4c 0202 	orr.w	r2, ip, r2
90025d36:	f8a8 2000 	strh.w	r2, [r8]
90025d3a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90025d3c:	f108 0802 	add.w	r8, r8, #2
90025d40:	441c      	add	r4, r3
90025d42:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025d44:	441e      	add	r6, r3
90025d46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025d48:	3b01      	subs	r3, #1
90025d4a:	930e      	str	r3, [sp, #56]	@ 0x38
90025d4c:	e762      	b.n	90025c14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90025d4e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90025d50:	f109 0902 	add.w	r9, r9, #2
90025d54:	441c      	add	r4, r3
90025d56:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025d58:	441e      	add	r6, r3
90025d5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025d5c:	3b01      	subs	r3, #1
90025d5e:	9309      	str	r3, [sp, #36]	@ 0x24
90025d60:	e736      	b.n	90025bd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025d62:	d024      	beq.n	90025dae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90025d64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025d66:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90025d68:	3b01      	subs	r3, #1
90025d6a:	fb00 4003 	mla	r0, r0, r3, r4
90025d6e:	1400      	asrs	r0, r0, #16
90025d70:	f53f af4b 	bmi.w	90025c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025d74:	3901      	subs	r1, #1
90025d76:	4288      	cmp	r0, r1
90025d78:	f6bf af47 	bge.w	90025c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025d7c:	9924      	ldr	r1, [sp, #144]	@ 0x90
90025d7e:	fb01 6303 	mla	r3, r1, r3, r6
90025d82:	141b      	asrs	r3, r3, #16
90025d84:	f53f af41 	bmi.w	90025c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025d88:	3a01      	subs	r2, #1
90025d8a:	4293      	cmp	r3, r2
90025d8c:	f6bf af3d 	bge.w	90025c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025d90:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90025d94:	46c8      	mov	r8, r9
90025d96:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90025d9a:	930e      	str	r3, [sp, #56]	@ 0x38
90025d9c:	f1bb 0f00 	cmp.w	fp, #0
90025da0:	f300 80b7 	bgt.w	90025f12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90025da4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025da6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90025daa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90025dae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025db0:	2b00      	cmp	r3, #0
90025db2:	f340 818e 	ble.w	900260d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90025db6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025dba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025dbc:	ee30 0a04 	vadd.f32	s0, s0, s8
90025dc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025dc4:	eef0 6a62 	vmov.f32	s13, s5
90025dc8:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025dcc:	ee31 1a05 	vadd.f32	s2, s2, s10
90025dd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025dd4:	ee16 4a90 	vmov	r4, s13
90025dd8:	eef0 6a43 	vmov.f32	s13, s6
90025ddc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025de0:	ee16 6a90 	vmov	r6, s13
90025de4:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025de8:	ee61 7a27 	vmul.f32	s15, s2, s15
90025dec:	ee77 2a62 	vsub.f32	s5, s14, s5
90025df0:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025df4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025df8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025dfc:	ee12 2a90 	vmov	r2, s5
90025e00:	eef0 2a47 	vmov.f32	s5, s14
90025e04:	fb92 f3f3 	sdiv	r3, r2, r3
90025e08:	ee13 2a10 	vmov	r2, s6
90025e0c:	9323      	str	r3, [sp, #140]	@ 0x8c
90025e0e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025e10:	eeb0 3a67 	vmov.f32	s6, s15
90025e14:	fb92 f3f3 	sdiv	r3, r2, r3
90025e18:	9324      	str	r3, [sp, #144]	@ 0x90
90025e1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025e1c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90025e1e:	3b01      	subs	r3, #1
90025e20:	930d      	str	r3, [sp, #52]	@ 0x34
90025e22:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025e24:	bf08      	it	eq
90025e26:	4613      	moveq	r3, r2
90025e28:	9309      	str	r3, [sp, #36]	@ 0x24
90025e2a:	e6c2      	b.n	90025bb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025e2c:	2900      	cmp	r1, #0
90025e2e:	f43f af4d 	beq.w	90025ccc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90025e32:	eb0a 0003 	add.w	r0, sl, r3
90025e36:	0843      	lsrs	r3, r0, #1
90025e38:	07c0      	lsls	r0, r0, #31
90025e3a:	5cfb      	ldrb	r3, [r7, r3]
90025e3c:	bf54      	ite	pl
90025e3e:	f003 030f 	andpl.w	r3, r3, #15
90025e42:	111b      	asrmi	r3, r3, #4
90025e44:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90025e48:	b2db      	uxtb	r3, r3
90025e4a:	930b      	str	r3, [sp, #44]	@ 0x2c
90025e4c:	e73e      	b.n	90025ccc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90025e4e:	f8b8 e000 	ldrh.w	lr, [r8]
90025e52:	fa1f fb83 	uxth.w	fp, r3
90025e56:	f3c2 4107 	ubfx	r1, r2, #16, #8
90025e5a:	43db      	mvns	r3, r3
90025e5c:	ea4f 202e 	mov.w	r0, lr, asr #8
90025e60:	fb11 f10b 	smulbb	r1, r1, fp
90025e64:	b2db      	uxtb	r3, r3
90025e66:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025e6a:	fa5f fc8c 	uxtb.w	ip, ip
90025e6e:	b2d2      	uxtb	r2, r2
90025e70:	fb00 1003 	mla	r0, r0, r3, r1
90025e74:	ea4f 01ee 	mov.w	r1, lr, asr #3
90025e78:	fb1c fc0b 	smulbb	ip, ip, fp
90025e7c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90025e80:	b280      	uxth	r0, r0
90025e82:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025e86:	fb12 fb0b 	smulbb	fp, r2, fp
90025e8a:	fa5f fe8e 	uxtb.w	lr, lr
90025e8e:	fb01 cc03 	mla	ip, r1, r3, ip
90025e92:	fb0e bb03 	mla	fp, lr, r3, fp
90025e96:	1c43      	adds	r3, r0, #1
90025e98:	fa1f fc8c 	uxth.w	ip, ip
90025e9c:	fa1f fb8b 	uxth.w	fp, fp
90025ea0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025ea4:	f10c 0101 	add.w	r1, ip, #1
90025ea8:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90025eac:	f10b 0001 	add.w	r0, fp, #1
90025eb0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025eb4:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90025eb8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025ebc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90025ec0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90025ec4:	4318      	orrs	r0, r3
90025ec6:	ea40 000c 	orr.w	r0, r0, ip
90025eca:	f8a8 0000 	strh.w	r0, [r8]
90025ece:	e734      	b.n	90025d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025ed0:	f113 0b01 	adds.w	fp, r3, #1
90025ed4:	f53f af31 	bmi.w	90025d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025ed8:	45dc      	cmp	ip, fp
90025eda:	f6ff af2e 	blt.w	90025d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025ede:	f110 0b01 	adds.w	fp, r0, #1
90025ee2:	f53f af2a 	bmi.w	90025d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025ee6:	45de      	cmp	lr, fp
90025ee8:	f6ff af27 	blt.w	90025d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025eec:	9302      	str	r3, [sp, #8]
90025eee:	fa0f f38e 	sxth.w	r3, lr
90025ef2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90025ef4:	9301      	str	r3, [sp, #4]
90025ef6:	fa0f f38c 	sxth.w	r3, ip
90025efa:	e9cd 0203 	strd	r0, r2, [sp, #12]
90025efe:	e9cd 1505 	strd	r1, r5, [sp, #20]
90025f02:	9300      	str	r3, [sp, #0]
90025f04:	463a      	mov	r2, r7
90025f06:	4653      	mov	r3, sl
90025f08:	4641      	mov	r1, r8
90025f0a:	9815      	ldr	r0, [sp, #84]	@ 0x54
90025f0c:	f7ff fd4c 	bl	900259a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90025f10:	e713      	b.n	90025d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025f12:	1422      	asrs	r2, r4, #16
90025f14:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90025f16:	1433      	asrs	r3, r6, #16
90025f18:	f3c4 3103 	ubfx	r1, r4, #12, #4
90025f1c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025f20:	fb05 2303 	mla	r3, r5, r3, r2
90025f24:	085a      	lsrs	r2, r3, #1
90025f26:	07dd      	lsls	r5, r3, #31
90025f28:	5cba      	ldrb	r2, [r7, r2]
90025f2a:	bf54      	ite	pl
90025f2c:	f002 020f 	andpl.w	r2, r2, #15
90025f30:	1112      	asrmi	r2, r2, #4
90025f32:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90025f36:	b2d2      	uxtb	r2, r2
90025f38:	2900      	cmp	r1, #0
90025f3a:	d077      	beq.n	9002602c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90025f3c:	f103 0e01 	add.w	lr, r3, #1
90025f40:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90025f44:	f01e 0f01 	tst.w	lr, #1
90025f48:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025f4c:	bf0c      	ite	eq
90025f4e:	f00c 0c0f 	andeq.w	ip, ip, #15
90025f52:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90025f56:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025f5a:	fa5f f58c 	uxtb.w	r5, ip
90025f5e:	9512      	str	r5, [sp, #72]	@ 0x48
90025f60:	b308      	cbz	r0, 90025fa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90025f62:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90025f64:	442b      	add	r3, r5
90025f66:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025f6a:	07dd      	lsls	r5, r3, #31
90025f6c:	f103 0301 	add.w	r3, r3, #1
90025f70:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025f74:	bf54      	ite	pl
90025f76:	f00c 0c0f 	andpl.w	ip, ip, #15
90025f7a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025f7e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025f82:	fa5f f58c 	uxtb.w	r5, ip
90025f86:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025f8a:	950c      	str	r5, [sp, #48]	@ 0x30
90025f8c:	07dd      	lsls	r5, r3, #31
90025f8e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025f92:	bf54      	ite	pl
90025f94:	f00c 0c0f 	andpl.w	ip, ip, #15
90025f98:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025f9c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025fa0:	fa5f f38c 	uxtb.w	r3, ip
90025fa4:	9313      	str	r3, [sp, #76]	@ 0x4c
90025fa6:	b289      	uxth	r1, r1
90025fa8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90025faa:	b280      	uxth	r0, r0
90025fac:	fb01 f300 	mul.w	r3, r1, r0
90025fb0:	0109      	lsls	r1, r1, #4
90025fb2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90025fb6:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90025fba:	1ac9      	subs	r1, r1, r3
90025fbc:	b280      	uxth	r0, r0
90025fbe:	b289      	uxth	r1, r1
90025fc0:	ebac 0c00 	sub.w	ip, ip, r0
90025fc4:	4369      	muls	r1, r5
90025fc6:	fa1f fc8c 	uxth.w	ip, ip
90025fca:	fb02 120c 	mla	r2, r2, ip, r1
90025fce:	990c      	ldr	r1, [sp, #48]	@ 0x30
90025fd0:	fb00 2001 	mla	r0, r0, r1, r2
90025fd4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90025fd6:	fb03 0302 	mla	r3, r3, r2, r0
90025fda:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025fde:	b1d3      	cbz	r3, 90026016 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90025fe0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90025fe2:	4353      	muls	r3, r2
90025fe4:	1c5a      	adds	r2, r3, #1
90025fe6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025fea:	4a0f      	ldr	r2, [pc, #60]	@ (90026028 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90025fec:	121b      	asrs	r3, r3, #8
90025fee:	6812      	ldr	r2, [r2, #0]
90025ff0:	2bff      	cmp	r3, #255	@ 0xff
90025ff2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90025ff6:	d12d      	bne.n	90026054 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90025ff8:	0953      	lsrs	r3, r2, #5
90025ffa:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90025ffe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026002:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026006:	f02c 0c07 	bic.w	ip, ip, #7
9002600a:	ea43 0c0c 	orr.w	ip, r3, ip
9002600e:	ea4c 0202 	orr.w	r2, ip, r2
90026012:	f8a8 2000 	strh.w	r2, [r8]
90026016:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90026018:	f108 0802 	add.w	r8, r8, #2
9002601c:	f10b 3bff 	add.w	fp, fp, #4294967295
90026020:	441c      	add	r4, r3
90026022:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026024:	441e      	add	r6, r3
90026026:	e6b9      	b.n	90025d9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90026028:	240218c4 	.word	0x240218c4
9002602c:	2800      	cmp	r0, #0
9002602e:	d0ba      	beq.n	90025fa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90026030:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026032:	442b      	add	r3, r5
90026034:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90026038:	07db      	lsls	r3, r3, #31
9002603a:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002603e:	bf54      	ite	pl
90026040:	f00c 0c0f 	andpl.w	ip, ip, #15
90026044:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026048:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002604c:	fa5f f38c 	uxtb.w	r3, ip
90026050:	930c      	str	r3, [sp, #48]	@ 0x30
90026052:	e7a8      	b.n	90025fa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90026054:	f8b8 e000 	ldrh.w	lr, [r8]
90026058:	fa1f fa83 	uxth.w	sl, r3
9002605c:	f3c2 4107 	ubfx	r1, r2, #16, #8
90026060:	43db      	mvns	r3, r3
90026062:	ea4f 202e 	mov.w	r0, lr, asr #8
90026066:	fb11 f10a 	smulbb	r1, r1, sl
9002606a:	b2db      	uxtb	r3, r3
9002606c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026070:	b2d2      	uxtb	r2, r2
90026072:	fa5f fc8c 	uxtb.w	ip, ip
90026076:	fb00 1003 	mla	r0, r0, r3, r1
9002607a:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002607e:	fb12 f20a 	smulbb	r2, r2, sl
90026082:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90026086:	b280      	uxth	r0, r0
90026088:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002608c:	fb1c fc0a 	smulbb	ip, ip, sl
90026090:	fa5f fe8e 	uxtb.w	lr, lr
90026094:	fb0e 2203 	mla	r2, lr, r3, r2
90026098:	fb01 cc03 	mla	ip, r1, r3, ip
9002609c:	1c43      	adds	r3, r0, #1
9002609e:	b292      	uxth	r2, r2
900260a0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900260a4:	1c51      	adds	r1, r2, #1
900260a6:	fa1f fc8c 	uxth.w	ip, ip
900260aa:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900260ae:	eb01 2112 	add.w	r1, r1, r2, lsr #8
900260b2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900260b6:	4308      	orrs	r0, r1
900260b8:	f10c 0101 	add.w	r1, ip, #1
900260bc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900260c0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900260c4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900260c8:	ea40 000c 	orr.w	r0, r0, ip
900260cc:	f8a8 0000 	strh.w	r0, [r8]
900260d0:	e7a1      	b.n	90026016 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900260d2:	b017      	add	sp, #92	@ 0x5c
900260d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900260d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
900260d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900260dc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900260e0:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900260e4:	2d00      	cmp	r5, #0
900260e6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900260ea:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900260ee:	fb05 0e03 	mla	lr, r5, r3, r0
900260f2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900260f6:	f2c0 80b0 	blt.w	9002625a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900260fa:	45a9      	cmp	r9, r5
900260fc:	f340 80ad 	ble.w	9002625a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90026100:	2800      	cmp	r0, #0
90026102:	f2c0 80a8 	blt.w	90026256 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90026106:	4580      	cmp	r8, r0
90026108:	f340 80a5 	ble.w	90026256 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
9002610c:	ea4f 045e 	mov.w	r4, lr, lsr #1
90026110:	f01e 0f01 	tst.w	lr, #1
90026114:	5d16      	ldrb	r6, [r2, r4]
90026116:	bf0c      	ite	eq
90026118:	f006 060f 	andeq.w	r6, r6, #15
9002611c:	1136      	asrne	r6, r6, #4
9002611e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90026122:	b2f6      	uxtb	r6, r6
90026124:	1c44      	adds	r4, r0, #1
90026126:	f100 809b 	bmi.w	90026260 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002612a:	45a0      	cmp	r8, r4
9002612c:	f340 8098 	ble.w	90026260 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90026130:	2f00      	cmp	r7, #0
90026132:	f000 8097 	beq.w	90026264 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90026136:	f10e 0a01 	add.w	sl, lr, #1
9002613a:	ea4f 045a 	mov.w	r4, sl, lsr #1
9002613e:	f01a 0f01 	tst.w	sl, #1
90026142:	5d14      	ldrb	r4, [r2, r4]
90026144:	bf0c      	ite	eq
90026146:	f004 040f 	andeq.w	r4, r4, #15
9002614a:	1124      	asrne	r4, r4, #4
9002614c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90026150:	b2e4      	uxtb	r4, r4
90026152:	3501      	adds	r5, #1
90026154:	f100 808a 	bmi.w	9002626c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90026158:	45a9      	cmp	r9, r5
9002615a:	f340 8087 	ble.w	9002626c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002615e:	f1bc 0f00 	cmp.w	ip, #0
90026162:	f000 8086 	beq.w	90026272 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90026166:	2800      	cmp	r0, #0
90026168:	db7e      	blt.n	90026268 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002616a:	4580      	cmp	r8, r0
9002616c:	dd7c      	ble.n	90026268 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002616e:	eb03 090e 	add.w	r9, r3, lr
90026172:	ea4f 0559 	mov.w	r5, r9, lsr #1
90026176:	f019 0f01 	tst.w	r9, #1
9002617a:	5d55      	ldrb	r5, [r2, r5]
9002617c:	bf0c      	ite	eq
9002617e:	f005 050f 	andeq.w	r5, r5, #15
90026182:	112d      	asrne	r5, r5, #4
90026184:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90026188:	b2ed      	uxtb	r5, r5
9002618a:	3001      	adds	r0, #1
9002618c:	d474      	bmi.n	90026278 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002618e:	4580      	cmp	r8, r0
90026190:	dd72      	ble.n	90026278 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90026192:	2f00      	cmp	r7, #0
90026194:	d072      	beq.n	9002627c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90026196:	3301      	adds	r3, #1
90026198:	449e      	add	lr, r3
9002619a:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002619e:	f01e 0f01 	tst.w	lr, #1
900261a2:	5cd0      	ldrb	r0, [r2, r3]
900261a4:	bf0c      	ite	eq
900261a6:	f000 000f 	andeq.w	r0, r0, #15
900261aa:	1100      	asrne	r0, r0, #4
900261ac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900261b0:	b2c3      	uxtb	r3, r0
900261b2:	b2ba      	uxth	r2, r7
900261b4:	fa1f fc8c 	uxth.w	ip, ip
900261b8:	fb02 f00c 	mul.w	r0, r2, ip
900261bc:	0112      	lsls	r2, r2, #4
900261be:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900261c2:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
900261c6:	1a12      	subs	r2, r2, r0
900261c8:	fa1f fc8c 	uxth.w	ip, ip
900261cc:	b292      	uxth	r2, r2
900261ce:	eba7 070c 	sub.w	r7, r7, ip
900261d2:	4362      	muls	r2, r4
900261d4:	b2bf      	uxth	r7, r7
900261d6:	fb06 2207 	mla	r2, r6, r7, r2
900261da:	fb0c 2505 	mla	r5, ip, r5, r2
900261de:	fb00 5303 	mla	r3, r0, r3, r5
900261e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900261e6:	b3a3      	cbz	r3, 90026252 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
900261e8:	4a25      	ldr	r2, [pc, #148]	@ (90026280 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
900261ea:	880e      	ldrh	r6, [r1, #0]
900261ec:	6815      	ldr	r5, [r2, #0]
900261ee:	b29a      	uxth	r2, r3
900261f0:	1234      	asrs	r4, r6, #8
900261f2:	43db      	mvns	r3, r3
900261f4:	f3c5 4007 	ubfx	r0, r5, #16, #8
900261f8:	f3c5 2707 	ubfx	r7, r5, #8, #8
900261fc:	b2db      	uxtb	r3, r3
900261fe:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90026202:	fb10 f002 	smulbb	r0, r0, r2
90026206:	b2ed      	uxtb	r5, r5
90026208:	fb17 f702 	smulbb	r7, r7, r2
9002620c:	fb04 0403 	mla	r4, r4, r3, r0
90026210:	10f0      	asrs	r0, r6, #3
90026212:	fb15 f202 	smulbb	r2, r5, r2
90026216:	00f6      	lsls	r6, r6, #3
90026218:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002621c:	b2a4      	uxth	r4, r4
9002621e:	b2f6      	uxtb	r6, r6
90026220:	fb00 7003 	mla	r0, r0, r3, r7
90026224:	fb06 2303 	mla	r3, r6, r3, r2
90026228:	b280      	uxth	r0, r0
9002622a:	b29a      	uxth	r2, r3
9002622c:	1c63      	adds	r3, r4, #1
9002622e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90026232:	1c53      	adds	r3, r2, #1
90026234:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026238:	1c42      	adds	r2, r0, #1
9002623a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002623e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026242:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026246:	0940      	lsrs	r0, r0, #5
90026248:	4323      	orrs	r3, r4
9002624a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002624e:	4303      	orrs	r3, r0
90026250:	800b      	strh	r3, [r1, #0]
90026252:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026256:	2600      	movs	r6, #0
90026258:	e764      	b.n	90026124 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
9002625a:	2400      	movs	r4, #0
9002625c:	4626      	mov	r6, r4
9002625e:	e778      	b.n	90026152 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026260:	2400      	movs	r4, #0
90026262:	e776      	b.n	90026152 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026264:	463c      	mov	r4, r7
90026266:	e774      	b.n	90026152 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026268:	2500      	movs	r5, #0
9002626a:	e78e      	b.n	9002618a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
9002626c:	2300      	movs	r3, #0
9002626e:	461d      	mov	r5, r3
90026270:	e79f      	b.n	900261b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026272:	4663      	mov	r3, ip
90026274:	4665      	mov	r5, ip
90026276:	e79c      	b.n	900261b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026278:	2300      	movs	r3, #0
9002627a:	e79a      	b.n	900261b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002627c:	463b      	mov	r3, r7
9002627e:	e798      	b.n	900261b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026280:	240218c4 	.word	0x240218c4

90026284 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026288:	b093      	sub	sp, #76	@ 0x4c
9002628a:	461d      	mov	r5, r3
9002628c:	920c      	str	r2, [sp, #48]	@ 0x30
9002628e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90026290:	9011      	str	r0, [sp, #68]	@ 0x44
90026292:	9107      	str	r1, [sp, #28]
90026294:	6850      	ldr	r0, [r2, #4]
90026296:	6812      	ldr	r2, [r2, #0]
90026298:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9002629c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
900262a0:	fb00 1303 	mla	r3, r0, r3, r1
900262a4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900262a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900262aa:	689b      	ldr	r3, [r3, #8]
900262ac:	3301      	adds	r3, #1
900262ae:	f023 0301 	bic.w	r3, r3, #1
900262b2:	9306      	str	r3, [sp, #24]
900262b4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900262b6:	681f      	ldr	r7, [r3, #0]
900262b8:	9b07      	ldr	r3, [sp, #28]
900262ba:	2b00      	cmp	r3, #0
900262bc:	dc03      	bgt.n	900262c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900262be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900262c0:	2b00      	cmp	r3, #0
900262c2:	f340 8267 	ble.w	90026794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900262c6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900262c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900262cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900262d0:	1e48      	subs	r0, r1, #1
900262d2:	f102 3cff 	add.w	ip, r2, #4294967295
900262d6:	2d00      	cmp	r5, #0
900262d8:	f340 80b7 	ble.w	9002644a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900262dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
900262e0:	ea4f 4326 	mov.w	r3, r6, asr #16
900262e4:	d406      	bmi.n	900262f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900262e6:	4586      	cmp	lr, r0
900262e8:	da04      	bge.n	900262f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900262ea:	2b00      	cmp	r3, #0
900262ec:	db02      	blt.n	900262f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900262ee:	4563      	cmp	r3, ip
900262f0:	f2c0 80ac 	blt.w	9002644c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900262f4:	f11e 0e01 	adds.w	lr, lr, #1
900262f8:	f100 809f 	bmi.w	9002643a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900262fc:	4571      	cmp	r1, lr
900262fe:	f2c0 809c 	blt.w	9002643a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026302:	3301      	adds	r3, #1
90026304:	f100 8099 	bmi.w	9002643a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026308:	429a      	cmp	r2, r3
9002630a:	f2c0 8096 	blt.w	9002643a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002630e:	46c8      	mov	r8, r9
90026310:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90026314:	9509      	str	r5, [sp, #36]	@ 0x24
90026316:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026318:	2b00      	cmp	r3, #0
9002631a:	f340 80b5 	ble.w	90026488 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002631e:	f3c4 3303 	ubfx	r3, r4, #12, #4
90026322:	1430      	asrs	r0, r6, #16
90026324:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026328:	9308      	str	r3, [sp, #32]
9002632a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002632c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90026330:	1423      	asrs	r3, r4, #16
90026332:	f100 813f 	bmi.w	900265b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026336:	f10c 3bff 	add.w	fp, ip, #4294967295
9002633a:	455b      	cmp	r3, fp
9002633c:	f280 813a 	bge.w	900265b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026340:	2800      	cmp	r0, #0
90026342:	f2c0 8137 	blt.w	900265b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026346:	f10e 3bff 	add.w	fp, lr, #4294967295
9002634a:	4558      	cmp	r0, fp
9002634c:	f280 8132 	bge.w	900265b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026350:	9a06      	ldr	r2, [sp, #24]
90026352:	fb00 3302 	mla	r3, r0, r2, r3
90026356:	0858      	lsrs	r0, r3, #1
90026358:	07da      	lsls	r2, r3, #31
9002635a:	9a08      	ldr	r2, [sp, #32]
9002635c:	f817 c000 	ldrb.w	ip, [r7, r0]
90026360:	bf54      	ite	pl
90026362:	f00c 0c0f 	andpl.w	ip, ip, #15
90026366:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002636a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002636e:	fa5f fc8c 	uxtb.w	ip, ip
90026372:	2a00      	cmp	r2, #0
90026374:	f000 80cc 	beq.w	90026510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90026378:	1c58      	adds	r0, r3, #1
9002637a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9002637e:	07c0      	lsls	r0, r0, #31
90026380:	f817 e00e 	ldrb.w	lr, [r7, lr]
90026384:	bf54      	ite	pl
90026386:	f00e 0e0f 	andpl.w	lr, lr, #15
9002638a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9002638e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90026392:	fa5f fe8e 	uxtb.w	lr, lr
90026396:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
9002639a:	b1b9      	cbz	r1, 900263cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002639c:	4453      	add	r3, sl
9002639e:	0858      	lsrs	r0, r3, #1
900263a0:	07da      	lsls	r2, r3, #31
900263a2:	5c38      	ldrb	r0, [r7, r0]
900263a4:	bf54      	ite	pl
900263a6:	f000 000f 	andpl.w	r0, r0, #15
900263aa:	1100      	asrmi	r0, r0, #4
900263ac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900263b0:	b2c0      	uxtb	r0, r0
900263b2:	900a      	str	r0, [sp, #40]	@ 0x28
900263b4:	1c58      	adds	r0, r3, #1
900263b6:	0843      	lsrs	r3, r0, #1
900263b8:	07c2      	lsls	r2, r0, #31
900263ba:	5cfb      	ldrb	r3, [r7, r3]
900263bc:	bf54      	ite	pl
900263be:	f003 030f 	andpl.w	r3, r3, #15
900263c2:	111b      	asrmi	r3, r3, #4
900263c4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900263c8:	b2db      	uxtb	r3, r3
900263ca:	930e      	str	r3, [sp, #56]	@ 0x38
900263cc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900263d0:	b289      	uxth	r1, r1
900263d2:	fb02 f301 	mul.w	r3, r2, r1
900263d6:	0112      	lsls	r2, r2, #4
900263d8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900263dc:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900263e0:	1ad2      	subs	r2, r2, r3
900263e2:	b289      	uxth	r1, r1
900263e4:	b292      	uxth	r2, r2
900263e6:	1a40      	subs	r0, r0, r1
900263e8:	fa1f fe80 	uxth.w	lr, r0
900263ec:	980d      	ldr	r0, [sp, #52]	@ 0x34
900263ee:	4342      	muls	r2, r0
900263f0:	fb0c 2c0e 	mla	ip, ip, lr, r2
900263f4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900263f6:	fb01 c102 	mla	r1, r1, r2, ip
900263fa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900263fc:	fb03 1302 	mla	r3, r3, r2, r1
90026400:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026404:	2bff      	cmp	r3, #255	@ 0xff
90026406:	f040 8094 	bne.w	90026532 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
9002640a:	4bbf      	ldr	r3, [pc, #764]	@ (90026708 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002640c:	681a      	ldr	r2, [r3, #0]
9002640e:	4bbf      	ldr	r3, [pc, #764]	@ (9002670c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90026410:	0951      	lsrs	r1, r2, #5
90026412:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90026416:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002641a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002641e:	430b      	orrs	r3, r1
90026420:	4313      	orrs	r3, r2
90026422:	f8a8 3000 	strh.w	r3, [r8]
90026426:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90026428:	f108 0802 	add.w	r8, r8, #2
9002642c:	441c      	add	r4, r3
9002642e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026430:	441e      	add	r6, r3
90026432:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026434:	3b01      	subs	r3, #1
90026436:	9309      	str	r3, [sp, #36]	@ 0x24
90026438:	e76d      	b.n	90026316 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002643a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002643c:	3d01      	subs	r5, #1
9002643e:	f109 0902 	add.w	r9, r9, #2
90026442:	441c      	add	r4, r3
90026444:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026446:	441e      	add	r6, r3
90026448:	e745      	b.n	900262d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002644a:	d021      	beq.n	90026490 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9002644c:	1e6b      	subs	r3, r5, #1
9002644e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90026450:	fb00 4003 	mla	r0, r0, r3, r4
90026454:	1400      	asrs	r0, r0, #16
90026456:	f53f af5a 	bmi.w	9002630e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002645a:	3901      	subs	r1, #1
9002645c:	4288      	cmp	r0, r1
9002645e:	f6bf af56 	bge.w	9002630e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026462:	9920      	ldr	r1, [sp, #128]	@ 0x80
90026464:	fb01 6303 	mla	r3, r1, r3, r6
90026468:	141b      	asrs	r3, r3, #16
9002646a:	f53f af50 	bmi.w	9002630e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002646e:	3a01      	subs	r2, #1
90026470:	4293      	cmp	r3, r2
90026472:	f6bf af4c 	bge.w	9002630e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026476:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9002647a:	46a8      	mov	r8, r5
9002647c:	46ce      	mov	lr, r9
9002647e:	9308      	str	r3, [sp, #32]
90026480:	f1b8 0f00 	cmp.w	r8, #0
90026484:	f300 80b6 	bgt.w	900265f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026488:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002648c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90026490:	9b07      	ldr	r3, [sp, #28]
90026492:	2b00      	cmp	r3, #0
90026494:	f340 817e 	ble.w	90026794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90026498:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002649c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002649e:	ee30 0a04 	vadd.f32	s0, s0, s8
900264a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900264a6:	eef0 6a62 	vmov.f32	s13, s5
900264aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
900264ae:	ee31 1a05 	vadd.f32	s2, s2, s10
900264b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264b6:	ee16 4a90 	vmov	r4, s13
900264ba:	eef0 6a43 	vmov.f32	s13, s6
900264be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900264c2:	ee16 6a90 	vmov	r6, s13
900264c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900264ca:	ee61 7a27 	vmul.f32	s15, s2, s15
900264ce:	ee77 2a62 	vsub.f32	s5, s14, s5
900264d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900264d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900264da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900264de:	ee12 2a90 	vmov	r2, s5
900264e2:	eef0 2a47 	vmov.f32	s5, s14
900264e6:	fb92 f3f3 	sdiv	r3, r2, r3
900264ea:	ee13 2a10 	vmov	r2, s6
900264ee:	931f      	str	r3, [sp, #124]	@ 0x7c
900264f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900264f2:	eeb0 3a67 	vmov.f32	s6, s15
900264f6:	fb92 f3f3 	sdiv	r3, r2, r3
900264fa:	9320      	str	r3, [sp, #128]	@ 0x80
900264fc:	9b07      	ldr	r3, [sp, #28]
900264fe:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90026500:	3b01      	subs	r3, #1
90026502:	9307      	str	r3, [sp, #28]
90026504:	bf08      	it	eq
90026506:	4615      	moveq	r5, r2
90026508:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002650a:	bf18      	it	ne
9002650c:	461d      	movne	r5, r3
9002650e:	e6d3      	b.n	900262b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90026510:	2900      	cmp	r1, #0
90026512:	f43f af5b 	beq.w	900263cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90026516:	eb0a 0003 	add.w	r0, sl, r3
9002651a:	0843      	lsrs	r3, r0, #1
9002651c:	07c0      	lsls	r0, r0, #31
9002651e:	5cfb      	ldrb	r3, [r7, r3]
90026520:	bf54      	ite	pl
90026522:	f003 030f 	andpl.w	r3, r3, #15
90026526:	111b      	asrmi	r3, r3, #4
90026528:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002652c:	b2db      	uxtb	r3, r3
9002652e:	930a      	str	r3, [sp, #40]	@ 0x28
90026530:	e74c      	b.n	900263cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90026532:	2b00      	cmp	r3, #0
90026534:	f43f af77 	beq.w	90026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026538:	4a73      	ldr	r2, [pc, #460]	@ (90026708 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002653a:	fa1f fe83 	uxth.w	lr, r3
9002653e:	f8b8 c000 	ldrh.w	ip, [r8]
90026542:	43db      	mvns	r3, r3
90026544:	6810      	ldr	r0, [r2, #0]
90026546:	ea4f 212c 	mov.w	r1, ip, asr #8
9002654a:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002654e:	b2db      	uxtb	r3, r3
90026550:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90026554:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026558:	fb12 f20e 	smulbb	r2, r2, lr
9002655c:	b2c0      	uxtb	r0, r0
9002655e:	fb1b fb0e 	smulbb	fp, fp, lr
90026562:	fb01 2103 	mla	r1, r1, r3, r2
90026566:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002656a:	fb10 fe0e 	smulbb	lr, r0, lr
9002656e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90026572:	b289      	uxth	r1, r1
90026574:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026578:	fa5f fc8c 	uxtb.w	ip, ip
9002657c:	fb02 b203 	mla	r2, r2, r3, fp
90026580:	1c48      	adds	r0, r1, #1
90026582:	fb0c e303 	mla	r3, ip, r3, lr
90026586:	b292      	uxth	r2, r2
90026588:	b29b      	uxth	r3, r3
9002658a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
9002658e:	f102 0b01 	add.w	fp, r2, #1
90026592:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
90026596:	1c59      	adds	r1, r3, #1
90026598:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002659c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900265a0:	0952      	lsrs	r2, r2, #5
900265a2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900265a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900265aa:	4301      	orrs	r1, r0
900265ac:	4311      	orrs	r1, r2
900265ae:	f8a8 1000 	strh.w	r1, [r8]
900265b2:	e738      	b.n	90026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900265b4:	f113 0b01 	adds.w	fp, r3, #1
900265b8:	f53f af35 	bmi.w	90026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900265bc:	45dc      	cmp	ip, fp
900265be:	f6ff af32 	blt.w	90026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900265c2:	f110 0b01 	adds.w	fp, r0, #1
900265c6:	f53f af2e 	bmi.w	90026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900265ca:	45de      	cmp	lr, fp
900265cc:	f6ff af2b 	blt.w	90026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900265d0:	9302      	str	r3, [sp, #8]
900265d2:	fa0f f38e 	sxth.w	r3, lr
900265d6:	9a08      	ldr	r2, [sp, #32]
900265d8:	9301      	str	r3, [sp, #4]
900265da:	fa0f f38c 	sxth.w	r3, ip
900265de:	9105      	str	r1, [sp, #20]
900265e0:	4641      	mov	r1, r8
900265e2:	9300      	str	r3, [sp, #0]
900265e4:	4653      	mov	r3, sl
900265e6:	e9cd 0203 	strd	r0, r2, [sp, #12]
900265ea:	463a      	mov	r2, r7
900265ec:	9811      	ldr	r0, [sp, #68]	@ 0x44
900265ee:	f7ff fd73 	bl	900260d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
900265f2:	e718      	b.n	90026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900265f4:	1422      	asrs	r2, r4, #16
900265f6:	9906      	ldr	r1, [sp, #24]
900265f8:	1433      	asrs	r3, r6, #16
900265fa:	f3c4 3003 	ubfx	r0, r4, #12, #4
900265fe:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90026602:	fb01 2303 	mla	r3, r1, r3, r2
90026606:	085a      	lsrs	r2, r3, #1
90026608:	07d9      	lsls	r1, r3, #31
9002660a:	5cba      	ldrb	r2, [r7, r2]
9002660c:	bf54      	ite	pl
9002660e:	f002 020f 	andpl.w	r2, r2, #15
90026612:	1112      	asrmi	r2, r2, #4
90026614:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90026618:	b2d2      	uxtb	r2, r2
9002661a:	2800      	cmp	r0, #0
9002661c:	d063      	beq.n	900266e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
9002661e:	f103 0a01 	add.w	sl, r3, #1
90026622:	ea4f 015a 	mov.w	r1, sl, lsr #1
90026626:	f01a 0f01 	tst.w	sl, #1
9002662a:	5c79      	ldrb	r1, [r7, r1]
9002662c:	bf0c      	ite	eq
9002662e:	f001 010f 	andeq.w	r1, r1, #15
90026632:	1109      	asrne	r1, r1, #4
90026634:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026638:	b2c9      	uxtb	r1, r1
9002663a:	910f      	str	r1, [sp, #60]	@ 0x3c
9002663c:	f1bc 0f00 	cmp.w	ip, #0
90026640:	d01a      	beq.n	90026678 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026642:	9908      	ldr	r1, [sp, #32]
90026644:	440b      	add	r3, r1
90026646:	0859      	lsrs	r1, r3, #1
90026648:	f013 0f01 	tst.w	r3, #1
9002664c:	f103 0301 	add.w	r3, r3, #1
90026650:	5c79      	ldrb	r1, [r7, r1]
90026652:	bf0c      	ite	eq
90026654:	f001 010f 	andeq.w	r1, r1, #15
90026658:	1109      	asrne	r1, r1, #4
9002665a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002665e:	b2c9      	uxtb	r1, r1
90026660:	910b      	str	r1, [sp, #44]	@ 0x2c
90026662:	0859      	lsrs	r1, r3, #1
90026664:	07db      	lsls	r3, r3, #31
90026666:	5c79      	ldrb	r1, [r7, r1]
90026668:	bf54      	ite	pl
9002666a:	f001 010f 	andpl.w	r1, r1, #15
9002666e:	1109      	asrmi	r1, r1, #4
90026670:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026674:	b2c9      	uxtb	r1, r1
90026676:	9110      	str	r1, [sp, #64]	@ 0x40
90026678:	b280      	uxth	r0, r0
9002667a:	fa1f fc8c 	uxth.w	ip, ip
9002667e:	fb00 f30c 	mul.w	r3, r0, ip
90026682:	0100      	lsls	r0, r0, #4
90026684:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90026688:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
9002668c:	1ac0      	subs	r0, r0, r3
9002668e:	fa1f fc8c 	uxth.w	ip, ip
90026692:	b280      	uxth	r0, r0
90026694:	eba1 010c 	sub.w	r1, r1, ip
90026698:	fa1f fa81 	uxth.w	sl, r1
9002669c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9002669e:	4348      	muls	r0, r1
900266a0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
900266a2:	fb02 020a 	mla	r2, r2, sl, r0
900266a6:	fb0c 2c01 	mla	ip, ip, r1, r2
900266aa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900266ac:	fb03 c302 	mla	r3, r3, r2, ip
900266b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900266b4:	2bff      	cmp	r3, #255	@ 0xff
900266b6:	d12b      	bne.n	90026710 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
900266b8:	4b13      	ldr	r3, [pc, #76]	@ (90026708 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900266ba:	681a      	ldr	r2, [r3, #0]
900266bc:	4b13      	ldr	r3, [pc, #76]	@ (9002670c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900266be:	0951      	lsrs	r1, r2, #5
900266c0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900266c4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900266c8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900266cc:	430b      	orrs	r3, r1
900266ce:	4313      	orrs	r3, r2
900266d0:	f8ae 3000 	strh.w	r3, [lr]
900266d4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900266d6:	f10e 0e02 	add.w	lr, lr, #2
900266da:	f108 38ff 	add.w	r8, r8, #4294967295
900266de:	441c      	add	r4, r3
900266e0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900266e2:	441e      	add	r6, r3
900266e4:	e6cc      	b.n	90026480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900266e6:	f1bc 0f00 	cmp.w	ip, #0
900266ea:	d0c5      	beq.n	90026678 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900266ec:	9908      	ldr	r1, [sp, #32]
900266ee:	440b      	add	r3, r1
900266f0:	0859      	lsrs	r1, r3, #1
900266f2:	07db      	lsls	r3, r3, #31
900266f4:	5c79      	ldrb	r1, [r7, r1]
900266f6:	bf54      	ite	pl
900266f8:	f001 010f 	andpl.w	r1, r1, #15
900266fc:	1109      	asrmi	r1, r1, #4
900266fe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026702:	b2c9      	uxtb	r1, r1
90026704:	910b      	str	r1, [sp, #44]	@ 0x2c
90026706:	e7b7      	b.n	90026678 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026708:	240218c4 	.word	0x240218c4
9002670c:	fffff800 	.word	0xfffff800
90026710:	2b00      	cmp	r3, #0
90026712:	d0df      	beq.n	900266d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90026714:	4a21      	ldr	r2, [pc, #132]	@ (9002679c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90026716:	fa1f fa83 	uxth.w	sl, r3
9002671a:	f8be c000 	ldrh.w	ip, [lr]
9002671e:	43db      	mvns	r3, r3
90026720:	6810      	ldr	r0, [r2, #0]
90026722:	ea4f 212c 	mov.w	r1, ip, asr #8
90026726:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002672a:	b2db      	uxtb	r3, r3
9002672c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90026730:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026734:	fb12 f20a 	smulbb	r2, r2, sl
90026738:	b2c0      	uxtb	r0, r0
9002673a:	fb1b fb0a 	smulbb	fp, fp, sl
9002673e:	fb01 2103 	mla	r1, r1, r3, r2
90026742:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026746:	fb10 f00a 	smulbb	r0, r0, sl
9002674a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002674e:	b289      	uxth	r1, r1
90026750:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026754:	fa5f fc8c 	uxtb.w	ip, ip
90026758:	fb02 b203 	mla	r2, r2, r3, fp
9002675c:	fb0c 0003 	mla	r0, ip, r3, r0
90026760:	1c4b      	adds	r3, r1, #1
90026762:	b292      	uxth	r2, r2
90026764:	b280      	uxth	r0, r0
90026766:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002676a:	f100 0b01 	add.w	fp, r0, #1
9002676e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90026772:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90026776:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9002677a:	ea4b 0101 	orr.w	r1, fp, r1
9002677e:	f102 0b01 	add.w	fp, r2, #1
90026782:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90026786:	0952      	lsrs	r2, r2, #5
90026788:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002678c:	4311      	orrs	r1, r2
9002678e:	f8ae 1000 	strh.w	r1, [lr]
90026792:	e79f      	b.n	900266d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90026794:	b013      	add	sp, #76	@ 0x4c
90026796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002679a:	bf00      	nop
9002679c:	240218c4 	.word	0x240218c4

900267a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
900267a0:	b570      	push	{r4, r5, r6, lr}
900267a2:	1208      	asrs	r0, r1, #8
900267a4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
900267a8:	b29e      	uxth	r6, r3
900267aa:	1213      	asrs	r3, r2, #8
900267ac:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900267b0:	10cc      	asrs	r4, r1, #3
900267b2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900267b6:	00c9      	lsls	r1, r1, #3
900267b8:	fb10 f006 	smulbb	r0, r0, r6
900267bc:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900267c0:	fb13 f305 	smulbb	r3, r3, r5
900267c4:	fb14 f406 	smulbb	r4, r4, r6
900267c8:	4418      	add	r0, r3
900267ca:	10d3      	asrs	r3, r2, #3
900267cc:	00d2      	lsls	r2, r2, #3
900267ce:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900267d2:	b280      	uxth	r0, r0
900267d4:	b2d2      	uxtb	r2, r2
900267d6:	fb13 f305 	smulbb	r3, r3, r5
900267da:	fb12 f205 	smulbb	r2, r2, r5
900267de:	441c      	add	r4, r3
900267e0:	b2cb      	uxtb	r3, r1
900267e2:	fb13 f306 	smulbb	r3, r3, r6
900267e6:	b2a4      	uxth	r4, r4
900267e8:	4413      	add	r3, r2
900267ea:	1c42      	adds	r2, r0, #1
900267ec:	b29b      	uxth	r3, r3
900267ee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900267f2:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
900267f6:	1c58      	adds	r0, r3, #1
900267f8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900267fc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026800:	4310      	orrs	r0, r2
90026802:	1c62      	adds	r2, r4, #1
90026804:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90026808:	0964      	lsrs	r4, r4, #5
9002680a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002680e:	4320      	orrs	r0, r4
90026810:	bd70      	pop	{r4, r5, r6, pc}
	...

90026814 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90026814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026818:	b08f      	sub	sp, #60	@ 0x3c
9002681a:	461c      	mov	r4, r3
9002681c:	460d      	mov	r5, r1
9002681e:	4616      	mov	r6, r2
90026820:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90026824:	9004      	str	r0, [sp, #16]
90026826:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026828:	2f00      	cmp	r7, #0
9002682a:	f000 80f6 	beq.w	90026a1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9002682e:	6820      	ldr	r0, [r4, #0]
90026830:	aa0a      	add	r2, sp, #40	@ 0x28
90026832:	6861      	ldr	r1, [r4, #4]
90026834:	f04f 0802 	mov.w	r8, #2
90026838:	3604      	adds	r6, #4
9002683a:	c203      	stmia	r2!, {r0, r1}
9002683c:	6818      	ldr	r0, [r3, #0]
9002683e:	aa0c      	add	r2, sp, #48	@ 0x30
90026840:	6859      	ldr	r1, [r3, #4]
90026842:	c203      	stmia	r2!, {r0, r1}
90026844:	a80a      	add	r0, sp, #40	@ 0x28
90026846:	f7ee fbc5 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002684a:	4621      	mov	r1, r4
9002684c:	a80c      	add	r0, sp, #48	@ 0x30
9002684e:	f7ee fbe9 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026852:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90026856:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002685a:	f002 0301 	and.w	r3, r2, #1
9002685e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90026862:	9306      	str	r3, [sp, #24]
90026864:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026868:	f003 0101 	and.w	r1, r3, #1
9002686c:	9105      	str	r1, [sp, #20]
9002686e:	9805      	ldr	r0, [sp, #20]
90026870:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90026874:	4403      	add	r3, r0
90026876:	fb01 2303 	mla	r3, r1, r3, r2
9002687a:	fb93 f3f8 	sdiv	r3, r3, r8
9002687e:	441d      	add	r5, r3
90026880:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90026884:	441a      	add	r2, r3
90026886:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002688a:	4419      	add	r1, r3
9002688c:	4b64      	ldr	r3, [pc, #400]	@ (90026a20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002688e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90026892:	6818      	ldr	r0, [r3, #0]
90026894:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90026898:	6803      	ldr	r3, [r0, #0]
9002689a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002689c:	4798      	blx	r3
9002689e:	4a61      	ldr	r2, [pc, #388]	@ (90026a24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
900268a0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
900268a4:	2fff      	cmp	r7, #255	@ 0xff
900268a6:	8813      	ldrh	r3, [r2, #0]
900268a8:	4611      	mov	r1, r2
900268aa:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
900268ae:	fb03 fb0b 	mul.w	fp, r3, fp
900268b2:	fb03 a404 	mla	r4, r3, r4, sl
900268b6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900268ba:	d06b      	beq.n	90026994 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
900268bc:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
900268c0:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
900268c4:	9303      	str	r3, [sp, #12]
900268c6:	eb04 034b 	add.w	r3, r4, fp, lsl #1
900268ca:	e9cd 3207 	strd	r3, r2, [sp, #28]
900268ce:	9b07      	ldr	r3, [sp, #28]
900268d0:	42a3      	cmp	r3, r4
900268d2:	f240 809d 	bls.w	90026a10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900268d6:	9b06      	ldr	r3, [sp, #24]
900268d8:	2b00      	cmp	r3, #0
900268da:	d039      	beq.n	90026950 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
900268dc:	782b      	ldrb	r3, [r5, #0]
900268de:	f105 0801 	add.w	r8, r5, #1
900268e2:	f109 3bff 	add.w	fp, r9, #4294967295
900268e6:	8822      	ldrh	r2, [r4, #0]
900268e8:	f003 030f 	and.w	r3, r3, #15
900268ec:	9804      	ldr	r0, [sp, #16]
900268ee:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900268f2:	9b03      	ldr	r3, [sp, #12]
900268f4:	9300      	str	r3, [sp, #0]
900268f6:	463b      	mov	r3, r7
900268f8:	f7ff ff52 	bl	900267a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900268fc:	f824 0b02 	strh.w	r0, [r4], #2
90026900:	f1bb 0f01 	cmp.w	fp, #1
90026904:	46a2      	mov	sl, r4
90026906:	f104 0404 	add.w	r4, r4, #4
9002690a:	dd24      	ble.n	90026956 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
9002690c:	f898 3000 	ldrb.w	r3, [r8]
90026910:	f1ab 0b02 	sub.w	fp, fp, #2
90026914:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90026918:	091b      	lsrs	r3, r3, #4
9002691a:	9804      	ldr	r0, [sp, #16]
9002691c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026920:	9b03      	ldr	r3, [sp, #12]
90026922:	9300      	str	r3, [sp, #0]
90026924:	463b      	mov	r3, r7
90026926:	f7ff ff3b 	bl	900267a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002692a:	f824 0c04 	strh.w	r0, [r4, #-4]
9002692e:	f818 3b01 	ldrb.w	r3, [r8], #1
90026932:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90026936:	f003 030f 	and.w	r3, r3, #15
9002693a:	9804      	ldr	r0, [sp, #16]
9002693c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026940:	9b03      	ldr	r3, [sp, #12]
90026942:	9300      	str	r3, [sp, #0]
90026944:	463b      	mov	r3, r7
90026946:	f7ff ff2b 	bl	900267a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002694a:	f824 0c02 	strh.w	r0, [r4, #-2]
9002694e:	e7d7      	b.n	90026900 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90026950:	46a8      	mov	r8, r5
90026952:	46cb      	mov	fp, r9
90026954:	e7d4      	b.n	90026900 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90026956:	d10e      	bne.n	90026976 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90026958:	f898 3000 	ldrb.w	r3, [r8]
9002695c:	f8ba 2000 	ldrh.w	r2, [sl]
90026960:	091b      	lsrs	r3, r3, #4
90026962:	9804      	ldr	r0, [sp, #16]
90026964:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026968:	9b03      	ldr	r3, [sp, #12]
9002696a:	9300      	str	r3, [sp, #0]
9002696c:	463b      	mov	r3, r7
9002696e:	f7ff ff17 	bl	900267a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026972:	f82a 0b02 	strh.w	r0, [sl], #2
90026976:	9b08      	ldr	r3, [sp, #32]
90026978:	9a05      	ldr	r2, [sp, #20]
9002697a:	881c      	ldrh	r4, [r3, #0]
9002697c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026980:	eba4 0409 	sub.w	r4, r4, r9
90026984:	4413      	add	r3, r2
90026986:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026988:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
9002698c:	fb93 f3f2 	sdiv	r3, r3, r2
90026990:	441d      	add	r5, r3
90026992:	e79c      	b.n	900268ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90026994:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90026998:	45a3      	cmp	fp, r4
9002699a:	d939      	bls.n	90026a10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002699c:	9b06      	ldr	r3, [sp, #24]
9002699e:	b1fb      	cbz	r3, 900269e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
900269a0:	782b      	ldrb	r3, [r5, #0]
900269a2:	1c6a      	adds	r2, r5, #1
900269a4:	f109 30ff 	add.w	r0, r9, #4294967295
900269a8:	3402      	adds	r4, #2
900269aa:	f003 030f 	and.w	r3, r3, #15
900269ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900269b2:	f824 3c02 	strh.w	r3, [r4, #-2]
900269b6:	2801      	cmp	r0, #1
900269b8:	4623      	mov	r3, r4
900269ba:	f104 0404 	add.w	r4, r4, #4
900269be:	dd12      	ble.n	900269e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
900269c0:	7813      	ldrb	r3, [r2, #0]
900269c2:	3802      	subs	r0, #2
900269c4:	091b      	lsrs	r3, r3, #4
900269c6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900269ca:	f824 3c04 	strh.w	r3, [r4, #-4]
900269ce:	f812 3b01 	ldrb.w	r3, [r2], #1
900269d2:	f003 030f 	and.w	r3, r3, #15
900269d6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900269da:	f824 3c02 	strh.w	r3, [r4, #-2]
900269de:	e7ea      	b.n	900269b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900269e0:	462a      	mov	r2, r5
900269e2:	4648      	mov	r0, r9
900269e4:	e7e7      	b.n	900269b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900269e6:	d106      	bne.n	900269f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
900269e8:	7812      	ldrb	r2, [r2, #0]
900269ea:	3302      	adds	r3, #2
900269ec:	0912      	lsrs	r2, r2, #4
900269ee:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
900269f2:	f823 2c02 	strh.w	r2, [r3, #-2]
900269f6:	880c      	ldrh	r4, [r1, #0]
900269f8:	9a05      	ldr	r2, [sp, #20]
900269fa:	eba4 0409 	sub.w	r4, r4, r9
900269fe:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90026a02:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026a06:	4413      	add	r3, r2
90026a08:	fb93 f3f8 	sdiv	r3, r3, r8
90026a0c:	441d      	add	r5, r3
90026a0e:	e7c3      	b.n	90026998 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90026a10:	4b03      	ldr	r3, [pc, #12]	@ (90026a20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90026a12:	6818      	ldr	r0, [r3, #0]
90026a14:	6803      	ldr	r3, [r0, #0]
90026a16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90026a18:	4798      	blx	r3
90026a1a:	b00f      	add	sp, #60	@ 0x3c
90026a1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026a20:	240218b4 	.word	0x240218b4
90026a24:	240218ae 	.word	0x240218ae

90026a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90026a28:	b5f0      	push	{r4, r5, r6, r7, lr}
90026a2a:	f89d 5014 	ldrb.w	r5, [sp, #20]
90026a2e:	0a0f      	lsrs	r7, r1, #8
90026a30:	2dff      	cmp	r5, #255	@ 0xff
90026a32:	d10c      	bne.n	90026a4e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90026a34:	2bff      	cmp	r3, #255	@ 0xff
90026a36:	d10a      	bne.n	90026a4e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90026a38:	0948      	lsrs	r0, r1, #5
90026a3a:	4b25      	ldr	r3, [pc, #148]	@ (90026ad0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90026a3c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026a40:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026a44:	403b      	ands	r3, r7
90026a46:	4318      	orrs	r0, r3
90026a48:	4308      	orrs	r0, r1
90026a4a:	b280      	uxth	r0, r0
90026a4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90026a4e:	fb15 f503 	smulbb	r5, r5, r3
90026a52:	1214      	asrs	r4, r2, #8
90026a54:	10d6      	asrs	r6, r2, #3
90026a56:	b2ab      	uxth	r3, r5
90026a58:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90026a5c:	00d0      	lsls	r0, r2, #3
90026a5e:	f3c1 4207 	ubfx	r2, r1, #16, #8
90026a62:	1c5d      	adds	r5, r3, #1
90026a64:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026a68:	b2c0      	uxtb	r0, r0
90026a6a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90026a6e:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90026a72:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90026a76:	f3c5 2507 	ubfx	r5, r5, #8, #8
90026a7a:	fa1f fc85 	uxth.w	ip, r5
90026a7e:	43ed      	mvns	r5, r5
90026a80:	fb12 f20c 	smulbb	r2, r2, ip
90026a84:	b2eb      	uxtb	r3, r5
90026a86:	b2fd      	uxtb	r5, r7
90026a88:	fb04 2403 	mla	r4, r4, r3, r2
90026a8c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90026a90:	fb15 f50c 	smulbb	r5, r5, ip
90026a94:	b2c8      	uxtb	r0, r1
90026a96:	b2a4      	uxth	r4, r4
90026a98:	fb10 f00c 	smulbb	r0, r0, ip
90026a9c:	fb06 5503 	mla	r5, r6, r3, r5
90026aa0:	fb02 0003 	mla	r0, r2, r3, r0
90026aa4:	b2ad      	uxth	r5, r5
90026aa6:	b283      	uxth	r3, r0
90026aa8:	1c60      	adds	r0, r4, #1
90026aaa:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90026aae:	1c58      	adds	r0, r3, #1
90026ab0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026ab4:	1c6b      	adds	r3, r5, #1
90026ab6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90026aba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026abe:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026ac2:	096d      	lsrs	r5, r5, #5
90026ac4:	4320      	orrs	r0, r4
90026ac6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026aca:	4328      	orrs	r0, r5
90026acc:	e7be      	b.n	90026a4c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90026ace:	bf00      	nop
90026ad0:	00fff800 	.word	0x00fff800

90026ad4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90026ad4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026ad8:	461c      	mov	r4, r3
90026ada:	b08d      	sub	sp, #52	@ 0x34
90026adc:	460d      	mov	r5, r1
90026ade:	4616      	mov	r6, r2
90026ae0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026ae2:	4680      	mov	r8, r0
90026ae4:	6861      	ldr	r1, [r4, #4]
90026ae6:	aa08      	add	r2, sp, #32
90026ae8:	6820      	ldr	r0, [r4, #0]
90026aea:	f04f 0a02 	mov.w	sl, #2
90026aee:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
90026af2:	3604      	adds	r6, #4
90026af4:	c203      	stmia	r2!, {r0, r1}
90026af6:	6818      	ldr	r0, [r3, #0]
90026af8:	aa0a      	add	r2, sp, #40	@ 0x28
90026afa:	6859      	ldr	r1, [r3, #4]
90026afc:	c203      	stmia	r2!, {r0, r1}
90026afe:	a808      	add	r0, sp, #32
90026b00:	f7ee fa68 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026b04:	4621      	mov	r1, r4
90026b06:	a80a      	add	r0, sp, #40	@ 0x28
90026b08:	f7ee fa8c 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026b0c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90026b10:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
90026b14:	f002 0301 	and.w	r3, r2, #1
90026b18:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90026b1c:	9303      	str	r3, [sp, #12]
90026b1e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90026b22:	f003 0101 	and.w	r1, r3, #1
90026b26:	9102      	str	r1, [sp, #8]
90026b28:	9802      	ldr	r0, [sp, #8]
90026b2a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90026b2e:	4403      	add	r3, r0
90026b30:	fb01 2303 	mla	r3, r1, r3, r2
90026b34:	fb93 f3fa 	sdiv	r3, r3, sl
90026b38:	441d      	add	r5, r3
90026b3a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90026b3e:	441a      	add	r2, r3
90026b40:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90026b44:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90026b48:	4419      	add	r1, r3
90026b4a:	4a3e      	ldr	r2, [pc, #248]	@ (90026c44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90026b4c:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90026b50:	6810      	ldr	r0, [r2, #0]
90026b52:	9205      	str	r2, [sp, #20]
90026b54:	6803      	ldr	r3, [r0, #0]
90026b56:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90026b58:	4798      	blx	r3
90026b5a:	4b3b      	ldr	r3, [pc, #236]	@ (90026c48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90026b5c:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90026b60:	8819      	ldrh	r1, [r3, #0]
90026b62:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90026b66:	434f      	muls	r7, r1
90026b68:	fb01 c404 	mla	r4, r1, r4, ip
90026b6c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026b70:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90026b74:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90026b78:	9204      	str	r2, [sp, #16]
90026b7a:	9b04      	ldr	r3, [sp, #16]
90026b7c:	429c      	cmp	r4, r3
90026b7e:	d258      	bcs.n	90026c32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90026b80:	9b03      	ldr	r3, [sp, #12]
90026b82:	2b00      	cmp	r3, #0
90026b84:	d034      	beq.n	90026bf0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90026b86:	782b      	ldrb	r3, [r5, #0]
90026b88:	1c6f      	adds	r7, r5, #1
90026b8a:	f003 030f 	and.w	r3, r3, #15
90026b8e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026b92:	0e0b      	lsrs	r3, r1, #24
90026b94:	d006      	beq.n	90026ba4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90026b96:	8822      	ldrh	r2, [r4, #0]
90026b98:	4640      	mov	r0, r8
90026b9a:	9300      	str	r3, [sp, #0]
90026b9c:	464b      	mov	r3, r9
90026b9e:	f7ff ff43 	bl	90026a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026ba2:	8020      	strh	r0, [r4, #0]
90026ba4:	3402      	adds	r4, #2
90026ba6:	f10b 3aff 	add.w	sl, fp, #4294967295
90026baa:	f1ba 0f01 	cmp.w	sl, #1
90026bae:	dd22      	ble.n	90026bf6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90026bb0:	783b      	ldrb	r3, [r7, #0]
90026bb2:	091b      	lsrs	r3, r3, #4
90026bb4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026bb8:	0e0b      	lsrs	r3, r1, #24
90026bba:	d006      	beq.n	90026bca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90026bbc:	8822      	ldrh	r2, [r4, #0]
90026bbe:	4640      	mov	r0, r8
90026bc0:	9300      	str	r3, [sp, #0]
90026bc2:	464b      	mov	r3, r9
90026bc4:	f7ff ff30 	bl	90026a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026bc8:	8020      	strh	r0, [r4, #0]
90026bca:	f817 3b01 	ldrb.w	r3, [r7], #1
90026bce:	f003 030f 	and.w	r3, r3, #15
90026bd2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026bd6:	0e0b      	lsrs	r3, r1, #24
90026bd8:	d006      	beq.n	90026be8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90026bda:	8862      	ldrh	r2, [r4, #2]
90026bdc:	4640      	mov	r0, r8
90026bde:	9300      	str	r3, [sp, #0]
90026be0:	464b      	mov	r3, r9
90026be2:	f7ff ff21 	bl	90026a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026be6:	8060      	strh	r0, [r4, #2]
90026be8:	3404      	adds	r4, #4
90026bea:	f1aa 0a02 	sub.w	sl, sl, #2
90026bee:	e7dc      	b.n	90026baa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026bf0:	462f      	mov	r7, r5
90026bf2:	46da      	mov	sl, fp
90026bf4:	e7d9      	b.n	90026baa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026bf6:	d10d      	bne.n	90026c14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90026bf8:	783b      	ldrb	r3, [r7, #0]
90026bfa:	091b      	lsrs	r3, r3, #4
90026bfc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026c00:	0e0b      	lsrs	r3, r1, #24
90026c02:	d006      	beq.n	90026c12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90026c04:	8822      	ldrh	r2, [r4, #0]
90026c06:	4640      	mov	r0, r8
90026c08:	9300      	str	r3, [sp, #0]
90026c0a:	464b      	mov	r3, r9
90026c0c:	f7ff ff0c 	bl	90026a28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026c10:	8020      	strh	r0, [r4, #0]
90026c12:	3402      	adds	r4, #2
90026c14:	9b06      	ldr	r3, [sp, #24]
90026c16:	9a02      	ldr	r2, [sp, #8]
90026c18:	881b      	ldrh	r3, [r3, #0]
90026c1a:	eba3 030b 	sub.w	r3, r3, fp
90026c1e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90026c22:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90026c26:	4413      	add	r3, r2
90026c28:	9a07      	ldr	r2, [sp, #28]
90026c2a:	fb93 f3f2 	sdiv	r3, r3, r2
90026c2e:	441d      	add	r5, r3
90026c30:	e7a3      	b.n	90026b7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90026c32:	9b05      	ldr	r3, [sp, #20]
90026c34:	6818      	ldr	r0, [r3, #0]
90026c36:	6803      	ldr	r3, [r0, #0]
90026c38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90026c3a:	4798      	blx	r3
90026c3c:	b00d      	add	sp, #52	@ 0x34
90026c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026c42:	bf00      	nop
90026c44:	240218b4 	.word	0x240218b4
90026c48:	240218ae 	.word	0x240218ae

90026c4c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90026c4c:	b570      	push	{r4, r5, r6, lr}
90026c4e:	1214      	asrs	r4, r2, #8
90026c50:	788d      	ldrb	r5, [r1, #2]
90026c52:	f89d 6010 	ldrb.w	r6, [sp, #16]
90026c56:	10d0      	asrs	r0, r2, #3
90026c58:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90026c5c:	00d2      	lsls	r2, r2, #3
90026c5e:	fb15 f503 	smulbb	r5, r5, r3
90026c62:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026c66:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026c6a:	b2d2      	uxtb	r2, r2
90026c6c:	fb04 5506 	mla	r5, r4, r6, r5
90026c70:	784c      	ldrb	r4, [r1, #1]
90026c72:	7809      	ldrb	r1, [r1, #0]
90026c74:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90026c78:	fb14 f403 	smulbb	r4, r4, r3
90026c7c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90026c80:	fb11 f303 	smulbb	r3, r1, r3
90026c84:	b2ad      	uxth	r5, r5
90026c86:	fb00 4406 	mla	r4, r0, r6, r4
90026c8a:	fb02 3306 	mla	r3, r2, r6, r3
90026c8e:	1c68      	adds	r0, r5, #1
90026c90:	b2a4      	uxth	r4, r4
90026c92:	b29b      	uxth	r3, r3
90026c94:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90026c98:	1c62      	adds	r2, r4, #1
90026c9a:	1c58      	adds	r0, r3, #1
90026c9c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90026ca0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026ca4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026ca8:	0964      	lsrs	r4, r4, #5
90026caa:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026cae:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90026cb2:	4328      	orrs	r0, r5
90026cb4:	4320      	orrs	r0, r4
90026cb6:	bd70      	pop	{r4, r5, r6, pc}

90026cb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90026cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026cbc:	b08f      	sub	sp, #60	@ 0x3c
90026cbe:	461c      	mov	r4, r3
90026cc0:	4682      	mov	sl, r0
90026cc2:	460e      	mov	r6, r1
90026cc4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90026cc8:	4615      	mov	r5, r2
90026cca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026ccc:	2f00      	cmp	r7, #0
90026cce:	f000 8141 	beq.w	90026f54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90026cd2:	6820      	ldr	r0, [r4, #0]
90026cd4:	aa0a      	add	r2, sp, #40	@ 0x28
90026cd6:	6861      	ldr	r1, [r4, #4]
90026cd8:	f04f 0802 	mov.w	r8, #2
90026cdc:	3504      	adds	r5, #4
90026cde:	c203      	stmia	r2!, {r0, r1}
90026ce0:	6818      	ldr	r0, [r3, #0]
90026ce2:	aa0c      	add	r2, sp, #48	@ 0x30
90026ce4:	6859      	ldr	r1, [r3, #4]
90026ce6:	c203      	stmia	r2!, {r0, r1}
90026ce8:	a80a      	add	r0, sp, #40	@ 0x28
90026cea:	f7ee f973 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026cee:	4621      	mov	r1, r4
90026cf0:	a80c      	add	r0, sp, #48	@ 0x30
90026cf2:	f7ee f997 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026cf6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90026cfa:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90026cfe:	f002 0301 	and.w	r3, r2, #1
90026d02:	9306      	str	r3, [sp, #24]
90026d04:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026d08:	f003 0101 	and.w	r1, r3, #1
90026d0c:	9105      	str	r1, [sp, #20]
90026d0e:	9805      	ldr	r0, [sp, #20]
90026d10:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90026d14:	4403      	add	r3, r0
90026d16:	fb01 2303 	mla	r3, r1, r3, r2
90026d1a:	fb93 f3f8 	sdiv	r3, r3, r8
90026d1e:	441e      	add	r6, r3
90026d20:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90026d24:	441a      	add	r2, r3
90026d26:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90026d2a:	4419      	add	r1, r3
90026d2c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90026d30:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90026d34:	9303      	str	r3, [sp, #12]
90026d36:	4b89      	ldr	r3, [pc, #548]	@ (90026f5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90026d38:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90026d3c:	6818      	ldr	r0, [r3, #0]
90026d3e:	6803      	ldr	r3, [r0, #0]
90026d40:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90026d42:	4798      	blx	r3
90026d44:	4a86      	ldr	r2, [pc, #536]	@ (90026f60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90026d46:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90026d4a:	2fff      	cmp	r7, #255	@ 0xff
90026d4c:	8813      	ldrh	r3, [r2, #0]
90026d4e:	4694      	mov	ip, r2
90026d50:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90026d54:	fb03 9404 	mla	r4, r3, r4, r9
90026d58:	fb03 f30b 	mul.w	r3, r3, fp
90026d5c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026d60:	d071      	beq.n	90026e46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90026d62:	43f9      	mvns	r1, r7
90026d64:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026d68:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90026d6c:	b2c9      	uxtb	r1, r1
90026d6e:	e9cd 3207 	strd	r3, r2, [sp, #28]
90026d72:	9104      	str	r1, [sp, #16]
90026d74:	9b07      	ldr	r3, [sp, #28]
90026d76:	42a3      	cmp	r3, r4
90026d78:	f240 80e7 	bls.w	90026f4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90026d7c:	9b06      	ldr	r3, [sp, #24]
90026d7e:	2b00      	cmp	r3, #0
90026d80:	d03d      	beq.n	90026dfe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90026d82:	7831      	ldrb	r1, [r6, #0]
90026d84:	4650      	mov	r0, sl
90026d86:	9b04      	ldr	r3, [sp, #16]
90026d88:	f106 0801 	add.w	r8, r6, #1
90026d8c:	f001 010f 	and.w	r1, r1, #15
90026d90:	8822      	ldrh	r2, [r4, #0]
90026d92:	9300      	str	r3, [sp, #0]
90026d94:	463b      	mov	r3, r7
90026d96:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026d9a:	4429      	add	r1, r5
90026d9c:	f7ff ff56 	bl	90026c4c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026da0:	9b03      	ldr	r3, [sp, #12]
90026da2:	f824 0b02 	strh.w	r0, [r4], #2
90026da6:	f103 3bff 	add.w	fp, r3, #4294967295
90026daa:	f1bb 0f01 	cmp.w	fp, #1
90026dae:	46a1      	mov	r9, r4
90026db0:	f104 0404 	add.w	r4, r4, #4
90026db4:	dd27      	ble.n	90026e06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90026db6:	f898 1000 	ldrb.w	r1, [r8]
90026dba:	4650      	mov	r0, sl
90026dbc:	9b04      	ldr	r3, [sp, #16]
90026dbe:	f1ab 0b02 	sub.w	fp, fp, #2
90026dc2:	0909      	lsrs	r1, r1, #4
90026dc4:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90026dc8:	9300      	str	r3, [sp, #0]
90026dca:	463b      	mov	r3, r7
90026dcc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026dd0:	4429      	add	r1, r5
90026dd2:	f7ff ff3b 	bl	90026c4c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026dd6:	f824 0c04 	strh.w	r0, [r4, #-4]
90026dda:	f818 1b01 	ldrb.w	r1, [r8], #1
90026dde:	4650      	mov	r0, sl
90026de0:	9b04      	ldr	r3, [sp, #16]
90026de2:	f001 010f 	and.w	r1, r1, #15
90026de6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90026dea:	9300      	str	r3, [sp, #0]
90026dec:	463b      	mov	r3, r7
90026dee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026df2:	4429      	add	r1, r5
90026df4:	f7ff ff2a 	bl	90026c4c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026df8:	f824 0c02 	strh.w	r0, [r4, #-2]
90026dfc:	e7d5      	b.n	90026daa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90026dfe:	46b0      	mov	r8, r6
90026e00:	f8dd b00c 	ldr.w	fp, [sp, #12]
90026e04:	e7d1      	b.n	90026daa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90026e06:	d10f      	bne.n	90026e28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90026e08:	f898 1000 	ldrb.w	r1, [r8]
90026e0c:	4650      	mov	r0, sl
90026e0e:	9b04      	ldr	r3, [sp, #16]
90026e10:	0909      	lsrs	r1, r1, #4
90026e12:	f8b9 2000 	ldrh.w	r2, [r9]
90026e16:	9300      	str	r3, [sp, #0]
90026e18:	463b      	mov	r3, r7
90026e1a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026e1e:	4429      	add	r1, r5
90026e20:	f7ff ff14 	bl	90026c4c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026e24:	f829 0b02 	strh.w	r0, [r9], #2
90026e28:	9b08      	ldr	r3, [sp, #32]
90026e2a:	9a05      	ldr	r2, [sp, #20]
90026e2c:	881c      	ldrh	r4, [r3, #0]
90026e2e:	9b03      	ldr	r3, [sp, #12]
90026e30:	1ae4      	subs	r4, r4, r3
90026e32:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90026e36:	4413      	add	r3, r2
90026e38:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026e3a:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90026e3e:	fb93 f3f2 	sdiv	r3, r3, r2
90026e42:	441e      	add	r6, r3
90026e44:	e796      	b.n	90026d74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90026e46:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026e4a:	4f46      	ldr	r7, [pc, #280]	@ (90026f64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90026e4c:	42a3      	cmp	r3, r4
90026e4e:	d97c      	bls.n	90026f4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90026e50:	9a06      	ldr	r2, [sp, #24]
90026e52:	2a00      	cmp	r2, #0
90026e54:	d054      	beq.n	90026f00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90026e56:	7830      	ldrb	r0, [r6, #0]
90026e58:	1c71      	adds	r1, r6, #1
90026e5a:	f000 000f 	and.w	r0, r0, #15
90026e5e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026e62:	eb05 0e00 	add.w	lr, r5, r0
90026e66:	5c28      	ldrb	r0, [r5, r0]
90026e68:	f89e 2002 	ldrb.w	r2, [lr, #2]
90026e6c:	f89e e001 	ldrb.w	lr, [lr, #1]
90026e70:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90026e74:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90026e78:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90026e7c:	ea42 020e 	orr.w	r2, r2, lr
90026e80:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90026e84:	f824 2b02 	strh.w	r2, [r4], #2
90026e88:	9a03      	ldr	r2, [sp, #12]
90026e8a:	f102 3eff 	add.w	lr, r2, #4294967295
90026e8e:	f1be 0f01 	cmp.w	lr, #1
90026e92:	4620      	mov	r0, r4
90026e94:	f104 0404 	add.w	r4, r4, #4
90026e98:	dd36      	ble.n	90026f08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90026e9a:	7808      	ldrb	r0, [r1, #0]
90026e9c:	f1ae 0e02 	sub.w	lr, lr, #2
90026ea0:	0900      	lsrs	r0, r0, #4
90026ea2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026ea6:	eb05 0a00 	add.w	sl, r5, r0
90026eaa:	f89a 2001 	ldrb.w	r2, [sl, #1]
90026eae:	f89a 9002 	ldrb.w	r9, [sl, #2]
90026eb2:	00d2      	lsls	r2, r2, #3
90026eb4:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90026eb8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026ebc:	ea49 0202 	orr.w	r2, r9, r2
90026ec0:	f815 9000 	ldrb.w	r9, [r5, r0]
90026ec4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90026ec8:	f824 2c04 	strh.w	r2, [r4, #-4]
90026ecc:	f811 0b01 	ldrb.w	r0, [r1], #1
90026ed0:	f000 000f 	and.w	r0, r0, #15
90026ed4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026ed8:	eb05 0a00 	add.w	sl, r5, r0
90026edc:	f89a 2001 	ldrb.w	r2, [sl, #1]
90026ee0:	f89a 9002 	ldrb.w	r9, [sl, #2]
90026ee4:	00d2      	lsls	r2, r2, #3
90026ee6:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90026eea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026eee:	ea49 0202 	orr.w	r2, r9, r2
90026ef2:	f815 9000 	ldrb.w	r9, [r5, r0]
90026ef6:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90026efa:	f824 2c02 	strh.w	r2, [r4, #-2]
90026efe:	e7c6      	b.n	90026e8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90026f00:	4631      	mov	r1, r6
90026f02:	f8dd e00c 	ldr.w	lr, [sp, #12]
90026f06:	e7c2      	b.n	90026e8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90026f08:	d111      	bne.n	90026f2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90026f0a:	7809      	ldrb	r1, [r1, #0]
90026f0c:	0909      	lsrs	r1, r1, #4
90026f0e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026f12:	186c      	adds	r4, r5, r1
90026f14:	5c69      	ldrb	r1, [r5, r1]
90026f16:	78a2      	ldrb	r2, [r4, #2]
90026f18:	7864      	ldrb	r4, [r4, #1]
90026f1a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90026f1e:	00e4      	lsls	r4, r4, #3
90026f20:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90026f24:	4322      	orrs	r2, r4
90026f26:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90026f2a:	f820 2b02 	strh.w	r2, [r0], #2
90026f2e:	9a03      	ldr	r2, [sp, #12]
90026f30:	f8bc 4000 	ldrh.w	r4, [ip]
90026f34:	9905      	ldr	r1, [sp, #20]
90026f36:	1aa4      	subs	r4, r4, r2
90026f38:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90026f3c:	440a      	add	r2, r1
90026f3e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026f42:	fb92 f2f8 	sdiv	r2, r2, r8
90026f46:	4416      	add	r6, r2
90026f48:	e780      	b.n	90026e4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90026f4a:	4b04      	ldr	r3, [pc, #16]	@ (90026f5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90026f4c:	6818      	ldr	r0, [r3, #0]
90026f4e:	6803      	ldr	r3, [r0, #0]
90026f50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90026f52:	4798      	blx	r3
90026f54:	b00f      	add	sp, #60	@ 0x3c
90026f56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026f5a:	bf00      	nop
90026f5c:	240218b4 	.word	0x240218b4
90026f60:	240218ae 	.word	0x240218ae
90026f64:	fffff800 	.word	0xfffff800

90026f68 <CRC_Lock>:
90026f68:	4a2d      	ldr	r2, [pc, #180]	@ (90027020 <CRC_Lock+0xb8>)
90026f6a:	b530      	push	{r4, r5, lr}
90026f6c:	6813      	ldr	r3, [r2, #0]
90026f6e:	f24c 2540 	movw	r5, #49728	@ 0xc240
90026f72:	f023 0301 	bic.w	r3, r3, #1
90026f76:	6013      	str	r3, [r2, #0]
90026f78:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90026f7c:	4b29      	ldr	r3, [pc, #164]	@ (90027024 <CRC_Lock+0xbc>)
90026f7e:	681c      	ldr	r4, [r3, #0]
90026f80:	4014      	ands	r4, r2
90026f82:	42ac      	cmp	r4, r5
90026f84:	d005      	beq.n	90026f92 <CRC_Lock+0x2a>
90026f86:	681c      	ldr	r4, [r3, #0]
90026f88:	f24c 2570 	movw	r5, #49776	@ 0xc270
90026f8c:	4014      	ands	r4, r2
90026f8e:	42ac      	cmp	r4, r5
90026f90:	d125      	bne.n	90026fde <CRC_Lock+0x76>
90026f92:	4b25      	ldr	r3, [pc, #148]	@ (90027028 <CRC_Lock+0xc0>)
90026f94:	681b      	ldr	r3, [r3, #0]
90026f96:	2b00      	cmp	r3, #0
90026f98:	d139      	bne.n	9002700e <CRC_Lock+0xa6>
90026f9a:	4b24      	ldr	r3, [pc, #144]	@ (9002702c <CRC_Lock+0xc4>)
90026f9c:	681a      	ldr	r2, [r3, #0]
90026f9e:	f3c2 020b 	ubfx	r2, r2, #0, #12
90026fa2:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
90026fa6:	d00d      	beq.n	90026fc4 <CRC_Lock+0x5c>
90026fa8:	681a      	ldr	r2, [r3, #0]
90026faa:	f240 4483 	movw	r4, #1155	@ 0x483
90026fae:	f3c2 020b 	ubfx	r2, r2, #0, #12
90026fb2:	42a2      	cmp	r2, r4
90026fb4:	d006      	beq.n	90026fc4 <CRC_Lock+0x5c>
90026fb6:	681b      	ldr	r3, [r3, #0]
90026fb8:	f240 4285 	movw	r2, #1157	@ 0x485
90026fbc:	f3c3 030b 	ubfx	r3, r3, #0, #12
90026fc0:	4293      	cmp	r3, r2
90026fc2:	d124      	bne.n	9002700e <CRC_Lock+0xa6>
90026fc4:	4b1a      	ldr	r3, [pc, #104]	@ (90027030 <CRC_Lock+0xc8>)
90026fc6:	2201      	movs	r2, #1
90026fc8:	601a      	str	r2, [r3, #0]
90026fca:	681a      	ldr	r2, [r3, #0]
90026fcc:	2a00      	cmp	r2, #0
90026fce:	d1fc      	bne.n	90026fca <CRC_Lock+0x62>
90026fd0:	4b18      	ldr	r3, [pc, #96]	@ (90027034 <CRC_Lock+0xcc>)
90026fd2:	6018      	str	r0, [r3, #0]
90026fd4:	6818      	ldr	r0, [r3, #0]
90026fd6:	1a43      	subs	r3, r0, r1
90026fd8:	4258      	negs	r0, r3
90026fda:	4158      	adcs	r0, r3
90026fdc:	e00e      	b.n	90026ffc <CRC_Lock+0x94>
90026fde:	681b      	ldr	r3, [r3, #0]
90026fe0:	4013      	ands	r3, r2
90026fe2:	f24d 2220 	movw	r2, #53792	@ 0xd220
90026fe6:	4293      	cmp	r3, r2
90026fe8:	d111      	bne.n	9002700e <CRC_Lock+0xa6>
90026fea:	4b13      	ldr	r3, [pc, #76]	@ (90027038 <CRC_Lock+0xd0>)
90026fec:	f240 4286 	movw	r2, #1158	@ 0x486
90026ff0:	681b      	ldr	r3, [r3, #0]
90026ff2:	f3c3 030b 	ubfx	r3, r3, #0, #12
90026ff6:	4293      	cmp	r3, r2
90026ff8:	d001      	beq.n	90026ffe <CRC_Lock+0x96>
90026ffa:	2000      	movs	r0, #0
90026ffc:	bd30      	pop	{r4, r5, pc}
90026ffe:	4b0f      	ldr	r3, [pc, #60]	@ (9002703c <CRC_Lock+0xd4>)
90027000:	2201      	movs	r2, #1
90027002:	601a      	str	r2, [r3, #0]
90027004:	681a      	ldr	r2, [r3, #0]
90027006:	2a00      	cmp	r2, #0
90027008:	d1fc      	bne.n	90027004 <CRC_Lock+0x9c>
9002700a:	4b0d      	ldr	r3, [pc, #52]	@ (90027040 <CRC_Lock+0xd8>)
9002700c:	e7e1      	b.n	90026fd2 <CRC_Lock+0x6a>
9002700e:	4b0d      	ldr	r3, [pc, #52]	@ (90027044 <CRC_Lock+0xdc>)
90027010:	2201      	movs	r2, #1
90027012:	601a      	str	r2, [r3, #0]
90027014:	681a      	ldr	r2, [r3, #0]
90027016:	2a00      	cmp	r2, #0
90027018:	d1fc      	bne.n	90027014 <CRC_Lock+0xac>
9002701a:	4b0b      	ldr	r3, [pc, #44]	@ (90027048 <CRC_Lock+0xe0>)
9002701c:	e7d9      	b.n	90026fd2 <CRC_Lock+0x6a>
9002701e:	bf00      	nop
90027020:	e0002000 	.word	0xe0002000
90027024:	e000ed00 	.word	0xe000ed00
90027028:	e0042000 	.word	0xe0042000
9002702c:	5c001000 	.word	0x5c001000
90027030:	58024c08 	.word	0x58024c08
90027034:	58024c00 	.word	0x58024c00
90027038:	46008ff0 	.word	0x46008ff0
9002703c:	46024c08 	.word	0x46024c08
90027040:	46024c00 	.word	0x46024c00
90027044:	40023008 	.word	0x40023008
90027048:	40023000 	.word	0x40023000

9002704c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
9002704c:	6101      	str	r1, [r0, #16]
9002704e:	4770      	bx	lr

90027050 <_ZN8touchgfx8Gestures4tickEv>:
90027050:	7b83      	ldrb	r3, [r0, #14]
90027052:	b14b      	cbz	r3, 90027068 <_ZN8touchgfx8Gestures4tickEv+0x18>
90027054:	8903      	ldrh	r3, [r0, #8]
90027056:	3301      	adds	r3, #1
90027058:	b29b      	uxth	r3, r3
9002705a:	2b07      	cmp	r3, #7
9002705c:	8103      	strh	r3, [r0, #8]
9002705e:	bf81      	itttt	hi
90027060:	2300      	movhi	r3, #0
90027062:	8143      	strhhi	r3, [r0, #10]
90027064:	8183      	strhhi	r3, [r0, #12]
90027066:	7383      	strbhi	r3, [r0, #14]
90027068:	4770      	bx	lr
	...

9002706c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
9002706c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90027070:	4698      	mov	r8, r3
90027072:	8883      	ldrh	r3, [r0, #4]
90027074:	4604      	mov	r4, r0
90027076:	4617      	mov	r7, r2
90027078:	f8ad 3006 	strh.w	r3, [sp, #6]
9002707c:	eba8 0303 	sub.w	r3, r8, r3
90027080:	4a19      	ldr	r2, [pc, #100]	@ (900270e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90027082:	460e      	mov	r6, r1
90027084:	b21b      	sxth	r3, r3
90027086:	88c1      	ldrh	r1, [r0, #6]
90027088:	9200      	str	r2, [sp, #0]
9002708a:	2000      	movs	r0, #0
9002708c:	2b00      	cmp	r3, #0
9002708e:	8aa2      	ldrh	r2, [r4, #20]
90027090:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90027094:	bfb8      	it	lt
90027096:	425b      	neglt	r3, r3
90027098:	f88d 0004 	strb.w	r0, [sp, #4]
9002709c:	f8ad 1008 	strh.w	r1, [sp, #8]
900270a0:	b21b      	sxth	r3, r3
900270a2:	f8ad 800a 	strh.w	r8, [sp, #10]
900270a6:	f8ad 500c 	strh.w	r5, [sp, #12]
900270aa:	4293      	cmp	r3, r2
900270ac:	dc07      	bgt.n	900270be <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
900270ae:	1a69      	subs	r1, r5, r1
900270b0:	b209      	sxth	r1, r1
900270b2:	2900      	cmp	r1, #0
900270b4:	bfb8      	it	lt
900270b6:	4249      	neglt	r1, r1
900270b8:	b209      	sxth	r1, r1
900270ba:	428a      	cmp	r2, r1
900270bc:	da10      	bge.n	900270e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
900270be:	6920      	ldr	r0, [r4, #16]
900270c0:	4669      	mov	r1, sp
900270c2:	eba8 0606 	sub.w	r6, r8, r6
900270c6:	1bef      	subs	r7, r5, r7
900270c8:	6803      	ldr	r3, [r0, #0]
900270ca:	685b      	ldr	r3, [r3, #4]
900270cc:	4798      	blx	r3
900270ce:	2300      	movs	r3, #0
900270d0:	2001      	movs	r0, #1
900270d2:	8166      	strh	r6, [r4, #10]
900270d4:	8123      	strh	r3, [r4, #8]
900270d6:	81a7      	strh	r7, [r4, #12]
900270d8:	f8a4 8004 	strh.w	r8, [r4, #4]
900270dc:	80e5      	strh	r5, [r4, #6]
900270de:	73a0      	strb	r0, [r4, #14]
900270e0:	b004      	add	sp, #16
900270e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900270e6:	bf00      	nop
900270e8:	9002c398 	.word	0x9002c398

900270ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900270ec:	b5f0      	push	{r4, r5, r6, r7, lr}
900270ee:	461e      	mov	r6, r3
900270f0:	1e4b      	subs	r3, r1, #1
900270f2:	b085      	sub	sp, #20
900270f4:	4604      	mov	r4, r0
900270f6:	2b01      	cmp	r3, #1
900270f8:	460d      	mov	r5, r1
900270fa:	4617      	mov	r7, r2
900270fc:	d84b      	bhi.n	90027196 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900270fe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90027102:	1cd3      	adds	r3, r2, #3
90027104:	b29b      	uxth	r3, r3
90027106:	2b06      	cmp	r3, #6
90027108:	d916      	bls.n	90027138 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
9002710a:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 900271ac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002710e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90027112:	f8cd c004 	str.w	ip, [sp, #4]
90027116:	f04f 0c00 	mov.w	ip, #0
9002711a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002711e:	6900      	ldr	r0, [r0, #16]
90027120:	f8ad 100c 	strh.w	r1, [sp, #12]
90027124:	a901      	add	r1, sp, #4
90027126:	f88d c008 	strb.w	ip, [sp, #8]
9002712a:	f8ad 200a 	strh.w	r2, [sp, #10]
9002712e:	f8ad 300e 	strh.w	r3, [sp, #14]
90027132:	6803      	ldr	r3, [r0, #0]
90027134:	689b      	ldr	r3, [r3, #8]
90027136:	4798      	blx	r3
90027138:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002713c:	1cd3      	adds	r3, r2, #3
9002713e:	b29b      	uxth	r3, r3
90027140:	2b06      	cmp	r3, #6
90027142:	d916      	bls.n	90027172 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90027144:	f8df c064 	ldr.w	ip, [pc, #100]	@ 900271ac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90027148:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002714c:	f8cd c004 	str.w	ip, [sp, #4]
90027150:	f04f 0c01 	mov.w	ip, #1
90027154:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90027158:	6920      	ldr	r0, [r4, #16]
9002715a:	f8ad 100c 	strh.w	r1, [sp, #12]
9002715e:	a901      	add	r1, sp, #4
90027160:	f88d c008 	strb.w	ip, [sp, #8]
90027164:	f8ad 200a 	strh.w	r2, [sp, #10]
90027168:	f8ad 300e 	strh.w	r3, [sp, #14]
9002716c:	6803      	ldr	r3, [r0, #0]
9002716e:	689b      	ldr	r3, [r3, #8]
90027170:	4798      	blx	r3
90027172:	4b0d      	ldr	r3, [pc, #52]	@ (900271a8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90027174:	a901      	add	r1, sp, #4
90027176:	6920      	ldr	r0, [r4, #16]
90027178:	9301      	str	r3, [sp, #4]
9002717a:	2300      	movs	r3, #0
9002717c:	f88d 5008 	strb.w	r5, [sp, #8]
90027180:	f8ad 700a 	strh.w	r7, [sp, #10]
90027184:	f8ad 600c 	strh.w	r6, [sp, #12]
90027188:	f8ad 300e 	strh.w	r3, [sp, #14]
9002718c:	6803      	ldr	r3, [r0, #0]
9002718e:	681b      	ldr	r3, [r3, #0]
90027190:	4798      	blx	r3
90027192:	b005      	add	sp, #20
90027194:	bdf0      	pop	{r4, r5, r6, r7, pc}
90027196:	2900      	cmp	r1, #0
90027198:	d1eb      	bne.n	90027172 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002719a:	80a2      	strh	r2, [r4, #4]
9002719c:	80c6      	strh	r6, [r0, #6]
9002719e:	60a1      	str	r1, [r4, #8]
900271a0:	81a1      	strh	r1, [r4, #12]
900271a2:	73a1      	strb	r1, [r4, #14]
900271a4:	e7e5      	b.n	90027172 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
900271a6:	bf00      	nop
900271a8:	9002c384 	.word	0x9002c384
900271ac:	9002c3ac 	.word	0x9002c3ac

900271b0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
900271b0:	10c9      	asrs	r1, r1, #3
900271b2:	2900      	cmp	r1, #0
900271b4:	bfb8      	it	lt
900271b6:	4249      	neglt	r1, r1
900271b8:	2801      	cmp	r0, #1
900271ba:	d108      	bne.n	900271ce <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900271bc:	f3c1 0008 	ubfx	r0, r1, #0, #9
900271c0:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
900271c4:	4601      	mov	r1, r0
900271c6:	dd02      	ble.n	900271ce <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900271c8:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
900271cc:	4770      	bx	lr
900271ce:	29ff      	cmp	r1, #255	@ 0xff
900271d0:	bfa8      	it	ge
900271d2:	21ff      	movge	r1, #255	@ 0xff
900271d4:	4608      	mov	r0, r1
900271d6:	4770      	bx	lr

900271d8 <_ZN8touchgfx10Rasterizer6lineToEii>:
900271d8:	b410      	push	{r4}
900271da:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900271de:	429c      	cmp	r4, r3
900271e0:	d803      	bhi.n	900271ea <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900271e2:	f85d 4b04 	ldr.w	r4, [sp], #4
900271e6:	f7ec b9ff 	b.w	900135e8 <_ZN8touchgfx7Outline6lineToEii>
900271ea:	f85d 4b04 	ldr.w	r4, [sp], #4
900271ee:	4770      	bx	lr

900271f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900271f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900271f4:	b08b      	sub	sp, #44	@ 0x2c
900271f6:	4606      	mov	r6, r0
900271f8:	468a      	mov	sl, r1
900271fa:	e9cd 2306 	strd	r2, r3, [sp, #24]
900271fe:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90027202:	9308      	str	r3, [sp, #32]
90027204:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90027208:	9309      	str	r3, [sp, #36]	@ 0x24
9002720a:	f7ec fb58 	bl	900138be <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
9002720e:	68b5      	ldr	r5, [r6, #8]
90027210:	4604      	mov	r4, r0
90027212:	2d00      	cmp	r5, #0
90027214:	d044      	beq.n	900272a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90027216:	6873      	ldr	r3, [r6, #4]
90027218:	42ab      	cmp	r3, r5
9002721a:	d33d      	bcc.n	90027298 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
9002721c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90027220:	f04f 0800 	mov.w	r8, #0
90027224:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
90027228:	eb02 0b03 	add.w	fp, r2, r3
9002722c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90027230:	fb02 1203 	mla	r2, r2, r3, r1
90027234:	9205      	str	r2, [sp, #20]
90027236:	1e6a      	subs	r2, r5, #1
90027238:	9204      	str	r2, [sp, #16]
9002723a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
9002723e:	f9b4 7000 	ldrsh.w	r7, [r4]
90027242:	454b      	cmp	r3, r9
90027244:	463a      	mov	r2, r7
90027246:	d008      	beq.n	9002725a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90027248:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
9002724c:	eb03 0b09 	add.w	fp, r3, r9
90027250:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90027254:	fb03 1309 	mla	r3, r3, r9, r1
90027258:	9305      	str	r3, [sp, #20]
9002725a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9002725e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90027262:	4498      	add	r8, r3
90027264:	9b04      	ldr	r3, [sp, #16]
90027266:	3b01      	subs	r3, #1
90027268:	9304      	str	r3, [sp, #16]
9002726a:	9b04      	ldr	r3, [sp, #16]
9002726c:	3301      	adds	r3, #1
9002726e:	d015      	beq.n	9002729c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90027270:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90027274:	42bb      	cmp	r3, r7
90027276:	d117      	bne.n	900272a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90027278:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
9002727c:	9b04      	ldr	r3, [sp, #16]
9002727e:	4548      	cmp	r0, r9
90027280:	f103 33ff 	add.w	r3, r3, #4294967295
90027284:	d17d      	bne.n	90027382 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90027286:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002728a:	4401      	add	r1, r0
9002728c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90027290:	4480      	add	r8, r0
90027292:	e7e9      	b.n	90027268 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90027294:	461f      	mov	r7, r3
90027296:	e042      	b.n	9002731e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90027298:	2000      	movs	r0, #0
9002729a:	e002      	b.n	900272a2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
9002729c:	2900      	cmp	r1, #0
9002729e:	d16d      	bne.n	9002737c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
900272a0:	2001      	movs	r0, #1
900272a2:	b00b      	add	sp, #44	@ 0x2c
900272a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900272a8:	b379      	cbz	r1, 9002730a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
900272aa:	2f00      	cmp	r7, #0
900272ac:	db29      	blt.n	90027302 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900272ae:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
900272b2:	42bb      	cmp	r3, r7
900272b4:	dd25      	ble.n	90027302 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900272b6:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
900272ba:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
900272be:	f7ff ff77 	bl	900271b0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
900272c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900272c4:	fb10 f003 	smulbb	r0, r0, r3
900272c8:	b280      	uxth	r0, r0
900272ca:	1c41      	adds	r1, r0, #1
900272cc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900272d0:	1209      	asrs	r1, r1, #8
900272d2:	f011 0fff 	tst.w	r1, #255	@ 0xff
900272d6:	d014      	beq.n	90027302 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900272d8:	b2c9      	uxtb	r1, r1
900272da:	9808      	ldr	r0, [sp, #32]
900272dc:	b2ba      	uxth	r2, r7
900272de:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
900272e0:	9102      	str	r1, [sp, #8]
900272e2:	2101      	movs	r1, #1
900272e4:	4413      	add	r3, r2
900272e6:	4402      	add	r2, r0
900272e8:	9101      	str	r1, [sp, #4]
900272ea:	fa0f f18b 	sxth.w	r1, fp
900272ee:	f8da 0000 	ldr.w	r0, [sl]
900272f2:	b21b      	sxth	r3, r3
900272f4:	9100      	str	r1, [sp, #0]
900272f6:	b212      	sxth	r2, r2
900272f8:	6941      	ldr	r1, [r0, #20]
900272fa:	4650      	mov	r0, sl
900272fc:	460d      	mov	r5, r1
900272fe:	9905      	ldr	r1, [sp, #20]
90027300:	47a8      	blx	r5
90027302:	9b04      	ldr	r3, [sp, #16]
90027304:	1c7a      	adds	r2, r7, #1
90027306:	3301      	adds	r3, #1
90027308:	d0ca      	beq.n	900272a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002730a:	f9b4 7000 	ldrsh.w	r7, [r4]
9002730e:	1abb      	subs	r3, r7, r2
90027310:	2b00      	cmp	r3, #0
90027312:	dd31      	ble.n	90027378 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027314:	2a00      	cmp	r2, #0
90027316:	dabd      	bge.n	90027294 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90027318:	2f00      	cmp	r7, #0
9002731a:	dd2d      	ble.n	90027378 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002731c:	2200      	movs	r2, #0
9002731e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90027322:	19d1      	adds	r1, r2, r7
90027324:	4299      	cmp	r1, r3
90027326:	db02      	blt.n	9002732e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90027328:	1a9f      	subs	r7, r3, r2
9002732a:	2f00      	cmp	r7, #0
9002732c:	dd24      	ble.n	90027378 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002732e:	ea4f 1188 	mov.w	r1, r8, lsl #6
90027332:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90027336:	f7ff ff3b 	bl	900271b0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002733a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002733c:	fb10 f003 	smulbb	r0, r0, r3
90027340:	b280      	uxth	r0, r0
90027342:	1c41      	adds	r1, r0, #1
90027344:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027348:	1209      	asrs	r1, r1, #8
9002734a:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002734e:	d013      	beq.n	90027378 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027350:	b292      	uxth	r2, r2
90027352:	9808      	ldr	r0, [sp, #32]
90027354:	b2c9      	uxtb	r1, r1
90027356:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90027358:	b23f      	sxth	r7, r7
9002735a:	4413      	add	r3, r2
9002735c:	9102      	str	r1, [sp, #8]
9002735e:	4402      	add	r2, r0
90027360:	fa0f f18b 	sxth.w	r1, fp
90027364:	f8da 0000 	ldr.w	r0, [sl]
90027368:	b21b      	sxth	r3, r3
9002736a:	9100      	str	r1, [sp, #0]
9002736c:	b212      	sxth	r2, r2
9002736e:	9701      	str	r7, [sp, #4]
90027370:	9905      	ldr	r1, [sp, #20]
90027372:	6947      	ldr	r7, [r0, #20]
90027374:	4650      	mov	r0, sl
90027376:	47b8      	blx	r7
90027378:	464b      	mov	r3, r9
9002737a:	e75e      	b.n	9002723a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
9002737c:	2f00      	cmp	r7, #0
9002737e:	da96      	bge.n	900272ae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90027380:	e78e      	b.n	900272a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90027382:	2900      	cmp	r1, #0
90027384:	d0f8      	beq.n	90027378 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027386:	e790      	b.n	900272aa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90027388 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90027388:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002738c:	461e      	mov	r6, r3
9002738e:	4b36      	ldr	r3, [pc, #216]	@ (90027468 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90027390:	2500      	movs	r5, #0
90027392:	f100 0814 	add.w	r8, r0, #20
90027396:	4604      	mov	r4, r0
90027398:	4617      	mov	r7, r2
9002739a:	e9c0 3100 	strd	r3, r1, [r0]
9002739e:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
900273a2:	8185      	strh	r5, [r0, #12]
900273a4:	8103      	strh	r3, [r0, #8]
900273a6:	f89d 3020 	ldrb.w	r3, [sp, #32]
900273aa:	81c5      	strh	r5, [r0, #14]
900273ac:	7283      	strb	r3, [r0, #10]
900273ae:	8205      	strh	r5, [r0, #16]
900273b0:	8245      	strh	r5, [r0, #18]
900273b2:	4640      	mov	r0, r8
900273b4:	f7eb fc5e 	bl	90012c74 <_ZN8touchgfx7OutlineC1Ev>
900273b8:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
900273bc:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
900273c0:	466b      	mov	r3, sp
900273c2:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
900273c6:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
900273ca:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
900273ce:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
900273d2:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
900273d6:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
900273da:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
900273de:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
900273e2:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
900273e6:	6830      	ldr	r0, [r6, #0]
900273e8:	6871      	ldr	r1, [r6, #4]
900273ea:	8872      	ldrh	r2, [r6, #2]
900273ec:	8835      	ldrh	r5, [r6, #0]
900273ee:	c303      	stmia	r3!, {r0, r1}
900273f0:	887b      	ldrh	r3, [r7, #2]
900273f2:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
900273f6:	4413      	add	r3, r2
900273f8:	883a      	ldrh	r2, [r7, #0]
900273fa:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
900273fe:	442a      	add	r2, r5
90027400:	81e3      	strh	r3, [r4, #14]
90027402:	8220      	strh	r0, [r4, #16]
90027404:	4668      	mov	r0, sp
90027406:	81a2      	strh	r2, [r4, #12]
90027408:	8261      	strh	r1, [r4, #18]
9002740a:	4639      	mov	r1, r7
9002740c:	f7ed fe0a 	bl	90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027410:	f104 000c 	add.w	r0, r4, #12
90027414:	f7ed fdde 	bl	90014fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027418:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002741c:	f8bd 2000 	ldrh.w	r2, [sp]
90027420:	4640      	mov	r0, r8
90027422:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
90027426:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
9002742a:	f7eb fc07 	bl	90012c3c <_ZN8touchgfx7Outline5resetEv>
9002742e:	f9bd 3000 	ldrsh.w	r3, [sp]
90027432:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
90027436:	4620      	mov	r0, r4
90027438:	015b      	lsls	r3, r3, #5
9002743a:	64e3      	str	r3, [r4, #76]	@ 0x4c
9002743c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90027440:	015b      	lsls	r3, r3, #5
90027442:	6523      	str	r3, [r4, #80]	@ 0x50
90027444:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90027448:	015b      	lsls	r3, r3, #5
9002744a:	6563      	str	r3, [r4, #84]	@ 0x54
9002744c:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90027450:	015b      	lsls	r3, r3, #5
90027452:	65a3      	str	r3, [r4, #88]	@ 0x58
90027454:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90027458:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
9002745c:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
90027460:	b002      	add	sp, #8
90027462:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90027466:	bf00      	nop
90027468:	9002c6e8 	.word	0x9002c6e8

9002746c <_ZN8touchgfx6Canvas5closeEv>:
9002746c:	b538      	push	{r3, r4, r5, lr}
9002746e:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90027472:	4604      	mov	r4, r0
90027474:	b193      	cbz	r3, 9002749c <_ZN8touchgfx6Canvas5closeEv+0x30>
90027476:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
9002747a:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
9002747e:	4213      	tst	r3, r2
90027480:	d10c      	bne.n	9002749c <_ZN8touchgfx6Canvas5closeEv+0x30>
90027482:	f100 0514 	add.w	r5, r0, #20
90027486:	b123      	cbz	r3, 90027492 <_ZN8touchgfx6Canvas5closeEv+0x26>
90027488:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
9002748c:	4628      	mov	r0, r5
9002748e:	f7ff fea3 	bl	900271d8 <_ZN8touchgfx10Rasterizer6lineToEii>
90027492:	4628      	mov	r0, r5
90027494:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
90027498:	f7ff fe9e 	bl	900271d8 <_ZN8touchgfx10Rasterizer6lineToEii>
9002749c:	2300      	movs	r3, #0
9002749e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
900274a2:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
900274a6:	4298      	cmp	r0, r3
900274a8:	bf34      	ite	cc
900274aa:	2000      	movcc	r0, #0
900274ac:	2001      	movcs	r0, #1
900274ae:	bd38      	pop	{r3, r4, r5, pc}

900274b0 <_ZN8touchgfx6Canvas6renderEh>:
900274b0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900274b4:	7a85      	ldrb	r5, [r0, #10]
900274b6:	4604      	mov	r4, r0
900274b8:	4369      	muls	r1, r5
900274ba:	1c4d      	adds	r5, r1, #1
900274bc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900274c0:	122d      	asrs	r5, r5, #8
900274c2:	f000 8098 	beq.w	900275f6 <_ZN8touchgfx6Canvas6renderEh+0x146>
900274c6:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
900274ca:	2b00      	cmp	r3, #0
900274cc:	f000 8093 	beq.w	900275f6 <_ZN8touchgfx6Canvas6renderEh+0x146>
900274d0:	f7ff ffcc 	bl	9002746c <_ZN8touchgfx6Canvas5closeEv>
900274d4:	4607      	mov	r7, r0
900274d6:	2800      	cmp	r0, #0
900274d8:	d045      	beq.n	90027566 <_ZN8touchgfx6Canvas6renderEh+0xb6>
900274da:	6860      	ldr	r0, [r4, #4]
900274dc:	4e47      	ldr	r6, [pc, #284]	@ (900275fc <_ZN8touchgfx6Canvas6renderEh+0x14c>)
900274de:	6803      	ldr	r3, [r0, #0]
900274e0:	6837      	ldr	r7, [r6, #0]
900274e2:	689b      	ldr	r3, [r3, #8]
900274e4:	4798      	blx	r3
900274e6:	4601      	mov	r1, r0
900274e8:	4638      	mov	r0, r7
900274ea:	f7e9 faa9 	bl	90010a40 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
900274ee:	4607      	mov	r7, r0
900274f0:	f7e8 fe6a 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
900274f4:	6803      	ldr	r3, [r0, #0]
900274f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900274f8:	4798      	blx	r3
900274fa:	4680      	mov	r8, r0
900274fc:	f7e8 fe64 	bl	900101c8 <_ZN8touchgfx3HAL3lcdEv>
90027500:	6803      	ldr	r3, [r0, #0]
90027502:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90027504:	4798      	blx	r3
90027506:	280b      	cmp	r0, #11
90027508:	d85a      	bhi.n	900275c0 <_ZN8touchgfx6Canvas6renderEh+0x110>
9002750a:	e8df f000 	tbb	[pc, r0]
9002750e:	5b50      	.short	0x5b50
90027510:	3059066b 	.word	0x3059066b
90027514:	64646440 	.word	0x64646440
90027518:	6464      	.short	0x6464
9002751a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002751e:	2208      	movs	r2, #8
90027520:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90027524:	fb91 f2f2 	sdiv	r2, r1, r2
90027528:	fb08 2303 	mla	r3, r8, r3, r2
9002752c:	441f      	add	r7, r3
9002752e:	424b      	negs	r3, r1
90027530:	f001 0107 	and.w	r1, r1, #7
90027534:	f003 0307 	and.w	r3, r3, #7
90027538:	bf58      	it	pl
9002753a:	4259      	negpl	r1, r3
9002753c:	b2c9      	uxtb	r1, r1
9002753e:	b2ed      	uxtb	r5, r5
90027540:	463a      	mov	r2, r7
90027542:	fa0f f388 	sxth.w	r3, r8
90027546:	f104 0014 	add.w	r0, r4, #20
9002754a:	e9cd 1500 	strd	r1, r5, [sp]
9002754e:	6861      	ldr	r1, [r4, #4]
90027550:	f7ff fe4e 	bl	900271f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90027554:	4607      	mov	r7, r0
90027556:	6860      	ldr	r0, [r4, #4]
90027558:	6803      	ldr	r3, [r0, #0]
9002755a:	691b      	ldr	r3, [r3, #16]
9002755c:	4798      	blx	r3
9002755e:	6830      	ldr	r0, [r6, #0]
90027560:	6803      	ldr	r3, [r0, #0]
90027562:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90027564:	4798      	blx	r3
90027566:	4638      	mov	r0, r7
90027568:	b002      	add	sp, #8
9002756a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002756e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90027572:	2204      	movs	r2, #4
90027574:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90027578:	fb91 f2f2 	sdiv	r2, r1, r2
9002757c:	fb08 2303 	mla	r3, r8, r3, r2
90027580:	441f      	add	r7, r3
90027582:	424b      	negs	r3, r1
90027584:	f001 0103 	and.w	r1, r1, #3
90027588:	f003 0303 	and.w	r3, r3, #3
9002758c:	e7d4      	b.n	90027538 <_ZN8touchgfx6Canvas6renderEh+0x88>
9002758e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90027592:	2202      	movs	r2, #2
90027594:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90027598:	2900      	cmp	r1, #0
9002759a:	fb91 f2f2 	sdiv	r2, r1, r2
9002759e:	f001 0101 	and.w	r1, r1, #1
900275a2:	fb08 2303 	mla	r3, r8, r3, r2
900275a6:	bfb8      	it	lt
900275a8:	4249      	neglt	r1, r1
900275aa:	441f      	add	r7, r3
900275ac:	e7c6      	b.n	9002753c <_ZN8touchgfx6Canvas6renderEh+0x8c>
900275ae:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900275b2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900275b6:	fb08 f303 	mul.w	r3, r8, r3
900275ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900275be:	441f      	add	r7, r3
900275c0:	2100      	movs	r1, #0
900275c2:	e7bc      	b.n	9002753e <_ZN8touchgfx6Canvas6renderEh+0x8e>
900275c4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900275c8:	2103      	movs	r1, #3
900275ca:	fb08 f203 	mul.w	r2, r8, r3
900275ce:	89a3      	ldrh	r3, [r4, #12]
900275d0:	fb13 2301 	smlabb	r3, r3, r1, r2
900275d4:	e7f3      	b.n	900275be <_ZN8touchgfx6Canvas6renderEh+0x10e>
900275d6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900275da:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900275de:	fb08 2303 	mla	r3, r8, r3, r2
900275e2:	e7ec      	b.n	900275be <_ZN8touchgfx6Canvas6renderEh+0x10e>
900275e4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900275e8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900275ec:	fb08 f303 	mul.w	r3, r8, r3
900275f0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900275f4:	e7e3      	b.n	900275be <_ZN8touchgfx6Canvas6renderEh+0x10e>
900275f6:	2701      	movs	r7, #1
900275f8:	e7b5      	b.n	90027566 <_ZN8touchgfx6Canvas6renderEh+0xb6>
900275fa:	bf00      	nop
900275fc:	240218b4 	.word	0x240218b4

90027600 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90027600:	4b06      	ldr	r3, [pc, #24]	@ (9002761c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90027602:	b510      	push	{r4, lr}
90027604:	781b      	ldrb	r3, [r3, #0]
90027606:	2b01      	cmp	r3, #1
90027608:	d107      	bne.n	9002761a <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
9002760a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
9002760e:	680b      	ldr	r3, [r1, #0]
90027610:	6814      	ldr	r4, [r2, #0]
90027612:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90027616:	6013      	str	r3, [r2, #0]
90027618:	600c      	str	r4, [r1, #0]
9002761a:	bd10      	pop	{r4, pc}
9002761c:	240218ac 	.word	0x240218ac

90027620 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90027620:	b513      	push	{r0, r1, r4, lr}
90027622:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90027626:	4604      	mov	r4, r0
90027628:	e9cd 2100 	strd	r2, r1, [sp]
9002762c:	b9a3      	cbnz	r3, 90027658 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
9002762e:	466a      	mov	r2, sp
90027630:	a901      	add	r1, sp, #4
90027632:	4620      	mov	r0, r4
90027634:	f7ff ffe4 	bl	90027600 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90027638:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002763a:	9901      	ldr	r1, [sp, #4]
9002763c:	9a00      	ldr	r2, [sp, #0]
9002763e:	1ac9      	subs	r1, r1, r3
90027640:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90027642:	1ad2      	subs	r2, r2, r3
90027644:	9101      	str	r1, [sp, #4]
90027646:	2a00      	cmp	r2, #0
90027648:	9200      	str	r2, [sp, #0]
9002764a:	da0b      	bge.n	90027664 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
9002764c:	2301      	movs	r3, #1
9002764e:	2900      	cmp	r1, #0
90027650:	da0e      	bge.n	90027670 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90027652:	f043 0304 	orr.w	r3, r3, #4
90027656:	e013      	b.n	90027680 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90027658:	f7ff ff08 	bl	9002746c <_ZN8touchgfx6Canvas5closeEv>
9002765c:	2800      	cmp	r0, #0
9002765e:	d1e6      	bne.n	9002762e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90027660:	b002      	add	sp, #8
90027662:	bd10      	pop	{r4, pc}
90027664:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90027666:	429a      	cmp	r2, r3
90027668:	bfac      	ite	ge
9002766a:	2302      	movge	r3, #2
9002766c:	2300      	movlt	r3, #0
9002766e:	e7ee      	b.n	9002764e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90027670:	6d60      	ldr	r0, [r4, #84]	@ 0x54
90027672:	4281      	cmp	r1, r0
90027674:	bfac      	ite	ge
90027676:	2008      	movge	r0, #8
90027678:	2000      	movlt	r0, #0
9002767a:	4318      	orrs	r0, r3
9002767c:	b2c3      	uxtb	r3, r0
9002767e:	b158      	cbz	r0, 90027698 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90027680:	2200      	movs	r2, #0
90027682:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
90027686:	9901      	ldr	r1, [sp, #4]
90027688:	9a00      	ldr	r2, [sp, #0]
9002768a:	66e1      	str	r1, [r4, #108]	@ 0x6c
9002768c:	6722      	str	r2, [r4, #112]	@ 0x70
9002768e:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90027692:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
90027696:	e7e3      	b.n	90027660 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90027698:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002769c:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
900276a0:	4298      	cmp	r0, r3
900276a2:	d803      	bhi.n	900276ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
900276a4:	f104 0014 	add.w	r0, r4, #20
900276a8:	f7eb ffb8 	bl	9001361c <_ZN8touchgfx7Outline6moveToEii>
900276ac:	2301      	movs	r3, #1
900276ae:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
900276b2:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
900276b6:	2300      	movs	r3, #0
900276b8:	e7e5      	b.n	90027686 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

900276ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
900276ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
900276bc:	ab02      	add	r3, sp, #8
900276be:	4604      	mov	r4, r0
900276c0:	9101      	str	r1, [sp, #4]
900276c2:	a901      	add	r1, sp, #4
900276c4:	f843 2d08 	str.w	r2, [r3, #-8]!
900276c8:	461a      	mov	r2, r3
900276ca:	f7ff ff99 	bl	90027600 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900276ce:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900276d0:	9901      	ldr	r1, [sp, #4]
900276d2:	9a00      	ldr	r2, [sp, #0]
900276d4:	1ac9      	subs	r1, r1, r3
900276d6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900276d8:	1ad2      	subs	r2, r2, r3
900276da:	9101      	str	r1, [sp, #4]
900276dc:	2a00      	cmp	r2, #0
900276de:	9200      	str	r2, [sp, #0]
900276e0:	db1c      	blt.n	9002771c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
900276e2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
900276e4:	429a      	cmp	r2, r3
900276e6:	bfac      	ite	ge
900276e8:	2002      	movge	r0, #2
900276ea:	2000      	movlt	r0, #0
900276ec:	2900      	cmp	r1, #0
900276ee:	db17      	blt.n	90027720 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
900276f0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900276f2:	4299      	cmp	r1, r3
900276f4:	bfac      	ite	ge
900276f6:	2308      	movge	r3, #8
900276f8:	2300      	movlt	r3, #0
900276fa:	4303      	orrs	r3, r0
900276fc:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
90027700:	b2dd      	uxtb	r5, r3
90027702:	b978      	cbnz	r0, 90027724 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90027704:	f104 0014 	add.w	r0, r4, #20
90027708:	f7ff fd66 	bl	900271d8 <_ZN8touchgfx10Rasterizer6lineToEii>
9002770c:	9b01      	ldr	r3, [sp, #4]
9002770e:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
90027712:	6623      	str	r3, [r4, #96]	@ 0x60
90027714:	9b00      	ldr	r3, [sp, #0]
90027716:	6663      	str	r3, [r4, #100]	@ 0x64
90027718:	b002      	add	sp, #8
9002771a:	bd70      	pop	{r4, r5, r6, pc}
9002771c:	2001      	movs	r0, #1
9002771e:	e7e5      	b.n	900276ec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90027720:	2304      	movs	r3, #4
90027722:	e7ea      	b.n	900276fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90027724:	b113      	cbz	r3, 9002772c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90027726:	ea10 0305 	ands.w	r3, r0, r5
9002772a:	d11c      	bne.n	90027766 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
9002772c:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90027730:	f104 0614 	add.w	r6, r4, #20
90027734:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
90027738:	b98b      	cbnz	r3, 9002775e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002773a:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002773e:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90027742:	4298      	cmp	r0, r3
90027744:	d802      	bhi.n	9002774c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90027746:	4630      	mov	r0, r6
90027748:	f7eb ff68 	bl	9001361c <_ZN8touchgfx7Outline6moveToEii>
9002774c:	2301      	movs	r3, #1
9002774e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90027752:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90027756:	4630      	mov	r0, r6
90027758:	e9dd 2100 	ldrd	r2, r1, [sp]
9002775c:	e7d4      	b.n	90027708 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
9002775e:	4630      	mov	r0, r6
90027760:	f7ff fd3a 	bl	900271d8 <_ZN8touchgfx10Rasterizer6lineToEii>
90027764:	e7f7      	b.n	90027756 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90027766:	461d      	mov	r5, r3
90027768:	e7d0      	b.n	9002770c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

9002776c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
9002776c:	b538      	push	{r3, r4, r5, lr}
9002776e:	ed2d 8b10 	vpush	{d8-d15}
90027772:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
90027776:	4605      	mov	r5, r0
90027778:	eeb0 ca40 	vmov.f32	s24, s0
9002777c:	460c      	mov	r4, r1
9002777e:	eef0 ca60 	vmov.f32	s25, s1
90027782:	ed9f ba57 	vldr	s22, [pc, #348]	@ 900278e0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
90027786:	eeb0 da41 	vmov.f32	s26, s2
9002778a:	eef0 da61 	vmov.f32	s27, s3
9002778e:	eeb0 ea42 	vmov.f32	s28, s4
90027792:	eef0 ea62 	vmov.f32	s29, s5
90027796:	eef0 aa6b 	vmov.f32	s21, s23
9002779a:	2c08      	cmp	r4, #8
9002779c:	d86e      	bhi.n	9002787c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
9002779e:	ee7e 6a4c 	vsub.f32	s13, s28, s24
900277a2:	ee7d 7aee 	vsub.f32	s15, s27, s29
900277a6:	ee3d 6a4e 	vsub.f32	s12, s26, s28
900277aa:	ee3e 7aec 	vsub.f32	s14, s29, s25
900277ae:	ee66 7ae7 	vnmul.f32	s15, s13, s15
900277b2:	ee3c fa0d 	vadd.f32	s30, s24, s26
900277b6:	ee7c faad 	vadd.f32	s31, s25, s27
900277ba:	eee6 7a07 	vfma.f32	s15, s12, s14
900277be:	ee7d 9a0e 	vadd.f32	s19, s26, s28
900277c2:	ee3d aaae 	vadd.f32	s20, s27, s29
900277c6:	ee2f fa2b 	vmul.f32	s30, s30, s23
900277ca:	ee6f faab 	vmul.f32	s31, s31, s23
900277ce:	ee69 9aab 	vmul.f32	s19, s19, s23
900277d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900277d6:	ee2a aa2b 	vmul.f32	s20, s20, s23
900277da:	ee7f 8a29 	vadd.f32	s17, s30, s19
900277de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900277e2:	ee3f 9a8a 	vadd.f32	s18, s31, s20
900277e6:	ee68 8aab 	vmul.f32	s17, s17, s23
900277ea:	bf48      	it	mi
900277ec:	eef1 7a67 	vnegmi.f32	s15, s15
900277f0:	ee29 9a2b 	vmul.f32	s18, s18, s23
900277f4:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
900277f8:	eef4 7acb 	vcmpe.f32	s15, s22
900277fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027800:	dd3f      	ble.n	90027882 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
90027802:	ee27 7a07 	vmul.f32	s14, s14, s14
90027806:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002780a:	eea6 7aa6 	vfma.f32	s14, s13, s13
9002780e:	ee27 7a06 	vmul.f32	s14, s14, s12
90027812:	eef4 7ac7 	vcmpe.f32	s15, s14
90027816:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002781a:	d847      	bhi.n	900278ac <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002781c:	ee7e 0a4d 	vsub.f32	s1, s28, s26
90027820:	ee3e 0aed 	vsub.f32	s0, s29, s27
90027824:	f000 fa57 	bl	90027cd6 <atan2f>
90027828:	eeb0 8a40 	vmov.f32	s16, s0
9002782c:	ee7d 0a4c 	vsub.f32	s1, s26, s24
90027830:	ee3d 0aec 	vsub.f32	s0, s27, s25
90027834:	f000 fa4f 	bl	90027cd6 <atan2f>
90027838:	ee38 0a40 	vsub.f32	s0, s16, s0
9002783c:	eddf 7a29 	vldr	s15, [pc, #164]	@ 900278e4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
90027840:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90027844:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027848:	bf48      	it	mi
9002784a:	eeb1 0a40 	vnegmi.f32	s0, s0
9002784e:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027856:	bfa4      	itt	ge
90027858:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 900278e8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
9002785c:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90027860:	eddf 7a22 	vldr	s15, [pc, #136]	@ 900278ec <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
90027864:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027868:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002786c:	d51e      	bpl.n	900278ac <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002786e:	eef0 0a49 	vmov.f32	s1, s18
90027872:	4628      	mov	r0, r5
90027874:	eeb0 0a68 	vmov.f32	s0, s17
90027878:	f7ea fa54 	bl	90011d24 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002787c:	ecbd 8b10 	vpop	{d8-d15}
90027880:	bd38      	pop	{r3, r4, r5, pc}
90027882:	ee7c 7a0e 	vadd.f32	s15, s24, s28
90027886:	eeb0 7a68 	vmov.f32	s14, s17
9002788a:	eef0 6a49 	vmov.f32	s13, s18
9002788e:	eea7 7aea 	vfms.f32	s14, s15, s21
90027892:	ee7c 7aae 	vadd.f32	s15, s25, s29
90027896:	eee7 6aea 	vfms.f32	s13, s15, s21
9002789a:	ee66 7aa6 	vmul.f32	s15, s13, s13
9002789e:	eee7 7a07 	vfma.f32	s15, s14, s14
900278a2:	eef4 7ac6 	vcmpe.f32	s15, s12
900278a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900278aa:	d9e0      	bls.n	9002786e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
900278ac:	3401      	adds	r4, #1
900278ae:	eef0 0a6c 	vmov.f32	s1, s25
900278b2:	eeb0 0a4c 	vmov.f32	s0, s24
900278b6:	4628      	mov	r0, r5
900278b8:	4621      	mov	r1, r4
900278ba:	eef0 2a49 	vmov.f32	s5, s18
900278be:	eeb0 2a68 	vmov.f32	s4, s17
900278c2:	eef0 1a6f 	vmov.f32	s3, s31
900278c6:	eeb0 1a4f 	vmov.f32	s2, s30
900278ca:	f7ff ff4f 	bl	9002776c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
900278ce:	eef0 da4a 	vmov.f32	s27, s20
900278d2:	eeb0 da69 	vmov.f32	s26, s19
900278d6:	eef0 ca49 	vmov.f32	s25, s18
900278da:	eeb0 ca68 	vmov.f32	s24, s17
900278de:	e75c      	b.n	9002779a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
900278e0:	2edbe6ff 	.word	0x2edbe6ff
900278e4:	40490fdb 	.word	0x40490fdb
900278e8:	40c90fdb 	.word	0x40c90fdb
900278ec:	3dcccccd 	.word	0x3dcccccd

900278f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
900278f0:	b530      	push	{r4, r5, lr}
900278f2:	ed2d 8b10 	vpush	{d8-d15}
900278f6:	eef0 8a40 	vmov.f32	s17, s0
900278fa:	b085      	sub	sp, #20
900278fc:	eef0 9a60 	vmov.f32	s19, s1
90027900:	4604      	mov	r4, r0
90027902:	eef0 fa41 	vmov.f32	s31, s2
90027906:	460d      	mov	r5, r1
90027908:	eeb0 fa61 	vmov.f32	s30, s3
9002790c:	eef0 ba42 	vmov.f32	s23, s4
90027910:	eeb0 ca62 	vmov.f32	s24, s5
90027914:	eef0 aa43 	vmov.f32	s21, s6
90027918:	eeb0 ba63 	vmov.f32	s22, s7
9002791c:	2d08      	cmp	r5, #8
9002791e:	f200 8113 	bhi.w	90027b48 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
90027922:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90027926:	ee3b 6aaa 	vadd.f32	s12, s23, s21
9002792a:	ee7f 6aab 	vadd.f32	s13, s31, s23
9002792e:	ee38 daaf 	vadd.f32	s26, s17, s31
90027932:	ee26 6a27 	vmul.f32	s12, s12, s15
90027936:	ee7c ca0b 	vadd.f32	s25, s24, s22
9002793a:	ee2d da27 	vmul.f32	s26, s26, s15
9002793e:	ed8d 6a01 	vstr	s12, [sp, #4]
90027942:	eea6 6aa7 	vfma.f32	s12, s13, s15
90027946:	ee6c caa7 	vmul.f32	s25, s25, s15
9002794a:	eeb0 ea4d 	vmov.f32	s28, s26
9002794e:	ee79 da8f 	vadd.f32	s27, s19, s30
90027952:	ee3f 7a0c 	vadd.f32	s14, s30, s24
90027956:	eea6 eaa7 	vfma.f32	s28, s13, s15
9002795a:	ee66 6a27 	vmul.f32	s13, s12, s15
9002795e:	ee6d daa7 	vmul.f32	s27, s27, s15
90027962:	edcd 6a03 	vstr	s13, [sp, #12]
90027966:	eef0 6a6c 	vmov.f32	s13, s25
9002796a:	eef0 ea6d 	vmov.f32	s29, s27
9002796e:	ee2e ea27 	vmul.f32	s28, s28, s15
90027972:	eee7 6a27 	vfma.f32	s13, s14, s15
90027976:	eee7 ea27 	vfma.f32	s29, s14, s15
9002797a:	ee26 7aa7 	vmul.f32	s14, s13, s15
9002797e:	ee6e eaa7 	vmul.f32	s29, s29, s15
90027982:	eef0 6a67 	vmov.f32	s13, s15
90027986:	ed8d 7a02 	vstr	s14, [sp, #8]
9002798a:	ed9d 7a03 	vldr	s14, [sp, #12]
9002798e:	ee3e 9a07 	vadd.f32	s18, s28, s14
90027992:	ed9d 7a02 	vldr	s14, [sp, #8]
90027996:	ee3e aa87 	vadd.f32	s20, s29, s14
9002799a:	ee29 9a27 	vmul.f32	s18, s18, s15
9002799e:	ee2a aa27 	vmul.f32	s20, s20, s15
900279a2:	2d00      	cmp	r5, #0
900279a4:	f000 810b 	beq.w	90027bbe <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900279a8:	ee7a 5ae8 	vsub.f32	s11, s21, s17
900279ac:	eddf 4a95 	vldr	s9, [pc, #596]	@ 90027c04 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
900279b0:	ee3f 7a4b 	vsub.f32	s14, s30, s22
900279b4:	ee7b 7a69 	vsub.f32	s15, s22, s19
900279b8:	ee3f 6aea 	vsub.f32	s12, s31, s21
900279bc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
900279c0:	ee3b 5aea 	vsub.f32	s10, s23, s21
900279c4:	eea6 7a27 	vfma.f32	s14, s12, s15
900279c8:	ee3c 6a4b 	vsub.f32	s12, s24, s22
900279cc:	ee25 6ac6 	vnmul.f32	s12, s11, s12
900279d0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900279d4:	eea5 6a27 	vfma.f32	s12, s10, s15
900279d8:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
900279dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900279e0:	bf48      	it	mi
900279e2:	eeb1 7a47 	vnegmi.f32	s14, s14
900279e6:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
900279ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900279ee:	eeb4 7ae4 	vcmpe.f32	s14, s9
900279f2:	bf48      	it	mi
900279f4:	eeb1 6a46 	vnegmi.f32	s12, s12
900279f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900279fc:	f340 80a8 	ble.w	90027b50 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
90027a00:	eeb4 6ae4 	vcmpe.f32	s12, s9
90027a04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027a08:	dd5a      	ble.n	90027ac0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
90027a0a:	ee65 5aa5 	vmul.f32	s11, s11, s11
90027a0e:	ee37 7a06 	vadd.f32	s14, s14, s12
90027a12:	eee7 5aa7 	vfma.f32	s11, s15, s15
90027a16:	ee27 7a07 	vmul.f32	s14, s14, s14
90027a1a:	ee65 7a85 	vmul.f32	s15, s11, s10
90027a1e:	eeb4 7ae7 	vcmpe.f32	s14, s15
90027a22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027a26:	f200 80ca 	bhi.w	90027bbe <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027a2a:	ee7b 0aef 	vsub.f32	s1, s23, s31
90027a2e:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90027a32:	f000 f950 	bl	90027cd6 <atan2f>
90027a36:	eeb0 8a40 	vmov.f32	s16, s0
90027a3a:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90027a3e:	ee3f 0a69 	vsub.f32	s0, s30, s19
90027a42:	f000 f948 	bl	90027cd6 <atan2f>
90027a46:	ee38 fa40 	vsub.f32	s30, s16, s0
90027a4a:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90027a4e:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90027a52:	eeb5 fac0 	vcmpe.f32	s30, #0.0
90027a56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027a5a:	bf48      	it	mi
90027a5c:	eeb1 fa4f 	vnegmi.f32	s30, s30
90027a60:	f000 f939 	bl	90027cd6 <atan2f>
90027a64:	ee30 0a48 	vsub.f32	s0, s0, s16
90027a68:	eddf 7a67 	vldr	s15, [pc, #412]	@ 90027c08 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90027a6c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90027a70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027a74:	eeb4 fae7 	vcmpe.f32	s30, s15
90027a78:	eddf 7a63 	vldr	s15, [pc, #396]	@ 90027c08 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90027a7c:	bf48      	it	mi
90027a7e:	eeb1 0a40 	vnegmi.f32	s0, s0
90027a82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027a86:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027a8a:	eddf 7a60 	vldr	s15, [pc, #384]	@ 90027c0c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90027a8e:	bfa4      	itt	ge
90027a90:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 90027c10 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90027a94:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90027a98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027a9c:	bfa4      	itt	ge
90027a9e:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 90027c10 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90027aa2:	ee37 0a40 	vsubge.f32	s0, s14, s0
90027aa6:	ee3f 0a00 	vadd.f32	s0, s30, s0
90027aaa:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027aae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027ab2:	f140 8084 	bpl.w	90027bbe <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027ab6:	eef0 0a4a 	vmov.f32	s1, s20
90027aba:	eeb0 0a49 	vmov.f32	s0, s18
90027abe:	e040      	b.n	90027b42 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90027ac0:	ee67 7aa7 	vmul.f32	s15, s15, s15
90027ac4:	ee27 7a07 	vmul.f32	s14, s14, s14
90027ac8:	eee5 7aa5 	vfma.f32	s15, s11, s11
90027acc:	ee67 7a85 	vmul.f32	s15, s15, s10
90027ad0:	eeb4 7ae7 	vcmpe.f32	s14, s15
90027ad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027ad8:	d871      	bhi.n	90027bbe <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027ada:	ee7b 0aef 	vsub.f32	s1, s23, s31
90027ade:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90027ae2:	f000 f8f8 	bl	90027cd6 <atan2f>
90027ae6:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90027aea:	eeb0 8a40 	vmov.f32	s16, s0
90027aee:	ee3f 0a69 	vsub.f32	s0, s30, s19
90027af2:	f000 f8f0 	bl	90027cd6 <atan2f>
90027af6:	ee38 0a40 	vsub.f32	s0, s16, s0
90027afa:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90027c08 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90027afe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90027b02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027b06:	bf48      	it	mi
90027b08:	eeb1 0a40 	vnegmi.f32	s0, s0
90027b0c:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027b10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027b14:	bfa4      	itt	ge
90027b16:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 90027c10 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90027b1a:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90027b1e:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90027c0c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90027b22:	eeb4 0ae7 	vcmpe.f32	s0, s15
90027b26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027b2a:	d548      	bpl.n	90027bbe <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027b2c:	eef0 0a4f 	vmov.f32	s1, s30
90027b30:	4620      	mov	r0, r4
90027b32:	eeb0 0a6f 	vmov.f32	s0, s31
90027b36:	f7ea f8f5 	bl	90011d24 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90027b3a:	eef0 0a4c 	vmov.f32	s1, s24
90027b3e:	eeb0 0a6b 	vmov.f32	s0, s23
90027b42:	4620      	mov	r0, r4
90027b44:	f7ea f8ee 	bl	90011d24 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90027b48:	b005      	add	sp, #20
90027b4a:	ecbd 8b10 	vpop	{d8-d15}
90027b4e:	bd30      	pop	{r4, r5, pc}
90027b50:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 90027c04 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90027b54:	eeb4 6ac7 	vcmpe.f32	s12, s14
90027b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027b5c:	dd19      	ble.n	90027b92 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
90027b5e:	ee67 7aa7 	vmul.f32	s15, s15, s15
90027b62:	ee26 7a06 	vmul.f32	s14, s12, s12
90027b66:	eee5 7aa5 	vfma.f32	s15, s11, s11
90027b6a:	ee67 7a85 	vmul.f32	s15, s15, s10
90027b6e:	eeb4 7ae7 	vcmpe.f32	s14, s15
90027b72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027b76:	d822      	bhi.n	90027bbe <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90027b78:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90027b7c:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90027b80:	f000 f8a9 	bl	90027cd6 <atan2f>
90027b84:	ee7b 0aef 	vsub.f32	s1, s23, s31
90027b88:	eeb0 8a40 	vmov.f32	s16, s0
90027b8c:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90027b90:	e7af      	b.n	90027af2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
90027b92:	ee78 7aaa 	vadd.f32	s15, s17, s21
90027b96:	eeb0 7a49 	vmov.f32	s14, s18
90027b9a:	eeb0 6a4a 	vmov.f32	s12, s20
90027b9e:	eea7 7ae6 	vfms.f32	s14, s15, s13
90027ba2:	ee79 7a8b 	vadd.f32	s15, s19, s22
90027ba6:	eea7 6ae6 	vfms.f32	s12, s15, s13
90027baa:	ee66 7a06 	vmul.f32	s15, s12, s12
90027bae:	eee7 7a07 	vfma.f32	s15, s14, s14
90027bb2:	eef4 7ac5 	vcmpe.f32	s15, s10
90027bb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027bba:	f67f af7c 	bls.w	90027ab6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
90027bbe:	3501      	adds	r5, #1
90027bc0:	eef0 0a69 	vmov.f32	s1, s19
90027bc4:	eeb0 0a68 	vmov.f32	s0, s17
90027bc8:	4620      	mov	r0, r4
90027bca:	4629      	mov	r1, r5
90027bcc:	eef0 3a4a 	vmov.f32	s7, s20
90027bd0:	eeb0 3a49 	vmov.f32	s6, s18
90027bd4:	eef0 2a6e 	vmov.f32	s5, s29
90027bd8:	eeb0 2a4e 	vmov.f32	s4, s28
90027bdc:	eef0 1a6d 	vmov.f32	s3, s27
90027be0:	eeb0 1a4d 	vmov.f32	s2, s26
90027be4:	f7ff fe84 	bl	900278f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90027be8:	eeb0 ca6c 	vmov.f32	s24, s25
90027bec:	eddd ba01 	vldr	s23, [sp, #4]
90027bf0:	eef0 9a4a 	vmov.f32	s19, s20
90027bf4:	ed9d fa02 	vldr	s30, [sp, #8]
90027bf8:	eef0 8a49 	vmov.f32	s17, s18
90027bfc:	eddd fa03 	vldr	s31, [sp, #12]
90027c00:	e68c      	b.n	9002791c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
90027c02:	bf00      	nop
90027c04:	2edbe6ff 	.word	0x2edbe6ff
90027c08:	40490fdb 	.word	0x40490fdb
90027c0c:	3dcccccd 	.word	0x3dcccccd
90027c10:	40c90fdb 	.word	0x40c90fdb

90027c14 <_ZN8touchgfx6CanvasD1Ev>:
90027c14:	4b04      	ldr	r3, [pc, #16]	@ (90027c28 <_ZN8touchgfx6CanvasD1Ev+0x14>)
90027c16:	b510      	push	{r4, lr}
90027c18:	4604      	mov	r4, r0
90027c1a:	f840 3b14 	str.w	r3, [r0], #20
90027c1e:	f7eb f805 	bl	90012c2c <_ZN8touchgfx7OutlineD1Ev>
90027c22:	4620      	mov	r0, r4
90027c24:	bd10      	pop	{r4, pc}
90027c26:	bf00      	nop
90027c28:	9002c6e8 	.word	0x9002c6e8

90027c2c <_ZN8touchgfx6CanvasD0Ev>:
90027c2c:	b510      	push	{r4, lr}
90027c2e:	4604      	mov	r4, r0
90027c30:	f7ff fff0 	bl	90027c14 <_ZN8touchgfx6CanvasD1Ev>
90027c34:	2174      	movs	r1, #116	@ 0x74
90027c36:	4620      	mov	r0, r4
90027c38:	f000 f826 	bl	90027c88 <_ZdlPvj>
90027c3c:	4620      	mov	r0, r4
90027c3e:	bd10      	pop	{r4, pc}

90027c40 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90027c40:	790b      	ldrb	r3, [r1, #4]
90027c42:	2b00      	cmp	r3, #0
90027c44:	bf0c      	ite	eq
90027c46:	2301      	moveq	r3, #1
90027c48:	2300      	movne	r3, #0
90027c4a:	b570      	push	{r4, r5, r6, lr}
90027c4c:	4604      	mov	r4, r0
90027c4e:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
90027c52:	460e      	mov	r6, r1
90027c54:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
90027c58:	d109      	bne.n	90027c6e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90027c5a:	b14d      	cbz	r5, 90027c70 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90027c5c:	7933      	ldrb	r3, [r6, #4]
90027c5e:	2b01      	cmp	r3, #1
90027c60:	d10c      	bne.n	90027c7c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90027c62:	6823      	ldr	r3, [r4, #0]
90027c64:	4620      	mov	r0, r4
90027c66:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90027c68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90027c6c:	4718      	bx	r3
90027c6e:	b12d      	cbz	r5, 90027c7c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90027c70:	6823      	ldr	r3, [r4, #0]
90027c72:	4620      	mov	r0, r4
90027c74:	695b      	ldr	r3, [r3, #20]
90027c76:	4798      	blx	r3
90027c78:	2d00      	cmp	r5, #0
90027c7a:	d1ef      	bne.n	90027c5c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90027c7c:	bd70      	pop	{r4, r5, r6, pc}

90027c7e <__aeabi_atexit>:
90027c7e:	460b      	mov	r3, r1
90027c80:	4601      	mov	r1, r0
90027c82:	4618      	mov	r0, r3
90027c84:	f000 bc5a 	b.w	9002853c <__cxa_atexit>

90027c88 <_ZdlPvj>:
90027c88:	f000 b812 	b.w	90027cb0 <_ZdlPv>

90027c8c <__cxa_guard_acquire>:
90027c8c:	6802      	ldr	r2, [r0, #0]
90027c8e:	07d2      	lsls	r2, r2, #31
90027c90:	4603      	mov	r3, r0
90027c92:	d405      	bmi.n	90027ca0 <__cxa_guard_acquire+0x14>
90027c94:	7842      	ldrb	r2, [r0, #1]
90027c96:	b102      	cbz	r2, 90027c9a <__cxa_guard_acquire+0xe>
90027c98:	deff      	udf	#255	@ 0xff
90027c9a:	2001      	movs	r0, #1
90027c9c:	7058      	strb	r0, [r3, #1]
90027c9e:	4770      	bx	lr
90027ca0:	2000      	movs	r0, #0
90027ca2:	4770      	bx	lr

90027ca4 <__cxa_guard_release>:
90027ca4:	2301      	movs	r3, #1
90027ca6:	6003      	str	r3, [r0, #0]
90027ca8:	4770      	bx	lr

90027caa <__cxa_pure_virtual>:
90027caa:	b508      	push	{r3, lr}
90027cac:	f000 f80e 	bl	90027ccc <_ZSt9terminatev>

90027cb0 <_ZdlPv>:
90027cb0:	f000 bb8e 	b.w	900283d0 <free>

90027cb4 <_ZN10__cxxabiv111__terminateEPFvvE>:
90027cb4:	b508      	push	{r3, lr}
90027cb6:	4780      	blx	r0
90027cb8:	f000 fb57 	bl	9002836a <abort>

90027cbc <_ZSt13get_terminatev>:
90027cbc:	4b02      	ldr	r3, [pc, #8]	@ (90027cc8 <_ZSt13get_terminatev+0xc>)
90027cbe:	6818      	ldr	r0, [r3, #0]
90027cc0:	f3bf 8f5b 	dmb	ish
90027cc4:	4770      	bx	lr
90027cc6:	bf00      	nop
90027cc8:	24000104 	.word	0x24000104

90027ccc <_ZSt9terminatev>:
90027ccc:	b508      	push	{r3, lr}
90027cce:	f7ff fff5 	bl	90027cbc <_ZSt13get_terminatev>
90027cd2:	f7ff ffef 	bl	90027cb4 <_ZN10__cxxabiv111__terminateEPFvvE>

90027cd6 <atan2f>:
90027cd6:	f000 b9cf 	b.w	90028078 <__ieee754_atan2f>
	...

90027cdc <sqrtf>:
90027cdc:	b508      	push	{r3, lr}
90027cde:	ed2d 8b02 	vpush	{d8}
90027ce2:	eeb0 8a40 	vmov.f32	s16, s0
90027ce6:	f000 f9c4 	bl	90028072 <__ieee754_sqrtf>
90027cea:	eeb4 8a48 	vcmp.f32	s16, s16
90027cee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027cf2:	d60c      	bvs.n	90027d0e <sqrtf+0x32>
90027cf4:	eddf 8a07 	vldr	s17, [pc, #28]	@ 90027d14 <sqrtf+0x38>
90027cf8:	eeb4 8ae8 	vcmpe.f32	s16, s17
90027cfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90027d00:	d505      	bpl.n	90027d0e <sqrtf+0x32>
90027d02:	f000 fedf 	bl	90028ac4 <__errno>
90027d06:	ee88 0aa8 	vdiv.f32	s0, s17, s17
90027d0a:	2321      	movs	r3, #33	@ 0x21
90027d0c:	6003      	str	r3, [r0, #0]
90027d0e:	ecbd 8b02 	vpop	{d8}
90027d12:	bd08      	pop	{r3, pc}
90027d14:	00000000 	.word	0x00000000

90027d18 <sinf_poly>:
90027d18:	07cb      	lsls	r3, r1, #31
90027d1a:	d412      	bmi.n	90027d42 <sinf_poly+0x2a>
90027d1c:	ee21 5b00 	vmul.f64	d5, d1, d0
90027d20:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90027d24:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90027d28:	eea6 7b01 	vfma.f64	d7, d6, d1
90027d2c:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90027d30:	ee21 1b05 	vmul.f64	d1, d1, d5
90027d34:	eea6 0b05 	vfma.f64	d0, d6, d5
90027d38:	eea7 0b01 	vfma.f64	d0, d7, d1
90027d3c:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90027d40:	4770      	bx	lr
90027d42:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
90027d46:	ee21 5b01 	vmul.f64	d5, d1, d1
90027d4a:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90027d4e:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90027d52:	eea1 7b06 	vfma.f64	d7, d1, d6
90027d56:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90027d5a:	eea1 0b06 	vfma.f64	d0, d1, d6
90027d5e:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90027d62:	ee21 1b05 	vmul.f64	d1, d1, d5
90027d66:	eea5 0b06 	vfma.f64	d0, d5, d6
90027d6a:	e7e5      	b.n	90027d38 <sinf_poly+0x20>
90027d6c:	0000      	movs	r0, r0
	...

90027d70 <sinf>:
90027d70:	b537      	push	{r0, r1, r2, r4, r5, lr}
90027d72:	ee10 4a10 	vmov	r4, s0
90027d76:	f3c4 530a 	ubfx	r3, r4, #20, #11
90027d7a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90027d7e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
90027d82:	eef0 7a40 	vmov.f32	s15, s0
90027d86:	ea4f 5214 	mov.w	r2, r4, lsr #20
90027d8a:	d218      	bcs.n	90027dbe <sinf+0x4e>
90027d8c:	ee26 1b06 	vmul.f64	d1, d6, d6
90027d90:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90027d94:	d20a      	bcs.n	90027dac <sinf+0x3c>
90027d96:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
90027d9a:	d103      	bne.n	90027da4 <sinf+0x34>
90027d9c:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
90027da0:	ed8d 1a01 	vstr	s2, [sp, #4]
90027da4:	eeb0 0a67 	vmov.f32	s0, s15
90027da8:	b003      	add	sp, #12
90027daa:	bd30      	pop	{r4, r5, pc}
90027dac:	483a      	ldr	r0, [pc, #232]	@ (90027e98 <sinf+0x128>)
90027dae:	eeb0 0b46 	vmov.f64	d0, d6
90027db2:	2100      	movs	r1, #0
90027db4:	b003      	add	sp, #12
90027db6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90027dba:	f7ff bfad 	b.w	90027d18 <sinf_poly>
90027dbe:	f240 422e 	movw	r2, #1070	@ 0x42e
90027dc2:	4293      	cmp	r3, r2
90027dc4:	d824      	bhi.n	90027e10 <sinf+0xa0>
90027dc6:	4b34      	ldr	r3, [pc, #208]	@ (90027e98 <sinf+0x128>)
90027dc8:	ed93 7b08 	vldr	d7, [r3, #32]
90027dcc:	ee26 7b07 	vmul.f64	d7, d6, d7
90027dd0:	eefd 7bc7 	vcvt.s32.f64	s15, d7
90027dd4:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90027dd8:	ee17 1a90 	vmov	r1, s15
90027ddc:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90027de0:	1609      	asrs	r1, r1, #24
90027de2:	ee07 1a90 	vmov	s15, r1
90027de6:	f001 0203 	and.w	r2, r1, #3
90027dea:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90027dee:	eeb8 5be7 	vcvt.f64.s32	d5, s15
90027df2:	ed92 0b00 	vldr	d0, [r2]
90027df6:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
90027dfa:	f011 0f02 	tst.w	r1, #2
90027dfe:	eea5 6b47 	vfms.f64	d6, d5, d7
90027e02:	bf08      	it	eq
90027e04:	4618      	moveq	r0, r3
90027e06:	ee26 1b06 	vmul.f64	d1, d6, d6
90027e0a:	ee20 0b06 	vmul.f64	d0, d0, d6
90027e0e:	e7d1      	b.n	90027db4 <sinf+0x44>
90027e10:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90027e14:	d237      	bcs.n	90027e86 <sinf+0x116>
90027e16:	4921      	ldr	r1, [pc, #132]	@ (90027e9c <sinf+0x12c>)
90027e18:	f3c4 6083 	ubfx	r0, r4, #26, #4
90027e1c:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90027e20:	f3c4 0316 	ubfx	r3, r4, #0, #23
90027e24:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90027e28:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90027e2c:	6a10      	ldr	r0, [r2, #32]
90027e2e:	6912      	ldr	r2, [r2, #16]
90027e30:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90027e34:	40ab      	lsls	r3, r5
90027e36:	fba0 5003 	umull	r5, r0, r0, r3
90027e3a:	4359      	muls	r1, r3
90027e3c:	fbe3 0102 	umlal	r0, r1, r3, r2
90027e40:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90027e44:	0f9d      	lsrs	r5, r3, #30
90027e46:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90027e4a:	1ac9      	subs	r1, r1, r3
90027e4c:	f7d8 fc26 	bl	9000069c <__aeabi_l2d>
90027e50:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90027e54:	4b10      	ldr	r3, [pc, #64]	@ (90027e98 <sinf+0x128>)
90027e56:	f004 0203 	and.w	r2, r4, #3
90027e5a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90027e5e:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 90027e90 <sinf+0x120>
90027e62:	ed92 0b00 	vldr	d0, [r2]
90027e66:	ec41 0b17 	vmov	d7, r0, r1
90027e6a:	f014 0f02 	tst.w	r4, #2
90027e6e:	ee27 7b06 	vmul.f64	d7, d7, d6
90027e72:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90027e76:	4629      	mov	r1, r5
90027e78:	bf08      	it	eq
90027e7a:	4618      	moveq	r0, r3
90027e7c:	ee27 1b07 	vmul.f64	d1, d7, d7
90027e80:	ee20 0b07 	vmul.f64	d0, d0, d7
90027e84:	e796      	b.n	90027db4 <sinf+0x44>
90027e86:	b003      	add	sp, #12
90027e88:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90027e8c:	f000 b8e2 	b.w	90028054 <__math_invalidf>
90027e90:	54442d18 	.word	0x54442d18
90027e94:	3c1921fb 	.word	0x3c1921fb
90027e98:	9002c758 	.word	0x9002c758
90027e9c:	9002c6f4 	.word	0x9002c6f4

90027ea0 <sinf_poly>:
90027ea0:	07cb      	lsls	r3, r1, #31
90027ea2:	d412      	bmi.n	90027eca <sinf_poly+0x2a>
90027ea4:	ee21 5b00 	vmul.f64	d5, d1, d0
90027ea8:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90027eac:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90027eb0:	eea6 7b01 	vfma.f64	d7, d6, d1
90027eb4:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90027eb8:	ee21 1b05 	vmul.f64	d1, d1, d5
90027ebc:	eea6 0b05 	vfma.f64	d0, d6, d5
90027ec0:	eea7 0b01 	vfma.f64	d0, d7, d1
90027ec4:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90027ec8:	4770      	bx	lr
90027eca:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
90027ece:	ee21 5b01 	vmul.f64	d5, d1, d1
90027ed2:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90027ed6:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90027eda:	eea1 7b06 	vfma.f64	d7, d1, d6
90027ede:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90027ee2:	eea1 0b06 	vfma.f64	d0, d1, d6
90027ee6:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90027eea:	ee21 1b05 	vmul.f64	d1, d1, d5
90027eee:	eea5 0b06 	vfma.f64	d0, d5, d6
90027ef2:	e7e5      	b.n	90027ec0 <sinf_poly+0x20>
90027ef4:	0000      	movs	r0, r0
	...

90027ef8 <cosf>:
90027ef8:	b538      	push	{r3, r4, r5, lr}
90027efa:	ee10 4a10 	vmov	r4, s0
90027efe:	f3c4 530a 	ubfx	r3, r4, #20, #11
90027f02:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90027f06:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
90027f0a:	d21f      	bcs.n	90027f4c <cosf+0x54>
90027f0c:	ee27 7b07 	vmul.f64	d7, d7, d7
90027f10:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90027f14:	f0c0 8082 	bcc.w	9002801c <cosf+0x124>
90027f18:	ee27 4b07 	vmul.f64	d4, d7, d7
90027f1c:	4b44      	ldr	r3, [pc, #272]	@ (90028030 <cosf+0x138>)
90027f1e:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
90027f22:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
90027f26:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
90027f2a:	eea7 6b05 	vfma.f64	d6, d7, d5
90027f2e:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
90027f32:	eea7 0b05 	vfma.f64	d0, d7, d5
90027f36:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
90027f3a:	ee27 7b04 	vmul.f64	d7, d7, d4
90027f3e:	eea4 0b05 	vfma.f64	d0, d4, d5
90027f42:	eea6 0b07 	vfma.f64	d0, d6, d7
90027f46:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90027f4a:	bd38      	pop	{r3, r4, r5, pc}
90027f4c:	f240 422e 	movw	r2, #1070	@ 0x42e
90027f50:	4293      	cmp	r3, r2
90027f52:	d829      	bhi.n	90027fa8 <cosf+0xb0>
90027f54:	4b36      	ldr	r3, [pc, #216]	@ (90028030 <cosf+0x138>)
90027f56:	ed93 6b08 	vldr	d6, [r3, #32]
90027f5a:	ee27 6b06 	vmul.f64	d6, d7, d6
90027f5e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
90027f62:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90027f66:	ee16 1a90 	vmov	r1, s13
90027f6a:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90027f6e:	1609      	asrs	r1, r1, #24
90027f70:	ee06 1a90 	vmov	s13, r1
90027f74:	f001 0203 	and.w	r2, r1, #3
90027f78:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90027f7c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
90027f80:	ed92 0b00 	vldr	d0, [r2]
90027f84:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
90027f88:	f011 0f02 	tst.w	r1, #2
90027f8c:	f081 0101 	eor.w	r1, r1, #1
90027f90:	eea5 7b46 	vfms.f64	d7, d5, d6
90027f94:	bf08      	it	eq
90027f96:	4618      	moveq	r0, r3
90027f98:	ee27 1b07 	vmul.f64	d1, d7, d7
90027f9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90027fa0:	ee20 0b07 	vmul.f64	d0, d0, d7
90027fa4:	f7ff bf7c 	b.w	90027ea0 <sinf_poly>
90027fa8:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90027fac:	d232      	bcs.n	90028014 <cosf+0x11c>
90027fae:	4921      	ldr	r1, [pc, #132]	@ (90028034 <cosf+0x13c>)
90027fb0:	f3c4 6083 	ubfx	r0, r4, #26, #4
90027fb4:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90027fb8:	f3c4 0316 	ubfx	r3, r4, #0, #23
90027fbc:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90027fc0:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90027fc4:	6a10      	ldr	r0, [r2, #32]
90027fc6:	6912      	ldr	r2, [r2, #16]
90027fc8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90027fcc:	40ab      	lsls	r3, r5
90027fce:	fba0 5003 	umull	r5, r0, r0, r3
90027fd2:	4359      	muls	r1, r3
90027fd4:	fbe3 0102 	umlal	r0, r1, r3, r2
90027fd8:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90027fdc:	0f9d      	lsrs	r5, r3, #30
90027fde:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90027fe2:	1ac9      	subs	r1, r1, r3
90027fe4:	f7d8 fb5a 	bl	9000069c <__aeabi_l2d>
90027fe8:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90027fec:	4b10      	ldr	r3, [pc, #64]	@ (90028030 <cosf+0x138>)
90027fee:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 90028028 <cosf+0x130>
90027ff2:	ec41 0b17 	vmov	d7, r0, r1
90027ff6:	f004 0203 	and.w	r2, r4, #3
90027ffa:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90027ffe:	ed92 0b00 	vldr	d0, [r2]
90028002:	ee27 7b06 	vmul.f64	d7, d7, d6
90028006:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002800a:	f014 0f02 	tst.w	r4, #2
9002800e:	f085 0101 	eor.w	r1, r5, #1
90028012:	e7bf      	b.n	90027f94 <cosf+0x9c>
90028014:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90028018:	f000 b81c 	b.w	90028054 <__math_invalidf>
9002801c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
90028020:	e793      	b.n	90027f4a <cosf+0x52>
90028022:	bf00      	nop
90028024:	f3af 8000 	nop.w
90028028:	54442d18 	.word	0x54442d18
9002802c:	3c1921fb 	.word	0x3c1921fb
90028030:	9002c758 	.word	0x9002c758
90028034:	9002c6f4 	.word	0x9002c6f4

90028038 <with_errnof>:
90028038:	b510      	push	{r4, lr}
9002803a:	ed2d 8b02 	vpush	{d8}
9002803e:	eeb0 8a40 	vmov.f32	s16, s0
90028042:	4604      	mov	r4, r0
90028044:	f000 fd3e 	bl	90028ac4 <__errno>
90028048:	eeb0 0a48 	vmov.f32	s0, s16
9002804c:	ecbd 8b02 	vpop	{d8}
90028050:	6004      	str	r4, [r0, #0]
90028052:	bd10      	pop	{r4, pc}

90028054 <__math_invalidf>:
90028054:	eef0 7a40 	vmov.f32	s15, s0
90028058:	ee30 7a40 	vsub.f32	s14, s0, s0
9002805c:	eef4 7a67 	vcmp.f32	s15, s15
90028060:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028064:	ee87 0a07 	vdiv.f32	s0, s14, s14
90028068:	d602      	bvs.n	90028070 <__math_invalidf+0x1c>
9002806a:	2021      	movs	r0, #33	@ 0x21
9002806c:	f7ff bfe4 	b.w	90028038 <with_errnof>
90028070:	4770      	bx	lr

90028072 <__ieee754_sqrtf>:
90028072:	eeb1 0ac0 	vsqrt.f32	s0, s0
90028076:	4770      	bx	lr

90028078 <__ieee754_atan2f>:
90028078:	ee10 2a90 	vmov	r2, s1
9002807c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
90028080:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90028084:	b510      	push	{r4, lr}
90028086:	eef0 7a40 	vmov.f32	s15, s0
9002808a:	d806      	bhi.n	9002809a <__ieee754_atan2f+0x22>
9002808c:	ee10 0a10 	vmov	r0, s0
90028090:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
90028094:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90028098:	d904      	bls.n	900280a4 <__ieee754_atan2f+0x2c>
9002809a:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002809e:	eeb0 0a67 	vmov.f32	s0, s15
900280a2:	bd10      	pop	{r4, pc}
900280a4:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
900280a8:	d103      	bne.n	900280b2 <__ieee754_atan2f+0x3a>
900280aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900280ae:	f000 b881 	b.w	900281b4 <atanf>
900280b2:	1794      	asrs	r4, r2, #30
900280b4:	f004 0402 	and.w	r4, r4, #2
900280b8:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
900280bc:	b93b      	cbnz	r3, 900280ce <__ieee754_atan2f+0x56>
900280be:	2c02      	cmp	r4, #2
900280c0:	d05c      	beq.n	9002817c <__ieee754_atan2f+0x104>
900280c2:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90028190 <__ieee754_atan2f+0x118>
900280c6:	2c03      	cmp	r4, #3
900280c8:	fe47 7a00 	vseleq.f32	s15, s14, s0
900280cc:	e7e7      	b.n	9002809e <__ieee754_atan2f+0x26>
900280ce:	b939      	cbnz	r1, 900280e0 <__ieee754_atan2f+0x68>
900280d0:	eddf 7a30 	vldr	s15, [pc, #192]	@ 90028194 <__ieee754_atan2f+0x11c>
900280d4:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90028198 <__ieee754_atan2f+0x120>
900280d8:	2800      	cmp	r0, #0
900280da:	fe67 7a87 	vselge.f32	s15, s15, s14
900280de:	e7de      	b.n	9002809e <__ieee754_atan2f+0x26>
900280e0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
900280e4:	d110      	bne.n	90028108 <__ieee754_atan2f+0x90>
900280e6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900280ea:	f104 34ff 	add.w	r4, r4, #4294967295
900280ee:	d107      	bne.n	90028100 <__ieee754_atan2f+0x88>
900280f0:	2c02      	cmp	r4, #2
900280f2:	d846      	bhi.n	90028182 <__ieee754_atan2f+0x10a>
900280f4:	4b29      	ldr	r3, [pc, #164]	@ (9002819c <__ieee754_atan2f+0x124>)
900280f6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
900280fa:	edd3 7a00 	vldr	s15, [r3]
900280fe:	e7ce      	b.n	9002809e <__ieee754_atan2f+0x26>
90028100:	2c02      	cmp	r4, #2
90028102:	d841      	bhi.n	90028188 <__ieee754_atan2f+0x110>
90028104:	4b26      	ldr	r3, [pc, #152]	@ (900281a0 <__ieee754_atan2f+0x128>)
90028106:	e7f6      	b.n	900280f6 <__ieee754_atan2f+0x7e>
90028108:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002810c:	d0e0      	beq.n	900280d0 <__ieee754_atan2f+0x58>
9002810e:	1a5b      	subs	r3, r3, r1
90028110:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
90028114:	ea4f 51e3 	mov.w	r1, r3, asr #23
90028118:	da1a      	bge.n	90028150 <__ieee754_atan2f+0xd8>
9002811a:	2a00      	cmp	r2, #0
9002811c:	da01      	bge.n	90028122 <__ieee754_atan2f+0xaa>
9002811e:	313c      	adds	r1, #60	@ 0x3c
90028120:	db19      	blt.n	90028156 <__ieee754_atan2f+0xde>
90028122:	ee87 0aa0 	vdiv.f32	s0, s15, s1
90028126:	f000 f919 	bl	9002835c <fabsf>
9002812a:	f000 f843 	bl	900281b4 <atanf>
9002812e:	eef0 7a40 	vmov.f32	s15, s0
90028132:	2c01      	cmp	r4, #1
90028134:	d012      	beq.n	9002815c <__ieee754_atan2f+0xe4>
90028136:	2c02      	cmp	r4, #2
90028138:	d017      	beq.n	9002816a <__ieee754_atan2f+0xf2>
9002813a:	2c00      	cmp	r4, #0
9002813c:	d0af      	beq.n	9002809e <__ieee754_atan2f+0x26>
9002813e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 900281a4 <__ieee754_atan2f+0x12c>
90028142:	ee77 7a87 	vadd.f32	s15, s15, s14
90028146:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 900281a8 <__ieee754_atan2f+0x130>
9002814a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002814e:	e7a6      	b.n	9002809e <__ieee754_atan2f+0x26>
90028150:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90028194 <__ieee754_atan2f+0x11c>
90028154:	e7ed      	b.n	90028132 <__ieee754_atan2f+0xba>
90028156:	eddf 7a15 	vldr	s15, [pc, #84]	@ 900281ac <__ieee754_atan2f+0x134>
9002815a:	e7ea      	b.n	90028132 <__ieee754_atan2f+0xba>
9002815c:	ee17 3a90 	vmov	r3, s15
90028160:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90028164:	ee07 3a90 	vmov	s15, r3
90028168:	e799      	b.n	9002809e <__ieee754_atan2f+0x26>
9002816a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 900281a4 <__ieee754_atan2f+0x12c>
9002816e:	ee77 7a87 	vadd.f32	s15, s15, s14
90028172:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 900281a8 <__ieee754_atan2f+0x130>
90028176:	ee77 7a67 	vsub.f32	s15, s14, s15
9002817a:	e790      	b.n	9002809e <__ieee754_atan2f+0x26>
9002817c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 900281a8 <__ieee754_atan2f+0x130>
90028180:	e78d      	b.n	9002809e <__ieee754_atan2f+0x26>
90028182:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 900281b0 <__ieee754_atan2f+0x138>
90028186:	e78a      	b.n	9002809e <__ieee754_atan2f+0x26>
90028188:	eddf 7a08 	vldr	s15, [pc, #32]	@ 900281ac <__ieee754_atan2f+0x134>
9002818c:	e787      	b.n	9002809e <__ieee754_atan2f+0x26>
9002818e:	bf00      	nop
90028190:	c0490fdb 	.word	0xc0490fdb
90028194:	3fc90fdb 	.word	0x3fc90fdb
90028198:	bfc90fdb 	.word	0xbfc90fdb
9002819c:	9002c844 	.word	0x9002c844
900281a0:	9002c838 	.word	0x9002c838
900281a4:	33bbbd2e 	.word	0x33bbbd2e
900281a8:	40490fdb 	.word	0x40490fdb
900281ac:	00000000 	.word	0x00000000
900281b0:	3f490fdb 	.word	0x3f490fdb

900281b4 <atanf>:
900281b4:	b538      	push	{r3, r4, r5, lr}
900281b6:	ee10 5a10 	vmov	r5, s0
900281ba:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
900281be:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
900281c2:	eef0 7a40 	vmov.f32	s15, s0
900281c6:	d30f      	bcc.n	900281e8 <atanf+0x34>
900281c8:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
900281cc:	d904      	bls.n	900281d8 <atanf+0x24>
900281ce:	ee70 7a00 	vadd.f32	s15, s0, s0
900281d2:	eeb0 0a67 	vmov.f32	s0, s15
900281d6:	bd38      	pop	{r3, r4, r5, pc}
900281d8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 90028310 <atanf+0x15c>
900281dc:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 90028314 <atanf+0x160>
900281e0:	2d00      	cmp	r5, #0
900281e2:	fe77 7a27 	vselgt.f32	s15, s14, s15
900281e6:	e7f4      	b.n	900281d2 <atanf+0x1e>
900281e8:	4b4b      	ldr	r3, [pc, #300]	@ (90028318 <atanf+0x164>)
900281ea:	429c      	cmp	r4, r3
900281ec:	d810      	bhi.n	90028210 <atanf+0x5c>
900281ee:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
900281f2:	d20a      	bcs.n	9002820a <atanf+0x56>
900281f4:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002831c <atanf+0x168>
900281f8:	ee30 7a07 	vadd.f32	s14, s0, s14
900281fc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90028200:	eeb4 7ae6 	vcmpe.f32	s14, s13
90028204:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028208:	dce3      	bgt.n	900281d2 <atanf+0x1e>
9002820a:	f04f 33ff 	mov.w	r3, #4294967295
9002820e:	e013      	b.n	90028238 <atanf+0x84>
90028210:	f000 f8a4 	bl	9002835c <fabsf>
90028214:	4b42      	ldr	r3, [pc, #264]	@ (90028320 <atanf+0x16c>)
90028216:	429c      	cmp	r4, r3
90028218:	d84f      	bhi.n	900282ba <atanf+0x106>
9002821a:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002821e:	429c      	cmp	r4, r3
90028220:	d841      	bhi.n	900282a6 <atanf+0xf2>
90028222:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
90028226:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002822a:	eea0 7a27 	vfma.f32	s14, s0, s15
9002822e:	2300      	movs	r3, #0
90028230:	ee30 0a27 	vadd.f32	s0, s0, s15
90028234:	eec7 7a00 	vdiv.f32	s15, s14, s0
90028238:	1c5a      	adds	r2, r3, #1
9002823a:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002823e:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 90028324 <atanf+0x170>
90028242:	eddf 5a39 	vldr	s11, [pc, #228]	@ 90028328 <atanf+0x174>
90028246:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002832c <atanf+0x178>
9002824a:	ee66 6a06 	vmul.f32	s13, s12, s12
9002824e:	eee6 5a87 	vfma.f32	s11, s13, s14
90028252:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 90028330 <atanf+0x17c>
90028256:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002825a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 90028334 <atanf+0x180>
9002825e:	eee7 5a26 	vfma.f32	s11, s14, s13
90028262:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 90028338 <atanf+0x184>
90028266:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002826a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002833c <atanf+0x188>
9002826e:	eee7 5a26 	vfma.f32	s11, s14, s13
90028272:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90028340 <atanf+0x18c>
90028276:	eea6 5a87 	vfma.f32	s10, s13, s14
9002827a:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 90028344 <atanf+0x190>
9002827e:	eea5 7a26 	vfma.f32	s14, s10, s13
90028282:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 90028348 <atanf+0x194>
90028286:	eea7 5a26 	vfma.f32	s10, s14, s13
9002828a:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002834c <atanf+0x198>
9002828e:	eea5 7a26 	vfma.f32	s14, s10, s13
90028292:	ee27 7a26 	vmul.f32	s14, s14, s13
90028296:	eea5 7a86 	vfma.f32	s14, s11, s12
9002829a:	ee27 7a87 	vmul.f32	s14, s15, s14
9002829e:	d121      	bne.n	900282e4 <atanf+0x130>
900282a0:	ee77 7ac7 	vsub.f32	s15, s15, s14
900282a4:	e795      	b.n	900281d2 <atanf+0x1e>
900282a6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
900282aa:	ee30 7a67 	vsub.f32	s14, s0, s15
900282ae:	ee30 0a27 	vadd.f32	s0, s0, s15
900282b2:	2301      	movs	r3, #1
900282b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
900282b8:	e7be      	b.n	90028238 <atanf+0x84>
900282ba:	4b25      	ldr	r3, [pc, #148]	@ (90028350 <atanf+0x19c>)
900282bc:	429c      	cmp	r4, r3
900282be:	d80b      	bhi.n	900282d8 <atanf+0x124>
900282c0:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
900282c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900282c8:	eea0 7a27 	vfma.f32	s14, s0, s15
900282cc:	2302      	movs	r3, #2
900282ce:	ee70 6a67 	vsub.f32	s13, s0, s15
900282d2:	eec6 7a87 	vdiv.f32	s15, s13, s14
900282d6:	e7af      	b.n	90028238 <atanf+0x84>
900282d8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
900282dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
900282e0:	2303      	movs	r3, #3
900282e2:	e7a9      	b.n	90028238 <atanf+0x84>
900282e4:	4a1b      	ldr	r2, [pc, #108]	@ (90028354 <atanf+0x1a0>)
900282e6:	491c      	ldr	r1, [pc, #112]	@ (90028358 <atanf+0x1a4>)
900282e8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
900282ec:	eb01 0383 	add.w	r3, r1, r3, lsl #2
900282f0:	edd3 6a00 	vldr	s13, [r3]
900282f4:	ee37 7a66 	vsub.f32	s14, s14, s13
900282f8:	2d00      	cmp	r5, #0
900282fa:	ee37 7a67 	vsub.f32	s14, s14, s15
900282fe:	edd2 7a00 	vldr	s15, [r2]
90028302:	ee77 7ac7 	vsub.f32	s15, s15, s14
90028306:	bfb8      	it	lt
90028308:	eef1 7a67 	vneglt.f32	s15, s15
9002830c:	e761      	b.n	900281d2 <atanf+0x1e>
9002830e:	bf00      	nop
90028310:	bfc90fdb 	.word	0xbfc90fdb
90028314:	3fc90fdb 	.word	0x3fc90fdb
90028318:	3edfffff 	.word	0x3edfffff
9002831c:	7149f2ca 	.word	0x7149f2ca
90028320:	3f97ffff 	.word	0x3f97ffff
90028324:	3c8569d7 	.word	0x3c8569d7
90028328:	3d4bda59 	.word	0x3d4bda59
9002832c:	bd6ef16b 	.word	0xbd6ef16b
90028330:	3d886b35 	.word	0x3d886b35
90028334:	3dba2e6e 	.word	0x3dba2e6e
90028338:	3e124925 	.word	0x3e124925
9002833c:	3eaaaaab 	.word	0x3eaaaaab
90028340:	bd15a221 	.word	0xbd15a221
90028344:	bd9d8795 	.word	0xbd9d8795
90028348:	bde38e38 	.word	0xbde38e38
9002834c:	be4ccccd 	.word	0xbe4ccccd
90028350:	401bffff 	.word	0x401bffff
90028354:	9002c860 	.word	0x9002c860
90028358:	9002c850 	.word	0x9002c850

9002835c <fabsf>:
9002835c:	ee10 3a10 	vmov	r3, s0
90028360:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
90028364:	ee00 3a10 	vmov	s0, r3
90028368:	4770      	bx	lr

9002836a <abort>:
9002836a:	b508      	push	{r3, lr}
9002836c:	2006      	movs	r0, #6
9002836e:	f000 fae1 	bl	90028934 <raise>
90028372:	2001      	movs	r0, #1
90028374:	f7db ff9c 	bl	900042b0 <_exit>

90028378 <__assert_func>:
90028378:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002837a:	4614      	mov	r4, r2
9002837c:	461a      	mov	r2, r3
9002837e:	4b09      	ldr	r3, [pc, #36]	@ (900283a4 <__assert_func+0x2c>)
90028380:	681b      	ldr	r3, [r3, #0]
90028382:	4605      	mov	r5, r0
90028384:	68d8      	ldr	r0, [r3, #12]
90028386:	b954      	cbnz	r4, 9002839e <__assert_func+0x26>
90028388:	4b07      	ldr	r3, [pc, #28]	@ (900283a8 <__assert_func+0x30>)
9002838a:	461c      	mov	r4, r3
9002838c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90028390:	9100      	str	r1, [sp, #0]
90028392:	462b      	mov	r3, r5
90028394:	4905      	ldr	r1, [pc, #20]	@ (900283ac <__assert_func+0x34>)
90028396:	f000 f983 	bl	900286a0 <fiprintf>
9002839a:	f7ff ffe6 	bl	9002836a <abort>
9002839e:	4b04      	ldr	r3, [pc, #16]	@ (900283b0 <__assert_func+0x38>)
900283a0:	e7f4      	b.n	9002838c <__assert_func+0x14>
900283a2:	bf00      	nop
900283a4:	24000114 	.word	0x24000114
900283a8:	9002c8ab 	.word	0x9002c8ab
900283ac:	9002c87d 	.word	0x9002c87d
900283b0:	9002c870 	.word	0x9002c870

900283b4 <atexit>:
900283b4:	2300      	movs	r3, #0
900283b6:	4601      	mov	r1, r0
900283b8:	461a      	mov	r2, r3
900283ba:	4618      	mov	r0, r3
900283bc:	f000 bbbe 	b.w	90028b3c <__register_exitproc>

900283c0 <malloc>:
900283c0:	4b02      	ldr	r3, [pc, #8]	@ (900283cc <malloc+0xc>)
900283c2:	4601      	mov	r1, r0
900283c4:	6818      	ldr	r0, [r3, #0]
900283c6:	f000 b82d 	b.w	90028424 <_malloc_r>
900283ca:	bf00      	nop
900283cc:	24000114 	.word	0x24000114

900283d0 <free>:
900283d0:	4b02      	ldr	r3, [pc, #8]	@ (900283dc <free+0xc>)
900283d2:	4601      	mov	r1, r0
900283d4:	6818      	ldr	r0, [r3, #0]
900283d6:	f000 bc0d 	b.w	90028bf4 <_free_r>
900283da:	bf00      	nop
900283dc:	24000114 	.word	0x24000114

900283e0 <sbrk_aligned>:
900283e0:	b570      	push	{r4, r5, r6, lr}
900283e2:	4e0f      	ldr	r6, [pc, #60]	@ (90028420 <sbrk_aligned+0x40>)
900283e4:	460c      	mov	r4, r1
900283e6:	6831      	ldr	r1, [r6, #0]
900283e8:	4605      	mov	r5, r0
900283ea:	b911      	cbnz	r1, 900283f2 <sbrk_aligned+0x12>
900283ec:	f000 fb48 	bl	90028a80 <_sbrk_r>
900283f0:	6030      	str	r0, [r6, #0]
900283f2:	4621      	mov	r1, r4
900283f4:	4628      	mov	r0, r5
900283f6:	f000 fb43 	bl	90028a80 <_sbrk_r>
900283fa:	1c43      	adds	r3, r0, #1
900283fc:	d103      	bne.n	90028406 <sbrk_aligned+0x26>
900283fe:	f04f 34ff 	mov.w	r4, #4294967295
90028402:	4620      	mov	r0, r4
90028404:	bd70      	pop	{r4, r5, r6, pc}
90028406:	1cc4      	adds	r4, r0, #3
90028408:	f024 0403 	bic.w	r4, r4, #3
9002840c:	42a0      	cmp	r0, r4
9002840e:	d0f8      	beq.n	90028402 <sbrk_aligned+0x22>
90028410:	1a21      	subs	r1, r4, r0
90028412:	4628      	mov	r0, r5
90028414:	f000 fb34 	bl	90028a80 <_sbrk_r>
90028418:	3001      	adds	r0, #1
9002841a:	d1f2      	bne.n	90028402 <sbrk_aligned+0x22>
9002841c:	e7ef      	b.n	900283fe <sbrk_aligned+0x1e>
9002841e:	bf00      	nop
90028420:	24022310 	.word	0x24022310

90028424 <_malloc_r>:
90028424:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90028428:	1ccd      	adds	r5, r1, #3
9002842a:	f025 0503 	bic.w	r5, r5, #3
9002842e:	3508      	adds	r5, #8
90028430:	2d0c      	cmp	r5, #12
90028432:	bf38      	it	cc
90028434:	250c      	movcc	r5, #12
90028436:	2d00      	cmp	r5, #0
90028438:	4606      	mov	r6, r0
9002843a:	db01      	blt.n	90028440 <_malloc_r+0x1c>
9002843c:	42a9      	cmp	r1, r5
9002843e:	d904      	bls.n	9002844a <_malloc_r+0x26>
90028440:	230c      	movs	r3, #12
90028442:	6033      	str	r3, [r6, #0]
90028444:	2000      	movs	r0, #0
90028446:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002844a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 90028520 <_malloc_r+0xfc>
9002844e:	f000 f869 	bl	90028524 <__malloc_lock>
90028452:	f8d8 3000 	ldr.w	r3, [r8]
90028456:	461c      	mov	r4, r3
90028458:	bb44      	cbnz	r4, 900284ac <_malloc_r+0x88>
9002845a:	4629      	mov	r1, r5
9002845c:	4630      	mov	r0, r6
9002845e:	f7ff ffbf 	bl	900283e0 <sbrk_aligned>
90028462:	1c43      	adds	r3, r0, #1
90028464:	4604      	mov	r4, r0
90028466:	d158      	bne.n	9002851a <_malloc_r+0xf6>
90028468:	f8d8 4000 	ldr.w	r4, [r8]
9002846c:	4627      	mov	r7, r4
9002846e:	2f00      	cmp	r7, #0
90028470:	d143      	bne.n	900284fa <_malloc_r+0xd6>
90028472:	2c00      	cmp	r4, #0
90028474:	d04b      	beq.n	9002850e <_malloc_r+0xea>
90028476:	6823      	ldr	r3, [r4, #0]
90028478:	4639      	mov	r1, r7
9002847a:	4630      	mov	r0, r6
9002847c:	eb04 0903 	add.w	r9, r4, r3
90028480:	f000 fafe 	bl	90028a80 <_sbrk_r>
90028484:	4581      	cmp	r9, r0
90028486:	d142      	bne.n	9002850e <_malloc_r+0xea>
90028488:	6821      	ldr	r1, [r4, #0]
9002848a:	1a6d      	subs	r5, r5, r1
9002848c:	4629      	mov	r1, r5
9002848e:	4630      	mov	r0, r6
90028490:	f7ff ffa6 	bl	900283e0 <sbrk_aligned>
90028494:	3001      	adds	r0, #1
90028496:	d03a      	beq.n	9002850e <_malloc_r+0xea>
90028498:	6823      	ldr	r3, [r4, #0]
9002849a:	442b      	add	r3, r5
9002849c:	6023      	str	r3, [r4, #0]
9002849e:	f8d8 3000 	ldr.w	r3, [r8]
900284a2:	685a      	ldr	r2, [r3, #4]
900284a4:	bb62      	cbnz	r2, 90028500 <_malloc_r+0xdc>
900284a6:	f8c8 7000 	str.w	r7, [r8]
900284aa:	e00f      	b.n	900284cc <_malloc_r+0xa8>
900284ac:	6822      	ldr	r2, [r4, #0]
900284ae:	1b52      	subs	r2, r2, r5
900284b0:	d420      	bmi.n	900284f4 <_malloc_r+0xd0>
900284b2:	2a0b      	cmp	r2, #11
900284b4:	d917      	bls.n	900284e6 <_malloc_r+0xc2>
900284b6:	1961      	adds	r1, r4, r5
900284b8:	42a3      	cmp	r3, r4
900284ba:	6025      	str	r5, [r4, #0]
900284bc:	bf18      	it	ne
900284be:	6059      	strne	r1, [r3, #4]
900284c0:	6863      	ldr	r3, [r4, #4]
900284c2:	bf08      	it	eq
900284c4:	f8c8 1000 	streq.w	r1, [r8]
900284c8:	5162      	str	r2, [r4, r5]
900284ca:	604b      	str	r3, [r1, #4]
900284cc:	4630      	mov	r0, r6
900284ce:	f000 f82f 	bl	90028530 <__malloc_unlock>
900284d2:	f104 000b 	add.w	r0, r4, #11
900284d6:	1d23      	adds	r3, r4, #4
900284d8:	f020 0007 	bic.w	r0, r0, #7
900284dc:	1ac2      	subs	r2, r0, r3
900284de:	bf1c      	itt	ne
900284e0:	1a1b      	subne	r3, r3, r0
900284e2:	50a3      	strne	r3, [r4, r2]
900284e4:	e7af      	b.n	90028446 <_malloc_r+0x22>
900284e6:	6862      	ldr	r2, [r4, #4]
900284e8:	42a3      	cmp	r3, r4
900284ea:	bf0c      	ite	eq
900284ec:	f8c8 2000 	streq.w	r2, [r8]
900284f0:	605a      	strne	r2, [r3, #4]
900284f2:	e7eb      	b.n	900284cc <_malloc_r+0xa8>
900284f4:	4623      	mov	r3, r4
900284f6:	6864      	ldr	r4, [r4, #4]
900284f8:	e7ae      	b.n	90028458 <_malloc_r+0x34>
900284fa:	463c      	mov	r4, r7
900284fc:	687f      	ldr	r7, [r7, #4]
900284fe:	e7b6      	b.n	9002846e <_malloc_r+0x4a>
90028500:	461a      	mov	r2, r3
90028502:	685b      	ldr	r3, [r3, #4]
90028504:	42a3      	cmp	r3, r4
90028506:	d1fb      	bne.n	90028500 <_malloc_r+0xdc>
90028508:	2300      	movs	r3, #0
9002850a:	6053      	str	r3, [r2, #4]
9002850c:	e7de      	b.n	900284cc <_malloc_r+0xa8>
9002850e:	230c      	movs	r3, #12
90028510:	6033      	str	r3, [r6, #0]
90028512:	4630      	mov	r0, r6
90028514:	f000 f80c 	bl	90028530 <__malloc_unlock>
90028518:	e794      	b.n	90028444 <_malloc_r+0x20>
9002851a:	6005      	str	r5, [r0, #0]
9002851c:	e7d6      	b.n	900284cc <_malloc_r+0xa8>
9002851e:	bf00      	nop
90028520:	24022314 	.word	0x24022314

90028524 <__malloc_lock>:
90028524:	4801      	ldr	r0, [pc, #4]	@ (9002852c <__malloc_lock+0x8>)
90028526:	f000 baf8 	b.w	90028b1a <__retarget_lock_acquire_recursive>
9002852a:	bf00      	nop
9002852c:	24022458 	.word	0x24022458

90028530 <__malloc_unlock>:
90028530:	4801      	ldr	r0, [pc, #4]	@ (90028538 <__malloc_unlock+0x8>)
90028532:	f000 baf3 	b.w	90028b1c <__retarget_lock_release_recursive>
90028536:	bf00      	nop
90028538:	24022458 	.word	0x24022458

9002853c <__cxa_atexit>:
9002853c:	b510      	push	{r4, lr}
9002853e:	4604      	mov	r4, r0
90028540:	4804      	ldr	r0, [pc, #16]	@ (90028554 <__cxa_atexit+0x18>)
90028542:	4613      	mov	r3, r2
90028544:	b120      	cbz	r0, 90028550 <__cxa_atexit+0x14>
90028546:	460a      	mov	r2, r1
90028548:	2002      	movs	r0, #2
9002854a:	4621      	mov	r1, r4
9002854c:	f000 faf6 	bl	90028b3c <__register_exitproc>
90028550:	bd10      	pop	{r4, pc}
90028552:	bf00      	nop
90028554:	90028b3d 	.word	0x90028b3d

90028558 <std>:
90028558:	2300      	movs	r3, #0
9002855a:	b510      	push	{r4, lr}
9002855c:	4604      	mov	r4, r0
9002855e:	e9c0 3300 	strd	r3, r3, [r0]
90028562:	e9c0 3304 	strd	r3, r3, [r0, #16]
90028566:	6083      	str	r3, [r0, #8]
90028568:	8181      	strh	r1, [r0, #12]
9002856a:	6643      	str	r3, [r0, #100]	@ 0x64
9002856c:	81c2      	strh	r2, [r0, #14]
9002856e:	6183      	str	r3, [r0, #24]
90028570:	4619      	mov	r1, r3
90028572:	2208      	movs	r2, #8
90028574:	305c      	adds	r0, #92	@ 0x5c
90028576:	f000 f99b 	bl	900288b0 <memset>
9002857a:	4b0d      	ldr	r3, [pc, #52]	@ (900285b0 <std+0x58>)
9002857c:	6263      	str	r3, [r4, #36]	@ 0x24
9002857e:	4b0d      	ldr	r3, [pc, #52]	@ (900285b4 <std+0x5c>)
90028580:	62a3      	str	r3, [r4, #40]	@ 0x28
90028582:	4b0d      	ldr	r3, [pc, #52]	@ (900285b8 <std+0x60>)
90028584:	62e3      	str	r3, [r4, #44]	@ 0x2c
90028586:	4b0d      	ldr	r3, [pc, #52]	@ (900285bc <std+0x64>)
90028588:	6323      	str	r3, [r4, #48]	@ 0x30
9002858a:	4b0d      	ldr	r3, [pc, #52]	@ (900285c0 <std+0x68>)
9002858c:	6224      	str	r4, [r4, #32]
9002858e:	429c      	cmp	r4, r3
90028590:	d006      	beq.n	900285a0 <std+0x48>
90028592:	f103 0268 	add.w	r2, r3, #104	@ 0x68
90028596:	4294      	cmp	r4, r2
90028598:	d002      	beq.n	900285a0 <std+0x48>
9002859a:	33d0      	adds	r3, #208	@ 0xd0
9002859c:	429c      	cmp	r4, r3
9002859e:	d105      	bne.n	900285ac <std+0x54>
900285a0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
900285a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900285a8:	f000 bab6 	b.w	90028b18 <__retarget_lock_init_recursive>
900285ac:	bd10      	pop	{r4, pc}
900285ae:	bf00      	nop
900285b0:	90028701 	.word	0x90028701
900285b4:	90028723 	.word	0x90028723
900285b8:	9002875b 	.word	0x9002875b
900285bc:	9002877f 	.word	0x9002877f
900285c0:	24022318 	.word	0x24022318

900285c4 <stdio_exit_handler>:
900285c4:	4a02      	ldr	r2, [pc, #8]	@ (900285d0 <stdio_exit_handler+0xc>)
900285c6:	4903      	ldr	r1, [pc, #12]	@ (900285d4 <stdio_exit_handler+0x10>)
900285c8:	4803      	ldr	r0, [pc, #12]	@ (900285d8 <stdio_exit_handler+0x14>)
900285ca:	f000 b87b 	b.w	900286c4 <_fwalk_sglue>
900285ce:	bf00      	nop
900285d0:	24000108 	.word	0x24000108
900285d4:	90029331 	.word	0x90029331
900285d8:	24000118 	.word	0x24000118

900285dc <cleanup_stdio>:
900285dc:	6841      	ldr	r1, [r0, #4]
900285de:	4b0c      	ldr	r3, [pc, #48]	@ (90028610 <cleanup_stdio+0x34>)
900285e0:	4299      	cmp	r1, r3
900285e2:	b510      	push	{r4, lr}
900285e4:	4604      	mov	r4, r0
900285e6:	d001      	beq.n	900285ec <cleanup_stdio+0x10>
900285e8:	f000 fea2 	bl	90029330 <_fflush_r>
900285ec:	68a1      	ldr	r1, [r4, #8]
900285ee:	4b09      	ldr	r3, [pc, #36]	@ (90028614 <cleanup_stdio+0x38>)
900285f0:	4299      	cmp	r1, r3
900285f2:	d002      	beq.n	900285fa <cleanup_stdio+0x1e>
900285f4:	4620      	mov	r0, r4
900285f6:	f000 fe9b 	bl	90029330 <_fflush_r>
900285fa:	68e1      	ldr	r1, [r4, #12]
900285fc:	4b06      	ldr	r3, [pc, #24]	@ (90028618 <cleanup_stdio+0x3c>)
900285fe:	4299      	cmp	r1, r3
90028600:	d004      	beq.n	9002860c <cleanup_stdio+0x30>
90028602:	4620      	mov	r0, r4
90028604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90028608:	f000 be92 	b.w	90029330 <_fflush_r>
9002860c:	bd10      	pop	{r4, pc}
9002860e:	bf00      	nop
90028610:	24022318 	.word	0x24022318
90028614:	24022380 	.word	0x24022380
90028618:	240223e8 	.word	0x240223e8

9002861c <global_stdio_init.part.0>:
9002861c:	b510      	push	{r4, lr}
9002861e:	4b0b      	ldr	r3, [pc, #44]	@ (9002864c <global_stdio_init.part.0+0x30>)
90028620:	4c0b      	ldr	r4, [pc, #44]	@ (90028650 <global_stdio_init.part.0+0x34>)
90028622:	4a0c      	ldr	r2, [pc, #48]	@ (90028654 <global_stdio_init.part.0+0x38>)
90028624:	601a      	str	r2, [r3, #0]
90028626:	4620      	mov	r0, r4
90028628:	2200      	movs	r2, #0
9002862a:	2104      	movs	r1, #4
9002862c:	f7ff ff94 	bl	90028558 <std>
90028630:	f104 0068 	add.w	r0, r4, #104	@ 0x68
90028634:	2201      	movs	r2, #1
90028636:	2109      	movs	r1, #9
90028638:	f7ff ff8e 	bl	90028558 <std>
9002863c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
90028640:	2202      	movs	r2, #2
90028642:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90028646:	2112      	movs	r1, #18
90028648:	f7ff bf86 	b.w	90028558 <std>
9002864c:	24022450 	.word	0x24022450
90028650:	24022318 	.word	0x24022318
90028654:	900285c5 	.word	0x900285c5

90028658 <__sfp_lock_acquire>:
90028658:	4801      	ldr	r0, [pc, #4]	@ (90028660 <__sfp_lock_acquire+0x8>)
9002865a:	f000 ba5e 	b.w	90028b1a <__retarget_lock_acquire_recursive>
9002865e:	bf00      	nop
90028660:	2402245a 	.word	0x2402245a

90028664 <__sfp_lock_release>:
90028664:	4801      	ldr	r0, [pc, #4]	@ (9002866c <__sfp_lock_release+0x8>)
90028666:	f000 ba59 	b.w	90028b1c <__retarget_lock_release_recursive>
9002866a:	bf00      	nop
9002866c:	2402245a 	.word	0x2402245a

90028670 <__sinit>:
90028670:	b510      	push	{r4, lr}
90028672:	4604      	mov	r4, r0
90028674:	f7ff fff0 	bl	90028658 <__sfp_lock_acquire>
90028678:	6a23      	ldr	r3, [r4, #32]
9002867a:	b11b      	cbz	r3, 90028684 <__sinit+0x14>
9002867c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90028680:	f7ff bff0 	b.w	90028664 <__sfp_lock_release>
90028684:	4b04      	ldr	r3, [pc, #16]	@ (90028698 <__sinit+0x28>)
90028686:	6223      	str	r3, [r4, #32]
90028688:	4b04      	ldr	r3, [pc, #16]	@ (9002869c <__sinit+0x2c>)
9002868a:	681b      	ldr	r3, [r3, #0]
9002868c:	2b00      	cmp	r3, #0
9002868e:	d1f5      	bne.n	9002867c <__sinit+0xc>
90028690:	f7ff ffc4 	bl	9002861c <global_stdio_init.part.0>
90028694:	e7f2      	b.n	9002867c <__sinit+0xc>
90028696:	bf00      	nop
90028698:	900285dd 	.word	0x900285dd
9002869c:	24022450 	.word	0x24022450

900286a0 <fiprintf>:
900286a0:	b40e      	push	{r1, r2, r3}
900286a2:	b503      	push	{r0, r1, lr}
900286a4:	4601      	mov	r1, r0
900286a6:	ab03      	add	r3, sp, #12
900286a8:	4805      	ldr	r0, [pc, #20]	@ (900286c0 <fiprintf+0x20>)
900286aa:	f853 2b04 	ldr.w	r2, [r3], #4
900286ae:	6800      	ldr	r0, [r0, #0]
900286b0:	9301      	str	r3, [sp, #4]
900286b2:	f000 fb13 	bl	90028cdc <_vfiprintf_r>
900286b6:	b002      	add	sp, #8
900286b8:	f85d eb04 	ldr.w	lr, [sp], #4
900286bc:	b003      	add	sp, #12
900286be:	4770      	bx	lr
900286c0:	24000114 	.word	0x24000114

900286c4 <_fwalk_sglue>:
900286c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900286c8:	4607      	mov	r7, r0
900286ca:	4688      	mov	r8, r1
900286cc:	4614      	mov	r4, r2
900286ce:	2600      	movs	r6, #0
900286d0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
900286d4:	f1b9 0901 	subs.w	r9, r9, #1
900286d8:	d505      	bpl.n	900286e6 <_fwalk_sglue+0x22>
900286da:	6824      	ldr	r4, [r4, #0]
900286dc:	2c00      	cmp	r4, #0
900286de:	d1f7      	bne.n	900286d0 <_fwalk_sglue+0xc>
900286e0:	4630      	mov	r0, r6
900286e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900286e6:	89ab      	ldrh	r3, [r5, #12]
900286e8:	2b01      	cmp	r3, #1
900286ea:	d907      	bls.n	900286fc <_fwalk_sglue+0x38>
900286ec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
900286f0:	3301      	adds	r3, #1
900286f2:	d003      	beq.n	900286fc <_fwalk_sglue+0x38>
900286f4:	4629      	mov	r1, r5
900286f6:	4638      	mov	r0, r7
900286f8:	47c0      	blx	r8
900286fa:	4306      	orrs	r6, r0
900286fc:	3568      	adds	r5, #104	@ 0x68
900286fe:	e7e9      	b.n	900286d4 <_fwalk_sglue+0x10>

90028700 <__sread>:
90028700:	b510      	push	{r4, lr}
90028702:	460c      	mov	r4, r1
90028704:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028708:	f000 f994 	bl	90028a34 <_read_r>
9002870c:	2800      	cmp	r0, #0
9002870e:	bfab      	itete	ge
90028710:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
90028712:	89a3      	ldrhlt	r3, [r4, #12]
90028714:	181b      	addge	r3, r3, r0
90028716:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002871a:	bfac      	ite	ge
9002871c:	6563      	strge	r3, [r4, #84]	@ 0x54
9002871e:	81a3      	strhlt	r3, [r4, #12]
90028720:	bd10      	pop	{r4, pc}

90028722 <__swrite>:
90028722:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90028726:	461f      	mov	r7, r3
90028728:	898b      	ldrh	r3, [r1, #12]
9002872a:	05db      	lsls	r3, r3, #23
9002872c:	4605      	mov	r5, r0
9002872e:	460c      	mov	r4, r1
90028730:	4616      	mov	r6, r2
90028732:	d505      	bpl.n	90028740 <__swrite+0x1e>
90028734:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028738:	2302      	movs	r3, #2
9002873a:	2200      	movs	r2, #0
9002873c:	f000 f968 	bl	90028a10 <_lseek_r>
90028740:	89a3      	ldrh	r3, [r4, #12]
90028742:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90028746:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002874a:	81a3      	strh	r3, [r4, #12]
9002874c:	4632      	mov	r2, r6
9002874e:	463b      	mov	r3, r7
90028750:	4628      	mov	r0, r5
90028752:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90028756:	f000 b9a3 	b.w	90028aa0 <_write_r>

9002875a <__sseek>:
9002875a:	b510      	push	{r4, lr}
9002875c:	460c      	mov	r4, r1
9002875e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028762:	f000 f955 	bl	90028a10 <_lseek_r>
90028766:	1c43      	adds	r3, r0, #1
90028768:	89a3      	ldrh	r3, [r4, #12]
9002876a:	bf15      	itete	ne
9002876c:	6560      	strne	r0, [r4, #84]	@ 0x54
9002876e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
90028772:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
90028776:	81a3      	strheq	r3, [r4, #12]
90028778:	bf18      	it	ne
9002877a:	81a3      	strhne	r3, [r4, #12]
9002877c:	bd10      	pop	{r4, pc}

9002877e <__sclose>:
9002877e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028782:	f000 b8df 	b.w	90028944 <_close_r>

90028786 <__swbuf_r>:
90028786:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028788:	460e      	mov	r6, r1
9002878a:	4614      	mov	r4, r2
9002878c:	4605      	mov	r5, r0
9002878e:	b118      	cbz	r0, 90028798 <__swbuf_r+0x12>
90028790:	6a03      	ldr	r3, [r0, #32]
90028792:	b90b      	cbnz	r3, 90028798 <__swbuf_r+0x12>
90028794:	f7ff ff6c 	bl	90028670 <__sinit>
90028798:	69a3      	ldr	r3, [r4, #24]
9002879a:	60a3      	str	r3, [r4, #8]
9002879c:	89a3      	ldrh	r3, [r4, #12]
9002879e:	071a      	lsls	r2, r3, #28
900287a0:	d501      	bpl.n	900287a6 <__swbuf_r+0x20>
900287a2:	6923      	ldr	r3, [r4, #16]
900287a4:	b943      	cbnz	r3, 900287b8 <__swbuf_r+0x32>
900287a6:	4621      	mov	r1, r4
900287a8:	4628      	mov	r0, r5
900287aa:	f000 f82b 	bl	90028804 <__swsetup_r>
900287ae:	b118      	cbz	r0, 900287b8 <__swbuf_r+0x32>
900287b0:	f04f 37ff 	mov.w	r7, #4294967295
900287b4:	4638      	mov	r0, r7
900287b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900287b8:	6823      	ldr	r3, [r4, #0]
900287ba:	6922      	ldr	r2, [r4, #16]
900287bc:	1a98      	subs	r0, r3, r2
900287be:	6963      	ldr	r3, [r4, #20]
900287c0:	b2f6      	uxtb	r6, r6
900287c2:	4283      	cmp	r3, r0
900287c4:	4637      	mov	r7, r6
900287c6:	dc05      	bgt.n	900287d4 <__swbuf_r+0x4e>
900287c8:	4621      	mov	r1, r4
900287ca:	4628      	mov	r0, r5
900287cc:	f000 fdb0 	bl	90029330 <_fflush_r>
900287d0:	2800      	cmp	r0, #0
900287d2:	d1ed      	bne.n	900287b0 <__swbuf_r+0x2a>
900287d4:	68a3      	ldr	r3, [r4, #8]
900287d6:	3b01      	subs	r3, #1
900287d8:	60a3      	str	r3, [r4, #8]
900287da:	6823      	ldr	r3, [r4, #0]
900287dc:	1c5a      	adds	r2, r3, #1
900287de:	6022      	str	r2, [r4, #0]
900287e0:	701e      	strb	r6, [r3, #0]
900287e2:	6962      	ldr	r2, [r4, #20]
900287e4:	1c43      	adds	r3, r0, #1
900287e6:	429a      	cmp	r2, r3
900287e8:	d004      	beq.n	900287f4 <__swbuf_r+0x6e>
900287ea:	89a3      	ldrh	r3, [r4, #12]
900287ec:	07db      	lsls	r3, r3, #31
900287ee:	d5e1      	bpl.n	900287b4 <__swbuf_r+0x2e>
900287f0:	2e0a      	cmp	r6, #10
900287f2:	d1df      	bne.n	900287b4 <__swbuf_r+0x2e>
900287f4:	4621      	mov	r1, r4
900287f6:	4628      	mov	r0, r5
900287f8:	f000 fd9a 	bl	90029330 <_fflush_r>
900287fc:	2800      	cmp	r0, #0
900287fe:	d0d9      	beq.n	900287b4 <__swbuf_r+0x2e>
90028800:	e7d6      	b.n	900287b0 <__swbuf_r+0x2a>
	...

90028804 <__swsetup_r>:
90028804:	b538      	push	{r3, r4, r5, lr}
90028806:	4b29      	ldr	r3, [pc, #164]	@ (900288ac <__swsetup_r+0xa8>)
90028808:	4605      	mov	r5, r0
9002880a:	6818      	ldr	r0, [r3, #0]
9002880c:	460c      	mov	r4, r1
9002880e:	b118      	cbz	r0, 90028818 <__swsetup_r+0x14>
90028810:	6a03      	ldr	r3, [r0, #32]
90028812:	b90b      	cbnz	r3, 90028818 <__swsetup_r+0x14>
90028814:	f7ff ff2c 	bl	90028670 <__sinit>
90028818:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002881c:	0719      	lsls	r1, r3, #28
9002881e:	d422      	bmi.n	90028866 <__swsetup_r+0x62>
90028820:	06da      	lsls	r2, r3, #27
90028822:	d407      	bmi.n	90028834 <__swsetup_r+0x30>
90028824:	2209      	movs	r2, #9
90028826:	602a      	str	r2, [r5, #0]
90028828:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002882c:	81a3      	strh	r3, [r4, #12]
9002882e:	f04f 30ff 	mov.w	r0, #4294967295
90028832:	e033      	b.n	9002889c <__swsetup_r+0x98>
90028834:	0758      	lsls	r0, r3, #29
90028836:	d512      	bpl.n	9002885e <__swsetup_r+0x5a>
90028838:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002883a:	b141      	cbz	r1, 9002884e <__swsetup_r+0x4a>
9002883c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
90028840:	4299      	cmp	r1, r3
90028842:	d002      	beq.n	9002884a <__swsetup_r+0x46>
90028844:	4628      	mov	r0, r5
90028846:	f000 f9d5 	bl	90028bf4 <_free_r>
9002884a:	2300      	movs	r3, #0
9002884c:	6363      	str	r3, [r4, #52]	@ 0x34
9002884e:	89a3      	ldrh	r3, [r4, #12]
90028850:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
90028854:	81a3      	strh	r3, [r4, #12]
90028856:	2300      	movs	r3, #0
90028858:	6063      	str	r3, [r4, #4]
9002885a:	6923      	ldr	r3, [r4, #16]
9002885c:	6023      	str	r3, [r4, #0]
9002885e:	89a3      	ldrh	r3, [r4, #12]
90028860:	f043 0308 	orr.w	r3, r3, #8
90028864:	81a3      	strh	r3, [r4, #12]
90028866:	6923      	ldr	r3, [r4, #16]
90028868:	b94b      	cbnz	r3, 9002887e <__swsetup_r+0x7a>
9002886a:	89a3      	ldrh	r3, [r4, #12]
9002886c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
90028870:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90028874:	d003      	beq.n	9002887e <__swsetup_r+0x7a>
90028876:	4621      	mov	r1, r4
90028878:	4628      	mov	r0, r5
9002887a:	f000 fda7 	bl	900293cc <__smakebuf_r>
9002887e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90028882:	f013 0201 	ands.w	r2, r3, #1
90028886:	d00a      	beq.n	9002889e <__swsetup_r+0x9a>
90028888:	2200      	movs	r2, #0
9002888a:	60a2      	str	r2, [r4, #8]
9002888c:	6962      	ldr	r2, [r4, #20]
9002888e:	4252      	negs	r2, r2
90028890:	61a2      	str	r2, [r4, #24]
90028892:	6922      	ldr	r2, [r4, #16]
90028894:	b942      	cbnz	r2, 900288a8 <__swsetup_r+0xa4>
90028896:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002889a:	d1c5      	bne.n	90028828 <__swsetup_r+0x24>
9002889c:	bd38      	pop	{r3, r4, r5, pc}
9002889e:	0799      	lsls	r1, r3, #30
900288a0:	bf58      	it	pl
900288a2:	6962      	ldrpl	r2, [r4, #20]
900288a4:	60a2      	str	r2, [r4, #8]
900288a6:	e7f4      	b.n	90028892 <__swsetup_r+0x8e>
900288a8:	2000      	movs	r0, #0
900288aa:	e7f7      	b.n	9002889c <__swsetup_r+0x98>
900288ac:	24000114 	.word	0x24000114

900288b0 <memset>:
900288b0:	4402      	add	r2, r0
900288b2:	4603      	mov	r3, r0
900288b4:	4293      	cmp	r3, r2
900288b6:	d100      	bne.n	900288ba <memset+0xa>
900288b8:	4770      	bx	lr
900288ba:	f803 1b01 	strb.w	r1, [r3], #1
900288be:	e7f9      	b.n	900288b4 <memset+0x4>

900288c0 <strncmp>:
900288c0:	b510      	push	{r4, lr}
900288c2:	b16a      	cbz	r2, 900288e0 <strncmp+0x20>
900288c4:	3901      	subs	r1, #1
900288c6:	1884      	adds	r4, r0, r2
900288c8:	f810 2b01 	ldrb.w	r2, [r0], #1
900288cc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
900288d0:	429a      	cmp	r2, r3
900288d2:	d103      	bne.n	900288dc <strncmp+0x1c>
900288d4:	42a0      	cmp	r0, r4
900288d6:	d001      	beq.n	900288dc <strncmp+0x1c>
900288d8:	2a00      	cmp	r2, #0
900288da:	d1f5      	bne.n	900288c8 <strncmp+0x8>
900288dc:	1ad0      	subs	r0, r2, r3
900288de:	bd10      	pop	{r4, pc}
900288e0:	4610      	mov	r0, r2
900288e2:	e7fc      	b.n	900288de <strncmp+0x1e>

900288e4 <_raise_r>:
900288e4:	291f      	cmp	r1, #31
900288e6:	b538      	push	{r3, r4, r5, lr}
900288e8:	4605      	mov	r5, r0
900288ea:	460c      	mov	r4, r1
900288ec:	d904      	bls.n	900288f8 <_raise_r+0x14>
900288ee:	2316      	movs	r3, #22
900288f0:	6003      	str	r3, [r0, #0]
900288f2:	f04f 30ff 	mov.w	r0, #4294967295
900288f6:	bd38      	pop	{r3, r4, r5, pc}
900288f8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
900288fa:	b112      	cbz	r2, 90028902 <_raise_r+0x1e>
900288fc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90028900:	b94b      	cbnz	r3, 90028916 <_raise_r+0x32>
90028902:	4628      	mov	r0, r5
90028904:	f000 f8ba 	bl	90028a7c <_getpid_r>
90028908:	4622      	mov	r2, r4
9002890a:	4601      	mov	r1, r0
9002890c:	4628      	mov	r0, r5
9002890e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90028912:	f000 b8a1 	b.w	90028a58 <_kill_r>
90028916:	2b01      	cmp	r3, #1
90028918:	d00a      	beq.n	90028930 <_raise_r+0x4c>
9002891a:	1c59      	adds	r1, r3, #1
9002891c:	d103      	bne.n	90028926 <_raise_r+0x42>
9002891e:	2316      	movs	r3, #22
90028920:	6003      	str	r3, [r0, #0]
90028922:	2001      	movs	r0, #1
90028924:	e7e7      	b.n	900288f6 <_raise_r+0x12>
90028926:	2100      	movs	r1, #0
90028928:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002892c:	4620      	mov	r0, r4
9002892e:	4798      	blx	r3
90028930:	2000      	movs	r0, #0
90028932:	e7e0      	b.n	900288f6 <_raise_r+0x12>

90028934 <raise>:
90028934:	4b02      	ldr	r3, [pc, #8]	@ (90028940 <raise+0xc>)
90028936:	4601      	mov	r1, r0
90028938:	6818      	ldr	r0, [r3, #0]
9002893a:	f7ff bfd3 	b.w	900288e4 <_raise_r>
9002893e:	bf00      	nop
90028940:	24000114 	.word	0x24000114

90028944 <_close_r>:
90028944:	b538      	push	{r3, r4, r5, lr}
90028946:	4d06      	ldr	r5, [pc, #24]	@ (90028960 <_close_r+0x1c>)
90028948:	2300      	movs	r3, #0
9002894a:	4604      	mov	r4, r0
9002894c:	4608      	mov	r0, r1
9002894e:	602b      	str	r3, [r5, #0]
90028950:	f7db fcd0 	bl	900042f4 <_close>
90028954:	1c43      	adds	r3, r0, #1
90028956:	d102      	bne.n	9002895e <_close_r+0x1a>
90028958:	682b      	ldr	r3, [r5, #0]
9002895a:	b103      	cbz	r3, 9002895e <_close_r+0x1a>
9002895c:	6023      	str	r3, [r4, #0]
9002895e:	bd38      	pop	{r3, r4, r5, pc}
90028960:	24022454 	.word	0x24022454

90028964 <_reclaim_reent>:
90028964:	4b29      	ldr	r3, [pc, #164]	@ (90028a0c <_reclaim_reent+0xa8>)
90028966:	681b      	ldr	r3, [r3, #0]
90028968:	4283      	cmp	r3, r0
9002896a:	b570      	push	{r4, r5, r6, lr}
9002896c:	4604      	mov	r4, r0
9002896e:	d04b      	beq.n	90028a08 <_reclaim_reent+0xa4>
90028970:	69c3      	ldr	r3, [r0, #28]
90028972:	b1ab      	cbz	r3, 900289a0 <_reclaim_reent+0x3c>
90028974:	68db      	ldr	r3, [r3, #12]
90028976:	b16b      	cbz	r3, 90028994 <_reclaim_reent+0x30>
90028978:	2500      	movs	r5, #0
9002897a:	69e3      	ldr	r3, [r4, #28]
9002897c:	68db      	ldr	r3, [r3, #12]
9002897e:	5959      	ldr	r1, [r3, r5]
90028980:	2900      	cmp	r1, #0
90028982:	d13b      	bne.n	900289fc <_reclaim_reent+0x98>
90028984:	3504      	adds	r5, #4
90028986:	2d80      	cmp	r5, #128	@ 0x80
90028988:	d1f7      	bne.n	9002897a <_reclaim_reent+0x16>
9002898a:	69e3      	ldr	r3, [r4, #28]
9002898c:	4620      	mov	r0, r4
9002898e:	68d9      	ldr	r1, [r3, #12]
90028990:	f000 f930 	bl	90028bf4 <_free_r>
90028994:	69e3      	ldr	r3, [r4, #28]
90028996:	6819      	ldr	r1, [r3, #0]
90028998:	b111      	cbz	r1, 900289a0 <_reclaim_reent+0x3c>
9002899a:	4620      	mov	r0, r4
9002899c:	f000 f92a 	bl	90028bf4 <_free_r>
900289a0:	6961      	ldr	r1, [r4, #20]
900289a2:	b111      	cbz	r1, 900289aa <_reclaim_reent+0x46>
900289a4:	4620      	mov	r0, r4
900289a6:	f000 f925 	bl	90028bf4 <_free_r>
900289aa:	69e1      	ldr	r1, [r4, #28]
900289ac:	b111      	cbz	r1, 900289b4 <_reclaim_reent+0x50>
900289ae:	4620      	mov	r0, r4
900289b0:	f000 f920 	bl	90028bf4 <_free_r>
900289b4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
900289b6:	b111      	cbz	r1, 900289be <_reclaim_reent+0x5a>
900289b8:	4620      	mov	r0, r4
900289ba:	f000 f91b 	bl	90028bf4 <_free_r>
900289be:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900289c0:	b111      	cbz	r1, 900289c8 <_reclaim_reent+0x64>
900289c2:	4620      	mov	r0, r4
900289c4:	f000 f916 	bl	90028bf4 <_free_r>
900289c8:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
900289ca:	b111      	cbz	r1, 900289d2 <_reclaim_reent+0x6e>
900289cc:	4620      	mov	r0, r4
900289ce:	f000 f911 	bl	90028bf4 <_free_r>
900289d2:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
900289d4:	b111      	cbz	r1, 900289dc <_reclaim_reent+0x78>
900289d6:	4620      	mov	r0, r4
900289d8:	f000 f90c 	bl	90028bf4 <_free_r>
900289dc:	6c61      	ldr	r1, [r4, #68]	@ 0x44
900289de:	b111      	cbz	r1, 900289e6 <_reclaim_reent+0x82>
900289e0:	4620      	mov	r0, r4
900289e2:	f000 f907 	bl	90028bf4 <_free_r>
900289e6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900289e8:	b111      	cbz	r1, 900289f0 <_reclaim_reent+0x8c>
900289ea:	4620      	mov	r0, r4
900289ec:	f000 f902 	bl	90028bf4 <_free_r>
900289f0:	6a23      	ldr	r3, [r4, #32]
900289f2:	b14b      	cbz	r3, 90028a08 <_reclaim_reent+0xa4>
900289f4:	4620      	mov	r0, r4
900289f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900289fa:	4718      	bx	r3
900289fc:	680e      	ldr	r6, [r1, #0]
900289fe:	4620      	mov	r0, r4
90028a00:	f000 f8f8 	bl	90028bf4 <_free_r>
90028a04:	4631      	mov	r1, r6
90028a06:	e7bb      	b.n	90028980 <_reclaim_reent+0x1c>
90028a08:	bd70      	pop	{r4, r5, r6, pc}
90028a0a:	bf00      	nop
90028a0c:	24000114 	.word	0x24000114

90028a10 <_lseek_r>:
90028a10:	b538      	push	{r3, r4, r5, lr}
90028a12:	4d07      	ldr	r5, [pc, #28]	@ (90028a30 <_lseek_r+0x20>)
90028a14:	4604      	mov	r4, r0
90028a16:	4608      	mov	r0, r1
90028a18:	4611      	mov	r1, r2
90028a1a:	2200      	movs	r2, #0
90028a1c:	602a      	str	r2, [r5, #0]
90028a1e:	461a      	mov	r2, r3
90028a20:	f7db fc74 	bl	9000430c <_lseek>
90028a24:	1c43      	adds	r3, r0, #1
90028a26:	d102      	bne.n	90028a2e <_lseek_r+0x1e>
90028a28:	682b      	ldr	r3, [r5, #0]
90028a2a:	b103      	cbz	r3, 90028a2e <_lseek_r+0x1e>
90028a2c:	6023      	str	r3, [r4, #0]
90028a2e:	bd38      	pop	{r3, r4, r5, pc}
90028a30:	24022454 	.word	0x24022454

90028a34 <_read_r>:
90028a34:	b538      	push	{r3, r4, r5, lr}
90028a36:	4d07      	ldr	r5, [pc, #28]	@ (90028a54 <_read_r+0x20>)
90028a38:	4604      	mov	r4, r0
90028a3a:	4608      	mov	r0, r1
90028a3c:	4611      	mov	r1, r2
90028a3e:	2200      	movs	r2, #0
90028a40:	602a      	str	r2, [r5, #0]
90028a42:	461a      	mov	r2, r3
90028a44:	f7db fc3a 	bl	900042bc <_read>
90028a48:	1c43      	adds	r3, r0, #1
90028a4a:	d102      	bne.n	90028a52 <_read_r+0x1e>
90028a4c:	682b      	ldr	r3, [r5, #0]
90028a4e:	b103      	cbz	r3, 90028a52 <_read_r+0x1e>
90028a50:	6023      	str	r3, [r4, #0]
90028a52:	bd38      	pop	{r3, r4, r5, pc}
90028a54:	24022454 	.word	0x24022454

90028a58 <_kill_r>:
90028a58:	b538      	push	{r3, r4, r5, lr}
90028a5a:	4d07      	ldr	r5, [pc, #28]	@ (90028a78 <_kill_r+0x20>)
90028a5c:	2300      	movs	r3, #0
90028a5e:	4604      	mov	r4, r0
90028a60:	4608      	mov	r0, r1
90028a62:	4611      	mov	r1, r2
90028a64:	602b      	str	r3, [r5, #0]
90028a66:	f7db fc19 	bl	9000429c <_kill>
90028a6a:	1c43      	adds	r3, r0, #1
90028a6c:	d102      	bne.n	90028a74 <_kill_r+0x1c>
90028a6e:	682b      	ldr	r3, [r5, #0]
90028a70:	b103      	cbz	r3, 90028a74 <_kill_r+0x1c>
90028a72:	6023      	str	r3, [r4, #0]
90028a74:	bd38      	pop	{r3, r4, r5, pc}
90028a76:	bf00      	nop
90028a78:	24022454 	.word	0x24022454

90028a7c <_getpid_r>:
90028a7c:	f7db bc0c 	b.w	90004298 <_getpid>

90028a80 <_sbrk_r>:
90028a80:	b538      	push	{r3, r4, r5, lr}
90028a82:	4d06      	ldr	r5, [pc, #24]	@ (90028a9c <_sbrk_r+0x1c>)
90028a84:	2300      	movs	r3, #0
90028a86:	4604      	mov	r4, r0
90028a88:	4608      	mov	r0, r1
90028a8a:	602b      	str	r3, [r5, #0]
90028a8c:	f7db fc40 	bl	90004310 <_sbrk>
90028a90:	1c43      	adds	r3, r0, #1
90028a92:	d102      	bne.n	90028a9a <_sbrk_r+0x1a>
90028a94:	682b      	ldr	r3, [r5, #0]
90028a96:	b103      	cbz	r3, 90028a9a <_sbrk_r+0x1a>
90028a98:	6023      	str	r3, [r4, #0]
90028a9a:	bd38      	pop	{r3, r4, r5, pc}
90028a9c:	24022454 	.word	0x24022454

90028aa0 <_write_r>:
90028aa0:	b538      	push	{r3, r4, r5, lr}
90028aa2:	4d07      	ldr	r5, [pc, #28]	@ (90028ac0 <_write_r+0x20>)
90028aa4:	4604      	mov	r4, r0
90028aa6:	4608      	mov	r0, r1
90028aa8:	4611      	mov	r1, r2
90028aaa:	2200      	movs	r2, #0
90028aac:	602a      	str	r2, [r5, #0]
90028aae:	461a      	mov	r2, r3
90028ab0:	f7db fc12 	bl	900042d8 <_write>
90028ab4:	1c43      	adds	r3, r0, #1
90028ab6:	d102      	bne.n	90028abe <_write_r+0x1e>
90028ab8:	682b      	ldr	r3, [r5, #0]
90028aba:	b103      	cbz	r3, 90028abe <_write_r+0x1e>
90028abc:	6023      	str	r3, [r4, #0]
90028abe:	bd38      	pop	{r3, r4, r5, pc}
90028ac0:	24022454 	.word	0x24022454

90028ac4 <__errno>:
90028ac4:	4b01      	ldr	r3, [pc, #4]	@ (90028acc <__errno+0x8>)
90028ac6:	6818      	ldr	r0, [r3, #0]
90028ac8:	4770      	bx	lr
90028aca:	bf00      	nop
90028acc:	24000114 	.word	0x24000114

90028ad0 <__libc_init_array>:
90028ad0:	b570      	push	{r4, r5, r6, lr}
90028ad2:	4d0d      	ldr	r5, [pc, #52]	@ (90028b08 <__libc_init_array+0x38>)
90028ad4:	4c0d      	ldr	r4, [pc, #52]	@ (90028b0c <__libc_init_array+0x3c>)
90028ad6:	1b64      	subs	r4, r4, r5
90028ad8:	10a4      	asrs	r4, r4, #2
90028ada:	2600      	movs	r6, #0
90028adc:	42a6      	cmp	r6, r4
90028ade:	d109      	bne.n	90028af4 <__libc_init_array+0x24>
90028ae0:	4d0b      	ldr	r5, [pc, #44]	@ (90028b10 <__libc_init_array+0x40>)
90028ae2:	4c0c      	ldr	r4, [pc, #48]	@ (90028b14 <__libc_init_array+0x44>)
90028ae4:	f000 fcd0 	bl	90029488 <_init>
90028ae8:	1b64      	subs	r4, r4, r5
90028aea:	10a4      	asrs	r4, r4, #2
90028aec:	2600      	movs	r6, #0
90028aee:	42a6      	cmp	r6, r4
90028af0:	d105      	bne.n	90028afe <__libc_init_array+0x2e>
90028af2:	bd70      	pop	{r4, r5, r6, pc}
90028af4:	f855 3b04 	ldr.w	r3, [r5], #4
90028af8:	4798      	blx	r3
90028afa:	3601      	adds	r6, #1
90028afc:	e7ee      	b.n	90028adc <__libc_init_array+0xc>
90028afe:	f855 3b04 	ldr.w	r3, [r5], #4
90028b02:	4798      	blx	r3
90028b04:	3601      	adds	r6, #1
90028b06:	e7f2      	b.n	90028aee <__libc_init_array+0x1e>
90028b08:	9002c910 	.word	0x9002c910
90028b0c:	9002c910 	.word	0x9002c910
90028b10:	9002c910 	.word	0x9002c910
90028b14:	9002c928 	.word	0x9002c928

90028b18 <__retarget_lock_init_recursive>:
90028b18:	4770      	bx	lr

90028b1a <__retarget_lock_acquire_recursive>:
90028b1a:	4770      	bx	lr

90028b1c <__retarget_lock_release_recursive>:
90028b1c:	4770      	bx	lr

90028b1e <memcpy>:
90028b1e:	440a      	add	r2, r1
90028b20:	4291      	cmp	r1, r2
90028b22:	f100 33ff 	add.w	r3, r0, #4294967295
90028b26:	d100      	bne.n	90028b2a <memcpy+0xc>
90028b28:	4770      	bx	lr
90028b2a:	b510      	push	{r4, lr}
90028b2c:	f811 4b01 	ldrb.w	r4, [r1], #1
90028b30:	f803 4f01 	strb.w	r4, [r3, #1]!
90028b34:	4291      	cmp	r1, r2
90028b36:	d1f9      	bne.n	90028b2c <memcpy+0xe>
90028b38:	bd10      	pop	{r4, pc}
	...

90028b3c <__register_exitproc>:
90028b3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90028b40:	4d27      	ldr	r5, [pc, #156]	@ (90028be0 <__register_exitproc+0xa4>)
90028b42:	4607      	mov	r7, r0
90028b44:	6828      	ldr	r0, [r5, #0]
90028b46:	4691      	mov	r9, r2
90028b48:	460e      	mov	r6, r1
90028b4a:	4698      	mov	r8, r3
90028b4c:	f7ff ffe5 	bl	90028b1a <__retarget_lock_acquire_recursive>
90028b50:	4a24      	ldr	r2, [pc, #144]	@ (90028be4 <__register_exitproc+0xa8>)
90028b52:	6814      	ldr	r4, [r2, #0]
90028b54:	b93c      	cbnz	r4, 90028b66 <__register_exitproc+0x2a>
90028b56:	4b24      	ldr	r3, [pc, #144]	@ (90028be8 <__register_exitproc+0xac>)
90028b58:	6013      	str	r3, [r2, #0]
90028b5a:	4a24      	ldr	r2, [pc, #144]	@ (90028bec <__register_exitproc+0xb0>)
90028b5c:	b112      	cbz	r2, 90028b64 <__register_exitproc+0x28>
90028b5e:	6812      	ldr	r2, [r2, #0]
90028b60:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
90028b64:	4c20      	ldr	r4, [pc, #128]	@ (90028be8 <__register_exitproc+0xac>)
90028b66:	6863      	ldr	r3, [r4, #4]
90028b68:	2b1f      	cmp	r3, #31
90028b6a:	dd06      	ble.n	90028b7a <__register_exitproc+0x3e>
90028b6c:	6828      	ldr	r0, [r5, #0]
90028b6e:	f7ff ffd5 	bl	90028b1c <__retarget_lock_release_recursive>
90028b72:	f04f 30ff 	mov.w	r0, #4294967295
90028b76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90028b7a:	b32f      	cbz	r7, 90028bc8 <__register_exitproc+0x8c>
90028b7c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
90028b80:	b968      	cbnz	r0, 90028b9e <__register_exitproc+0x62>
90028b82:	4b1b      	ldr	r3, [pc, #108]	@ (90028bf0 <__register_exitproc+0xb4>)
90028b84:	2b00      	cmp	r3, #0
90028b86:	d0f1      	beq.n	90028b6c <__register_exitproc+0x30>
90028b88:	f44f 7084 	mov.w	r0, #264	@ 0x108
90028b8c:	f7ff fc18 	bl	900283c0 <malloc>
90028b90:	2800      	cmp	r0, #0
90028b92:	d0eb      	beq.n	90028b6c <__register_exitproc+0x30>
90028b94:	2300      	movs	r3, #0
90028b96:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
90028b9a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
90028b9e:	6863      	ldr	r3, [r4, #4]
90028ba0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90028ba4:	2201      	movs	r2, #1
90028ba6:	409a      	lsls	r2, r3
90028ba8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90028bac:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
90028bb0:	4313      	orrs	r3, r2
90028bb2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
90028bb6:	2f02      	cmp	r7, #2
90028bb8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
90028bbc:	bf02      	ittt	eq
90028bbe:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
90028bc2:	4313      	orreq	r3, r2
90028bc4:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
90028bc8:	6863      	ldr	r3, [r4, #4]
90028bca:	6828      	ldr	r0, [r5, #0]
90028bcc:	1c5a      	adds	r2, r3, #1
90028bce:	3302      	adds	r3, #2
90028bd0:	6062      	str	r2, [r4, #4]
90028bd2:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
90028bd6:	f7ff ffa1 	bl	90028b1c <__retarget_lock_release_recursive>
90028bda:	2000      	movs	r0, #0
90028bdc:	e7cb      	b.n	90028b76 <__register_exitproc+0x3a>
90028bde:	bf00      	nop
90028be0:	24000164 	.word	0x24000164
90028be4:	240224e8 	.word	0x240224e8
90028be8:	2402245c 	.word	0x2402245c
90028bec:	9002c8ac 	.word	0x9002c8ac
90028bf0:	900283c1 	.word	0x900283c1

90028bf4 <_free_r>:
90028bf4:	b538      	push	{r3, r4, r5, lr}
90028bf6:	4605      	mov	r5, r0
90028bf8:	2900      	cmp	r1, #0
90028bfa:	d041      	beq.n	90028c80 <_free_r+0x8c>
90028bfc:	f851 3c04 	ldr.w	r3, [r1, #-4]
90028c00:	1f0c      	subs	r4, r1, #4
90028c02:	2b00      	cmp	r3, #0
90028c04:	bfb8      	it	lt
90028c06:	18e4      	addlt	r4, r4, r3
90028c08:	f7ff fc8c 	bl	90028524 <__malloc_lock>
90028c0c:	4a1d      	ldr	r2, [pc, #116]	@ (90028c84 <_free_r+0x90>)
90028c0e:	6813      	ldr	r3, [r2, #0]
90028c10:	b933      	cbnz	r3, 90028c20 <_free_r+0x2c>
90028c12:	6063      	str	r3, [r4, #4]
90028c14:	6014      	str	r4, [r2, #0]
90028c16:	4628      	mov	r0, r5
90028c18:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90028c1c:	f7ff bc88 	b.w	90028530 <__malloc_unlock>
90028c20:	42a3      	cmp	r3, r4
90028c22:	d908      	bls.n	90028c36 <_free_r+0x42>
90028c24:	6820      	ldr	r0, [r4, #0]
90028c26:	1821      	adds	r1, r4, r0
90028c28:	428b      	cmp	r3, r1
90028c2a:	bf01      	itttt	eq
90028c2c:	6819      	ldreq	r1, [r3, #0]
90028c2e:	685b      	ldreq	r3, [r3, #4]
90028c30:	1809      	addeq	r1, r1, r0
90028c32:	6021      	streq	r1, [r4, #0]
90028c34:	e7ed      	b.n	90028c12 <_free_r+0x1e>
90028c36:	461a      	mov	r2, r3
90028c38:	685b      	ldr	r3, [r3, #4]
90028c3a:	b10b      	cbz	r3, 90028c40 <_free_r+0x4c>
90028c3c:	42a3      	cmp	r3, r4
90028c3e:	d9fa      	bls.n	90028c36 <_free_r+0x42>
90028c40:	6811      	ldr	r1, [r2, #0]
90028c42:	1850      	adds	r0, r2, r1
90028c44:	42a0      	cmp	r0, r4
90028c46:	d10b      	bne.n	90028c60 <_free_r+0x6c>
90028c48:	6820      	ldr	r0, [r4, #0]
90028c4a:	4401      	add	r1, r0
90028c4c:	1850      	adds	r0, r2, r1
90028c4e:	4283      	cmp	r3, r0
90028c50:	6011      	str	r1, [r2, #0]
90028c52:	d1e0      	bne.n	90028c16 <_free_r+0x22>
90028c54:	6818      	ldr	r0, [r3, #0]
90028c56:	685b      	ldr	r3, [r3, #4]
90028c58:	6053      	str	r3, [r2, #4]
90028c5a:	4408      	add	r0, r1
90028c5c:	6010      	str	r0, [r2, #0]
90028c5e:	e7da      	b.n	90028c16 <_free_r+0x22>
90028c60:	d902      	bls.n	90028c68 <_free_r+0x74>
90028c62:	230c      	movs	r3, #12
90028c64:	602b      	str	r3, [r5, #0]
90028c66:	e7d6      	b.n	90028c16 <_free_r+0x22>
90028c68:	6820      	ldr	r0, [r4, #0]
90028c6a:	1821      	adds	r1, r4, r0
90028c6c:	428b      	cmp	r3, r1
90028c6e:	bf04      	itt	eq
90028c70:	6819      	ldreq	r1, [r3, #0]
90028c72:	685b      	ldreq	r3, [r3, #4]
90028c74:	6063      	str	r3, [r4, #4]
90028c76:	bf04      	itt	eq
90028c78:	1809      	addeq	r1, r1, r0
90028c7a:	6021      	streq	r1, [r4, #0]
90028c7c:	6054      	str	r4, [r2, #4]
90028c7e:	e7ca      	b.n	90028c16 <_free_r+0x22>
90028c80:	bd38      	pop	{r3, r4, r5, pc}
90028c82:	bf00      	nop
90028c84:	24022314 	.word	0x24022314

90028c88 <__sfputc_r>:
90028c88:	6893      	ldr	r3, [r2, #8]
90028c8a:	3b01      	subs	r3, #1
90028c8c:	2b00      	cmp	r3, #0
90028c8e:	b410      	push	{r4}
90028c90:	6093      	str	r3, [r2, #8]
90028c92:	da08      	bge.n	90028ca6 <__sfputc_r+0x1e>
90028c94:	6994      	ldr	r4, [r2, #24]
90028c96:	42a3      	cmp	r3, r4
90028c98:	db01      	blt.n	90028c9e <__sfputc_r+0x16>
90028c9a:	290a      	cmp	r1, #10
90028c9c:	d103      	bne.n	90028ca6 <__sfputc_r+0x1e>
90028c9e:	f85d 4b04 	ldr.w	r4, [sp], #4
90028ca2:	f7ff bd70 	b.w	90028786 <__swbuf_r>
90028ca6:	6813      	ldr	r3, [r2, #0]
90028ca8:	1c58      	adds	r0, r3, #1
90028caa:	6010      	str	r0, [r2, #0]
90028cac:	7019      	strb	r1, [r3, #0]
90028cae:	4608      	mov	r0, r1
90028cb0:	f85d 4b04 	ldr.w	r4, [sp], #4
90028cb4:	4770      	bx	lr

90028cb6 <__sfputs_r>:
90028cb6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028cb8:	4606      	mov	r6, r0
90028cba:	460f      	mov	r7, r1
90028cbc:	4614      	mov	r4, r2
90028cbe:	18d5      	adds	r5, r2, r3
90028cc0:	42ac      	cmp	r4, r5
90028cc2:	d101      	bne.n	90028cc8 <__sfputs_r+0x12>
90028cc4:	2000      	movs	r0, #0
90028cc6:	e007      	b.n	90028cd8 <__sfputs_r+0x22>
90028cc8:	f814 1b01 	ldrb.w	r1, [r4], #1
90028ccc:	463a      	mov	r2, r7
90028cce:	4630      	mov	r0, r6
90028cd0:	f7ff ffda 	bl	90028c88 <__sfputc_r>
90028cd4:	1c43      	adds	r3, r0, #1
90028cd6:	d1f3      	bne.n	90028cc0 <__sfputs_r+0xa>
90028cd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90028cdc <_vfiprintf_r>:
90028cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028ce0:	460d      	mov	r5, r1
90028ce2:	b09d      	sub	sp, #116	@ 0x74
90028ce4:	4614      	mov	r4, r2
90028ce6:	4698      	mov	r8, r3
90028ce8:	4606      	mov	r6, r0
90028cea:	b118      	cbz	r0, 90028cf4 <_vfiprintf_r+0x18>
90028cec:	6a03      	ldr	r3, [r0, #32]
90028cee:	b90b      	cbnz	r3, 90028cf4 <_vfiprintf_r+0x18>
90028cf0:	f7ff fcbe 	bl	90028670 <__sinit>
90028cf4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90028cf6:	07d9      	lsls	r1, r3, #31
90028cf8:	d405      	bmi.n	90028d06 <_vfiprintf_r+0x2a>
90028cfa:	89ab      	ldrh	r3, [r5, #12]
90028cfc:	059a      	lsls	r2, r3, #22
90028cfe:	d402      	bmi.n	90028d06 <_vfiprintf_r+0x2a>
90028d00:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90028d02:	f7ff ff0a 	bl	90028b1a <__retarget_lock_acquire_recursive>
90028d06:	89ab      	ldrh	r3, [r5, #12]
90028d08:	071b      	lsls	r3, r3, #28
90028d0a:	d501      	bpl.n	90028d10 <_vfiprintf_r+0x34>
90028d0c:	692b      	ldr	r3, [r5, #16]
90028d0e:	b99b      	cbnz	r3, 90028d38 <_vfiprintf_r+0x5c>
90028d10:	4629      	mov	r1, r5
90028d12:	4630      	mov	r0, r6
90028d14:	f7ff fd76 	bl	90028804 <__swsetup_r>
90028d18:	b170      	cbz	r0, 90028d38 <_vfiprintf_r+0x5c>
90028d1a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90028d1c:	07dc      	lsls	r4, r3, #31
90028d1e:	d504      	bpl.n	90028d2a <_vfiprintf_r+0x4e>
90028d20:	f04f 30ff 	mov.w	r0, #4294967295
90028d24:	b01d      	add	sp, #116	@ 0x74
90028d26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028d2a:	89ab      	ldrh	r3, [r5, #12]
90028d2c:	0598      	lsls	r0, r3, #22
90028d2e:	d4f7      	bmi.n	90028d20 <_vfiprintf_r+0x44>
90028d30:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90028d32:	f7ff fef3 	bl	90028b1c <__retarget_lock_release_recursive>
90028d36:	e7f3      	b.n	90028d20 <_vfiprintf_r+0x44>
90028d38:	2300      	movs	r3, #0
90028d3a:	9309      	str	r3, [sp, #36]	@ 0x24
90028d3c:	2320      	movs	r3, #32
90028d3e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
90028d42:	f8cd 800c 	str.w	r8, [sp, #12]
90028d46:	2330      	movs	r3, #48	@ 0x30
90028d48:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 90028ef8 <_vfiprintf_r+0x21c>
90028d4c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
90028d50:	f04f 0901 	mov.w	r9, #1
90028d54:	4623      	mov	r3, r4
90028d56:	469a      	mov	sl, r3
90028d58:	f813 2b01 	ldrb.w	r2, [r3], #1
90028d5c:	b10a      	cbz	r2, 90028d62 <_vfiprintf_r+0x86>
90028d5e:	2a25      	cmp	r2, #37	@ 0x25
90028d60:	d1f9      	bne.n	90028d56 <_vfiprintf_r+0x7a>
90028d62:	ebba 0b04 	subs.w	fp, sl, r4
90028d66:	d00b      	beq.n	90028d80 <_vfiprintf_r+0xa4>
90028d68:	465b      	mov	r3, fp
90028d6a:	4622      	mov	r2, r4
90028d6c:	4629      	mov	r1, r5
90028d6e:	4630      	mov	r0, r6
90028d70:	f7ff ffa1 	bl	90028cb6 <__sfputs_r>
90028d74:	3001      	adds	r0, #1
90028d76:	f000 80a7 	beq.w	90028ec8 <_vfiprintf_r+0x1ec>
90028d7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028d7c:	445a      	add	r2, fp
90028d7e:	9209      	str	r2, [sp, #36]	@ 0x24
90028d80:	f89a 3000 	ldrb.w	r3, [sl]
90028d84:	2b00      	cmp	r3, #0
90028d86:	f000 809f 	beq.w	90028ec8 <_vfiprintf_r+0x1ec>
90028d8a:	2300      	movs	r3, #0
90028d8c:	f04f 32ff 	mov.w	r2, #4294967295
90028d90:	e9cd 2305 	strd	r2, r3, [sp, #20]
90028d94:	f10a 0a01 	add.w	sl, sl, #1
90028d98:	9304      	str	r3, [sp, #16]
90028d9a:	9307      	str	r3, [sp, #28]
90028d9c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
90028da0:	931a      	str	r3, [sp, #104]	@ 0x68
90028da2:	4654      	mov	r4, sl
90028da4:	2205      	movs	r2, #5
90028da6:	f814 1b01 	ldrb.w	r1, [r4], #1
90028daa:	4853      	ldr	r0, [pc, #332]	@ (90028ef8 <_vfiprintf_r+0x21c>)
90028dac:	f7d7 fa98 	bl	900002e0 <memchr>
90028db0:	9a04      	ldr	r2, [sp, #16]
90028db2:	b9d8      	cbnz	r0, 90028dec <_vfiprintf_r+0x110>
90028db4:	06d1      	lsls	r1, r2, #27
90028db6:	bf44      	itt	mi
90028db8:	2320      	movmi	r3, #32
90028dba:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
90028dbe:	0713      	lsls	r3, r2, #28
90028dc0:	bf44      	itt	mi
90028dc2:	232b      	movmi	r3, #43	@ 0x2b
90028dc4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
90028dc8:	f89a 3000 	ldrb.w	r3, [sl]
90028dcc:	2b2a      	cmp	r3, #42	@ 0x2a
90028dce:	d015      	beq.n	90028dfc <_vfiprintf_r+0x120>
90028dd0:	9a07      	ldr	r2, [sp, #28]
90028dd2:	4654      	mov	r4, sl
90028dd4:	2000      	movs	r0, #0
90028dd6:	f04f 0c0a 	mov.w	ip, #10
90028dda:	4621      	mov	r1, r4
90028ddc:	f811 3b01 	ldrb.w	r3, [r1], #1
90028de0:	3b30      	subs	r3, #48	@ 0x30
90028de2:	2b09      	cmp	r3, #9
90028de4:	d94b      	bls.n	90028e7e <_vfiprintf_r+0x1a2>
90028de6:	b1b0      	cbz	r0, 90028e16 <_vfiprintf_r+0x13a>
90028de8:	9207      	str	r2, [sp, #28]
90028dea:	e014      	b.n	90028e16 <_vfiprintf_r+0x13a>
90028dec:	eba0 0308 	sub.w	r3, r0, r8
90028df0:	fa09 f303 	lsl.w	r3, r9, r3
90028df4:	4313      	orrs	r3, r2
90028df6:	9304      	str	r3, [sp, #16]
90028df8:	46a2      	mov	sl, r4
90028dfa:	e7d2      	b.n	90028da2 <_vfiprintf_r+0xc6>
90028dfc:	9b03      	ldr	r3, [sp, #12]
90028dfe:	1d19      	adds	r1, r3, #4
90028e00:	681b      	ldr	r3, [r3, #0]
90028e02:	9103      	str	r1, [sp, #12]
90028e04:	2b00      	cmp	r3, #0
90028e06:	bfbb      	ittet	lt
90028e08:	425b      	neglt	r3, r3
90028e0a:	f042 0202 	orrlt.w	r2, r2, #2
90028e0e:	9307      	strge	r3, [sp, #28]
90028e10:	9307      	strlt	r3, [sp, #28]
90028e12:	bfb8      	it	lt
90028e14:	9204      	strlt	r2, [sp, #16]
90028e16:	7823      	ldrb	r3, [r4, #0]
90028e18:	2b2e      	cmp	r3, #46	@ 0x2e
90028e1a:	d10a      	bne.n	90028e32 <_vfiprintf_r+0x156>
90028e1c:	7863      	ldrb	r3, [r4, #1]
90028e1e:	2b2a      	cmp	r3, #42	@ 0x2a
90028e20:	d132      	bne.n	90028e88 <_vfiprintf_r+0x1ac>
90028e22:	9b03      	ldr	r3, [sp, #12]
90028e24:	1d1a      	adds	r2, r3, #4
90028e26:	681b      	ldr	r3, [r3, #0]
90028e28:	9203      	str	r2, [sp, #12]
90028e2a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
90028e2e:	3402      	adds	r4, #2
90028e30:	9305      	str	r3, [sp, #20]
90028e32:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 90028f08 <_vfiprintf_r+0x22c>
90028e36:	7821      	ldrb	r1, [r4, #0]
90028e38:	2203      	movs	r2, #3
90028e3a:	4650      	mov	r0, sl
90028e3c:	f7d7 fa50 	bl	900002e0 <memchr>
90028e40:	b138      	cbz	r0, 90028e52 <_vfiprintf_r+0x176>
90028e42:	9b04      	ldr	r3, [sp, #16]
90028e44:	eba0 000a 	sub.w	r0, r0, sl
90028e48:	2240      	movs	r2, #64	@ 0x40
90028e4a:	4082      	lsls	r2, r0
90028e4c:	4313      	orrs	r3, r2
90028e4e:	3401      	adds	r4, #1
90028e50:	9304      	str	r3, [sp, #16]
90028e52:	f814 1b01 	ldrb.w	r1, [r4], #1
90028e56:	4829      	ldr	r0, [pc, #164]	@ (90028efc <_vfiprintf_r+0x220>)
90028e58:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
90028e5c:	2206      	movs	r2, #6
90028e5e:	f7d7 fa3f 	bl	900002e0 <memchr>
90028e62:	2800      	cmp	r0, #0
90028e64:	d03f      	beq.n	90028ee6 <_vfiprintf_r+0x20a>
90028e66:	4b26      	ldr	r3, [pc, #152]	@ (90028f00 <_vfiprintf_r+0x224>)
90028e68:	bb1b      	cbnz	r3, 90028eb2 <_vfiprintf_r+0x1d6>
90028e6a:	9b03      	ldr	r3, [sp, #12]
90028e6c:	3307      	adds	r3, #7
90028e6e:	f023 0307 	bic.w	r3, r3, #7
90028e72:	3308      	adds	r3, #8
90028e74:	9303      	str	r3, [sp, #12]
90028e76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028e78:	443b      	add	r3, r7
90028e7a:	9309      	str	r3, [sp, #36]	@ 0x24
90028e7c:	e76a      	b.n	90028d54 <_vfiprintf_r+0x78>
90028e7e:	fb0c 3202 	mla	r2, ip, r2, r3
90028e82:	460c      	mov	r4, r1
90028e84:	2001      	movs	r0, #1
90028e86:	e7a8      	b.n	90028dda <_vfiprintf_r+0xfe>
90028e88:	2300      	movs	r3, #0
90028e8a:	3401      	adds	r4, #1
90028e8c:	9305      	str	r3, [sp, #20]
90028e8e:	4619      	mov	r1, r3
90028e90:	f04f 0c0a 	mov.w	ip, #10
90028e94:	4620      	mov	r0, r4
90028e96:	f810 2b01 	ldrb.w	r2, [r0], #1
90028e9a:	3a30      	subs	r2, #48	@ 0x30
90028e9c:	2a09      	cmp	r2, #9
90028e9e:	d903      	bls.n	90028ea8 <_vfiprintf_r+0x1cc>
90028ea0:	2b00      	cmp	r3, #0
90028ea2:	d0c6      	beq.n	90028e32 <_vfiprintf_r+0x156>
90028ea4:	9105      	str	r1, [sp, #20]
90028ea6:	e7c4      	b.n	90028e32 <_vfiprintf_r+0x156>
90028ea8:	fb0c 2101 	mla	r1, ip, r1, r2
90028eac:	4604      	mov	r4, r0
90028eae:	2301      	movs	r3, #1
90028eb0:	e7f0      	b.n	90028e94 <_vfiprintf_r+0x1b8>
90028eb2:	ab03      	add	r3, sp, #12
90028eb4:	9300      	str	r3, [sp, #0]
90028eb6:	462a      	mov	r2, r5
90028eb8:	4b12      	ldr	r3, [pc, #72]	@ (90028f04 <_vfiprintf_r+0x228>)
90028eba:	a904      	add	r1, sp, #16
90028ebc:	4630      	mov	r0, r6
90028ebe:	f3af 8000 	nop.w
90028ec2:	4607      	mov	r7, r0
90028ec4:	1c78      	adds	r0, r7, #1
90028ec6:	d1d6      	bne.n	90028e76 <_vfiprintf_r+0x19a>
90028ec8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90028eca:	07d9      	lsls	r1, r3, #31
90028ecc:	d405      	bmi.n	90028eda <_vfiprintf_r+0x1fe>
90028ece:	89ab      	ldrh	r3, [r5, #12]
90028ed0:	059a      	lsls	r2, r3, #22
90028ed2:	d402      	bmi.n	90028eda <_vfiprintf_r+0x1fe>
90028ed4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90028ed6:	f7ff fe21 	bl	90028b1c <__retarget_lock_release_recursive>
90028eda:	89ab      	ldrh	r3, [r5, #12]
90028edc:	065b      	lsls	r3, r3, #25
90028ede:	f53f af1f 	bmi.w	90028d20 <_vfiprintf_r+0x44>
90028ee2:	9809      	ldr	r0, [sp, #36]	@ 0x24
90028ee4:	e71e      	b.n	90028d24 <_vfiprintf_r+0x48>
90028ee6:	ab03      	add	r3, sp, #12
90028ee8:	9300      	str	r3, [sp, #0]
90028eea:	462a      	mov	r2, r5
90028eec:	4b05      	ldr	r3, [pc, #20]	@ (90028f04 <_vfiprintf_r+0x228>)
90028eee:	a904      	add	r1, sp, #16
90028ef0:	4630      	mov	r0, r6
90028ef2:	f000 f879 	bl	90028fe8 <_printf_i>
90028ef6:	e7e4      	b.n	90028ec2 <_vfiprintf_r+0x1e6>
90028ef8:	9002c8b0 	.word	0x9002c8b0
90028efc:	9002c8ba 	.word	0x9002c8ba
90028f00:	00000000 	.word	0x00000000
90028f04:	90028cb7 	.word	0x90028cb7
90028f08:	9002c8b6 	.word	0x9002c8b6

90028f0c <_printf_common>:
90028f0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028f10:	4616      	mov	r6, r2
90028f12:	4698      	mov	r8, r3
90028f14:	688a      	ldr	r2, [r1, #8]
90028f16:	690b      	ldr	r3, [r1, #16]
90028f18:	f8dd 9020 	ldr.w	r9, [sp, #32]
90028f1c:	4293      	cmp	r3, r2
90028f1e:	bfb8      	it	lt
90028f20:	4613      	movlt	r3, r2
90028f22:	6033      	str	r3, [r6, #0]
90028f24:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
90028f28:	4607      	mov	r7, r0
90028f2a:	460c      	mov	r4, r1
90028f2c:	b10a      	cbz	r2, 90028f32 <_printf_common+0x26>
90028f2e:	3301      	adds	r3, #1
90028f30:	6033      	str	r3, [r6, #0]
90028f32:	6823      	ldr	r3, [r4, #0]
90028f34:	0699      	lsls	r1, r3, #26
90028f36:	bf42      	ittt	mi
90028f38:	6833      	ldrmi	r3, [r6, #0]
90028f3a:	3302      	addmi	r3, #2
90028f3c:	6033      	strmi	r3, [r6, #0]
90028f3e:	6825      	ldr	r5, [r4, #0]
90028f40:	f015 0506 	ands.w	r5, r5, #6
90028f44:	d106      	bne.n	90028f54 <_printf_common+0x48>
90028f46:	f104 0a19 	add.w	sl, r4, #25
90028f4a:	68e3      	ldr	r3, [r4, #12]
90028f4c:	6832      	ldr	r2, [r6, #0]
90028f4e:	1a9b      	subs	r3, r3, r2
90028f50:	42ab      	cmp	r3, r5
90028f52:	dc26      	bgt.n	90028fa2 <_printf_common+0x96>
90028f54:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
90028f58:	6822      	ldr	r2, [r4, #0]
90028f5a:	3b00      	subs	r3, #0
90028f5c:	bf18      	it	ne
90028f5e:	2301      	movne	r3, #1
90028f60:	0692      	lsls	r2, r2, #26
90028f62:	d42b      	bmi.n	90028fbc <_printf_common+0xb0>
90028f64:	f104 0243 	add.w	r2, r4, #67	@ 0x43
90028f68:	4641      	mov	r1, r8
90028f6a:	4638      	mov	r0, r7
90028f6c:	47c8      	blx	r9
90028f6e:	3001      	adds	r0, #1
90028f70:	d01e      	beq.n	90028fb0 <_printf_common+0xa4>
90028f72:	6823      	ldr	r3, [r4, #0]
90028f74:	6922      	ldr	r2, [r4, #16]
90028f76:	f003 0306 	and.w	r3, r3, #6
90028f7a:	2b04      	cmp	r3, #4
90028f7c:	bf02      	ittt	eq
90028f7e:	68e5      	ldreq	r5, [r4, #12]
90028f80:	6833      	ldreq	r3, [r6, #0]
90028f82:	1aed      	subeq	r5, r5, r3
90028f84:	68a3      	ldr	r3, [r4, #8]
90028f86:	bf0c      	ite	eq
90028f88:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90028f8c:	2500      	movne	r5, #0
90028f8e:	4293      	cmp	r3, r2
90028f90:	bfc4      	itt	gt
90028f92:	1a9b      	subgt	r3, r3, r2
90028f94:	18ed      	addgt	r5, r5, r3
90028f96:	2600      	movs	r6, #0
90028f98:	341a      	adds	r4, #26
90028f9a:	42b5      	cmp	r5, r6
90028f9c:	d11a      	bne.n	90028fd4 <_printf_common+0xc8>
90028f9e:	2000      	movs	r0, #0
90028fa0:	e008      	b.n	90028fb4 <_printf_common+0xa8>
90028fa2:	2301      	movs	r3, #1
90028fa4:	4652      	mov	r2, sl
90028fa6:	4641      	mov	r1, r8
90028fa8:	4638      	mov	r0, r7
90028faa:	47c8      	blx	r9
90028fac:	3001      	adds	r0, #1
90028fae:	d103      	bne.n	90028fb8 <_printf_common+0xac>
90028fb0:	f04f 30ff 	mov.w	r0, #4294967295
90028fb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028fb8:	3501      	adds	r5, #1
90028fba:	e7c6      	b.n	90028f4a <_printf_common+0x3e>
90028fbc:	18e1      	adds	r1, r4, r3
90028fbe:	1c5a      	adds	r2, r3, #1
90028fc0:	2030      	movs	r0, #48	@ 0x30
90028fc2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
90028fc6:	4422      	add	r2, r4
90028fc8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
90028fcc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
90028fd0:	3302      	adds	r3, #2
90028fd2:	e7c7      	b.n	90028f64 <_printf_common+0x58>
90028fd4:	2301      	movs	r3, #1
90028fd6:	4622      	mov	r2, r4
90028fd8:	4641      	mov	r1, r8
90028fda:	4638      	mov	r0, r7
90028fdc:	47c8      	blx	r9
90028fde:	3001      	adds	r0, #1
90028fe0:	d0e6      	beq.n	90028fb0 <_printf_common+0xa4>
90028fe2:	3601      	adds	r6, #1
90028fe4:	e7d9      	b.n	90028f9a <_printf_common+0x8e>
	...

90028fe8 <_printf_i>:
90028fe8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90028fec:	7e0f      	ldrb	r7, [r1, #24]
90028fee:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90028ff0:	2f78      	cmp	r7, #120	@ 0x78
90028ff2:	4691      	mov	r9, r2
90028ff4:	4680      	mov	r8, r0
90028ff6:	460c      	mov	r4, r1
90028ff8:	469a      	mov	sl, r3
90028ffa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
90028ffe:	d807      	bhi.n	90029010 <_printf_i+0x28>
90029000:	2f62      	cmp	r7, #98	@ 0x62
90029002:	d80a      	bhi.n	9002901a <_printf_i+0x32>
90029004:	2f00      	cmp	r7, #0
90029006:	f000 80d2 	beq.w	900291ae <_printf_i+0x1c6>
9002900a:	2f58      	cmp	r7, #88	@ 0x58
9002900c:	f000 80b9 	beq.w	90029182 <_printf_i+0x19a>
90029010:	f104 0642 	add.w	r6, r4, #66	@ 0x42
90029014:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
90029018:	e03a      	b.n	90029090 <_printf_i+0xa8>
9002901a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002901e:	2b15      	cmp	r3, #21
90029020:	d8f6      	bhi.n	90029010 <_printf_i+0x28>
90029022:	a101      	add	r1, pc, #4	@ (adr r1, 90029028 <_printf_i+0x40>)
90029024:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90029028:	90029081 	.word	0x90029081
9002902c:	90029095 	.word	0x90029095
90029030:	90029011 	.word	0x90029011
90029034:	90029011 	.word	0x90029011
90029038:	90029011 	.word	0x90029011
9002903c:	90029011 	.word	0x90029011
90029040:	90029095 	.word	0x90029095
90029044:	90029011 	.word	0x90029011
90029048:	90029011 	.word	0x90029011
9002904c:	90029011 	.word	0x90029011
90029050:	90029011 	.word	0x90029011
90029054:	90029195 	.word	0x90029195
90029058:	900290bf 	.word	0x900290bf
9002905c:	9002914f 	.word	0x9002914f
90029060:	90029011 	.word	0x90029011
90029064:	90029011 	.word	0x90029011
90029068:	900291b7 	.word	0x900291b7
9002906c:	90029011 	.word	0x90029011
90029070:	900290bf 	.word	0x900290bf
90029074:	90029011 	.word	0x90029011
90029078:	90029011 	.word	0x90029011
9002907c:	90029157 	.word	0x90029157
90029080:	6833      	ldr	r3, [r6, #0]
90029082:	1d1a      	adds	r2, r3, #4
90029084:	681b      	ldr	r3, [r3, #0]
90029086:	6032      	str	r2, [r6, #0]
90029088:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002908c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
90029090:	2301      	movs	r3, #1
90029092:	e09d      	b.n	900291d0 <_printf_i+0x1e8>
90029094:	6833      	ldr	r3, [r6, #0]
90029096:	6820      	ldr	r0, [r4, #0]
90029098:	1d19      	adds	r1, r3, #4
9002909a:	6031      	str	r1, [r6, #0]
9002909c:	0606      	lsls	r6, r0, #24
9002909e:	d501      	bpl.n	900290a4 <_printf_i+0xbc>
900290a0:	681d      	ldr	r5, [r3, #0]
900290a2:	e003      	b.n	900290ac <_printf_i+0xc4>
900290a4:	0645      	lsls	r5, r0, #25
900290a6:	d5fb      	bpl.n	900290a0 <_printf_i+0xb8>
900290a8:	f9b3 5000 	ldrsh.w	r5, [r3]
900290ac:	2d00      	cmp	r5, #0
900290ae:	da03      	bge.n	900290b8 <_printf_i+0xd0>
900290b0:	232d      	movs	r3, #45	@ 0x2d
900290b2:	426d      	negs	r5, r5
900290b4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
900290b8:	4859      	ldr	r0, [pc, #356]	@ (90029220 <_printf_i+0x238>)
900290ba:	230a      	movs	r3, #10
900290bc:	e011      	b.n	900290e2 <_printf_i+0xfa>
900290be:	6821      	ldr	r1, [r4, #0]
900290c0:	6833      	ldr	r3, [r6, #0]
900290c2:	0608      	lsls	r0, r1, #24
900290c4:	f853 5b04 	ldr.w	r5, [r3], #4
900290c8:	d402      	bmi.n	900290d0 <_printf_i+0xe8>
900290ca:	0649      	lsls	r1, r1, #25
900290cc:	bf48      	it	mi
900290ce:	b2ad      	uxthmi	r5, r5
900290d0:	2f6f      	cmp	r7, #111	@ 0x6f
900290d2:	4853      	ldr	r0, [pc, #332]	@ (90029220 <_printf_i+0x238>)
900290d4:	6033      	str	r3, [r6, #0]
900290d6:	bf14      	ite	ne
900290d8:	230a      	movne	r3, #10
900290da:	2308      	moveq	r3, #8
900290dc:	2100      	movs	r1, #0
900290de:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
900290e2:	6866      	ldr	r6, [r4, #4]
900290e4:	60a6      	str	r6, [r4, #8]
900290e6:	2e00      	cmp	r6, #0
900290e8:	bfa2      	ittt	ge
900290ea:	6821      	ldrge	r1, [r4, #0]
900290ec:	f021 0104 	bicge.w	r1, r1, #4
900290f0:	6021      	strge	r1, [r4, #0]
900290f2:	b90d      	cbnz	r5, 900290f8 <_printf_i+0x110>
900290f4:	2e00      	cmp	r6, #0
900290f6:	d04b      	beq.n	90029190 <_printf_i+0x1a8>
900290f8:	4616      	mov	r6, r2
900290fa:	fbb5 f1f3 	udiv	r1, r5, r3
900290fe:	fb03 5711 	mls	r7, r3, r1, r5
90029102:	5dc7      	ldrb	r7, [r0, r7]
90029104:	f806 7d01 	strb.w	r7, [r6, #-1]!
90029108:	462f      	mov	r7, r5
9002910a:	42bb      	cmp	r3, r7
9002910c:	460d      	mov	r5, r1
9002910e:	d9f4      	bls.n	900290fa <_printf_i+0x112>
90029110:	2b08      	cmp	r3, #8
90029112:	d10b      	bne.n	9002912c <_printf_i+0x144>
90029114:	6823      	ldr	r3, [r4, #0]
90029116:	07df      	lsls	r7, r3, #31
90029118:	d508      	bpl.n	9002912c <_printf_i+0x144>
9002911a:	6923      	ldr	r3, [r4, #16]
9002911c:	6861      	ldr	r1, [r4, #4]
9002911e:	4299      	cmp	r1, r3
90029120:	bfde      	ittt	le
90029122:	2330      	movle	r3, #48	@ 0x30
90029124:	f806 3c01 	strble.w	r3, [r6, #-1]
90029128:	f106 36ff 	addle.w	r6, r6, #4294967295
9002912c:	1b92      	subs	r2, r2, r6
9002912e:	6122      	str	r2, [r4, #16]
90029130:	f8cd a000 	str.w	sl, [sp]
90029134:	464b      	mov	r3, r9
90029136:	aa03      	add	r2, sp, #12
90029138:	4621      	mov	r1, r4
9002913a:	4640      	mov	r0, r8
9002913c:	f7ff fee6 	bl	90028f0c <_printf_common>
90029140:	3001      	adds	r0, #1
90029142:	d14a      	bne.n	900291da <_printf_i+0x1f2>
90029144:	f04f 30ff 	mov.w	r0, #4294967295
90029148:	b004      	add	sp, #16
9002914a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002914e:	6823      	ldr	r3, [r4, #0]
90029150:	f043 0320 	orr.w	r3, r3, #32
90029154:	6023      	str	r3, [r4, #0]
90029156:	4833      	ldr	r0, [pc, #204]	@ (90029224 <_printf_i+0x23c>)
90029158:	2778      	movs	r7, #120	@ 0x78
9002915a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002915e:	6823      	ldr	r3, [r4, #0]
90029160:	6831      	ldr	r1, [r6, #0]
90029162:	061f      	lsls	r7, r3, #24
90029164:	f851 5b04 	ldr.w	r5, [r1], #4
90029168:	d402      	bmi.n	90029170 <_printf_i+0x188>
9002916a:	065f      	lsls	r7, r3, #25
9002916c:	bf48      	it	mi
9002916e:	b2ad      	uxthmi	r5, r5
90029170:	6031      	str	r1, [r6, #0]
90029172:	07d9      	lsls	r1, r3, #31
90029174:	bf44      	itt	mi
90029176:	f043 0320 	orrmi.w	r3, r3, #32
9002917a:	6023      	strmi	r3, [r4, #0]
9002917c:	b11d      	cbz	r5, 90029186 <_printf_i+0x19e>
9002917e:	2310      	movs	r3, #16
90029180:	e7ac      	b.n	900290dc <_printf_i+0xf4>
90029182:	4827      	ldr	r0, [pc, #156]	@ (90029220 <_printf_i+0x238>)
90029184:	e7e9      	b.n	9002915a <_printf_i+0x172>
90029186:	6823      	ldr	r3, [r4, #0]
90029188:	f023 0320 	bic.w	r3, r3, #32
9002918c:	6023      	str	r3, [r4, #0]
9002918e:	e7f6      	b.n	9002917e <_printf_i+0x196>
90029190:	4616      	mov	r6, r2
90029192:	e7bd      	b.n	90029110 <_printf_i+0x128>
90029194:	6833      	ldr	r3, [r6, #0]
90029196:	6825      	ldr	r5, [r4, #0]
90029198:	6961      	ldr	r1, [r4, #20]
9002919a:	1d18      	adds	r0, r3, #4
9002919c:	6030      	str	r0, [r6, #0]
9002919e:	062e      	lsls	r6, r5, #24
900291a0:	681b      	ldr	r3, [r3, #0]
900291a2:	d501      	bpl.n	900291a8 <_printf_i+0x1c0>
900291a4:	6019      	str	r1, [r3, #0]
900291a6:	e002      	b.n	900291ae <_printf_i+0x1c6>
900291a8:	0668      	lsls	r0, r5, #25
900291aa:	d5fb      	bpl.n	900291a4 <_printf_i+0x1bc>
900291ac:	8019      	strh	r1, [r3, #0]
900291ae:	2300      	movs	r3, #0
900291b0:	6123      	str	r3, [r4, #16]
900291b2:	4616      	mov	r6, r2
900291b4:	e7bc      	b.n	90029130 <_printf_i+0x148>
900291b6:	6833      	ldr	r3, [r6, #0]
900291b8:	1d1a      	adds	r2, r3, #4
900291ba:	6032      	str	r2, [r6, #0]
900291bc:	681e      	ldr	r6, [r3, #0]
900291be:	6862      	ldr	r2, [r4, #4]
900291c0:	2100      	movs	r1, #0
900291c2:	4630      	mov	r0, r6
900291c4:	f7d7 f88c 	bl	900002e0 <memchr>
900291c8:	b108      	cbz	r0, 900291ce <_printf_i+0x1e6>
900291ca:	1b80      	subs	r0, r0, r6
900291cc:	6060      	str	r0, [r4, #4]
900291ce:	6863      	ldr	r3, [r4, #4]
900291d0:	6123      	str	r3, [r4, #16]
900291d2:	2300      	movs	r3, #0
900291d4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
900291d8:	e7aa      	b.n	90029130 <_printf_i+0x148>
900291da:	6923      	ldr	r3, [r4, #16]
900291dc:	4632      	mov	r2, r6
900291de:	4649      	mov	r1, r9
900291e0:	4640      	mov	r0, r8
900291e2:	47d0      	blx	sl
900291e4:	3001      	adds	r0, #1
900291e6:	d0ad      	beq.n	90029144 <_printf_i+0x15c>
900291e8:	6823      	ldr	r3, [r4, #0]
900291ea:	079b      	lsls	r3, r3, #30
900291ec:	d413      	bmi.n	90029216 <_printf_i+0x22e>
900291ee:	68e0      	ldr	r0, [r4, #12]
900291f0:	9b03      	ldr	r3, [sp, #12]
900291f2:	4298      	cmp	r0, r3
900291f4:	bfb8      	it	lt
900291f6:	4618      	movlt	r0, r3
900291f8:	e7a6      	b.n	90029148 <_printf_i+0x160>
900291fa:	2301      	movs	r3, #1
900291fc:	4632      	mov	r2, r6
900291fe:	4649      	mov	r1, r9
90029200:	4640      	mov	r0, r8
90029202:	47d0      	blx	sl
90029204:	3001      	adds	r0, #1
90029206:	d09d      	beq.n	90029144 <_printf_i+0x15c>
90029208:	3501      	adds	r5, #1
9002920a:	68e3      	ldr	r3, [r4, #12]
9002920c:	9903      	ldr	r1, [sp, #12]
9002920e:	1a5b      	subs	r3, r3, r1
90029210:	42ab      	cmp	r3, r5
90029212:	dcf2      	bgt.n	900291fa <_printf_i+0x212>
90029214:	e7eb      	b.n	900291ee <_printf_i+0x206>
90029216:	2500      	movs	r5, #0
90029218:	f104 0619 	add.w	r6, r4, #25
9002921c:	e7f5      	b.n	9002920a <_printf_i+0x222>
9002921e:	bf00      	nop
90029220:	9002c8c1 	.word	0x9002c8c1
90029224:	9002c8d2 	.word	0x9002c8d2

90029228 <__sflush_r>:
90029228:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002922c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90029230:	0716      	lsls	r6, r2, #28
90029232:	4605      	mov	r5, r0
90029234:	460c      	mov	r4, r1
90029236:	d454      	bmi.n	900292e2 <__sflush_r+0xba>
90029238:	684b      	ldr	r3, [r1, #4]
9002923a:	2b00      	cmp	r3, #0
9002923c:	dc02      	bgt.n	90029244 <__sflush_r+0x1c>
9002923e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
90029240:	2b00      	cmp	r3, #0
90029242:	dd48      	ble.n	900292d6 <__sflush_r+0xae>
90029244:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90029246:	2e00      	cmp	r6, #0
90029248:	d045      	beq.n	900292d6 <__sflush_r+0xae>
9002924a:	2300      	movs	r3, #0
9002924c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
90029250:	682f      	ldr	r7, [r5, #0]
90029252:	6a21      	ldr	r1, [r4, #32]
90029254:	602b      	str	r3, [r5, #0]
90029256:	d030      	beq.n	900292ba <__sflush_r+0x92>
90029258:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002925a:	89a3      	ldrh	r3, [r4, #12]
9002925c:	0759      	lsls	r1, r3, #29
9002925e:	d505      	bpl.n	9002926c <__sflush_r+0x44>
90029260:	6863      	ldr	r3, [r4, #4]
90029262:	1ad2      	subs	r2, r2, r3
90029264:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90029266:	b10b      	cbz	r3, 9002926c <__sflush_r+0x44>
90029268:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002926a:	1ad2      	subs	r2, r2, r3
9002926c:	2300      	movs	r3, #0
9002926e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90029270:	6a21      	ldr	r1, [r4, #32]
90029272:	4628      	mov	r0, r5
90029274:	47b0      	blx	r6
90029276:	1c43      	adds	r3, r0, #1
90029278:	89a3      	ldrh	r3, [r4, #12]
9002927a:	d106      	bne.n	9002928a <__sflush_r+0x62>
9002927c:	6829      	ldr	r1, [r5, #0]
9002927e:	291d      	cmp	r1, #29
90029280:	d82b      	bhi.n	900292da <__sflush_r+0xb2>
90029282:	4a2a      	ldr	r2, [pc, #168]	@ (9002932c <__sflush_r+0x104>)
90029284:	410a      	asrs	r2, r1
90029286:	07d6      	lsls	r6, r2, #31
90029288:	d427      	bmi.n	900292da <__sflush_r+0xb2>
9002928a:	2200      	movs	r2, #0
9002928c:	6062      	str	r2, [r4, #4]
9002928e:	04d9      	lsls	r1, r3, #19
90029290:	6922      	ldr	r2, [r4, #16]
90029292:	6022      	str	r2, [r4, #0]
90029294:	d504      	bpl.n	900292a0 <__sflush_r+0x78>
90029296:	1c42      	adds	r2, r0, #1
90029298:	d101      	bne.n	9002929e <__sflush_r+0x76>
9002929a:	682b      	ldr	r3, [r5, #0]
9002929c:	b903      	cbnz	r3, 900292a0 <__sflush_r+0x78>
9002929e:	6560      	str	r0, [r4, #84]	@ 0x54
900292a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900292a2:	602f      	str	r7, [r5, #0]
900292a4:	b1b9      	cbz	r1, 900292d6 <__sflush_r+0xae>
900292a6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
900292aa:	4299      	cmp	r1, r3
900292ac:	d002      	beq.n	900292b4 <__sflush_r+0x8c>
900292ae:	4628      	mov	r0, r5
900292b0:	f7ff fca0 	bl	90028bf4 <_free_r>
900292b4:	2300      	movs	r3, #0
900292b6:	6363      	str	r3, [r4, #52]	@ 0x34
900292b8:	e00d      	b.n	900292d6 <__sflush_r+0xae>
900292ba:	2301      	movs	r3, #1
900292bc:	4628      	mov	r0, r5
900292be:	47b0      	blx	r6
900292c0:	4602      	mov	r2, r0
900292c2:	1c50      	adds	r0, r2, #1
900292c4:	d1c9      	bne.n	9002925a <__sflush_r+0x32>
900292c6:	682b      	ldr	r3, [r5, #0]
900292c8:	2b00      	cmp	r3, #0
900292ca:	d0c6      	beq.n	9002925a <__sflush_r+0x32>
900292cc:	2b1d      	cmp	r3, #29
900292ce:	d001      	beq.n	900292d4 <__sflush_r+0xac>
900292d0:	2b16      	cmp	r3, #22
900292d2:	d11e      	bne.n	90029312 <__sflush_r+0xea>
900292d4:	602f      	str	r7, [r5, #0]
900292d6:	2000      	movs	r0, #0
900292d8:	e022      	b.n	90029320 <__sflush_r+0xf8>
900292da:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
900292de:	b21b      	sxth	r3, r3
900292e0:	e01b      	b.n	9002931a <__sflush_r+0xf2>
900292e2:	690f      	ldr	r7, [r1, #16]
900292e4:	2f00      	cmp	r7, #0
900292e6:	d0f6      	beq.n	900292d6 <__sflush_r+0xae>
900292e8:	0793      	lsls	r3, r2, #30
900292ea:	680e      	ldr	r6, [r1, #0]
900292ec:	bf08      	it	eq
900292ee:	694b      	ldreq	r3, [r1, #20]
900292f0:	600f      	str	r7, [r1, #0]
900292f2:	bf18      	it	ne
900292f4:	2300      	movne	r3, #0
900292f6:	eba6 0807 	sub.w	r8, r6, r7
900292fa:	608b      	str	r3, [r1, #8]
900292fc:	f1b8 0f00 	cmp.w	r8, #0
90029300:	dde9      	ble.n	900292d6 <__sflush_r+0xae>
90029302:	6a21      	ldr	r1, [r4, #32]
90029304:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
90029306:	4643      	mov	r3, r8
90029308:	463a      	mov	r2, r7
9002930a:	4628      	mov	r0, r5
9002930c:	47b0      	blx	r6
9002930e:	2800      	cmp	r0, #0
90029310:	dc08      	bgt.n	90029324 <__sflush_r+0xfc>
90029312:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029316:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002931a:	81a3      	strh	r3, [r4, #12]
9002931c:	f04f 30ff 	mov.w	r0, #4294967295
90029320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029324:	4407      	add	r7, r0
90029326:	eba8 0800 	sub.w	r8, r8, r0
9002932a:	e7e7      	b.n	900292fc <__sflush_r+0xd4>
9002932c:	dfbffffe 	.word	0xdfbffffe

90029330 <_fflush_r>:
90029330:	b538      	push	{r3, r4, r5, lr}
90029332:	690b      	ldr	r3, [r1, #16]
90029334:	4605      	mov	r5, r0
90029336:	460c      	mov	r4, r1
90029338:	b913      	cbnz	r3, 90029340 <_fflush_r+0x10>
9002933a:	2500      	movs	r5, #0
9002933c:	4628      	mov	r0, r5
9002933e:	bd38      	pop	{r3, r4, r5, pc}
90029340:	b118      	cbz	r0, 9002934a <_fflush_r+0x1a>
90029342:	6a03      	ldr	r3, [r0, #32]
90029344:	b90b      	cbnz	r3, 9002934a <_fflush_r+0x1a>
90029346:	f7ff f993 	bl	90028670 <__sinit>
9002934a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002934e:	2b00      	cmp	r3, #0
90029350:	d0f3      	beq.n	9002933a <_fflush_r+0xa>
90029352:	6e62      	ldr	r2, [r4, #100]	@ 0x64
90029354:	07d0      	lsls	r0, r2, #31
90029356:	d404      	bmi.n	90029362 <_fflush_r+0x32>
90029358:	0599      	lsls	r1, r3, #22
9002935a:	d402      	bmi.n	90029362 <_fflush_r+0x32>
9002935c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002935e:	f7ff fbdc 	bl	90028b1a <__retarget_lock_acquire_recursive>
90029362:	4628      	mov	r0, r5
90029364:	4621      	mov	r1, r4
90029366:	f7ff ff5f 	bl	90029228 <__sflush_r>
9002936a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002936c:	07da      	lsls	r2, r3, #31
9002936e:	4605      	mov	r5, r0
90029370:	d4e4      	bmi.n	9002933c <_fflush_r+0xc>
90029372:	89a3      	ldrh	r3, [r4, #12]
90029374:	059b      	lsls	r3, r3, #22
90029376:	d4e1      	bmi.n	9002933c <_fflush_r+0xc>
90029378:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002937a:	f7ff fbcf 	bl	90028b1c <__retarget_lock_release_recursive>
9002937e:	e7dd      	b.n	9002933c <_fflush_r+0xc>

90029380 <__swhatbuf_r>:
90029380:	b570      	push	{r4, r5, r6, lr}
90029382:	460c      	mov	r4, r1
90029384:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029388:	2900      	cmp	r1, #0
9002938a:	b096      	sub	sp, #88	@ 0x58
9002938c:	4615      	mov	r5, r2
9002938e:	461e      	mov	r6, r3
90029390:	da0d      	bge.n	900293ae <__swhatbuf_r+0x2e>
90029392:	89a3      	ldrh	r3, [r4, #12]
90029394:	f013 0f80 	tst.w	r3, #128	@ 0x80
90029398:	f04f 0100 	mov.w	r1, #0
9002939c:	bf14      	ite	ne
9002939e:	2340      	movne	r3, #64	@ 0x40
900293a0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
900293a4:	2000      	movs	r0, #0
900293a6:	6031      	str	r1, [r6, #0]
900293a8:	602b      	str	r3, [r5, #0]
900293aa:	b016      	add	sp, #88	@ 0x58
900293ac:	bd70      	pop	{r4, r5, r6, pc}
900293ae:	466a      	mov	r2, sp
900293b0:	f000 f848 	bl	90029444 <_fstat_r>
900293b4:	2800      	cmp	r0, #0
900293b6:	dbec      	blt.n	90029392 <__swhatbuf_r+0x12>
900293b8:	9901      	ldr	r1, [sp, #4]
900293ba:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
900293be:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
900293c2:	4259      	negs	r1, r3
900293c4:	4159      	adcs	r1, r3
900293c6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
900293ca:	e7eb      	b.n	900293a4 <__swhatbuf_r+0x24>

900293cc <__smakebuf_r>:
900293cc:	898b      	ldrh	r3, [r1, #12]
900293ce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900293d0:	079d      	lsls	r5, r3, #30
900293d2:	4606      	mov	r6, r0
900293d4:	460c      	mov	r4, r1
900293d6:	d507      	bpl.n	900293e8 <__smakebuf_r+0x1c>
900293d8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
900293dc:	6023      	str	r3, [r4, #0]
900293de:	6123      	str	r3, [r4, #16]
900293e0:	2301      	movs	r3, #1
900293e2:	6163      	str	r3, [r4, #20]
900293e4:	b003      	add	sp, #12
900293e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900293e8:	ab01      	add	r3, sp, #4
900293ea:	466a      	mov	r2, sp
900293ec:	f7ff ffc8 	bl	90029380 <__swhatbuf_r>
900293f0:	9f00      	ldr	r7, [sp, #0]
900293f2:	4605      	mov	r5, r0
900293f4:	4639      	mov	r1, r7
900293f6:	4630      	mov	r0, r6
900293f8:	f7ff f814 	bl	90028424 <_malloc_r>
900293fc:	b948      	cbnz	r0, 90029412 <__smakebuf_r+0x46>
900293fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029402:	059a      	lsls	r2, r3, #22
90029404:	d4ee      	bmi.n	900293e4 <__smakebuf_r+0x18>
90029406:	f023 0303 	bic.w	r3, r3, #3
9002940a:	f043 0302 	orr.w	r3, r3, #2
9002940e:	81a3      	strh	r3, [r4, #12]
90029410:	e7e2      	b.n	900293d8 <__smakebuf_r+0xc>
90029412:	89a3      	ldrh	r3, [r4, #12]
90029414:	6020      	str	r0, [r4, #0]
90029416:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002941a:	81a3      	strh	r3, [r4, #12]
9002941c:	9b01      	ldr	r3, [sp, #4]
9002941e:	e9c4 0704 	strd	r0, r7, [r4, #16]
90029422:	b15b      	cbz	r3, 9002943c <__smakebuf_r+0x70>
90029424:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90029428:	4630      	mov	r0, r6
9002942a:	f000 f81d 	bl	90029468 <_isatty_r>
9002942e:	b128      	cbz	r0, 9002943c <__smakebuf_r+0x70>
90029430:	89a3      	ldrh	r3, [r4, #12]
90029432:	f023 0303 	bic.w	r3, r3, #3
90029436:	f043 0301 	orr.w	r3, r3, #1
9002943a:	81a3      	strh	r3, [r4, #12]
9002943c:	89a3      	ldrh	r3, [r4, #12]
9002943e:	431d      	orrs	r5, r3
90029440:	81a5      	strh	r5, [r4, #12]
90029442:	e7cf      	b.n	900293e4 <__smakebuf_r+0x18>

90029444 <_fstat_r>:
90029444:	b538      	push	{r3, r4, r5, lr}
90029446:	4d07      	ldr	r5, [pc, #28]	@ (90029464 <_fstat_r+0x20>)
90029448:	2300      	movs	r3, #0
9002944a:	4604      	mov	r4, r0
9002944c:	4608      	mov	r0, r1
9002944e:	4611      	mov	r1, r2
90029450:	602b      	str	r3, [r5, #0]
90029452:	f7da ff53 	bl	900042fc <_fstat>
90029456:	1c43      	adds	r3, r0, #1
90029458:	d102      	bne.n	90029460 <_fstat_r+0x1c>
9002945a:	682b      	ldr	r3, [r5, #0]
9002945c:	b103      	cbz	r3, 90029460 <_fstat_r+0x1c>
9002945e:	6023      	str	r3, [r4, #0]
90029460:	bd38      	pop	{r3, r4, r5, pc}
90029462:	bf00      	nop
90029464:	24022454 	.word	0x24022454

90029468 <_isatty_r>:
90029468:	b538      	push	{r3, r4, r5, lr}
9002946a:	4d06      	ldr	r5, [pc, #24]	@ (90029484 <_isatty_r+0x1c>)
9002946c:	2300      	movs	r3, #0
9002946e:	4604      	mov	r4, r0
90029470:	4608      	mov	r0, r1
90029472:	602b      	str	r3, [r5, #0]
90029474:	f7da ff48 	bl	90004308 <_isatty>
90029478:	1c43      	adds	r3, r0, #1
9002947a:	d102      	bne.n	90029482 <_isatty_r+0x1a>
9002947c:	682b      	ldr	r3, [r5, #0]
9002947e:	b103      	cbz	r3, 90029482 <_isatty_r+0x1a>
90029480:	6023      	str	r3, [r4, #0]
90029482:	bd38      	pop	{r3, r4, r5, pc}
90029484:	24022454 	.word	0x24022454

90029488 <_init>:
90029488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002948a:	bf00      	nop
9002948c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002948e:	bc08      	pop	{r3}
90029490:	469e      	mov	lr, r3
90029492:	4770      	bx	lr

90029494 <_fini>:
90029494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029496:	bf00      	nop
90029498:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002949a:	bc08      	pop	{r3}
9002949c:	469e      	mov	lr, r3
9002949e:	4770      	bx	lr
